{
    "name": "Jupytangular",
    "description": "Automation Notebooks in Jupyter",
    "license": "UNLICENSED",
    "scripts": {
        "import": "node -e \"var result = require('./Core').import(process.argv[1])(...(eval(process.argv[2] || '[]'))); (result + '').includes('Promise') ? result.catch(e => e).then(r => console.log(r)) : console.log(result)\"",
        "exec": "node -e \"console.log(require('./Core').import('spawn child process')(require('./Core').interpret(process.argv[1]).code))\"",
        "interpret": "node -e \"console.info = () => {}; console.log(require('./Core').interpret(process.argv[1]).code)\"",
        "interpret:bash": "node -e \"console.info = () => {}; console.log(require('./Core').import('bash to one liner')(require('./Core').interpret(process.argv[1]).code))\"",
        "ssh": "ssh -i ~/.credentials/selenium.pem -t -L 5900:127.0.0.1:5900 ubuntu@ec2-54-201-232-148.us-west-2.compute.amazonaws.com",
        "ssh:creds": "npm run exec \"copy credentials\"",
        "ssh:install": "npm run ssh \"cd ~/jupytangular && npm run install:minimal && sudo npm run install:aws\"",
        "ssh:deploy": "npm run ssh \"cd ~/jupytangular && npm run git:rebase\"",
        "ssh:git": "npm run ssh -- \"cd ~/jupytangular && $(npm run -s interpret:bash \"git auto rebase\")\"",
        "git:auto": "npm run exec \"git auto commit\"",
        "git:rebase": "npm run exec \"git auto rebase\"",
        "start:express": "node -e \"require('./Core').import('express rpc wrapper')\"",
        "start:ng": "ng serve --host 0.0.0.0 --port 9090 --app 0",
        "start:note": "source activate py36 && jupyter notebook",
        "export": "npm run import \"export deploy notebook\"",
        "export:firebase": "npm run export -- \"[['firebase rpc wrapper', 'tell joke', 'latest s3 bucket', 'calendar search heatmap', 'spawn child process', 'github html commit acl']]\"",
        "export:notebook": "npm run export -- \"[['import notebooks modules', 'find project files']]\"",
        "export:zuora": "npm run export -- \"['zuora to eloqua.ipynb', path.resolve('../subscription.services.eloqua'), {'**/zuora-+(export|renewals|account)*': './core/', '**/!(sync)*eloqua!(-express)*': './core/', '**/aws*': './upload/', '**/notify*': './notify/', '**/+(readme|http-request)*': './'}]\"",
        "prebuild:firebase": "npm run export:firebase",
        "build:firebase": "webpack",
        "build": "npm run build:firebase",
        "selenium": "selenium-standalone start",
        "test": "npm run test:all && npm run schedule:update",
        "test:cells": "npm run import \"test cells\"",
        "test:all": "npm run test:cells -- \"['test test runner']\"",
        "test:zuora": "npm run test:cells -- \"['zuora to eloqua.ipynb']\"",
        "test:store": "live-server --port=8080 --host=0.0.0.0 --entry-file=./.output/app.html --mount=/:./.output --middleware=/Users/briancullinan/jupytangular2/live-server-middleware.js",
        "watch": "npm run import \"watch files run tests\"",
        "watch:all": "npm run watch -- \"['**/*ipynb', 'test test runner']\"",
        "watch:zuora": "npm run watch -- \"['**/zuora*ipynb', 'zuora to eloqua.ipynb']\"",
        "lint": "eslint . --fix",
        "deploy": "npm run deploy:firebase",
        "deploy:firebase": "npm run build:firebase && firebase deploy",
        "deploy:store": "npm run test:cells -- \"['test google sheet resources']\" && npm run exec \"upload output google cloud\" ./.output && npm run exec \"copy html to google\" ./.output",
        "schedule:update": "npm run import \"update git\"",
        "install:node": "npm run exec \"install node\"",
        "install:minimal": "npm install node jsonpath-plus glob fuse.js gulp",
        "install:launchd": "npm run launchd:jupyter",
        "install:systemd": "npm run exec \"install systemd\"",
        "launchd:jupyter": "npm run exec \"install launchd\"",
        "install:aws": "npm run exec \"install aws vnc selenium\" && npm run install:webdriver",
        "install:webdriver": "npm run exec \"node webdriver support\"",
        "output": "node -e \"require('fs').writeFileSync(process.argv[2], require('./Core').interpret(process.argv[1]).code)\"",
        "install:vnc": "npm run exec \"install vnc entry\""
    },
    "engines": {
        "node": ">= 8",
        "npm": ">= 4"
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/megamindbrian/jupytangular.git"
    },
    "dependencies": {
        "express": "^4.16.4",
        "fuse.js": "^3.4.4",
        "glob": "^7.1.3",
        "google-spreadsheet": "^2.0.7",
        "gulp": "^4.0.0",
        "jsdom": "^14.0.0",
        "jsonpath-plus": "^0.18.0",
        "mocha": "^6.1.4",
        "mustache": "^3.0.1",
        "node": "^11.13.0",
        "remarkable": "^1.7.1"
    },
    "devDependencies": {}
}
