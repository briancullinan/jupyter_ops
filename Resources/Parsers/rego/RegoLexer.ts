// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/rego/RegoLexer.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class RegoLexer extends Lexer {
	public static readonly Comment = 1;
	public static readonly String = 2;
	public static readonly Bool = 3;
	public static readonly Null = 4;
	public static readonly As = 5;
	public static readonly Default = 6;
	public static readonly Else = 7;
	public static readonly Import = 8;
	public static readonly Package = 9;
	public static readonly Not = 10;
	public static readonly With = 11;
	public static readonly Set = 12;
	public static readonly LSBrace = 13;
	public static readonly LCBrace = 14;
	public static readonly LParan = 15;
	public static readonly RSBrace = 16;
	public static readonly RCBrace = 17;
	public static readonly RParan = 18;
	public static readonly Mid = 19;
	public static readonly FactorOperator = 20;
	public static readonly ArithOperator = 21;
	public static readonly RelationOperator = 22;
	public static readonly EqOper = 23;
	public static readonly Comma = 24;
	public static readonly Semicolon = 25;
	public static readonly Colon = 26;
	public static readonly Ampersand = 27;
	public static readonly Dot = 28;
	public static readonly WhiteSpace = 29;
	public static readonly LineEnd = 30;
	public static readonly WindowsLineEnd = 31;
	public static readonly UnsignedNumber = 32;
	public static readonly Name = 33;
	public static readonly COMMENTS_AND_FORMATTING = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "COMMENTS_AND_FORMATTING",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"Comment", "DoubleQuote", "BackTick", "QuotedString", "RawString", "String", 
		"UnicodeEscape", "Bool", "Null", "As", "Default", "Else", "Import", "Package", 
		"Not", "With", "Set", "LSBrace", "LCBrace", "LParan", "RSBrace", "RCBrace", 
		"RParan", "Mid", "FactorOperator", "Plus", "Minus", "ArithOperator", "RelationOperator", 
		"EqOper", "Comma", "Semicolon", "Colon", "Ampersand", "Dot", "WhiteSpace", 
		"LineEnd", "WindowsLineEnd", "E", "Real", "UnsignedNumber", "AsciiLetter", 
		"DecimalDigit", "Char", "EscapeSequence", "SingleCharEscape", "Name",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, "'null'", "'as'", "'default'", 
		"'else'", "'import'", "'package'", "'not'", "'with'", "'set('", "'['", 
		"'{'", "'('", "']'", "'}'", "')'", "'|'", undefined, undefined, undefined, 
		undefined, "','", "';'", "':'", "'&'", "'.'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "Comment", "String", "Bool", "Null", "As", "Default", "Else", 
		"Import", "Package", "Not", "With", "Set", "LSBrace", "LCBrace", "LParan", 
		"RSBrace", "RCBrace", "RParan", "Mid", "FactorOperator", "ArithOperator", 
		"RelationOperator", "EqOper", "Comma", "Semicolon", "Colon", "Ampersand", 
		"Dot", "WhiteSpace", "LineEnd", "WindowsLineEnd", "UnsignedNumber", "Name",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(RegoLexer._LITERAL_NAMES, RegoLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return RegoLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(RegoLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "RegoLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return RegoLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return RegoLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return RegoLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return RegoLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 0:
			this.Comment_action(_localctx, actionIndex);
			break;

		case 35:
			this.WhiteSpace_action(_localctx, actionIndex);
			break;

		case 36:
			this.LineEnd_action(_localctx, actionIndex);
			break;
		}
	}
	private Comment_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			this._channel = COMMENTS_AND_FORMATTING;
			break;
		}
	}
	private WhiteSpace_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			this._channel = COMMENTS_AND_FORMATTING;
			break;
		}
	}
	private LineEnd_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 2:
			this._channel = COMMENTS_AND_FORMATTING;
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02#\u0142\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x03\x02\x03\x02\x03\x02\x07" +
		"\x02e\n\x02\f\x02\x0E\x02h\v\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04" +
		"\x03\x04\x03\x05\x03\x05\x07\x05r\n\x05\f\x05\x0E\x05u\v\x05\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x07\x06{\n\x06\f\x06\x0E\x06~\v\x06\x03\x06\x03\x06" +
		"\x03\x07\x03\x07\x05\x07\x84\n\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b" +
		"\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x05\t\x95\n\t\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03" +
		"\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03" +
		"\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03" +
		"\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03" +
		"\x1C\x03\x1C\x03\x1D\x03\x1D\x05\x1D\xDF\n\x1D\x03\x1E\x03\x1E\x03\x1E" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x05\x1E\xEA\n\x1E\x03" +
		"\x1F\x03\x1F\x03\x1F\x05\x1F\xEF\n\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"" +
		"\x03#\x03#\x03$\x03$\x03%\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03\'\x03" +
		"\'\x03\'\x03\'\x03(\x03(\x03)\x07)\u010A\n)\f)\x0E)\u010D\v)\x03)\x03" +
		")\x06)\u0111\n)\r)\x0E)\u0112\x03)\x06)\u0116\n)\r)\x0E)\u0117\x03)\x05" +
		")\u011B\n)\x05)\u011D\n)\x03*\x03*\x03*\x03*\x05*\u0123\n*\x03*\x03*\x05" +
		"*\u0127\n*\x03+\x03+\x03,\x03,\x03-\x03-\x03-\x05-\u0130\n-\x03.\x03." +
		"\x05.\u0134\n.\x03/\x03/\x03/\x05/\u0139\n/\x030\x030\x030\x070\u013E" +
		"\n0\f0\x0E0\u0141\v0\x02\x02\x021\x03\x02\x03\x05\x02\x02\x07\x02\x02" +
		"\t\x02\x02\v\x02\x02\r\x02\x04\x0F\x02\x02\x11\x02\x05\x13\x02\x06\x15" +
		"\x02\x07\x17\x02\b\x19\x02\t\x1B\x02\n\x1D\x02\v\x1F\x02\f!\x02\r#\x02" +
		"\x0E%\x02\x0F\'\x02\x10)\x02\x11+\x02\x12-\x02\x13/\x02\x141\x02\x153" +
		"\x02\x165\x02\x027\x02\x029\x02\x17;\x02\x18=\x02\x19?\x02\x1AA\x02\x1B" +
		"C\x02\x1CE\x02\x1DG\x02\x1EI\x02\x1FK\x02 M\x02!O\x02\x02Q\x02\x02S\x02" +
		"\"U\x02\x02W\x02\x02Y\x02\x02[\x02\x02]\x02\x02_\x02#\x03\x02\x10\x04" +
		"\x02^^``\x05\x02\f\f\x0F\x0F``\x03\x02bb\x05\x022;CHch\x05\x02\'\',,1" +
		"1\x04\x02>>@@\x04\x02\v\v\"\"\x03\x02\f\f\x03\x02\x0F\x0F\x04\x02GGgg" +
		"\x05\x02C\\aac|\x03\x022;\x05\x02\x02!$$^^\t\x0211^^ddhhppttvv\x02\u014C" +
		"\x02\x03\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02" +
		"=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02" +
		"\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02" +
		"\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02_\x03" +
		"\x02\x02\x02\x03a\x03\x02\x02\x02\x05k\x03\x02\x02\x02\x07m\x03\x02\x02" +
		"\x02\to\x03\x02\x02\x02\vx\x03\x02\x02\x02\r\x83\x03\x02\x02\x02\x0F\x85" +
		"\x03\x02\x02\x02\x11\x94\x03\x02\x02\x02\x13\x96\x03\x02\x02\x02\x15\x9B" +
		"\x03\x02\x02\x02\x17\x9E\x03\x02\x02\x02\x19\xA6\x03\x02\x02\x02\x1B\xAB" +
		"\x03\x02\x02\x02\x1D\xB2\x03\x02\x02\x02\x1F\xBA\x03\x02\x02\x02!\xBE" +
		"\x03\x02\x02\x02#\xC3\x03\x02\x02\x02%\xC8\x03\x02\x02\x02\'\xCA\x03\x02" +
		"\x02\x02)\xCC\x03\x02\x02\x02+\xCE\x03\x02\x02\x02-\xD0\x03\x02\x02\x02" +
		"/\xD2\x03\x02\x02\x021\xD4\x03\x02\x02\x023\xD6\x03\x02\x02\x025\xD8\x03" +
		"\x02\x02\x027\xDA\x03\x02\x02\x029\xDE\x03\x02\x02\x02;\xE9\x03\x02\x02" +
		"\x02=\xEE\x03\x02\x02\x02?\xF0\x03\x02\x02\x02A\xF2\x03\x02\x02\x02C\xF4" +
		"\x03\x02\x02\x02E\xF6\x03\x02\x02\x02G\xF8\x03\x02\x02\x02I\xFA\x03\x02" +
		"\x02\x02K\xFE\x03\x02\x02\x02M\u0102\x03\x02\x02\x02O\u0106\x03\x02\x02" +
		"\x02Q\u011C\x03\x02\x02\x02S\u011E\x03\x02\x02\x02U\u0128\x03\x02\x02" +
		"\x02W\u012A\x03\x02\x02\x02Y\u012F\x03\x02\x02\x02[\u0133\x03\x02\x02" +
		"\x02]\u0138\x03\x02\x02\x02_\u013A\x03\x02\x02\x02ab\t\x02\x02\x02bf\x07" +
		"%\x02\x02ce\t\x03\x02\x02dc\x03\x02\x02\x02eh\x03\x02\x02\x02fd\x03\x02" +
		"\x02\x02fg\x03\x02\x02\x02gi\x03\x02\x02\x02hf\x03\x02\x02\x02ij\b\x02" +
		"\x02\x02j\x04\x03\x02\x02\x02kl\x07$\x02\x02l\x06\x03\x02\x02\x02mn\x07" +
		"b\x02\x02n\b\x03\x02\x02\x02os\x05\x05\x03\x02pr\x05Y-\x02qp\x03\x02\x02" +
		"\x02ru\x03\x02\x02\x02sq\x03\x02\x02\x02st\x03\x02\x02\x02tv\x03\x02\x02" +
		"\x02us\x03\x02\x02\x02vw\x05\x05\x03\x02w\n\x03\x02\x02\x02x|\x05\x07" +
		"\x04\x02y{\n\x04\x02\x02zy\x03\x02\x02\x02{~\x03\x02\x02\x02|z\x03\x02" +
		"\x02\x02|}\x03\x02\x02\x02}\x7F\x03\x02\x02\x02~|\x03\x02\x02\x02\x7F" +
		"\x80\x05\x07\x04\x02\x80\f\x03\x02\x02\x02\x81\x84\x05\t\x05\x02\x82\x84" +
		"\x05\v\x06\x02\x83\x81\x03\x02\x02\x02\x83\x82\x03\x02\x02\x02\x84\x0E" +
		"\x03\x02\x02\x02\x85\x86\x07w\x02\x02\x86\x87\t\x05\x02\x02\x87\x88\t" +
		"\x05\x02\x02\x88\x89\t\x05\x02\x02\x89\x8A\t\x05\x02\x02\x8A\x10\x03\x02" +
		"\x02\x02\x8B\x8C\x07v\x02\x02\x8C\x8D\x07t\x02\x02\x8D\x8E\x07w\x02\x02" +
		"\x8E\x95\x07g\x02\x02\x8F\x90\x07h\x02\x02\x90\x91\x07c\x02\x02\x91\x92" +
		"\x07n\x02\x02\x92\x93\x07u\x02\x02\x93\x95\x07g\x02\x02\x94\x8B\x03\x02" +
		"\x02\x02\x94\x8F\x03\x02\x02\x02\x95\x12\x03\x02\x02\x02\x96\x97\x07p" +
		"\x02\x02\x97\x98\x07w\x02\x02\x98\x99\x07n\x02\x02\x99\x9A\x07n\x02\x02" +
		"\x9A\x14\x03\x02\x02\x02\x9B\x9C\x07c\x02\x02\x9C\x9D\x07u\x02\x02\x9D" +
		"\x16\x03\x02\x02\x02\x9E\x9F\x07f\x02\x02\x9F\xA0\x07g\x02\x02\xA0\xA1" +
		"\x07h\x02\x02\xA1\xA2\x07c\x02\x02\xA2\xA3\x07w\x02\x02\xA3\xA4\x07n\x02" +
		"\x02\xA4\xA5\x07v\x02\x02\xA5\x18\x03\x02\x02\x02\xA6\xA7\x07g\x02\x02" +
		"\xA7\xA8\x07n\x02\x02\xA8\xA9\x07u\x02\x02\xA9\xAA\x07g\x02\x02\xAA\x1A" +
		"\x03\x02\x02\x02\xAB\xAC\x07k\x02\x02\xAC\xAD\x07o\x02\x02\xAD\xAE\x07" +
		"r\x02\x02\xAE\xAF\x07q\x02\x02\xAF\xB0\x07t\x02\x02\xB0\xB1\x07v\x02\x02" +
		"\xB1\x1C\x03\x02\x02\x02\xB2\xB3\x07r\x02\x02\xB3\xB4\x07c\x02\x02\xB4" +
		"\xB5\x07e\x02\x02\xB5\xB6\x07m\x02\x02\xB6\xB7\x07c\x02\x02\xB7\xB8\x07" +
		"i\x02\x02\xB8\xB9\x07g\x02\x02\xB9\x1E\x03\x02\x02\x02\xBA\xBB\x07p\x02" +
		"\x02\xBB\xBC\x07q\x02\x02\xBC\xBD\x07v\x02\x02\xBD \x03\x02\x02\x02\xBE" +
		"\xBF\x07y\x02\x02\xBF\xC0\x07k\x02\x02\xC0\xC1\x07v\x02\x02\xC1\xC2\x07" +
		"j\x02\x02\xC2\"\x03\x02\x02\x02\xC3\xC4\x07u\x02\x02\xC4\xC5\x07g\x02" +
		"\x02\xC5\xC6\x07v\x02\x02\xC6\xC7\x07*\x02\x02\xC7$\x03\x02\x02\x02\xC8" +
		"\xC9\x07]\x02\x02\xC9&\x03\x02\x02\x02\xCA\xCB\x07}\x02\x02\xCB(\x03\x02" +
		"\x02\x02\xCC\xCD\x07*\x02\x02\xCD*\x03\x02\x02\x02\xCE\xCF\x07_\x02\x02" +
		"\xCF,\x03\x02\x02\x02\xD0\xD1\x07\x7F\x02\x02\xD1.\x03\x02\x02\x02\xD2" +
		"\xD3\x07+\x02\x02\xD30\x03\x02\x02\x02\xD4\xD5\x07~\x02\x02\xD52\x03\x02" +
		"\x02\x02\xD6\xD7\t\x06\x02\x02\xD74\x03\x02\x02\x02\xD8\xD9\x07-\x02\x02" +
		"\xD96\x03\x02\x02\x02\xDA\xDB\x07/\x02\x02\xDB8\x03\x02\x02\x02\xDC\xDF" +
		"\x055\x1B\x02\xDD\xDF\x057\x1C\x02\xDE\xDC\x03\x02\x02\x02\xDE\xDD\x03" +
		"\x02\x02\x02\xDF:\x03\x02\x02\x02\xE0\xE1\x07?\x02\x02\xE1\xEA\x07?\x02" +
		"\x02\xE2\xE3\x07#\x02\x02\xE3\xEA\x07?\x02\x02\xE4\xE5\x07>\x02\x02\xE5" +
		"\xEA\x07?\x02\x02\xE6\xE7\x07@\x02\x02\xE7\xEA\x07?\x02\x02\xE8\xEA\t" +
		"\x07\x02\x02\xE9\xE0\x03\x02\x02\x02\xE9\xE2\x03\x02\x02\x02\xE9\xE4\x03" +
		"\x02\x02\x02\xE9\xE6\x03\x02\x02\x02\xE9\xE8\x03\x02\x02\x02\xEA<\x03" +
		"\x02\x02\x02\xEB\xEC\x07<\x02\x02\xEC\xEF\x07?\x02\x02\xED\xEF\x07?\x02" +
		"\x02\xEE\xEB\x03\x02\x02\x02\xEE\xED\x03\x02\x02\x02\xEF>\x03\x02\x02" +
		"\x02\xF0\xF1\x07.\x02\x02\xF1@\x03\x02\x02\x02\xF2\xF3\x07=\x02\x02\xF3" +
		"B\x03\x02\x02\x02\xF4\xF5\x07<\x02\x02\xF5D\x03\x02\x02\x02\xF6\xF7\x07" +
		"(\x02\x02\xF7F\x03\x02\x02\x02\xF8\xF9\x070\x02\x02\xF9H\x03\x02\x02\x02" +
		"\xFA\xFB\t\b\x02\x02\xFB\xFC\x03\x02\x02\x02\xFC\xFD\b%\x03\x02\xFDJ\x03" +
		"\x02\x02\x02\xFE\xFF\t\t\x02\x02\xFF\u0100\x03\x02\x02\x02\u0100\u0101" +
		"\b&\x04\x02\u0101L\x03\x02\x02\x02\u0102\u0103\t\n\x02\x02\u0103\u0104" +
		"\x03\x02\x02\x02\u0104\u0105\b\'\x05\x02\u0105N\x03\x02\x02\x02\u0106" +
		"\u0107\t\v\x02\x02\u0107P\x03\x02\x02\x02\u0108\u010A\x05W,\x02\u0109" +
		"\u0108\x03\x02\x02\x02\u010A\u010D\x03\x02\x02\x02\u010B\u0109\x03\x02" +
		"\x02\x02\u010B\u010C\x03\x02\x02\x02\u010C\u010E\x03\x02\x02\x02\u010D" +
		"\u010B\x03\x02\x02\x02\u010E\u0110\x070\x02\x02\u010F\u0111\x05W,\x02" +
		"\u0110\u010F\x03\x02\x02\x02\u0111\u0112\x03\x02\x02\x02\u0112\u0110\x03" +
		"\x02\x02\x02\u0112\u0113\x03\x02\x02\x02\u0113\u011D\x03\x02\x02\x02\u0114" +
		"\u0116\x05W,\x02\u0115\u0114\x03\x02\x02\x02\u0116\u0117\x03\x02\x02\x02" +
		"\u0117\u0115\x03\x02\x02\x02\u0117\u0118\x03\x02\x02\x02\u0118\u011A\x03" +
		"\x02\x02\x02\u0119\u011B\x070\x02\x02\u011A\u0119\x03\x02\x02\x02\u011A" +
		"\u011B\x03\x02\x02\x02\u011B\u011D\x03\x02\x02\x02\u011C\u010B\x03\x02" +
		"\x02\x02\u011C\u0115\x03\x02\x02\x02\u011DR\x03\x02\x02\x02\u011E\u0126" +
		"\x05Q)\x02\u011F\u0122\x05O(\x02\u0120\u0123\x055\x1B\x02\u0121\u0123" +
		"\x057\x1C\x02\u0122\u0120\x03\x02\x02\x02\u0122\u0121\x03\x02\x02\x02" +
		"\u0122\u0123\x03\x02\x02\x02\u0123\u0124\x03\x02\x02\x02\u0124\u0125\x05" +
		"Q)\x02\u0125\u0127\x03\x02\x02\x02\u0126\u011F\x03\x02\x02\x02\u0126\u0127" +
		"\x03\x02\x02\x02\u0127T\x03\x02\x02\x02\u0128\u0129\t\f\x02\x02\u0129" +
		"V\x03\x02\x02\x02\u012A\u012B\t\r\x02\x02\u012BX\x03\x02\x02\x02\u012C" +
		"\u0130\n\x0E\x02\x02\u012D\u012E\x07^\x02\x02\u012E\u0130\x05[.\x02\u012F" +
		"\u012C\x03\x02\x02\x02\u012F\u012D\x03\x02\x02\x02\u0130Z\x03\x02\x02" +
		"\x02\u0131\u0134\x05]/\x02\u0132\u0134\x05\x0F\b\x02\u0133\u0131\x03\x02" +
		"\x02\x02\u0133\u0132\x03\x02\x02\x02\u0134\\\x03\x02\x02\x02\u0135\u0139" +
		"\t\x0F\x02\x02\u0136\u0139\x05\x05\x03\x02\u0137\u0139\x05\x07\x04\x02" +
		"\u0138\u0135\x03\x02\x02\x02\u0138\u0136\x03\x02\x02\x02\u0138\u0137\x03" +
		"\x02\x02\x02\u0139^\x03\x02\x02\x02\u013A\u013F\x05U+\x02\u013B\u013E" +
		"\x05U+\x02\u013C\u013E\x05W,\x02\u013D\u013B\x03\x02\x02\x02\u013D\u013C" +
		"\x03\x02\x02\x02\u013E\u0141\x03\x02\x02\x02\u013F\u013D\x03\x02\x02\x02" +
		"\u013F\u0140\x03\x02\x02\x02\u0140`\x03\x02\x02\x02\u0141\u013F\x03\x02" +
		"\x02\x02\x17\x02fs|\x83\x94\xDE\xE9\xEE\u010B\u0112\u0117\u011A\u011C" +
		"\u0122\u0126\u012F\u0133\u0138\u013D\u013F\x06\x03\x02\x02\x03%\x03\x03" +
		"&\x04\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!RegoLexer.__ATN) {
			RegoLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(RegoLexer._serializedATN));
		}

		return RegoLexer.__ATN;
	}

}

