"use strict";
// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/guido/guido.g4 by ANTLR 4.7.3-SNAPSHOT
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
var Lexer_1 = require("antlr4ts/Lexer");
var LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
var VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
var Utils = require("antlr4ts/misc/Utils");
var guidoLexer = /** @class */ (function (_super) {
    __extends(guidoLexer, _super);
    // tslint:enable:no-trailing-whitespace
    function guidoLexer(input) {
        var _this = _super.call(this, input) || this;
        _this._interp = new LexerATNSimulator_1.LexerATNSimulator(guidoLexer._ATN, _this);
        return _this;
    }
    Object.defineProperty(guidoLexer.prototype, "vocabulary", {
        // @Override
        // @NotNull
        get: function () {
            return guidoLexer.VOCABULARY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(guidoLexer.prototype, "grammarFileName", {
        // @Override
        get: function () { return "guido.g4"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(guidoLexer.prototype, "ruleNames", {
        // @Override
        get: function () { return guidoLexer.ruleNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(guidoLexer.prototype, "serializedATN", {
        // @Override
        get: function () { return guidoLexer._serializedATN; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(guidoLexer.prototype, "channelNames", {
        // @Override
        get: function () { return guidoLexer.channelNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(guidoLexer.prototype, "modeNames", {
        // @Override
        get: function () { return guidoLexer.modeNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(guidoLexer, "_ATN", {
        get: function () {
            if (!guidoLexer.__ATN) {
                guidoLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(guidoLexer._serializedATN));
            }
            return guidoLexer.__ATN;
        },
        enumerable: true,
        configurable: true
    });
    guidoLexer.T__0 = 1;
    guidoLexer.T__1 = 2;
    guidoLexer.T__2 = 3;
    guidoLexer.T__3 = 4;
    guidoLexer.T__4 = 5;
    guidoLexer.T__5 = 6;
    guidoLexer.T__6 = 7;
    guidoLexer.T__7 = 8;
    guidoLexer.T__8 = 9;
    guidoLexer.T__9 = 10;
    guidoLexer.T__10 = 11;
    guidoLexer.T__11 = 12;
    guidoLexer.T__12 = 13;
    guidoLexer.T__13 = 14;
    guidoLexer.T__14 = 15;
    guidoLexer.T__15 = 16;
    guidoLexer.T__16 = 17;
    guidoLexer.T__17 = 18;
    guidoLexer.T__18 = 19;
    guidoLexer.T__19 = 20;
    guidoLexer.T__20 = 21;
    guidoLexer.T__21 = 22;
    guidoLexer.T__22 = 23;
    guidoLexer.T__23 = 24;
    guidoLexer.T__24 = 25;
    guidoLexer.T__25 = 26;
    guidoLexer.T__26 = 27;
    guidoLexer.TAGSTART = 28;
    guidoLexer.REST = 29;
    guidoLexer.NUMBER = 30;
    guidoLexer.STRING = 31;
    guidoLexer.STRINGLITERAL = 32;
    guidoLexer.COMMENT = 33;
    guidoLexer.WS = 34;
    // tslint:disable:no-trailing-whitespace
    guidoLexer.channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
    ];
    // tslint:disable:no-trailing-whitespace
    guidoLexer.modeNames = [
        "DEFAULT_MODE",
    ];
    guidoLexer.ruleNames = [
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
        "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
        "T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
        "T__25", "T__26", "TAGSTART", "REST", "NUMBER", "STRING", "STRINGLITERAL",
        "COMMENT", "WS",
    ];
    guidoLexer._LITERAL_NAMES = [
        undefined, "'{'", "'}'", "','", "'['", "']'", "'<'", "'>'", "'='", "'('",
        "')'", "'#'", "'&'", "'-'", "'+'", "'/'", "'*'", "'.'", "'title'", "'tempo'",
        "'clef'", "'meter'", "'slur'", "'key'", "'barFormat'", "'staff'", "'repeatEnd'",
        "'t'", "'\\'", "'_'",
    ];
    guidoLexer._SYMBOLIC_NAMES = [
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        "TAGSTART", "REST", "NUMBER", "STRING", "STRINGLITERAL", "COMMENT", "WS",
    ];
    guidoLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(guidoLexer._LITERAL_NAMES, guidoLexer._SYMBOLIC_NAMES, []);
    guidoLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02$\xC9\b\x01\x04" +
        "\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
        "\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
        "\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
        "\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
        "\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
        "\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
        "#\t#\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
        "\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v" +
        "\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10" +
        "\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13" +
        "\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15" +
        "\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16" +
        "\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18" +
        "\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19" +
        "\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B" +
        "\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B" +
        "\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x06\x1F\xAB\n" +
        "\x1F\r\x1F\x0E\x1F\xAC\x03 \x06 \xB0\n \r \x0E \xB1\x03!\x03!\x07!\xB6" +
        "\n!\f!\x0E!\xB9\v!\x03!\x03!\x03\"\x03\"\x07\"\xBF\n\"\f\"\x0E\"\xC2\v" +
        "\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x02\x02\x02$\x03\x02\x03\x05\x02\x04" +
        "\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v" +
        "\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!" +
        "\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x19" +
        "1\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02" +
        "\"C\x02#E\x02$\x03\x02\x07\x03\x022;\x04\x02C\\c|\x03\x02$$\x04\x02\f" +
        "\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x02\xCC\x02\x03\x03\x02\x02\x02\x02" +
        "\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02" +
        "\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11" +
        "\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17" +
        "\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D" +
        "\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03" +
        "\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02" +
        "\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x02" +
        "1\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02" +
        "\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02" +
        "\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03" +
        "\x02\x02\x02\x03G\x03\x02\x02\x02\x05I\x03\x02\x02\x02\x07K\x03\x02\x02" +
        "\x02\tM\x03\x02\x02\x02\vO\x03\x02\x02\x02\rQ\x03\x02\x02\x02\x0FS\x03" +
        "\x02\x02\x02\x11U\x03\x02\x02\x02\x13W\x03\x02\x02\x02\x15Y\x03\x02\x02" +
        "\x02\x17[\x03\x02\x02\x02\x19]\x03\x02\x02\x02\x1B_\x03\x02\x02\x02\x1D" +
        "a\x03\x02\x02\x02\x1Fc\x03\x02\x02\x02!e\x03\x02\x02\x02#g\x03\x02\x02" +
        "\x02%i\x03\x02\x02\x02\'o\x03\x02\x02\x02)u\x03\x02\x02\x02+z\x03\x02" +
        "\x02\x02-\x80\x03\x02\x02\x02/\x85\x03\x02\x02\x021\x89\x03\x02\x02\x02" +
        "3\x93\x03\x02\x02\x025\x99\x03\x02\x02\x027\xA3\x03\x02\x02\x029\xA5\x03" +
        "\x02\x02\x02;\xA7\x03\x02\x02\x02=\xAA\x03\x02\x02\x02?\xAF\x03\x02\x02" +
        "\x02A\xB3\x03\x02\x02\x02C\xBC\x03\x02\x02\x02E\xC5\x03\x02\x02\x02GH" +
        "\x07}\x02\x02H\x04\x03\x02\x02\x02IJ\x07\x7F\x02\x02J\x06\x03\x02\x02" +
        "\x02KL\x07.\x02\x02L\b\x03\x02\x02\x02MN\x07]\x02\x02N\n\x03\x02\x02\x02" +
        "OP\x07_\x02\x02P\f\x03\x02\x02\x02QR\x07>\x02\x02R\x0E\x03\x02\x02\x02" +
        "ST\x07@\x02\x02T\x10\x03\x02\x02\x02UV\x07?\x02\x02V\x12\x03\x02\x02\x02" +
        "WX\x07*\x02\x02X\x14\x03\x02\x02\x02YZ\x07+\x02\x02Z\x16\x03\x02\x02\x02" +
        "[\\\x07%\x02\x02\\\x18\x03\x02\x02\x02]^\x07(\x02\x02^\x1A\x03\x02\x02" +
        "\x02_`\x07/\x02\x02`\x1C\x03\x02\x02\x02ab\x07-\x02\x02b\x1E\x03\x02\x02" +
        "\x02cd\x071\x02\x02d \x03\x02\x02\x02ef\x07,\x02\x02f\"\x03\x02\x02\x02" +
        "gh\x070\x02\x02h$\x03\x02\x02\x02ij\x07v\x02\x02jk\x07k\x02\x02kl\x07" +
        "v\x02\x02lm\x07n\x02\x02mn\x07g\x02\x02n&\x03\x02\x02\x02op\x07v\x02\x02" +
        "pq\x07g\x02\x02qr\x07o\x02\x02rs\x07r\x02\x02st\x07q\x02\x02t(\x03\x02" +
        "\x02\x02uv\x07e\x02\x02vw\x07n\x02\x02wx\x07g\x02\x02xy\x07h\x02\x02y" +
        "*\x03\x02\x02\x02z{\x07o\x02\x02{|\x07g\x02\x02|}\x07v\x02\x02}~\x07g" +
        "\x02\x02~\x7F\x07t\x02\x02\x7F,\x03\x02\x02\x02\x80\x81\x07u\x02\x02\x81" +
        "\x82\x07n\x02\x02\x82\x83\x07w\x02\x02\x83\x84\x07t\x02\x02\x84.\x03\x02" +
        "\x02\x02\x85\x86\x07m\x02\x02\x86\x87\x07g\x02\x02\x87\x88\x07{\x02\x02" +
        "\x880\x03\x02\x02\x02\x89\x8A\x07d\x02\x02\x8A\x8B\x07c\x02\x02\x8B\x8C" +
        "\x07t\x02\x02\x8C\x8D\x07H\x02\x02\x8D\x8E\x07q\x02\x02\x8E\x8F\x07t\x02" +
        "\x02\x8F\x90\x07o\x02\x02\x90\x91\x07c\x02\x02\x91\x92\x07v\x02\x02\x92" +
        "2\x03\x02\x02\x02\x93\x94\x07u\x02\x02\x94\x95\x07v\x02\x02\x95\x96\x07" +
        "c\x02\x02\x96\x97\x07h\x02\x02\x97\x98\x07h\x02\x02\x984\x03\x02\x02\x02" +
        "\x99\x9A\x07t\x02\x02\x9A\x9B\x07g\x02\x02\x9B\x9C\x07r\x02\x02\x9C\x9D" +
        "\x07g\x02\x02\x9D\x9E\x07c\x02\x02\x9E\x9F\x07v\x02\x02\x9F\xA0\x07G\x02" +
        "\x02\xA0\xA1\x07p\x02\x02\xA1\xA2\x07f\x02\x02\xA26\x03\x02\x02\x02\xA3" +
        "\xA4\x07v\x02\x02\xA48\x03\x02\x02\x02\xA5\xA6\x07^\x02\x02\xA6:\x03\x02" +
        "\x02\x02\xA7\xA8\x07a\x02\x02\xA8<\x03\x02\x02\x02\xA9\xAB\t\x02\x02\x02" +
        "\xAA\xA9\x03\x02\x02\x02\xAB\xAC\x03\x02\x02\x02\xAC\xAA\x03\x02\x02\x02" +
        "\xAC\xAD\x03\x02\x02\x02\xAD>\x03\x02\x02\x02\xAE\xB0\t\x03\x02\x02\xAF" +
        "\xAE\x03\x02\x02\x02\xB0\xB1\x03\x02\x02\x02\xB1\xAF\x03\x02\x02\x02\xB1" +
        "\xB2\x03\x02\x02\x02\xB2@\x03\x02\x02\x02\xB3\xB7\x07$\x02\x02\xB4\xB6" +
        "\n\x04\x02\x02\xB5\xB4\x03\x02\x02\x02\xB6\xB9\x03\x02\x02\x02\xB7\xB5" +
        "\x03\x02\x02\x02\xB7\xB8\x03\x02\x02\x02\xB8\xBA\x03\x02\x02\x02\xB9\xB7" +
        "\x03\x02\x02\x02\xBA\xBB\x07$\x02\x02\xBBB\x03\x02\x02\x02\xBC\xC0\x07" +
        "\'\x02\x02\xBD\xBF\n\x05\x02\x02\xBE\xBD\x03\x02\x02\x02\xBF\xC2\x03\x02" +
        "\x02\x02\xC0\xBE\x03\x02\x02\x02\xC0\xC1\x03\x02\x02\x02\xC1\xC3\x03\x02" +
        "\x02\x02\xC2\xC0\x03\x02\x02\x02\xC3\xC4\b\"\x02\x02\xC4D\x03\x02\x02" +
        "\x02\xC5\xC6\t\x06\x02\x02\xC6\xC7\x03\x02\x02\x02\xC7\xC8\b#\x02\x02" +
        "\xC8F\x03\x02\x02\x02\x07\x02\xAC\xB1\xB7\xC0\x03\b\x02\x02";
    return guidoLexer;
}(Lexer_1.Lexer));
exports.guidoLexer = guidoLexer;
