"use strict";
// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/capnproto/CapnProto.g4 by ANTLR 4.7.3-SNAPSHOT
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
var Lexer_1 = require("antlr4ts/Lexer");
var LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
var VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
var Utils = require("antlr4ts/misc/Utils");
var CapnProtoLexer = /** @class */ (function (_super) {
    __extends(CapnProtoLexer, _super);
    // tslint:enable:no-trailing-whitespace
    function CapnProtoLexer(input) {
        var _this = _super.call(this, input) || this;
        _this._interp = new LexerATNSimulator_1.LexerATNSimulator(CapnProtoLexer._ATN, _this);
        return _this;
    }
    Object.defineProperty(CapnProtoLexer.prototype, "vocabulary", {
        // @Override
        // @NotNull
        get: function () {
            return CapnProtoLexer.VOCABULARY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CapnProtoLexer.prototype, "grammarFileName", {
        // @Override
        get: function () { return "CapnProto.g4"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CapnProtoLexer.prototype, "ruleNames", {
        // @Override
        get: function () { return CapnProtoLexer.ruleNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CapnProtoLexer.prototype, "serializedATN", {
        // @Override
        get: function () { return CapnProtoLexer._serializedATN; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CapnProtoLexer.prototype, "channelNames", {
        // @Override
        get: function () { return CapnProtoLexer.channelNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CapnProtoLexer.prototype, "modeNames", {
        // @Override
        get: function () { return CapnProtoLexer.modeNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CapnProtoLexer, "_ATN", {
        get: function () {
            if (!CapnProtoLexer.__ATN) {
                CapnProtoLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(CapnProtoLexer._serializedATN));
            }
            return CapnProtoLexer.__ATN;
        },
        enumerable: true,
        configurable: true
    });
    CapnProtoLexer.T__0 = 1;
    CapnProtoLexer.T__1 = 2;
    CapnProtoLexer.T__2 = 3;
    CapnProtoLexer.T__3 = 4;
    CapnProtoLexer.T__4 = 5;
    CapnProtoLexer.T__5 = 6;
    CapnProtoLexer.T__6 = 7;
    CapnProtoLexer.T__7 = 8;
    CapnProtoLexer.T__8 = 9;
    CapnProtoLexer.T__9 = 10;
    CapnProtoLexer.T__10 = 11;
    CapnProtoLexer.T__11 = 12;
    CapnProtoLexer.T__12 = 13;
    CapnProtoLexer.T__13 = 14;
    CapnProtoLexer.T__14 = 15;
    CapnProtoLexer.T__15 = 16;
    CapnProtoLexer.T__16 = 17;
    CapnProtoLexer.T__17 = 18;
    CapnProtoLexer.T__18 = 19;
    CapnProtoLexer.T__19 = 20;
    CapnProtoLexer.T__20 = 21;
    CapnProtoLexer.T__21 = 22;
    CapnProtoLexer.T__22 = 23;
    CapnProtoLexer.T__23 = 24;
    CapnProtoLexer.T__24 = 25;
    CapnProtoLexer.T__25 = 26;
    CapnProtoLexer.T__26 = 27;
    CapnProtoLexer.T__27 = 28;
    CapnProtoLexer.LOCATOR = 29;
    CapnProtoLexer.TEXT = 30;
    CapnProtoLexer.INTEGER = 31;
    CapnProtoLexer.FLOAT = 32;
    CapnProtoLexer.HEXADECIMAL = 33;
    CapnProtoLexer.FILE_ID = 34;
    CapnProtoLexer.BOOLEAN = 35;
    CapnProtoLexer.VOID = 36;
    CapnProtoLexer.NAME = 37;
    CapnProtoLexer.COMMENT = 38;
    CapnProtoLexer.WHITESPACE = 39;
    // tslint:disable:no-trailing-whitespace
    CapnProtoLexer.channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
    ];
    // tslint:disable:no-trailing-whitespace
    CapnProtoLexer.modeNames = [
        "DEFAULT_MODE",
    ];
    CapnProtoLexer.ruleNames = [
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
        "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
        "T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
        "T__25", "T__26", "T__27", "DIGIT", "HEX_DIGIT", "LOCATOR", "TEXT", "INTEGER",
        "FLOAT", "HEXADECIMAL", "FILE_ID", "BOOLEAN", "VOID", "NAME", "COMMENT",
        "WHITESPACE",
    ];
    CapnProtoLexer._LITERAL_NAMES = [
        undefined, "';'", "'using'", "'='", "'import'", "'.'", "'$'", "'.namespace'",
        "'('", "')'", "'struct'", "'{'", "'}'", "'interface'", "'extends'", "':'",
        "','", "'enum'", "'.ann'", "':union'", "'union'", "':group'", "'->'",
        "'['", "']'", "'annotation'", "'const'", "'-'", "'0x'", undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, "'void'",
    ];
    CapnProtoLexer._SYMBOLIC_NAMES = [
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, "LOCATOR", "TEXT", "INTEGER", "FLOAT", "HEXADECIMAL", "FILE_ID",
        "BOOLEAN", "VOID", "NAME", "COMMENT", "WHITESPACE",
    ];
    CapnProtoLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(CapnProtoLexer._LITERAL_NAMES, CapnProtoLexer._SYMBOLIC_NAMES, []);
    CapnProtoLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02)\u0142\b\x01" +
        "\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
        "\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
        "\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
        "\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
        "\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
        "\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
        "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x03" +
        "\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03" +
        "\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03" +
        "\x06\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03" +
        "\b\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03" +
        "\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
        "\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F" +
        "\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12" +
        "\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
        "\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15" +
        "\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16" +
        "\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19" +
        "\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
        "\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C" +
        "\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x05\x1F" +
        "\xDA\n\x1F\x03 \x03 \x06 \xDE\n \r \x0E \xDF\x03 \x05 \xE3\n \x03!\x03" +
        "!\x07!\xE7\n!\f!\x0E!\xEA\v!\x03!\x03!\x03\"\x05\"\xEF\n\"\x03\"\x06\"" +
        "\xF2\n\"\r\"\x0E\"\xF3\x03#\x05#\xF7\n#\x03#\x06#\xFA\n#\r#\x0E#\xFB\x03" +
        "#\x03#\x06#\u0100\n#\r#\x0E#\u0101\x05#\u0104\n#\x03#\x03#\x05#\u0108" +
        "\n#\x03#\x06#\u010B\n#\r#\x0E#\u010C\x05#\u010F\n#\x03$\x05$\u0112\n$" +
        "\x03$\x03$\x03$\x03$\x06$\u0118\n$\r$\x0E$\u0119\x03%\x03%\x03%\x03&\x03" +
        "&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x05&\u0128\n&\x03\'\x03\'\x03\'\x03" +
        "\'\x03\'\x03(\x03(\x07(\u0131\n(\f(\x0E(\u0134\v(\x03)\x03)\x07)\u0138" +
        "\n)\f)\x0E)\u013B\v)\x03)\x03)\x03*\x03*\x03*\x03*\x03\xE8\x02\x02+\x03" +
        "\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t" +
        "\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02" +
        "\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17" +
        "-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x02" +
        "=\x02\x02?\x02\x1FA\x02 C\x02!E\x02\"G\x02#I\x02$K\x02%M\x02&O\x02\'Q" +
        "\x02(S\x02)\x03\x02\t\x03\x022;\x04\x02CHch\x03\x02$$\x04\x02C\\c|\x05" +
        "\x022;C\\c|\x03\x02\f\f\x05\x02\v\f\x0F\x0F\"\"\x02\u0151\x02\x03\x03" +
        "\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03" +
        "\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02" +
        "\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02" +
        "\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02" +
        "\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02" +
        "\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02" +
        "\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03" +
        "\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02" +
        "\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02" +
        "A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02" +
        "\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02" +
        "\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x03U\x03" +
        "\x02\x02\x02\x05W\x03\x02\x02\x02\x07]\x03\x02\x02\x02\t_\x03\x02\x02" +
        "\x02\vf\x03\x02\x02\x02\rh\x03\x02\x02\x02\x0Fj\x03\x02\x02\x02\x11u\x03" +
        "\x02\x02\x02\x13w\x03\x02\x02\x02\x15y\x03\x02\x02\x02\x17\x80\x03\x02" +
        "\x02\x02\x19\x82\x03\x02\x02\x02\x1B\x84\x03\x02\x02\x02\x1D\x8E\x03\x02" +
        "\x02\x02\x1F\x96\x03\x02\x02\x02!\x98\x03\x02\x02\x02#\x9A\x03\x02\x02" +
        "\x02%\x9F\x03\x02\x02\x02\'\xA4\x03\x02\x02\x02)\xAB\x03\x02\x02\x02+" +
        "\xB1\x03\x02\x02\x02-\xB8\x03\x02\x02\x02/\xBB\x03\x02\x02\x021\xBD\x03" +
        "\x02\x02\x023\xBF\x03\x02\x02\x025\xCA\x03\x02\x02\x027\xD0\x03\x02\x02" +
        "\x029\xD2\x03\x02\x02\x02;\xD5\x03\x02\x02\x02=\xD9\x03\x02\x02\x02?\xDB" +
        "\x03\x02\x02\x02A\xE4\x03\x02\x02\x02C\xEE\x03\x02\x02\x02E\xF6\x03\x02" +
        "\x02\x02G\u0111\x03\x02\x02\x02I\u011B\x03\x02\x02\x02K\u0127\x03\x02" +
        "\x02\x02M\u0129\x03\x02\x02\x02O\u012E\x03\x02\x02\x02Q\u0135\x03\x02" +
        "\x02\x02S\u013E\x03\x02\x02\x02UV\x07=\x02\x02V\x04\x03\x02\x02\x02WX" +
        "\x07w\x02\x02XY\x07u\x02\x02YZ\x07k\x02\x02Z[\x07p\x02\x02[\\\x07i\x02" +
        "\x02\\\x06\x03\x02\x02\x02]^\x07?\x02\x02^\b\x03\x02\x02\x02_`\x07k\x02" +
        "\x02`a\x07o\x02\x02ab\x07r\x02\x02bc\x07q\x02\x02cd\x07t\x02\x02de\x07" +
        "v\x02\x02e\n\x03\x02\x02\x02fg\x070\x02\x02g\f\x03\x02\x02\x02hi\x07&" +
        "\x02\x02i\x0E\x03\x02\x02\x02jk\x070\x02\x02kl\x07p\x02\x02lm\x07c\x02" +
        "\x02mn\x07o\x02\x02no\x07g\x02\x02op\x07u\x02\x02pq\x07r\x02\x02qr\x07" +
        "c\x02\x02rs\x07e\x02\x02st\x07g\x02\x02t\x10\x03\x02\x02\x02uv\x07*\x02" +
        "\x02v\x12\x03\x02\x02\x02wx\x07+\x02\x02x\x14\x03\x02\x02\x02yz\x07u\x02" +
        "\x02z{\x07v\x02\x02{|\x07t\x02\x02|}\x07w\x02\x02}~\x07e\x02\x02~\x7F" +
        "\x07v\x02\x02\x7F\x16\x03\x02\x02\x02\x80\x81\x07}\x02\x02\x81\x18\x03" +
        "\x02\x02\x02\x82\x83\x07\x7F\x02\x02\x83\x1A\x03\x02\x02\x02\x84\x85\x07" +
        "k\x02\x02\x85\x86\x07p\x02\x02\x86\x87\x07v\x02\x02\x87\x88\x07g\x02\x02" +
        "\x88\x89\x07t\x02\x02\x89\x8A\x07h\x02\x02\x8A\x8B\x07c\x02\x02\x8B\x8C" +
        "\x07e\x02\x02\x8C\x8D\x07g\x02\x02\x8D\x1C\x03\x02\x02\x02\x8E\x8F\x07" +
        "g\x02\x02\x8F\x90\x07z\x02\x02\x90\x91\x07v\x02\x02\x91\x92\x07g\x02\x02" +
        "\x92\x93\x07p\x02\x02\x93\x94\x07f\x02\x02\x94\x95\x07u\x02\x02\x95\x1E" +
        "\x03\x02\x02\x02\x96\x97\x07<\x02\x02\x97 \x03\x02\x02\x02\x98\x99\x07" +
        ".\x02\x02\x99\"\x03\x02\x02\x02\x9A\x9B\x07g\x02\x02\x9B\x9C\x07p\x02" +
        "\x02\x9C\x9D\x07w\x02\x02\x9D\x9E\x07o\x02\x02\x9E$\x03\x02\x02\x02\x9F" +
        "\xA0\x070\x02\x02\xA0\xA1\x07c\x02\x02\xA1\xA2\x07p\x02\x02\xA2\xA3\x07" +
        "p\x02\x02\xA3&\x03\x02\x02\x02\xA4\xA5\x07<\x02\x02\xA5\xA6\x07w\x02\x02" +
        "\xA6\xA7\x07p\x02\x02\xA7\xA8\x07k\x02\x02\xA8\xA9\x07q\x02\x02\xA9\xAA" +
        "\x07p\x02\x02\xAA(\x03\x02\x02\x02\xAB\xAC\x07w\x02\x02\xAC\xAD\x07p\x02" +
        "\x02\xAD\xAE\x07k\x02\x02\xAE\xAF\x07q\x02\x02\xAF\xB0\x07p\x02\x02\xB0" +
        "*\x03\x02\x02\x02\xB1\xB2\x07<\x02\x02\xB2\xB3\x07i\x02\x02\xB3\xB4\x07" +
        "t\x02\x02\xB4\xB5\x07q\x02\x02\xB5\xB6\x07w\x02\x02\xB6\xB7\x07r\x02\x02" +
        "\xB7,\x03\x02\x02\x02\xB8\xB9\x07/\x02\x02\xB9\xBA\x07@\x02\x02\xBA.\x03" +
        "\x02\x02\x02\xBB\xBC\x07]\x02\x02\xBC0\x03\x02\x02\x02\xBD\xBE\x07_\x02" +
        "\x02\xBE2\x03\x02\x02\x02\xBF\xC0\x07c\x02\x02\xC0\xC1\x07p\x02\x02\xC1" +
        "\xC2\x07p\x02\x02\xC2\xC3\x07q\x02\x02\xC3\xC4\x07v\x02\x02\xC4\xC5\x07" +
        "c\x02\x02\xC5\xC6\x07v\x02\x02\xC6\xC7\x07k\x02\x02\xC7\xC8\x07q\x02\x02" +
        "\xC8\xC9\x07p\x02\x02\xC94\x03\x02\x02\x02\xCA\xCB\x07e\x02\x02\xCB\xCC" +
        "\x07q\x02\x02\xCC\xCD\x07p\x02\x02\xCD\xCE\x07u\x02\x02\xCE\xCF\x07v\x02" +
        "\x02\xCF6\x03\x02\x02\x02\xD0\xD1\x07/\x02\x02\xD18\x03\x02\x02\x02\xD2" +
        "\xD3\x072\x02\x02\xD3\xD4\x07z\x02\x02\xD4:\x03\x02\x02\x02\xD5\xD6\t" +
        "\x02\x02\x02\xD6<\x03\x02\x02\x02\xD7\xDA\x05;\x1E\x02\xD8\xDA\t\x03\x02" +
        "\x02\xD9\xD7\x03\x02\x02\x02\xD9\xD8\x03\x02\x02\x02\xDA>\x03\x02\x02" +
        "\x02\xDB\xDD\x07B\x02\x02\xDC\xDE\x05;\x1E\x02\xDD\xDC\x03\x02\x02\x02" +
        "\xDE\xDF\x03\x02\x02\x02\xDF\xDD\x03\x02\x02\x02\xDF\xE0\x03\x02\x02\x02" +
        "\xE0\xE2\x03\x02\x02\x02\xE1\xE3\x07#\x02\x02\xE2\xE1\x03\x02\x02\x02" +
        "\xE2\xE3\x03\x02\x02\x02\xE3@\x03\x02\x02\x02\xE4\xE8\x07$\x02\x02\xE5" +
        "\xE7\n\x04\x02\x02\xE6\xE5\x03\x02\x02\x02\xE7\xEA\x03\x02\x02\x02\xE8" +
        "\xE9\x03\x02\x02\x02\xE8\xE6\x03\x02\x02\x02\xE9\xEB\x03\x02\x02\x02\xEA" +
        "\xE8\x03\x02\x02\x02\xEB\xEC\x07$\x02\x02\xECB\x03\x02\x02\x02\xED\xEF" +
        "\x07/\x02\x02\xEE\xED\x03\x02\x02\x02\xEE\xEF\x03\x02\x02\x02\xEF\xF1" +
        "\x03\x02\x02\x02\xF0\xF2\x05;\x1E\x02\xF1\xF0\x03\x02\x02\x02\xF2\xF3" +
        "\x03\x02\x02\x02\xF3\xF1\x03\x02\x02\x02\xF3\xF4\x03\x02\x02\x02\xF4D" +
        "\x03\x02\x02\x02\xF5\xF7\x07/\x02\x02\xF6\xF5\x03\x02\x02\x02\xF6\xF7" +
        "\x03\x02\x02\x02\xF7\xF9\x03\x02\x02\x02\xF8\xFA\x05;\x1E\x02\xF9\xF8" +
        "\x03\x02\x02\x02\xFA\xFB\x03\x02\x02\x02\xFB\xF9\x03\x02\x02\x02\xFB\xFC" +
        "\x03\x02\x02\x02\xFC\u0103\x03\x02\x02\x02\xFD\xFF\x070\x02\x02\xFE\u0100" +
        "\x05;\x1E\x02\xFF\xFE\x03\x02\x02\x02\u0100\u0101\x03\x02\x02\x02\u0101" +
        "\xFF\x03\x02\x02\x02\u0101\u0102\x03\x02\x02\x02\u0102\u0104\x03\x02\x02" +
        "\x02\u0103\xFD\x03\x02\x02\x02\u0103\u0104\x03\x02\x02\x02\u0104\u010E" +
        "\x03\x02\x02\x02\u0105\u0107\x07g\x02\x02\u0106\u0108\x07/\x02\x02\u0107" +
        "\u0106\x03\x02\x02\x02\u0107\u0108\x03\x02\x02\x02\u0108\u010A\x03\x02" +
        "\x02\x02\u0109\u010B\x05;\x1E\x02\u010A\u0109\x03\x02\x02\x02\u010B\u010C" +
        "\x03\x02\x02\x02\u010C\u010A\x03\x02\x02\x02\u010C\u010D\x03\x02\x02\x02" +
        "\u010D\u010F\x03\x02\x02\x02\u010E\u0105\x03\x02\x02\x02\u010E\u010F\x03" +
        "\x02\x02\x02\u010FF\x03\x02\x02\x02\u0110\u0112\x07/\x02\x02\u0111\u0110" +
        "\x03\x02\x02\x02\u0111\u0112\x03\x02\x02\x02\u0112\u0113\x03\x02\x02\x02" +
        "\u0113\u0114\x072\x02\x02\u0114\u0115\x07z\x02\x02\u0115\u0117\x03\x02" +
        "\x02\x02\u0116\u0118\x05=\x1F\x02\u0117\u0116\x03\x02\x02\x02\u0118\u0119" +
        "\x03\x02\x02\x02\u0119\u0117\x03\x02\x02\x02\u0119\u011A\x03\x02\x02\x02" +
        "\u011AH\x03\x02\x02\x02\u011B\u011C\x07B\x02\x02\u011C\u011D\x05G$\x02" +
        "\u011DJ\x03\x02\x02\x02\u011E\u011F\x07v\x02\x02\u011F\u0120\x07t\x02" +
        "\x02\u0120\u0121\x07w\x02\x02\u0121\u0128\x07g\x02\x02\u0122\u0123\x07" +
        "h\x02\x02\u0123\u0124\x07c\x02\x02\u0124\u0125\x07n\x02\x02\u0125\u0126" +
        "\x07u\x02\x02\u0126\u0128\x07g\x02\x02\u0127\u011E\x03\x02\x02\x02\u0127" +
        "\u0122\x03\x02\x02\x02\u0128L\x03\x02\x02\x02\u0129\u012A\x07x\x02\x02" +
        "\u012A\u012B\x07q\x02\x02\u012B\u012C\x07k\x02\x02\u012C\u012D\x07f\x02" +
        "\x02\u012DN\x03\x02\x02\x02\u012E\u0132\t\x05\x02\x02\u012F\u0131\t\x06" +
        "\x02\x02\u0130\u012F\x03\x02\x02\x02\u0131\u0134\x03\x02\x02\x02\u0132" +
        "\u0130\x03\x02\x02\x02\u0132\u0133\x03\x02\x02\x02\u0133P\x03\x02\x02" +
        "\x02\u0134\u0132\x03\x02\x02\x02\u0135\u0139\x07%\x02\x02\u0136\u0138" +
        "\n\x07\x02\x02\u0137\u0136\x03\x02\x02\x02\u0138\u013B\x03\x02\x02\x02" +
        "\u0139\u0137\x03\x02\x02\x02\u0139\u013A\x03\x02\x02\x02\u013A\u013C\x03" +
        "\x02\x02\x02\u013B\u0139\x03\x02\x02\x02\u013C\u013D\b)\x02\x02\u013D" +
        "R\x03\x02\x02\x02\u013E\u013F\t\b\x02\x02\u013F\u0140\x03\x02\x02\x02" +
        "\u0140\u0141\b*\x03\x02\u0141T\x03\x02\x02\x02\x15\x02\xD9\xDF\xE2\xE8" +
        "\xEE\xF3\xF6\xFB\u0101\u0103\u0107\u010C\u010E\u0111\u0119\u0127\u0132" +
        "\u0139\x04\x02\x03\x02\b\x02\x02";
    return CapnProtoLexer;
}(Lexer_1.Lexer));
exports.CapnProtoLexer = CapnProtoLexer;
