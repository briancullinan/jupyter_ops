"use strict";
// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/algol60/algol60.g4 by ANTLR 4.7.3-SNAPSHOT
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
var Lexer_1 = require("antlr4ts/Lexer");
var LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
var VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
var Utils = require("antlr4ts/misc/Utils");
var algol60Lexer = /** @class */ (function (_super) {
    __extends(algol60Lexer, _super);
    // tslint:enable:no-trailing-whitespace
    function algol60Lexer(input) {
        var _this = _super.call(this, input) || this;
        _this._interp = new LexerATNSimulator_1.LexerATNSimulator(algol60Lexer._ATN, _this);
        return _this;
    }
    Object.defineProperty(algol60Lexer.prototype, "vocabulary", {
        // @Override
        // @NotNull
        get: function () {
            return algol60Lexer.VOCABULARY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(algol60Lexer.prototype, "grammarFileName", {
        // @Override
        get: function () { return "algol60.g4"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(algol60Lexer.prototype, "ruleNames", {
        // @Override
        get: function () { return algol60Lexer.ruleNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(algol60Lexer.prototype, "serializedATN", {
        // @Override
        get: function () { return algol60Lexer._serializedATN; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(algol60Lexer.prototype, "channelNames", {
        // @Override
        get: function () { return algol60Lexer.channelNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(algol60Lexer.prototype, "modeNames", {
        // @Override
        get: function () { return algol60Lexer.modeNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(algol60Lexer, "_ATN", {
        get: function () {
            if (!algol60Lexer.__ATN) {
                algol60Lexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(algol60Lexer._serializedATN));
            }
            return algol60Lexer.__ATN;
        },
        enumerable: true,
        configurable: true
    });
    algol60Lexer.T__0 = 1;
    algol60Lexer.T__1 = 2;
    algol60Lexer.T__2 = 3;
    algol60Lexer.T__3 = 4;
    algol60Lexer.T__4 = 5;
    algol60Lexer.T__5 = 6;
    algol60Lexer.T__6 = 7;
    algol60Lexer.T__7 = 8;
    algol60Lexer.T__8 = 9;
    algol60Lexer.T__9 = 10;
    algol60Lexer.T__10 = 11;
    algol60Lexer.T__11 = 12;
    algol60Lexer.T__12 = 13;
    algol60Lexer.T__13 = 14;
    algol60Lexer.T__14 = 15;
    algol60Lexer.T__15 = 16;
    algol60Lexer.T__16 = 17;
    algol60Lexer.T__17 = 18;
    algol60Lexer.T__18 = 19;
    algol60Lexer.T__19 = 20;
    algol60Lexer.T__20 = 21;
    algol60Lexer.T__21 = 22;
    algol60Lexer.T__22 = 23;
    algol60Lexer.T__23 = 24;
    algol60Lexer.T__24 = 25;
    algol60Lexer.T__25 = 26;
    algol60Lexer.T__26 = 27;
    algol60Lexer.T__27 = 28;
    algol60Lexer.T__28 = 29;
    algol60Lexer.T__29 = 30;
    algol60Lexer.T__30 = 31;
    algol60Lexer.T__31 = 32;
    algol60Lexer.T__32 = 33;
    algol60Lexer.T__33 = 34;
    algol60Lexer.T__34 = 35;
    algol60Lexer.T__35 = 36;
    algol60Lexer.T__36 = 37;
    algol60Lexer.T__37 = 38;
    algol60Lexer.T__38 = 39;
    algol60Lexer.T__39 = 40;
    algol60Lexer.T__40 = 41;
    algol60Lexer.T__41 = 42;
    algol60Lexer.T__42 = 43;
    algol60Lexer.T__43 = 44;
    algol60Lexer.T__44 = 45;
    algol60Lexer.T__45 = 46;
    algol60Lexer.T__46 = 47;
    algol60Lexer.T__47 = 48;
    algol60Lexer.T__48 = 49;
    algol60Lexer.T__49 = 50;
    algol60Lexer.T__50 = 51;
    algol60Lexer.T__51 = 52;
    algol60Lexer.T__52 = 53;
    algol60Lexer.STRING = 54;
    algol60Lexer.LETTER = 55;
    algol60Lexer.DIGIT = 56;
    algol60Lexer.ARITHMETIC_OPERATOR = 57;
    algol60Lexer.RELATIONAL_OPERATOR = 58;
    algol60Lexer.LOGICAL_OPERATOR = 59;
    algol60Lexer.SEQUENTIAL_OPERATOR = 60;
    algol60Lexer.SEPARATOR = 61;
    algol60Lexer.DECLARATOR = 62;
    algol60Lexer.WS = 63;
    // tslint:disable:no-trailing-whitespace
    algol60Lexer.channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
    ];
    // tslint:disable:no-trailing-whitespace
    algol60Lexer.modeNames = [
        "DEFAULT_MODE",
    ];
    algol60Lexer.ruleNames = [
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
        "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
        "T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
        "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
        "T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40",
        "T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48",
        "T__49", "T__50", "T__51", "T__52", "STRING", "LETTER", "DIGIT", "ARITHMETIC_OPERATOR",
        "RELATIONAL_OPERATOR", "LOGICAL_OPERATOR", "SEQUENTIAL_OPERATOR", "SEPARATOR",
        "DECLARATOR", "WS",
    ];
    algol60Lexer._LITERAL_NAMES = [
        undefined, "':'", "'begin'", "';'", "'end'", "'own'", "'real'", "'integer'",
        "'boolean'", "','", "'array'", "'switch'", "':='", "'procedure'", "'('",
        "')'", "'value'", "'label'", "'goto'", "'else'", "'if'", "'then'", "'for'",
        "'do'", "'step'", "'until'", "'while'", "'+'", "' \u2013'", "'\u00D7'",
        "'/'", "'\u00F7'", "'\u2191'", "'.'", "'10'", "'\u2013'", "'\u2263'",
        "'\u2283'", "'\u22C1'", "'\u22C0'", "'\u00AC'", "'<'", "'\u2264'", "'='",
        "'\u2260'", "'>'", "'\u2265'", "'['", "']'", "'true'", "'false'", "'`'",
        "'''", "'string'",
    ];
    algol60Lexer._SYMBOLIC_NAMES = [
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, "STRING", "LETTER",
        "DIGIT", "ARITHMETIC_OPERATOR", "RELATIONAL_OPERATOR", "LOGICAL_OPERATOR",
        "SEQUENTIAL_OPERATOR", "SEPARATOR", "DECLARATOR", "WS",
    ];
    algol60Lexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(algol60Lexer._LITERAL_NAMES, algol60Lexer._SYMBOLIC_NAMES, []);
    algol60Lexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02A\u01BA\b\x01" +
        "\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
        "\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
        "\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
        "\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
        "\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
        "\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
        "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
        "+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
        "4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
        "=\t=\x04>\t>\x04?\t?\x04@\t@\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03" +
        "\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
        "\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
        "\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03" +
        "\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03" +
        "\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E" +
        "\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F" +
        "\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
        "\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13" +
        "\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15" +
        "\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17" +
        "\x03\x17\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19" +
        "\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B" +
        "\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E" +
        "\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03" +
        "#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03)\x03)\x03*\x03" +
        "*\x03+\x03+\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x030\x030\x031\x03" +
        "1\x032\x032\x032\x032\x032\x033\x033\x033\x033\x033\x033\x034\x034\x03" +
        "5\x035\x036\x036\x036\x036\x036\x036\x036\x037\x037\x077\u0145\n7\f7\x0E" +
        "7\u0148\v7\x037\x037\x038\x038\x039\x039\x03:\x03:\x03;\x03;\x03<\x03" +
        "<\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03" +
        "=\x03=\x03=\x03=\x03=\x03=\x05=\u0169\n=\x03>\x03>\x03>\x03>\x03>\x03" +
        ">\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03" +
        ">\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x05>\u0187\n>\x03?\x03?\x03" +
        "?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03" +
        "?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03" +
        "?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x05?\u01B2\n?\x03" +
        "@\x06@\u01B5\n@\r@\x0E@\u01B6\x03@\x03@\x02\x02\x02A\x03\x02\x03\x05\x02" +
        "\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02" +
        "\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11" +
        "!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02" +
        "\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02" +
        "!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02," +
        "W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x026k\x027m\x02" +
        "8o\x029q\x02:s\x02;u\x02<w\x02=y\x02>{\x02?}\x02@\x7F\x02A\x03\x02\t\x05" +
        "\x02\f\f\x0F\x0F$$\x04\x02C\\c|\b\x02--11\xD9\xD9\xF9\xF9\u2015\u2015" +
        "\u2193\u2193\x05\x02>@\u2262\u2262\u2266\u2267\x06\x02\xAE\xAE\u2265\u2265" +
        "\u2285\u2285\u22C2\u22C3\x04\x02..00\x05\x02\v\f\x0F\x0F\"\"\x02\u01CE" +
        "\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
        "\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
        "\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
        "\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
        "\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
        "!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03" +
        "\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
        "\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02" +
        "5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02" +
        "\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02" +
        "\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03" +
        "\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02" +
        "\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02" +
        "W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02" +
        "\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02" +
        "\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03" +
        "\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02" +
        "\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x02" +
        "y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02\x02\x7F\x03" +
        "\x02\x02\x02\x03\x81\x03\x02\x02\x02\x05\x83\x03\x02\x02\x02\x07\x89\x03" +
        "\x02\x02\x02\t\x8B\x03\x02\x02\x02\v\x8F\x03\x02\x02\x02\r\x93\x03\x02" +
        "\x02\x02\x0F\x98\x03\x02\x02\x02\x11\xA0\x03\x02\x02\x02\x13\xA8\x03\x02" +
        "\x02\x02\x15\xAA\x03\x02\x02\x02\x17\xB0\x03\x02\x02\x02\x19\xB7\x03\x02" +
        "\x02\x02\x1B\xBA\x03\x02\x02\x02\x1D\xC4\x03\x02\x02\x02\x1F\xC6\x03\x02" +
        "\x02\x02!\xC8\x03\x02\x02\x02#\xCE\x03\x02\x02\x02%\xD4\x03\x02\x02\x02" +
        "\'\xD9\x03\x02\x02\x02)\xDE\x03\x02\x02\x02+\xE1\x03\x02\x02\x02-\xE6" +
        "\x03\x02\x02\x02/\xEA\x03\x02\x02\x021\xED\x03\x02\x02\x023\xF2\x03\x02" +
        "\x02\x025\xF8\x03\x02\x02\x027\xFE\x03\x02\x02\x029\u0100\x03\x02\x02" +
        "\x02;\u0103\x03\x02\x02\x02=\u0105\x03\x02\x02\x02?\u0107\x03\x02\x02" +
        "\x02A\u0109\x03\x02\x02\x02C\u010B\x03\x02\x02\x02E\u010D\x03\x02\x02" +
        "\x02G\u0110\x03\x02\x02\x02I\u0112\x03\x02\x02\x02K\u0114\x03\x02\x02" +
        "\x02M\u0116\x03\x02\x02\x02O\u0118\x03\x02\x02\x02Q\u011A\x03\x02\x02" +
        "\x02S\u011C\x03\x02\x02\x02U\u011E\x03\x02\x02\x02W\u0120\x03\x02\x02" +
        "\x02Y\u0122\x03\x02\x02\x02[\u0124\x03\x02\x02\x02]\u0126\x03\x02\x02" +
        "\x02_\u0128\x03\x02\x02\x02a\u012A\x03\x02\x02\x02c\u012C\x03\x02\x02" +
        "\x02e\u0131\x03\x02\x02\x02g\u0137\x03\x02\x02\x02i\u0139\x03\x02\x02" +
        "\x02k\u013B\x03\x02\x02\x02m\u0142\x03\x02\x02\x02o\u014B\x03\x02\x02" +
        "\x02q\u014D\x03\x02\x02\x02s\u014F\x03\x02\x02\x02u\u0151\x03\x02\x02" +
        "\x02w\u0153\x03\x02\x02\x02y\u0168\x03\x02\x02\x02{\u0186\x03\x02\x02" +
        "\x02}\u01B1\x03\x02\x02\x02\x7F\u01B4\x03\x02\x02\x02\x81\x82\x07<\x02" +
        "\x02\x82\x04\x03\x02\x02\x02\x83\x84\x07d\x02\x02\x84\x85\x07g\x02\x02" +
        "\x85\x86\x07i\x02\x02\x86\x87\x07k\x02\x02\x87\x88\x07p\x02\x02\x88\x06" +
        "\x03\x02\x02\x02\x89\x8A\x07=\x02\x02\x8A\b\x03\x02\x02\x02\x8B\x8C\x07" +
        "g\x02\x02\x8C\x8D\x07p\x02\x02\x8D\x8E\x07f\x02\x02\x8E\n\x03\x02\x02" +
        "\x02\x8F\x90\x07q\x02\x02\x90\x91\x07y\x02\x02\x91\x92\x07p\x02\x02\x92" +
        "\f\x03\x02\x02\x02\x93\x94\x07t\x02\x02\x94\x95\x07g\x02\x02\x95\x96\x07" +
        "c\x02\x02\x96\x97\x07n\x02\x02\x97\x0E\x03\x02\x02\x02\x98\x99\x07k\x02" +
        "\x02\x99\x9A\x07p\x02\x02\x9A\x9B\x07v\x02\x02\x9B\x9C\x07g\x02\x02\x9C" +
        "\x9D\x07i\x02\x02\x9D\x9E\x07g\x02\x02\x9E\x9F\x07t\x02\x02\x9F\x10\x03" +
        "\x02\x02\x02\xA0\xA1\x07d\x02\x02\xA1\xA2\x07q\x02\x02\xA2\xA3\x07q\x02" +
        "\x02\xA3\xA4\x07n\x02\x02\xA4\xA5\x07g\x02\x02\xA5\xA6\x07c\x02\x02\xA6" +
        "\xA7\x07p\x02\x02\xA7\x12\x03\x02\x02\x02\xA8\xA9\x07.\x02\x02\xA9\x14" +
        "\x03\x02\x02\x02\xAA\xAB\x07c\x02\x02\xAB\xAC\x07t\x02\x02\xAC\xAD\x07" +
        "t\x02\x02\xAD\xAE\x07c\x02\x02\xAE\xAF\x07{\x02\x02\xAF\x16\x03\x02\x02" +
        "\x02\xB0\xB1\x07u\x02\x02\xB1\xB2\x07y\x02\x02\xB2\xB3\x07k\x02\x02\xB3" +
        "\xB4\x07v\x02\x02\xB4\xB5\x07e\x02\x02\xB5\xB6\x07j\x02\x02\xB6\x18\x03" +
        "\x02\x02\x02\xB7\xB8\x07<\x02\x02\xB8\xB9\x07?\x02\x02\xB9\x1A\x03\x02" +
        "\x02\x02\xBA\xBB\x07r\x02\x02\xBB\xBC\x07t\x02\x02\xBC\xBD\x07q\x02\x02" +
        "\xBD\xBE\x07e\x02\x02\xBE\xBF\x07g\x02\x02\xBF\xC0\x07f\x02\x02\xC0\xC1" +
        "\x07w\x02\x02\xC1\xC2\x07t\x02\x02\xC2\xC3\x07g\x02\x02\xC3\x1C\x03\x02" +
        "\x02\x02\xC4\xC5\x07*\x02\x02\xC5\x1E\x03\x02\x02\x02\xC6\xC7\x07+\x02" +
        "\x02\xC7 \x03\x02\x02\x02\xC8\xC9\x07x\x02\x02\xC9\xCA\x07c\x02\x02\xCA" +
        "\xCB\x07n\x02\x02\xCB\xCC\x07w\x02\x02\xCC\xCD\x07g\x02\x02\xCD\"\x03" +
        "\x02\x02\x02\xCE\xCF\x07n\x02\x02\xCF\xD0\x07c\x02\x02\xD0\xD1\x07d\x02" +
        "\x02\xD1\xD2\x07g\x02\x02\xD2\xD3\x07n\x02\x02\xD3$\x03\x02\x02\x02\xD4" +
        "\xD5\x07i\x02\x02\xD5\xD6\x07q\x02\x02\xD6\xD7\x07v\x02\x02\xD7\xD8\x07" +
        "q\x02\x02\xD8&\x03\x02\x02\x02\xD9\xDA\x07g\x02\x02\xDA\xDB\x07n\x02\x02" +
        "\xDB\xDC\x07u\x02\x02\xDC\xDD\x07g\x02\x02\xDD(\x03\x02\x02\x02\xDE\xDF" +
        "\x07k\x02\x02\xDF\xE0\x07h\x02\x02\xE0*\x03\x02\x02\x02\xE1\xE2\x07v\x02" +
        "\x02\xE2\xE3\x07j\x02\x02\xE3\xE4\x07g\x02\x02\xE4\xE5\x07p\x02\x02\xE5" +
        ",\x03\x02\x02\x02\xE6\xE7\x07h\x02\x02\xE7\xE8\x07q\x02\x02\xE8\xE9\x07" +
        "t\x02\x02\xE9.\x03\x02\x02\x02\xEA\xEB\x07f\x02\x02\xEB\xEC\x07q\x02\x02" +
        "\xEC0\x03\x02\x02\x02\xED\xEE\x07u\x02\x02\xEE\xEF\x07v\x02\x02\xEF\xF0" +
        "\x07g\x02\x02\xF0\xF1\x07r\x02\x02\xF12\x03\x02\x02\x02\xF2\xF3\x07w\x02" +
        "\x02\xF3\xF4\x07p\x02\x02\xF4\xF5\x07v\x02\x02\xF5\xF6\x07k\x02\x02\xF6" +
        "\xF7\x07n\x02\x02\xF74\x03\x02\x02\x02\xF8\xF9\x07y\x02\x02\xF9\xFA\x07" +
        "j\x02\x02\xFA\xFB\x07k\x02\x02\xFB\xFC\x07n\x02\x02\xFC\xFD\x07g\x02\x02" +
        "\xFD6\x03\x02\x02\x02\xFE\xFF\x07-\x02\x02\xFF8\x03\x02\x02\x02\u0100" +
        "\u0101\x07\"\x02\x02\u0101\u0102\x07\u2015\x02\x02\u0102:\x03\x02\x02" +
        "\x02\u0103\u0104\x07\xD9\x02\x02\u0104<\x03\x02\x02\x02\u0105\u0106\x07" +
        "1\x02\x02\u0106>\x03\x02\x02\x02\u0107\u0108\x07\xF9\x02\x02\u0108@\x03" +
        "\x02\x02\x02\u0109\u010A\x07\u2193\x02\x02\u010AB\x03\x02\x02\x02\u010B" +
        "\u010C\x070\x02\x02\u010CD\x03\x02\x02\x02\u010D\u010E\x073\x02\x02\u010E" +
        "\u010F\x072\x02\x02\u010FF\x03\x02\x02\x02\u0110\u0111\x07\u2015\x02\x02" +
        "\u0111H\x03\x02\x02\x02\u0112\u0113\x07\u2265\x02\x02\u0113J\x03\x02\x02" +
        "\x02\u0114\u0115\x07\u2285\x02\x02\u0115L\x03\x02\x02\x02\u0116\u0117" +
        "\x07\u22C3\x02\x02\u0117N\x03\x02\x02\x02\u0118\u0119\x07\u22C2\x02\x02" +
        "\u0119P\x03\x02\x02\x02\u011A\u011B\x07\xAE\x02\x02\u011BR\x03\x02\x02" +
        "\x02\u011C\u011D\x07>\x02\x02\u011DT\x03\x02\x02\x02\u011E\u011F\x07\u2266" +
        "\x02\x02\u011FV\x03\x02\x02\x02\u0120\u0121\x07?\x02\x02\u0121X\x03\x02" +
        "\x02\x02\u0122\u0123\x07\u2262\x02\x02\u0123Z\x03\x02\x02\x02\u0124\u0125" +
        "\x07@\x02\x02\u0125\\\x03\x02\x02\x02\u0126\u0127\x07\u2267\x02\x02\u0127" +
        "^\x03\x02\x02\x02\u0128\u0129\x07]\x02\x02\u0129`\x03\x02\x02\x02\u012A" +
        "\u012B\x07_\x02\x02\u012Bb\x03\x02\x02\x02\u012C\u012D\x07v\x02\x02\u012D" +
        "\u012E\x07t\x02\x02\u012E\u012F\x07w\x02\x02\u012F\u0130\x07g\x02\x02" +
        "\u0130d\x03\x02\x02\x02\u0131\u0132\x07h\x02\x02\u0132\u0133\x07c\x02" +
        "\x02\u0133\u0134\x07n\x02\x02\u0134\u0135\x07u\x02\x02\u0135\u0136\x07" +
        "g\x02\x02\u0136f\x03\x02\x02\x02\u0137\u0138\x07b\x02\x02\u0138h\x03\x02" +
        "\x02\x02\u0139\u013A\x07)\x02\x02\u013Aj\x03\x02\x02\x02\u013B\u013C\x07" +
        "u\x02\x02\u013C\u013D\x07v\x02\x02\u013D\u013E\x07t\x02\x02\u013E\u013F" +
        "\x07k\x02\x02\u013F\u0140\x07p\x02\x02\u0140\u0141\x07i\x02\x02\u0141" +
        "l\x03\x02\x02\x02\u0142\u0146\x07$\x02\x02\u0143\u0145\n\x02\x02\x02\u0144" +
        "\u0143\x03\x02\x02\x02\u0145\u0148\x03\x02\x02\x02\u0146\u0144\x03\x02" +
        "\x02\x02\u0146\u0147\x03\x02\x02\x02\u0147\u0149\x03\x02\x02\x02\u0148" +
        "\u0146\x03\x02\x02\x02\u0149\u014A\x07$\x02\x02\u014An\x03\x02\x02\x02" +
        "\u014B\u014C\t\x03\x02\x02\u014Cp\x03\x02\x02\x02\u014D\u014E\x042;\x02" +
        "\u014Er\x03\x02\x02\x02\u014F\u0150\t\x04\x02\x02\u0150t\x03\x02\x02\x02" +
        "\u0151\u0152\t\x05\x02\x02\u0152v\x03\x02\x02\x02\u0153\u0154\t\x06\x02" +
        "\x02\u0154x\x03\x02\x02\x02\u0155\u0156\x07i\x02\x02\u0156\u0157\x07q" +
        "\x02\x02\u0157\u0158\x07v\x02\x02\u0158\u0169\x07q\x02\x02\u0159\u015A" +
        "\x07k\x02\x02\u015A\u0169\x07h\x02\x02\u015B\u015C\x07v\x02\x02\u015C" +
        "\u015D\x07j\x02\x02\u015D\u015E\x07g\x02\x02\u015E\u0169\x07p\x02\x02" +
        "\u015F\u0160\x07g\x02\x02\u0160\u0161\x07n\x02\x02\u0161\u0162\x07u\x02" +
        "\x02\u0162\u0169\x07g\x02\x02\u0163\u0164\x07h\x02\x02\u0164\u0165\x07" +
        "q\x02\x02\u0165\u0169\x07t\x02\x02\u0166\u0167\x07f\x02\x02\u0167\u0169" +
        "\x07q\x02\x02\u0168\u0155\x03\x02\x02\x02\u0168\u0159\x03\x02\x02\x02" +
        "\u0168\u015B\x03\x02\x02\x02\u0168\u015F\x03\x02\x02\x02\u0168\u0163\x03" +
        "\x02\x02\x02\u0168\u0166\x03\x02\x02\x02\u0169z\x03\x02\x02\x02\u016A" +
        "\u0187\t\x07\x02\x02\u016B\u016C\x073\x02\x02\u016C\u0187\x072\x02\x02" +
        "\u016D\u0187\x04<=\x02\u016E\u016F\x07<\x02\x02\u016F\u0187\x07?\x02\x02" +
        "\u0170\u0187\x07a\x02\x02\u0171\u0172\x07u\x02\x02\u0172\u0173\x07v\x02" +
        "\x02\u0173\u0174\x07g\x02\x02\u0174\u0187\x07r\x02\x02\u0175\u0176\x07" +
        "w\x02\x02\u0176\u0177\x07p\x02\x02\u0177\u0178\x07v\x02\x02\u0178\u0179" +
        "\x07k\x02\x02\u0179\u0187\x07n\x02\x02\u017A\u017B\x07y\x02\x02\u017B" +
        "\u017C\x07j\x02\x02\u017C\u017D\x07k\x02\x02\u017D\u017E\x07n\x02\x02" +
        "\u017E\u0187\x07g\x02\x02\u017F\u0180\x07e\x02\x02\u0180\u0181\x07q\x02" +
        "\x02\u0181\u0182\x07o\x02\x02\u0182\u0183\x07o\x02\x02\u0183\u0184\x07" +
        "g\x02\x02\u0184\u0185\x07p\x02\x02\u0185\u0187\x07v\x02\x02\u0186\u016A" +
        "\x03\x02\x02\x02\u0186\u016B\x03\x02\x02\x02\u0186\u016D\x03\x02\x02\x02" +
        "\u0186\u016E\x03\x02\x02\x02\u0186\u0170\x03\x02\x02\x02\u0186\u0171\x03" +
        "\x02\x02\x02\u0186\u0175\x03\x02\x02\x02\u0186\u017A\x03\x02\x02\x02\u0186" +
        "\u017F\x03\x02\x02\x02\u0187|\x03\x02\x02\x02\u0188\u0189\x07q\x02\x02" +
        "\u0189\u018A\x07y\x02\x02\u018A\u01B2\x07p\x02\x02\u018B\u018C\x07d\x02" +
        "\x02\u018C\u018D\x07q\x02\x02\u018D\u018E\x07q\x02\x02\u018E\u018F\x07" +
        "n\x02\x02\u018F\u0190\x07g\x02\x02\u0190\u0191\x07c\x02\x02\u0191\u01B2" +
        "\x07p\x02\x02\u0192\u0193\x07k\x02\x02\u0193\u0194\x07p\x02\x02\u0194" +
        "\u0195\x07v\x02\x02\u0195\u0196\x07g\x02\x02\u0196\u0197\x07i\x02\x02" +
        "\u0197\u0198\x07g\x02\x02\u0198\u01B2\x07t\x02\x02\u0199\u019A\x07t\x02" +
        "\x02\u019A\u019B\x07g\x02\x02\u019B\u019C\x07c\x02\x02\u019C\u01B2\x07" +
        "n\x02\x02\u019D\u019E\x07c\x02\x02\u019E\u019F\x07t\x02\x02\u019F\u01A0" +
        "\x07t\x02\x02\u01A0\u01A1\x07c\x02\x02\u01A1\u01B2\x07{\x02\x02\u01A2" +
        "\u01A3\x07u\x02\x02\u01A3\u01A4\x07y\x02\x02\u01A4\u01A5\x07k\x02\x02" +
        "\u01A5\u01A6\x07v\x02\x02\u01A6\u01A7\x07e\x02\x02\u01A7\u01B2\x07j\x02" +
        "\x02\u01A8\u01A9\x07r\x02\x02\u01A9\u01AA\x07t\x02\x02\u01AA\u01AB\x07" +
        "q\x02\x02\u01AB\u01AC\x07e\x02\x02\u01AC\u01AD\x07g\x02\x02\u01AD\u01AE" +
        "\x07f\x02\x02\u01AE\u01AF\x07w\x02\x02\u01AF\u01B0\x07t\x02\x02\u01B0" +
        "\u01B2\x07g\x02\x02\u01B1\u0188\x03\x02\x02\x02\u01B1\u018B\x03\x02\x02" +
        "\x02\u01B1\u0192\x03\x02\x02\x02\u01B1\u0199\x03\x02\x02\x02\u01B1\u019D" +
        "\x03\x02\x02\x02\u01B1\u01A2\x03\x02\x02\x02\u01B1\u01A8\x03\x02\x02\x02" +
        "\u01B2~\x03\x02\x02\x02\u01B3\u01B5\t\b\x02\x02\u01B4\u01B3\x03\x02\x02" +
        "\x02\u01B5\u01B6\x03\x02\x02\x02\u01B6\u01B4\x03\x02\x02\x02\u01B6\u01B7" +
        "\x03\x02\x02\x02\u01B7\u01B8\x03\x02\x02\x02\u01B8\u01B9\b@\x02\x02\u01B9" +
        "\x80\x03\x02\x02\x02\b\x02\u0146\u0168\u0186\u01B1\u01B6\x03\b\x02\x02";
    return algol60Lexer;
}(Lexer_1.Lexer));
exports.algol60Lexer = algol60Lexer;
