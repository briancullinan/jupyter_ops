// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/pl0/pl0.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class pl0Lexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly WRITE = 19;
	public static readonly WHILE = 20;
	public static readonly DO = 21;
	public static readonly IF = 22;
	public static readonly THEN = 23;
	public static readonly ODD = 24;
	public static readonly BEGIN = 25;
	public static readonly END = 26;
	public static readonly CALL = 27;
	public static readonly CONST = 28;
	public static readonly VAR = 29;
	public static readonly PROCEDURE = 30;
	public static readonly STRING = 31;
	public static readonly NUMBER = 32;
	public static readonly WS = 33;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "WRITE", "WHILE", "DO", "IF", "THEN", "ODD", "BEGIN", "END", 
		"CALL", "CONST", "VAR", "PROCEDURE", "A", "B", "C", "D", "E", "F", "G", 
		"H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", 
		"V", "W", "X", "Y", "Z", "STRING", "NUMBER", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'.'", "'='", "','", "';'", "':='", "'?'", "'!'", "'#'", "'<'", 
		"'<='", "'>'", "'>='", "'+'", "'-'", "'*'", "'/'", "'('", "')'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "WRITE", "WHILE", 
		"DO", "IF", "THEN", "ODD", "BEGIN", "END", "CALL", "CONST", "VAR", "PROCEDURE", 
		"STRING", "NUMBER", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(pl0Lexer._LITERAL_NAMES, pl0Lexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return pl0Lexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(pl0Lexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "pl0.g4"; }

	// @Override
	public get ruleNames(): string[] { return pl0Lexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return pl0Lexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return pl0Lexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return pl0Lexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02#\u0122\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v" +
		"\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03" +
		"\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03" +
		"\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03" +
		"\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03" +
		"\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03" +
		"\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03" +
		"\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03" +
		"\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03" +
		" \x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'" +
		"\x03\'\x03(\x03(\x03)\x03)\x03*\x03*\x03+\x03+\x03,\x03,\x03-\x03-\x03" +
		".\x03.\x03/\x03/\x030\x030\x031\x031\x032\x032\x033\x033\x034\x034\x03" +
		"5\x035\x036\x036\x037\x037\x038\x038\x039\x039\x03:\x03:\x07:\u0115\n" +
		":\f:\x0E:\u0118\v:\x03;\x06;\u011B\n;\r;\x0E;\u011C\x03<\x03<\x03<\x03" +
		"<\x02\x02\x02=\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07" +
		"\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E" +
		"\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02" +
		"\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02" +
		"\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02\x02A\x02\x02C\x02\x02E\x02\x02G\x02" +
		"\x02I\x02\x02K\x02\x02M\x02\x02O\x02\x02Q\x02\x02S\x02\x02U\x02\x02W\x02" +
		"\x02Y\x02\x02[\x02\x02]\x02\x02_\x02\x02a\x02\x02c\x02\x02e\x02\x02g\x02" +
		"\x02i\x02\x02k\x02\x02m\x02\x02o\x02\x02q\x02\x02s\x02!u\x02\"w\x02#\x03" +
		"\x02\x1F\x04\x02CCcc\x04\x02DDdd\x04\x02EEee\x04\x02FFff\x04\x02GGgg\x04" +
		"\x02HHhh\x04\x02IIii\x04\x02JJjj\x04\x02KKkk\x04\x02LLll\x04\x02MMmm\x04" +
		"\x02NNnn\x04\x02OOoo\x04\x02PPpp\x04\x02QQqq\x04\x02RRrr\x04\x02SSss\x04" +
		"\x02TTtt\x04\x02UUuu\x04\x02VVvv\x04\x02WWww\x04\x02XXxx\x04\x02YYyy\x04" +
		"\x02ZZzz\x04\x02[[{{\x04\x02\\\\||\x04\x02C\\c|\x03\x022;\x05\x02\v\f" +
		"\x0F\x0F\"\"\x02\u0109\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02" +
		"\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02" +
		"\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02" +
		"\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02" +
		"\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02" +
		"\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03" +
		"\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02" +
		"\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x02" +
		"3\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02" +
		"\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02s\x03\x02\x02\x02" +
		"\x02u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x03y\x03\x02\x02\x02\x05{\x03" +
		"\x02\x02\x02\x07}\x03\x02\x02\x02\t\x7F\x03\x02\x02\x02\v\x81\x03\x02" +
		"\x02\x02\r\x84\x03\x02\x02\x02\x0F\x86\x03\x02\x02\x02\x11\x88\x03\x02" +
		"\x02\x02\x13\x8A\x03\x02\x02\x02\x15\x8C\x03\x02\x02\x02\x17\x8F\x03\x02" +
		"\x02\x02\x19\x91\x03\x02\x02\x02\x1B\x94\x03\x02\x02\x02\x1D\x96\x03\x02" +
		"\x02\x02\x1F\x98\x03\x02\x02\x02!\x9A\x03\x02\x02\x02#\x9C\x03\x02\x02" +
		"\x02%\x9E\x03\x02\x02\x02\'\xA0\x03\x02\x02\x02)\xA6\x03\x02\x02\x02+" +
		"\xAC\x03\x02\x02\x02-\xAF\x03\x02\x02\x02/\xB2\x03\x02\x02\x021\xB7\x03" +
		"\x02\x02\x023\xBB\x03\x02\x02\x025\xC1\x03\x02\x02\x027\xC5\x03\x02\x02" +
		"\x029\xCA\x03\x02\x02\x02;\xD0\x03\x02\x02\x02=\xD4\x03\x02\x02\x02?\xDE" +
		"\x03\x02\x02\x02A\xE0\x03\x02\x02\x02C\xE2\x03\x02\x02\x02E\xE4\x03\x02" +
		"\x02\x02G\xE6\x03\x02\x02\x02I\xE8\x03\x02\x02\x02K\xEA\x03\x02\x02\x02" +
		"M\xEC\x03\x02\x02\x02O\xEE\x03\x02\x02\x02Q\xF0\x03\x02\x02\x02S\xF2\x03" +
		"\x02\x02\x02U\xF4\x03\x02\x02\x02W\xF6\x03\x02\x02\x02Y\xF8\x03\x02\x02" +
		"\x02[\xFA\x03\x02\x02\x02]\xFC\x03\x02\x02\x02_\xFE\x03\x02\x02\x02a\u0100" +
		"\x03\x02\x02\x02c\u0102\x03\x02\x02\x02e\u0104\x03\x02\x02\x02g\u0106" +
		"\x03\x02\x02\x02i\u0108\x03\x02\x02\x02k\u010A\x03\x02\x02\x02m\u010C" +
		"\x03\x02\x02\x02o\u010E\x03\x02\x02\x02q\u0110\x03\x02\x02\x02s\u0112" +
		"\x03\x02\x02\x02u\u011A\x03\x02\x02\x02w\u011E\x03\x02\x02\x02yz\x070" +
		"\x02\x02z\x04\x03\x02\x02\x02{|\x07?\x02\x02|\x06\x03\x02\x02\x02}~\x07" +
		".\x02\x02~\b\x03\x02\x02\x02\x7F\x80\x07=\x02\x02\x80\n\x03\x02\x02\x02" +
		"\x81\x82\x07<\x02\x02\x82\x83\x07?\x02\x02\x83\f\x03\x02\x02\x02\x84\x85" +
		"\x07A\x02\x02\x85\x0E\x03\x02\x02\x02\x86\x87\x07#\x02\x02\x87\x10\x03" +
		"\x02\x02\x02\x88\x89\x07%\x02\x02\x89\x12\x03\x02\x02\x02\x8A\x8B\x07" +
		">\x02\x02\x8B\x14\x03\x02\x02\x02\x8C\x8D\x07>\x02\x02\x8D\x8E\x07?\x02" +
		"\x02\x8E\x16\x03\x02\x02\x02\x8F\x90\x07@\x02\x02\x90\x18\x03\x02\x02" +
		"\x02\x91\x92\x07@\x02\x02\x92\x93\x07?\x02\x02\x93\x1A\x03\x02\x02\x02" +
		"\x94\x95\x07-\x02\x02\x95\x1C\x03\x02\x02\x02\x96\x97\x07/\x02\x02\x97" +
		"\x1E\x03\x02\x02\x02\x98\x99\x07,\x02\x02\x99 \x03\x02\x02\x02\x9A\x9B" +
		"\x071\x02\x02\x9B\"\x03\x02\x02\x02\x9C\x9D\x07*\x02\x02\x9D$\x03\x02" +
		"\x02\x02\x9E\x9F\x07+\x02\x02\x9F&\x03\x02\x02\x02\xA0\xA1\x05k6\x02\xA1" +
		"\xA2\x05a1\x02\xA2\xA3\x05O(\x02\xA3\xA4\x05e3\x02\xA4\xA5\x05G$\x02\xA5" +
		"(\x03\x02\x02\x02\xA6\xA7\x05k6\x02\xA7\xA8\x05M\'\x02\xA8\xA9\x05O(\x02" +
		"\xA9\xAA\x05U+\x02\xAA\xAB\x05G$\x02\xAB*\x03\x02\x02\x02\xAC\xAD\x05" +
		"E#\x02\xAD\xAE\x05[.\x02\xAE,\x03\x02\x02\x02\xAF\xB0\x05O(\x02\xB0\xB1" +
		"\x05I%\x02\xB1.\x03\x02\x02\x02\xB2\xB3\x05e3\x02\xB3\xB4\x05M\'\x02\xB4" +
		"\xB5\x05G$\x02\xB5\xB6\x05Y-\x02\xB60\x03\x02\x02\x02\xB7\xB8\x05[.\x02" +
		"\xB8\xB9\x05E#\x02\xB9\xBA\x05E#\x02\xBA2\x03\x02\x02\x02\xBB\xBC\x05" +
		"A!\x02\xBC\xBD\x05G$\x02\xBD\xBE\x05K&\x02\xBE\xBF\x05O(\x02\xBF\xC0\x05" +
		"Y-\x02\xC04\x03\x02\x02\x02\xC1\xC2\x05G$\x02\xC2\xC3\x05Y-\x02\xC3\xC4" +
		"\x05E#\x02\xC46\x03\x02\x02\x02\xC5\xC6\x05C\"\x02\xC6\xC7\x05? \x02\xC7" +
		"\xC8\x05U+\x02\xC8\xC9\x05U+\x02\xC98\x03\x02\x02\x02\xCA\xCB\x05C\"\x02" +
		"\xCB\xCC\x05[.\x02\xCC\xCD\x05Y-\x02\xCD\xCE\x05c2\x02\xCE\xCF\x05e3\x02" +
		"\xCF:\x03\x02\x02\x02\xD0\xD1\x05i5\x02\xD1\xD2\x05? \x02\xD2\xD3\x05" +
		"a1\x02\xD3<\x03\x02\x02\x02\xD4\xD5\x05]/\x02\xD5\xD6\x05a1\x02\xD6\xD7" +
		"\x05[.\x02\xD7\xD8\x05C\"\x02\xD8\xD9\x05G$\x02\xD9\xDA\x05E#\x02\xDA" +
		"\xDB\x05g4\x02\xDB\xDC\x05a1\x02\xDC\xDD\x05G$\x02\xDD>\x03\x02\x02\x02" +
		"\xDE\xDF\t\x02\x02\x02\xDF@\x03\x02\x02\x02\xE0\xE1\t\x03\x02\x02\xE1" +
		"B\x03\x02\x02\x02\xE2\xE3\t\x04\x02\x02\xE3D\x03\x02\x02\x02\xE4\xE5\t" +
		"\x05\x02\x02\xE5F\x03\x02\x02\x02\xE6\xE7\t\x06\x02\x02\xE7H\x03\x02\x02" +
		"\x02\xE8\xE9\t\x07\x02\x02\xE9J\x03\x02\x02\x02\xEA\xEB\t\b\x02\x02\xEB" +
		"L\x03\x02\x02\x02\xEC\xED\t\t\x02\x02\xEDN\x03\x02\x02\x02\xEE\xEF\t\n" +
		"\x02\x02\xEFP\x03\x02\x02\x02\xF0\xF1\t\v\x02\x02\xF1R\x03\x02\x02\x02" +
		"\xF2\xF3\t\f\x02\x02\xF3T\x03\x02\x02\x02\xF4\xF5\t\r\x02\x02\xF5V\x03" +
		"\x02\x02\x02\xF6\xF7\t\x0E\x02\x02\xF7X\x03\x02\x02\x02\xF8\xF9\t\x0F" +
		"\x02\x02\xF9Z\x03\x02\x02\x02\xFA\xFB\t\x10\x02\x02\xFB\\\x03\x02\x02" +
		"\x02\xFC\xFD\t\x11\x02\x02\xFD^\x03\x02\x02\x02\xFE\xFF\t\x12\x02\x02" +
		"\xFF`\x03\x02\x02\x02\u0100\u0101\t\x13\x02\x02\u0101b\x03\x02\x02\x02" +
		"\u0102\u0103\t\x14\x02\x02\u0103d\x03\x02\x02\x02\u0104\u0105\t\x15\x02" +
		"\x02\u0105f\x03\x02\x02\x02\u0106\u0107\t\x16\x02\x02\u0107h\x03\x02\x02" +
		"\x02\u0108\u0109\t\x17\x02\x02\u0109j\x03\x02\x02\x02\u010A\u010B\t\x18" +
		"\x02\x02\u010Bl\x03\x02\x02\x02\u010C\u010D\t\x19\x02\x02\u010Dn\x03\x02" +
		"\x02\x02\u010E\u010F\t\x1A\x02\x02\u010Fp\x03\x02\x02\x02\u0110\u0111" +
		"\t\x1B\x02\x02\u0111r\x03\x02\x02\x02\u0112\u0116\t\x1C\x02\x02\u0113" +
		"\u0115\t\x1C\x02\x02\u0114\u0113\x03\x02\x02\x02\u0115\u0118\x03\x02\x02" +
		"\x02\u0116\u0114\x03\x02\x02\x02\u0116\u0117\x03\x02\x02\x02\u0117t\x03" +
		"\x02\x02\x02\u0118\u0116\x03\x02\x02\x02\u0119\u011B\t\x1D\x02\x02\u011A" +
		"\u0119\x03\x02\x02\x02\u011B\u011C\x03\x02\x02\x02\u011C\u011A\x03\x02" +
		"\x02\x02\u011C\u011D\x03\x02\x02\x02\u011Dv\x03\x02\x02\x02\u011E\u011F" +
		"\t\x1E\x02\x02\u011F\u0120\x03\x02\x02\x02\u0120\u0121\b<\x02\x02\u0121" +
		"x\x03\x02\x02\x02\x05\x02\u0116\u011C\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!pl0Lexer.__ATN) {
			pl0Lexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(pl0Lexer._serializedATN));
		}

		return pl0Lexer.__ATN;
	}

}

