"use strict";
// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/redcode/redcode.g4 by ANTLR 4.7.3-SNAPSHOT
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
var Lexer_1 = require("antlr4ts/Lexer");
var LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
var VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
var Utils = require("antlr4ts/misc/Utils");
var redcodeLexer = /** @class */ (function (_super) {
    __extends(redcodeLexer, _super);
    // tslint:enable:no-trailing-whitespace
    function redcodeLexer(input) {
        var _this = _super.call(this, input) || this;
        _this._interp = new LexerATNSimulator_1.LexerATNSimulator(redcodeLexer._ATN, _this);
        return _this;
    }
    Object.defineProperty(redcodeLexer.prototype, "vocabulary", {
        // @Override
        // @NotNull
        get: function () {
            return redcodeLexer.VOCABULARY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(redcodeLexer.prototype, "grammarFileName", {
        // @Override
        get: function () { return "redcode.g4"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(redcodeLexer.prototype, "ruleNames", {
        // @Override
        get: function () { return redcodeLexer.ruleNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(redcodeLexer.prototype, "serializedATN", {
        // @Override
        get: function () { return redcodeLexer._serializedATN; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(redcodeLexer.prototype, "channelNames", {
        // @Override
        get: function () { return redcodeLexer.channelNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(redcodeLexer.prototype, "modeNames", {
        // @Override
        get: function () { return redcodeLexer.modeNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(redcodeLexer, "_ATN", {
        get: function () {
            if (!redcodeLexer.__ATN) {
                redcodeLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(redcodeLexer._serializedATN));
            }
            return redcodeLexer.__ATN;
        },
        enumerable: true,
        configurable: true
    });
    redcodeLexer.T__0 = 1;
    redcodeLexer.T__1 = 2;
    redcodeLexer.T__2 = 3;
    redcodeLexer.T__3 = 4;
    redcodeLexer.T__4 = 5;
    redcodeLexer.T__5 = 6;
    redcodeLexer.T__6 = 7;
    redcodeLexer.T__7 = 8;
    redcodeLexer.T__8 = 9;
    redcodeLexer.A = 10;
    redcodeLexer.B = 11;
    redcodeLexer.AB = 12;
    redcodeLexer.BA = 13;
    redcodeLexer.F = 14;
    redcodeLexer.X = 15;
    redcodeLexer.I = 16;
    redcodeLexer.DAT = 17;
    redcodeLexer.MOV = 18;
    redcodeLexer.ADD = 19;
    redcodeLexer.SUB = 20;
    redcodeLexer.MUL = 21;
    redcodeLexer.DIV = 22;
    redcodeLexer.MOD = 23;
    redcodeLexer.JMP = 24;
    redcodeLexer.JMZ = 25;
    redcodeLexer.JMN = 26;
    redcodeLexer.DJN = 27;
    redcodeLexer.CMP = 28;
    redcodeLexer.SLT = 29;
    redcodeLexer.DJZ = 30;
    redcodeLexer.SPL = 31;
    redcodeLexer.ORG = 32;
    redcodeLexer.NUMBER = 33;
    redcodeLexer.COMMENT = 34;
    redcodeLexer.EOL = 35;
    redcodeLexer.WS = 36;
    // tslint:disable:no-trailing-whitespace
    redcodeLexer.channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
    ];
    // tslint:disable:no-trailing-whitespace
    redcodeLexer.modeNames = [
        "DEFAULT_MODE",
    ];
    redcodeLexer.ruleNames = [
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
        "A", "B", "AB", "BA", "F", "X", "I", "DAT", "MOV", "ADD", "SUB", "MUL",
        "DIV", "MOD", "JMP", "JMZ", "JMN", "DJN", "CMP", "SLT", "DJZ", "SPL",
        "ORG", "NUMBER", "COMMENT", "EOL", "WS",
    ];
    redcodeLexer._LITERAL_NAMES = [
        undefined, "'.'", "','", "'#'", "'$'", "'@'", "'<'", "'>'", "'+'", "'-'",
        "'A'", "'B'", "'AB'", "'BA'", "'F'", "'X'", "'I'", "'DAT'", "'MOV'", "'ADD'",
        "'SUB'", "'MUL'", "'DIV'", "'MOD'", "'JMP'", "'JMZ'", "'JMN'", "'DJN'",
        "'CMP'", "'SLT'", "'DJZ'", "'SPL'", "'ORG'",
    ];
    redcodeLexer._SYMBOLIC_NAMES = [
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, "A", "B", "AB", "BA", "F", "X", "I",
        "DAT", "MOV", "ADD", "SUB", "MUL", "DIV", "MOD", "JMP", "JMZ", "JMN",
        "DJN", "CMP", "SLT", "DJZ", "SPL", "ORG", "NUMBER", "COMMENT", "EOL",
        "WS",
    ];
    redcodeLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(redcodeLexer._LITERAL_NAMES, redcodeLexer._SYMBOLIC_NAMES, []);
    redcodeLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02&\xC2\b\x01\x04" +
        "\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
        "\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
        "\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
        "\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
        "\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
        "\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
        "#\t#\x04$\t$\x04%\t%\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
        "\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03" +
        "\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03" +
        "\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03" +
        "\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03" +
        "\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
        "\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03" +
        "\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03" +
        "\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03" +
        "\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03" +
        " \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03\"\x06\"\xAF\n\"\r\"\x0E\"\xB0" +
        "\x03#\x03#\x07#\xB5\n#\f#\x0E#\xB8\v#\x03$\x06$\xBB\n$\r$\x0E$\xBC\x03" +
        "%\x03%\x03%\x03%\x02\x02\x02&\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02" +
        "\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02" +
        "\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%" +
        "\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B" +
        "5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02" +
        "%I\x02&\x03\x02\x05\x03\x022;\x04\x02\f\f\x0F\x0F\x04\x02\v\v\"\"\x02" +
        "\xC4\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02" +
        "\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02" +
        "\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02" +
        "\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02" +
        "\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02" +
        "\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'" +
        "\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02" +
        "\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02" +
        "\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03" +
        "\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02" +
        "\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02" +
        "I\x03\x02\x02\x02\x03K\x03\x02\x02\x02\x05M\x03\x02\x02\x02\x07O\x03\x02" +
        "\x02\x02\tQ\x03\x02\x02\x02\vS\x03\x02\x02\x02\rU\x03\x02\x02\x02\x0F" +
        "W\x03\x02\x02\x02\x11Y\x03\x02\x02\x02\x13[\x03\x02\x02\x02\x15]\x03\x02" +
        "\x02\x02\x17_\x03\x02\x02\x02\x19a\x03\x02\x02\x02\x1Bd\x03\x02\x02\x02" +
        "\x1Dg\x03\x02\x02\x02\x1Fi\x03\x02\x02\x02!k\x03\x02\x02\x02#m\x03\x02" +
        "\x02\x02%q\x03\x02\x02\x02\'u\x03\x02\x02\x02)y\x03\x02\x02\x02+}\x03" +
        "\x02\x02\x02-\x81\x03\x02\x02\x02/\x85\x03\x02\x02\x021\x89\x03\x02\x02" +
        "\x023\x8D\x03\x02\x02\x025\x91\x03\x02\x02\x027\x95\x03\x02\x02\x029\x99" +
        "\x03\x02\x02\x02;\x9D\x03\x02\x02\x02=\xA1\x03\x02\x02\x02?\xA5\x03\x02" +
        "\x02\x02A\xA9\x03\x02\x02\x02C\xAE\x03\x02\x02\x02E\xB2\x03\x02\x02\x02" +
        "G\xBA\x03\x02\x02\x02I\xBE\x03\x02\x02\x02KL\x070\x02\x02L\x04\x03\x02" +
        "\x02\x02MN\x07.\x02\x02N\x06\x03\x02\x02\x02OP\x07%\x02\x02P\b\x03\x02" +
        "\x02\x02QR\x07&\x02\x02R\n\x03\x02\x02\x02ST\x07B\x02\x02T\f\x03\x02\x02" +
        "\x02UV\x07>\x02\x02V\x0E\x03\x02\x02\x02WX\x07@\x02\x02X\x10\x03\x02\x02" +
        "\x02YZ\x07-\x02\x02Z\x12\x03\x02\x02\x02[\\\x07/\x02\x02\\\x14\x03\x02" +
        "\x02\x02]^\x07C\x02\x02^\x16\x03\x02\x02\x02_`\x07D\x02\x02`\x18\x03\x02" +
        "\x02\x02ab\x07C\x02\x02bc\x07D\x02\x02c\x1A\x03\x02\x02\x02de\x07D\x02" +
        "\x02ef\x07C\x02\x02f\x1C\x03\x02\x02\x02gh\x07H\x02\x02h\x1E\x03\x02\x02" +
        "\x02ij\x07Z\x02\x02j \x03\x02\x02\x02kl\x07K\x02\x02l\"\x03\x02\x02\x02" +
        "mn\x07F\x02\x02no\x07C\x02\x02op\x07V\x02\x02p$\x03\x02\x02\x02qr\x07" +
        "O\x02\x02rs\x07Q\x02\x02st\x07X\x02\x02t&\x03\x02\x02\x02uv\x07C\x02\x02" +
        "vw\x07F\x02\x02wx\x07F\x02\x02x(\x03\x02\x02\x02yz\x07U\x02\x02z{\x07" +
        "W\x02\x02{|\x07D\x02\x02|*\x03\x02\x02\x02}~\x07O\x02\x02~\x7F\x07W\x02" +
        "\x02\x7F\x80\x07N\x02\x02\x80,\x03\x02\x02\x02\x81\x82\x07F\x02\x02\x82" +
        "\x83\x07K\x02\x02\x83\x84\x07X\x02\x02\x84.\x03\x02\x02\x02\x85\x86\x07" +
        "O\x02\x02\x86\x87\x07Q\x02\x02\x87\x88\x07F\x02\x02\x880\x03\x02\x02\x02" +
        "\x89\x8A\x07L\x02\x02\x8A\x8B\x07O\x02\x02\x8B\x8C\x07R\x02\x02\x8C2\x03" +
        "\x02\x02\x02\x8D\x8E\x07L\x02\x02\x8E\x8F\x07O\x02\x02\x8F\x90\x07\\\x02" +
        "\x02\x904\x03\x02\x02\x02\x91\x92\x07L\x02\x02\x92\x93\x07O\x02\x02\x93" +
        "\x94\x07P\x02\x02\x946\x03\x02\x02\x02\x95\x96\x07F\x02\x02\x96\x97\x07" +
        "L\x02\x02\x97\x98\x07P\x02\x02\x988\x03\x02\x02\x02\x99\x9A\x07E\x02\x02" +
        "\x9A\x9B\x07O\x02\x02\x9B\x9C\x07R\x02\x02\x9C:\x03\x02\x02\x02\x9D\x9E" +
        "\x07U\x02\x02\x9E\x9F\x07N\x02\x02\x9F\xA0\x07V\x02\x02\xA0<\x03\x02\x02" +
        "\x02\xA1\xA2\x07F\x02\x02\xA2\xA3\x07L\x02\x02\xA3\xA4\x07\\\x02\x02\xA4" +
        ">\x03\x02\x02\x02\xA5\xA6\x07U\x02\x02\xA6\xA7\x07R\x02\x02\xA7\xA8\x07" +
        "N\x02\x02\xA8@\x03\x02\x02\x02\xA9\xAA\x07Q\x02\x02\xAA\xAB\x07T\x02\x02" +
        "\xAB\xAC\x07I\x02\x02\xACB\x03\x02\x02\x02\xAD\xAF\t\x02\x02\x02\xAE\xAD" +
        "\x03\x02\x02\x02\xAF\xB0\x03\x02\x02\x02\xB0\xAE\x03\x02\x02\x02\xB0\xB1" +
        "\x03\x02\x02\x02\xB1D\x03\x02\x02\x02\xB2\xB6\x07=\x02\x02\xB3\xB5\n\x03" +
        "\x02\x02\xB4\xB3\x03\x02\x02\x02\xB5\xB8\x03\x02\x02\x02\xB6\xB4\x03\x02" +
        "\x02\x02\xB6\xB7\x03\x02\x02\x02\xB7F\x03\x02\x02\x02\xB8\xB6\x03\x02" +
        "\x02\x02\xB9\xBB\t\x03\x02\x02\xBA\xB9\x03\x02\x02\x02\xBB\xBC\x03\x02" +
        "\x02\x02\xBC\xBA\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBDH\x03\x02" +
        "\x02\x02\xBE\xBF\t\x04\x02\x02\xBF\xC0\x03\x02\x02\x02\xC0\xC1\b%\x02" +
        "\x02\xC1J\x03\x02\x02\x02\x06\x02\xB0\xB6\xBC\x03\b\x02\x02";
    return redcodeLexer;
}(Lexer_1.Lexer));
exports.redcodeLexer = redcodeLexer;
