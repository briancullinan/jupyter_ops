// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/cool/COOL.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class COOLLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly CLASS = 10;
	public static readonly ELSE = 11;
	public static readonly FALSE = 12;
	public static readonly FI = 13;
	public static readonly IF = 14;
	public static readonly IN = 15;
	public static readonly INHERITS = 16;
	public static readonly ISVOID = 17;
	public static readonly LET = 18;
	public static readonly LOOP = 19;
	public static readonly POOL = 20;
	public static readonly THEN = 21;
	public static readonly WHILE = 22;
	public static readonly CASE = 23;
	public static readonly ESAC = 24;
	public static readonly NEW = 25;
	public static readonly OF = 26;
	public static readonly NOT = 27;
	public static readonly TRUE = 28;
	public static readonly STRING = 29;
	public static readonly INT = 30;
	public static readonly TYPEID = 31;
	public static readonly OBJECTID = 32;
	public static readonly ASSIGNMENT = 33;
	public static readonly CASE_ARROW = 34;
	public static readonly ADD = 35;
	public static readonly MINUS = 36;
	public static readonly MULTIPLY = 37;
	public static readonly DIVISION = 38;
	public static readonly LESS_THAN = 39;
	public static readonly LESS_EQUAL = 40;
	public static readonly EQUAL = 41;
	public static readonly INTEGER_NEGATIVE = 42;
	public static readonly OPEN_COMMENT = 43;
	public static readonly CLOSE_COMMENT = 44;
	public static readonly COMMENT = 45;
	public static readonly ONE_LINE_COMMENT = 46;
	public static readonly WHITESPACE = 47;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"CLASS", "ELSE", "FALSE", "FI", "IF", "IN", "INHERITS", "ISVOID", "LET", 
		"LOOP", "POOL", "THEN", "WHILE", "CASE", "ESAC", "NEW", "OF", "NOT", "TRUE", 
		"STRING", "INT", "TYPEID", "OBJECTID", "ASSIGNMENT", "CASE_ARROW", "ADD", 
		"MINUS", "MULTIPLY", "DIVISION", "LESS_THAN", "LESS_EQUAL", "EQUAL", "INTEGER_NEGATIVE", 
		"A", "C", "D", "E", "F", "H", "I", "L", "N", "O", "P", "R", "S", "T", 
		"U", "V", "W", "ESC", "UNICODE", "HEX", "OPEN_COMMENT", "CLOSE_COMMENT", 
		"COMMENT", "ONE_LINE_COMMENT", "WHITESPACE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'{'", "'}'", "'('", "','", "')'", "':'", "'@'", "'.'", 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "'<-'", "'=>'", "'+'", "'-'", "'*'", "'/'", "'<'", 
		"'<='", "'='", "'~'", "'(*'", "'*)'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "CLASS", "ELSE", "FALSE", "FI", "IF", 
		"IN", "INHERITS", "ISVOID", "LET", "LOOP", "POOL", "THEN", "WHILE", "CASE", 
		"ESAC", "NEW", "OF", "NOT", "TRUE", "STRING", "INT", "TYPEID", "OBJECTID", 
		"ASSIGNMENT", "CASE_ARROW", "ADD", "MINUS", "MULTIPLY", "DIVISION", "LESS_THAN", 
		"LESS_EQUAL", "EQUAL", "INTEGER_NEGATIVE", "OPEN_COMMENT", "CLOSE_COMMENT", 
		"COMMENT", "ONE_LINE_COMMENT", "WHITESPACE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(COOLLexer._LITERAL_NAMES, COOLLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return COOLLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(COOLLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "COOL.g4"; }

	// @Override
	public get ruleNames(): string[] { return COOLLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return COOLLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return COOLLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return COOLLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x021\u0182\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\v\x03" +
		"\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15" +
		"\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C" +
		"\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x07\x1E" +
		"\xFC\n\x1E\f\x1E\x0E\x1E\xFF\v\x1E\x03\x1E\x03\x1E\x03\x1F\x06\x1F\u0104" +
		"\n\x1F\r\x1F\x0E\x1F\u0105\x03 \x03 \x07 \u010A\n \f \x0E \u010D\v \x03" +
		"!\x03!\x07!\u0111\n!\f!\x0E!\u0114\v!\x03\"\x03\"\x03\"\x03#\x03#\x03" +
		"#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03)\x03)\x03)\x03" +
		"*\x03*\x03+\x03+\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x030\x030\x03" +
		"1\x031\x032\x032\x033\x033\x034\x034\x035\x035\x036\x036\x037\x037\x03" +
		"8\x038\x039\x039\x03:\x03:\x03;\x03;\x03<\x03<\x03=\x03=\x03=\x05=\u0152" +
		"\n=\x03>\x03>\x03>\x03>\x03>\x03>\x03?\x03?\x03@\x03@\x03@\x03A\x03A\x03" +
		"A\x03B\x03B\x03B\x07B\u0165\nB\fB\x0EB\u0168\vB\x03B\x03B\x03B\x03B\x03" +
		"C\x03C\x03C\x03C\x07C\u0172\nC\fC\x0EC\u0175\vC\x03C\x05C\u0178\nC\x03" +
		"C\x03C\x03D\x06D\u017D\nD\rD\x0ED\u017E\x03D\x03D\x03\u0166\x02\x02E\x03" +
		"\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t" +
		"\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02" +
		"\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17" +
		"-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F" +
		"=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S" +
		"\x02+U\x02,W\x02\x02Y\x02\x02[\x02\x02]\x02\x02_\x02\x02a\x02\x02c\x02" +
		"\x02e\x02\x02g\x02\x02i\x02\x02k\x02\x02m\x02\x02o\x02\x02q\x02\x02s\x02" +
		"\x02u\x02\x02w\x02\x02y\x02\x02{\x02\x02}\x02\x02\x7F\x02-\x81\x02.\x83" +
		"\x02/\x85\x020\x87\x021\x03\x02\x1C\x04\x02$$^^\x03\x022;\x03\x02C\\\x06" +
		"\x022;C\\aac|\x03\x02c|\x04\x02CCcc\x04\x02EEee\x04\x02FFff\x04\x02GG" +
		"gg\x04\x02HHhh\x04\x02JJjj\x04\x02KKkk\x04\x02NNnn\x04\x02PPpp\x04\x02" +
		"QQqq\x04\x02RRrr\x04\x02TTtt\x04\x02UUuu\x04\x02VVvv\x04\x02WWww\x04\x02" +
		"XXxx\x04\x02YYyy\n\x02$$11^^ddhhppttvv\x05\x022;CHch\x03\x02\f\f\x05\x02" +
		"\v\f\x0E\x0F\"\"\x02\u0178\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03" +
		"\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02" +
		"\x02\x02U\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02" +
		"\x02\x02\x83\x03\x02\x02\x02\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02" +
		"\x02\x03\x89\x03\x02\x02\x02\x05\x8B\x03\x02\x02\x02\x07\x8D\x03\x02\x02" +
		"\x02\t\x8F\x03\x02\x02\x02\v\x91\x03\x02\x02\x02\r\x93\x03\x02\x02\x02" +
		"\x0F\x95\x03\x02\x02\x02\x11\x97\x03\x02\x02\x02\x13\x99\x03\x02\x02\x02" +
		"\x15\x9B\x03\x02\x02\x02\x17\xA1\x03\x02\x02\x02\x19\xA6\x03\x02\x02\x02" +
		"\x1B\xAC\x03\x02\x02\x02\x1D\xAF\x03\x02\x02\x02\x1F\xB2\x03\x02\x02\x02" +
		"!\xB5\x03\x02\x02\x02#\xBE\x03\x02\x02\x02%\xC5\x03\x02\x02\x02\'\xC9" +
		"\x03\x02\x02\x02)\xCE\x03\x02\x02\x02+\xD3\x03\x02\x02\x02-\xD8\x03\x02" +
		"\x02\x02/\xDE\x03\x02\x02\x021\xE3\x03\x02\x02\x023\xE8\x03\x02\x02\x02" +
		"5\xEC\x03\x02\x02\x027\xEF\x03\x02\x02\x029\xF3\x03\x02\x02\x02;\xF8\x03" +
		"\x02\x02\x02=\u0103\x03\x02\x02\x02?\u0107\x03\x02\x02\x02A\u010E\x03" +
		"\x02\x02\x02C\u0115\x03\x02\x02\x02E\u0118\x03\x02\x02\x02G\u011B\x03" +
		"\x02\x02\x02I\u011D\x03\x02\x02\x02K\u011F\x03\x02\x02\x02M\u0121\x03" +
		"\x02\x02\x02O\u0123\x03\x02\x02\x02Q\u0125\x03\x02\x02\x02S\u0128\x03" +
		"\x02\x02\x02U\u012A\x03\x02\x02\x02W\u012C\x03\x02\x02\x02Y\u012E\x03" +
		"\x02\x02\x02[\u0130\x03\x02\x02\x02]\u0132\x03\x02\x02\x02_\u0134\x03" +
		"\x02\x02\x02a\u0136\x03\x02\x02\x02c\u0138\x03\x02\x02\x02e\u013A\x03" +
		"\x02\x02\x02g\u013C\x03\x02\x02\x02i\u013E\x03\x02\x02\x02k\u0140\x03" +
		"\x02\x02\x02m\u0142\x03\x02\x02\x02o\u0144\x03\x02\x02\x02q\u0146\x03" +
		"\x02\x02\x02s\u0148\x03\x02\x02\x02u\u014A\x03\x02\x02\x02w\u014C\x03" +
		"\x02\x02\x02y\u014E\x03\x02\x02\x02{\u0153\x03\x02\x02\x02}\u0159\x03" +
		"\x02\x02\x02\x7F\u015B\x03\x02\x02\x02\x81\u015E\x03\x02\x02\x02\x83\u0161" +
		"\x03\x02\x02\x02\x85\u016D\x03\x02\x02\x02\x87\u017C\x03\x02\x02\x02\x89" +
		"\x8A\x07=\x02\x02\x8A\x04\x03\x02\x02\x02\x8B\x8C\x07}\x02\x02\x8C\x06" +
		"\x03\x02\x02\x02\x8D\x8E\x07\x7F\x02\x02\x8E\b\x03\x02\x02\x02\x8F\x90" +
		"\x07*\x02\x02\x90\n\x03\x02\x02\x02\x91\x92\x07.\x02\x02\x92\f\x03\x02" +
		"\x02\x02\x93\x94\x07+\x02\x02\x94\x0E\x03\x02\x02\x02\x95\x96\x07<\x02" +
		"\x02\x96\x10\x03\x02\x02\x02\x97\x98\x07B\x02\x02\x98\x12\x03\x02\x02" +
		"\x02\x99\x9A\x070\x02\x02\x9A\x14\x03\x02\x02\x02\x9B\x9C\x05Y-\x02\x9C" +
		"\x9D\x05e3\x02\x9D\x9E\x05W,\x02\x9E\x9F\x05o8\x02\x9F\xA0\x05o8\x02\xA0" +
		"\x16\x03\x02\x02\x02\xA1\xA2\x05]/\x02\xA2\xA3\x05e3\x02\xA3\xA4\x05o" +
		"8\x02\xA4\xA5\x05]/\x02\xA5\x18\x03\x02\x02\x02\xA6\xA7\x07h\x02\x02\xA7" +
		"\xA8\x05W,\x02\xA8\xA9\x05e3\x02\xA9\xAA\x05o8\x02\xAA\xAB\x05]/\x02\xAB" +
		"\x1A\x03\x02\x02\x02\xAC\xAD\x05_0\x02\xAD\xAE\x05c2\x02\xAE\x1C\x03\x02" +
		"\x02\x02\xAF\xB0\x05c2\x02\xB0\xB1\x05_0\x02\xB1\x1E\x03\x02\x02\x02\xB2" +
		"\xB3\x05c2\x02\xB3\xB4\x05g4\x02\xB4 \x03\x02\x02\x02\xB5\xB6\x05c2\x02" +
		"\xB6\xB7\x05g4\x02\xB7\xB8\x05a1\x02\xB8\xB9\x05]/\x02\xB9\xBA\x05m7\x02" +
		"\xBA\xBB\x05c2\x02\xBB\xBC\x05q9\x02\xBC\xBD\x05o8\x02\xBD\"\x03\x02\x02" +
		"\x02\xBE\xBF\x05c2\x02\xBF\xC0\x05o8\x02\xC0\xC1\x05u;\x02\xC1\xC2\x05" +
		"i5\x02\xC2\xC3\x05c2\x02\xC3\xC4\x05[.\x02\xC4$\x03\x02\x02\x02\xC5\xC6" +
		"\x05e3\x02\xC6\xC7\x05]/\x02\xC7\xC8\x05q9\x02\xC8&\x03\x02\x02\x02\xC9" +
		"\xCA\x05e3\x02\xCA\xCB\x05i5\x02\xCB\xCC\x05i5\x02\xCC\xCD\x05k6\x02\xCD" +
		"(\x03\x02\x02\x02\xCE\xCF\x05k6\x02\xCF\xD0\x05i5\x02\xD0\xD1\x05i5\x02" +
		"\xD1\xD2\x05e3\x02\xD2*\x03\x02\x02\x02\xD3\xD4\x05q9\x02\xD4\xD5\x05" +
		"a1\x02\xD5\xD6\x05]/\x02\xD6\xD7\x05g4\x02\xD7,\x03\x02\x02\x02\xD8\xD9" +
		"\x05w<\x02\xD9\xDA\x05a1\x02\xDA\xDB\x05c2\x02\xDB\xDC\x05e3\x02\xDC\xDD" +
		"\x05]/\x02\xDD.\x03\x02\x02\x02\xDE\xDF\x05Y-\x02\xDF\xE0\x05W,\x02\xE0" +
		"\xE1\x05o8\x02\xE1\xE2\x05]/\x02\xE20\x03\x02\x02\x02\xE3\xE4\x05]/\x02" +
		"\xE4\xE5\x05o8\x02\xE5\xE6\x05W,\x02\xE6\xE7\x05Y-\x02\xE72\x03\x02\x02" +
		"\x02\xE8\xE9\x05g4\x02\xE9\xEA\x05]/\x02\xEA\xEB\x05w<\x02\xEB4\x03\x02" +
		"\x02\x02\xEC\xED\x05i5\x02\xED\xEE\x05_0\x02\xEE6\x03\x02\x02\x02\xEF" +
		"\xF0\x05g4\x02\xF0\xF1\x05i5\x02\xF1\xF2\x05q9\x02\xF28\x03\x02\x02\x02" +
		"\xF3\xF4\x07v\x02\x02\xF4\xF5\x05m7\x02\xF5\xF6\x05s:\x02\xF6\xF7\x05" +
		"]/\x02\xF7:\x03\x02\x02\x02\xF8\xFD\x07$\x02\x02\xF9\xFC\x05y=\x02\xFA" +
		"\xFC\n\x02\x02\x02\xFB\xF9\x03\x02\x02\x02\xFB\xFA\x03\x02\x02\x02\xFC" +
		"\xFF\x03\x02\x02\x02\xFD\xFB\x03\x02\x02\x02\xFD\xFE\x03\x02\x02\x02\xFE" +
		"\u0100\x03\x02\x02\x02\xFF\xFD\x03\x02\x02\x02\u0100\u0101\x07$\x02\x02" +
		"\u0101<\x03\x02\x02\x02\u0102\u0104\t\x03\x02\x02\u0103\u0102\x03\x02" +
		"\x02\x02\u0104\u0105\x03\x02\x02\x02\u0105\u0103\x03\x02\x02\x02\u0105" +
		"\u0106\x03\x02\x02\x02\u0106>\x03\x02\x02\x02\u0107\u010B\t\x04\x02\x02" +
		"\u0108\u010A\t\x05\x02\x02\u0109\u0108\x03\x02\x02\x02\u010A\u010D\x03" +
		"\x02\x02\x02\u010B\u0109\x03\x02\x02\x02\u010B\u010C\x03\x02\x02\x02\u010C" +
		"@\x03\x02\x02\x02\u010D\u010B\x03\x02\x02\x02\u010E\u0112\t\x06\x02\x02" +
		"\u010F\u0111\t\x05\x02\x02\u0110\u010F\x03\x02\x02\x02\u0111\u0114\x03" +
		"\x02\x02\x02\u0112\u0110\x03\x02\x02\x02\u0112\u0113\x03\x02\x02\x02\u0113" +
		"B\x03\x02\x02\x02\u0114\u0112\x03\x02\x02\x02\u0115\u0116\x07>\x02\x02" +
		"\u0116\u0117\x07/\x02\x02\u0117D\x03\x02\x02\x02\u0118\u0119\x07?\x02" +
		"\x02\u0119\u011A\x07@\x02\x02\u011AF\x03\x02\x02\x02\u011B\u011C\x07-" +
		"\x02\x02\u011CH\x03\x02\x02\x02\u011D\u011E\x07/\x02\x02\u011EJ\x03\x02" +
		"\x02\x02\u011F\u0120\x07,\x02\x02\u0120L\x03\x02\x02\x02\u0121\u0122\x07" +
		"1\x02\x02\u0122N\x03\x02\x02\x02\u0123\u0124\x07>\x02\x02\u0124P\x03\x02" +
		"\x02\x02\u0125\u0126\x07>\x02\x02\u0126\u0127\x07?\x02\x02\u0127R\x03" +
		"\x02\x02\x02\u0128\u0129\x07?\x02\x02\u0129T\x03\x02\x02\x02\u012A\u012B" +
		"\x07\x80\x02\x02\u012BV\x03\x02\x02\x02\u012C\u012D\t\x07\x02\x02\u012D" +
		"X\x03\x02\x02\x02\u012E\u012F\t\b\x02\x02\u012FZ\x03\x02\x02\x02\u0130" +
		"\u0131\t\t\x02\x02\u0131\\\x03\x02\x02\x02\u0132\u0133\t\n\x02\x02\u0133" +
		"^\x03\x02\x02\x02\u0134\u0135\t\v\x02\x02\u0135`\x03\x02\x02\x02\u0136" +
		"\u0137\t\f\x02\x02\u0137b\x03\x02\x02\x02\u0138\u0139\t\r\x02\x02\u0139" +
		"d\x03\x02\x02\x02\u013A\u013B\t\x0E\x02\x02\u013Bf\x03\x02\x02\x02\u013C" +
		"\u013D\t\x0F\x02\x02\u013Dh\x03\x02\x02\x02\u013E\u013F\t\x10\x02\x02" +
		"\u013Fj\x03\x02\x02\x02\u0140\u0141\t\x11\x02\x02\u0141l\x03\x02\x02\x02" +
		"\u0142\u0143\t\x12\x02\x02\u0143n\x03\x02\x02\x02\u0144\u0145\t\x13\x02" +
		"\x02\u0145p\x03\x02\x02\x02\u0146\u0147\t\x14\x02\x02\u0147r\x03\x02\x02" +
		"\x02\u0148\u0149\t\x15\x02\x02\u0149t\x03\x02\x02\x02\u014A\u014B\t\x16" +
		"\x02\x02\u014Bv\x03\x02\x02\x02\u014C\u014D\t\x17\x02\x02\u014Dx\x03\x02" +
		"\x02\x02\u014E\u0151\x07^\x02\x02\u014F\u0152\t\x18\x02\x02\u0150\u0152" +
		"\x05{>\x02\u0151\u014F\x03\x02\x02\x02\u0151\u0150\x03\x02\x02\x02\u0152" +
		"z\x03\x02\x02\x02\u0153\u0154\x07w\x02\x02\u0154\u0155\x05}?\x02\u0155" +
		"\u0156\x05}?\x02\u0156\u0157\x05}?\x02\u0157\u0158\x05}?\x02\u0158|\x03" +
		"\x02\x02\x02\u0159\u015A\t\x19\x02\x02\u015A~\x03\x02\x02\x02\u015B\u015C" +
		"\x07*\x02\x02\u015C\u015D\x07,\x02\x02\u015D\x80\x03\x02\x02\x02\u015E" +
		"\u015F\x07,\x02\x02\u015F\u0160\x07+\x02\x02\u0160\x82\x03\x02\x02\x02" +
		"\u0161\u0166\x05\x7F@\x02\u0162\u0165\x05\x83B\x02\u0163\u0165\v\x02\x02" +
		"\x02\u0164\u0162\x03\x02\x02\x02\u0164\u0163\x03\x02\x02\x02\u0165\u0168" +
		"\x03\x02\x02\x02\u0166\u0167\x03\x02\x02\x02\u0166\u0164\x03\x02\x02\x02" +
		"\u0167\u0169\x03\x02\x02\x02\u0168\u0166\x03\x02\x02\x02\u0169\u016A\x05" +
		"\x81A\x02\u016A\u016B\x03\x02\x02\x02\u016B\u016C\bB\x02\x02\u016C\x84" +
		"\x03\x02\x02\x02\u016D\u016E\x07/\x02\x02\u016E\u016F\x07/\x02\x02\u016F" +
		"\u0173\x03\x02\x02\x02\u0170\u0172\n\x1A\x02\x02\u0171\u0170\x03\x02\x02" +
		"\x02\u0172\u0175\x03\x02\x02\x02\u0173\u0171\x03\x02\x02\x02\u0173\u0174" +
		"\x03\x02\x02\x02\u0174\u0177\x03\x02\x02\x02\u0175\u0173\x03\x02\x02\x02" +
		"\u0176\u0178\x07\f\x02\x02\u0177\u0176\x03\x02\x02\x02\u0177\u0178\x03" +
		"\x02\x02\x02\u0178\u0179\x03\x02\x02\x02\u0179\u017A\bC\x02\x02\u017A" +
		"\x86\x03\x02\x02\x02\u017B\u017D\t\x1B\x02\x02\u017C\u017B\x03\x02\x02" +
		"\x02\u017D\u017E\x03\x02\x02\x02\u017E\u017C\x03\x02\x02\x02\u017E\u017F" +
		"\x03\x02\x02\x02\u017F\u0180\x03\x02\x02\x02\u0180\u0181\bD\x02\x02\u0181" +
		"\x88\x03\x02\x02\x02\x0E\x02\xFB\xFD\u0105\u010B\u0112\u0151\u0164\u0166" +
		"\u0173\u0177\u017E\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!COOLLexer.__ATN) {
			COOLLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(COOLLexer._serializedATN));
		}

		return COOLLexer.__ATN;
	}

}

