// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/abnf/Abnf.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class AbnfLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly NumberValue = 8;
	public static readonly ProseValue = 9;
	public static readonly ID = 10;
	public static readonly INT = 11;
	public static readonly COMMENT = 12;
	public static readonly WS = 13;
	public static readonly STRING = 14;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "NumberValue", 
		"BinaryValue", "DecimalValue", "HexValue", "ProseValue", "ID", "INT", 
		"COMMENT", "WS", "STRING", "LETTER", "BIT", "DIGIT", "HEX_DIGIT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'='", "'/'", "'*'", "'('", "')'", "'['", "']'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "NumberValue", "ProseValue", "ID", "INT", "COMMENT", "WS", 
		"STRING",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(AbnfLexer._LITERAL_NAMES, AbnfLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return AbnfLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(AbnfLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Abnf.g4"; }

	// @Override
	public get ruleNames(): string[] { return AbnfLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return AbnfLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return AbnfLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return AbnfLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x10\xC9\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x05\t@\n\t\x03\n\x03" +
		"\n\x06\nD\n\n\r\n\x0E\nE\x03\n\x03\n\x06\nJ\n\n\r\n\x0E\nK\x06\nN\n\n" +
		"\r\n\x0E\nO\x03\n\x03\n\x06\nT\n\n\r\n\x0E\nU\x05\nX\n\n\x03\v\x03\v\x06" +
		"\v\\\n\v\r\v\x0E\v]\x03\v\x03\v\x06\vb\n\v\r\v\x0E\vc\x06\vf\n\v\r\v\x0E" +
		"\vg\x03\v\x03\v\x06\vl\n\v\r\v\x0E\vm\x05\vp\n\v\x03\f\x03\f\x06\ft\n" +
		"\f\r\f\x0E\fu\x03\f\x03\f\x06\fz\n\f\r\f\x0E\f{\x06\f~\n\f\r\f\x0E\f\x7F" +
		"\x03\f\x03\f\x06\f\x84\n\f\r\f\x0E\f\x85\x05\f\x88\n\f\x03\r\x03\r\x07" +
		"\r\x8C\n\r\f\r\x0E\r\x8F\v\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x07\x0E\x97\n\x0E\f\x0E\x0E\x0E\x9A\v\x0E\x03\x0F\x06\x0F\x9D\n\x0F\r" +
		"\x0F\x0E\x0F\x9E\x03\x10\x03\x10\x07\x10\xA3\n\x10\f\x10\x0E\x10\xA6\v" +
		"\x10\x03\x10\x05\x10\xA9\n\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11" +
		"\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x05\x12\xB7\n" +
		"\x12\x03\x12\x03\x12\x07\x12\xBB\n\x12\f\x12\x0E\x12\xBE\v\x12\x03\x12" +
		"\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16" +
		"\x02\x02\x02\x17\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07" +
		"\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\x02\x15\x02\x02\x17\x02\x02\x19\x02" +
		"\v\x1B\x02\f\x1D\x02\r\x1F\x02\x0E!\x02\x0F#\x02\x10%\x02\x02\'\x02\x02" +
		")\x02\x02+\x02\x02\x03\x02\b\x03\x02@@\x04\x02\f\f\x0F\x0F\x05\x02\v\f" +
		"\x0F\x0F\"\"\x03\x02$$\x04\x02C\\c|\x05\x022;CHch\x02\xDF\x02\x03\x03" +
		"\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03" +
		"\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02" +
		"\x02\x02\x02\x11\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02" +
		"\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02" +
		"\x02\x02\x02#\x03\x02\x02\x02\x03-\x03\x02\x02\x02\x05/\x03\x02\x02\x02" +
		"\x071\x03\x02\x02\x02\t3\x03\x02\x02\x02\v5\x03\x02\x02\x02\r7\x03\x02" +
		"\x02\x02\x0F9\x03\x02\x02\x02\x11;\x03\x02\x02\x02\x13A\x03\x02\x02\x02" +
		"\x15Y\x03\x02\x02\x02\x17q\x03\x02\x02\x02\x19\x89\x03\x02\x02\x02\x1B" +
		"\x92\x03\x02\x02\x02\x1D\x9C\x03\x02\x02\x02\x1F\xA0\x03\x02\x02\x02!" +
		"\xAE\x03\x02\x02\x02#\xB6\x03\x02\x02\x02%\xC1\x03\x02\x02\x02\'\xC3\x03" +
		"\x02\x02\x02)\xC5\x03\x02\x02\x02+\xC7\x03\x02\x02\x02-.\x07?\x02\x02" +
		".\x04\x03\x02\x02\x02/0\x071\x02\x020\x06\x03\x02\x02\x0212\x07,\x02\x02" +
		"2\b\x03\x02\x02\x0234\x07*\x02\x024\n\x03\x02\x02\x0256\x07+\x02\x026" +
		"\f\x03\x02\x02\x0278\x07]\x02\x028\x0E\x03\x02\x02\x029:\x07_\x02\x02" +
		":\x10\x03\x02\x02\x02;?\x07\'\x02\x02<@\x05\x13\n\x02=@\x05\x15\v\x02" +
		">@\x05\x17\f\x02?<\x03\x02\x02\x02?=\x03\x02\x02\x02?>\x03\x02\x02\x02" +
		"@\x12\x03\x02\x02\x02AC\x07d\x02\x02BD\x05\'\x14\x02CB\x03\x02\x02\x02" +
		"DE\x03\x02\x02\x02EC\x03\x02\x02\x02EF\x03\x02\x02\x02FW\x03\x02\x02\x02" +
		"GI\x070\x02\x02HJ\x05\'\x14\x02IH\x03\x02\x02\x02JK\x03\x02\x02\x02KI" +
		"\x03\x02\x02\x02KL\x03\x02\x02\x02LN\x03\x02\x02\x02MG\x03\x02\x02\x02" +
		"NO\x03\x02\x02\x02OM\x03\x02\x02\x02OP\x03\x02\x02\x02PX\x03\x02\x02\x02" +
		"QS\x07/\x02\x02RT\x05\'\x14\x02SR\x03\x02\x02\x02TU\x03\x02\x02\x02US" +
		"\x03\x02\x02\x02UV\x03\x02\x02\x02VX\x03\x02\x02\x02WM\x03\x02\x02\x02" +
		"WQ\x03\x02\x02\x02WX\x03\x02\x02\x02X\x14\x03\x02\x02\x02Y[\x07f\x02\x02" +
		"Z\\\x05)\x15\x02[Z\x03\x02\x02\x02\\]\x03\x02\x02\x02][\x03\x02\x02\x02" +
		"]^\x03\x02\x02\x02^o\x03\x02\x02\x02_a\x070\x02\x02`b\x05)\x15\x02a`\x03" +
		"\x02\x02\x02bc\x03\x02\x02\x02ca\x03\x02\x02\x02cd\x03\x02\x02\x02df\x03" +
		"\x02\x02\x02e_\x03\x02\x02\x02fg\x03\x02\x02\x02ge\x03\x02\x02\x02gh\x03" +
		"\x02\x02\x02hp\x03\x02\x02\x02ik\x07/\x02\x02jl\x05)\x15\x02kj\x03\x02" +
		"\x02\x02lm\x03\x02\x02\x02mk\x03\x02\x02\x02mn\x03\x02\x02\x02np\x03\x02" +
		"\x02\x02oe\x03\x02\x02\x02oi\x03\x02\x02\x02op\x03\x02\x02\x02p\x16\x03" +
		"\x02\x02\x02qs\x07z\x02\x02rt\x05+\x16\x02sr\x03\x02\x02\x02tu\x03\x02" +
		"\x02\x02us\x03\x02\x02\x02uv\x03\x02\x02\x02v\x87\x03\x02\x02\x02wy\x07" +
		"0\x02\x02xz\x05+\x16\x02yx\x03\x02\x02\x02z{\x03\x02\x02\x02{y\x03\x02" +
		"\x02\x02{|\x03\x02\x02\x02|~\x03\x02\x02\x02}w\x03\x02\x02\x02~\x7F\x03" +
		"\x02\x02\x02\x7F}\x03\x02\x02\x02\x7F\x80\x03\x02\x02\x02\x80\x88\x03" +
		"\x02\x02\x02\x81\x83\x07/\x02\x02\x82\x84\x05+\x16\x02\x83\x82\x03\x02" +
		"\x02\x02\x84\x85\x03\x02\x02\x02\x85\x83\x03\x02\x02\x02\x85\x86\x03\x02" +
		"\x02\x02\x86\x88\x03\x02\x02\x02\x87}\x03\x02\x02\x02\x87\x81\x03\x02" +
		"\x02\x02\x87\x88\x03\x02\x02\x02\x88\x18\x03\x02\x02\x02\x89\x8D\x07>" +
		"\x02\x02\x8A\x8C\n\x02\x02\x02\x8B\x8A\x03\x02\x02\x02\x8C\x8F\x03\x02" +
		"\x02\x02\x8D\x8B\x03\x02\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E\x90\x03\x02" +
		"\x02\x02\x8F\x8D\x03\x02\x02\x02\x90\x91\x07@\x02\x02\x91\x1A\x03\x02" +
		"\x02\x02\x92\x98\x05%\x13\x02\x93\x97\x05%\x13\x02\x94\x97\x05)\x15\x02" +
		"\x95\x97\x07/\x02\x02\x96\x93\x03\x02\x02\x02\x96\x94\x03\x02\x02\x02" +
		"\x96\x95\x03\x02\x02\x02\x97\x9A\x03\x02\x02\x02\x98\x96\x03\x02\x02\x02" +
		"\x98\x99\x03\x02\x02\x02\x99\x1C\x03\x02\x02\x02\x9A\x98\x03\x02\x02\x02" +
		"\x9B\x9D\x042;\x02\x9C\x9B\x03\x02\x02\x02\x9D\x9E\x03\x02\x02\x02\x9E" +
		"\x9C\x03\x02\x02\x02\x9E\x9F\x03\x02\x02\x02\x9F\x1E\x03\x02\x02\x02\xA0" +
		"\xA4\x07=\x02\x02\xA1\xA3\n\x03\x02\x02\xA2\xA1\x03\x02\x02\x02\xA3\xA6" +
		"\x03\x02\x02\x02\xA4\xA2\x03\x02\x02\x02\xA4\xA5\x03\x02\x02\x02\xA5\xA8" +
		"\x03\x02\x02\x02\xA6\xA4\x03\x02\x02\x02\xA7\xA9\x07\x0F\x02\x02\xA8\xA7" +
		"\x03\x02\x02\x02\xA8\xA9\x03\x02\x02\x02\xA9\xAA\x03\x02\x02\x02\xAA\xAB" +
		"\x07\f\x02\x02\xAB\xAC\x03\x02\x02\x02\xAC\xAD\b\x10\x02\x02\xAD \x03" +
		"\x02\x02\x02\xAE\xAF\t\x04\x02\x02\xAF\xB0\x03\x02\x02\x02\xB0\xB1\b\x11" +
		"\x02\x02\xB1\"\x03\x02\x02\x02\xB2\xB3\x07\'\x02\x02\xB3\xB7\x07u\x02" +
		"\x02\xB4\xB5\x07\'\x02\x02\xB5\xB7\x07k\x02\x02\xB6\xB2\x03\x02\x02\x02" +
		"\xB6\xB4\x03\x02\x02\x02\xB6\xB7\x03\x02\x02\x02\xB7\xB8\x03\x02\x02\x02" +
		"\xB8\xBC\x07$\x02\x02\xB9\xBB\n\x05\x02\x02\xBA\xB9\x03\x02\x02\x02\xBB" +
		"\xBE\x03\x02\x02\x02\xBC\xBA\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD" +
		"\xBF\x03\x02\x02\x02\xBE\xBC\x03\x02\x02\x02\xBF\xC0\x07$\x02\x02\xC0" +
		"$\x03\x02\x02\x02\xC1\xC2\t\x06\x02\x02\xC2&\x03\x02\x02\x02\xC3\xC4\x04" +
		"23\x02\xC4(\x03\x02\x02\x02\xC5\xC6\x042;\x02\xC6*\x03\x02\x02\x02\xC7" +
		"\xC8\t\x07\x02\x02\xC8,\x03\x02\x02\x02\x1B\x02?EKOUW]cgmou{\x7F\x85\x87" +
		"\x8D\x96\x98\x9E\xA4\xA8\xB6\xBC\x03\x02\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!AbnfLexer.__ATN) {
			AbnfLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(AbnfLexer._serializedATN));
		}

		return AbnfLexer.__ATN;
	}

}

