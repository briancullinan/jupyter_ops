"use strict";
// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/rfc822/rfc822-datetime/datetime.g4 by ANTLR 4.7.3-SNAPSHOT
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
var Lexer_1 = require("antlr4ts/Lexer");
var LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
var VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
var Utils = require("antlr4ts/misc/Utils");
var datetimeLexer = /** @class */ (function (_super) {
    __extends(datetimeLexer, _super);
    // tslint:enable:no-trailing-whitespace
    function datetimeLexer(input) {
        var _this = _super.call(this, input) || this;
        _this._interp = new LexerATNSimulator_1.LexerATNSimulator(datetimeLexer._ATN, _this);
        return _this;
    }
    Object.defineProperty(datetimeLexer.prototype, "vocabulary", {
        // @Override
        // @NotNull
        get: function () {
            return datetimeLexer.VOCABULARY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(datetimeLexer.prototype, "grammarFileName", {
        // @Override
        get: function () { return "datetime.g4"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(datetimeLexer.prototype, "ruleNames", {
        // @Override
        get: function () { return datetimeLexer.ruleNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(datetimeLexer.prototype, "serializedATN", {
        // @Override
        get: function () { return datetimeLexer._serializedATN; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(datetimeLexer.prototype, "channelNames", {
        // @Override
        get: function () { return datetimeLexer.channelNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(datetimeLexer.prototype, "modeNames", {
        // @Override
        get: function () { return datetimeLexer.modeNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(datetimeLexer, "_ATN", {
        get: function () {
            if (!datetimeLexer.__ATN) {
                datetimeLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(datetimeLexer._serializedATN));
            }
            return datetimeLexer.__ATN;
        },
        enumerable: true,
        configurable: true
    });
    datetimeLexer.T__0 = 1;
    datetimeLexer.T__1 = 2;
    datetimeLexer.T__2 = 3;
    datetimeLexer.T__3 = 4;
    datetimeLexer.T__4 = 5;
    datetimeLexer.T__5 = 6;
    datetimeLexer.T__6 = 7;
    datetimeLexer.T__7 = 8;
    datetimeLexer.T__8 = 9;
    datetimeLexer.T__9 = 10;
    datetimeLexer.T__10 = 11;
    datetimeLexer.T__11 = 12;
    datetimeLexer.T__12 = 13;
    datetimeLexer.T__13 = 14;
    datetimeLexer.T__14 = 15;
    datetimeLexer.T__15 = 16;
    datetimeLexer.T__16 = 17;
    datetimeLexer.T__17 = 18;
    datetimeLexer.T__18 = 19;
    datetimeLexer.T__19 = 20;
    datetimeLexer.T__20 = 21;
    datetimeLexer.T__21 = 22;
    datetimeLexer.T__22 = 23;
    datetimeLexer.T__23 = 24;
    datetimeLexer.T__24 = 25;
    datetimeLexer.T__25 = 26;
    datetimeLexer.T__26 = 27;
    datetimeLexer.T__27 = 28;
    datetimeLexer.T__28 = 29;
    datetimeLexer.T__29 = 30;
    datetimeLexer.T__30 = 31;
    datetimeLexer.T__31 = 32;
    datetimeLexer.T__32 = 33;
    datetimeLexer.ALPHA = 34;
    datetimeLexer.DIGIT = 35;
    datetimeLexer.WS = 36;
    // tslint:disable:no-trailing-whitespace
    datetimeLexer.channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
    ];
    // tslint:disable:no-trailing-whitespace
    datetimeLexer.modeNames = [
        "DEFAULT_MODE",
    ];
    datetimeLexer.ruleNames = [
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
        "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
        "T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
        "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
        "CHAR", "ALPHA", "DIGIT", "NOTALPHANUMERIC", "WS",
    ];
    datetimeLexer._LITERAL_NAMES = [
        undefined, "','", "'Mon'", "'Tue'", "'Wed'", "'Thu'", "'Fri'", "'Sat'",
        "'Sun'", "'Jan'", "'Feb'", "'Mar'", "'Apr'", "'May'", "'Jun'", "'Jul'",
        "'Aug'", "'Sep'", "'Oct'", "'Nov'", "'Dec'", "':'", "'UT'", "'GMT'", "'EST'",
        "'EDT'", "'CST'", "'CDT'", "'MST'", "'MDT'", "'PST'", "'PDT'", "'+'",
        "'-'",
    ];
    datetimeLexer._SYMBOLIC_NAMES = [
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, "ALPHA",
        "DIGIT", "WS",
    ];
    datetimeLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(datetimeLexer._LITERAL_NAMES, datetimeLexer._SYMBOLIC_NAMES, []);
    datetimeLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02&\xD6\b\x01\x04" +
        "\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
        "\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
        "\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
        "\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
        "\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
        "\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
        "#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x03\x02\x03\x02\x03\x03\x03\x03" +
        "\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05" +
        "\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07" +
        "\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03" +
        "\n\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03" +
        "\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
        "\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03" +
        "\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03" +
        "\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03" +
        "\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03" +
        "\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03" +
        "\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03" +
        "\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03" +
        " \x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'" +
        "\x03\'\x03\'\x03\'\x02\x02\x02(\x03\x02\x03\x05\x02\x04\x07\x02\x05\t" +
        "\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
        "\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13" +
        "%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02" +
        "\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02" +
        "\x02G\x02$I\x02%K\x02\x02M\x02&\x03\x02\x07\x03\x02\x02\x81\x04\x02C\\" +
        "c|\x03\x022;\x05\x022;C\\c|\x05\x02\v\f\x0F\x0F\"\"\x02\xD3\x02\x03\x03" +
        "\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03" +
        "\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02" +
        "\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02" +
        "\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02" +
        "\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02" +
        "\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02" +
        "\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03" +
        "\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02" +
        "\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02" +
        "=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02" +
        "\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02M\x03\x02\x02\x02" +
        "\x03O\x03\x02\x02\x02\x05Q\x03\x02\x02\x02\x07U\x03\x02\x02\x02\tY\x03" +
        "\x02\x02\x02\v]\x03\x02\x02\x02\ra\x03\x02\x02\x02\x0Fe\x03\x02\x02\x02" +
        "\x11i\x03\x02\x02\x02\x13m\x03\x02\x02\x02\x15q\x03\x02\x02\x02\x17u\x03" +
        "\x02\x02\x02\x19y\x03\x02\x02\x02\x1B}\x03\x02\x02\x02\x1D\x81\x03\x02" +
        "\x02\x02\x1F\x85\x03\x02\x02\x02!\x89\x03\x02\x02\x02#\x8D\x03\x02\x02" +
        "\x02%\x91\x03\x02\x02\x02\'\x95\x03\x02\x02\x02)\x99\x03\x02\x02\x02+" +
        "\x9D\x03\x02\x02\x02-\x9F\x03\x02\x02\x02/\xA2\x03\x02\x02\x021\xA6\x03" +
        "\x02\x02\x023\xAA\x03\x02\x02\x025\xAE\x03\x02\x02\x027\xB2\x03\x02\x02" +
        "\x029\xB6\x03\x02\x02\x02;\xBA\x03\x02\x02\x02=\xBE\x03\x02\x02\x02?\xC2" +
        "\x03\x02\x02\x02A\xC6\x03\x02\x02\x02C\xC8\x03\x02\x02\x02E\xCA\x03\x02" +
        "\x02\x02G\xCC\x03\x02\x02\x02I\xCE\x03\x02\x02\x02K\xD0\x03\x02\x02\x02" +
        "M\xD2\x03\x02\x02\x02OP\x07.\x02\x02P\x04\x03\x02\x02\x02QR\x07O\x02\x02" +
        "RS\x07q\x02\x02ST\x07p\x02\x02T\x06\x03\x02\x02\x02UV\x07V\x02\x02VW\x07" +
        "w\x02\x02WX\x07g\x02\x02X\b\x03\x02\x02\x02YZ\x07Y\x02\x02Z[\x07g\x02" +
        "\x02[\\\x07f\x02\x02\\\n\x03\x02\x02\x02]^\x07V\x02\x02^_\x07j\x02\x02" +
        "_`\x07w\x02\x02`\f\x03\x02\x02\x02ab\x07H\x02\x02bc\x07t\x02\x02cd\x07" +
        "k\x02\x02d\x0E\x03\x02\x02\x02ef\x07U\x02\x02fg\x07c\x02\x02gh\x07v\x02" +
        "\x02h\x10\x03\x02\x02\x02ij\x07U\x02\x02jk\x07w\x02\x02kl\x07p\x02\x02" +
        "l\x12\x03\x02\x02\x02mn\x07L\x02\x02no\x07c\x02\x02op\x07p\x02\x02p\x14" +
        "\x03\x02\x02\x02qr\x07H\x02\x02rs\x07g\x02\x02st\x07d\x02\x02t\x16\x03" +
        "\x02\x02\x02uv\x07O\x02\x02vw\x07c\x02\x02wx\x07t\x02\x02x\x18\x03\x02" +
        "\x02\x02yz\x07C\x02\x02z{\x07r\x02\x02{|\x07t\x02\x02|\x1A\x03\x02\x02" +
        "\x02}~\x07O\x02\x02~\x7F\x07c\x02\x02\x7F\x80\x07{\x02\x02\x80\x1C\x03" +
        "\x02\x02\x02\x81\x82\x07L\x02\x02\x82\x83\x07w\x02\x02\x83\x84\x07p\x02" +
        "\x02\x84\x1E\x03\x02\x02\x02\x85\x86\x07L\x02\x02\x86\x87\x07w\x02\x02" +
        "\x87\x88\x07n\x02\x02\x88 \x03\x02\x02\x02\x89\x8A\x07C\x02\x02\x8A\x8B" +
        "\x07w\x02\x02\x8B\x8C\x07i\x02\x02\x8C\"\x03\x02\x02\x02\x8D\x8E\x07U" +
        "\x02\x02\x8E\x8F\x07g\x02\x02\x8F\x90\x07r\x02\x02\x90$\x03\x02\x02\x02" +
        "\x91\x92\x07Q\x02\x02\x92\x93\x07e\x02\x02\x93\x94\x07v\x02\x02\x94&\x03" +
        "\x02\x02\x02\x95\x96\x07P\x02\x02\x96\x97\x07q\x02\x02\x97\x98\x07x\x02" +
        "\x02\x98(\x03\x02\x02\x02\x99\x9A\x07F\x02\x02\x9A\x9B\x07g\x02\x02\x9B" +
        "\x9C\x07e\x02\x02\x9C*\x03\x02\x02\x02\x9D\x9E\x07<\x02\x02\x9E,\x03\x02" +
        "\x02\x02\x9F\xA0\x07W\x02\x02\xA0\xA1\x07V\x02\x02\xA1.\x03\x02\x02\x02" +
        "\xA2\xA3\x07I\x02\x02\xA3\xA4\x07O\x02\x02\xA4\xA5\x07V\x02\x02\xA50\x03" +
        "\x02\x02\x02\xA6\xA7\x07G\x02\x02\xA7\xA8\x07U\x02\x02\xA8\xA9\x07V\x02" +
        "\x02\xA92\x03\x02\x02\x02\xAA\xAB\x07G\x02\x02\xAB\xAC\x07F\x02\x02\xAC" +
        "\xAD\x07V\x02\x02\xAD4\x03\x02\x02\x02\xAE\xAF\x07E\x02\x02\xAF\xB0\x07" +
        "U\x02\x02\xB0\xB1\x07V\x02\x02\xB16\x03\x02\x02\x02\xB2\xB3\x07E\x02\x02" +
        "\xB3\xB4\x07F\x02\x02\xB4\xB5\x07V\x02\x02\xB58\x03\x02\x02\x02\xB6\xB7" +
        "\x07O\x02\x02\xB7\xB8\x07U\x02\x02\xB8\xB9\x07V\x02\x02\xB9:\x03\x02\x02" +
        "\x02\xBA\xBB\x07O\x02\x02\xBB\xBC\x07F\x02\x02\xBC\xBD\x07V\x02\x02\xBD" +
        "<\x03\x02\x02\x02\xBE\xBF\x07R\x02\x02\xBF\xC0\x07U\x02\x02\xC0\xC1\x07" +
        "V\x02\x02\xC1>\x03\x02\x02\x02\xC2\xC3\x07R\x02\x02\xC3\xC4\x07F\x02\x02" +
        "\xC4\xC5\x07V\x02\x02\xC5@\x03\x02\x02\x02\xC6\xC7\x07-\x02\x02\xC7B\x03" +
        "\x02\x02\x02\xC8\xC9\x07/\x02\x02\xC9D\x03\x02\x02\x02\xCA\xCB\t\x02\x02" +
        "\x02\xCBF\x03\x02\x02\x02\xCC\xCD\t\x03\x02\x02\xCDH\x03\x02\x02\x02\xCE" +
        "\xCF\t\x04\x02\x02\xCFJ\x03\x02\x02\x02\xD0\xD1\n\x05\x02\x02\xD1L\x03" +
        "\x02\x02\x02\xD2\xD3\t\x06\x02\x02\xD3\xD4\x03\x02\x02\x02\xD4\xD5\b\'" +
        "\x02\x02\xD5N\x03\x02\x02\x02\x03\x02\x03\b\x02\x02";
    return datetimeLexer;
}(Lexer_1.Lexer));
exports.datetimeLexer = datetimeLexer;
