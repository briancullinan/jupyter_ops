"use strict";
// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/clif/CLIF.g4 by ANTLR 4.7.3-SNAPSHOT
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
var Lexer_1 = require("antlr4ts/Lexer");
var LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
var VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
var Utils = require("antlr4ts/misc/Utils");
var CLIFLexer = /** @class */ (function (_super) {
    __extends(CLIFLexer, _super);
    // tslint:enable:no-trailing-whitespace
    function CLIFLexer(input) {
        var _this = _super.call(this, input) || this;
        _this._interp = new LexerATNSimulator_1.LexerATNSimulator(CLIFLexer._ATN, _this);
        return _this;
    }
    Object.defineProperty(CLIFLexer.prototype, "vocabulary", {
        // @Override
        // @NotNull
        get: function () {
            return CLIFLexer.VOCABULARY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CLIFLexer.prototype, "grammarFileName", {
        // @Override
        get: function () { return "CLIF.g4"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CLIFLexer.prototype, "ruleNames", {
        // @Override
        get: function () { return CLIFLexer.ruleNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CLIFLexer.prototype, "serializedATN", {
        // @Override
        get: function () { return CLIFLexer._serializedATN; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CLIFLexer.prototype, "channelNames", {
        // @Override
        get: function () { return CLIFLexer.channelNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CLIFLexer.prototype, "modeNames", {
        // @Override
        get: function () { return CLIFLexer.modeNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CLIFLexer, "_ATN", {
        get: function () {
            if (!CLIFLexer.__ATN) {
                CLIFLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(CLIFLexer._serializedATN));
            }
            return CLIFLexer.__ATN;
        },
        enumerable: true,
        configurable: true
    });
    CLIFLexer.OPEN = 1;
    CLIFLexer.CLOSE = 2;
    CLIFLexer.STRINGQUOTE = 3;
    CLIFLexer.NAMEQUOTE = 4;
    CLIFLexer.BACKSLASH = 5;
    CLIFLexer.NUMERAL = 6;
    CLIFLexer.SEQMARK = 7;
    CLIFLexer.QUOTEDSTRING = 8;
    CLIFLexer.ENCLOSEDNAME = 9;
    CLIFLexer.EQUAL = 10;
    CLIFLexer.AND = 11;
    CLIFLexer.OR = 12;
    CLIFLexer.IFF = 13;
    CLIFLexer.IF = 14;
    CLIFLexer.FORALL = 15;
    CLIFLexer.EXISTS = 16;
    CLIFLexer.NOT = 17;
    CLIFLexer.CL_ROLESET = 18;
    CLIFLexer.CL_TEXT = 19;
    CLIFLexer.CL_IMPORTS = 20;
    CLIFLexer.CL_EXCLUDES = 21;
    CLIFLexer.CL_MODULE = 22;
    CLIFLexer.CL_COMMENT = 23;
    CLIFLexer.CL_PREFIX = 24;
    CLIFLexer.NAMECHARSEQUENCE = 25;
    CLIFLexer.WHITE = 26;
    CLIFLexer.BLOCKCOMMENT = 27;
    CLIFLexer.LineComment = 28;
    // tslint:disable:no-trailing-whitespace
    CLIFLexer.channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
    ];
    // tslint:disable:no-trailing-whitespace
    CLIFLexer.modeNames = [
        "DEFAULT_MODE",
    ];
    CLIFLexer.ruleNames = [
        "OPEN", "CLOSE", "STRINGQUOTE", "NAMEQUOTE", "BACKSLASH", "CHAR", "DIGIT",
        "HEXA", "NONASCII", "INNERSTRINGQUOTE", "INNERNAMEQUOTE", "INNERBACKSLASH",
        "NUMERAL", "SEQMARK", "QUOTEDSTRING", "ENCLOSEDNAME", "EQUAL", "AND",
        "OR", "IFF", "IF", "FORALL", "EXISTS", "NOT", "CL_ROLESET", "CL_TEXT",
        "CL_IMPORTS", "CL_EXCLUDES", "CL_MODULE", "CL_COMMENT", "CL_PREFIX", "NAMECHARSEQUENCE",
        "WHITE", "BLOCKCOMMENT", "LineComment",
    ];
    CLIFLexer._LITERAL_NAMES = [
        undefined, "'('", "')'", "'''", "'\"'", "'\\'", undefined, undefined,
        undefined, undefined, "'='", "'and'", "'or'", "'iff'", "'if'", "'forall'",
        "'exists'", "'not'", "'cl-roleset'", "'cl-text'", "'cl-imports'", "'cl-excludes'",
        "'cl-module'", "'cl-comment'", "'cl-prefix'",
    ];
    CLIFLexer._SYMBOLIC_NAMES = [
        undefined, "OPEN", "CLOSE", "STRINGQUOTE", "NAMEQUOTE", "BACKSLASH", "NUMERAL",
        "SEQMARK", "QUOTEDSTRING", "ENCLOSEDNAME", "EQUAL", "AND", "OR", "IFF",
        "IF", "FORALL", "EXISTS", "NOT", "CL_ROLESET", "CL_TEXT", "CL_IMPORTS",
        "CL_EXCLUDES", "CL_MODULE", "CL_COMMENT", "CL_PREFIX", "NAMECHARSEQUENCE",
        "WHITE", "BLOCKCOMMENT", "LineComment",
    ];
    CLIFLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(CLIFLexer._LITERAL_NAMES, CLIFLexer._SYMBOLIC_NAMES, []);
    CLIFLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1E\u0132\b\x01" +
        "\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
        "\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
        "\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
        "\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
        "\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
        "\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
        "\"\x04#\t#\x04$\t$\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
        "\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03" +
        "\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
        "\n\x03\n\x03\n\x03\n\x05\nj\n\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03" +
        "\x0E\x06\x0Es\n\x0E\r\x0E\x0E\x0Et\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
        "\x0F\x07\x0F|\n\x0F\f\x0F\x0E\x0F\x7F\v\x0F\x03\x10\x03\x10\x03\x10\x03" +
        "\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x07\x10\x8A\n\x10\f\x10\x0E" +
        "\x10\x8D\v\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
        "\x03\x11\x03\x11\x03\x11\x07\x11\x99\n\x11\f\x11\x0E\x11\x9C\v\x11\x03" +
        "\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03" +
        "\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03" +
        "\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03" +
        "\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03" +
        "\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03" +
        "\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03" +
        "\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03" +
        "\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03" +
        "\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03" +
        "\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03" +
        "\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03" +
        " \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03" +
        "!\x07!\u0110\n!\f!\x0E!\u0113\v!\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03" +
        "#\x03#\x03#\x07#\u011E\n#\f#\x0E#\u0121\v#\x03#\x03#\x03#\x03#\x03#\x03" +
        "$\x03$\x03$\x03$\x07$\u012C\n$\f$\x0E$\u012F\v$\x03$\x03$\x03\u011F\x02" +
        "\x02%\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\x02" +
        "\x0F\x02\x02\x11\x02\x02\x13\x02\x02\x15\x02\x02\x17\x02\x02\x19\x02\x02" +
        "\x1B\x02\b\x1D\x02\t\x1F\x02\n!\x02\v#\x02\f%\x02\r\'\x02\x0E)\x02\x0F" +
        "+\x02\x10-\x02\x11/\x02\x121\x02\x133\x02\x145\x02\x157\x02\x169\x02\x17" +
        ";\x02\x18=\x02\x19?\x02\x1AA\x02\x1BC\x02\x1CE\x02\x1DG\x02\x1E\x03\x02" +
        "\x07\x07\x02##%(,AC]_\x80\x03\x022;\x05\x022;CHch\x05\x02\v\r\x0F\x0F" +
        "\"\"\x04\x02\f\f\x0F\x0F\x02\u0143\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
        "\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
        "\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02" +
        "\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02" +
        "\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-" +
        "\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
        "\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02" +
        "\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03" +
        "\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02" +
        "\x02\x03I\x03\x02\x02\x02\x05K\x03\x02\x02\x02\x07M\x03\x02\x02\x02\t" +
        "O\x03\x02\x02\x02\vQ\x03\x02\x02\x02\rS\x03\x02\x02\x02\x0FU\x03\x02\x02" +
        "\x02\x11W\x03\x02\x02\x02\x13i\x03\x02\x02\x02\x15k\x03\x02\x02\x02\x17" +
        "m\x03\x02\x02\x02\x19o\x03\x02\x02\x02\x1Br\x03\x02\x02\x02\x1Dv\x03\x02" +
        "\x02\x02\x1F\x80\x03\x02\x02\x02!\x90\x03\x02\x02\x02#\x9F\x03\x02\x02" +
        "\x02%\xA1\x03\x02\x02\x02\'\xA5\x03\x02\x02\x02)\xA8\x03\x02\x02\x02+" +
        "\xAC\x03\x02\x02\x02-\xAF\x03\x02\x02\x02/\xB6\x03\x02\x02\x021\xBD\x03" +
        "\x02\x02\x023\xC1\x03\x02\x02\x025\xCC\x03\x02\x02\x027\xD4\x03\x02\x02" +
        "\x029\xDF\x03\x02\x02\x02;\xEB\x03\x02\x02\x02=\xF5\x03\x02\x02\x02?\u0100" +
        "\x03\x02\x02\x02A\u010A\x03\x02\x02\x02C\u0114\x03\x02\x02\x02E\u0118" +
        "\x03\x02\x02\x02G\u0127\x03\x02\x02\x02IJ\x07*\x02\x02J\x04\x03\x02\x02" +
        "\x02KL\x07+\x02\x02L\x06\x03\x02\x02\x02MN\x07)\x02\x02N\b\x03\x02\x02" +
        "\x02OP\x07$\x02\x02P\n\x03\x02\x02\x02QR\x07^\x02\x02R\f\x03\x02\x02\x02" +
        "ST\t\x02\x02\x02T\x0E\x03\x02\x02\x02UV\t\x03\x02\x02V\x10\x03\x02\x02" +
        "\x02WX\t\x04\x02\x02X\x12\x03\x02\x02\x02YZ\x07^\x02\x02Z[\x07w\x02\x02" +
        "[\\\x05\x11\t\x02\\]\x05\x11\t\x02]^\x05\x11\t\x02^_\x05\x11\t\x02_j\x03" +
        "\x02\x02\x02`a\x07^\x02\x02ab\x07W\x02\x02bc\x05\x11\t\x02cd\x05\x11\t" +
        "\x02de\x05\x11\t\x02ef\x05\x11\t\x02fg\x05\x11\t\x02gh\x05\x11\t\x02h" +
        "j\x03\x02\x02\x02iY\x03\x02\x02\x02i`\x03\x02\x02\x02j\x14\x03\x02\x02" +
        "\x02kl\x07)\x02\x02l\x16\x03\x02\x02\x02mn\x07$\x02\x02n\x18\x03\x02\x02" +
        "\x02op\x07^\x02\x02p\x1A\x03\x02\x02\x02qs\x05\x0F\b\x02rq\x03\x02\x02" +
        "\x02st\x03\x02\x02\x02tr\x03\x02\x02\x02tu\x03\x02\x02\x02u\x1C\x03\x02" +
        "\x02\x02vw\x070\x02\x02wx\x070\x02\x02xy\x070\x02\x02y}\x03\x02\x02\x02" +
        "z|\x05\r\x07\x02{z\x03\x02\x02\x02|\x7F\x03\x02\x02\x02}{\x03\x02\x02" +
        "\x02}~\x03\x02\x02\x02~\x1E\x03\x02\x02\x02\x7F}\x03\x02\x02\x02\x80\x8B" +
        "\x05\x07\x04\x02\x81\x8A\x05C\"\x02\x82\x8A\x05\x03\x02\x02\x83\x8A\x05" +
        "\x05\x03\x02\x84\x8A\x05\r\x07\x02\x85\x8A\x05\x13\n\x02\x86\x8A\x05\t" +
        "\x05\x02\x87\x8A\x05\x15\v\x02\x88\x8A\x05\x19\r\x02\x89\x81\x03\x02\x02" +
        "\x02\x89\x82\x03\x02\x02\x02\x89\x83\x03\x02\x02\x02\x89\x84\x03\x02\x02" +
        "\x02\x89\x85\x03\x02\x02\x02\x89\x86\x03\x02\x02\x02\x89\x87\x03\x02\x02" +
        "\x02\x89\x88\x03\x02\x02\x02\x8A\x8D\x03\x02\x02\x02\x8B\x89\x03\x02\x02" +
        "\x02\x8B\x8C\x03\x02\x02\x02\x8C\x8E\x03\x02\x02\x02\x8D\x8B\x03\x02\x02" +
        "\x02\x8E\x8F\x05\x07\x04\x02\x8F \x03\x02\x02\x02\x90\x9A\x05\t\x05\x02" +
        "\x91\x99\x05C\"\x02\x92\x99\x05\x03\x02\x02\x93\x99\x05\x05\x03\x02\x94" +
        "\x99\x05\r\x07\x02\x95\x99\x05\x13\n\x02\x96\x99\x05\x07\x04\x02\x97\x99" +
        "\x05\x17\f\x02\x98\x91\x03\x02\x02\x02\x98\x92\x03\x02\x02\x02\x98\x93" +
        "\x03\x02\x02\x02\x98\x94\x03\x02\x02\x02\x98\x95\x03\x02\x02\x02\x98\x96" +
        "\x03\x02\x02\x02\x98\x97\x03\x02\x02\x02\x99\x9C\x03\x02\x02\x02\x9A\x98" +
        "\x03\x02\x02\x02\x9A\x9B\x03\x02\x02\x02\x9B\x9D\x03\x02\x02\x02\x9C\x9A" +
        "\x03\x02\x02\x02\x9D\x9E\x05\t\x05\x02\x9E\"\x03\x02\x02\x02\x9F\xA0\x07" +
        "?\x02\x02\xA0$\x03\x02\x02\x02\xA1\xA2\x07c\x02\x02\xA2\xA3\x07p\x02\x02" +
        "\xA3\xA4\x07f\x02\x02\xA4&\x03\x02\x02\x02\xA5\xA6\x07q\x02\x02\xA6\xA7" +
        "\x07t\x02\x02\xA7(\x03\x02\x02\x02\xA8\xA9\x07k\x02\x02\xA9\xAA\x07h\x02" +
        "\x02\xAA\xAB\x07h\x02\x02\xAB*\x03\x02\x02\x02\xAC\xAD\x07k\x02\x02\xAD" +
        "\xAE\x07h\x02\x02\xAE,\x03\x02\x02\x02\xAF\xB0\x07h\x02\x02\xB0\xB1\x07" +
        "q\x02\x02\xB1\xB2\x07t\x02\x02\xB2\xB3\x07c\x02\x02\xB3\xB4\x07n\x02\x02" +
        "\xB4\xB5\x07n\x02\x02\xB5.\x03\x02\x02\x02\xB6\xB7\x07g\x02\x02\xB7\xB8" +
        "\x07z\x02\x02\xB8\xB9\x07k\x02\x02\xB9\xBA\x07u\x02\x02\xBA\xBB\x07v\x02" +
        "\x02\xBB\xBC\x07u\x02\x02\xBC0\x03\x02\x02\x02\xBD\xBE\x07p\x02\x02\xBE" +
        "\xBF\x07q\x02\x02\xBF\xC0\x07v\x02\x02\xC02\x03\x02\x02\x02\xC1\xC2\x07" +
        "e\x02\x02\xC2\xC3\x07n\x02\x02\xC3\xC4\x07/\x02\x02\xC4\xC5\x07t\x02\x02" +
        "\xC5\xC6\x07q\x02\x02\xC6\xC7\x07n\x02\x02\xC7\xC8\x07g\x02\x02\xC8\xC9" +
        "\x07u\x02\x02\xC9\xCA\x07g\x02\x02\xCA\xCB\x07v\x02\x02\xCB4\x03\x02\x02" +
        "\x02\xCC\xCD\x07e\x02\x02\xCD\xCE\x07n\x02\x02\xCE\xCF\x07/\x02\x02\xCF" +
        "\xD0\x07v\x02\x02\xD0\xD1\x07g\x02\x02\xD1\xD2\x07z\x02\x02\xD2\xD3\x07" +
        "v\x02\x02\xD36\x03\x02\x02\x02\xD4\xD5\x07e\x02\x02\xD5\xD6\x07n\x02\x02" +
        "\xD6\xD7\x07/\x02\x02\xD7\xD8\x07k\x02\x02\xD8\xD9\x07o\x02\x02\xD9\xDA" +
        "\x07r\x02\x02\xDA\xDB\x07q\x02\x02\xDB\xDC\x07t\x02\x02\xDC\xDD\x07v\x02" +
        "\x02\xDD\xDE\x07u\x02\x02\xDE8\x03\x02\x02\x02\xDF\xE0\x07e\x02\x02\xE0" +
        "\xE1\x07n\x02\x02\xE1\xE2\x07/\x02\x02\xE2\xE3\x07g\x02\x02\xE3\xE4\x07" +
        "z\x02\x02\xE4\xE5\x07e\x02\x02\xE5\xE6\x07n\x02\x02\xE6\xE7\x07w\x02\x02" +
        "\xE7\xE8\x07f\x02\x02\xE8\xE9\x07g\x02\x02\xE9\xEA\x07u\x02\x02\xEA:\x03" +
        "\x02\x02\x02\xEB\xEC\x07e\x02\x02\xEC\xED\x07n\x02\x02\xED\xEE\x07/\x02" +
        "\x02\xEE\xEF\x07o\x02\x02\xEF\xF0\x07q\x02\x02\xF0\xF1\x07f\x02\x02\xF1" +
        "\xF2\x07w\x02\x02\xF2\xF3\x07n\x02\x02\xF3\xF4\x07g\x02\x02\xF4<\x03\x02" +
        "\x02\x02\xF5\xF6\x07e\x02\x02\xF6\xF7\x07n\x02\x02\xF7\xF8\x07/\x02\x02" +
        "\xF8\xF9\x07e\x02\x02\xF9\xFA\x07q\x02\x02\xFA\xFB\x07o\x02\x02\xFB\xFC" +
        "\x07o\x02\x02\xFC\xFD\x07g\x02\x02\xFD\xFE\x07p\x02\x02\xFE\xFF\x07v\x02" +
        "\x02\xFF>\x03\x02\x02\x02\u0100\u0101\x07e\x02\x02\u0101\u0102\x07n\x02" +
        "\x02\u0102\u0103\x07/\x02\x02\u0103\u0104\x07r\x02\x02\u0104\u0105\x07" +
        "t\x02\x02\u0105\u0106\x07g\x02\x02\u0106\u0107\x07h\x02\x02\u0107\u0108" +
        "\x07k\x02\x02\u0108\u0109\x07z\x02\x02\u0109@\x03\x02\x02\x02\u010A\u0111" +
        "\x05\r\x07\x02\u010B\u0110\x05\r\x07\x02\u010C\u0110\x05\x07\x04\x02\u010D" +
        "\u0110\x05\t\x05\x02\u010E\u0110\x05\v\x06\x02\u010F\u010B\x03\x02\x02" +
        "\x02\u010F\u010C\x03\x02\x02\x02\u010F\u010D\x03\x02\x02\x02\u010F\u010E" +
        "\x03\x02\x02\x02\u0110\u0113\x03\x02\x02\x02\u0111\u010F\x03\x02\x02\x02" +
        "\u0111\u0112\x03\x02\x02\x02\u0112B\x03\x02\x02\x02\u0113\u0111\x03\x02" +
        "\x02\x02\u0114\u0115\t\x05\x02\x02\u0115\u0116\x03\x02\x02\x02\u0116\u0117" +
        "\b\"\x02\x02\u0117D\x03\x02\x02\x02\u0118\u0119\x071\x02\x02\u0119\u011A" +
        "\x07,\x02\x02\u011A\u011F\x03\x02\x02\x02\u011B\u011E\x05E#\x02\u011C" +
        "\u011E\v\x02\x02\x02\u011D\u011B\x03\x02\x02\x02\u011D\u011C\x03\x02\x02" +
        "\x02\u011E\u0121\x03\x02\x02\x02\u011F\u0120\x03\x02\x02\x02\u011F\u011D" +
        "\x03\x02\x02\x02\u0120\u0122\x03\x02\x02\x02\u0121\u011F\x03\x02\x02\x02" +
        "\u0122\u0123\x07,\x02\x02\u0123\u0124\x071\x02\x02\u0124\u0125\x03\x02" +
        "\x02\x02\u0125\u0126\b#\x02\x02\u0126F\x03\x02\x02\x02\u0127\u0128\x07" +
        "1\x02\x02\u0128\u0129\x071\x02\x02\u0129\u012D\x03\x02\x02\x02\u012A\u012C" +
        "\n\x06\x02\x02\u012B\u012A\x03\x02\x02\x02\u012C\u012F\x03\x02\x02\x02" +
        "\u012D\u012B\x03\x02\x02\x02\u012D\u012E\x03\x02\x02\x02\u012E\u0130\x03" +
        "\x02\x02\x02\u012F\u012D\x03\x02\x02\x02\u0130\u0131\b$\x02\x02\u0131" +
        "H\x03\x02\x02\x02\x0F\x02it}\x89\x8B\x98\x9A\u010F\u0111\u011D\u011F\u012D" +
        "\x03\b\x02\x02";
    return CLIFLexer;
}(Lexer_1.Lexer));
exports.CLIFLexer = CLIFLexer;
