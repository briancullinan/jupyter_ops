"use strict";
// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/edif300/EDIF300.g4 by ANTLR 4.7.3-SNAPSHOT
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ATN_1 = require("antlr4ts/atn/ATN");
var ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
var NoViableAltException_1 = require("antlr4ts/NoViableAltException");
var Parser_1 = require("antlr4ts/Parser");
var ParserRuleContext_1 = require("antlr4ts/ParserRuleContext");
var ParserATNSimulator_1 = require("antlr4ts/atn/ParserATNSimulator");
var RecognitionException_1 = require("antlr4ts/RecognitionException");
var VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
var Utils = require("antlr4ts/misc/Utils");
var EDIF300Parser = /** @class */ (function (_super) {
    __extends(EDIF300Parser, _super);
    function EDIF300Parser(input) {
        var _this = _super.call(this, input) || this;
        _this._interp = new ParserATNSimulator_1.ParserATNSimulator(EDIF300Parser._ATN, _this);
        return _this;
    }
    Object.defineProperty(EDIF300Parser.prototype, "vocabulary", {
        // @Override
        // @NotNull
        get: function () {
            return EDIF300Parser.VOCABULARY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EDIF300Parser.prototype, "grammarFileName", {
        // tslint:enable:no-trailing-whitespace
        // @Override
        get: function () { return "EDIF300.g4"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EDIF300Parser.prototype, "ruleNames", {
        // @Override
        get: function () { return EDIF300Parser.ruleNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EDIF300Parser.prototype, "serializedATN", {
        // @Override
        get: function () { return EDIF300Parser._serializedATN; },
        enumerable: true,
        configurable: true
    });
    // @RuleVersion(0)
    EDIF300Parser.prototype.goal = function () {
        var _localctx = new GoalContext(this._ctx, this.state);
        this.enterRule(_localctx, 0, EDIF300Parser.RULE_goal);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1664;
                this.edif();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.absolute = function () {
        var _localctx = new AbsoluteContext(this._ctx, this.state);
        this.enterRule(_localctx, 2, EDIF300Parser.RULE_absolute);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1666;
                this.match(EDIF300Parser.T__0);
                this.state = 1667;
                this.integerExpression();
                this.state = 1668;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.acLoad = function () {
        var _localctx = new AcLoadContext(this._ctx, this.state);
        this.enterRule(_localctx, 4, EDIF300Parser.RULE_acLoad);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1670;
                this.match(EDIF300Parser.T__2);
                this.state = 1671;
                this.capacitanceValue();
                this.state = 1672;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.acLoadDisplay = function () {
        var _localctx = new AcLoadDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 6, EDIF300Parser.RULE_acLoadDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1674;
                this.match(EDIF300Parser.T__3);
                this.state = 1678;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 1675;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 1676;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 1677;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 1680;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.acLoadFactorCapacitance = function () {
        var _localctx = new AcLoadFactorCapacitanceContext(this._ctx, this.state);
        this.enterRule(_localctx, 8, EDIF300Parser.RULE_acLoadFactorCapacitance);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1682;
                this.capacitanceValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.acLoadFactorTime = function () {
        var _localctx = new AcLoadFactorTimeContext(this._ctx, this.state);
        this.enterRule(_localctx, 10, EDIF300Parser.RULE_acLoadFactorTime);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1684;
                this.timeValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.addDisplay = function () {
        var _localctx = new AddDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 12, EDIF300Parser.RULE_addDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1686;
                this.match(EDIF300Parser.T__4);
                this.state = 1690;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 1687;
                            this.display();
                        }
                    }
                    this.state = 1692;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1693;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ampere = function () {
        var _localctx = new AmpereContext(this._ctx, this.state);
        this.enterRule(_localctx, 14, EDIF300Parser.RULE_ampere);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1695;
                this.match(EDIF300Parser.T__5);
                this.state = 1696;
                this.unitExponent();
                this.state = 1697;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.and_ = function () {
        var _localctx = new And_Context(this._ctx, this.state);
        this.enterRule(_localctx, 16, EDIF300Parser.RULE_and_);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1699;
                this.match(EDIF300Parser.T__6);
                this.state = 1703;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << EDIF300Parser.T__6) | (1 << EDIF300Parser.T__25) | (1 << EDIF300Parser.T__29))) !== 0) || _la === EDIF300Parser.T__157 || _la === EDIF300Parser.T__250 || _la === EDIF300Parser.T__307 || _la === EDIF300Parser.T__308 || _la === EDIF300Parser.T__354 || _la === EDIF300Parser.T__366 || _la === EDIF300Parser.T__603 || _la === EDIF300Parser.T__626 || _la === EDIF300Parser.T__664) {
                    {
                        {
                            this.state = 1700;
                            this.booleanExpression();
                        }
                    }
                    this.state = 1705;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1706;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.angleValue = function () {
        var _localctx = new AngleValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 18, EDIF300Parser.RULE_angleValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1708;
                this.numberValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.annotate = function () {
        var _localctx = new AnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 20, EDIF300Parser.RULE_annotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1710;
                this.match(EDIF300Parser.T__7);
                this.state = 1711;
                this.stringValue();
                this.state = 1715;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 1712;
                            this.display();
                        }
                    }
                    this.state = 1717;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1718;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.approvedDate = function () {
        var _localctx = new ApprovedDateContext(this._ctx, this.state);
        this.enterRule(_localctx, 22, EDIF300Parser.RULE_approvedDate);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1720;
                this.match(EDIF300Parser.T__8);
                this.state = 1721;
                this.date();
                this.state = 1722;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.approvedDateDisplay = function () {
        var _localctx = new ApprovedDateDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 24, EDIF300Parser.RULE_approvedDateDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1724;
                this.match(EDIF300Parser.T__9);
                this.state = 1728;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 1725;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 1726;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 1727;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 1730;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.arc = function () {
        var _localctx = new ArcContext(this._ctx, this.state);
        this.enterRule(_localctx, 26, EDIF300Parser.RULE_arc);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1732;
                this.match(EDIF300Parser.T__10);
                this.state = 1733;
                this.startPoint();
                this.state = 1734;
                this.throughPoint();
                this.state = 1735;
                this.endPoint();
                this.state = 1736;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ascii = function () {
        var _localctx = new AsciiContext(this._ctx, this.state);
        this.enterRule(_localctx, 28, EDIF300Parser.RULE_ascii);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1738;
                this.match(EDIF300Parser.T__11);
                this.state = 1739;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.associatedInterconnectNameDisplay = function () {
        var _localctx = new AssociatedInterconnectNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 30, EDIF300Parser.RULE_associatedInterconnectNameDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1741;
                this.match(EDIF300Parser.T__12);
                this.state = 1745;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 1742;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 1743;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 1744;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 1747;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.attachmentPoint = function () {
        var _localctx = new AttachmentPointContext(this._ctx, this.state);
        this.enterRule(_localctx, 32, EDIF300Parser.RULE_attachmentPoint);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1749;
                this.pointValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.author = function () {
        var _localctx = new AuthorContext(this._ctx, this.state);
        this.enterRule(_localctx, 34, EDIF300Parser.RULE_author);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1751;
                this.match(EDIF300Parser.T__13);
                this.state = 1752;
                this.stringToken();
                this.state = 1753;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.backgroundColor = function () {
        var _localctx = new BackgroundColorContext(this._ctx, this.state);
        this.enterRule(_localctx, 36, EDIF300Parser.RULE_backgroundColor);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1755;
                this.match(EDIF300Parser.T__14);
                this.state = 1756;
                this.color();
                this.state = 1757;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.baselineJustify = function () {
        var _localctx = new BaselineJustifyContext(this._ctx, this.state);
        this.enterRule(_localctx, 38, EDIF300Parser.RULE_baselineJustify);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1759;
                this.match(EDIF300Parser.T__15);
                this.state = 1760;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.becomes = function () {
        var _localctx = new BecomesContext(this._ctx, this.state);
        this.enterRule(_localctx, 40, EDIF300Parser.RULE_becomes);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1762;
                this.match(EDIF300Parser.T__16);
                this.state = 1766;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.IDENTIFIER:
                        {
                            this.state = 1763;
                            this.logicNameRef();
                        }
                        break;
                    case EDIF300Parser.T__320:
                        {
                            this.state = 1764;
                            this.logicList();
                        }
                        break;
                    case EDIF300Parser.T__325:
                        {
                            this.state = 1765;
                            this.logicOneOf();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 1768;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.behaviorView = function () {
        var _localctx = new BehaviorViewContext(this._ctx, this.state);
        this.enterRule(_localctx, 42, EDIF300Parser.RULE_behaviorView);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1770;
                this.match(EDIF300Parser.T__17);
                this.state = 1771;
                this.viewNameDef();
                this.state = 1777;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 1775;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 1772;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 1773;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 1774;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 1779;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1780;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.bidirectional = function () {
        var _localctx = new BidirectionalContext(this._ctx, this.state);
        this.enterRule(_localctx, 44, EDIF300Parser.RULE_bidirectional);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1782;
                this.match(EDIF300Parser.T__18);
                this.state = 1783;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.bidirectionalPort = function () {
        var _localctx = new BidirectionalPortContext(this._ctx, this.state);
        this.enterRule(_localctx, 46, EDIF300Parser.RULE_bidirectionalPort);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1785;
                this.match(EDIF300Parser.T__19);
                this.state = 1787;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__20) {
                    {
                        this.state = 1786;
                        this.bidirectionalPortAttributes();
                    }
                }
                this.state = 1789;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.bidirectionalPortAttributes = function () {
        var _localctx = new BidirectionalPortAttributesContext(this._ctx, this.state);
        this.enterRule(_localctx, 48, EDIF300Parser.RULE_bidirectionalPortAttributes);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1791;
                this.match(EDIF300Parser.T__20);
                this.state = 1798;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 104)) & ~0x1F) === 0 && ((1 << (_la - 104)) & ((1 << (EDIF300Parser.T__103 - 104)) | (1 << (EDIF300Parser.T__105 - 104)) | (1 << (EDIF300Parser.T__107 - 104)) | (1 << (EDIF300Parser.T__109 - 104)))) !== 0)) {
                    {
                        this.state = 1796;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__103:
                                {
                                    this.state = 1792;
                                    this.dcFanInLoad();
                                }
                                break;
                            case EDIF300Parser.T__105:
                                {
                                    this.state = 1793;
                                    this.dcFanOutLoad();
                                }
                                break;
                            case EDIF300Parser.T__107:
                                {
                                    this.state = 1794;
                                    this.dcMaxFanIn();
                                }
                                break;
                            case EDIF300Parser.T__109:
                                {
                                    this.state = 1795;
                                    this.dcMaxFanOut();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 1800;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1801;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.bitOrder = function () {
        var _localctx = new BitOrderContext(this._ctx, this.state);
        this.enterRule(_localctx, 50, EDIF300Parser.RULE_bitOrder);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1803;
                this.match(EDIF300Parser.T__21);
                this.state = 1806;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__328:
                        {
                            this.state = 1804;
                            this.lsbToMsb();
                        }
                        break;
                    case EDIF300Parser.T__340:
                        {
                            this.state = 1805;
                            this.msbToLsb();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 1808;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.blue = function () {
        var _localctx = new BlueContext(this._ctx, this.state);
        this.enterRule(_localctx, 52, EDIF300Parser.RULE_blue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1810;
                this.scaledInteger();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.boldStyle = function () {
        var _localctx = new BoldStyleContext(this._ctx, this.state);
        this.enterRule(_localctx, 54, EDIF300Parser.RULE_boldStyle);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1812;
                this.match(EDIF300Parser.T__22);
                this.state = 1813;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.eboolean = function () {
        var _localctx = new EbooleanContext(this._ctx, this.state);
        this.enterRule(_localctx, 56, EDIF300Parser.RULE_eboolean);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1815;
                this.match(EDIF300Parser.T__23);
                this.state = 1816;
                this.booleanExpression();
                this.state = 1817;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.booleanConstant = function () {
        var _localctx = new BooleanConstantContext(this._ctx, this.state);
        this.enterRule(_localctx, 58, EDIF300Parser.RULE_booleanConstant);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1819;
                this.match(EDIF300Parser.T__24);
                this.state = 1820;
                this.constantNameDef();
                this.state = 1821;
                this.booleanToken();
                this.state = 1822;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.booleanConstantRef = function () {
        var _localctx = new BooleanConstantRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 60, EDIF300Parser.RULE_booleanConstantRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1824;
                this.match(EDIF300Parser.T__25);
                this.state = 1825;
                this.constantNameRef();
                this.state = 1826;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.booleanExpression = function () {
        var _localctx = new BooleanExpressionContext(this._ctx, this.state);
        this.enterRule(_localctx, 62, EDIF300Parser.RULE_booleanExpression);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1839;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__6:
                        {
                            this.state = 1828;
                            this.and_();
                        }
                        break;
                    case EDIF300Parser.T__29:
                        {
                            this.state = 1829;
                            this.booleanParameterRef();
                        }
                        break;
                    case EDIF300Parser.T__157:
                    case EDIF300Parser.T__626:
                        {
                            this.state = 1830;
                            this.booleanToken();
                        }
                        break;
                    case EDIF300Parser.T__603:
                        {
                            this.state = 1831;
                            this.stringEqual();
                        }
                        break;
                    case EDIF300Parser.T__250:
                        {
                            this.state = 1832;
                            this.integerEqual();
                        }
                        break;
                    case EDIF300Parser.T__307:
                        {
                            this.state = 1833;
                            this.lessThan();
                        }
                        break;
                    case EDIF300Parser.T__308:
                        {
                            this.state = 1834;
                            this.lessThanOrEqual();
                        }
                        break;
                    case EDIF300Parser.T__354:
                        {
                            this.state = 1835;
                            this.not_();
                        }
                        break;
                    case EDIF300Parser.T__366:
                        {
                            this.state = 1836;
                            this.or_();
                        }
                        break;
                    case EDIF300Parser.T__664:
                        {
                            this.state = 1837;
                            this.xor_();
                        }
                        break;
                    case EDIF300Parser.T__25:
                        {
                            this.state = 1838;
                            this.booleanConstantRef();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.booleanMap = function () {
        var _localctx = new BooleanMapContext(this._ctx, this.state);
        this.enterRule(_localctx, 64, EDIF300Parser.RULE_booleanMap);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1841;
                this.match(EDIF300Parser.T__26);
                this.state = 1842;
                this.booleanValue();
                this.state = 1843;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.booleanParameter = function () {
        var _localctx = new BooleanParameterContext(this._ctx, this.state);
        this.enterRule(_localctx, 66, EDIF300Parser.RULE_booleanParameter);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1845;
                this.match(EDIF300Parser.T__27);
                this.state = 1846;
                this.parameterNameDef();
                this.state = 1851;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__23 || _la === EDIF300Parser.T__346) {
                    {
                        this.state = 1849;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__23:
                                {
                                    this.state = 1847;
                                    this.eboolean();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 1848;
                                    this.nameInformation();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 1853;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1854;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.booleanParameterAssign = function () {
        var _localctx = new BooleanParameterAssignContext(this._ctx, this.state);
        this.enterRule(_localctx, 68, EDIF300Parser.RULE_booleanParameterAssign);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1856;
                this.match(EDIF300Parser.T__28);
                this.state = 1857;
                this.parameterNameRef();
                this.state = 1858;
                this.booleanExpression();
                this.state = 1859;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.booleanParameterRef = function () {
        var _localctx = new BooleanParameterRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 70, EDIF300Parser.RULE_booleanParameterRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1861;
                this.match(EDIF300Parser.T__29);
                this.state = 1862;
                this.parameterNameRef();
                this.state = 1863;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.booleanToken = function () {
        var _localctx = new BooleanTokenContext(this._ctx, this.state);
        this.enterRule(_localctx, 72, EDIF300Parser.RULE_booleanToken);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1867;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__157:
                        {
                            this.state = 1865;
                            this.efalse();
                        }
                        break;
                    case EDIF300Parser.T__626:
                        {
                            this.state = 1866;
                            this.etrue();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.booleanValue = function () {
        var _localctx = new BooleanValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 74, EDIF300Parser.RULE_booleanValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1869;
                this.booleanToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.borderPattern = function () {
        var _localctx = new BorderPatternContext(this._ctx, this.state);
        this.enterRule(_localctx, 76, EDIF300Parser.RULE_borderPattern);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1871;
                this.match(EDIF300Parser.T__30);
                this.state = 1872;
                this.pixelPattern();
                this.state = 1873;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.borderPatternVisible = function () {
        var _localctx = new BorderPatternVisibleContext(this._ctx, this.state);
        this.enterRule(_localctx, 78, EDIF300Parser.RULE_borderPatternVisible);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1875;
                this.match(EDIF300Parser.T__31);
                this.state = 1876;
                this.booleanValue();
                this.state = 1877;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.borderWidth = function () {
        var _localctx = new BorderWidthContext(this._ctx, this.state);
        this.enterRule(_localctx, 80, EDIF300Parser.RULE_borderWidth);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1879;
                this.match(EDIF300Parser.T__32);
                this.state = 1882;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.DECIMAL_LITERAL:
                        {
                            this.state = 1880;
                            this.lengthValue();
                        }
                        break;
                    case EDIF300Parser.T__334:
                        {
                            this.state = 1881;
                            this.minimalWidth();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 1884;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.bottomJustify = function () {
        var _localctx = new BottomJustifyContext(this._ctx, this.state);
        this.enterRule(_localctx, 82, EDIF300Parser.RULE_bottomJustify);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1886;
                this.match(EDIF300Parser.T__33);
                this.state = 1887;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.calculated = function () {
        var _localctx = new CalculatedContext(this._ctx, this.state);
        this.enterRule(_localctx, 84, EDIF300Parser.RULE_calculated);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1889;
                this.match(EDIF300Parser.T__34);
                this.state = 1890;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.candela = function () {
        var _localctx = new CandelaContext(this._ctx, this.state);
        this.enterRule(_localctx, 86, EDIF300Parser.RULE_candela);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1892;
                this.match(EDIF300Parser.T__35);
                this.state = 1893;
                this.unitExponent();
                this.state = 1894;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.capacitanceValue = function () {
        var _localctx = new CapacitanceValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 88, EDIF300Parser.RULE_capacitanceValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1896;
                this.miNoMaxValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.caplineJustify = function () {
        var _localctx = new CaplineJustifyContext(this._ctx, this.state);
        this.enterRule(_localctx, 90, EDIF300Parser.RULE_caplineJustify);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1898;
                this.match(EDIF300Parser.T__36);
                this.state = 1899;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.cell = function () {
        var _localctx = new CellContext(this._ctx, this.state);
        this.enterRule(_localctx, 92, EDIF300Parser.RULE_cell);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1901;
                this.match(EDIF300Parser.T__37);
                this.state = 1902;
                this.libraryObjectNameDef();
                this.state = 1903;
                this.cellHeader();
                this.state = 1910;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__50 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__642 || _la === EDIF300Parser.T__645) {
                    {
                        this.state = 1908;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__50:
                                {
                                    this.state = 1904;
                                    this.cluster();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 1905;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 1906;
                                    this.userData();
                                }
                                break;
                            case EDIF300Parser.T__645:
                                {
                                    this.state = 1907;
                                    this.viewGroup();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 1912;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1913;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.cellHeader = function () {
        var _localctx = new CellHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 94, EDIF300Parser.RULE_cellHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1915;
                this.match(EDIF300Parser.T__38);
                this.state = 1922;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 1920;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 1916;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 1917;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 1918;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 1919;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 1924;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1925;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.cellNameDisplay = function () {
        var _localctx = new CellNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 96, EDIF300Parser.RULE_cellNameDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1927;
                this.match(EDIF300Parser.T__39);
                this.state = 1932;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
                    {
                        this.state = 1930;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 1928;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__131:
                                {
                                    this.state = 1929;
                                    this.displayNameOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 1934;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1935;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.cellPropertyDisplay = function () {
        var _localctx = new CellPropertyDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 98, EDIF300Parser.RULE_cellPropertyDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1937;
                this.match(EDIF300Parser.T__40);
                this.state = 1938;
                this.propertyNameRef();
                this.state = 1943;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
                    {
                        this.state = 1941;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 1939;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__447:
                                {
                                    this.state = 1940;
                                    this.propertyNameDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 1945;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1946;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.cellPropertyDisplayOverride = function () {
        var _localctx = new CellPropertyDisplayOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 100, EDIF300Parser.RULE_cellPropertyDisplayOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1948;
                this.match(EDIF300Parser.T__41);
                this.state = 1949;
                this.propertyNameRef();
                this.state = 1953;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 1950;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 1951;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 1952;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 1956;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__447) {
                    {
                        this.state = 1955;
                        this.propertyNameDisplay();
                    }
                }
                this.state = 1958;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.cellPropertyOverride = function () {
        var _localctx = new CellPropertyOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 102, EDIF300Parser.RULE_cellPropertyOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1960;
                this.match(EDIF300Parser.T__42);
                this.state = 1961;
                this.propertyNameRef();
                this.state = 1964;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__23:
                    case EDIF300Parser.T__247:
                    case EDIF300Parser.T__336:
                    case EDIF300Parser.T__356:
                    case EDIF300Parser.T__411:
                    case EDIF300Parser.T__599:
                        {
                            this.state = 1962;
                            this.typedValue();
                        }
                        break;
                    case EDIF300Parser.T__639:
                        {
                            this.state = 1963;
                            this.untyped();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 1971;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 1969;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 1966;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__165:
                                {
                                    this.state = 1967;
                                    this.fixed();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 1968;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 1973;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 1974;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.cellRef = function () {
        var _localctx = new CellRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 104, EDIF300Parser.RULE_cellRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1976;
                this.match(EDIF300Parser.T__43);
                this.state = 1977;
                this.libraryObjectNameRef();
                this.state = 1979;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 1978;
                        this.libraryRef();
                    }
                }
                this.state = 1981;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.celsius = function () {
        var _localctx = new CelsiusContext(this._ctx, this.state);
        this.enterRule(_localctx, 106, EDIF300Parser.RULE_celsius);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1983;
                this.match(EDIF300Parser.T__44);
                this.state = 1984;
                this.unitExponent();
                this.state = 1985;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.centerJustify = function () {
        var _localctx = new CenterJustifyContext(this._ctx, this.state);
        this.enterRule(_localctx, 108, EDIF300Parser.RULE_centerJustify);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1987;
                this.match(EDIF300Parser.T__45);
                this.state = 1988;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.characterEncoding = function () {
        var _localctx = new CharacterEncodingContext(this._ctx, this.state);
        this.enterRule(_localctx, 110, EDIF300Parser.RULE_characterEncoding);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1990;
                this.match(EDIF300Parser.T__46);
                this.state = 1995;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__11:
                        {
                            this.state = 1991;
                            this.ascii();
                        }
                        break;
                    case EDIF300Parser.T__272:
                        {
                            this.state = 1992;
                            this.iso8859();
                        }
                        break;
                    case EDIF300Parser.T__275:
                        {
                            this.state = 1993;
                            this.jisx0201();
                        }
                        break;
                    case EDIF300Parser.T__276:
                        {
                            this.state = 1994;
                            this.jisx0208();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 1997;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.checkDate = function () {
        var _localctx = new CheckDateContext(this._ctx, this.state);
        this.enterRule(_localctx, 112, EDIF300Parser.RULE_checkDate);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 1999;
                this.match(EDIF300Parser.T__47);
                this.state = 2000;
                this.date();
                this.state = 2001;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.checkDateDisplay = function () {
        var _localctx = new CheckDateDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 114, EDIF300Parser.RULE_checkDateDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2003;
                this.match(EDIF300Parser.T__48);
                this.state = 2007;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2004;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2005;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2006;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2009;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.circle = function () {
        var _localctx = new CircleContext(this._ctx, this.state);
        this.enterRule(_localctx, 116, EDIF300Parser.RULE_circle);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2011;
                this.match(EDIF300Parser.T__49);
                this.state = 2012;
                this.pt1();
                this.state = 2013;
                this.pt2();
                this.state = 2014;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.cluster = function () {
        var _localctx = new ClusterContext(this._ctx, this.state);
        this.enterRule(_localctx, 118, EDIF300Parser.RULE_cluster);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2016;
                this.match(EDIF300Parser.T__50);
                this.state = 2017;
                this.clusterNameDef();
                this.state = 2018;
                this.einterface();
                this.state = 2019;
                this.clusterHeader();
                this.state = 2034;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__17 || _la === EDIF300Parser.T__51 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__88 || _la === EDIF300Parser.T__112 || _la === EDIF300Parser.T__324 || _la === EDIF300Parser.T__330 || _la === EDIF300Parser.T__405 || _la === EDIF300Parser.T__555 || _la === EDIF300Parser.T__567 || _la === EDIF300Parser.T__613 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2032;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__555:
                                {
                                    this.state = 2020;
                                    this.schematicSymbol();
                                }
                                break;
                            case EDIF300Parser.T__567:
                                {
                                    this.state = 2021;
                                    this.schematicView();
                                }
                                break;
                            case EDIF300Parser.T__17:
                                {
                                    this.state = 2022;
                                    this.behaviorView();
                                }
                                break;
                            case EDIF300Parser.T__51:
                                {
                                    this.state = 2023;
                                    this.clusterConfiguration();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2024;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__88:
                                {
                                    this.state = 2025;
                                    this.connectivityView();
                                }
                                break;
                            case EDIF300Parser.T__112:
                                {
                                    this.state = 2026;
                                    this.defaultClusterConfiguration();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2027;
                                    this.userData();
                                }
                                break;
                            case EDIF300Parser.T__324:
                                {
                                    this.state = 2028;
                                    this.logicModelView();
                                }
                                break;
                            case EDIF300Parser.T__330:
                                {
                                    this.state = 2029;
                                    this.maskLayoutView();
                                }
                                break;
                            case EDIF300Parser.T__405:
                                {
                                    this.state = 2030;
                                    this.pcbLayoutView();
                                }
                                break;
                            case EDIF300Parser.T__613:
                                {
                                    this.state = 2031;
                                    this.symbolicLayoutView();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2036;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2037;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterConfiguration = function () {
        var _localctx = new ClusterConfigurationContext(this._ctx, this.state);
        this.enterRule(_localctx, 120, EDIF300Parser.RULE_clusterConfiguration);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2039;
                this.match(EDIF300Parser.T__51);
                this.state = 2040;
                this.clusterConfigurationNameDef();
                this.state = 2044;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__653:
                        {
                            this.state = 2041;
                            this.viewRef();
                        }
                        break;
                    case EDIF300Parser.T__304:
                        {
                            this.state = 2042;
                            this.leaf();
                        }
                        break;
                    case EDIF300Parser.T__630:
                        {
                            this.state = 2043;
                            this.unconfigured();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2055;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__184 || _la === EDIF300Parser.T__204 || _la === EDIF300Parser.T__233 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2053;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2046;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__184:
                                {
                                    this.state = 2047;
                                    this.frameConfiguration();
                                }
                                break;
                            case EDIF300Parser.T__204:
                                {
                                    this.state = 2048;
                                    this.globalPortScope();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 2049;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__233:
                                {
                                    this.state = 2050;
                                    this.instanceConfiguration();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 2051;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2052;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2057;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2058;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterConfigurationNameCaseSensitive = function () {
        var _localctx = new ClusterConfigurationNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 122, EDIF300Parser.RULE_clusterConfigurationNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2060;
                this.match(EDIF300Parser.T__52);
                this.state = 2061;
                this.booleanToken();
                this.state = 2062;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterConfigurationNameDef = function () {
        var _localctx = new ClusterConfigurationNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 124, EDIF300Parser.RULE_clusterConfigurationNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2064;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterConfigurationNameRef = function () {
        var _localctx = new ClusterConfigurationNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 126, EDIF300Parser.RULE_clusterConfigurationNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2066;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterConfigurationRef = function () {
        var _localctx = new ClusterConfigurationRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 128, EDIF300Parser.RULE_clusterConfigurationRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2068;
                this.match(EDIF300Parser.T__53);
                this.state = 2069;
                this.clusterConfigurationNameRef();
                this.state = 2070;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterHeader = function () {
        var _localctx = new ClusterHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 130, EDIF300Parser.RULE_clusterHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2072;
                this.match(EDIF300Parser.T__54);
                this.state = 2079;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 2077;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 2073;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 2074;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 2075;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 2076;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2081;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2082;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterNameCaseSensitive = function () {
        var _localctx = new ClusterNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 132, EDIF300Parser.RULE_clusterNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2084;
                this.match(EDIF300Parser.T__55);
                this.state = 2085;
                this.booleanToken();
                this.state = 2086;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterNameDef = function () {
        var _localctx = new ClusterNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 134, EDIF300Parser.RULE_clusterNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2088;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterNameRef = function () {
        var _localctx = new ClusterNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 136, EDIF300Parser.RULE_clusterNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2090;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterPropertyDisplay = function () {
        var _localctx = new ClusterPropertyDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 138, EDIF300Parser.RULE_clusterPropertyDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2092;
                this.match(EDIF300Parser.T__56);
                this.state = 2093;
                this.propertyNameRef();
                this.state = 2098;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
                    {
                        this.state = 2096;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 2094;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__447:
                                {
                                    this.state = 2095;
                                    this.propertyNameDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2100;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2101;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterPropertyDisplayOverride = function () {
        var _localctx = new ClusterPropertyDisplayOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 140, EDIF300Parser.RULE_clusterPropertyDisplayOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2103;
                this.match(EDIF300Parser.T__57);
                this.state = 2104;
                this.propertyNameRef();
                this.state = 2108;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2105;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2106;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2107;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2111;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__447) {
                    {
                        this.state = 2110;
                        this.propertyNameDisplay();
                    }
                }
                this.state = 2113;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterPropertyOverride = function () {
        var _localctx = new ClusterPropertyOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 142, EDIF300Parser.RULE_clusterPropertyOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2115;
                this.match(EDIF300Parser.T__58);
                this.state = 2116;
                this.propertyNameRef();
                this.state = 2119;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__23:
                    case EDIF300Parser.T__247:
                    case EDIF300Parser.T__336:
                    case EDIF300Parser.T__356:
                    case EDIF300Parser.T__411:
                    case EDIF300Parser.T__599:
                        {
                            this.state = 2117;
                            this.typedValue();
                        }
                        break;
                    case EDIF300Parser.T__639:
                        {
                            this.state = 2118;
                            this.untyped();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2126;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 2124;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2121;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__165:
                                {
                                    this.state = 2122;
                                    this.fixed();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 2123;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2128;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2129;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.clusterRef = function () {
        var _localctx = new ClusterRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 144, EDIF300Parser.RULE_clusterRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2131;
                this.match(EDIF300Parser.T__59);
                this.state = 2132;
                this.clusterNameRef();
                this.state = 2134;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__43) {
                    {
                        this.state = 2133;
                        this.cellRef();
                    }
                }
                this.state = 2136;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.color = function () {
        var _localctx = new ColorContext(this._ctx, this.state);
        this.enterRule(_localctx, 146, EDIF300Parser.RULE_color);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2138;
                this.match(EDIF300Parser.T__60);
                this.state = 2139;
                this.red();
                this.state = 2140;
                this.green();
                this.state = 2141;
                this.blue();
                this.state = 2142;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.comment = function () {
        var _localctx = new CommentContext(this._ctx, this.state);
        this.enterRule(_localctx, 148, EDIF300Parser.RULE_comment);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2144;
                this.match(EDIF300Parser.T__61);
                this.state = 2148;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.STRING_LITERAL) {
                    {
                        {
                            this.state = 2145;
                            this.stringToken();
                        }
                    }
                    this.state = 2150;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2151;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.commentGraphics = function () {
        var _localctx = new CommentGraphicsContext(this._ctx, this.state);
        this.enterRule(_localctx, 150, EDIF300Parser.RULE_commentGraphics);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2153;
                this.match(EDIF300Parser.T__62);
                this.state = 2162;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__368 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2160;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 2154;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2155;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 2156;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__368:
                                {
                                    this.state = 2157;
                                    this.originalBoundingBox();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 2158;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2159;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2164;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2165;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.companyName = function () {
        var _localctx = new CompanyNameContext(this._ctx, this.state);
        this.enterRule(_localctx, 152, EDIF300Parser.RULE_companyName);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2167;
                this.match(EDIF300Parser.T__63);
                this.state = 2168;
                this.stringToken();
                this.state = 2169;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.companyNameDisplay = function () {
        var _localctx = new CompanyNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 154, EDIF300Parser.RULE_companyNameDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2171;
                this.match(EDIF300Parser.T__64);
                this.state = 2175;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2172;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2173;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2174;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2177;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.complementedName = function () {
        var _localctx = new ComplementedNameContext(this._ctx, this.state);
        this.enterRule(_localctx, 156, EDIF300Parser.RULE_complementedName);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2179;
                this.match(EDIF300Parser.T__65);
                this.state = 2186;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__66 || _la === EDIF300Parser.T__344 || _la === EDIF300Parser.T__347 || _la === EDIF300Parser.STRING_LITERAL) {
                    {
                        this.state = 2184;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__66:
                                {
                                    this.state = 2180;
                                    this.complementedNamePart();
                                }
                                break;
                            case EDIF300Parser.T__344:
                                {
                                    this.state = 2181;
                                    this.nameDimension();
                                }
                                break;
                            case EDIF300Parser.T__347:
                                {
                                    this.state = 2182;
                                    this.namePartSeparator();
                                }
                                break;
                            case EDIF300Parser.STRING_LITERAL:
                                {
                                    this.state = 2183;
                                    this.simpleName();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2188;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2189;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.complementedNamePart = function () {
        var _localctx = new ComplementedNamePartContext(this._ctx, this.state);
        this.enterRule(_localctx, 158, EDIF300Parser.RULE_complementedNamePart);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2191;
                this.match(EDIF300Parser.T__66);
                this.state = 2197;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__66 || _la === EDIF300Parser.T__347 || _la === EDIF300Parser.STRING_LITERAL) {
                    {
                        this.state = 2195;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__66:
                                {
                                    this.state = 2192;
                                    this.complementedNamePart();
                                }
                                break;
                            case EDIF300Parser.T__347:
                                {
                                    this.state = 2193;
                                    this.namePartSeparator();
                                }
                                break;
                            case EDIF300Parser.STRING_LITERAL:
                                {
                                    this.state = 2194;
                                    this.simpleName();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2199;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2200;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.complexGeometry = function () {
        var _localctx = new ComplexGeometryContext(this._ctx, this.state);
        this.enterRule(_localctx, 160, EDIF300Parser.RULE_complexGeometry);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2202;
                this.match(EDIF300Parser.T__67);
                this.state = 2203;
                this.geometryMacroRef();
                this.state = 2204;
                this.transform();
                this.state = 2205;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.complexName = function () {
        var _localctx = new ComplexNameContext(this._ctx, this.state);
        this.enterRule(_localctx, 162, EDIF300Parser.RULE_complexName);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2207;
                this.match(EDIF300Parser.T__68);
                this.state = 2214;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__66 || _la === EDIF300Parser.T__344 || _la === EDIF300Parser.T__347 || _la === EDIF300Parser.STRING_LITERAL) {
                    {
                        this.state = 2212;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__66:
                                {
                                    this.state = 2208;
                                    this.complementedNamePart();
                                }
                                break;
                            case EDIF300Parser.T__344:
                                {
                                    this.state = 2209;
                                    this.nameDimension();
                                }
                                break;
                            case EDIF300Parser.T__347:
                                {
                                    this.state = 2210;
                                    this.namePartSeparator();
                                }
                                break;
                            case EDIF300Parser.STRING_LITERAL:
                                {
                                    this.state = 2211;
                                    this.simpleName();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2216;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2217;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.compound = function () {
        var _localctx = new CompoundContext(this._ctx, this.state);
        this.enterRule(_localctx, 164, EDIF300Parser.RULE_compound);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2219;
                this.match(EDIF300Parser.T__69);
                this.state = 2223;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.IDENTIFIER) {
                    {
                        {
                            this.state = 2220;
                            this.logicNameRef();
                        }
                    }
                    this.state = 2225;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2226;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.condition = function () {
        var _localctx = new ConditionContext(this._ctx, this.state);
        this.enterRule(_localctx, 166, EDIF300Parser.RULE_condition);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2228;
                this.match(EDIF300Parser.T__70);
                this.state = 2229;
                this.booleanExpression();
                this.state = 2230;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.conditionDisplay = function () {
        var _localctx = new ConditionDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 168, EDIF300Parser.RULE_conditionDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2232;
                this.match(EDIF300Parser.T__71);
                this.state = 2236;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2233;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2234;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2235;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2238;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectedSignalIndexGenerator = function () {
        var _localctx = new ConnectedSignalIndexGeneratorContext(this._ctx, this.state);
        this.enterRule(_localctx, 170, EDIF300Parser.RULE_connectedSignalIndexGenerator);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2240;
                this.match(EDIF300Parser.T__72);
                this.state = 2241;
                this.integerExpression();
                this.state = 2242;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectedSignalIndexGeneratorDisplay = function () {
        var _localctx = new ConnectedSignalIndexGeneratorDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 172, EDIF300Parser.RULE_connectedSignalIndexGeneratorDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2244;
                this.match(EDIF300Parser.T__73);
                this.state = 2248;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2245;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2246;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2247;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2250;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityBus = function () {
        var _localctx = new ConnectivityBusContext(this._ctx, this.state);
        this.enterRule(_localctx, 174, EDIF300Parser.RULE_connectivityBus);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2252;
                this.match(EDIF300Parser.T__74);
                this.state = 2253;
                this.interconnectNameDef();
                this.state = 2254;
                this.signalGroupRef();
                this.state = 2255;
                this.interconnectHeader();
                this.state = 2256;
                this.connectivityBusJoined();
                this.state = 2263;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 62)) & ~0x1F) === 0 && ((1 << (_la - 62)) & ((1 << (EDIF300Parser.T__61 - 62)) | (1 << (EDIF300Parser.T__76 - 62)) | (1 << (EDIF300Parser.T__83 - 62)))) !== 0) || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2261;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2257;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__76:
                                {
                                    this.state = 2258;
                                    this.connectivityBusSlice();
                                }
                                break;
                            case EDIF300Parser.T__83:
                                {
                                    this.state = 2259;
                                    this.connectivitySubBus();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2260;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2265;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2266;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityBusJoined = function () {
        var _localctx = new ConnectivityBusJoinedContext(this._ctx, this.state);
        this.enterRule(_localctx, 176, EDIF300Parser.RULE_connectivityBusJoined);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2268;
                this.match(EDIF300Parser.T__75);
                this.state = 2269;
                this.portJoined();
                this.state = 2273;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__81) {
                    {
                        {
                            this.state = 2270;
                            this.connectivityRipperRef();
                        }
                    }
                    this.state = 2275;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2276;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityBusSlice = function () {
        var _localctx = new ConnectivityBusSliceContext(this._ctx, this.state);
        this.enterRule(_localctx, 178, EDIF300Parser.RULE_connectivityBusSlice);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2278;
                this.match(EDIF300Parser.T__76);
                this.state = 2279;
                this.interconnectNameDef();
                this.state = 2280;
                this.signalGroupRef();
                this.state = 2281;
                this.interconnectHeader();
                this.state = 2282;
                this.connectivityBusJoined();
                this.state = 2289;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 62)) & ~0x1F) === 0 && ((1 << (_la - 62)) & ((1 << (EDIF300Parser.T__61 - 62)) | (1 << (EDIF300Parser.T__76 - 62)) | (1 << (EDIF300Parser.T__83 - 62)))) !== 0) || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2287;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2283;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__76:
                                {
                                    this.state = 2284;
                                    this.connectivityBusSlice();
                                }
                                break;
                            case EDIF300Parser.T__83:
                                {
                                    this.state = 2285;
                                    this.connectivitySubBus();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2286;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2291;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2292;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityFrameStructure = function () {
        var _localctx = new ConnectivityFrameStructureContext(this._ctx, this.state);
        this.enterRule(_localctx, 180, EDIF300Parser.RULE_connectivityFrameStructure);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2294;
                this.match(EDIF300Parser.T__77);
                this.state = 2295;
                this.connectivityFrameStructureNameDef();
                this.state = 2296;
                this.frameRef();
                this.state = 2306;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 62)) & ~0x1F) === 0 && ((1 << (_la - 62)) & ((1 << (EDIF300Parser.T__61 - 62)) | (1 << (EDIF300Parser.T__74 - 62)) | (1 << (EDIF300Parser.T__77 - 62)) | (1 << (EDIF300Parser.T__78 - 62)) | (1 << (EDIF300Parser.T__80 - 62)))) !== 0) || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2304;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2297;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__74:
                                {
                                    this.state = 2298;
                                    this.connectivityBus();
                                }
                                break;
                            case EDIF300Parser.T__77:
                                {
                                    this.state = 2299;
                                    this.connectivityFrameStructure();
                                }
                                break;
                            case EDIF300Parser.T__78:
                                {
                                    this.state = 2300;
                                    this.connectivityNet();
                                }
                                break;
                            case EDIF300Parser.T__80:
                                {
                                    this.state = 2301;
                                    this.connectivityRipper();
                                }
                                break;
                            case EDIF300Parser.T__619:
                                {
                                    this.state = 2302;
                                    this.timing();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2303;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2308;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2309;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityFrameStructureNameDef = function () {
        var _localctx = new ConnectivityFrameStructureNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 182, EDIF300Parser.RULE_connectivityFrameStructureNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2311;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityNet = function () {
        var _localctx = new ConnectivityNetContext(this._ctx, this.state);
        this.enterRule(_localctx, 184, EDIF300Parser.RULE_connectivityNet);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2313;
                this.match(EDIF300Parser.T__78);
                this.state = 2314;
                this.interconnectNameDef();
                this.state = 2315;
                this.signalRef();
                this.state = 2316;
                this.interconnectHeader();
                this.state = 2317;
                this.connectivityNetJoined();
                this.state = 2323;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__84 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2321;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2318;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__84:
                                {
                                    this.state = 2319;
                                    this.connectivitySubNet();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2320;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2325;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2326;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityNetJoined = function () {
        var _localctx = new ConnectivityNetJoinedContext(this._ctx, this.state);
        this.enterRule(_localctx, 186, EDIF300Parser.RULE_connectivityNetJoined);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2328;
                this.match(EDIF300Parser.T__79);
                this.state = 2331;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__423:
                        {
                            this.state = 2329;
                            this.portJoined();
                        }
                        break;
                    case EDIF300Parser.T__277:
                        {
                            this.state = 2330;
                            this.joinedAsSignal();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2336;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__81) {
                    {
                        {
                            this.state = 2333;
                            this.connectivityRipperRef();
                        }
                    }
                    this.state = 2338;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2339;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityRipper = function () {
        var _localctx = new ConnectivityRipperContext(this._ctx, this.state);
        this.enterRule(_localctx, 188, EDIF300Parser.RULE_connectivityRipper);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2341;
                this.match(EDIF300Parser.T__80);
                this.state = 2342;
                this.connectivityRipperNameDef();
                this.state = 2343;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityRipperNameDef = function () {
        var _localctx = new ConnectivityRipperNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 190, EDIF300Parser.RULE_connectivityRipperNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2345;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityRipperNameRef = function () {
        var _localctx = new ConnectivityRipperNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 192, EDIF300Parser.RULE_connectivityRipperNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2347;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityRipperRef = function () {
        var _localctx = new ConnectivityRipperRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 194, EDIF300Parser.RULE_connectivityRipperRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2349;
                this.match(EDIF300Parser.T__81);
                this.state = 2350;
                this.connectivityRipperNameRef();
                this.state = 2351;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityStructure = function () {
        var _localctx = new ConnectivityStructureContext(this._ctx, this.state);
        this.enterRule(_localctx, 196, EDIF300Parser.RULE_connectivityStructure);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2353;
                this.match(EDIF300Parser.T__82);
                this.state = 2364;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 62)) & ~0x1F) === 0 && ((1 << (_la - 62)) & ((1 << (EDIF300Parser.T__61 - 62)) | (1 << (EDIF300Parser.T__74 - 62)) | (1 << (EDIF300Parser.T__77 - 62)) | (1 << (EDIF300Parser.T__78 - 62)) | (1 << (EDIF300Parser.T__80 - 62)))) !== 0) || _la === EDIF300Parser.T__315 || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2362;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2354;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__74:
                                {
                                    this.state = 2355;
                                    this.connectivityBus();
                                }
                                break;
                            case EDIF300Parser.T__77:
                                {
                                    this.state = 2356;
                                    this.connectivityFrameStructure();
                                }
                                break;
                            case EDIF300Parser.T__78:
                                {
                                    this.state = 2357;
                                    this.connectivityNet();
                                }
                                break;
                            case EDIF300Parser.T__80:
                                {
                                    this.state = 2358;
                                    this.connectivityRipper();
                                }
                                break;
                            case EDIF300Parser.T__315:
                                {
                                    this.state = 2359;
                                    this.localPortGroup();
                                }
                                break;
                            case EDIF300Parser.T__619:
                                {
                                    this.state = 2360;
                                    this.timing();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2361;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2366;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2367;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivitySubBus = function () {
        var _localctx = new ConnectivitySubBusContext(this._ctx, this.state);
        this.enterRule(_localctx, 198, EDIF300Parser.RULE_connectivitySubBus);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2369;
                this.match(EDIF300Parser.T__83);
                this.state = 2370;
                this.interconnectNameDef();
                this.state = 2371;
                this.interconnectHeader();
                this.state = 2372;
                this.connectivityBusJoined();
                this.state = 2379;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 62)) & ~0x1F) === 0 && ((1 << (_la - 62)) & ((1 << (EDIF300Parser.T__61 - 62)) | (1 << (EDIF300Parser.T__76 - 62)) | (1 << (EDIF300Parser.T__83 - 62)))) !== 0) || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2377;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2373;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__76:
                                {
                                    this.state = 2374;
                                    this.connectivityBusSlice();
                                }
                                break;
                            case EDIF300Parser.T__83:
                                {
                                    this.state = 2375;
                                    this.connectivitySubBus();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2376;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2381;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2382;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivitySubNet = function () {
        var _localctx = new ConnectivitySubNetContext(this._ctx, this.state);
        this.enterRule(_localctx, 200, EDIF300Parser.RULE_connectivitySubNet);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2384;
                this.match(EDIF300Parser.T__84);
                this.state = 2385;
                this.interconnectNameDef();
                this.state = 2386;
                this.interconnectHeader();
                this.state = 2387;
                this.connectivityNetJoined();
                this.state = 2393;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__84 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2391;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2388;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__84:
                                {
                                    this.state = 2389;
                                    this.connectivitySubNet();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2390;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2395;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2396;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityTagGenerator = function () {
        var _localctx = new ConnectivityTagGeneratorContext(this._ctx, this.state);
        this.enterRule(_localctx, 202, EDIF300Parser.RULE_connectivityTagGenerator);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2398;
                this.match(EDIF300Parser.T__85);
                this.state = 2399;
                this.stringExpression();
                this.state = 2400;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityTagGeneratorDisplay = function () {
        var _localctx = new ConnectivityTagGeneratorDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 204, EDIF300Parser.RULE_connectivityTagGeneratorDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2402;
                this.match(EDIF300Parser.T__86);
                this.state = 2406;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 2403;
                            this.display();
                        }
                    }
                    this.state = 2408;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2409;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityUnits = function () {
        var _localctx = new ConnectivityUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 206, EDIF300Parser.RULE_connectivityUnits);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2411;
                this.match(EDIF300Parser.T__87);
                this.state = 2414;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__576:
                        {
                            this.state = 2412;
                            this.setCapacitance();
                        }
                        break;
                    case EDIF300Parser.T__580:
                        {
                            this.state = 2413;
                            this.setTime();
                        }
                        break;
                    case EDIF300Parser.T__1:
                        break;
                    default:
                        break;
                }
                this.state = 2416;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityView = function () {
        var _localctx = new ConnectivityViewContext(this._ctx, this.state);
        this.enterRule(_localctx, 208, EDIF300Parser.RULE_connectivityView);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2418;
                this.match(EDIF300Parser.T__88);
                this.state = 2419;
                this.viewNameDef();
                this.state = 2420;
                this.connectivityViewHeader();
                this.state = 2421;
                this.logicalConnectivity();
                this.state = 2422;
                this.connectivityStructure();
                this.state = 2427;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2425;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2423;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2424;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2429;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2430;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.connectivityViewHeader = function () {
        var _localctx = new ConnectivityViewHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 210, EDIF300Parser.RULE_connectivityViewHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2432;
                this.match(EDIF300Parser.T__89);
                this.state = 2433;
                this.connectivityUnits();
                this.state = 2442;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__116 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__439 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 2440;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__116:
                                {
                                    this.state = 2434;
                                    this.derivedFrom();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 2435;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 2436;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__439:
                                {
                                    this.state = 2437;
                                    this.previousVersion();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 2438;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 2439;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2444;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2445;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.constantNameDef = function () {
        var _localctx = new ConstantNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 212, EDIF300Parser.RULE_constantNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2447;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.constantNameRef = function () {
        var _localctx = new ConstantNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 214, EDIF300Parser.RULE_constantNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2449;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.constantValues = function () {
        var _localctx = new ConstantValuesContext(this._ctx, this.state);
        this.enterRule(_localctx, 216, EDIF300Parser.RULE_constantValues);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2451;
                this.match(EDIF300Parser.T__90);
                this.state = 2457;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__24 || _la === EDIF300Parser.T__248 || _la === EDIF300Parser.T__601) {
                    {
                        this.state = 2455;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__24:
                                {
                                    this.state = 2452;
                                    this.booleanConstant();
                                }
                                break;
                            case EDIF300Parser.T__248:
                                {
                                    this.state = 2453;
                                    this.integerConstant();
                                }
                                break;
                            case EDIF300Parser.T__601:
                                {
                                    this.state = 2454;
                                    this.stringConstant();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2459;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2460;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.contract = function () {
        var _localctx = new ContractContext(this._ctx, this.state);
        this.enterRule(_localctx, 218, EDIF300Parser.RULE_contract);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2462;
                this.match(EDIF300Parser.T__91);
                this.state = 2463;
                this.stringToken();
                this.state = 2464;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.contractDisplay = function () {
        var _localctx = new ContractDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 220, EDIF300Parser.RULE_contractDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2466;
                this.match(EDIF300Parser.T__92);
                this.state = 2470;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2467;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2468;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2469;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2472;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.copyright = function () {
        var _localctx = new CopyrightContext(this._ctx, this.state);
        this.enterRule(_localctx, 222, EDIF300Parser.RULE_copyright);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2474;
                this.match(EDIF300Parser.T__93);
                this.state = 2475;
                this.year();
                this.state = 2479;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.STRING_LITERAL) {
                    {
                        {
                            this.state = 2476;
                            this.stringToken();
                        }
                    }
                    this.state = 2481;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2482;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.copyrightDisplay = function () {
        var _localctx = new CopyrightDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 224, EDIF300Parser.RULE_copyrightDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2484;
                this.match(EDIF300Parser.T__94);
                this.state = 2488;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2485;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2486;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2487;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2490;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.cornerType = function () {
        var _localctx = new CornerTypeContext(this._ctx, this.state);
        this.enterRule(_localctx, 226, EDIF300Parser.RULE_cornerType);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2492;
                this.match(EDIF300Parser.T__95);
                this.state = 2496;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__627:
                        {
                            this.state = 2493;
                            this.truncate();
                        }
                        break;
                    case EDIF300Parser.T__466:
                        {
                            this.state = 2494;
                            this.round();
                        }
                        break;
                    case EDIF300Parser.T__154:
                        {
                            this.state = 2495;
                            this.extend();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2498;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.coulomb = function () {
        var _localctx = new CoulombContext(this._ctx, this.state);
        this.enterRule(_localctx, 228, EDIF300Parser.RULE_coulomb);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2500;
                this.match(EDIF300Parser.T__96);
                this.state = 2501;
                this.unitExponent();
                this.state = 2502;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.criticality = function () {
        var _localctx = new CriticalityContext(this._ctx, this.state);
        this.enterRule(_localctx, 230, EDIF300Parser.RULE_criticality);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2504;
                this.match(EDIF300Parser.T__97);
                this.state = 2505;
                this.integerValue();
                this.state = 2506;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.criticalityDisplay = function () {
        var _localctx = new CriticalityDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 232, EDIF300Parser.RULE_criticalityDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2508;
                this.match(EDIF300Parser.T__98);
                this.state = 2512;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 2509;
                            this.display();
                        }
                    }
                    this.state = 2514;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2515;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.currentMap = function () {
        var _localctx = new CurrentMapContext(this._ctx, this.state);
        this.enterRule(_localctx, 234, EDIF300Parser.RULE_currentMap);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2517;
                this.match(EDIF300Parser.T__99);
                this.state = 2518;
                this.currentValue();
                this.state = 2519;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.currentValue = function () {
        var _localctx = new CurrentValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 236, EDIF300Parser.RULE_currentValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2521;
                this.miNoMaxValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.curve = function () {
        var _localctx = new CurveContext(this._ctx, this.state);
        this.enterRule(_localctx, 238, EDIF300Parser.RULE_curve);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2523;
                this.match(EDIF300Parser.T__100);
                this.state = 2528;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__10 || _la === EDIF300Parser.T__450) {
                    {
                        this.state = 2526;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__10:
                                {
                                    this.state = 2524;
                                    this.arc();
                                }
                                break;
                            case EDIF300Parser.T__450:
                                {
                                    this.state = 2525;
                                    this.pointValue();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2530;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2531;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dataOrigin = function () {
        var _localctx = new DataOriginContext(this._ctx, this.state);
        this.enterRule(_localctx, 240, EDIF300Parser.RULE_dataOrigin);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2533;
                this.match(EDIF300Parser.T__101);
                this.state = 2534;
                this.stringToken();
                this.state = 2536;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__643) {
                    {
                        this.state = 2535;
                        this.version();
                    }
                }
                this.state = 2538;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.date = function () {
        var _localctx = new DateContext(this._ctx, this.state);
        this.enterRule(_localctx, 242, EDIF300Parser.RULE_date);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2540;
                this.match(EDIF300Parser.T__102);
                this.state = 2541;
                this.yearNumber();
                this.state = 2542;
                this.monthNumber();
                this.state = 2543;
                this.dayNumber();
                this.state = 2544;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dayNumber = function () {
        var _localctx = new DayNumberContext(this._ctx, this.state);
        this.enterRule(_localctx, 244, EDIF300Parser.RULE_dayNumber);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2546;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dcFanInLoad = function () {
        var _localctx = new DcFanInLoadContext(this._ctx, this.state);
        this.enterRule(_localctx, 246, EDIF300Parser.RULE_dcFanInLoad);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2548;
                this.match(EDIF300Parser.T__103);
                this.state = 2549;
                this.numberValue();
                this.state = 2550;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dcFanInLoadDisplay = function () {
        var _localctx = new DcFanInLoadDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 248, EDIF300Parser.RULE_dcFanInLoadDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2552;
                this.match(EDIF300Parser.T__104);
                this.state = 2556;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2553;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2554;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2555;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2558;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dcFanOutLoad = function () {
        var _localctx = new DcFanOutLoadContext(this._ctx, this.state);
        this.enterRule(_localctx, 250, EDIF300Parser.RULE_dcFanOutLoad);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2560;
                this.match(EDIF300Parser.T__105);
                this.state = 2561;
                this.numberValue();
                this.state = 2562;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dcFanOutLoadDisplay = function () {
        var _localctx = new DcFanOutLoadDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 252, EDIF300Parser.RULE_dcFanOutLoadDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2564;
                this.match(EDIF300Parser.T__106);
                this.state = 2568;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2565;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2566;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2567;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2570;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dcMaxFanIn = function () {
        var _localctx = new DcMaxFanInContext(this._ctx, this.state);
        this.enterRule(_localctx, 254, EDIF300Parser.RULE_dcMaxFanIn);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2572;
                this.match(EDIF300Parser.T__107);
                this.state = 2573;
                this.numberValue();
                this.state = 2574;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dcMaxFanInDisplay = function () {
        var _localctx = new DcMaxFanInDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 256, EDIF300Parser.RULE_dcMaxFanInDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2576;
                this.match(EDIF300Parser.T__108);
                this.state = 2580;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2577;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2578;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2579;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2582;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dcMaxFanOut = function () {
        var _localctx = new DcMaxFanOutContext(this._ctx, this.state);
        this.enterRule(_localctx, 258, EDIF300Parser.RULE_dcMaxFanOut);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2584;
                this.match(EDIF300Parser.T__109);
                this.state = 2585;
                this.numberValue();
                this.state = 2586;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dcMaxFanOutDisplay = function () {
        var _localctx = new DcMaxFanOutDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 260, EDIF300Parser.RULE_dcMaxFanOutDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2588;
                this.match(EDIF300Parser.T__110);
                this.state = 2592;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2589;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2590;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2591;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2594;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.decimalToString = function () {
        var _localctx = new DecimalToStringContext(this._ctx, this.state);
        this.enterRule(_localctx, 262, EDIF300Parser.RULE_decimalToString);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2596;
                this.match(EDIF300Parser.T__111);
                this.state = 2597;
                this.integerExpression();
                this.state = 2599;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__335) {
                    {
                        this.state = 2598;
                        this.minimumStringLength();
                    }
                }
                this.state = 2601;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.defaultClusterConfiguration = function () {
        var _localctx = new DefaultClusterConfigurationContext(this._ctx, this.state);
        this.enterRule(_localctx, 264, EDIF300Parser.RULE_defaultClusterConfiguration);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2603;
                this.match(EDIF300Parser.T__112);
                this.state = 2604;
                this.clusterConfigurationNameRef();
                this.state = 2605;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.defaultConnection = function () {
        var _localctx = new DefaultConnectionContext(this._ctx, this.state);
        this.enterRule(_localctx, 266, EDIF300Parser.RULE_defaultConnection);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2607;
                this.match(EDIF300Parser.T__113);
                this.state = 2608;
                this.globalPortRef();
                this.state = 2609;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.degree = function () {
        var _localctx = new DegreeContext(this._ctx, this.state);
        this.enterRule(_localctx, 268, EDIF300Parser.RULE_degree);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2611;
                this.match(EDIF300Parser.T__114);
                this.state = 2612;
                this.unitExponent();
                this.state = 2613;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.delay = function () {
        var _localctx = new DelayContext(this._ctx, this.state);
        this.enterRule(_localctx, 270, EDIF300Parser.RULE_delay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2615;
                this.match(EDIF300Parser.T__115);
                this.state = 2616;
                this.timeDelay();
                this.state = 2617;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.denominator = function () {
        var _localctx = new DenominatorContext(this._ctx, this.state);
        this.enterRule(_localctx, 272, EDIF300Parser.RULE_denominator);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2619;
                this.integerValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.derivation = function () {
        var _localctx = new DerivationContext(this._ctx, this.state);
        this.enterRule(_localctx, 274, EDIF300Parser.RULE_derivation);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2624;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__34:
                        {
                            this.state = 2621;
                            this.calculated();
                        }
                        break;
                    case EDIF300Parser.T__331:
                        {
                            this.state = 2622;
                            this.measured();
                        }
                        break;
                    case EDIF300Parser.T__458:
                        {
                            this.state = 2623;
                            this.required();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.derivedFrom = function () {
        var _localctx = new DerivedFromContext(this._ctx, this.state);
        this.enterRule(_localctx, 276, EDIF300Parser.RULE_derivedFrom);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2626;
                this.match(EDIF300Parser.T__116);
                this.state = 2627;
                this.viewRef();
                this.state = 2629;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__452) {
                    {
                        this.state = 2628;
                        this.reason();
                    }
                }
                this.state = 2631;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.design = function () {
        var _localctx = new DesignContext(this._ctx, this.state);
        this.enterRule(_localctx, 278, EDIF300Parser.RULE_design);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2633;
                this.match(EDIF300Parser.T__117);
                this.state = 2634;
                this.designNameDef();
                this.state = 2635;
                this.cellRef();
                this.state = 2636;
                this.designHeader();
                this.state = 2642;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__121 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2640;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2637;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__121:
                                {
                                    this.state = 2638;
                                    this.designHierarchy();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2639;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2644;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2645;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.designator = function () {
        var _localctx = new DesignatorContext(this._ctx, this.state);
        this.enterRule(_localctx, 280, EDIF300Parser.RULE_designator);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2647;
                this.match(EDIF300Parser.T__118);
                this.state = 2648;
                this.stringValue();
                this.state = 2649;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.designatorDisplay = function () {
        var _localctx = new DesignatorDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 282, EDIF300Parser.RULE_designatorDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2651;
                this.match(EDIF300Parser.T__119);
                this.state = 2655;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2652;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2653;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2654;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2657;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.designHeader = function () {
        var _localctx = new DesignHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 284, EDIF300Parser.RULE_designHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2659;
                this.match(EDIF300Parser.T__120);
                this.state = 2660;
                this.designUnits();
                this.state = 2667;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 2665;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 2661;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 2662;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 2663;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 2664;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2669;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2670;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.designHierarchy = function () {
        var _localctx = new DesignHierarchyContext(this._ctx, this.state);
        this.enterRule(_localctx, 286, EDIF300Parser.RULE_designHierarchy);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2672;
                this.match(EDIF300Parser.T__121);
                this.state = 2673;
                this.designHierarchyNameDef();
                this.state = 2674;
                this.clusterRef();
                this.state = 2675;
                this.clusterConfigurationRef();
                this.state = 2676;
                this.designHierarchyHeader();
                this.state = 2678;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__362) {
                    {
                        this.state = 2677;
                        this.occurrenceHierarchyAnnotate();
                    }
                }
                this.state = 2680;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.designHierarchyHeader = function () {
        var _localctx = new DesignHierarchyHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 288, EDIF300Parser.RULE_designHierarchyHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2682;
                this.match(EDIF300Parser.T__122);
                this.state = 2691;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__28 || _la === EDIF300Parser.T__252 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__358 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__606) {
                    {
                        this.state = 2689;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__28:
                                {
                                    this.state = 2683;
                                    this.booleanParameterAssign();
                                }
                                break;
                            case EDIF300Parser.T__252:
                                {
                                    this.state = 2684;
                                    this.integerParameterAssign();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 2685;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__358:
                                {
                                    this.state = 2686;
                                    this.numberParameterAssign();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 2687;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__606:
                                {
                                    this.state = 2688;
                                    this.stringParameterAssign();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2693;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2694;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.designHierarchyNameCaseSensitive = function () {
        var _localctx = new DesignHierarchyNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 290, EDIF300Parser.RULE_designHierarchyNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2696;
                this.match(EDIF300Parser.T__123);
                this.state = 2697;
                this.booleanToken();
                this.state = 2698;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.designHierarchyNameDef = function () {
        var _localctx = new DesignHierarchyNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 292, EDIF300Parser.RULE_designHierarchyNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2700;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.designNameCaseSensitive = function () {
        var _localctx = new DesignNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 294, EDIF300Parser.RULE_designNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2702;
                this.match(EDIF300Parser.T__124);
                this.state = 2703;
                this.booleanToken();
                this.state = 2704;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.designNameDef = function () {
        var _localctx = new DesignNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 296, EDIF300Parser.RULE_designNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2706;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.designUnits = function () {
        var _localctx = new DesignUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 298, EDIF300Parser.RULE_designUnits);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2708;
                this.match(EDIF300Parser.T__125);
                this.state = 2713;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__576 || _la === EDIF300Parser.T__580) {
                    {
                        this.state = 2711;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__576:
                                {
                                    this.state = 2709;
                                    this.setCapacitance();
                                }
                                break;
                            case EDIF300Parser.T__580:
                                {
                                    this.state = 2710;
                                    this.setTime();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2715;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2716;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.diagram = function () {
        var _localctx = new DiagramContext(this._ctx, this.state);
        this.enterRule(_localctx, 300, EDIF300Parser.RULE_diagram);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2718;
                this.match(EDIF300Parser.T__126);
                this.state = 2719;
                this.diagramNameDef();
                this.state = 2726;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2724;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 2720;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2721;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 2722;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2723;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2728;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2729;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.diagramNameDef = function () {
        var _localctx = new DiagramNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 302, EDIF300Parser.RULE_diagramNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2731;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.directionalPortAttributeOverride = function () {
        var _localctx = new DirectionalPortAttributeOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 304, EDIF300Parser.RULE_directionalPortAttributeOverride);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2733;
                this.match(EDIF300Parser.T__127);
                this.state = 2737;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__231:
                        {
                            this.state = 2734;
                            this.inputPortAttributes();
                        }
                        break;
                    case EDIF300Parser.T__376:
                        {
                            this.state = 2735;
                            this.outputPortAttributes();
                        }
                        break;
                    case EDIF300Parser.T__20:
                        {
                            this.state = 2736;
                            this.bidirectionalPortAttributes();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2739;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.display = function () {
        var _localctx = new DisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 306, EDIF300Parser.RULE_display);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2741;
                this.match(EDIF300Parser.T__128);
                this.state = 2746;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__162 || _la === EDIF300Parser.IDENTIFIER) {
                    {
                        this.state = 2744;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.IDENTIFIER:
                                {
                                    this.state = 2742;
                                    this.figureGroupNameRef();
                                }
                                break;
                            case EDIF300Parser.T__162:
                                {
                                    this.state = 2743;
                                    this.figureGroupOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2748;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2749;
                this.transform();
                this.state = 2750;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.displayAttributes = function () {
        var _localctx = new DisplayAttributesContext(this._ctx, this.state);
        this.enterRule(_localctx, 308, EDIF300Parser.RULE_displayAttributes);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2752;
                this.match(EDIF300Parser.T__129);
                this.state = 2766;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 31)) & ~0x1F) === 0 && ((1 << (_la - 31)) & ((1 << (EDIF300Parser.T__30 - 31)) | (1 << (EDIF300Parser.T__31 - 31)) | (1 << (EDIF300Parser.T__32 - 31)) | (1 << (EDIF300Parser.T__60 - 31)))) !== 0) || ((((_la - 164)) & ~0x1F) === 0 && ((1 << (_la - 164)) & ((1 << (EDIF300Parser.T__163 - 164)) | (1 << (EDIF300Parser.T__164 - 164)) | (1 << (EDIF300Parser.T__172 - 164)))) !== 0) || _la === EDIF300Parser.T__207 || _la === EDIF300Parser.T__615 || _la === EDIF300Parser.T__644 || _la === EDIF300Parser.T__654) {
                    {
                        this.state = 2764;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__30:
                                {
                                    this.state = 2753;
                                    this.borderPattern();
                                }
                                break;
                            case EDIF300Parser.T__31:
                                {
                                    this.state = 2754;
                                    this.borderPatternVisible();
                                }
                                break;
                            case EDIF300Parser.T__32:
                                {
                                    this.state = 2755;
                                    this.borderWidth();
                                }
                                break;
                            case EDIF300Parser.T__60:
                                {
                                    this.state = 2756;
                                    this.color();
                                }
                                break;
                            case EDIF300Parser.T__163:
                                {
                                    this.state = 2757;
                                    this.fillPattern();
                                }
                                break;
                            case EDIF300Parser.T__164:
                                {
                                    this.state = 2758;
                                    this.fillPatternVisible();
                                }
                                break;
                            case EDIF300Parser.T__172:
                                {
                                    this.state = 2759;
                                    this.fontRef();
                                }
                                break;
                            case EDIF300Parser.T__207:
                                {
                                    this.state = 2760;
                                    this.horizontalJustification();
                                }
                                break;
                            case EDIF300Parser.T__615:
                                {
                                    this.state = 2761;
                                    this.textHeight();
                                }
                                break;
                            case EDIF300Parser.T__644:
                                {
                                    this.state = 2762;
                                    this.verticalJustification();
                                }
                                break;
                            case EDIF300Parser.T__654:
                                {
                                    this.state = 2763;
                                    this.visible();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2768;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2769;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.displayName = function () {
        var _localctx = new DisplayNameContext(this._ctx, this.state);
        this.enterRule(_localctx, 310, EDIF300Parser.RULE_displayName);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2771;
                this.match(EDIF300Parser.T__130);
                this.state = 2772;
                this.stringToken();
                this.state = 2773;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.displayNameOverride = function () {
        var _localctx = new DisplayNameOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 312, EDIF300Parser.RULE_displayNameOverride);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2775;
                this.match(EDIF300Parser.T__131);
                this.state = 2776;
                this.stringToken();
                this.state = 2780;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2777;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2778;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2779;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2782;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.distanceValue = function () {
        var _localctx = new DistanceValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 314, EDIF300Parser.RULE_distanceValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2784;
                this.integerValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dividend = function () {
        var _localctx = new DividendContext(this._ctx, this.state);
        this.enterRule(_localctx, 316, EDIF300Parser.RULE_dividend);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2786;
                this.integerExpression();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.divisor = function () {
        var _localctx = new DivisorContext(this._ctx, this.state);
        this.enterRule(_localctx, 318, EDIF300Parser.RULE_divisor);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2788;
                this.integerExpression();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.documentation = function () {
        var _localctx = new DocumentationContext(this._ctx, this.state);
        this.enterRule(_localctx, 320, EDIF300Parser.RULE_documentation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2790;
                this.match(EDIF300Parser.T__132);
                this.state = 2791;
                this.documentationNameDef();
                this.state = 2792;
                this.documentationHeader();
                this.state = 2796;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__572) {
                    {
                        {
                            this.state = 2793;
                            this.section();
                        }
                    }
                    this.state = 2798;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2799;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.documentationHeader = function () {
        var _localctx = new DocumentationHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 322, EDIF300Parser.RULE_documentationHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2801;
                this.match(EDIF300Parser.T__133);
                this.state = 2802;
                this.documentationUnits();
                this.state = 2808;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 2806;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__14:
                                {
                                    this.state = 2803;
                                    this.backgroundColor();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 2804;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 2805;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2810;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2811;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.documentationNameCaseSensitive = function () {
        var _localctx = new DocumentationNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 324, EDIF300Parser.RULE_documentationNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2813;
                this.match(EDIF300Parser.T__134);
                this.state = 2814;
                this.booleanToken();
                this.state = 2815;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.documentationNameDef = function () {
        var _localctx = new DocumentationNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 326, EDIF300Parser.RULE_documentationNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2817;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.documentationUnits = function () {
        var _localctx = new DocumentationUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 328, EDIF300Parser.RULE_documentationUnits);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2819;
                this.match(EDIF300Parser.T__135);
                this.state = 2824;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__575 || _la === EDIF300Parser.T__578) {
                    {
                        this.state = 2822;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__575:
                                {
                                    this.state = 2820;
                                    this.setAngle();
                                }
                                break;
                            case EDIF300Parser.T__578:
                                {
                                    this.state = 2821;
                                    this.setDistance();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2826;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2827;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dominates = function () {
        var _localctx = new DominatesContext(this._ctx, this.state);
        this.enterRule(_localctx, 330, EDIF300Parser.RULE_dominates);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2829;
                this.match(EDIF300Parser.T__136);
                this.state = 2833;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.IDENTIFIER) {
                    {
                        {
                            this.state = 2830;
                            this.logicNameRef();
                        }
                    }
                    this.state = 2835;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2836;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.dot = function () {
        var _localctx = new DotContext(this._ctx, this.state);
        this.enterRule(_localctx, 332, EDIF300Parser.RULE_dot);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2838;
                this.match(EDIF300Parser.T__137);
                this.state = 2839;
                this.pointValue();
                this.state = 2840;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.drawingDescription = function () {
        var _localctx = new DrawingDescriptionContext(this._ctx, this.state);
        this.enterRule(_localctx, 334, EDIF300Parser.RULE_drawingDescription);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2842;
                this.match(EDIF300Parser.T__138);
                this.state = 2843;
                this.stringToken();
                this.state = 2844;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.drawingDescriptionDisplay = function () {
        var _localctx = new DrawingDescriptionDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 336, EDIF300Parser.RULE_drawingDescriptionDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2846;
                this.match(EDIF300Parser.T__139);
                this.state = 2850;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2847;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2848;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2849;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2852;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.drawingIdentification = function () {
        var _localctx = new DrawingIdentificationContext(this._ctx, this.state);
        this.enterRule(_localctx, 338, EDIF300Parser.RULE_drawingIdentification);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2854;
                this.match(EDIF300Parser.T__140);
                this.state = 2855;
                this.stringToken();
                this.state = 2856;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.drawingIdentificationDisplay = function () {
        var _localctx = new DrawingIdentificationDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 340, EDIF300Parser.RULE_drawingIdentificationDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2858;
                this.match(EDIF300Parser.T__141);
                this.state = 2862;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2859;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2860;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2861;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2864;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.drawingSize = function () {
        var _localctx = new DrawingSizeContext(this._ctx, this.state);
        this.enterRule(_localctx, 342, EDIF300Parser.RULE_drawingSize);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2866;
                this.match(EDIF300Parser.T__142);
                this.state = 2867;
                this.stringToken();
                this.state = 2868;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.drawingSizeDisplay = function () {
        var _localctx = new DrawingSizeDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 344, EDIF300Parser.RULE_drawingSizeDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2870;
                this.match(EDIF300Parser.T__143);
                this.state = 2874;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2871;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2872;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2873;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2876;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.duration = function () {
        var _localctx = new DurationContext(this._ctx, this.state);
        this.enterRule(_localctx, 346, EDIF300Parser.RULE_duration);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2878;
                this.match(EDIF300Parser.T__144);
                this.state = 2879;
                this.timeValue();
                this.state = 2880;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.e = function () {
        var _localctx = new EContext(this._ctx, this.state);
        this.enterRule(_localctx, 348, EDIF300Parser.RULE_e);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2882;
                this.match(EDIF300Parser.T__145);
                this.state = 2883;
                this.mantissa();
                this.state = 2884;
                this.exponent();
                this.state = 2885;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.edif = function () {
        var _localctx = new EdifContext(this._ctx, this.state);
        this.enterRule(_localctx, 350, EDIF300Parser.RULE_edif);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2887;
                this.match(EDIF300Parser.T__146);
                this.state = 2888;
                this.edifNameDef();
                this.state = 2889;
                this.edifVersion();
                this.state = 2890;
                this.edifHeader();
                this.state = 2898;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__117 || _la === EDIF300Parser.T__155 || _la === EDIF300Parser.T__309 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 2896;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__309:
                                {
                                    this.state = 2891;
                                    this.library();
                                }
                                break;
                            case EDIF300Parser.T__117:
                                {
                                    this.state = 2892;
                                    this.design();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 2893;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__155:
                                {
                                    this.state = 2894;
                                    this.external();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 2895;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2900;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2901;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.edifHeader = function () {
        var _localctx = new EdifHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 352, EDIF300Parser.RULE_edifHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2903;
                this.match(EDIF300Parser.T__147);
                this.state = 2904;
                this.edifLevel();
                this.state = 2905;
                this.keywordMap();
                this.state = 2906;
                this.unitDefinitions();
                this.state = 2907;
                this.fontDefinitions();
                this.state = 2908;
                this.physicalDefaults();
                this.state = 2920;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__46 || _la === EDIF300Parser.T__90 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__198 || _la === EDIF300Parser.T__343 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__408 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 2918;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__46:
                                {
                                    this.state = 2909;
                                    this.characterEncoding();
                                }
                                break;
                            case EDIF300Parser.T__90:
                                {
                                    this.state = 2910;
                                    this.constantValues();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 2911;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__198:
                                {
                                    this.state = 2912;
                                    this.globalPortDefinitions();
                                }
                                break;
                            case EDIF300Parser.T__343:
                                {
                                    this.state = 2913;
                                    this.nameCaseSensitivity();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 2914;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__408:
                                {
                                    this.state = 2915;
                                    this.physicalScaling();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 2916;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 2917;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2922;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2923;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.edifLevel = function () {
        var _localctx = new EdifLevelContext(this._ctx, this.state);
        this.enterRule(_localctx, 354, EDIF300Parser.RULE_edifLevel);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2925;
                this.match(EDIF300Parser.T__148);
                this.state = 2926;
                this.edifLevelValue();
                this.state = 2927;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.edifLevelValue = function () {
        var _localctx = new EdifLevelValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 356, EDIF300Parser.RULE_edifLevelValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2929;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.edifNameDef = function () {
        var _localctx = new EdifNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 358, EDIF300Parser.RULE_edifNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2931;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.edifVersion = function () {
        var _localctx = new EdifVersionContext(this._ctx, this.state);
        this.enterRule(_localctx, 360, EDIF300Parser.RULE_edifVersion);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2933;
                this.match(EDIF300Parser.T__149);
                this.state = 2934;
                this.mark();
                this.state = 2935;
                this.issue();
                this.state = 2936;
                this.subIssue();
                this.state = 2937;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.endPoint = function () {
        var _localctx = new EndPointContext(this._ctx, this.state);
        this.enterRule(_localctx, 362, EDIF300Parser.RULE_endPoint);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2939;
                this.pointValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.endType = function () {
        var _localctx = new EndTypeContext(this._ctx, this.state);
        this.enterRule(_localctx, 364, EDIF300Parser.RULE_endType);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2941;
                this.match(EDIF300Parser.T__150);
                this.state = 2945;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__627:
                        {
                            this.state = 2942;
                            this.truncate();
                        }
                        break;
                    case EDIF300Parser.T__466:
                        {
                            this.state = 2943;
                            this.round();
                        }
                        break;
                    case EDIF300Parser.T__154:
                        {
                            this.state = 2944;
                            this.extend();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2947;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.engineeringDate = function () {
        var _localctx = new EngineeringDateContext(this._ctx, this.state);
        this.enterRule(_localctx, 366, EDIF300Parser.RULE_engineeringDate);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2949;
                this.match(EDIF300Parser.T__151);
                this.state = 2950;
                this.date();
                this.state = 2951;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.engineeringDateDisplay = function () {
        var _localctx = new EngineeringDateDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 368, EDIF300Parser.RULE_engineeringDateDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2953;
                this.match(EDIF300Parser.T__152);
                this.state = 2957;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 2954;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 2955;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 2956;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2959;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.event = function () {
        var _localctx = new EventContext(this._ctx, this.state);
        this.enterRule(_localctx, 370, EDIF300Parser.RULE_event);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2961;
                this.match(EDIF300Parser.T__153);
                this.state = 2967;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__436:
                        {
                            this.state = 2962;
                            this.portRef();
                        }
                        break;
                    case EDIF300Parser.T__424:
                        {
                            this.state = 2963;
                            this.portList();
                        }
                        break;
                    case EDIF300Parser.T__437:
                        {
                            this.state = 2964;
                            this.portSet();
                        }
                        break;
                    case EDIF300Parser.T__267:
                        {
                            this.state = 2965;
                            this.interconnectRef();
                        }
                        break;
                    case EDIF300Parser.T__268:
                        {
                            this.state = 2966;
                            this.interconnectSet();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 2973;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
                    {
                        this.state = 2971;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__16:
                                {
                                    this.state = 2969;
                                    this.becomes();
                                }
                                break;
                            case EDIF300Parser.T__625:
                                {
                                    this.state = 2970;
                                    this.transition();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 2975;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 2976;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.exponent = function () {
        var _localctx = new ExponentContext(this._ctx, this.state);
        this.enterRule(_localctx, 372, EDIF300Parser.RULE_exponent);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2978;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extend = function () {
        var _localctx = new ExtendContext(this._ctx, this.state);
        this.enterRule(_localctx, 374, EDIF300Parser.RULE_extend);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2980;
                this.match(EDIF300Parser.T__154);
                this.state = 2981;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendForFrameMemberDef = function () {
        var _localctx = new ExtendForFrameMemberDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 376, EDIF300Parser.RULE_extendForFrameMemberDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2983;
                this.forFrameMemberRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendFrameDef = function () {
        var _localctx = new ExtendFrameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 378, EDIF300Parser.RULE_extendFrameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2985;
                this.frameNameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendInstanceDef = function () {
        var _localctx = new ExtendInstanceDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 380, EDIF300Parser.RULE_extendInstanceDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2987;
                this.instanceNameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendInstanceMemberDef = function () {
        var _localctx = new ExtendInstanceMemberDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 382, EDIF300Parser.RULE_extendInstanceMemberDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2989;
                this.instanceMemberRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendInterconnectDef = function () {
        var _localctx = new ExtendInterconnectDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 384, EDIF300Parser.RULE_extendInterconnectDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2991;
                this.interconnectNameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendPageDef = function () {
        var _localctx = new ExtendPageDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 386, EDIF300Parser.RULE_extendPageDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2993;
                this.pageNameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendPortDef = function () {
        var _localctx = new ExtendPortDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 388, EDIF300Parser.RULE_extendPortDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2995;
                this.portNameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendPortMemberDef = function () {
        var _localctx = new ExtendPortMemberDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 390, EDIF300Parser.RULE_extendPortMemberDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2997;
                this.portMemberRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendSignalDef = function () {
        var _localctx = new ExtendSignalDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 392, EDIF300Parser.RULE_extendSignalDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 2999;
                this.signalNameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendSignalGroupDef = function () {
        var _localctx = new ExtendSignalGroupDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 394, EDIF300Parser.RULE_extendSignalGroupDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3001;
                this.signalGroupNameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.extendSignalMemberDef = function () {
        var _localctx = new ExtendSignalMemberDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 396, EDIF300Parser.RULE_extendSignalMemberDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3003;
                this.signalMemberRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.external = function () {
        var _localctx = new ExternalContext(this._ctx, this.state);
        this.enterRule(_localctx, 398, EDIF300Parser.RULE_external);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3005;
                this.match(EDIF300Parser.T__155);
                this.state = 3006;
                this.libraryNameDef();
                this.state = 3007;
                this.libraryHeader();
                this.state = 3029;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__37 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__192 || _la === EDIF300Parser.T__381 || _la === EDIF300Parser.T__395 || ((((_la - 476)) & ~0x1F) === 0 && ((1 << (_la - 476)) & ((1 << (EDIF300Parser.T__475 - 476)) | (1 << (EDIF300Parser.T__478 - 476)) | (1 << (EDIF300Parser.T__486 - 476)) | (1 << (EDIF300Parser.T__489 - 476)) | (1 << (EDIF300Parser.T__500 - 476)) | (1 << (EDIF300Parser.T__504 - 476)))) !== 0) || ((((_la - 509)) & ~0x1F) === 0 && ((1 << (_la - 509)) & ((1 << (EDIF300Parser.T__508 - 509)) | (1 << (EDIF300Parser.T__517 - 509)) | (1 << (EDIF300Parser.T__521 - 509)) | (1 << (EDIF300Parser.T__524 - 509)))) !== 0) || ((((_la - 549)) & ~0x1F) === 0 && ((1 << (_la - 549)) & ((1 << (EDIF300Parser.T__548 - 549)) | (1 << (EDIF300Parser.T__557 - 549)) | (1 << (EDIF300Parser.T__562 - 549)))) !== 0) || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 3027;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__37:
                                {
                                    this.state = 3008;
                                    this.cell();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3009;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__192:
                                {
                                    this.state = 3010;
                                    this.geometryMacro();
                                }
                                break;
                            case EDIF300Parser.T__381:
                                {
                                    this.state = 3011;
                                    this.pageBorderTemplate();
                                }
                                break;
                            case EDIF300Parser.T__395:
                                {
                                    this.state = 3012;
                                    this.pageTitleBlockTemplate();
                                }
                                break;
                            case EDIF300Parser.T__475:
                                {
                                    this.state = 3013;
                                    this.schematicFigureMacro();
                                }
                                break;
                            case EDIF300Parser.T__478:
                                {
                                    this.state = 3014;
                                    this.schematicForFrameBorderTemplate();
                                }
                                break;
                            case EDIF300Parser.T__486:
                                {
                                    this.state = 3015;
                                    this.schematicGlobalPortTemplate();
                                }
                                break;
                            case EDIF300Parser.T__489:
                                {
                                    this.state = 3016;
                                    this.schematicIfFrameBorderTemplate();
                                }
                                break;
                            case EDIF300Parser.T__500:
                                {
                                    this.state = 3017;
                                    this.schematicInterconnectTerminatorTemplate();
                                }
                                break;
                            case EDIF300Parser.T__504:
                                {
                                    this.state = 3018;
                                    this.schematicJunctionTemplate();
                                }
                                break;
                            case EDIF300Parser.T__508:
                                {
                                    this.state = 3019;
                                    this.schematicMasterPortTemplate();
                                }
                                break;
                            case EDIF300Parser.T__517:
                                {
                                    this.state = 3020;
                                    this.schematicOffPageConnectorTemplate();
                                }
                                break;
                            case EDIF300Parser.T__521:
                                {
                                    this.state = 3021;
                                    this.schematicOnPageConnectorTemplate();
                                }
                                break;
                            case EDIF300Parser.T__524:
                                {
                                    this.state = 3022;
                                    this.schematicOtherwiseFrameBorderTemplate();
                                }
                                break;
                            case EDIF300Parser.T__548:
                                {
                                    this.state = 3023;
                                    this.schematicRipperTemplate();
                                }
                                break;
                            case EDIF300Parser.T__557:
                                {
                                    this.state = 3024;
                                    this.schematicSymbolBorderTemplate();
                                }
                                break;
                            case EDIF300Parser.T__562:
                                {
                                    this.state = 3025;
                                    this.schematicSymbolPortTemplate();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 3026;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3031;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3032;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fahrenheit = function () {
        var _localctx = new FahrenheitContext(this._ctx, this.state);
        this.enterRule(_localctx, 400, EDIF300Parser.RULE_fahrenheit);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3034;
                this.match(EDIF300Parser.T__156);
                this.state = 3035;
                this.unitExponent();
                this.state = 3036;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.efalse = function () {
        var _localctx = new EfalseContext(this._ctx, this.state);
        this.enterRule(_localctx, 402, EDIF300Parser.RULE_efalse);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3038;
                this.match(EDIF300Parser.T__157);
                this.state = 3039;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.farad = function () {
        var _localctx = new FaradContext(this._ctx, this.state);
        this.enterRule(_localctx, 404, EDIF300Parser.RULE_farad);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3041;
                this.match(EDIF300Parser.T__158);
                this.state = 3042;
                this.unitExponent();
                this.state = 3043;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.figure = function () {
        var _localctx = new FigureContext(this._ctx, this.state);
        this.enterRule(_localctx, 406, EDIF300Parser.RULE_figure);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3045;
                this.match(EDIF300Parser.T__159);
                this.state = 3048;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.IDENTIFIER:
                        {
                            this.state = 3046;
                            this.figureGroupNameRef();
                        }
                        break;
                    case EDIF300Parser.T__162:
                        {
                            this.state = 3047;
                            this.figureGroupOverride();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 3062;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 50)) & ~0x1F) === 0 && ((1 << (_la - 50)) & ((1 << (EDIF300Parser.T__49 - 50)) | (1 << (EDIF300Parser.T__61 - 50)) | (1 << (EDIF300Parser.T__67 - 50)))) !== 0) || _la === EDIF300Parser.T__137 || _la === EDIF300Parser.T__365 || _la === EDIF300Parser.T__401 || _la === EDIF300Parser.T__413 || _la === EDIF300Parser.T__453 || _la === EDIF300Parser.T__582 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 3060;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__49:
                                {
                                    this.state = 3050;
                                    this.circle();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3051;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__67:
                                {
                                    this.state = 3052;
                                    this.complexGeometry();
                                }
                                break;
                            case EDIF300Parser.T__137:
                                {
                                    this.state = 3053;
                                    this.dot();
                                }
                                break;
                            case EDIF300Parser.T__365:
                                {
                                    this.state = 3054;
                                    this.openShape();
                                }
                                break;
                            case EDIF300Parser.T__401:
                                {
                                    this.state = 3055;
                                    this.path();
                                }
                                break;
                            case EDIF300Parser.T__413:
                                {
                                    this.state = 3056;
                                    this.polygon();
                                }
                                break;
                            case EDIF300Parser.T__453:
                                {
                                    this.state = 3057;
                                    this.rectangle();
                                }
                                break;
                            case EDIF300Parser.T__582:
                                {
                                    this.state = 3058;
                                    this.shape();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 3059;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3064;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3065;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.figureGroup = function () {
        var _localctx = new FigureGroupContext(this._ctx, this.state);
        this.enterRule(_localctx, 408, EDIF300Parser.RULE_figureGroup);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3067;
                this.match(EDIF300Parser.T__160);
                this.state = 3068;
                this.figureGroupNameDef();
                this.state = 3079;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__95 || _la === EDIF300Parser.T__129 || _la === EDIF300Parser.T__150 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__403 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 3077;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3069;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__95:
                                {
                                    this.state = 3070;
                                    this.cornerType();
                                }
                                break;
                            case EDIF300Parser.T__129:
                                {
                                    this.state = 3071;
                                    this.displayAttributes();
                                }
                                break;
                            case EDIF300Parser.T__150:
                                {
                                    this.state = 3072;
                                    this.endType();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3073;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__403:
                                {
                                    this.state = 3074;
                                    this.pathWidth();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3075;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 3076;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3081;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3082;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.figureGroupNameCaseSensitive = function () {
        var _localctx = new FigureGroupNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 410, EDIF300Parser.RULE_figureGroupNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3084;
                this.match(EDIF300Parser.T__161);
                this.state = 3085;
                this.booleanToken();
                this.state = 3086;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.figureGroupNameDef = function () {
        var _localctx = new FigureGroupNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 412, EDIF300Parser.RULE_figureGroupNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3088;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.figureGroupNameRef = function () {
        var _localctx = new FigureGroupNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 414, EDIF300Parser.RULE_figureGroupNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3090;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.figureGroupOverride = function () {
        var _localctx = new FigureGroupOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 416, EDIF300Parser.RULE_figureGroupOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3092;
                this.match(EDIF300Parser.T__162);
                this.state = 3093;
                this.figureGroupNameRef();
                this.state = 3102;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__95 || _la === EDIF300Parser.T__129 || _la === EDIF300Parser.T__150 || _la === EDIF300Parser.T__403 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 3100;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3094;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__95:
                                {
                                    this.state = 3095;
                                    this.cornerType();
                                }
                                break;
                            case EDIF300Parser.T__129:
                                {
                                    this.state = 3096;
                                    this.displayAttributes();
                                }
                                break;
                            case EDIF300Parser.T__150:
                                {
                                    this.state = 3097;
                                    this.endType();
                                }
                                break;
                            case EDIF300Parser.T__403:
                                {
                                    this.state = 3098;
                                    this.pathWidth();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 3099;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3104;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3105;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fillPattern = function () {
        var _localctx = new FillPatternContext(this._ctx, this.state);
        this.enterRule(_localctx, 418, EDIF300Parser.RULE_fillPattern);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3107;
                this.match(EDIF300Parser.T__163);
                this.state = 3108;
                this.pixelPattern();
                this.state = 3109;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fillPatternVisible = function () {
        var _localctx = new FillPatternVisibleContext(this._ctx, this.state);
        this.enterRule(_localctx, 420, EDIF300Parser.RULE_fillPatternVisible);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3111;
                this.match(EDIF300Parser.T__164);
                this.state = 3112;
                this.booleanValue();
                this.state = 3113;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.firstIntegerExpression = function () {
        var _localctx = new FirstIntegerExpressionContext(this._ctx, this.state);
        this.enterRule(_localctx, 422, EDIF300Parser.RULE_firstIntegerExpression);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3115;
                this.integerExpression();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.firstStringExpression = function () {
        var _localctx = new FirstStringExpressionContext(this._ctx, this.state);
        this.enterRule(_localctx, 424, EDIF300Parser.RULE_firstStringExpression);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3117;
                this.stringExpression();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fixed = function () {
        var _localctx = new FixedContext(this._ctx, this.state);
        this.enterRule(_localctx, 426, EDIF300Parser.RULE_fixed);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3119;
                this.match(EDIF300Parser.T__165);
                this.state = 3120;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.font = function () {
        var _localctx = new FontContext(this._ctx, this.state);
        this.enterRule(_localctx, 428, EDIF300Parser.RULE_font);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3122;
                this.match(EDIF300Parser.T__166);
                this.state = 3123;
                this.fontNameDef();
                this.state = 3124;
                this.typeface();
                this.state = 3125;
                this.fontProportions();
                this.state = 3133;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__22 || _la === EDIF300Parser.T__274 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__449 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 3131;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__22:
                                {
                                    this.state = 3126;
                                    this.boldStyle();
                                }
                                break;
                            case EDIF300Parser.T__274:
                                {
                                    this.state = 3127;
                                    this.italicStyle();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3128;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__449:
                                {
                                    this.state = 3129;
                                    this.proportionalFont();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 3130;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3135;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3136;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fontCapitalHeight = function () {
        var _localctx = new FontCapitalHeightContext(this._ctx, this.state);
        this.enterRule(_localctx, 430, EDIF300Parser.RULE_fontCapitalHeight);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3138;
                this.match(EDIF300Parser.T__167);
                this.state = 3139;
                this.lengthValue();
                this.state = 3140;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fontDefinitions = function () {
        var _localctx = new FontDefinitionsContext(this._ctx, this.state);
        this.enterRule(_localctx, 432, EDIF300Parser.RULE_fontDefinitions);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3142;
                this.match(EDIF300Parser.T__168);
                this.state = 3144;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__173) {
                    {
                        this.state = 3143;
                        this.fonts();
                    }
                }
                this.state = 3146;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fontDescent = function () {
        var _localctx = new FontDescentContext(this._ctx, this.state);
        this.enterRule(_localctx, 434, EDIF300Parser.RULE_fontDescent);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3148;
                this.match(EDIF300Parser.T__169);
                this.state = 3149;
                this.lengthValue();
                this.state = 3150;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fontFamily = function () {
        var _localctx = new FontFamilyContext(this._ctx, this.state);
        this.enterRule(_localctx, 436, EDIF300Parser.RULE_fontFamily);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3152;
                this.stringToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fontHeight = function () {
        var _localctx = new FontHeightContext(this._ctx, this.state);
        this.enterRule(_localctx, 438, EDIF300Parser.RULE_fontHeight);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3154;
                this.match(EDIF300Parser.T__170);
                this.state = 3155;
                this.lengthValue();
                this.state = 3156;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fontNameDef = function () {
        var _localctx = new FontNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 440, EDIF300Parser.RULE_fontNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3158;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fontNameRef = function () {
        var _localctx = new FontNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 442, EDIF300Parser.RULE_fontNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3160;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fontProportions = function () {
        var _localctx = new FontProportionsContext(this._ctx, this.state);
        this.enterRule(_localctx, 444, EDIF300Parser.RULE_fontProportions);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3162;
                this.match(EDIF300Parser.T__171);
                this.state = 3163;
                this.fontHeight();
                this.state = 3164;
                this.fontDescent();
                this.state = 3165;
                this.fontCapitalHeight();
                this.state = 3166;
                this.fontWidth();
                this.state = 3167;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fontRef = function () {
        var _localctx = new FontRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 446, EDIF300Parser.RULE_fontRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3169;
                this.match(EDIF300Parser.T__172);
                this.state = 3170;
                this.fontNameRef();
                this.state = 3171;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fonts = function () {
        var _localctx = new FontsContext(this._ctx, this.state);
        this.enterRule(_localctx, 448, EDIF300Parser.RULE_fonts);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3173;
                this.match(EDIF300Parser.T__173);
                this.state = 3174;
                this.setDistance();
                this.state = 3178;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__166) {
                    {
                        {
                            this.state = 3175;
                            this.font();
                        }
                    }
                    this.state = 3180;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3181;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fontWidth = function () {
        var _localctx = new FontWidthContext(this._ctx, this.state);
        this.enterRule(_localctx, 450, EDIF300Parser.RULE_fontWidth);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3183;
                this.match(EDIF300Parser.T__174);
                this.state = 3184;
                this.lengthValue();
                this.state = 3185;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.forbiddenEvent = function () {
        var _localctx = new ForbiddenEventContext(this._ctx, this.state);
        this.enterRule(_localctx, 452, EDIF300Parser.RULE_forbiddenEvent);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3187;
                this.match(EDIF300Parser.T__175);
                this.state = 3188;
                this.timeInterval();
                this.state = 3192;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__153) {
                    {
                        {
                            this.state = 3189;
                            this.event();
                        }
                    }
                    this.state = 3194;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3195;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.forFrame = function () {
        var _localctx = new ForFrameContext(this._ctx, this.state);
        this.enterRule(_localctx, 454, EDIF300Parser.RULE_forFrame);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3197;
                this.match(EDIF300Parser.T__176);
                this.state = 3198;
                this.frameNameDef();
                this.state = 3199;
                this.repetitionCount();
                this.state = 3200;
                this.forFrameIndex();
                this.state = 3201;
                this.logicalConnectivity();
                this.state = 3209;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 3207;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3202;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 3203;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3204;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3205;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 3206;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3211;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3212;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.forFrameAnnotate = function () {
        var _localctx = new ForFrameAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 456, EDIF300Parser.RULE_forFrameAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3214;
                this.match(EDIF300Parser.T__177);
                this.state = 3215;
                this.extendForFrameMemberDef();
                this.state = 3225;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__177 || _la === EDIF300Parser.T__216 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__305 || _la === EDIF300Parser.T__361 || _la === EDIF300Parser.T__372) {
                    {
                        this.state = 3223;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3216;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__177:
                                {
                                    this.state = 3217;
                                    this.forFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__216:
                                {
                                    this.state = 3218;
                                    this.ifFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__259:
                                {
                                    this.state = 3219;
                                    this.interconnectAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__305:
                                {
                                    this.state = 3220;
                                    this.leafOccurrenceAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__361:
                                {
                                    this.state = 3221;
                                    this.occurrenceAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__372:
                                {
                                    this.state = 3222;
                                    this.otherwiseFrameAnnotate();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3227;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3228;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.forFrameIndex = function () {
        var _localctx = new ForFrameIndexContext(this._ctx, this.state);
        this.enterRule(_localctx, 458, EDIF300Parser.RULE_forFrameIndex);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3230;
                this.match(EDIF300Parser.T__178);
                this.state = 3231;
                this.indexNameDef();
                this.state = 3237;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__224 || _la === EDIF300Parser.T__226 || _la === EDIF300Parser.T__346) {
                    {
                        this.state = 3235;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__224:
                                {
                                    this.state = 3232;
                                    this.indexStart();
                                }
                                break;
                            case EDIF300Parser.T__226:
                                {
                                    this.state = 3233;
                                    this.indexStep();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3234;
                                    this.nameInformation();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3239;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3240;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.forFrameIndexDisplay = function () {
        var _localctx = new ForFrameIndexDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 460, EDIF300Parser.RULE_forFrameIndexDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3242;
                this.match(EDIF300Parser.T__179);
                this.state = 3249;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 223)) & ~0x1F) === 0 && ((1 << (_la - 223)) & ((1 << (EDIF300Parser.T__222 - 223)) | (1 << (EDIF300Parser.T__223 - 223)) | (1 << (EDIF300Parser.T__225 - 223)) | (1 << (EDIF300Parser.T__227 - 223)))) !== 0)) {
                    {
                        this.state = 3247;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__222:
                                {
                                    this.state = 3243;
                                    this.indexEndDisplay();
                                }
                                break;
                            case EDIF300Parser.T__223:
                                {
                                    this.state = 3244;
                                    this.indexNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__225:
                                {
                                    this.state = 3245;
                                    this.indexStartDisplay();
                                }
                                break;
                            case EDIF300Parser.T__227:
                                {
                                    this.state = 3246;
                                    this.indexStepDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3251;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3252;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.forFrameIndexNameCaseSensitive = function () {
        var _localctx = new ForFrameIndexNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 462, EDIF300Parser.RULE_forFrameIndexNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3254;
                this.match(EDIF300Parser.T__180);
                this.state = 3255;
                this.booleanToken();
                this.state = 3256;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.forFrameIndexRef = function () {
        var _localctx = new ForFrameIndexRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 464, EDIF300Parser.RULE_forFrameIndexRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3258;
                this.match(EDIF300Parser.T__181);
                this.state = 3259;
                this.indexNameRef();
                this.state = 3260;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.forFrameMemberRef = function () {
        var _localctx = new ForFrameMemberRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 466, EDIF300Parser.RULE_forFrameMemberRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3262;
                this.match(EDIF300Parser.T__182);
                this.state = 3263;
                this.frameNameRef();
                this.state = 3264;
                this.indexValue();
                this.state = 3265;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.forFrameRef = function () {
        var _localctx = new ForFrameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 468, EDIF300Parser.RULE_forFrameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3267;
                this.match(EDIF300Parser.T__183);
                this.state = 3268;
                this.frameNameRef();
                this.state = 3269;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.frameConfiguration = function () {
        var _localctx = new FrameConfigurationContext(this._ctx, this.state);
        this.enterRule(_localctx, 470, EDIF300Parser.RULE_frameConfiguration);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3271;
                this.match(EDIF300Parser.T__184);
                this.state = 3272;
                this.frameNameRef();
                this.state = 3277;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__184 || _la === EDIF300Parser.T__233) {
                    {
                        this.state = 3275;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__184:
                                {
                                    this.state = 3273;
                                    this.frameConfiguration();
                                }
                                break;
                            case EDIF300Parser.T__233:
                                {
                                    this.state = 3274;
                                    this.instanceConfiguration();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3279;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3280;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.frameNameCaseSensitive = function () {
        var _localctx = new FrameNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 472, EDIF300Parser.RULE_frameNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3282;
                this.match(EDIF300Parser.T__185);
                this.state = 3283;
                this.booleanToken();
                this.state = 3284;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.frameNameDef = function () {
        var _localctx = new FrameNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 474, EDIF300Parser.RULE_frameNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3286;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.frameNameRef = function () {
        var _localctx = new FrameNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 476, EDIF300Parser.RULE_frameNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3288;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.frameRef = function () {
        var _localctx = new FrameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 478, EDIF300Parser.RULE_frameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3290;
                this.match(EDIF300Parser.T__186);
                this.state = 3291;
                this.frameNameRef();
                this.state = 3292;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.frequencyValue = function () {
        var _localctx = new FrequencyValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 480, EDIF300Parser.RULE_frequencyValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3294;
                this.miNoMaxValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fromBottom = function () {
        var _localctx = new FromBottomContext(this._ctx, this.state);
        this.enterRule(_localctx, 482, EDIF300Parser.RULE_fromBottom);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3296;
                this.match(EDIF300Parser.T__187);
                this.state = 3297;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fromInteger = function () {
        var _localctx = new FromIntegerContext(this._ctx, this.state);
        this.enterRule(_localctx, 484, EDIF300Parser.RULE_fromInteger);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3299;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fromLeft = function () {
        var _localctx = new FromLeftContext(this._ctx, this.state);
        this.enterRule(_localctx, 486, EDIF300Parser.RULE_fromLeft);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3301;
                this.match(EDIF300Parser.T__188);
                this.state = 3302;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fromRight = function () {
        var _localctx = new FromRightContext(this._ctx, this.state);
        this.enterRule(_localctx, 488, EDIF300Parser.RULE_fromRight);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3304;
                this.match(EDIF300Parser.T__189);
                this.state = 3305;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.fromTop = function () {
        var _localctx = new FromTopContext(this._ctx, this.state);
        this.enterRule(_localctx, 490, EDIF300Parser.RULE_fromTop);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3307;
                this.match(EDIF300Parser.T__190);
                this.state = 3308;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.generated = function () {
        var _localctx = new GeneratedContext(this._ctx, this.state);
        this.enterRule(_localctx, 492, EDIF300Parser.RULE_generated);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3310;
                this.match(EDIF300Parser.T__191);
                this.state = 3311;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.geometryMacro = function () {
        var _localctx = new GeometryMacroContext(this._ctx, this.state);
        this.enterRule(_localctx, 494, EDIF300Parser.RULE_geometryMacro);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3313;
                this.match(EDIF300Parser.T__192);
                this.state = 3314;
                this.libraryObjectNameDef();
                this.state = 3315;
                this.geometryMacroHeader();
                this.state = 3328;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 50)) & ~0x1F) === 0 && ((1 << (_la - 50)) & ((1 << (EDIF300Parser.T__49 - 50)) | (1 << (EDIF300Parser.T__61 - 50)) | (1 << (EDIF300Parser.T__67 - 50)))) !== 0) || _la === EDIF300Parser.T__137 || _la === EDIF300Parser.T__365 || _la === EDIF300Parser.T__401 || _la === EDIF300Parser.T__413 || _la === EDIF300Parser.T__453 || _la === EDIF300Parser.T__582 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 3326;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__49:
                                {
                                    this.state = 3316;
                                    this.circle();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3317;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__67:
                                {
                                    this.state = 3318;
                                    this.complexGeometry();
                                }
                                break;
                            case EDIF300Parser.T__137:
                                {
                                    this.state = 3319;
                                    this.dot();
                                }
                                break;
                            case EDIF300Parser.T__365:
                                {
                                    this.state = 3320;
                                    this.openShape();
                                }
                                break;
                            case EDIF300Parser.T__401:
                                {
                                    this.state = 3321;
                                    this.path();
                                }
                                break;
                            case EDIF300Parser.T__413:
                                {
                                    this.state = 3322;
                                    this.polygon();
                                }
                                break;
                            case EDIF300Parser.T__453:
                                {
                                    this.state = 3323;
                                    this.rectangle();
                                }
                                break;
                            case EDIF300Parser.T__582:
                                {
                                    this.state = 3324;
                                    this.shape();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 3325;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3330;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3331;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.geometryMacroHeader = function () {
        var _localctx = new GeometryMacroHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 496, EDIF300Parser.RULE_geometryMacroHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3333;
                this.match(EDIF300Parser.T__193);
                this.state = 3334;
                this.geometryMacroUnits();
                this.state = 3343;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__368 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 3341;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__14:
                                {
                                    this.state = 3335;
                                    this.backgroundColor();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 3336;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3337;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__368:
                                {
                                    this.state = 3338;
                                    this.originalBoundingBox();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3339;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 3340;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3345;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3346;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.geometryMacroRef = function () {
        var _localctx = new GeometryMacroRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 498, EDIF300Parser.RULE_geometryMacroRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3348;
                this.match(EDIF300Parser.T__194);
                this.state = 3349;
                this.libraryObjectNameRef();
                this.state = 3351;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 3350;
                        this.libraryRef();
                    }
                }
                this.state = 3353;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.geometryMacroUnits = function () {
        var _localctx = new GeometryMacroUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 500, EDIF300Parser.RULE_geometryMacroUnits);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3355;
                this.match(EDIF300Parser.T__195);
                this.state = 3357;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__575) {
                    {
                        this.state = 3356;
                        this.setAngle();
                    }
                }
                this.state = 3359;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPort = function () {
        var _localctx = new GlobalPortContext(this._ctx, this.state);
        this.enterRule(_localctx, 502, EDIF300Parser.RULE_globalPort);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3361;
                this.match(EDIF300Parser.T__196);
                this.state = 3362;
                this.globalPortNameDef();
                this.state = 3370;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__483 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 3368;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3363;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3364;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3365;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__483:
                                {
                                    this.state = 3366;
                                    this.schematicGlobalPortAttributes();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 3367;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3372;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3373;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPortBundle = function () {
        var _localctx = new GlobalPortBundleContext(this._ctx, this.state);
        this.enterRule(_localctx, 504, EDIF300Parser.RULE_globalPortBundle);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3375;
                this.match(EDIF300Parser.T__197);
                this.state = 3376;
                this.globalPortNameDef();
                this.state = 3377;
                this.globalPortList();
                this.state = 3384;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 3382;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3378;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3379;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3380;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 3381;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3386;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3387;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPortDefinitions = function () {
        var _localctx = new GlobalPortDefinitionsContext(this._ctx, this.state);
        this.enterRule(_localctx, 506, EDIF300Parser.RULE_globalPortDefinitions);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3389;
                this.match(EDIF300Parser.T__198);
                this.state = 3394;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__196 || _la === EDIF300Parser.T__197) {
                    {
                        this.state = 3392;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__196:
                                {
                                    this.state = 3390;
                                    this.globalPort();
                                }
                                break;
                            case EDIF300Parser.T__197:
                                {
                                    this.state = 3391;
                                    this.globalPortBundle();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3396;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3397;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPortList = function () {
        var _localctx = new GlobalPortListContext(this._ctx, this.state);
        this.enterRule(_localctx, 508, EDIF300Parser.RULE_globalPortList);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3399;
                this.match(EDIF300Parser.T__199);
                this.state = 3403;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__203) {
                    {
                        {
                            this.state = 3400;
                            this.globalPortRef();
                        }
                    }
                    this.state = 3405;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3406;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPortNameCaseSensitive = function () {
        var _localctx = new GlobalPortNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 510, EDIF300Parser.RULE_globalPortNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3408;
                this.match(EDIF300Parser.T__200);
                this.state = 3409;
                this.booleanToken();
                this.state = 3410;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPortNameDef = function () {
        var _localctx = new GlobalPortNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 512, EDIF300Parser.RULE_globalPortNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3412;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPortNameDisplay = function () {
        var _localctx = new GlobalPortNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 514, EDIF300Parser.RULE_globalPortNameDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3414;
                this.match(EDIF300Parser.T__201);
                this.state = 3419;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
                    {
                        this.state = 3417;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 3415;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__131:
                                {
                                    this.state = 3416;
                                    this.displayNameOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3421;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3422;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPortNameRef = function () {
        var _localctx = new GlobalPortNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 516, EDIF300Parser.RULE_globalPortNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3424;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPortPropertyDisplay = function () {
        var _localctx = new GlobalPortPropertyDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 518, EDIF300Parser.RULE_globalPortPropertyDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3426;
                this.match(EDIF300Parser.T__202);
                this.state = 3427;
                this.propertyNameRef();
                this.state = 3432;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
                    {
                        this.state = 3430;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 3428;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__447:
                                {
                                    this.state = 3429;
                                    this.propertyNameDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3434;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3435;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPortRef = function () {
        var _localctx = new GlobalPortRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 520, EDIF300Parser.RULE_globalPortRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3437;
                this.match(EDIF300Parser.T__203);
                this.state = 3438;
                this.globalPortNameRef();
                this.state = 3439;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.globalPortScope = function () {
        var _localctx = new GlobalPortScopeContext(this._ctx, this.state);
        this.enterRule(_localctx, 522, EDIF300Parser.RULE_globalPortScope);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3441;
                this.match(EDIF300Parser.T__204);
                this.state = 3442;
                this.globalPortNameRef();
                this.state = 3443;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.green = function () {
        var _localctx = new GreenContext(this._ctx, this.state);
        this.enterRule(_localctx, 524, EDIF300Parser.RULE_green);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3445;
                this.scaledInteger();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.henry = function () {
        var _localctx = new HenryContext(this._ctx, this.state);
        this.enterRule(_localctx, 526, EDIF300Parser.RULE_henry);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3447;
                this.match(EDIF300Parser.T__205);
                this.state = 3448;
                this.unitExponent();
                this.state = 3449;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.hertz = function () {
        var _localctx = new HertzContext(this._ctx, this.state);
        this.enterRule(_localctx, 528, EDIF300Parser.RULE_hertz);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3451;
                this.match(EDIF300Parser.T__206);
                this.state = 3452;
                this.unitExponent();
                this.state = 3453;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.horizontalJustification = function () {
        var _localctx = new HorizontalJustificationContext(this._ctx, this.state);
        this.enterRule(_localctx, 530, EDIF300Parser.RULE_horizontalJustification);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3455;
                this.match(EDIF300Parser.T__207);
                this.state = 3459;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__306:
                        {
                            this.state = 3456;
                            this.leftJustify();
                        }
                        break;
                    case EDIF300Parser.T__45:
                        {
                            this.state = 3457;
                            this.centerJustify();
                        }
                        break;
                    case EDIF300Parser.T__462:
                        {
                            this.state = 3458;
                            this.rightJustify();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 3461;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.hotspot = function () {
        var _localctx = new HotspotContext(this._ctx, this.state);
        this.enterRule(_localctx, 532, EDIF300Parser.RULE_hotspot);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3463;
                this.match(EDIF300Parser.T__208);
                this.state = 3464;
                this.pointValue();
                this.state = 3471;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__209 || _la === EDIF300Parser.T__212 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__569) {
                    {
                        this.state = 3469;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__209:
                                {
                                    this.state = 3465;
                                    this.hotspotConnectDirection();
                                }
                                break;
                            case EDIF300Parser.T__212:
                                {
                                    this.state = 3466;
                                    this.hotspotNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3467;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__569:
                                {
                                    this.state = 3468;
                                    this.schematicWireAffinity();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3473;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3474;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.hotspotConnectDirection = function () {
        var _localctx = new HotspotConnectDirectionContext(this._ctx, this.state);
        this.enterRule(_localctx, 534, EDIF300Parser.RULE_hotspotConnectDirection);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3476;
                this.match(EDIF300Parser.T__209);
                this.state = 3483;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 188)) & ~0x1F) === 0 && ((1 << (_la - 188)) & ((1 << (EDIF300Parser.T__187 - 188)) | (1 << (EDIF300Parser.T__188 - 188)) | (1 << (EDIF300Parser.T__189 - 188)) | (1 << (EDIF300Parser.T__190 - 188)))) !== 0)) {
                    {
                        this.state = 3481;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__187:
                                {
                                    this.state = 3477;
                                    this.fromBottom();
                                }
                                break;
                            case EDIF300Parser.T__188:
                                {
                                    this.state = 3478;
                                    this.fromLeft();
                                }
                                break;
                            case EDIF300Parser.T__189:
                                {
                                    this.state = 3479;
                                    this.fromRight();
                                }
                                break;
                            case EDIF300Parser.T__190:
                                {
                                    this.state = 3480;
                                    this.fromTop();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3485;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3486;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.hotspotGrid = function () {
        var _localctx = new HotspotGridContext(this._ctx, this.state);
        this.enterRule(_localctx, 536, EDIF300Parser.RULE_hotspotGrid);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3488;
                this.match(EDIF300Parser.T__210);
                this.state = 3489;
                this.lengthValue();
                this.state = 3490;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.hotspotNameCaseSensitive = function () {
        var _localctx = new HotspotNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 538, EDIF300Parser.RULE_hotspotNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3492;
                this.match(EDIF300Parser.T__211);
                this.state = 3493;
                this.booleanToken();
                this.state = 3494;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.hotspotNameDef = function () {
        var _localctx = new HotspotNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 540, EDIF300Parser.RULE_hotspotNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3496;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.hotspotNameDisplay = function () {
        var _localctx = new HotspotNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 542, EDIF300Parser.RULE_hotspotNameDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3498;
                this.match(EDIF300Parser.T__212);
                this.state = 3503;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
                    {
                        this.state = 3501;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 3499;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__131:
                                {
                                    this.state = 3500;
                                    this.displayNameOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3505;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3506;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.hotspotNameRef = function () {
        var _localctx = new HotspotNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 544, EDIF300Parser.RULE_hotspotNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3508;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.hourNumber = function () {
        var _localctx = new HourNumberContext(this._ctx, this.state);
        this.enterRule(_localctx, 546, EDIF300Parser.RULE_hourNumber);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3510;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ieeeDesignation = function () {
        var _localctx = new IeeeDesignationContext(this._ctx, this.state);
        this.enterRule(_localctx, 548, EDIF300Parser.RULE_ieeeDesignation);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3512;
                this.stringToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ieeeSection = function () {
        var _localctx = new IeeeSectionContext(this._ctx, this.state);
        this.enterRule(_localctx, 550, EDIF300Parser.RULE_ieeeSection);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3514;
                this.match(EDIF300Parser.T__213);
                this.state = 3518;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.DECIMAL_LITERAL) {
                    {
                        {
                            this.state = 3515;
                            this.integerToken();
                        }
                    }
                    this.state = 3520;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3521;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ieeeStandard = function () {
        var _localctx = new IeeeStandardContext(this._ctx, this.state);
        this.enterRule(_localctx, 552, EDIF300Parser.RULE_ieeeStandard);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3523;
                this.match(EDIF300Parser.T__214);
                this.state = 3524;
                this.ieeeDesignation();
                this.state = 3525;
                this.year();
                this.state = 3530;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__213) {
                    {
                        this.state = 3528;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3526;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__213:
                                {
                                    this.state = 3527;
                                    this.ieeeSection();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3532;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3533;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ifFrame = function () {
        var _localctx = new IfFrameContext(this._ctx, this.state);
        this.enterRule(_localctx, 554, EDIF300Parser.RULE_ifFrame);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3535;
                this.match(EDIF300Parser.T__215);
                this.state = 3536;
                this.frameNameDef();
                this.state = 3537;
                this.condition();
                this.state = 3538;
                this.logicalConnectivity();
                this.state = 3546;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 3544;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3539;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3540;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 3541;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3542;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 3543;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3548;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3549;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ifFrameAnnotate = function () {
        var _localctx = new IfFrameAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 556, EDIF300Parser.RULE_ifFrameAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3551;
                this.match(EDIF300Parser.T__216);
                this.state = 3552;
                this.extendFrameDef();
                this.state = 3563;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__177 || _la === EDIF300Parser.T__216 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__305 || _la === EDIF300Parser.T__361 || _la === EDIF300Parser.T__372 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 3561;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3553;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__177:
                                {
                                    this.state = 3554;
                                    this.forFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__216:
                                {
                                    this.state = 3555;
                                    this.ifFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__259:
                                {
                                    this.state = 3556;
                                    this.interconnectAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__305:
                                {
                                    this.state = 3557;
                                    this.leafOccurrenceAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__361:
                                {
                                    this.state = 3558;
                                    this.occurrenceAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__372:
                                {
                                    this.state = 3559;
                                    this.otherwiseFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 3560;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3565;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3566;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ifFrameRef = function () {
        var _localctx = new IfFrameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 558, EDIF300Parser.RULE_ifFrameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3568;
                this.match(EDIF300Parser.T__217);
                this.state = 3569;
                this.frameNameRef();
                this.state = 3570;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ifFrameSet = function () {
        var _localctx = new IfFrameSetContext(this._ctx, this.state);
        this.enterRule(_localctx, 560, EDIF300Parser.RULE_ifFrameSet);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3572;
                this.match(EDIF300Parser.T__218);
                this.state = 3576;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__217) {
                    {
                        {
                            this.state = 3573;
                            this.ifFrameRef();
                        }
                    }
                    this.state = 3578;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3579;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ignore = function () {
        var _localctx = new IgnoreContext(this._ctx, this.state);
        this.enterRule(_localctx, 562, EDIF300Parser.RULE_ignore);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3581;
                this.match(EDIF300Parser.T__219);
                this.state = 3582;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.implementationNameCaseSensitive = function () {
        var _localctx = new ImplementationNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 564, EDIF300Parser.RULE_implementationNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3584;
                this.match(EDIF300Parser.T__220);
                this.state = 3585;
                this.booleanToken();
                this.state = 3586;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.implementationNameDef = function () {
        var _localctx = new ImplementationNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 566, EDIF300Parser.RULE_implementationNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3588;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.implementationNameDisplay = function () {
        var _localctx = new ImplementationNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 568, EDIF300Parser.RULE_implementationNameDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3590;
                this.match(EDIF300Parser.T__221);
                this.state = 3595;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
                    {
                        this.state = 3593;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 3591;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__131:
                                {
                                    this.state = 3592;
                                    this.displayNameOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3597;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3598;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.implementationNameRef = function () {
        var _localctx = new ImplementationNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 570, EDIF300Parser.RULE_implementationNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3600;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.indexEndDisplay = function () {
        var _localctx = new IndexEndDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 572, EDIF300Parser.RULE_indexEndDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3602;
                this.match(EDIF300Parser.T__222);
                this.state = 3606;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 3603;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 3604;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 3605;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 3608;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.indexNameDef = function () {
        var _localctx = new IndexNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 574, EDIF300Parser.RULE_indexNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3610;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.indexNameDisplay = function () {
        var _localctx = new IndexNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 576, EDIF300Parser.RULE_indexNameDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3612;
                this.match(EDIF300Parser.T__223);
                this.state = 3616;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 3613;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 3614;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 3615;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 3618;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.indexNameRef = function () {
        var _localctx = new IndexNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 578, EDIF300Parser.RULE_indexNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3620;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.indexStart = function () {
        var _localctx = new IndexStartContext(this._ctx, this.state);
        this.enterRule(_localctx, 580, EDIF300Parser.RULE_indexStart);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3622;
                this.match(EDIF300Parser.T__224);
                this.state = 3623;
                this.integerExpression();
                this.state = 3624;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.indexStartDisplay = function () {
        var _localctx = new IndexStartDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 582, EDIF300Parser.RULE_indexStartDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3626;
                this.match(EDIF300Parser.T__225);
                this.state = 3630;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 3627;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 3628;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 3629;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 3632;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.indexStep = function () {
        var _localctx = new IndexStepContext(this._ctx, this.state);
        this.enterRule(_localctx, 584, EDIF300Parser.RULE_indexStep);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3634;
                this.match(EDIF300Parser.T__226);
                this.state = 3635;
                this.integerExpression();
                this.state = 3636;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.indexStepDisplay = function () {
        var _localctx = new IndexStepDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 586, EDIF300Parser.RULE_indexStepDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3638;
                this.match(EDIF300Parser.T__227);
                this.state = 3642;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 3639;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 3640;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 3641;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 3644;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.indexValue = function () {
        var _localctx = new IndexValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 588, EDIF300Parser.RULE_indexValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3646;
                this.match(EDIF300Parser.T__228);
                this.state = 3647;
                this.integerToken();
                this.state = 3648;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.input = function () {
        var _localctx = new InputContext(this._ctx, this.state);
        this.enterRule(_localctx, 590, EDIF300Parser.RULE_input);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3650;
                this.match(EDIF300Parser.T__229);
                this.state = 3651;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.inputPort = function () {
        var _localctx = new InputPortContext(this._ctx, this.state);
        this.enterRule(_localctx, 592, EDIF300Parser.RULE_inputPort);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3653;
                this.match(EDIF300Parser.T__230);
                this.state = 3655;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__231) {
                    {
                        this.state = 3654;
                        this.inputPortAttributes();
                    }
                }
                this.state = 3657;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.inputPortAttributes = function () {
        var _localctx = new InputPortAttributesContext(this._ctx, this.state);
        this.enterRule(_localctx, 594, EDIF300Parser.RULE_inputPortAttributes);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3659;
                this.match(EDIF300Parser.T__231);
                this.state = 3664;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__105 || _la === EDIF300Parser.T__107) {
                    {
                        this.state = 3662;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__105:
                                {
                                    this.state = 3660;
                                    this.dcFanOutLoad();
                                }
                                break;
                            case EDIF300Parser.T__107:
                                {
                                    this.state = 3661;
                                    this.dcMaxFanIn();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3666;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3667;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instance = function () {
        var _localctx = new InstanceContext(this._ctx, this.state);
        this.enterRule(_localctx, 596, EDIF300Parser.RULE_instance);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3669;
                this.match(EDIF300Parser.T__232);
                this.state = 3670;
                this.instanceNameDef();
                this.state = 3671;
                this.clusterRef();
                this.state = 3689;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__28 || ((((_la - 43)) & ~0x1F) === 0 && ((1 << (_la - 43)) & ((1 << (EDIF300Parser.T__42 - 43)) | (1 << (EDIF300Parser.T__58 - 43)) | (1 << (EDIF300Parser.T__61 - 43)))) !== 0) || _la === EDIF300Parser.T__118 || ((((_la - 239)) & ~0x1F) === 0 && ((1 << (_la - 239)) & ((1 << (EDIF300Parser.T__238 - 239)) | (1 << (EDIF300Parser.T__241 - 239)) | (1 << (EDIF300Parser.T__245 - 239)) | (1 << (EDIF300Parser.T__252 - 239)))) !== 0) || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__358 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__606 || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 3687;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__28:
                                {
                                    this.state = 3672;
                                    this.booleanParameterAssign();
                                }
                                break;
                            case EDIF300Parser.T__42:
                                {
                                    this.state = 3673;
                                    this.cellPropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__58:
                                {
                                    this.state = 3674;
                                    this.clusterPropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3675;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__118:
                                {
                                    this.state = 3676;
                                    this.designator();
                                }
                                break;
                            case EDIF300Parser.T__238:
                                {
                                    this.state = 3677;
                                    this.instanceNameGenerator();
                                }
                                break;
                            case EDIF300Parser.T__241:
                                {
                                    this.state = 3678;
                                    this.instancePortAttributes();
                                }
                                break;
                            case EDIF300Parser.T__245:
                                {
                                    this.state = 3679;
                                    this.instanceWidth();
                                }
                                break;
                            case EDIF300Parser.T__252:
                                {
                                    this.state = 3680;
                                    this.integerParameterAssign();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3681;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__358:
                                {
                                    this.state = 3682;
                                    this.numberParameterAssign();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3683;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__606:
                                {
                                    this.state = 3684;
                                    this.stringParameterAssign();
                                }
                                break;
                            case EDIF300Parser.T__619:
                                {
                                    this.state = 3685;
                                    this.timing();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 3686;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3691;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3692;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceConfiguration = function () {
        var _localctx = new InstanceConfigurationContext(this._ctx, this.state);
        this.enterRule(_localctx, 598, EDIF300Parser.RULE_instanceConfiguration);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3694;
                this.match(EDIF300Parser.T__233);
                this.state = 3695;
                this.instanceNameRef();
                this.state = 3696;
                this.clusterConfigurationRef();
                this.state = 3697;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceIndexValue = function () {
        var _localctx = new InstanceIndexValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 600, EDIF300Parser.RULE_instanceIndexValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3699;
                this.match(EDIF300Parser.T__234);
                this.state = 3700;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceMemberRef = function () {
        var _localctx = new InstanceMemberRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 602, EDIF300Parser.RULE_instanceMemberRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3702;
                this.match(EDIF300Parser.T__235);
                this.state = 3703;
                this.instanceNameRef();
                this.state = 3704;
                this.indexValue();
                this.state = 3705;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceNameCaseSensitive = function () {
        var _localctx = new InstanceNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 604, EDIF300Parser.RULE_instanceNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3707;
                this.match(EDIF300Parser.T__236);
                this.state = 3708;
                this.booleanToken();
                this.state = 3709;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceNameDef = function () {
        var _localctx = new InstanceNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 606, EDIF300Parser.RULE_instanceNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3711;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceNameDisplay = function () {
        var _localctx = new InstanceNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 608, EDIF300Parser.RULE_instanceNameDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3713;
                this.match(EDIF300Parser.T__237);
                this.state = 3718;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
                    {
                        this.state = 3716;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 3714;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__131:
                                {
                                    this.state = 3715;
                                    this.displayNameOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3720;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3721;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceNameGenerator = function () {
        var _localctx = new InstanceNameGeneratorContext(this._ctx, this.state);
        this.enterRule(_localctx, 610, EDIF300Parser.RULE_instanceNameGenerator);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3723;
                this.match(EDIF300Parser.T__238);
                this.state = 3724;
                this.stringExpression();
                this.state = 3725;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceNameGeneratorDisplay = function () {
        var _localctx = new InstanceNameGeneratorDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 612, EDIF300Parser.RULE_instanceNameGeneratorDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3727;
                this.match(EDIF300Parser.T__239);
                this.state = 3731;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 3728;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 3729;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 3730;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 3733;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceNameRef = function () {
        var _localctx = new InstanceNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 614, EDIF300Parser.RULE_instanceNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3735;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instancePortAttributeDisplay = function () {
        var _localctx = new InstancePortAttributeDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 616, EDIF300Parser.RULE_instancePortAttributeDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3737;
                this.match(EDIF300Parser.T__240);
                this.state = 3738;
                this.symbolPortImplementationNameRef();
                this.state = 3739;
                this.portRef();
                this.state = 3744;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__416 || _la === EDIF300Parser.T__434) {
                    {
                        this.state = 3742;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__434:
                                {
                                    this.state = 3740;
                                    this.portPropertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__416:
                                {
                                    this.state = 3741;
                                    this.portAttributeDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3746;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3747;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instancePortAttributes = function () {
        var _localctx = new InstancePortAttributesContext(this._ctx, this.state);
        this.enterRule(_localctx, 618, EDIF300Parser.RULE_instancePortAttributes);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3749;
                this.match(EDIF300Parser.T__241);
                this.state = 3750;
                this.extendPortDef();
                this.state = 3765;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__2 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__72 || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__127 || ((((_la - 419)) & ~0x1F) === 0 && ((1 << (_la - 419)) & ((1 << (EDIF300Parser.T__418 - 419)) | (1 << (EDIF300Parser.T__420 - 419)) | (1 << (EDIF300Parser.T__425 - 419)) | (1 << (EDIF300Parser.T__427 - 419)) | (1 << (EDIF300Parser.T__435 - 419)) | (1 << (EDIF300Parser.T__442 - 419)))) !== 0) || _la === EDIF300Parser.T__640) {
                    {
                        this.state = 3763;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__2:
                                {
                                    this.state = 3751;
                                    this.acLoad();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3752;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__72:
                                {
                                    this.state = 3753;
                                    this.connectedSignalIndexGenerator();
                                }
                                break;
                            case EDIF300Parser.T__118:
                                {
                                    this.state = 3754;
                                    this.designator();
                                }
                                break;
                            case EDIF300Parser.T__127:
                                {
                                    this.state = 3755;
                                    this.directionalPortAttributeOverride();
                                }
                                break;
                            case EDIF300Parser.T__418:
                                {
                                    this.state = 3756;
                                    this.portDelay();
                                }
                                break;
                            case EDIF300Parser.T__420:
                                {
                                    this.state = 3757;
                                    this.portDelayOverride();
                                }
                                break;
                            case EDIF300Parser.T__425:
                                {
                                    this.state = 3758;
                                    this.portLoadDelay();
                                }
                                break;
                            case EDIF300Parser.T__427:
                                {
                                    this.state = 3759;
                                    this.portLoadDelayOverride();
                                }
                                break;
                            case EDIF300Parser.T__435:
                                {
                                    this.state = 3760;
                                    this.portPropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3761;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__640:
                                {
                                    this.state = 3762;
                                    this.unused();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3767;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3768;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instancePropertyDisplay = function () {
        var _localctx = new InstancePropertyDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 620, EDIF300Parser.RULE_instancePropertyDisplay);
        var _la;
        try {
            var _alt = void 0;
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3770;
                this.match(EDIF300Parser.T__242);
                this.state = 3771;
                this.propertyNameRef();
                this.state = 3775;
                this._errHandler.sync(this);
                _alt = this.interpreter.adaptivePredict(this._input, 212, this._ctx);
                while (_alt !== 2 && _alt !== ATN_1.ATN.INVALID_ALT_NUMBER) {
                    if (_alt === 1) {
                        {
                            {
                                this.state = 3772;
                                this.display();
                            }
                        }
                    }
                    this.state = 3777;
                    this._errHandler.sync(this);
                    _alt = this.interpreter.adaptivePredict(this._input, 212, this._ctx);
                }
                this.state = 3779;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__447) {
                    {
                        this.state = 3778;
                        this.propertyNameDisplay();
                    }
                }
                this.state = 3784;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 3781;
                            this.display();
                        }
                    }
                    this.state = 3786;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3787;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instancePropertyOverride = function () {
        var _localctx = new InstancePropertyOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 622, EDIF300Parser.RULE_instancePropertyOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3789;
                this.match(EDIF300Parser.T__243);
                this.state = 3790;
                this.propertyNameRef();
                this.state = 3793;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__23:
                    case EDIF300Parser.T__247:
                    case EDIF300Parser.T__336:
                    case EDIF300Parser.T__356:
                    case EDIF300Parser.T__411:
                    case EDIF300Parser.T__599:
                        {
                            this.state = 3791;
                            this.typedValue();
                        }
                        break;
                    case EDIF300Parser.T__639:
                        {
                            this.state = 3792;
                            this.untyped();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 3800;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 3798;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3795;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__165:
                                {
                                    this.state = 3796;
                                    this.fixed();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 3797;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3802;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3803;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceRef = function () {
        var _localctx = new InstanceRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 624, EDIF300Parser.RULE_instanceRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3805;
                this.match(EDIF300Parser.T__244);
                this.state = 3806;
                this.instanceNameRef();
                this.state = 3807;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceWidth = function () {
        var _localctx = new InstanceWidthContext(this._ctx, this.state);
        this.enterRule(_localctx, 626, EDIF300Parser.RULE_instanceWidth);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3809;
                this.match(EDIF300Parser.T__245);
                this.state = 3810;
                this.integerExpression();
                this.state = 3811;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.instanceWidthDisplay = function () {
        var _localctx = new InstanceWidthDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 628, EDIF300Parser.RULE_instanceWidthDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3813;
                this.match(EDIF300Parser.T__246);
                this.state = 3817;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 3814;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 3815;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 3816;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 3819;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integer = function () {
        var _localctx = new IntegerContext(this._ctx, this.state);
        this.enterRule(_localctx, 630, EDIF300Parser.RULE_integer);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3821;
                this.match(EDIF300Parser.T__247);
                this.state = 3822;
                this.integerExpression();
                this.state = 3823;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerConstant = function () {
        var _localctx = new IntegerConstantContext(this._ctx, this.state);
        this.enterRule(_localctx, 632, EDIF300Parser.RULE_integerConstant);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3825;
                this.match(EDIF300Parser.T__248);
                this.state = 3826;
                this.constantNameDef();
                this.state = 3827;
                this.integerToken();
                this.state = 3828;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerConstantRef = function () {
        var _localctx = new IntegerConstantRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 634, EDIF300Parser.RULE_integerConstantRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3830;
                this.match(EDIF300Parser.T__249);
                this.state = 3831;
                this.constantNameRef();
                this.state = 3832;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerEqual = function () {
        var _localctx = new IntegerEqualContext(this._ctx, this.state);
        this.enterRule(_localctx, 636, EDIF300Parser.RULE_integerEqual);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3834;
                this.match(EDIF300Parser.T__250);
                this.state = 3835;
                this.firstIntegerExpression();
                this.state = 3836;
                this.secondIntegerExpression();
                this.state = 3837;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerExpression = function () {
        var _localctx = new IntegerExpressionContext(this._ctx, this.state);
        this.enterRule(_localctx, 638, EDIF300Parser.RULE_integerExpression);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3853;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__253:
                        {
                            this.state = 3839;
                            this.integerParameterRef();
                        }
                        break;
                    case EDIF300Parser.DECIMAL_LITERAL:
                        {
                            this.state = 3840;
                            this.integerToken();
                        }
                        break;
                    case EDIF300Parser.T__254:
                        {
                            this.state = 3841;
                            this.integerProduct();
                        }
                        break;
                    case EDIF300Parser.T__257:
                        {
                            this.state = 3842;
                            this.integerSubtract();
                        }
                        break;
                    case EDIF300Parser.T__258:
                        {
                            this.state = 3843;
                            this.integerSum();
                        }
                        break;
                    case EDIF300Parser.T__256:
                        {
                            this.state = 3844;
                            this.integerRemainder();
                        }
                        break;
                    case EDIF300Parser.T__255:
                        {
                            this.state = 3845;
                            this.integerQuotient();
                        }
                        break;
                    case EDIF300Parser.T__604:
                        {
                            this.state = 3846;
                            this.stringLength();
                        }
                        break;
                    case EDIF300Parser.T__249:
                        {
                            this.state = 3847;
                            this.integerConstantRef();
                        }
                        break;
                    case EDIF300Parser.T__181:
                        {
                            this.state = 3848;
                            this.forFrameIndexRef();
                        }
                        break;
                    case EDIF300Parser.T__421:
                        {
                            this.state = 3849;
                            this.portIndexValue();
                        }
                        break;
                    case EDIF300Parser.T__590:
                        {
                            this.state = 3850;
                            this.signalIndexValue();
                        }
                        break;
                    case EDIF300Parser.T__0:
                        {
                            this.state = 3851;
                            this.absolute();
                        }
                        break;
                    case EDIF300Parser.T__234:
                        {
                            this.state = 3852;
                            this.instanceIndexValue();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerParameter = function () {
        var _localctx = new IntegerParameterContext(this._ctx, this.state);
        this.enterRule(_localctx, 640, EDIF300Parser.RULE_integerParameter);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3855;
                this.match(EDIF300Parser.T__251);
                this.state = 3856;
                this.parameterNameDef();
                this.state = 3861;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__247 || _la === EDIF300Parser.T__346) {
                    {
                        this.state = 3859;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__247:
                                {
                                    this.state = 3857;
                                    this.integer();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3858;
                                    this.nameInformation();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3863;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3864;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerParameterAssign = function () {
        var _localctx = new IntegerParameterAssignContext(this._ctx, this.state);
        this.enterRule(_localctx, 642, EDIF300Parser.RULE_integerParameterAssign);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3866;
                this.match(EDIF300Parser.T__252);
                this.state = 3867;
                this.parameterNameRef();
                this.state = 3868;
                this.integerExpression();
                this.state = 3869;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerParameterRef = function () {
        var _localctx = new IntegerParameterRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 644, EDIF300Parser.RULE_integerParameterRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3871;
                this.match(EDIF300Parser.T__253);
                this.state = 3872;
                this.parameterNameRef();
                this.state = 3873;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerProduct = function () {
        var _localctx = new IntegerProductContext(this._ctx, this.state);
        this.enterRule(_localctx, 646, EDIF300Parser.RULE_integerProduct);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3875;
                this.match(EDIF300Parser.T__254);
                this.state = 3879;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__0 || _la === EDIF300Parser.T__181 || ((((_la - 235)) & ~0x1F) === 0 && ((1 << (_la - 235)) & ((1 << (EDIF300Parser.T__234 - 235)) | (1 << (EDIF300Parser.T__249 - 235)) | (1 << (EDIF300Parser.T__253 - 235)) | (1 << (EDIF300Parser.T__254 - 235)) | (1 << (EDIF300Parser.T__255 - 235)) | (1 << (EDIF300Parser.T__256 - 235)) | (1 << (EDIF300Parser.T__257 - 235)) | (1 << (EDIF300Parser.T__258 - 235)))) !== 0) || _la === EDIF300Parser.T__421 || _la === EDIF300Parser.T__590 || _la === EDIF300Parser.T__604 || _la === EDIF300Parser.DECIMAL_LITERAL) {
                    {
                        {
                            this.state = 3876;
                            this.integerExpression();
                        }
                    }
                    this.state = 3881;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3882;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerQuotient = function () {
        var _localctx = new IntegerQuotientContext(this._ctx, this.state);
        this.enterRule(_localctx, 648, EDIF300Parser.RULE_integerQuotient);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3884;
                this.match(EDIF300Parser.T__255);
                this.state = 3885;
                this.dividend();
                this.state = 3886;
                this.divisor();
                this.state = 3887;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerRemainder = function () {
        var _localctx = new IntegerRemainderContext(this._ctx, this.state);
        this.enterRule(_localctx, 650, EDIF300Parser.RULE_integerRemainder);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3889;
                this.match(EDIF300Parser.T__256);
                this.state = 3890;
                this.dividend();
                this.state = 3891;
                this.divisor();
                this.state = 3892;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerSubtract = function () {
        var _localctx = new IntegerSubtractContext(this._ctx, this.state);
        this.enterRule(_localctx, 652, EDIF300Parser.RULE_integerSubtract);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3894;
                this.match(EDIF300Parser.T__257);
                this.state = 3895;
                this.minuend();
                this.state = 3896;
                this.subtrahend();
                this.state = 3897;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerSum = function () {
        var _localctx = new IntegerSumContext(this._ctx, this.state);
        this.enterRule(_localctx, 654, EDIF300Parser.RULE_integerSum);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3899;
                this.match(EDIF300Parser.T__258);
                this.state = 3903;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__0 || _la === EDIF300Parser.T__181 || ((((_la - 235)) & ~0x1F) === 0 && ((1 << (_la - 235)) & ((1 << (EDIF300Parser.T__234 - 235)) | (1 << (EDIF300Parser.T__249 - 235)) | (1 << (EDIF300Parser.T__253 - 235)) | (1 << (EDIF300Parser.T__254 - 235)) | (1 << (EDIF300Parser.T__255 - 235)) | (1 << (EDIF300Parser.T__256 - 235)) | (1 << (EDIF300Parser.T__257 - 235)) | (1 << (EDIF300Parser.T__258 - 235)))) !== 0) || _la === EDIF300Parser.T__421 || _la === EDIF300Parser.T__590 || _la === EDIF300Parser.T__604 || _la === EDIF300Parser.DECIMAL_LITERAL) {
                    {
                        {
                            this.state = 3900;
                            this.integerExpression();
                        }
                    }
                    this.state = 3905;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3906;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerValue = function () {
        var _localctx = new IntegerValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 656, EDIF300Parser.RULE_integerValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3908;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectAnnotate = function () {
        var _localctx = new InterconnectAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 658, EDIF300Parser.RULE_interconnectAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3910;
                this.match(EDIF300Parser.T__259);
                this.state = 3911;
                this.extendInterconnectDef();
                this.state = 3920;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__97 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__261 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 3918;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 3912;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__259:
                                {
                                    this.state = 3913;
                                    this.interconnectAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__97:
                                {
                                    this.state = 3914;
                                    this.criticality();
                                }
                                break;
                            case EDIF300Parser.T__261:
                                {
                                    this.state = 3915;
                                    this.interconnectDelay();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3916;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 3917;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3922;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3923;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectAttachedText = function () {
        var _localctx = new InterconnectAttachedTextContext(this._ctx, this.state);
        this.enterRule(_localctx, 660, EDIF300Parser.RULE_interconnectAttachedText);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3925;
                this.match(EDIF300Parser.T__260);
                this.state = 3926;
                this.attachmentPoint();
                this.state = 3935;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__86 || _la === EDIF300Parser.T__98 || ((((_la - 263)) & ~0x1F) === 0 && ((1 << (_la - 263)) & ((1 << (EDIF300Parser.T__262 - 263)) | (1 << (EDIF300Parser.T__265 - 263)) | (1 << (EDIF300Parser.T__266 - 263)))) !== 0)) {
                    {
                        this.state = 3933;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 3927;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__86:
                                {
                                    this.state = 3928;
                                    this.connectivityTagGeneratorDisplay();
                                }
                                break;
                            case EDIF300Parser.T__98:
                                {
                                    this.state = 3929;
                                    this.criticalityDisplay();
                                }
                                break;
                            case EDIF300Parser.T__262:
                                {
                                    this.state = 3930;
                                    this.interconnectDelayDisplay();
                                }
                                break;
                            case EDIF300Parser.T__265:
                                {
                                    this.state = 3931;
                                    this.interconnectNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__266:
                                {
                                    this.state = 3932;
                                    this.interconnectPropertyDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3937;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3938;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectDelay = function () {
        var _localctx = new InterconnectDelayContext(this._ctx, this.state);
        this.enterRule(_localctx, 662, EDIF300Parser.RULE_interconnectDelay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3940;
                this.match(EDIF300Parser.T__261);
                this.state = 3941;
                this.interconnectDelayNameDef();
                this.state = 3942;
                this.derivation();
                this.state = 3943;
                this.delay();
                this.state = 3948;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
                    {
                        this.state = 3946;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__16:
                                {
                                    this.state = 3944;
                                    this.becomes();
                                }
                                break;
                            case EDIF300Parser.T__625:
                                {
                                    this.state = 3945;
                                    this.transition();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3950;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3951;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectDelayDisplay = function () {
        var _localctx = new InterconnectDelayDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 664, EDIF300Parser.RULE_interconnectDelayDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3953;
                this.match(EDIF300Parser.T__262);
                this.state = 3954;
                this.interconnectDelayNameRef();
                this.state = 3958;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 3955;
                            this.display();
                        }
                    }
                    this.state = 3960;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3961;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectDelayNameDef = function () {
        var _localctx = new InterconnectDelayNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 666, EDIF300Parser.RULE_interconnectDelayNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3963;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectDelayNameRef = function () {
        var _localctx = new InterconnectDelayNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 668, EDIF300Parser.RULE_interconnectDelayNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3965;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectHeader = function () {
        var _localctx = new InterconnectHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 670, EDIF300Parser.RULE_interconnectHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3967;
                this.match(EDIF300Parser.T__263);
                this.state = 3975;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__97 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__261 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442) {
                    {
                        this.state = 3973;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__97:
                                {
                                    this.state = 3968;
                                    this.criticality();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 3969;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__261:
                                {
                                    this.state = 3970;
                                    this.interconnectDelay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 3971;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 3972;
                                    this.property();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3977;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3978;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectNameCaseSensitive = function () {
        var _localctx = new InterconnectNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 672, EDIF300Parser.RULE_interconnectNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3980;
                this.match(EDIF300Parser.T__264);
                this.state = 3981;
                this.booleanToken();
                this.state = 3982;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectNameDef = function () {
        var _localctx = new InterconnectNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 674, EDIF300Parser.RULE_interconnectNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3984;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectNameDisplay = function () {
        var _localctx = new InterconnectNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 676, EDIF300Parser.RULE_interconnectNameDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3986;
                this.match(EDIF300Parser.T__265);
                this.state = 3991;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
                    {
                        this.state = 3989;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 3987;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__131:
                                {
                                    this.state = 3988;
                                    this.displayNameOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 3993;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 3994;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectNameRef = function () {
        var _localctx = new InterconnectNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 678, EDIF300Parser.RULE_interconnectNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3996;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectPropertyDisplay = function () {
        var _localctx = new InterconnectPropertyDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 680, EDIF300Parser.RULE_interconnectPropertyDisplay);
        var _la;
        try {
            var _alt = void 0;
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 3998;
                this.match(EDIF300Parser.T__266);
                this.state = 3999;
                this.propertyNameRef();
                this.state = 4003;
                this._errHandler.sync(this);
                _alt = this.interpreter.adaptivePredict(this._input, 235, this._ctx);
                while (_alt !== 2 && _alt !== ATN_1.ATN.INVALID_ALT_NUMBER) {
                    if (_alt === 1) {
                        {
                            {
                                this.state = 4000;
                                this.display();
                            }
                        }
                    }
                    this.state = 4005;
                    this._errHandler.sync(this);
                    _alt = this.interpreter.adaptivePredict(this._input, 235, this._ctx);
                }
                this.state = 4007;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__447) {
                    {
                        this.state = 4006;
                        this.propertyNameDisplay();
                    }
                }
                this.state = 4012;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 4009;
                            this.display();
                        }
                    }
                    this.state = 4014;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4015;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectRef = function () {
        var _localctx = new InterconnectRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 682, EDIF300Parser.RULE_interconnectRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4017;
                this.match(EDIF300Parser.T__267);
                this.state = 4018;
                this.interconnectNameRef();
                this.state = 4020;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__389) {
                    {
                        this.state = 4019;
                        this.pageRef();
                    }
                }
                this.state = 4022;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interconnectSet = function () {
        var _localctx = new InterconnectSetContext(this._ctx, this.state);
        this.enterRule(_localctx, 684, EDIF300Parser.RULE_interconnectSet);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4024;
                this.match(EDIF300Parser.T__268);
                this.state = 4028;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__267) {
                    {
                        {
                            this.state = 4025;
                            this.interconnectRef();
                        }
                    }
                    this.state = 4030;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4031;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.einterface = function () {
        var _localctx = new EinterfaceContext(this._ctx, this.state);
        this.enterRule(_localctx, 686, EDIF300Parser.RULE_einterface);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4033;
                this.match(EDIF300Parser.T__269);
                this.state = 4034;
                this.interfaceUnits();
                this.state = 4049;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__27 || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__251 || _la === EDIF300Parser.T__270 || _la === EDIF300Parser.T__341 || _la === EDIF300Parser.T__357 || ((((_la - 407)) & ~0x1F) === 0 && ((1 << (_la - 407)) & ((1 << (EDIF300Parser.T__406 - 407)) | (1 << (EDIF300Parser.T__414 - 407)) | (1 << (EDIF300Parser.T__417 - 407)))) !== 0) || _la === EDIF300Parser.T__605 || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__659) {
                    {
                        this.state = 4047;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__118:
                                {
                                    this.state = 4035;
                                    this.designator();
                                }
                                break;
                            case EDIF300Parser.T__27:
                                {
                                    this.state = 4036;
                                    this.booleanParameter();
                                }
                                break;
                            case EDIF300Parser.T__251:
                                {
                                    this.state = 4037;
                                    this.integerParameter();
                                }
                                break;
                            case EDIF300Parser.T__270:
                                {
                                    this.state = 4038;
                                    this.interfaceJoined();
                                }
                                break;
                            case EDIF300Parser.T__341:
                                {
                                    this.state = 4039;
                                    this.mustJoin();
                                }
                                break;
                            case EDIF300Parser.T__357:
                                {
                                    this.state = 4040;
                                    this.numberParameter();
                                }
                                break;
                            case EDIF300Parser.T__406:
                                {
                                    this.state = 4041;
                                    this.permutable();
                                }
                                break;
                            case EDIF300Parser.T__414:
                                {
                                    this.state = 4042;
                                    this.port();
                                }
                                break;
                            case EDIF300Parser.T__417:
                                {
                                    this.state = 4043;
                                    this.portBundle();
                                }
                                break;
                            case EDIF300Parser.T__605:
                                {
                                    this.state = 4044;
                                    this.stringParameter();
                                }
                                break;
                            case EDIF300Parser.T__619:
                                {
                                    this.state = 4045;
                                    this.timing();
                                }
                                break;
                            case EDIF300Parser.T__659:
                                {
                                    this.state = 4046;
                                    this.weakJoined();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4051;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4052;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interfaceJoined = function () {
        var _localctx = new InterfaceJoinedContext(this._ctx, this.state);
        this.enterRule(_localctx, 688, EDIF300Parser.RULE_interfaceJoined);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4054;
                this.match(EDIF300Parser.T__270);
                this.state = 4058;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__436) {
                    {
                        {
                            this.state = 4055;
                            this.portRef();
                        }
                    }
                    this.state = 4060;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4061;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.interfaceUnits = function () {
        var _localctx = new InterfaceUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 690, EDIF300Parser.RULE_interfaceUnits);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4063;
                this.match(EDIF300Parser.T__271);
                this.state = 4068;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__576 || _la === EDIF300Parser.T__580) {
                    {
                        this.state = 4066;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__576:
                                {
                                    this.state = 4064;
                                    this.setCapacitance();
                                }
                                break;
                            case EDIF300Parser.T__580:
                                {
                                    this.state = 4065;
                                    this.setTime();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4070;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4071;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.iso8859 = function () {
        var _localctx = new Iso8859Context(this._ctx, this.state);
        this.enterRule(_localctx, 692, EDIF300Parser.RULE_iso8859);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4073;
                this.match(EDIF300Parser.T__272);
                this.state = 4074;
                this.iso8859Part();
                this.state = 4075;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.iso8859Part = function () {
        var _localctx = new Iso8859PartContext(this._ctx, this.state);
        this.enterRule(_localctx, 694, EDIF300Parser.RULE_iso8859Part);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4077;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.isolated = function () {
        var _localctx = new IsolatedContext(this._ctx, this.state);
        this.enterRule(_localctx, 696, EDIF300Parser.RULE_isolated);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4079;
                this.match(EDIF300Parser.T__273);
                this.state = 4080;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.issue = function () {
        var _localctx = new IssueContext(this._ctx, this.state);
        this.enterRule(_localctx, 698, EDIF300Parser.RULE_issue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4082;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.italicStyle = function () {
        var _localctx = new ItalicStyleContext(this._ctx, this.state);
        this.enterRule(_localctx, 700, EDIF300Parser.RULE_italicStyle);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4084;
                this.match(EDIF300Parser.T__274);
                this.state = 4085;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.jisx0201 = function () {
        var _localctx = new Jisx0201Context(this._ctx, this.state);
        this.enterRule(_localctx, 702, EDIF300Parser.RULE_jisx0201);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4087;
                this.match(EDIF300Parser.T__275);
                this.state = 4088;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.jisx0208 = function () {
        var _localctx = new Jisx0208Context(this._ctx, this.state);
        this.enterRule(_localctx, 704, EDIF300Parser.RULE_jisx0208);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4090;
                this.match(EDIF300Parser.T__276);
                this.state = 4091;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.joinedAsSignal = function () {
        var _localctx = new JoinedAsSignalContext(this._ctx, this.state);
        this.enterRule(_localctx, 706, EDIF300Parser.RULE_joinedAsSignal);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4093;
                this.match(EDIF300Parser.T__277);
                this.state = 4094;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.joule = function () {
        var _localctx = new JouleContext(this._ctx, this.state);
        this.enterRule(_localctx, 708, EDIF300Parser.RULE_joule);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4096;
                this.match(EDIF300Parser.T__278);
                this.state = 4097;
                this.unitExponent();
                this.state = 4098;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k0KeywordLevel = function () {
        var _localctx = new K0KeywordLevelContext(this._ctx, this.state);
        this.enterRule(_localctx, 710, EDIF300Parser.RULE_k0KeywordLevel);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4100;
                this.match(EDIF300Parser.T__279);
                this.state = 4101;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k1KeywordAlias = function () {
        var _localctx = new K1KeywordAliasContext(this._ctx, this.state);
        this.enterRule(_localctx, 712, EDIF300Parser.RULE_k1KeywordAlias);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4103;
                this.match(EDIF300Parser.T__280);
                this.state = 4104;
                this.k1KeywordNameDef();
                this.state = 4105;
                this.k1KeywordNameRef();
                this.state = 4106;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k1KeywordLevel = function () {
        var _localctx = new K1KeywordLevelContext(this._ctx, this.state);
        this.enterRule(_localctx, 714, EDIF300Parser.RULE_k1KeywordLevel);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4108;
                this.match(EDIF300Parser.T__281);
                this.state = 4112;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__280) {
                    {
                        {
                            this.state = 4109;
                            this.k1KeywordAlias();
                        }
                    }
                    this.state = 4114;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4115;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k1KeywordNameDef = function () {
        var _localctx = new K1KeywordNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 716, EDIF300Parser.RULE_k1KeywordNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4117;
                this.match(EDIF300Parser.IDENTIFIER);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k1KeywordNameRef = function () {
        var _localctx = new K1KeywordNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 718, EDIF300Parser.RULE_k1KeywordNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4119;
                this.match(EDIF300Parser.IDENTIFIER);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2Actual = function () {
        var _localctx = new K2ActualContext(this._ctx, this.state);
        this.enterRule(_localctx, 720, EDIF300Parser.RULE_k2Actual);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4121;
                this.match(EDIF300Parser.T__282);
                this.state = 4122;
                this.k2FormalNameRef();
                this.state = 4123;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2Build = function () {
        var _localctx = new K2BuildContext(this._ctx, this.state);
        this.enterRule(_localctx, 722, EDIF300Parser.RULE_k2Build);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4125;
                this.match(EDIF300Parser.T__283);
                this.state = 4126;
                this.k1KeywordNameRef();
                this.state = 4133;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || ((((_la - 283)) & ~0x1F) === 0 && ((1 << (_la - 283)) & ((1 << (EDIF300Parser.T__282 - 283)) | (1 << (EDIF300Parser.T__283 - 283)) | (1 << (EDIF300Parser.T__289 - 283)))) !== 0)) {
                    {
                        this.state = 4131;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4127;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__282:
                                {
                                    this.state = 4128;
                                    this.k2Actual();
                                }
                                break;
                            case EDIF300Parser.T__283:
                                {
                                    this.state = 4129;
                                    this.k2Build();
                                }
                                break;
                            case EDIF300Parser.T__289:
                                {
                                    this.state = 4130;
                                    this.k2Literal();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4135;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4136;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2Formal = function () {
        var _localctx = new K2FormalContext(this._ctx, this.state);
        this.enterRule(_localctx, 724, EDIF300Parser.RULE_k2Formal);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4138;
                this.match(EDIF300Parser.T__284);
                this.state = 4139;
                this.k2FormalNameDef();
                this.state = 4142;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__290:
                        {
                            this.state = 4140;
                            this.k2Optional();
                        }
                        break;
                    case EDIF300Parser.T__291:
                        {
                            this.state = 4141;
                            this.k2Required();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4144;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2FormalNameDef = function () {
        var _localctx = new K2FormalNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 726, EDIF300Parser.RULE_k2FormalNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4146;
                this.match(EDIF300Parser.IDENTIFIER);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2FormalNameRef = function () {
        var _localctx = new K2FormalNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 728, EDIF300Parser.RULE_k2FormalNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4148;
                this.match(EDIF300Parser.IDENTIFIER);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2Generate = function () {
        var _localctx = new K2GenerateContext(this._ctx, this.state);
        this.enterRule(_localctx, 730, EDIF300Parser.RULE_k2Generate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4150;
                this.match(EDIF300Parser.T__285);
                this.state = 4157;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || ((((_la - 283)) & ~0x1F) === 0 && ((1 << (_la - 283)) & ((1 << (EDIF300Parser.T__282 - 283)) | (1 << (EDIF300Parser.T__283 - 283)) | (1 << (EDIF300Parser.T__289 - 283)))) !== 0)) {
                    {
                        this.state = 4155;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4151;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__282:
                                {
                                    this.state = 4152;
                                    this.k2Actual();
                                }
                                break;
                            case EDIF300Parser.T__283:
                                {
                                    this.state = 4153;
                                    this.k2Build();
                                }
                                break;
                            case EDIF300Parser.T__289:
                                {
                                    this.state = 4154;
                                    this.k2Literal();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4159;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4160;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2KeywordDefine = function () {
        var _localctx = new K2KeywordDefineContext(this._ctx, this.state);
        this.enterRule(_localctx, 732, EDIF300Parser.RULE_k2KeywordDefine);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4162;
                this.match(EDIF300Parser.T__286);
                this.state = 4163;
                this.k1KeywordNameDef();
                this.state = 4164;
                this.k2KeywordParameters();
                this.state = 4165;
                this.k2Generate();
                this.state = 4166;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2KeywordLevel = function () {
        var _localctx = new K2KeywordLevelContext(this._ctx, this.state);
        this.enterRule(_localctx, 734, EDIF300Parser.RULE_k2KeywordLevel);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4168;
                this.match(EDIF300Parser.T__287);
                this.state = 4173;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__280 || _la === EDIF300Parser.T__286) {
                    {
                        this.state = 4171;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__280:
                                {
                                    this.state = 4169;
                                    this.k1KeywordAlias();
                                }
                                break;
                            case EDIF300Parser.T__286:
                                {
                                    this.state = 4170;
                                    this.k2KeywordDefine();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4175;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4176;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2KeywordParameters = function () {
        var _localctx = new K2KeywordParametersContext(this._ctx, this.state);
        this.enterRule(_localctx, 736, EDIF300Parser.RULE_k2KeywordParameters);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4178;
                this.match(EDIF300Parser.T__288);
                this.state = 4182;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__284) {
                    {
                        {
                            this.state = 4179;
                            this.k2Formal();
                        }
                    }
                    this.state = 4184;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4185;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2Literal = function () {
        var _localctx = new K2LiteralContext(this._ctx, this.state);
        this.enterRule(_localctx, 738, EDIF300Parser.RULE_k2Literal);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4187;
                this.match(EDIF300Parser.T__289);
                this.state = 4193;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 667)) & ~0x1F) === 0 && ((1 << (_la - 667)) & ((1 << (EDIF300Parser.IDENTIFIER - 667)) | (1 << (EDIF300Parser.STRING_LITERAL - 667)) | (1 << (EDIF300Parser.DECIMAL_LITERAL - 667)))) !== 0)) {
                    {
                        this.state = 4191;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.IDENTIFIER:
                                {
                                    this.state = 4188;
                                    this.match(EDIF300Parser.IDENTIFIER);
                                }
                                break;
                            case EDIF300Parser.DECIMAL_LITERAL:
                                {
                                    this.state = 4189;
                                    this.integerToken();
                                }
                                break;
                            case EDIF300Parser.STRING_LITERAL:
                                {
                                    this.state = 4190;
                                    this.stringToken();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4195;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4196;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2Optional = function () {
        var _localctx = new K2OptionalContext(this._ctx, this.state);
        this.enterRule(_localctx, 740, EDIF300Parser.RULE_k2Optional);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4198;
                this.match(EDIF300Parser.T__290);
                this.state = 4202;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__289:
                        {
                            this.state = 4199;
                            this.k2Literal();
                        }
                        break;
                    case EDIF300Parser.T__282:
                        {
                            this.state = 4200;
                            this.k2Actual();
                        }
                        break;
                    case EDIF300Parser.T__283:
                        {
                            this.state = 4201;
                            this.k2Build();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4204;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k2Required = function () {
        var _localctx = new K2RequiredContext(this._ctx, this.state);
        this.enterRule(_localctx, 742, EDIF300Parser.RULE_k2Required);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4206;
                this.match(EDIF300Parser.T__291);
                this.state = 4207;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k3Build = function () {
        var _localctx = new K3BuildContext(this._ctx, this.state);
        this.enterRule(_localctx, 744, EDIF300Parser.RULE_k3Build);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4209;
                this.match(EDIF300Parser.T__292);
                this.state = 4210;
                this.k1KeywordNameRef();
                this.state = 4218;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || ((((_la - 283)) & ~0x1F) === 0 && ((1 << (_la - 283)) & ((1 << (EDIF300Parser.T__282 - 283)) | (1 << (EDIF300Parser.T__289 - 283)) | (1 << (EDIF300Parser.T__292 - 283)) | (1 << (EDIF300Parser.T__294 - 283)))) !== 0)) {
                    {
                        this.state = 4216;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4211;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__282:
                                {
                                    this.state = 4212;
                                    this.k2Actual();
                                }
                                break;
                            case EDIF300Parser.T__289:
                                {
                                    this.state = 4213;
                                    this.k2Literal();
                                }
                                break;
                            case EDIF300Parser.T__292:
                                {
                                    this.state = 4214;
                                    this.k3Build();
                                }
                                break;
                            case EDIF300Parser.T__294:
                                {
                                    this.state = 4215;
                                    this.k3ForEach();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4220;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4221;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k3Collector = function () {
        var _localctx = new K3CollectorContext(this._ctx, this.state);
        this.enterRule(_localctx, 746, EDIF300Parser.RULE_k3Collector);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4223;
                this.match(EDIF300Parser.T__293);
                this.state = 4224;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k3ForEach = function () {
        var _localctx = new K3ForEachContext(this._ctx, this.state);
        this.enterRule(_localctx, 748, EDIF300Parser.RULE_k3ForEach);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4226;
                this.match(EDIF300Parser.T__294);
                this.state = 4229;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.IDENTIFIER:
                        {
                            this.state = 4227;
                            this.k2FormalNameRef();
                        }
                        break;
                    case EDIF300Parser.T__296:
                        {
                            this.state = 4228;
                            this.k3FormalList();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4238;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || ((((_la - 283)) & ~0x1F) === 0 && ((1 << (_la - 283)) & ((1 << (EDIF300Parser.T__282 - 283)) | (1 << (EDIF300Parser.T__289 - 283)) | (1 << (EDIF300Parser.T__292 - 283)) | (1 << (EDIF300Parser.T__294 - 283)))) !== 0)) {
                    {
                        this.state = 4236;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4231;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__282:
                                {
                                    this.state = 4232;
                                    this.k2Actual();
                                }
                                break;
                            case EDIF300Parser.T__289:
                                {
                                    this.state = 4233;
                                    this.k2Literal();
                                }
                                break;
                            case EDIF300Parser.T__292:
                                {
                                    this.state = 4234;
                                    this.k3Build();
                                }
                                break;
                            case EDIF300Parser.T__294:
                                {
                                    this.state = 4235;
                                    this.k3ForEach();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4240;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4241;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k3Formal = function () {
        var _localctx = new K3FormalContext(this._ctx, this.state);
        this.enterRule(_localctx, 750, EDIF300Parser.RULE_k3Formal);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4243;
                this.match(EDIF300Parser.T__295);
                this.state = 4244;
                this.k2FormalNameDef();
                this.state = 4248;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__290:
                        {
                            this.state = 4245;
                            this.k2Optional();
                        }
                        break;
                    case EDIF300Parser.T__291:
                        {
                            this.state = 4246;
                            this.k2Required();
                        }
                        break;
                    case EDIF300Parser.T__293:
                        {
                            this.state = 4247;
                            this.k3Collector();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4250;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k3FormalList = function () {
        var _localctx = new K3FormalListContext(this._ctx, this.state);
        this.enterRule(_localctx, 752, EDIF300Parser.RULE_k3FormalList);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4252;
                this.match(EDIF300Parser.T__296);
                this.state = 4256;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.IDENTIFIER) {
                    {
                        {
                            this.state = 4253;
                            this.k2FormalNameRef();
                        }
                    }
                    this.state = 4258;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4259;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k3Generate = function () {
        var _localctx = new K3GenerateContext(this._ctx, this.state);
        this.enterRule(_localctx, 754, EDIF300Parser.RULE_k3Generate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4261;
                this.match(EDIF300Parser.T__297);
                this.state = 4269;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || ((((_la - 283)) & ~0x1F) === 0 && ((1 << (_la - 283)) & ((1 << (EDIF300Parser.T__282 - 283)) | (1 << (EDIF300Parser.T__283 - 283)) | (1 << (EDIF300Parser.T__289 - 283)) | (1 << (EDIF300Parser.T__294 - 283)))) !== 0)) {
                    {
                        this.state = 4267;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4262;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__282:
                                {
                                    this.state = 4263;
                                    this.k2Actual();
                                }
                                break;
                            case EDIF300Parser.T__283:
                                {
                                    this.state = 4264;
                                    this.k2Build();
                                }
                                break;
                            case EDIF300Parser.T__289:
                                {
                                    this.state = 4265;
                                    this.k2Literal();
                                }
                                break;
                            case EDIF300Parser.T__294:
                                {
                                    this.state = 4266;
                                    this.k3ForEach();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4271;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4272;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k3KeywordDefine = function () {
        var _localctx = new K3KeywordDefineContext(this._ctx, this.state);
        this.enterRule(_localctx, 756, EDIF300Parser.RULE_k3KeywordDefine);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4274;
                this.match(EDIF300Parser.T__298);
                this.state = 4275;
                this.k1KeywordNameDef();
                this.state = 4276;
                this.k3KeywordParameters();
                this.state = 4277;
                this.k3Generate();
                this.state = 4278;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k3KeywordLevel = function () {
        var _localctx = new K3KeywordLevelContext(this._ctx, this.state);
        this.enterRule(_localctx, 758, EDIF300Parser.RULE_k3KeywordLevel);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4280;
                this.match(EDIF300Parser.T__299);
                this.state = 4285;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__280 || _la === EDIF300Parser.T__298) {
                    {
                        this.state = 4283;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__280:
                                {
                                    this.state = 4281;
                                    this.k1KeywordAlias();
                                }
                                break;
                            case EDIF300Parser.T__298:
                                {
                                    this.state = 4282;
                                    this.k3KeywordDefine();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4287;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4288;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.k3KeywordParameters = function () {
        var _localctx = new K3KeywordParametersContext(this._ctx, this.state);
        this.enterRule(_localctx, 760, EDIF300Parser.RULE_k3KeywordParameters);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4290;
                this.match(EDIF300Parser.T__300);
                this.state = 4294;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__295) {
                    {
                        {
                            this.state = 4291;
                            this.k3Formal();
                        }
                    }
                    this.state = 4296;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4297;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.kelvin = function () {
        var _localctx = new KelvinContext(this._ctx, this.state);
        this.enterRule(_localctx, 762, EDIF300Parser.RULE_kelvin);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4299;
                this.match(EDIF300Parser.T__301);
                this.state = 4300;
                this.unitExponent();
                this.state = 4301;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.keywordMap = function () {
        var _localctx = new KeywordMapContext(this._ctx, this.state);
        this.enterRule(_localctx, 764, EDIF300Parser.RULE_keywordMap);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4303;
                this.match(EDIF300Parser.T__302);
                this.state = 4308;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__279:
                        {
                            this.state = 4304;
                            this.k0KeywordLevel();
                        }
                        break;
                    case EDIF300Parser.T__281:
                        {
                            this.state = 4305;
                            this.k1KeywordLevel();
                        }
                        break;
                    case EDIF300Parser.T__287:
                        {
                            this.state = 4306;
                            this.k2KeywordLevel();
                        }
                        break;
                    case EDIF300Parser.T__299:
                        {
                            this.state = 4307;
                            this.k3KeywordLevel();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4313;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61) {
                    {
                        {
                            this.state = 4310;
                            this.comment();
                        }
                    }
                    this.state = 4315;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4316;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.kilogram = function () {
        var _localctx = new KilogramContext(this._ctx, this.state);
        this.enterRule(_localctx, 766, EDIF300Parser.RULE_kilogram);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4318;
                this.match(EDIF300Parser.T__303);
                this.state = 4319;
                this.unitExponent();
                this.state = 4320;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.leaf = function () {
        var _localctx = new LeafContext(this._ctx, this.state);
        this.enterRule(_localctx, 768, EDIF300Parser.RULE_leaf);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4322;
                this.match(EDIF300Parser.T__304);
                this.state = 4323;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.leafOccurrenceAnnotate = function () {
        var _localctx = new LeafOccurrenceAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 770, EDIF300Parser.RULE_leafOccurrenceAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4325;
                this.match(EDIF300Parser.T__305);
                this.state = 4328;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.IDENTIFIER:
                        {
                            this.state = 4326;
                            this.extendInstanceDef();
                        }
                        break;
                    case EDIF300Parser.T__235:
                        {
                            this.state = 4327;
                            this.extendInstanceMemberDef();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4339;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 43)) & ~0x1F) === 0 && ((1 << (_la - 43)) & ((1 << (EDIF300Parser.T__42 - 43)) | (1 << (EDIF300Parser.T__58 - 43)) | (1 << (EDIF300Parser.T__61 - 43)))) !== 0) || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__243 || _la === EDIF300Parser.T__415 || _la === EDIF300Parser.T__442) {
                    {
                        this.state = 4337;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__42:
                                {
                                    this.state = 4330;
                                    this.cellPropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__58:
                                {
                                    this.state = 4331;
                                    this.clusterPropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4332;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__118:
                                {
                                    this.state = 4333;
                                    this.designator();
                                }
                                break;
                            case EDIF300Parser.T__243:
                                {
                                    this.state = 4334;
                                    this.instancePropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__415:
                                {
                                    this.state = 4335;
                                    this.portAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 4336;
                                    this.property();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4341;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4342;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.leftJustify = function () {
        var _localctx = new LeftJustifyContext(this._ctx, this.state);
        this.enterRule(_localctx, 772, EDIF300Parser.RULE_leftJustify);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4344;
                this.match(EDIF300Parser.T__306);
                this.state = 4345;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.lengthValue = function () {
        var _localctx = new LengthValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 774, EDIF300Parser.RULE_lengthValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4347;
                this.distanceValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.lessThan = function () {
        var _localctx = new LessThanContext(this._ctx, this.state);
        this.enterRule(_localctx, 776, EDIF300Parser.RULE_lessThan);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4349;
                this.match(EDIF300Parser.T__307);
                this.state = 4353;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__0 || _la === EDIF300Parser.T__181 || ((((_la - 235)) & ~0x1F) === 0 && ((1 << (_la - 235)) & ((1 << (EDIF300Parser.T__234 - 235)) | (1 << (EDIF300Parser.T__249 - 235)) | (1 << (EDIF300Parser.T__253 - 235)) | (1 << (EDIF300Parser.T__254 - 235)) | (1 << (EDIF300Parser.T__255 - 235)) | (1 << (EDIF300Parser.T__256 - 235)) | (1 << (EDIF300Parser.T__257 - 235)) | (1 << (EDIF300Parser.T__258 - 235)))) !== 0) || _la === EDIF300Parser.T__421 || _la === EDIF300Parser.T__590 || _la === EDIF300Parser.T__604 || _la === EDIF300Parser.DECIMAL_LITERAL) {
                    {
                        {
                            this.state = 4350;
                            this.integerExpression();
                        }
                    }
                    this.state = 4355;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4356;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.lessThanOrEqual = function () {
        var _localctx = new LessThanOrEqualContext(this._ctx, this.state);
        this.enterRule(_localctx, 778, EDIF300Parser.RULE_lessThanOrEqual);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4358;
                this.match(EDIF300Parser.T__308);
                this.state = 4362;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__0 || _la === EDIF300Parser.T__181 || ((((_la - 235)) & ~0x1F) === 0 && ((1 << (_la - 235)) & ((1 << (EDIF300Parser.T__234 - 235)) | (1 << (EDIF300Parser.T__249 - 235)) | (1 << (EDIF300Parser.T__253 - 235)) | (1 << (EDIF300Parser.T__254 - 235)) | (1 << (EDIF300Parser.T__255 - 235)) | (1 << (EDIF300Parser.T__256 - 235)) | (1 << (EDIF300Parser.T__257 - 235)) | (1 << (EDIF300Parser.T__258 - 235)))) !== 0) || _la === EDIF300Parser.T__421 || _la === EDIF300Parser.T__590 || _la === EDIF300Parser.T__604 || _la === EDIF300Parser.DECIMAL_LITERAL) {
                    {
                        {
                            this.state = 4359;
                            this.integerExpression();
                        }
                    }
                    this.state = 4364;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4365;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.library = function () {
        var _localctx = new LibraryContext(this._ctx, this.state);
        this.enterRule(_localctx, 780, EDIF300Parser.RULE_library);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4367;
                this.match(EDIF300Parser.T__309);
                this.state = 4368;
                this.libraryNameDef();
                this.state = 4369;
                this.libraryHeader();
                this.state = 4391;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__37 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__192 || _la === EDIF300Parser.T__381 || _la === EDIF300Parser.T__395 || ((((_la - 476)) & ~0x1F) === 0 && ((1 << (_la - 476)) & ((1 << (EDIF300Parser.T__475 - 476)) | (1 << (EDIF300Parser.T__478 - 476)) | (1 << (EDIF300Parser.T__486 - 476)) | (1 << (EDIF300Parser.T__489 - 476)) | (1 << (EDIF300Parser.T__500 - 476)) | (1 << (EDIF300Parser.T__504 - 476)))) !== 0) || ((((_la - 509)) & ~0x1F) === 0 && ((1 << (_la - 509)) & ((1 << (EDIF300Parser.T__508 - 509)) | (1 << (EDIF300Parser.T__517 - 509)) | (1 << (EDIF300Parser.T__521 - 509)) | (1 << (EDIF300Parser.T__524 - 509)))) !== 0) || ((((_la - 549)) & ~0x1F) === 0 && ((1 << (_la - 549)) & ((1 << (EDIF300Parser.T__548 - 549)) | (1 << (EDIF300Parser.T__557 - 549)) | (1 << (EDIF300Parser.T__562 - 549)))) !== 0) || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 4389;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__37:
                                {
                                    this.state = 4370;
                                    this.cell();
                                }
                                break;
                            case EDIF300Parser.T__500:
                                {
                                    this.state = 4371;
                                    this.schematicInterconnectTerminatorTemplate();
                                }
                                break;
                            case EDIF300Parser.T__504:
                                {
                                    this.state = 4372;
                                    this.schematicJunctionTemplate();
                                }
                                break;
                            case EDIF300Parser.T__486:
                                {
                                    this.state = 4373;
                                    this.schematicGlobalPortTemplate();
                                }
                                break;
                            case EDIF300Parser.T__508:
                                {
                                    this.state = 4374;
                                    this.schematicMasterPortTemplate();
                                }
                                break;
                            case EDIF300Parser.T__517:
                                {
                                    this.state = 4375;
                                    this.schematicOffPageConnectorTemplate();
                                }
                                break;
                            case EDIF300Parser.T__521:
                                {
                                    this.state = 4376;
                                    this.schematicOnPageConnectorTemplate();
                                }
                                break;
                            case EDIF300Parser.T__548:
                                {
                                    this.state = 4377;
                                    this.schematicRipperTemplate();
                                }
                                break;
                            case EDIF300Parser.T__557:
                                {
                                    this.state = 4378;
                                    this.schematicSymbolBorderTemplate();
                                }
                                break;
                            case EDIF300Parser.T__562:
                                {
                                    this.state = 4379;
                                    this.schematicSymbolPortTemplate();
                                }
                                break;
                            case EDIF300Parser.T__381:
                                {
                                    this.state = 4380;
                                    this.pageBorderTemplate();
                                }
                                break;
                            case EDIF300Parser.T__395:
                                {
                                    this.state = 4381;
                                    this.pageTitleBlockTemplate();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4382;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__192:
                                {
                                    this.state = 4383;
                                    this.geometryMacro();
                                }
                                break;
                            case EDIF300Parser.T__475:
                                {
                                    this.state = 4384;
                                    this.schematicFigureMacro();
                                }
                                break;
                            case EDIF300Parser.T__478:
                                {
                                    this.state = 4385;
                                    this.schematicForFrameBorderTemplate();
                                }
                                break;
                            case EDIF300Parser.T__489:
                                {
                                    this.state = 4386;
                                    this.schematicIfFrameBorderTemplate();
                                }
                                break;
                            case EDIF300Parser.T__524:
                                {
                                    this.state = 4387;
                                    this.schematicOtherwiseFrameBorderTemplate();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 4388;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4393;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4394;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.libraryHeader = function () {
        var _localctx = new LibraryHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 782, EDIF300Parser.RULE_libraryHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4396;
                this.match(EDIF300Parser.T__310);
                this.state = 4397;
                this.edifLevel();
                this.state = 4398;
                this.nameCaseSensitivity();
                this.state = 4399;
                this.technology();
                this.state = 4407;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 4405;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__14:
                                {
                                    this.state = 4400;
                                    this.backgroundColor();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 4401;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 4402;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 4403;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 4404;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4409;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4410;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.libraryNameCaseSensitive = function () {
        var _localctx = new LibraryNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 784, EDIF300Parser.RULE_libraryNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4412;
                this.match(EDIF300Parser.T__311);
                this.state = 4413;
                this.booleanToken();
                this.state = 4414;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.libraryNameDef = function () {
        var _localctx = new LibraryNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 786, EDIF300Parser.RULE_libraryNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4416;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.libraryNameRef = function () {
        var _localctx = new LibraryNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 788, EDIF300Parser.RULE_libraryNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4418;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.libraryObjectNameCaseSensitive = function () {
        var _localctx = new LibraryObjectNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 790, EDIF300Parser.RULE_libraryObjectNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4420;
                this.match(EDIF300Parser.T__312);
                this.state = 4421;
                this.booleanToken();
                this.state = 4422;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.libraryObjectNameDef = function () {
        var _localctx = new LibraryObjectNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 792, EDIF300Parser.RULE_libraryObjectNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4424;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.libraryObjectNameRef = function () {
        var _localctx = new LibraryObjectNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 794, EDIF300Parser.RULE_libraryObjectNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4426;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.libraryRef = function () {
        var _localctx = new LibraryRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 796, EDIF300Parser.RULE_libraryRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4428;
                this.match(EDIF300Parser.T__313);
                this.state = 4429;
                this.libraryNameRef();
                this.state = 4430;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.loadDelay = function () {
        var _localctx = new LoadDelayContext(this._ctx, this.state);
        this.enterRule(_localctx, 798, EDIF300Parser.RULE_loadDelay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4432;
                this.match(EDIF300Parser.T__314);
                this.state = 4433;
                this.acLoadFactorTime();
                this.state = 4434;
                this.acLoadFactorCapacitance();
                this.state = 4435;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.localPortGroup = function () {
        var _localctx = new LocalPortGroupContext(this._ctx, this.state);
        this.enterRule(_localctx, 800, EDIF300Parser.RULE_localPortGroup);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4437;
                this.match(EDIF300Parser.T__315);
                this.state = 4438;
                this.localPortGroupNameDef();
                this.state = 4439;
                this.portList();
                this.state = 4446;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 4444;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4440;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 4441;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 4442;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 4443;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4448;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4449;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.localPortGroupNameCaseSensitive = function () {
        var _localctx = new LocalPortGroupNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 802, EDIF300Parser.RULE_localPortGroupNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4451;
                this.match(EDIF300Parser.T__316);
                this.state = 4452;
                this.booleanToken();
                this.state = 4453;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.localPortGroupNameDef = function () {
        var _localctx = new LocalPortGroupNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 804, EDIF300Parser.RULE_localPortGroupNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4455;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.localPortGroupNameRef = function () {
        var _localctx = new LocalPortGroupNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 806, EDIF300Parser.RULE_localPortGroupNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4457;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.localPortGroupRef = function () {
        var _localctx = new LocalPortGroupRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 808, EDIF300Parser.RULE_localPortGroupRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4459;
                this.match(EDIF300Parser.T__317);
                this.state = 4460;
                this.localPortGroupNameRef();
                this.state = 4461;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicalConnectivity = function () {
        var _localctx = new LogicalConnectivityContext(this._ctx, this.state);
        this.enterRule(_localctx, 810, EDIF300Parser.RULE_logicalConnectivity);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4463;
                this.match(EDIF300Parser.T__318);
                this.state = 4474;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__176 || _la === EDIF300Parser.T__215 || _la === EDIF300Parser.T__232 || _la === EDIF300Parser.T__371 || _la === EDIF300Parser.T__584 || _la === EDIF300Parser.T__586 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 4472;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4464;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__176:
                                {
                                    this.state = 4465;
                                    this.forFrame();
                                }
                                break;
                            case EDIF300Parser.T__215:
                                {
                                    this.state = 4466;
                                    this.ifFrame();
                                }
                                break;
                            case EDIF300Parser.T__232:
                                {
                                    this.state = 4467;
                                    this.instance();
                                }
                                break;
                            case EDIF300Parser.T__371:
                                {
                                    this.state = 4468;
                                    this.otherwiseFrame();
                                }
                                break;
                            case EDIF300Parser.T__584:
                                {
                                    this.state = 4469;
                                    this.signal();
                                }
                                break;
                            case EDIF300Parser.T__586:
                                {
                                    this.state = 4470;
                                    this.signalGroup();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 4471;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4476;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4477;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicDefinitions = function () {
        var _localctx = new LogicDefinitionsContext(this._ctx, this.state);
        this.enterRule(_localctx, 812, EDIF300Parser.RULE_logicDefinitions);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4479;
                this.match(EDIF300Parser.T__319);
                this.state = 4480;
                this.setVoltage();
                this.state = 4481;
                this.setCurrent();
                this.state = 4486;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__327) {
                    {
                        this.state = 4484;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4482;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__327:
                                {
                                    this.state = 4483;
                                    this.logicValue();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4488;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4489;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicList = function () {
        var _localctx = new LogicListContext(this._ctx, this.state);
        this.enterRule(_localctx, 814, EDIF300Parser.RULE_logicList);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4491;
                this.match(EDIF300Parser.T__320);
                this.state = 4497;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__219 || _la === EDIF300Parser.T__325 || _la === EDIF300Parser.IDENTIFIER) {
                    {
                        this.state = 4495;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__219:
                                {
                                    this.state = 4492;
                                    this.ignore();
                                }
                                break;
                            case EDIF300Parser.IDENTIFIER:
                                {
                                    this.state = 4493;
                                    this.logicNameRef();
                                }
                                break;
                            case EDIF300Parser.T__325:
                                {
                                    this.state = 4494;
                                    this.logicOneOf();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4499;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4500;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicMapInput = function () {
        var _localctx = new LogicMapInputContext(this._ctx, this.state);
        this.enterRule(_localctx, 816, EDIF300Parser.RULE_logicMapInput);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4502;
                this.match(EDIF300Parser.T__321);
                this.state = 4506;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__326) {
                    {
                        {
                            this.state = 4503;
                            this.logicRef();
                        }
                    }
                    this.state = 4508;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4509;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicMapOutput = function () {
        var _localctx = new LogicMapOutputContext(this._ctx, this.state);
        this.enterRule(_localctx, 818, EDIF300Parser.RULE_logicMapOutput);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4511;
                this.match(EDIF300Parser.T__322);
                this.state = 4515;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__326) {
                    {
                        {
                            this.state = 4512;
                            this.logicRef();
                        }
                    }
                    this.state = 4517;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4518;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicModelUnits = function () {
        var _localctx = new LogicModelUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 820, EDIF300Parser.RULE_logicModelUnits);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4520;
                this.match(EDIF300Parser.T__323);
                this.state = 4525;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__576 || _la === EDIF300Parser.T__580) {
                    {
                        this.state = 4523;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__576:
                                {
                                    this.state = 4521;
                                    this.setCapacitance();
                                }
                                break;
                            case EDIF300Parser.T__580:
                                {
                                    this.state = 4522;
                                    this.setTime();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4527;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4528;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicModelView = function () {
        var _localctx = new LogicModelViewContext(this._ctx, this.state);
        this.enterRule(_localctx, 822, EDIF300Parser.RULE_logicModelView);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4530;
                this.match(EDIF300Parser.T__324);
                this.state = 4531;
                this.viewNameDef();
                this.state = 4537;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 4535;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4532;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 4533;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 4534;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4539;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4540;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicNameDef = function () {
        var _localctx = new LogicNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 824, EDIF300Parser.RULE_logicNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4542;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicNameRef = function () {
        var _localctx = new LogicNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 826, EDIF300Parser.RULE_logicNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4544;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicOneOf = function () {
        var _localctx = new LogicOneOfContext(this._ctx, this.state);
        this.enterRule(_localctx, 828, EDIF300Parser.RULE_logicOneOf);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4546;
                this.match(EDIF300Parser.T__325);
                this.state = 4551;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__320 || _la === EDIF300Parser.IDENTIFIER) {
                    {
                        this.state = 4549;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__320:
                                {
                                    this.state = 4547;
                                    this.logicList();
                                }
                                break;
                            case EDIF300Parser.IDENTIFIER:
                                {
                                    this.state = 4548;
                                    this.logicNameRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4553;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4554;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicRef = function () {
        var _localctx = new LogicRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 830, EDIF300Parser.RULE_logicRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4556;
                this.match(EDIF300Parser.T__326);
                this.state = 4557;
                this.logicNameRef();
                this.state = 4559;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 4558;
                        this.libraryRef();
                    }
                }
                this.state = 4561;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.logicValue = function () {
        var _localctx = new LogicValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 832, EDIF300Parser.RULE_logicValue);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4563;
                this.match(EDIF300Parser.T__327);
                this.state = 4564;
                this.logicNameDef();
                this.state = 4581;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__26 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__69 || _la === EDIF300Parser.T__99 || _la === EDIF300Parser.T__136 || _la === EDIF300Parser.T__273 || ((((_la - 322)) & ~0x1F) === 0 && ((1 << (_la - 322)) & ((1 << (EDIF300Parser.T__321 - 322)) | (1 << (EDIF300Parser.T__322 - 322)) | (1 << (EDIF300Parser.T__346 - 322)))) !== 0) || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__459 || _la === EDIF300Parser.T__610 || _la === EDIF300Parser.T__656 || _la === EDIF300Parser.T__658) {
                    {
                        this.state = 4579;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__26:
                                {
                                    this.state = 4565;
                                    this.booleanMap();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4566;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__69:
                                {
                                    this.state = 4567;
                                    this.compound();
                                }
                                break;
                            case EDIF300Parser.T__99:
                                {
                                    this.state = 4568;
                                    this.currentMap();
                                }
                                break;
                            case EDIF300Parser.T__136:
                                {
                                    this.state = 4569;
                                    this.dominates();
                                }
                                break;
                            case EDIF300Parser.T__273:
                                {
                                    this.state = 4570;
                                    this.isolated();
                                }
                                break;
                            case EDIF300Parser.T__321:
                                {
                                    this.state = 4571;
                                    this.logicMapInput();
                                }
                                break;
                            case EDIF300Parser.T__322:
                                {
                                    this.state = 4572;
                                    this.logicMapOutput();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 4573;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 4574;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__459:
                                {
                                    this.state = 4575;
                                    this.resolves();
                                }
                                break;
                            case EDIF300Parser.T__610:
                                {
                                    this.state = 4576;
                                    this.strong();
                                }
                                break;
                            case EDIF300Parser.T__656:
                                {
                                    this.state = 4577;
                                    this.voltageMap();
                                }
                                break;
                            case EDIF300Parser.T__658:
                                {
                                    this.state = 4578;
                                    this.weak();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4583;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4584;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.lsbToMsb = function () {
        var _localctx = new LsbToMsbContext(this._ctx, this.state);
        this.enterRule(_localctx, 834, EDIF300Parser.RULE_lsbToMsb);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4586;
                this.match(EDIF300Parser.T__328);
                this.state = 4587;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.mantissa = function () {
        var _localctx = new MantissaContext(this._ctx, this.state);
        this.enterRule(_localctx, 836, EDIF300Parser.RULE_mantissa);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4589;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.mark = function () {
        var _localctx = new MarkContext(this._ctx, this.state);
        this.enterRule(_localctx, 838, EDIF300Parser.RULE_mark);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4591;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.maskLayoutUnits = function () {
        var _localctx = new MaskLayoutUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 840, EDIF300Parser.RULE_maskLayoutUnits);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4593;
                this.match(EDIF300Parser.T__329);
                this.state = 4600;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 576)) & ~0x1F) === 0 && ((1 << (_la - 576)) & ((1 << (EDIF300Parser.T__575 - 576)) | (1 << (EDIF300Parser.T__576 - 576)) | (1 << (EDIF300Parser.T__578 - 576)) | (1 << (EDIF300Parser.T__580 - 576)))) !== 0)) {
                    {
                        this.state = 4598;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__575:
                                {
                                    this.state = 4594;
                                    this.setAngle();
                                }
                                break;
                            case EDIF300Parser.T__576:
                                {
                                    this.state = 4595;
                                    this.setCapacitance();
                                }
                                break;
                            case EDIF300Parser.T__578:
                                {
                                    this.state = 4596;
                                    this.setDistance();
                                }
                                break;
                            case EDIF300Parser.T__580:
                                {
                                    this.state = 4597;
                                    this.setTime();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4602;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4603;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.maskLayoutView = function () {
        var _localctx = new MaskLayoutViewContext(this._ctx, this.state);
        this.enterRule(_localctx, 842, EDIF300Parser.RULE_maskLayoutView);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4605;
                this.match(EDIF300Parser.T__330);
                this.state = 4606;
                this.viewNameDef();
                this.state = 4612;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 4610;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4607;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 4608;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 4609;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4614;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4615;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.measured = function () {
        var _localctx = new MeasuredContext(this._ctx, this.state);
        this.enterRule(_localctx, 844, EDIF300Parser.RULE_measured);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4617;
                this.match(EDIF300Parser.T__331);
                this.state = 4618;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.meter = function () {
        var _localctx = new MeterContext(this._ctx, this.state);
        this.enterRule(_localctx, 846, EDIF300Parser.RULE_meter);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4620;
                this.match(EDIF300Parser.T__332);
                this.state = 4621;
                this.unitExponent();
                this.state = 4622;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.middleJustify = function () {
        var _localctx = new MiddleJustifyContext(this._ctx, this.state);
        this.enterRule(_localctx, 848, EDIF300Parser.RULE_middleJustify);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4624;
                this.match(EDIF300Parser.T__333);
                this.state = 4625;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.minimalWidth = function () {
        var _localctx = new MinimalWidthContext(this._ctx, this.state);
        this.enterRule(_localctx, 850, EDIF300Parser.RULE_minimalWidth);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4627;
                this.match(EDIF300Parser.T__334);
                this.state = 4628;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.minimumStringLength = function () {
        var _localctx = new MinimumStringLengthContext(this._ctx, this.state);
        this.enterRule(_localctx, 852, EDIF300Parser.RULE_minimumStringLength);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4630;
                this.match(EDIF300Parser.T__335);
                this.state = 4631;
                this.substringLength();
                this.state = 4632;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.miNoMax = function () {
        var _localctx = new MiNoMaxContext(this._ctx, this.state);
        this.enterRule(_localctx, 854, EDIF300Parser.RULE_miNoMax);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4634;
                this.match(EDIF300Parser.T__336);
                this.state = 4635;
                this.miNoMaxValue();
                this.state = 4636;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.miNoMaxValue = function () {
        var _localctx = new MiNoMaxValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 856, EDIF300Parser.RULE_miNoMaxValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4640;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__145:
                    case EDIF300Parser.DECIMAL_LITERAL:
                        {
                            this.state = 4638;
                            this.numberValue();
                        }
                        break;
                    case EDIF300Parser.T__338:
                        {
                            this.state = 4639;
                            this.mnm();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.minuend = function () {
        var _localctx = new MinuendContext(this._ctx, this.state);
        this.enterRule(_localctx, 858, EDIF300Parser.RULE_minuend);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4642;
                this.integerExpression();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.minuteNumber = function () {
        var _localctx = new MinuteNumberContext(this._ctx, this.state);
        this.enterRule(_localctx, 860, EDIF300Parser.RULE_minuteNumber);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4644;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.mixedDirection = function () {
        var _localctx = new MixedDirectionContext(this._ctx, this.state);
        this.enterRule(_localctx, 862, EDIF300Parser.RULE_mixedDirection);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4646;
                this.match(EDIF300Parser.T__337);
                this.state = 4647;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.mnm = function () {
        var _localctx = new MnmContext(this._ctx, this.state);
        this.enterRule(_localctx, 864, EDIF300Parser.RULE_mnm);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4649;
                this.match(EDIF300Parser.T__338);
                this.state = 4653;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__145:
                    case EDIF300Parser.DECIMAL_LITERAL:
                        {
                            this.state = 4650;
                            this.numberValue();
                        }
                        break;
                    case EDIF300Parser.T__632:
                        {
                            this.state = 4651;
                            this.undefined();
                        }
                        break;
                    case EDIF300Parser.T__631:
                        {
                            this.state = 4652;
                            this.unconstrained();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4658;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__145:
                    case EDIF300Parser.DECIMAL_LITERAL:
                        {
                            this.state = 4655;
                            this.numberValue();
                        }
                        break;
                    case EDIF300Parser.T__632:
                        {
                            this.state = 4656;
                            this.undefined();
                        }
                        break;
                    case EDIF300Parser.T__631:
                        {
                            this.state = 4657;
                            this.unconstrained();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4663;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__145:
                    case EDIF300Parser.DECIMAL_LITERAL:
                        {
                            this.state = 4660;
                            this.numberValue();
                        }
                        break;
                    case EDIF300Parser.T__632:
                        {
                            this.state = 4661;
                            this.undefined();
                        }
                        break;
                    case EDIF300Parser.T__631:
                        {
                            this.state = 4662;
                            this.unconstrained();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4665;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.mole = function () {
        var _localctx = new MoleContext(this._ctx, this.state);
        this.enterRule(_localctx, 866, EDIF300Parser.RULE_mole);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4667;
                this.match(EDIF300Parser.T__339);
                this.state = 4668;
                this.unitExponent();
                this.state = 4669;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.monthNumber = function () {
        var _localctx = new MonthNumberContext(this._ctx, this.state);
        this.enterRule(_localctx, 868, EDIF300Parser.RULE_monthNumber);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4671;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.msbToLsb = function () {
        var _localctx = new MsbToLsbContext(this._ctx, this.state);
        this.enterRule(_localctx, 870, EDIF300Parser.RULE_msbToLsb);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4673;
                this.match(EDIF300Parser.T__340);
                this.state = 4674;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.mustJoin = function () {
        var _localctx = new MustJoinContext(this._ctx, this.state);
        this.enterRule(_localctx, 872, EDIF300Parser.RULE_mustJoin);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4676;
                this.match(EDIF300Parser.T__341);
                this.state = 4682;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__270 || _la === EDIF300Parser.T__436 || _la === EDIF300Parser.T__659) {
                    {
                        this.state = 4680;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__270:
                                {
                                    this.state = 4677;
                                    this.interfaceJoined();
                                }
                                break;
                            case EDIF300Parser.T__436:
                                {
                                    this.state = 4678;
                                    this.portRef();
                                }
                                break;
                            case EDIF300Parser.T__659:
                                {
                                    this.state = 4679;
                                    this.weakJoined();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4684;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4685;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.nameAlias = function () {
        var _localctx = new NameAliasContext(this._ctx, this.state);
        this.enterRule(_localctx, 874, EDIF300Parser.RULE_nameAlias);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4687;
                this.match(EDIF300Parser.T__342);
                this.state = 4688;
                this.originalName();
                this.state = 4694;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__130 || _la === EDIF300Parser.T__191 || _la === EDIF300Parser.T__348) {
                    {
                        this.state = 4692;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__130:
                                {
                                    this.state = 4689;
                                    this.displayName();
                                }
                                break;
                            case EDIF300Parser.T__191:
                                {
                                    this.state = 4690;
                                    this.generated();
                                }
                                break;
                            case EDIF300Parser.T__348:
                                {
                                    this.state = 4691;
                                    this.nameStructure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4696;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4697;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.nameCaseSensitivity = function () {
        var _localctx = new NameCaseSensitivityContext(this._ctx, this.state);
        this.enterRule(_localctx, 876, EDIF300Parser.RULE_nameCaseSensitivity);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4699;
                this.match(EDIF300Parser.T__343);
                this.state = 4726;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__52 || _la === EDIF300Parser.T__55 || ((((_la - 124)) & ~0x1F) === 0 && ((1 << (_la - 124)) & ((1 << (EDIF300Parser.T__123 - 124)) | (1 << (EDIF300Parser.T__124 - 124)) | (1 << (EDIF300Parser.T__134 - 124)))) !== 0) || ((((_la - 162)) & ~0x1F) === 0 && ((1 << (_la - 162)) & ((1 << (EDIF300Parser.T__161 - 162)) | (1 << (EDIF300Parser.T__180 - 162)) | (1 << (EDIF300Parser.T__185 - 162)))) !== 0) || ((((_la - 201)) & ~0x1F) === 0 && ((1 << (_la - 201)) & ((1 << (EDIF300Parser.T__200 - 201)) | (1 << (EDIF300Parser.T__211 - 201)) | (1 << (EDIF300Parser.T__220 - 201)))) !== 0) || _la === EDIF300Parser.T__236 || _la === EDIF300Parser.T__264 || ((((_la - 312)) & ~0x1F) === 0 && ((1 << (_la - 312)) & ((1 << (EDIF300Parser.T__311 - 312)) | (1 << (EDIF300Parser.T__312 - 312)) | (1 << (EDIF300Parser.T__316 - 312)))) !== 0) || _la === EDIF300Parser.T__387 || _la === EDIF300Parser.T__399 || _la === EDIF300Parser.T__429 || _la === EDIF300Parser.T__446 || _la === EDIF300Parser.T__588 || _la === EDIF300Parser.T__594 || _la === EDIF300Parser.T__647 || _la === EDIF300Parser.T__649) {
                    {
                        this.state = 4724;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__52:
                                {
                                    this.state = 4700;
                                    this.clusterConfigurationNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__55:
                                {
                                    this.state = 4701;
                                    this.clusterNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__123:
                                {
                                    this.state = 4702;
                                    this.designHierarchyNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__124:
                                {
                                    this.state = 4703;
                                    this.designNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__134:
                                {
                                    this.state = 4704;
                                    this.documentationNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__161:
                                {
                                    this.state = 4705;
                                    this.figureGroupNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__180:
                                {
                                    this.state = 4706;
                                    this.forFrameIndexNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__185:
                                {
                                    this.state = 4707;
                                    this.frameNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__200:
                                {
                                    this.state = 4708;
                                    this.globalPortNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__211:
                                {
                                    this.state = 4709;
                                    this.hotspotNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__220:
                                {
                                    this.state = 4710;
                                    this.implementationNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__236:
                                {
                                    this.state = 4711;
                                    this.instanceNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__264:
                                {
                                    this.state = 4712;
                                    this.interconnectNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__311:
                                {
                                    this.state = 4713;
                                    this.libraryNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__312:
                                {
                                    this.state = 4714;
                                    this.libraryObjectNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__316:
                                {
                                    this.state = 4715;
                                    this.localPortGroupNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__387:
                                {
                                    this.state = 4716;
                                    this.pageNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__399:
                                {
                                    this.state = 4717;
                                    this.parameterNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__429:
                                {
                                    this.state = 4718;
                                    this.portNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__446:
                                {
                                    this.state = 4719;
                                    this.propertyNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__588:
                                {
                                    this.state = 4720;
                                    this.signalGroupNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__594:
                                {
                                    this.state = 4721;
                                    this.signalNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__647:
                                {
                                    this.state = 4722;
                                    this.viewGroupNameCaseSensitive();
                                }
                                break;
                            case EDIF300Parser.T__649:
                                {
                                    this.state = 4723;
                                    this.viewNameCaseSensitive();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4728;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4729;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.nameDef = function () {
        var _localctx = new NameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 878, EDIF300Parser.RULE_nameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4731;
                this.match(EDIF300Parser.IDENTIFIER);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.nameDimension = function () {
        var _localctx = new NameDimensionContext(this._ctx, this.state);
        this.enterRule(_localctx, 880, EDIF300Parser.RULE_nameDimension);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4733;
                this.match(EDIF300Parser.T__344);
                this.state = 4734;
                this.nameDimensionStructure();
                this.state = 4736;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__21) {
                    {
                        this.state = 4735;
                        this.bitOrder();
                    }
                }
                this.state = 4738;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.nameDimensionStructure = function () {
        var _localctx = new NameDimensionStructureContext(this._ctx, this.state);
        this.enterRule(_localctx, 882, EDIF300Parser.RULE_nameDimensionStructure);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4740;
                this.match(EDIF300Parser.T__345);
                this.state = 4748;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__65 || _la === EDIF300Parser.T__68 || _la === EDIF300Parser.T__574 || _la === EDIF300Parser.STRING_LITERAL || _la === EDIF300Parser.DECIMAL_LITERAL) {
                    {
                        this.state = 4746;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__65:
                                {
                                    this.state = 4741;
                                    this.complementedName();
                                }
                                break;
                            case EDIF300Parser.T__68:
                                {
                                    this.state = 4742;
                                    this.complexName();
                                }
                                break;
                            case EDIF300Parser.DECIMAL_LITERAL:
                                {
                                    this.state = 4743;
                                    this.integerValue();
                                }
                                break;
                            case EDIF300Parser.T__574:
                                {
                                    this.state = 4744;
                                    this.sequence();
                                }
                                break;
                            case EDIF300Parser.STRING_LITERAL:
                                {
                                    this.state = 4745;
                                    this.simpleName();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4750;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4751;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.nameInformation = function () {
        var _localctx = new NameInformationContext(this._ctx, this.state);
        this.enterRule(_localctx, 884, EDIF300Parser.RULE_nameInformation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4753;
                this.match(EDIF300Parser.T__346);
                this.state = 4754;
                this.primaryName();
                this.state = 4758;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__342) {
                    {
                        {
                            this.state = 4755;
                            this.nameAlias();
                        }
                    }
                    this.state = 4760;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4761;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.namePartSeparator = function () {
        var _localctx = new NamePartSeparatorContext(this._ctx, this.state);
        this.enterRule(_localctx, 886, EDIF300Parser.RULE_namePartSeparator);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4763;
                this.match(EDIF300Parser.T__347);
                this.state = 4764;
                this.stringToken();
                this.state = 4765;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.nameRef = function () {
        var _localctx = new NameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 888, EDIF300Parser.RULE_nameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4767;
                this.match(EDIF300Parser.IDENTIFIER);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.nameStructure = function () {
        var _localctx = new NameStructureContext(this._ctx, this.state);
        this.enterRule(_localctx, 890, EDIF300Parser.RULE_nameStructure);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4769;
                this.match(EDIF300Parser.T__348);
                this.state = 4773;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.STRING_LITERAL:
                        {
                            this.state = 4770;
                            this.simpleName();
                        }
                        break;
                    case EDIF300Parser.T__68:
                        {
                            this.state = 4771;
                            this.complexName();
                        }
                        break;
                    case EDIF300Parser.T__65:
                        {
                            this.state = 4772;
                            this.complementedName();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4775;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.narrowPort = function () {
        var _localctx = new NarrowPortContext(this._ctx, this.state);
        this.enterRule(_localctx, 892, EDIF300Parser.RULE_narrowPort);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4777;
                this.match(EDIF300Parser.T__349);
                this.state = 4778;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.narrowWire = function () {
        var _localctx = new NarrowWireContext(this._ctx, this.state);
        this.enterRule(_localctx, 894, EDIF300Parser.RULE_narrowWire);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4780;
                this.match(EDIF300Parser.T__350);
                this.state = 4781;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.noHotspotGrid = function () {
        var _localctx = new NoHotspotGridContext(this._ctx, this.state);
        this.enterRule(_localctx, 896, EDIF300Parser.RULE_noHotspotGrid);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4783;
                this.match(EDIF300Parser.T__351);
                this.state = 4784;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.nominalHotspotGrid = function () {
        var _localctx = new NominalHotspotGridContext(this._ctx, this.state);
        this.enterRule(_localctx, 898, EDIF300Parser.RULE_nominalHotspotGrid);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4786;
                this.match(EDIF300Parser.T__352);
                this.state = 4787;
                this.lengthValue();
                this.state = 4788;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.nonPermutable = function () {
        var _localctx = new NonPermutableContext(this._ctx, this.state);
        this.enterRule(_localctx, 900, EDIF300Parser.RULE_nonPermutable);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4790;
                this.match(EDIF300Parser.T__353);
                this.state = 4795;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__406 || _la === EDIF300Parser.T__436) {
                    {
                        this.state = 4793;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__406:
                                {
                                    this.state = 4791;
                                    this.permutable();
                                }
                                break;
                            case EDIF300Parser.T__436:
                                {
                                    this.state = 4792;
                                    this.portRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4797;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4798;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.not_ = function () {
        var _localctx = new Not_Context(this._ctx, this.state);
        this.enterRule(_localctx, 902, EDIF300Parser.RULE_not_);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4800;
                this.match(EDIF300Parser.T__354);
                this.state = 4801;
                this.booleanExpression();
                this.state = 4802;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.notInherited = function () {
        var _localctx = new NotInheritedContext(this._ctx, this.state);
        this.enterRule(_localctx, 904, EDIF300Parser.RULE_notInherited);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4804;
                this.match(EDIF300Parser.T__355);
                this.state = 4805;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.number = function () {
        var _localctx = new NumberContext(this._ctx, this.state);
        this.enterRule(_localctx, 906, EDIF300Parser.RULE_number);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4807;
                this.match(EDIF300Parser.T__356);
                this.state = 4808;
                this.numberExpression();
                this.state = 4809;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.numberExpression = function () {
        var _localctx = new NumberExpressionContext(this._ctx, this.state);
        this.enterRule(_localctx, 908, EDIF300Parser.RULE_numberExpression);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4813;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__145:
                    case EDIF300Parser.DECIMAL_LITERAL:
                        {
                            this.state = 4811;
                            this.numberValue();
                        }
                        break;
                    case EDIF300Parser.T__359:
                        {
                            this.state = 4812;
                            this.numberParameterRef();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.numberOfBasicUnits = function () {
        var _localctx = new NumberOfBasicUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 910, EDIF300Parser.RULE_numberOfBasicUnits);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4815;
                this.scaledInteger();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.numberOfNewUnits = function () {
        var _localctx = new NumberOfNewUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 912, EDIF300Parser.RULE_numberOfNewUnits);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4817;
                this.scaledInteger();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.numberParameter = function () {
        var _localctx = new NumberParameterContext(this._ctx, this.state);
        this.enterRule(_localctx, 914, EDIF300Parser.RULE_numberParameter);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4819;
                this.match(EDIF300Parser.T__357);
                this.state = 4820;
                this.parameterNameDef();
                this.state = 4825;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__356) {
                    {
                        this.state = 4823;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 4821;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__356:
                                {
                                    this.state = 4822;
                                    this.number();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4827;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4828;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.numberParameterAssign = function () {
        var _localctx = new NumberParameterAssignContext(this._ctx, this.state);
        this.enterRule(_localctx, 916, EDIF300Parser.RULE_numberParameterAssign);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4830;
                this.match(EDIF300Parser.T__358);
                this.state = 4831;
                this.parameterNameRef();
                this.state = 4832;
                this.numberExpression();
                this.state = 4833;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.numberParameterRef = function () {
        var _localctx = new NumberParameterRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 918, EDIF300Parser.RULE_numberParameterRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4835;
                this.match(EDIF300Parser.T__359);
                this.state = 4836;
                this.parameterNameRef();
                this.state = 4837;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.numberPoint = function () {
        var _localctx = new NumberPointContext(this._ctx, this.state);
        this.enterRule(_localctx, 920, EDIF300Parser.RULE_numberPoint);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4839;
                this.match(EDIF300Parser.T__360);
                this.state = 4840;
                this.xNumberValue();
                this.state = 4841;
                this.yNumberValue();
                this.state = 4842;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.numberValue = function () {
        var _localctx = new NumberValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 922, EDIF300Parser.RULE_numberValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4844;
                this.scaledInteger();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.numerator = function () {
        var _localctx = new NumeratorContext(this._ctx, this.state);
        this.enterRule(_localctx, 924, EDIF300Parser.RULE_numerator);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4846;
                this.integerValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.occurrenceAnnotate = function () {
        var _localctx = new OccurrenceAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 926, EDIF300Parser.RULE_occurrenceAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4848;
                this.match(EDIF300Parser.T__361);
                this.state = 4851;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.IDENTIFIER:
                        {
                            this.state = 4849;
                            this.extendInstanceDef();
                        }
                        break;
                    case EDIF300Parser.T__235:
                        {
                            this.state = 4850;
                            this.extendInstanceMemberDef();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4873;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 43)) & ~0x1F) === 0 && ((1 << (_la - 43)) & ((1 << (EDIF300Parser.T__42 - 43)) | (1 << (EDIF300Parser.T__58 - 43)) | (1 << (EDIF300Parser.T__61 - 43)))) !== 0) || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__177 || _la === EDIF300Parser.T__216 || _la === EDIF300Parser.T__243 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__305 || ((((_la - 362)) & ~0x1F) === 0 && ((1 << (_la - 362)) & ((1 << (EDIF300Parser.T__361 - 362)) | (1 << (EDIF300Parser.T__372 - 362)) | (1 << (EDIF300Parser.T__379 - 362)))) !== 0) || _la === EDIF300Parser.T__415 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__585 || _la === EDIF300Parser.T__587 || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__652) {
                    {
                        this.state = 4871;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__42:
                                {
                                    this.state = 4853;
                                    this.cellPropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__58:
                                {
                                    this.state = 4854;
                                    this.clusterPropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4855;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__118:
                                {
                                    this.state = 4856;
                                    this.designator();
                                }
                                break;
                            case EDIF300Parser.T__177:
                                {
                                    this.state = 4857;
                                    this.forFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__216:
                                {
                                    this.state = 4858;
                                    this.ifFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__243:
                                {
                                    this.state = 4859;
                                    this.instancePropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__259:
                                {
                                    this.state = 4860;
                                    this.interconnectAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__305:
                                {
                                    this.state = 4861;
                                    this.leafOccurrenceAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__361:
                                {
                                    this.state = 4862;
                                    this.occurrenceAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__372:
                                {
                                    this.state = 4863;
                                    this.otherwiseFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__379:
                                {
                                    this.state = 4864;
                                    this.pageAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__415:
                                {
                                    this.state = 4865;
                                    this.portAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 4866;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__585:
                                {
                                    this.state = 4867;
                                    this.signalAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__587:
                                {
                                    this.state = 4868;
                                    this.signalGroupAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__619:
                                {
                                    this.state = 4869;
                                    this.timing();
                                }
                                break;
                            case EDIF300Parser.T__652:
                                {
                                    this.state = 4870;
                                    this.viewPropertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4875;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4876;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.occurrenceHierarchyAnnotate = function () {
        var _localctx = new OccurrenceHierarchyAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 928, EDIF300Parser.RULE_occurrenceHierarchyAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4878;
                this.match(EDIF300Parser.T__362);
                this.state = 4896;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 43)) & ~0x1F) === 0 && ((1 << (_la - 43)) & ((1 << (EDIF300Parser.T__42 - 43)) | (1 << (EDIF300Parser.T__58 - 43)) | (1 << (EDIF300Parser.T__61 - 43)))) !== 0) || _la === EDIF300Parser.T__177 || _la === EDIF300Parser.T__216 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__305 || ((((_la - 362)) & ~0x1F) === 0 && ((1 << (_la - 362)) & ((1 << (EDIF300Parser.T__361 - 362)) | (1 << (EDIF300Parser.T__372 - 362)) | (1 << (EDIF300Parser.T__379 - 362)))) !== 0) || _la === EDIF300Parser.T__415 || _la === EDIF300Parser.T__585 || _la === EDIF300Parser.T__587 || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__652) {
                    {
                        this.state = 4894;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__42:
                                {
                                    this.state = 4879;
                                    this.cellPropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__58:
                                {
                                    this.state = 4880;
                                    this.clusterPropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4881;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__177:
                                {
                                    this.state = 4882;
                                    this.forFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__216:
                                {
                                    this.state = 4883;
                                    this.ifFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__259:
                                {
                                    this.state = 4884;
                                    this.interconnectAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__305:
                                {
                                    this.state = 4885;
                                    this.leafOccurrenceAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__361:
                                {
                                    this.state = 4886;
                                    this.occurrenceAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__372:
                                {
                                    this.state = 4887;
                                    this.otherwiseFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__379:
                                {
                                    this.state = 4888;
                                    this.pageAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__415:
                                {
                                    this.state = 4889;
                                    this.portAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__585:
                                {
                                    this.state = 4890;
                                    this.signalAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__587:
                                {
                                    this.state = 4891;
                                    this.signalGroupAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__619:
                                {
                                    this.state = 4892;
                                    this.timing();
                                }
                                break;
                            case EDIF300Parser.T__652:
                                {
                                    this.state = 4893;
                                    this.viewPropertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4898;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4899;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.offsetEvent = function () {
        var _localctx = new OffsetEventContext(this._ctx, this.state);
        this.enterRule(_localctx, 930, EDIF300Parser.RULE_offsetEvent);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4901;
                this.match(EDIF300Parser.T__363);
                this.state = 4902;
                this.event();
                this.state = 4903;
                this.numberValue();
                this.state = 4904;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ohm = function () {
        var _localctx = new OhmContext(this._ctx, this.state);
        this.enterRule(_localctx, 932, EDIF300Parser.RULE_ohm);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4906;
                this.match(EDIF300Parser.T__364);
                this.state = 4907;
                this.unitExponent();
                this.state = 4908;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.openShape = function () {
        var _localctx = new OpenShapeContext(this._ctx, this.state);
        this.enterRule(_localctx, 934, EDIF300Parser.RULE_openShape);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4910;
                this.match(EDIF300Parser.T__365);
                this.state = 4911;
                this.curve();
                this.state = 4912;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.or_ = function () {
        var _localctx = new Or_Context(this._ctx, this.state);
        this.enterRule(_localctx, 936, EDIF300Parser.RULE_or_);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4914;
                this.match(EDIF300Parser.T__366);
                this.state = 4918;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << EDIF300Parser.T__6) | (1 << EDIF300Parser.T__25) | (1 << EDIF300Parser.T__29))) !== 0) || _la === EDIF300Parser.T__157 || _la === EDIF300Parser.T__250 || _la === EDIF300Parser.T__307 || _la === EDIF300Parser.T__308 || _la === EDIF300Parser.T__354 || _la === EDIF300Parser.T__366 || _la === EDIF300Parser.T__603 || _la === EDIF300Parser.T__626 || _la === EDIF300Parser.T__664) {
                    {
                        {
                            this.state = 4915;
                            this.booleanExpression();
                        }
                    }
                    this.state = 4920;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4921;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.origin = function () {
        var _localctx = new OriginContext(this._ctx, this.state);
        this.enterRule(_localctx, 938, EDIF300Parser.RULE_origin);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4923;
                this.match(EDIF300Parser.T__367);
                this.state = 4924;
                this.pointValue();
                this.state = 4925;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.originalBoundingBox = function () {
        var _localctx = new OriginalBoundingBoxContext(this._ctx, this.state);
        this.enterRule(_localctx, 940, EDIF300Parser.RULE_originalBoundingBox);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4927;
                this.match(EDIF300Parser.T__368);
                this.state = 4928;
                this.rectangle();
                this.state = 4929;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.originalDrawingDate = function () {
        var _localctx = new OriginalDrawingDateContext(this._ctx, this.state);
        this.enterRule(_localctx, 942, EDIF300Parser.RULE_originalDrawingDate);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4931;
                this.match(EDIF300Parser.T__369);
                this.state = 4932;
                this.date();
                this.state = 4933;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.originalDrawingDateDisplay = function () {
        var _localctx = new OriginalDrawingDateDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 944, EDIF300Parser.RULE_originalDrawingDateDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4935;
                this.match(EDIF300Parser.T__370);
                this.state = 4939;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 4936;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 4937;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 4938;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 4941;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.originalName = function () {
        var _localctx = new OriginalNameContext(this._ctx, this.state);
        this.enterRule(_localctx, 946, EDIF300Parser.RULE_originalName);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4943;
                this.stringToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.otherwiseFrame = function () {
        var _localctx = new OtherwiseFrameContext(this._ctx, this.state);
        this.enterRule(_localctx, 948, EDIF300Parser.RULE_otherwiseFrame);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4945;
                this.match(EDIF300Parser.T__371);
                this.state = 4946;
                this.frameNameDef();
                this.state = 4947;
                this.ifFrameSet();
                this.state = 4948;
                this.logicalConnectivity();
                this.state = 4956;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 4954;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4949;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 4950;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 4951;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 4952;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 4953;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4958;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4959;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.otherwiseFrameAnnotate = function () {
        var _localctx = new OtherwiseFrameAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 950, EDIF300Parser.RULE_otherwiseFrameAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4961;
                this.match(EDIF300Parser.T__372);
                this.state = 4962;
                this.extendFrameDef();
                this.state = 4973;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__177 || _la === EDIF300Parser.T__216 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__305 || _la === EDIF300Parser.T__361 || _la === EDIF300Parser.T__372 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 4971;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 4963;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__177:
                                {
                                    this.state = 4964;
                                    this.forFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__216:
                                {
                                    this.state = 4965;
                                    this.ifFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__259:
                                {
                                    this.state = 4966;
                                    this.interconnectAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__305:
                                {
                                    this.state = 4967;
                                    this.leafOccurrenceAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__361:
                                {
                                    this.state = 4968;
                                    this.occurrenceAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__372:
                                {
                                    this.state = 4969;
                                    this.otherwiseFrameAnnotate();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 4970;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4975;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4976;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.otherwiseFrameRef = function () {
        var _localctx = new OtherwiseFrameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 952, EDIF300Parser.RULE_otherwiseFrameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4978;
                this.match(EDIF300Parser.T__373);
                this.state = 4979;
                this.frameNameRef();
                this.state = 4980;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.output = function () {
        var _localctx = new OutputContext(this._ctx, this.state);
        this.enterRule(_localctx, 954, EDIF300Parser.RULE_output);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4982;
                this.match(EDIF300Parser.T__374);
                this.state = 4983;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.outputPort = function () {
        var _localctx = new OutputPortContext(this._ctx, this.state);
        this.enterRule(_localctx, 956, EDIF300Parser.RULE_outputPort);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4985;
                this.match(EDIF300Parser.T__375);
                this.state = 4987;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__376) {
                    {
                        this.state = 4986;
                        this.outputPortAttributes();
                    }
                }
                this.state = 4989;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.outputPortAttributes = function () {
        var _localctx = new OutputPortAttributesContext(this._ctx, this.state);
        this.enterRule(_localctx, 958, EDIF300Parser.RULE_outputPortAttributes);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 4991;
                this.match(EDIF300Parser.T__376);
                this.state = 4996;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__103 || _la === EDIF300Parser.T__109) {
                    {
                        this.state = 4994;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__103:
                                {
                                    this.state = 4992;
                                    this.dcFanInLoad();
                                }
                                break;
                            case EDIF300Parser.T__109:
                                {
                                    this.state = 4993;
                                    this.dcMaxFanOut();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 4998;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 4999;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.owner = function () {
        var _localctx = new OwnerContext(this._ctx, this.state);
        this.enterRule(_localctx, 960, EDIF300Parser.RULE_owner);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5001;
                this.match(EDIF300Parser.T__377);
                this.state = 5002;
                this.stringValue();
                this.state = 5003;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.page = function () {
        var _localctx = new PageContext(this._ctx, this.state);
        this.enterRule(_localctx, 962, EDIF300Parser.RULE_page);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5005;
                this.match(EDIF300Parser.T__378);
                this.state = 5006;
                this.pageNameDef();
                this.state = 5007;
                this.pageHeader();
                this.state = 5030;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 41)) & ~0x1F) === 0 && ((1 << (_la - 41)) & ((1 << (EDIF300Parser.T__40 - 41)) | (1 << (EDIF300Parser.T__56 - 41)) | (1 << (EDIF300Parser.T__61 - 41)))) !== 0) || _la === EDIF300Parser.T__315 || _la === EDIF300Parser.T__383 || _la === EDIF300Parser.T__392 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__469 || ((((_la - 481)) & ~0x1F) === 0 && ((1 << (_la - 481)) & ((1 << (EDIF300Parser.T__480 - 481)) | (1 << (EDIF300Parser.T__484 - 481)) | (1 << (EDIF300Parser.T__491 - 481)) | (1 << (EDIF300Parser.T__494 - 481)) | (1 << (EDIF300Parser.T__506 - 481)) | (1 << (EDIF300Parser.T__511 - 481)))) !== 0) || ((((_la - 516)) & ~0x1F) === 0 && ((1 << (_la - 516)) & ((1 << (EDIF300Parser.T__515 - 516)) | (1 << (EDIF300Parser.T__519 - 516)) | (1 << (EDIF300Parser.T__526 - 516)) | (1 << (EDIF300Parser.T__546 - 516)))) !== 0) || _la === EDIF300Parser.T__642 || _la === EDIF300Parser.T__651) {
                    {
                        this.state = 5028;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__40:
                                {
                                    this.state = 5008;
                                    this.cellPropertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__56:
                                {
                                    this.state = 5009;
                                    this.clusterPropertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5010;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__315:
                                {
                                    this.state = 5011;
                                    this.localPortGroup();
                                }
                                break;
                            case EDIF300Parser.T__383:
                                {
                                    this.state = 5012;
                                    this.pageCommentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__392:
                                {
                                    this.state = 5013;
                                    this.pageTitleBlock();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 5014;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__469:
                                {
                                    this.state = 5015;
                                    this.schematicBus();
                                }
                                break;
                            case EDIF300Parser.T__480:
                                {
                                    this.state = 5016;
                                    this.schematicForFrameImplementation();
                                }
                                break;
                            case EDIF300Parser.T__484:
                                {
                                    this.state = 5017;
                                    this.schematicGlobalPortImplementation();
                                }
                                break;
                            case EDIF300Parser.T__491:
                                {
                                    this.state = 5018;
                                    this.schematicIfFrameImplementation();
                                }
                                break;
                            case EDIF300Parser.T__494:
                                {
                                    this.state = 5019;
                                    this.schematicInstanceImplementation();
                                }
                                break;
                            case EDIF300Parser.T__506:
                                {
                                    this.state = 5020;
                                    this.schematicMasterPortImplementation();
                                }
                                break;
                            case EDIF300Parser.T__511:
                                {
                                    this.state = 5021;
                                    this.schematicNet();
                                }
                                break;
                            case EDIF300Parser.T__515:
                                {
                                    this.state = 5022;
                                    this.schematicOffPageConnectorImplementation();
                                }
                                break;
                            case EDIF300Parser.T__519:
                                {
                                    this.state = 5023;
                                    this.schematicOnPageConnectorImplementation();
                                }
                                break;
                            case EDIF300Parser.T__526:
                                {
                                    this.state = 5024;
                                    this.schematicOtherwiseFrameImplementation();
                                }
                                break;
                            case EDIF300Parser.T__546:
                                {
                                    this.state = 5025;
                                    this.schematicRipperImplementation();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 5026;
                                    this.userData();
                                }
                                break;
                            case EDIF300Parser.T__651:
                                {
                                    this.state = 5027;
                                    this.viewPropertyDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5032;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5033;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageAnnotate = function () {
        var _localctx = new PageAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 964, EDIF300Parser.RULE_pageAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5035;
                this.match(EDIF300Parser.T__379);
                this.state = 5036;
                this.extendPageDef();
                this.state = 5040;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__259) {
                    {
                        {
                            this.state = 5037;
                            this.interconnectAnnotate();
                        }
                    }
                    this.state = 5042;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5043;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageBorder = function () {
        var _localctx = new PageBorderContext(this._ctx, this.state);
        this.enterRule(_localctx, 966, EDIF300Parser.RULE_pageBorder);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5045;
                this.match(EDIF300Parser.T__380);
                this.state = 5046;
                this.pageBorderTemplateRef();
                this.state = 5047;
                this.transform();
                this.state = 5052;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 5050;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 5048;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 5049;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5054;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5055;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageBorderTemplate = function () {
        var _localctx = new PageBorderTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 968, EDIF300Parser.RULE_pageBorderTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5057;
                this.match(EDIF300Parser.T__381);
                this.state = 5058;
                this.libraryObjectNameDef();
                this.state = 5059;
                this.schematicTemplateHeader();
                this.state = 5060;
                this.usableArea();
                this.state = 5068;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
                    {
                        this.state = 5066;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 5061;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 5062;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 5063;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 5064;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 5065;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5070;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5071;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageBorderTemplateRef = function () {
        var _localctx = new PageBorderTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 970, EDIF300Parser.RULE_pageBorderTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5073;
                this.match(EDIF300Parser.T__382);
                this.state = 5074;
                this.libraryObjectNameRef();
                this.state = 5076;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 5075;
                        this.libraryRef();
                    }
                }
                this.state = 5078;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageCommentGraphics = function () {
        var _localctx = new PageCommentGraphicsContext(this._ctx, this.state);
        this.enterRule(_localctx, 972, EDIF300Parser.RULE_pageCommentGraphics);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5080;
                this.match(EDIF300Parser.T__383);
                this.state = 5088;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 5086;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 5081;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5082;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 5083;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 5084;
                                    this.schematicComplexFigure();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 5085;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5090;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5091;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageHeader = function () {
        var _localctx = new PageHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 974, EDIF300Parser.RULE_pageHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5093;
                this.match(EDIF300Parser.T__384);
                this.state = 5104;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__368 || _la === EDIF300Parser.T__380 || _la === EDIF300Parser.T__390 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 5102;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__14:
                                {
                                    this.state = 5094;
                                    this.backgroundColor();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 5095;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 5096;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__368:
                                {
                                    this.state = 5097;
                                    this.originalBoundingBox();
                                }
                                break;
                            case EDIF300Parser.T__380:
                                {
                                    this.state = 5098;
                                    this.pageBorder();
                                }
                                break;
                            case EDIF300Parser.T__390:
                                {
                                    this.state = 5099;
                                    this.pageSize();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 5100;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 5101;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5106;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5107;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageIdentification = function () {
        var _localctx = new PageIdentificationContext(this._ctx, this.state);
        this.enterRule(_localctx, 976, EDIF300Parser.RULE_pageIdentification);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5109;
                this.match(EDIF300Parser.T__385);
                this.state = 5110;
                this.stringToken();
                this.state = 5111;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageIdentificationDisplay = function () {
        var _localctx = new PageIdentificationDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 978, EDIF300Parser.RULE_pageIdentificationDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5113;
                this.match(EDIF300Parser.T__386);
                this.state = 5117;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 5114;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 5115;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 5116;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5119;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageNameCaseSensitive = function () {
        var _localctx = new PageNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 980, EDIF300Parser.RULE_pageNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5121;
                this.match(EDIF300Parser.T__387);
                this.state = 5122;
                this.booleanToken();
                this.state = 5123;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageNameDef = function () {
        var _localctx = new PageNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 982, EDIF300Parser.RULE_pageNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5125;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageNameRef = function () {
        var _localctx = new PageNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 984, EDIF300Parser.RULE_pageNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5127;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pagePropertyDisplay = function () {
        var _localctx = new PagePropertyDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 986, EDIF300Parser.RULE_pagePropertyDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5129;
                this.match(EDIF300Parser.T__388);
                this.state = 5130;
                this.propertyNameRef();
                this.state = 5135;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
                    {
                        this.state = 5133;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 5131;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__447:
                                {
                                    this.state = 5132;
                                    this.propertyNameDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5137;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5138;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageRef = function () {
        var _localctx = new PageRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 988, EDIF300Parser.RULE_pageRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5140;
                this.match(EDIF300Parser.T__389);
                this.state = 5141;
                this.pageNameRef();
                this.state = 5142;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageSize = function () {
        var _localctx = new PageSizeContext(this._ctx, this.state);
        this.enterRule(_localctx, 990, EDIF300Parser.RULE_pageSize);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5144;
                this.match(EDIF300Parser.T__390);
                this.state = 5145;
                this.rectangle();
                this.state = 5146;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageTitle = function () {
        var _localctx = new PageTitleContext(this._ctx, this.state);
        this.enterRule(_localctx, 992, EDIF300Parser.RULE_pageTitle);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5148;
                this.match(EDIF300Parser.T__391);
                this.state = 5149;
                this.stringToken();
                this.state = 5150;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageTitleBlock = function () {
        var _localctx = new PageTitleBlockContext(this._ctx, this.state);
        this.enterRule(_localctx, 994, EDIF300Parser.RULE_pageTitleBlock);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5152;
                this.match(EDIF300Parser.T__392);
                this.state = 5153;
                this.implementationNameDef();
                this.state = 5154;
                this.pageTitleBlockTemplateRef();
                this.state = 5155;
                this.transform();
                this.state = 5166;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__346 || ((((_la - 389)) & ~0x1F) === 0 && ((1 << (_la - 389)) & ((1 << (EDIF300Parser.T__388 - 389)) | (1 << (EDIF300Parser.T__393 - 389)) | (1 << (EDIF300Parser.T__394 - 389)))) !== 0) || ((((_la - 443)) & ~0x1F) === 0 && ((1 << (_la - 443)) & ((1 << (EDIF300Parser.T__442 - 443)) | (1 << (EDIF300Parser.T__443 - 443)) | (1 << (EDIF300Parser.T__444 - 443)) | (1 << (EDIF300Parser.T__448 - 443)))) !== 0)) {
                    {
                        this.state = 5164;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 5156;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__388:
                                {
                                    this.state = 5157;
                                    this.pagePropertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__393:
                                {
                                    this.state = 5158;
                                    this.pageTitleBlockAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__394:
                                {
                                    this.state = 5159;
                                    this.pageTitleBlockAttributes();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 5160;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 5161;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 5162;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 5163;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5168;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5169;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageTitleBlockAttributeDisplay = function () {
        var _localctx = new PageTitleBlockAttributeDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 996, EDIF300Parser.RULE_pageTitleBlockAttributeDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5171;
                this.match(EDIF300Parser.T__393);
                this.state = 5188;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__9 || _la === EDIF300Parser.T__48 || _la === EDIF300Parser.T__64 || _la === EDIF300Parser.T__92 || _la === EDIF300Parser.T__94 || ((((_la - 140)) & ~0x1F) === 0 && ((1 << (_la - 140)) & ((1 << (EDIF300Parser.T__139 - 140)) | (1 << (EDIF300Parser.T__141 - 140)) | (1 << (EDIF300Parser.T__143 - 140)) | (1 << (EDIF300Parser.T__152 - 140)))) !== 0) || ((((_la - 371)) & ~0x1F) === 0 && ((1 << (_la - 371)) & ((1 << (EDIF300Parser.T__370 - 371)) | (1 << (EDIF300Parser.T__386 - 371)) | (1 << (EDIF300Parser.T__397 - 371)))) !== 0) || _la === EDIF300Parser.T__461 || _la === EDIF300Parser.T__623) {
                    {
                        this.state = 5186;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__9:
                                {
                                    this.state = 5172;
                                    this.approvedDateDisplay();
                                }
                                break;
                            case EDIF300Parser.T__48:
                                {
                                    this.state = 5173;
                                    this.checkDateDisplay();
                                }
                                break;
                            case EDIF300Parser.T__64:
                                {
                                    this.state = 5174;
                                    this.companyNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__92:
                                {
                                    this.state = 5175;
                                    this.contractDisplay();
                                }
                                break;
                            case EDIF300Parser.T__94:
                                {
                                    this.state = 5176;
                                    this.copyrightDisplay();
                                }
                                break;
                            case EDIF300Parser.T__139:
                                {
                                    this.state = 5177;
                                    this.drawingDescriptionDisplay();
                                }
                                break;
                            case EDIF300Parser.T__141:
                                {
                                    this.state = 5178;
                                    this.drawingIdentificationDisplay();
                                }
                                break;
                            case EDIF300Parser.T__143:
                                {
                                    this.state = 5179;
                                    this.drawingSizeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__152:
                                {
                                    this.state = 5180;
                                    this.engineeringDateDisplay();
                                }
                                break;
                            case EDIF300Parser.T__370:
                                {
                                    this.state = 5181;
                                    this.originalDrawingDateDisplay();
                                }
                                break;
                            case EDIF300Parser.T__386:
                                {
                                    this.state = 5182;
                                    this.pageIdentificationDisplay();
                                }
                                break;
                            case EDIF300Parser.T__397:
                                {
                                    this.state = 5183;
                                    this.pageTitleDisplay();
                                }
                                break;
                            case EDIF300Parser.T__461:
                                {
                                    this.state = 5184;
                                    this.revisionDisplay();
                                }
                                break;
                            case EDIF300Parser.T__623:
                                {
                                    this.state = 5185;
                                    this.totalPagesDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5190;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5191;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageTitleBlockAttributes = function () {
        var _localctx = new PageTitleBlockAttributesContext(this._ctx, this.state);
        this.enterRule(_localctx, 998, EDIF300Parser.RULE_pageTitleBlockAttributes);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5193;
                this.match(EDIF300Parser.T__394);
                this.state = 5208;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__8 || _la === EDIF300Parser.T__47 || _la === EDIF300Parser.T__63 || _la === EDIF300Parser.T__91 || ((((_la - 139)) & ~0x1F) === 0 && ((1 << (_la - 139)) & ((1 << (EDIF300Parser.T__138 - 139)) | (1 << (EDIF300Parser.T__140 - 139)) | (1 << (EDIF300Parser.T__142 - 139)) | (1 << (EDIF300Parser.T__151 - 139)))) !== 0) || ((((_la - 370)) & ~0x1F) === 0 && ((1 << (_la - 370)) & ((1 << (EDIF300Parser.T__369 - 370)) | (1 << (EDIF300Parser.T__385 - 370)) | (1 << (EDIF300Parser.T__391 - 370)))) !== 0) || _la === EDIF300Parser.T__460) {
                    {
                        this.state = 5206;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__8:
                                {
                                    this.state = 5194;
                                    this.approvedDate();
                                }
                                break;
                            case EDIF300Parser.T__47:
                                {
                                    this.state = 5195;
                                    this.checkDate();
                                }
                                break;
                            case EDIF300Parser.T__63:
                                {
                                    this.state = 5196;
                                    this.companyName();
                                }
                                break;
                            case EDIF300Parser.T__91:
                                {
                                    this.state = 5197;
                                    this.contract();
                                }
                                break;
                            case EDIF300Parser.T__138:
                                {
                                    this.state = 5198;
                                    this.drawingDescription();
                                }
                                break;
                            case EDIF300Parser.T__140:
                                {
                                    this.state = 5199;
                                    this.drawingIdentification();
                                }
                                break;
                            case EDIF300Parser.T__142:
                                {
                                    this.state = 5200;
                                    this.drawingSize();
                                }
                                break;
                            case EDIF300Parser.T__151:
                                {
                                    this.state = 5201;
                                    this.engineeringDate();
                                }
                                break;
                            case EDIF300Parser.T__369:
                                {
                                    this.state = 5202;
                                    this.originalDrawingDate();
                                }
                                break;
                            case EDIF300Parser.T__385:
                                {
                                    this.state = 5203;
                                    this.pageIdentification();
                                }
                                break;
                            case EDIF300Parser.T__391:
                                {
                                    this.state = 5204;
                                    this.pageTitle();
                                }
                                break;
                            case EDIF300Parser.T__460:
                                {
                                    this.state = 5205;
                                    this.revision();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5210;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5211;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageTitleBlockTemplate = function () {
        var _localctx = new PageTitleBlockTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1000, EDIF300Parser.RULE_pageTitleBlockTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5213;
                this.match(EDIF300Parser.T__395);
                this.state = 5214;
                this.libraryObjectNameDef();
                this.state = 5215;
                this.schematicTemplateHeader();
                this.state = 5225;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__393 || _la === EDIF300Parser.T__394 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
                    {
                        this.state = 5223;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 5216;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 5217;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 5218;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__393:
                                {
                                    this.state = 5219;
                                    this.pageTitleBlockAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__394:
                                {
                                    this.state = 5220;
                                    this.pageTitleBlockAttributes();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 5221;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 5222;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5227;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5228;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageTitleBlockTemplateRef = function () {
        var _localctx = new PageTitleBlockTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1002, EDIF300Parser.RULE_pageTitleBlockTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5230;
                this.match(EDIF300Parser.T__396);
                this.state = 5231;
                this.libraryObjectNameRef();
                this.state = 5233;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 5232;
                        this.libraryRef();
                    }
                }
                this.state = 5235;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pageTitleDisplay = function () {
        var _localctx = new PageTitleDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1004, EDIF300Parser.RULE_pageTitleDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5237;
                this.match(EDIF300Parser.T__397);
                this.state = 5241;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 5238;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 5239;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 5240;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5243;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.parameterDisplay = function () {
        var _localctx = new ParameterDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1006, EDIF300Parser.RULE_parameterDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5245;
                this.match(EDIF300Parser.T__398);
                this.state = 5246;
                this.parameterNameRef();
                this.state = 5250;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 5247;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 5248;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 5249;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5253;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__400) {
                    {
                        this.state = 5252;
                        this.parameterNameDisplay();
                    }
                }
                this.state = 5255;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.parameterNameCaseSensitive = function () {
        var _localctx = new ParameterNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 1008, EDIF300Parser.RULE_parameterNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5257;
                this.match(EDIF300Parser.T__399);
                this.state = 5258;
                this.booleanToken();
                this.state = 5259;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.parameterNameDef = function () {
        var _localctx = new ParameterNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1010, EDIF300Parser.RULE_parameterNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5261;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.parameterNameDisplay = function () {
        var _localctx = new ParameterNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1012, EDIF300Parser.RULE_parameterNameDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5263;
                this.match(EDIF300Parser.T__400);
                this.state = 5267;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 5264;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 5265;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 5266;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5269;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.parameterNameRef = function () {
        var _localctx = new ParameterNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1014, EDIF300Parser.RULE_parameterNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5271;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.path = function () {
        var _localctx = new PathContext(this._ctx, this.state);
        this.enterRule(_localctx, 1016, EDIF300Parser.RULE_path);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5273;
                this.match(EDIF300Parser.T__401);
                this.state = 5274;
                this.pointList();
                this.state = 5275;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pathDelay = function () {
        var _localctx = new PathDelayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1018, EDIF300Parser.RULE_pathDelay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5277;
                this.match(EDIF300Parser.T__402);
                this.state = 5278;
                this.delay();
                this.state = 5282;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__153) {
                    {
                        {
                            this.state = 5279;
                            this.event();
                        }
                    }
                    this.state = 5284;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5285;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pathWidth = function () {
        var _localctx = new PathWidthContext(this._ctx, this.state);
        this.enterRule(_localctx, 1020, EDIF300Parser.RULE_pathWidth);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5287;
                this.match(EDIF300Parser.T__403);
                this.state = 5290;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.DECIMAL_LITERAL:
                        {
                            this.state = 5288;
                            this.lengthValue();
                        }
                        break;
                    case EDIF300Parser.T__334:
                        {
                            this.state = 5289;
                            this.minimalWidth();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5292;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pcbLayoutUnits = function () {
        var _localctx = new PcbLayoutUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1022, EDIF300Parser.RULE_pcbLayoutUnits);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5294;
                this.match(EDIF300Parser.T__404);
                this.state = 5301;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 576)) & ~0x1F) === 0 && ((1 << (_la - 576)) & ((1 << (EDIF300Parser.T__575 - 576)) | (1 << (EDIF300Parser.T__576 - 576)) | (1 << (EDIF300Parser.T__578 - 576)) | (1 << (EDIF300Parser.T__580 - 576)))) !== 0)) {
                    {
                        this.state = 5299;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__575:
                                {
                                    this.state = 5295;
                                    this.setAngle();
                                }
                                break;
                            case EDIF300Parser.T__576:
                                {
                                    this.state = 5296;
                                    this.setCapacitance();
                                }
                                break;
                            case EDIF300Parser.T__578:
                                {
                                    this.state = 5297;
                                    this.setDistance();
                                }
                                break;
                            case EDIF300Parser.T__580:
                                {
                                    this.state = 5298;
                                    this.setTime();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5303;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5304;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pcbLayoutView = function () {
        var _localctx = new PcbLayoutViewContext(this._ctx, this.state);
        this.enterRule(_localctx, 1024, EDIF300Parser.RULE_pcbLayoutView);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5306;
                this.match(EDIF300Parser.T__405);
                this.state = 5307;
                this.viewNameDef();
                this.state = 5313;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 5311;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5308;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 5309;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 5310;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5315;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5316;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.permutable = function () {
        var _localctx = new PermutableContext(this._ctx, this.state);
        this.enterRule(_localctx, 1026, EDIF300Parser.RULE_permutable);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5318;
                this.match(EDIF300Parser.T__406);
                this.state = 5324;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__353 || _la === EDIF300Parser.T__406 || _la === EDIF300Parser.T__436) {
                    {
                        this.state = 5322;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__353:
                                {
                                    this.state = 5319;
                                    this.nonPermutable();
                                }
                                break;
                            case EDIF300Parser.T__406:
                                {
                                    this.state = 5320;
                                    this.permutable();
                                }
                                break;
                            case EDIF300Parser.T__436:
                                {
                                    this.state = 5321;
                                    this.portRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5326;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5327;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.physicalDefaults = function () {
        var _localctx = new PhysicalDefaultsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1028, EDIF300Parser.RULE_physicalDefaults);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5329;
                this.match(EDIF300Parser.T__407);
                this.state = 5331;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__545) {
                    {
                        this.state = 5330;
                        this.schematicRequiredDefaults();
                    }
                }
                this.state = 5333;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.physicalScaling = function () {
        var _localctx = new PhysicalScalingContext(this._ctx, this.state);
        this.enterRule(_localctx, 1030, EDIF300Parser.RULE_physicalScaling);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5335;
                this.match(EDIF300Parser.T__408);
                this.state = 5348;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__87 || _la === EDIF300Parser.T__135 || _la === EDIF300Parser.T__195 || _la === EDIF300Parser.T__271 || _la === EDIF300Parser.T__323 || _la === EDIF300Parser.T__329 || _la === EDIF300Parser.T__404 || _la === EDIF300Parser.T__566 || _la === EDIF300Parser.T__612) {
                    {
                        this.state = 5346;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5336;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__87:
                                {
                                    this.state = 5337;
                                    this.connectivityUnits();
                                }
                                break;
                            case EDIF300Parser.T__135:
                                {
                                    this.state = 5338;
                                    this.documentationUnits();
                                }
                                break;
                            case EDIF300Parser.T__195:
                                {
                                    this.state = 5339;
                                    this.geometryMacroUnits();
                                }
                                break;
                            case EDIF300Parser.T__271:
                                {
                                    this.state = 5340;
                                    this.interfaceUnits();
                                }
                                break;
                            case EDIF300Parser.T__323:
                                {
                                    this.state = 5341;
                                    this.logicModelUnits();
                                }
                                break;
                            case EDIF300Parser.T__329:
                                {
                                    this.state = 5342;
                                    this.maskLayoutUnits();
                                }
                                break;
                            case EDIF300Parser.T__404:
                                {
                                    this.state = 5343;
                                    this.pcbLayoutUnits();
                                }
                                break;
                            case EDIF300Parser.T__566:
                                {
                                    this.state = 5344;
                                    this.schematicUnits();
                                }
                                break;
                            case EDIF300Parser.T__612:
                                {
                                    this.state = 5345;
                                    this.symbolicLayoutUnits();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5350;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5351;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pixelPattern = function () {
        var _localctx = new PixelPatternContext(this._ctx, this.state);
        this.enterRule(_localctx, 1032, EDIF300Parser.RULE_pixelPattern);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5353;
                this.match(EDIF300Parser.T__409);
                this.state = 5354;
                this.rowSize();
                this.state = 5358;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__410) {
                    {
                        {
                            this.state = 5355;
                            this.pixelRow();
                        }
                    }
                    this.state = 5360;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5361;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pixelRow = function () {
        var _localctx = new PixelRowContext(this._ctx, this.state);
        this.enterRule(_localctx, 1034, EDIF300Parser.RULE_pixelRow);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5363;
                this.match(EDIF300Parser.T__410);
                this.state = 5367;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__157 || _la === EDIF300Parser.T__626) {
                    {
                        {
                            this.state = 5364;
                            this.booleanToken();
                        }
                    }
                    this.state = 5369;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5370;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.point = function () {
        var _localctx = new PointContext(this._ctx, this.state);
        this.enterRule(_localctx, 1036, EDIF300Parser.RULE_point);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5372;
                this.match(EDIF300Parser.T__411);
                this.state = 5373;
                this.pointValue();
                this.state = 5374;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pointList = function () {
        var _localctx = new PointListContext(this._ctx, this.state);
        this.enterRule(_localctx, 1038, EDIF300Parser.RULE_pointList);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5376;
                this.match(EDIF300Parser.T__412);
                this.state = 5380;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__450) {
                    {
                        {
                            this.state = 5377;
                            this.pointValue();
                        }
                    }
                    this.state = 5382;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5383;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pointValue = function () {
        var _localctx = new PointValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1040, EDIF300Parser.RULE_pointValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5385;
                this.pt();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.polygon = function () {
        var _localctx = new PolygonContext(this._ctx, this.state);
        this.enterRule(_localctx, 1042, EDIF300Parser.RULE_polygon);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5387;
                this.match(EDIF300Parser.T__413);
                this.state = 5388;
                this.pointList();
                this.state = 5389;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.port = function () {
        var _localctx = new PortContext(this._ctx, this.state);
        this.enterRule(_localctx, 1044, EDIF300Parser.RULE_port);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5391;
                this.match(EDIF300Parser.T__414);
                this.state = 5393;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.IDENTIFIER) {
                    {
                        this.state = 5392;
                        this.portNameDef();
                    }
                }
                this.state = 5396;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__19 || _la === EDIF300Parser.T__230 || _la === EDIF300Parser.T__375 || _la === EDIF300Parser.T__638) {
                    {
                        this.state = 5395;
                        this.portDirection();
                    }
                }
                this.state = 5413;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__2 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__113 || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__346 || ((((_la - 419)) & ~0x1F) === 0 && ((1 << (_la - 419)) & ((1 << (EDIF300Parser.T__418 - 419)) | (1 << (EDIF300Parser.T__425 - 419)) | (1 << (EDIF300Parser.T__431 - 419)) | (1 << (EDIF300Parser.T__438 - 419)) | (1 << (EDIF300Parser.T__442 - 419)))) !== 0) || _la === EDIF300Parser.T__532 || _la === EDIF300Parser.T__640 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 5411;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__2:
                                {
                                    this.state = 5398;
                                    this.acLoad();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5399;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__113:
                                {
                                    this.state = 5400;
                                    this.defaultConnection();
                                }
                                break;
                            case EDIF300Parser.T__118:
                                {
                                    this.state = 5401;
                                    this.designator();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 5402;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__418:
                                {
                                    this.state = 5403;
                                    this.portDelay();
                                }
                                break;
                            case EDIF300Parser.T__425:
                                {
                                    this.state = 5404;
                                    this.portLoadDelay();
                                }
                                break;
                            case EDIF300Parser.T__431:
                                {
                                    this.state = 5405;
                                    this.portNameGenerator();
                                }
                                break;
                            case EDIF300Parser.T__438:
                                {
                                    this.state = 5406;
                                    this.portWidth();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 5407;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__532:
                                {
                                    this.state = 5408;
                                    this.schematicPortAttributes();
                                }
                                break;
                            case EDIF300Parser.T__640:
                                {
                                    this.state = 5409;
                                    this.unused();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 5410;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5415;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5416;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portAnnotate = function () {
        var _localctx = new PortAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1046, EDIF300Parser.RULE_portAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5418;
                this.match(EDIF300Parser.T__415);
                this.state = 5421;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.IDENTIFIER:
                        {
                            this.state = 5419;
                            this.extendPortDef();
                        }
                        break;
                    case EDIF300Parser.T__428:
                        {
                            this.state = 5420;
                            this.extendPortMemberDef();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5435;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__2 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__127 || ((((_la - 419)) & ~0x1F) === 0 && ((1 << (_la - 419)) & ((1 << (EDIF300Parser.T__418 - 419)) | (1 << (EDIF300Parser.T__420 - 419)) | (1 << (EDIF300Parser.T__425 - 419)) | (1 << (EDIF300Parser.T__427 - 419)) | (1 << (EDIF300Parser.T__435 - 419)) | (1 << (EDIF300Parser.T__442 - 419)))) !== 0)) {
                    {
                        this.state = 5433;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__2:
                                {
                                    this.state = 5423;
                                    this.acLoad();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5424;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__118:
                                {
                                    this.state = 5425;
                                    this.designator();
                                }
                                break;
                            case EDIF300Parser.T__127:
                                {
                                    this.state = 5426;
                                    this.directionalPortAttributeOverride();
                                }
                                break;
                            case EDIF300Parser.T__418:
                                {
                                    this.state = 5427;
                                    this.portDelay();
                                }
                                break;
                            case EDIF300Parser.T__420:
                                {
                                    this.state = 5428;
                                    this.portDelayOverride();
                                }
                                break;
                            case EDIF300Parser.T__425:
                                {
                                    this.state = 5429;
                                    this.portLoadDelay();
                                }
                                break;
                            case EDIF300Parser.T__427:
                                {
                                    this.state = 5430;
                                    this.portLoadDelayOverride();
                                }
                                break;
                            case EDIF300Parser.T__435:
                                {
                                    this.state = 5431;
                                    this.portPropertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 5432;
                                    this.property();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5437;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5438;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portAttributeDisplay = function () {
        var _localctx = new PortAttributeDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1048, EDIF300Parser.RULE_portAttributeDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5440;
                this.match(EDIF300Parser.T__416);
                this.state = 5455;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__3 || _la === EDIF300Parser.T__73 || _la === EDIF300Parser.T__104 || ((((_la - 107)) & ~0x1F) === 0 && ((1 << (_la - 107)) & ((1 << (EDIF300Parser.T__106 - 107)) | (1 << (EDIF300Parser.T__108 - 107)) | (1 << (EDIF300Parser.T__110 - 107)) | (1 << (EDIF300Parser.T__119 - 107)))) !== 0) || ((((_la - 420)) & ~0x1F) === 0 && ((1 << (_la - 420)) & ((1 << (EDIF300Parser.T__419 - 420)) | (1 << (EDIF300Parser.T__426 - 420)) | (1 << (EDIF300Parser.T__430 - 420)) | (1 << (EDIF300Parser.T__432 - 420)) | (1 << (EDIF300Parser.T__433 - 420)))) !== 0)) {
                    {
                        this.state = 5453;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__3:
                                {
                                    this.state = 5441;
                                    this.acLoadDisplay();
                                }
                                break;
                            case EDIF300Parser.T__73:
                                {
                                    this.state = 5442;
                                    this.connectedSignalIndexGeneratorDisplay();
                                }
                                break;
                            case EDIF300Parser.T__104:
                                {
                                    this.state = 5443;
                                    this.dcFanInLoadDisplay();
                                }
                                break;
                            case EDIF300Parser.T__106:
                                {
                                    this.state = 5444;
                                    this.dcFanOutLoadDisplay();
                                }
                                break;
                            case EDIF300Parser.T__108:
                                {
                                    this.state = 5445;
                                    this.dcMaxFanInDisplay();
                                }
                                break;
                            case EDIF300Parser.T__110:
                                {
                                    this.state = 5446;
                                    this.dcMaxFanOutDisplay();
                                }
                                break;
                            case EDIF300Parser.T__119:
                                {
                                    this.state = 5447;
                                    this.designatorDisplay();
                                }
                                break;
                            case EDIF300Parser.T__419:
                                {
                                    this.state = 5448;
                                    this.portDelayDisplay();
                                }
                                break;
                            case EDIF300Parser.T__426:
                                {
                                    this.state = 5449;
                                    this.portLoadDelayDisplay();
                                }
                                break;
                            case EDIF300Parser.T__430:
                                {
                                    this.state = 5450;
                                    this.portNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__432:
                                {
                                    this.state = 5451;
                                    this.portNameGeneratorDisplay();
                                }
                                break;
                            case EDIF300Parser.T__433:
                                {
                                    this.state = 5452;
                                    this.portPropertyDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5457;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5458;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portBundle = function () {
        var _localctx = new PortBundleContext(this._ctx, this.state);
        this.enterRule(_localctx, 1050, EDIF300Parser.RULE_portBundle);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5460;
                this.match(EDIF300Parser.T__417);
                this.state = 5461;
                this.portNameDef();
                this.state = 5462;
                this.portList();
                this.state = 5470;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 5468;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5463;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 5464;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 5465;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 5466;
                                    this.userData();
                                }
                                break;
                            case EDIF300Parser.T__118:
                                {
                                    this.state = 5467;
                                    this.designator();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5472;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5473;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portDelay = function () {
        var _localctx = new PortDelayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1052, EDIF300Parser.RULE_portDelay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5475;
                this.match(EDIF300Parser.T__418);
                this.state = 5476;
                this.portDelayNameDef();
                this.state = 5477;
                this.derivation();
                this.state = 5478;
                this.delay();
                this.state = 5483;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
                    {
                        this.state = 5481;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__16:
                                {
                                    this.state = 5479;
                                    this.becomes();
                                }
                                break;
                            case EDIF300Parser.T__625:
                                {
                                    this.state = 5480;
                                    this.transition();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5485;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5486;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portDelayDisplay = function () {
        var _localctx = new PortDelayDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1054, EDIF300Parser.RULE_portDelayDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5488;
                this.match(EDIF300Parser.T__419);
                this.state = 5489;
                this.portDelayNameRef();
                this.state = 5493;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 5490;
                            this.display();
                        }
                    }
                    this.state = 5495;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5496;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portDelayNameDef = function () {
        var _localctx = new PortDelayNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1056, EDIF300Parser.RULE_portDelayNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5498;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portDelayNameRef = function () {
        var _localctx = new PortDelayNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1058, EDIF300Parser.RULE_portDelayNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5500;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portDelayOverride = function () {
        var _localctx = new PortDelayOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 1060, EDIF300Parser.RULE_portDelayOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5502;
                this.match(EDIF300Parser.T__420);
                this.state = 5503;
                this.portDelayNameRef();
                this.state = 5504;
                this.derivation();
                this.state = 5505;
                this.delay();
                this.state = 5510;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
                    {
                        this.state = 5508;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__16:
                                {
                                    this.state = 5506;
                                    this.becomes();
                                }
                                break;
                            case EDIF300Parser.T__625:
                                {
                                    this.state = 5507;
                                    this.transition();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5512;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5513;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portDirection = function () {
        var _localctx = new PortDirectionContext(this._ctx, this.state);
        this.enterRule(_localctx, 1062, EDIF300Parser.RULE_portDirection);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5519;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__230:
                        {
                            this.state = 5515;
                            this.inputPort();
                        }
                        break;
                    case EDIF300Parser.T__375:
                        {
                            this.state = 5516;
                            this.outputPort();
                        }
                        break;
                    case EDIF300Parser.T__19:
                        {
                            this.state = 5517;
                            this.bidirectionalPort();
                        }
                        break;
                    case EDIF300Parser.T__638:
                        {
                            this.state = 5518;
                            this.unspecifiedDirectionPort();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portDirectionIndicator = function () {
        var _localctx = new PortDirectionIndicatorContext(this._ctx, this.state);
        this.enterRule(_localctx, 1064, EDIF300Parser.RULE_portDirectionIndicator);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5527;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__229:
                        {
                            this.state = 5521;
                            this.input();
                        }
                        break;
                    case EDIF300Parser.T__374:
                        {
                            this.state = 5522;
                            this.output();
                        }
                        break;
                    case EDIF300Parser.T__18:
                        {
                            this.state = 5523;
                            this.bidirectional();
                        }
                        break;
                    case EDIF300Parser.T__637:
                        {
                            this.state = 5524;
                            this.unspecified();
                        }
                        break;
                    case EDIF300Parser.T__636:
                        {
                            this.state = 5525;
                            this.unrestricted();
                        }
                        break;
                    case EDIF300Parser.T__337:
                        {
                            this.state = 5526;
                            this.mixedDirection();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portIndexValue = function () {
        var _localctx = new PortIndexValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1066, EDIF300Parser.RULE_portIndexValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5529;
                this.match(EDIF300Parser.T__421);
                this.state = 5530;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portInstanceRef = function () {
        var _localctx = new PortInstanceRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1068, EDIF300Parser.RULE_portInstanceRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5532;
                this.match(EDIF300Parser.T__422);
                this.state = 5535;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.IDENTIFIER:
                        {
                            this.state = 5533;
                            this.portNameRef();
                        }
                        break;
                    case EDIF300Parser.T__428:
                        {
                            this.state = 5534;
                            this.portMemberRef();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5539;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__244:
                        {
                            this.state = 5537;
                            this.instanceRef();
                        }
                        break;
                    case EDIF300Parser.T__235:
                        {
                            this.state = 5538;
                            this.instanceMemberRef();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5541;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portJoined = function () {
        var _localctx = new PortJoinedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1070, EDIF300Parser.RULE_portJoined);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5543;
                this.match(EDIF300Parser.T__423);
                this.state = 5550;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__203 || _la === EDIF300Parser.T__317 || _la === EDIF300Parser.T__422 || _la === EDIF300Parser.T__436) {
                    {
                        this.state = 5548;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__203:
                                {
                                    this.state = 5544;
                                    this.globalPortRef();
                                }
                                break;
                            case EDIF300Parser.T__317:
                                {
                                    this.state = 5545;
                                    this.localPortGroupRef();
                                }
                                break;
                            case EDIF300Parser.T__422:
                                {
                                    this.state = 5546;
                                    this.portInstanceRef();
                                }
                                break;
                            case EDIF300Parser.T__436:
                                {
                                    this.state = 5547;
                                    this.portRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5552;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5553;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portList = function () {
        var _localctx = new PortListContext(this._ctx, this.state);
        this.enterRule(_localctx, 1072, EDIF300Parser.RULE_portList);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5555;
                this.match(EDIF300Parser.T__424);
                this.state = 5559;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__436) {
                    {
                        {
                            this.state = 5556;
                            this.portRef();
                        }
                    }
                    this.state = 5561;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5562;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portLoadDelay = function () {
        var _localctx = new PortLoadDelayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1074, EDIF300Parser.RULE_portLoadDelay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5564;
                this.match(EDIF300Parser.T__425);
                this.state = 5565;
                this.portLoadDelayNameDef();
                this.state = 5566;
                this.derivation();
                this.state = 5567;
                this.loadDelay();
                this.state = 5572;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
                    {
                        this.state = 5570;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__16:
                                {
                                    this.state = 5568;
                                    this.becomes();
                                }
                                break;
                            case EDIF300Parser.T__625:
                                {
                                    this.state = 5569;
                                    this.transition();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5574;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5575;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portLoadDelayDisplay = function () {
        var _localctx = new PortLoadDelayDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1076, EDIF300Parser.RULE_portLoadDelayDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5577;
                this.match(EDIF300Parser.T__426);
                this.state = 5578;
                this.portLoadDelayNameRef();
                this.state = 5582;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 5579;
                            this.display();
                        }
                    }
                    this.state = 5584;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5585;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portLoadDelayNameDef = function () {
        var _localctx = new PortLoadDelayNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1078, EDIF300Parser.RULE_portLoadDelayNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5587;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portLoadDelayNameRef = function () {
        var _localctx = new PortLoadDelayNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1080, EDIF300Parser.RULE_portLoadDelayNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5589;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portLoadDelayOverride = function () {
        var _localctx = new PortLoadDelayOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 1082, EDIF300Parser.RULE_portLoadDelayOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5591;
                this.match(EDIF300Parser.T__427);
                this.state = 5592;
                this.portLoadDelayNameRef();
                this.state = 5593;
                this.derivation();
                this.state = 5594;
                this.loadDelay();
                this.state = 5599;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
                    {
                        this.state = 5597;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__16:
                                {
                                    this.state = 5595;
                                    this.becomes();
                                }
                                break;
                            case EDIF300Parser.T__625:
                                {
                                    this.state = 5596;
                                    this.transition();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5601;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5602;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portMemberRef = function () {
        var _localctx = new PortMemberRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1084, EDIF300Parser.RULE_portMemberRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5604;
                this.match(EDIF300Parser.T__428);
                this.state = 5605;
                this.portNameRef();
                this.state = 5606;
                this.indexValue();
                this.state = 5607;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portNameCaseSensitive = function () {
        var _localctx = new PortNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 1086, EDIF300Parser.RULE_portNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5609;
                this.match(EDIF300Parser.T__429);
                this.state = 5610;
                this.booleanToken();
                this.state = 5611;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portNameDef = function () {
        var _localctx = new PortNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1088, EDIF300Parser.RULE_portNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5613;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portNameDisplay = function () {
        var _localctx = new PortNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1090, EDIF300Parser.RULE_portNameDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5615;
                this.match(EDIF300Parser.T__430);
                this.state = 5620;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
                    {
                        this.state = 5618;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 5616;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__131:
                                {
                                    this.state = 5617;
                                    this.displayNameOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5622;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5623;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portNameGenerator = function () {
        var _localctx = new PortNameGeneratorContext(this._ctx, this.state);
        this.enterRule(_localctx, 1092, EDIF300Parser.RULE_portNameGenerator);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5625;
                this.match(EDIF300Parser.T__431);
                this.state = 5626;
                this.stringExpression();
                this.state = 5627;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portNameGeneratorDisplay = function () {
        var _localctx = new PortNameGeneratorDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1094, EDIF300Parser.RULE_portNameGeneratorDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5629;
                this.match(EDIF300Parser.T__432);
                this.state = 5633;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 5630;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 5631;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 5632;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5635;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portNameRef = function () {
        var _localctx = new PortNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1096, EDIF300Parser.RULE_portNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5637;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portPropertyDisplay = function () {
        var _localctx = new PortPropertyDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1098, EDIF300Parser.RULE_portPropertyDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5639;
                this.match(EDIF300Parser.T__433);
                this.state = 5640;
                this.propertyNameRef();
                this.state = 5645;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
                    {
                        this.state = 5643;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 5641;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__447:
                                {
                                    this.state = 5642;
                                    this.propertyNameDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5647;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5648;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portPropertyDisplayOverride = function () {
        var _localctx = new PortPropertyDisplayOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 1100, EDIF300Parser.RULE_portPropertyDisplayOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5650;
                this.match(EDIF300Parser.T__434);
                this.state = 5651;
                this.propertyNameRef();
                this.state = 5655;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 5652;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 5653;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 5654;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5658;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__447) {
                    {
                        this.state = 5657;
                        this.propertyNameDisplay();
                    }
                }
                this.state = 5660;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portPropertyOverride = function () {
        var _localctx = new PortPropertyOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 1102, EDIF300Parser.RULE_portPropertyOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5662;
                this.match(EDIF300Parser.T__435);
                this.state = 5663;
                this.propertyNameRef();
                this.state = 5666;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__23:
                    case EDIF300Parser.T__247:
                    case EDIF300Parser.T__336:
                    case EDIF300Parser.T__356:
                    case EDIF300Parser.T__411:
                    case EDIF300Parser.T__599:
                        {
                            this.state = 5664;
                            this.typedValue();
                        }
                        break;
                    case EDIF300Parser.T__639:
                        {
                            this.state = 5665;
                            this.untyped();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5673;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 5671;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5668;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__165:
                                {
                                    this.state = 5669;
                                    this.fixed();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 5670;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5675;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5676;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portRef = function () {
        var _localctx = new PortRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1104, EDIF300Parser.RULE_portRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5678;
                this.match(EDIF300Parser.T__436);
                this.state = 5679;
                this.portNameRef();
                this.state = 5680;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portSet = function () {
        var _localctx = new PortSetContext(this._ctx, this.state);
        this.enterRule(_localctx, 1106, EDIF300Parser.RULE_portSet);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5682;
                this.match(EDIF300Parser.T__437);
                this.state = 5686;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__436) {
                    {
                        {
                            this.state = 5683;
                            this.portRef();
                        }
                    }
                    this.state = 5688;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5689;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.portWidth = function () {
        var _localctx = new PortWidthContext(this._ctx, this.state);
        this.enterRule(_localctx, 1108, EDIF300Parser.RULE_portWidth);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5691;
                this.match(EDIF300Parser.T__438);
                this.state = 5692;
                this.integerExpression();
                this.state = 5693;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.presentLogicValue = function () {
        var _localctx = new PresentLogicValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1110, EDIF300Parser.RULE_presentLogicValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5698;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.IDENTIFIER:
                        {
                            this.state = 5695;
                            this.logicNameRef();
                        }
                        break;
                    case EDIF300Parser.T__320:
                        {
                            this.state = 5696;
                            this.logicList();
                        }
                        break;
                    case EDIF300Parser.T__325:
                        {
                            this.state = 5697;
                            this.logicOneOf();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.previousLogicValue = function () {
        var _localctx = new PreviousLogicValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1112, EDIF300Parser.RULE_previousLogicValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5703;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.IDENTIFIER:
                        {
                            this.state = 5700;
                            this.logicNameRef();
                        }
                        break;
                    case EDIF300Parser.T__320:
                        {
                            this.state = 5701;
                            this.logicList();
                        }
                        break;
                    case EDIF300Parser.T__325:
                        {
                            this.state = 5702;
                            this.logicOneOf();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.previousVersion = function () {
        var _localctx = new PreviousVersionContext(this._ctx, this.state);
        this.enterRule(_localctx, 1114, EDIF300Parser.RULE_previousVersion);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5705;
                this.match(EDIF300Parser.T__439);
                this.state = 5706;
                this.viewRef();
                this.state = 5708;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__452) {
                    {
                        this.state = 5707;
                        this.reason();
                    }
                }
                this.state = 5710;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.primaryName = function () {
        var _localctx = new PrimaryNameContext(this._ctx, this.state);
        this.enterRule(_localctx, 1116, EDIF300Parser.RULE_primaryName);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5712;
                this.match(EDIF300Parser.T__440);
                this.state = 5713;
                this.originalName();
                this.state = 5719;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__130 || _la === EDIF300Parser.T__191 || _la === EDIF300Parser.T__348) {
                    {
                        this.state = 5717;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__130:
                                {
                                    this.state = 5714;
                                    this.displayName();
                                }
                                break;
                            case EDIF300Parser.T__191:
                                {
                                    this.state = 5715;
                                    this.generated();
                                }
                                break;
                            case EDIF300Parser.T__348:
                                {
                                    this.state = 5716;
                                    this.nameStructure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5721;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5722;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.program = function () {
        var _localctx = new ProgramContext(this._ctx, this.state);
        this.enterRule(_localctx, 1118, EDIF300Parser.RULE_program);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5724;
                this.match(EDIF300Parser.T__441);
                this.state = 5725;
                this.stringValue();
                this.state = 5727;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__643) {
                    {
                        this.state = 5726;
                        this.version();
                    }
                }
                this.state = 5729;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.property = function () {
        var _localctx = new PropertyContext(this._ctx, this.state);
        this.enterRule(_localctx, 1120, EDIF300Parser.RULE_property);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5731;
                this.match(EDIF300Parser.T__442);
                this.state = 5732;
                this.propertyNameDef();
                this.state = 5735;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__23:
                    case EDIF300Parser.T__247:
                    case EDIF300Parser.T__336:
                    case EDIF300Parser.T__356:
                    case EDIF300Parser.T__411:
                    case EDIF300Parser.T__599:
                        {
                            this.state = 5733;
                            this.typedValue();
                        }
                        break;
                    case EDIF300Parser.T__639:
                        {
                            this.state = 5734;
                            this.untyped();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5745;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__377 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__445 || _la === EDIF300Parser.T__635) {
                    {
                        this.state = 5743;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5737;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 5738;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__377:
                                {
                                    this.state = 5739;
                                    this.owner();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 5740;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__445:
                                {
                                    this.state = 5741;
                                    this.propertyInheritanceControl();
                                }
                                break;
                            case EDIF300Parser.T__635:
                                {
                                    this.state = 5742;
                                    this.unitRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5747;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5748;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.propertyDisplay = function () {
        var _localctx = new PropertyDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1122, EDIF300Parser.RULE_propertyDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5750;
                this.match(EDIF300Parser.T__443);
                this.state = 5751;
                this.propertyNameRef();
                this.state = 5756;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
                    {
                        this.state = 5754;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 5752;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__447:
                                {
                                    this.state = 5753;
                                    this.propertyNameDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5758;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5759;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.propertyDisplayOverride = function () {
        var _localctx = new PropertyDisplayOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 1124, EDIF300Parser.RULE_propertyDisplayOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5761;
                this.match(EDIF300Parser.T__444);
                this.state = 5762;
                this.propertyNameRef();
                this.state = 5766;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 5763;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 5764;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 5765;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5769;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__447) {
                    {
                        this.state = 5768;
                        this.propertyNameDisplay();
                    }
                }
                this.state = 5771;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.propertyInheritanceControl = function () {
        var _localctx = new PropertyInheritanceControlContext(this._ctx, this.state);
        this.enterRule(_localctx, 1126, EDIF300Parser.RULE_propertyInheritanceControl);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5773;
                this.match(EDIF300Parser.T__445);
                this.state = 5776;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__165:
                        {
                            this.state = 5774;
                            this.fixed();
                        }
                        break;
                    case EDIF300Parser.T__355:
                        {
                            this.state = 5775;
                            this.notInherited();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5778;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.propertyNameCaseSensitive = function () {
        var _localctx = new PropertyNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 1128, EDIF300Parser.RULE_propertyNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5780;
                this.match(EDIF300Parser.T__446);
                this.state = 5781;
                this.booleanToken();
                this.state = 5782;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.propertyNameDef = function () {
        var _localctx = new PropertyNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1130, EDIF300Parser.RULE_propertyNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5784;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.propertyNameDisplay = function () {
        var _localctx = new PropertyNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1132, EDIF300Parser.RULE_propertyNameDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5786;
                this.match(EDIF300Parser.T__447);
                this.state = 5791;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
                    {
                        this.state = 5789;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 5787;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__131:
                                {
                                    this.state = 5788;
                                    this.displayNameOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5793;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5794;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.propertyNameRef = function () {
        var _localctx = new PropertyNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1134, EDIF300Parser.RULE_propertyNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5796;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.propertyOverride = function () {
        var _localctx = new PropertyOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 1136, EDIF300Parser.RULE_propertyOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5798;
                this.match(EDIF300Parser.T__448);
                this.state = 5799;
                this.propertyNameRef();
                this.state = 5802;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__23:
                    case EDIF300Parser.T__247:
                    case EDIF300Parser.T__336:
                    case EDIF300Parser.T__356:
                    case EDIF300Parser.T__411:
                    case EDIF300Parser.T__599:
                        {
                            this.state = 5800;
                            this.typedValue();
                        }
                        break;
                    case EDIF300Parser.T__639:
                        {
                            this.state = 5801;
                            this.untyped();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5809;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 5807;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5804;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__165:
                                {
                                    this.state = 5805;
                                    this.fixed();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 5806;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5811;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5812;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.proportionalFont = function () {
        var _localctx = new ProportionalFontContext(this._ctx, this.state);
        this.enterRule(_localctx, 1138, EDIF300Parser.RULE_proportionalFont);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5814;
                this.match(EDIF300Parser.T__449);
                this.state = 5815;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pt = function () {
        var _localctx = new PtContext(this._ctx, this.state);
        this.enterRule(_localctx, 1140, EDIF300Parser.RULE_pt);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5817;
                this.match(EDIF300Parser.T__450);
                this.state = 5818;
                this.xCoordinate();
                this.state = 5819;
                this.yCoordinate();
                this.state = 5820;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pt1 = function () {
        var _localctx = new Pt1Context(this._ctx, this.state);
        this.enterRule(_localctx, 1142, EDIF300Parser.RULE_pt1);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5822;
                this.pointValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.pt2 = function () {
        var _localctx = new Pt2Context(this._ctx, this.state);
        this.enterRule(_localctx, 1144, EDIF300Parser.RULE_pt2);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5824;
                this.pointValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.radian = function () {
        var _localctx = new RadianContext(this._ctx, this.state);
        this.enterRule(_localctx, 1146, EDIF300Parser.RULE_radian);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5826;
                this.match(EDIF300Parser.T__451);
                this.state = 5827;
                this.unitExponent();
                this.state = 5828;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.reason = function () {
        var _localctx = new ReasonContext(this._ctx, this.state);
        this.enterRule(_localctx, 1148, EDIF300Parser.RULE_reason);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5830;
                this.match(EDIF300Parser.T__452);
                this.state = 5831;
                this.stringToken();
                this.state = 5832;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.rectangle = function () {
        var _localctx = new RectangleContext(this._ctx, this.state);
        this.enterRule(_localctx, 1150, EDIF300Parser.RULE_rectangle);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5834;
                this.match(EDIF300Parser.T__453);
                this.state = 5835;
                this.pt1();
                this.state = 5836;
                this.pt2();
                this.state = 5837;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.red = function () {
        var _localctx = new RedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1152, EDIF300Parser.RULE_red);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5839;
                this.scaledInteger();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.removeDisplay = function () {
        var _localctx = new RemoveDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1154, EDIF300Parser.RULE_removeDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5841;
                this.match(EDIF300Parser.T__454);
                this.state = 5842;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.repetitionCount = function () {
        var _localctx = new RepetitionCountContext(this._ctx, this.state);
        this.enterRule(_localctx, 1156, EDIF300Parser.RULE_repetitionCount);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5844;
                this.match(EDIF300Parser.T__455);
                this.state = 5845;
                this.integerExpression();
                this.state = 5846;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.repetitionCountDisplay = function () {
        var _localctx = new RepetitionCountDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1158, EDIF300Parser.RULE_repetitionCountDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5848;
                this.match(EDIF300Parser.T__456);
                this.state = 5852;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 5849;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 5850;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 5851;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5854;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.replaceDisplay = function () {
        var _localctx = new ReplaceDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1160, EDIF300Parser.RULE_replaceDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5856;
                this.match(EDIF300Parser.T__457);
                this.state = 5860;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 5857;
                            this.display();
                        }
                    }
                    this.state = 5862;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5863;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.required = function () {
        var _localctx = new RequiredContext(this._ctx, this.state);
        this.enterRule(_localctx, 1162, EDIF300Parser.RULE_required);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5865;
                this.match(EDIF300Parser.T__458);
                this.state = 5866;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.resolves = function () {
        var _localctx = new ResolvesContext(this._ctx, this.state);
        this.enterRule(_localctx, 1164, EDIF300Parser.RULE_resolves);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5868;
                this.match(EDIF300Parser.T__459);
                this.state = 5872;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.IDENTIFIER) {
                    {
                        {
                            this.state = 5869;
                            this.logicNameRef();
                        }
                    }
                    this.state = 5874;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5875;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.revision = function () {
        var _localctx = new RevisionContext(this._ctx, this.state);
        this.enterRule(_localctx, 1166, EDIF300Parser.RULE_revision);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5877;
                this.match(EDIF300Parser.T__460);
                this.state = 5878;
                this.stringToken();
                this.state = 5879;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.revisionDisplay = function () {
        var _localctx = new RevisionDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1168, EDIF300Parser.RULE_revisionDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5881;
                this.match(EDIF300Parser.T__461);
                this.state = 5885;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 5882;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 5883;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 5884;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5887;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.rightJustify = function () {
        var _localctx = new RightJustifyContext(this._ctx, this.state);
        this.enterRule(_localctx, 1170, EDIF300Parser.RULE_rightJustify);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5889;
                this.match(EDIF300Parser.T__462);
                this.state = 5890;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ripperHotspot = function () {
        var _localctx = new RipperHotspotContext(this._ctx, this.state);
        this.enterRule(_localctx, 1172, EDIF300Parser.RULE_ripperHotspot);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5892;
                this.match(EDIF300Parser.T__463);
                this.state = 5893;
                this.hotspotNameDef();
                this.state = 5894;
                this.hotspot();
                this.state = 5895;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.ripperHotspotRef = function () {
        var _localctx = new RipperHotspotRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1174, EDIF300Parser.RULE_ripperHotspotRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5897;
                this.match(EDIF300Parser.T__464);
                this.state = 5898;
                this.hotspotNameRef();
                this.state = 5899;
                this.schematicRipperImplementationRef();
                this.state = 5900;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.rotation = function () {
        var _localctx = new RotationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1176, EDIF300Parser.RULE_rotation);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5902;
                this.match(EDIF300Parser.T__465);
                this.state = 5903;
                this.angleValue();
                this.state = 5904;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.round = function () {
        var _localctx = new RoundContext(this._ctx, this.state);
        this.enterRule(_localctx, 1178, EDIF300Parser.RULE_round);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5906;
                this.match(EDIF300Parser.T__466);
                this.state = 5907;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.rowSize = function () {
        var _localctx = new RowSizeContext(this._ctx, this.state);
        this.enterRule(_localctx, 1180, EDIF300Parser.RULE_rowSize);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5909;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.scaledInteger = function () {
        var _localctx = new ScaledIntegerContext(this._ctx, this.state);
        this.enterRule(_localctx, 1182, EDIF300Parser.RULE_scaledInteger);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5913;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.DECIMAL_LITERAL:
                        {
                            this.state = 5911;
                            this.integerToken();
                        }
                        break;
                    case EDIF300Parser.T__145:
                        {
                            this.state = 5912;
                            this.e();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.scaleX = function () {
        var _localctx = new ScaleXContext(this._ctx, this.state);
        this.enterRule(_localctx, 1184, EDIF300Parser.RULE_scaleX);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5915;
                this.match(EDIF300Parser.T__467);
                this.state = 5916;
                this.numerator();
                this.state = 5917;
                this.denominator();
                this.state = 5918;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.scaleY = function () {
        var _localctx = new ScaleYContext(this._ctx, this.state);
        this.enterRule(_localctx, 1186, EDIF300Parser.RULE_scaleY);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5920;
                this.match(EDIF300Parser.T__468);
                this.state = 5921;
                this.numerator();
                this.state = 5922;
                this.denominator();
                this.state = 5923;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicBus = function () {
        var _localctx = new SchematicBusContext(this._ctx, this.state);
        this.enterRule(_localctx, 1188, EDIF300Parser.RULE_schematicBus);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5925;
                this.match(EDIF300Parser.T__469);
                this.state = 5926;
                this.interconnectNameDef();
                this.state = 5927;
                this.signalGroupRef();
                this.state = 5928;
                this.schematicInterconnectHeader();
                this.state = 5929;
                this.schematicBusJoined();
                this.state = 5937;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || ((((_la - 471)) & ~0x1F) === 0 && ((1 << (_la - 471)) & ((1 << (EDIF300Parser.T__470 - 471)) | (1 << (EDIF300Parser.T__473 - 471)) | (1 << (EDIF300Parser.T__496 - 471)))) !== 0) || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 5935;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5930;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__470:
                                {
                                    this.state = 5931;
                                    this.schematicBusDetails();
                                }
                                break;
                            case EDIF300Parser.T__473:
                                {
                                    this.state = 5932;
                                    this.schematicBusSlice();
                                }
                                break;
                            case EDIF300Parser.T__496:
                                {
                                    this.state = 5933;
                                    this.schematicInterconnectAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 5934;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5939;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5940;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicBusDetails = function () {
        var _localctx = new SchematicBusDetailsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1190, EDIF300Parser.RULE_schematicBusDetails);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5942;
                this.match(EDIF300Parser.T__470);
                this.state = 5945;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__471:
                        {
                            this.state = 5943;
                            this.schematicBusGraphics();
                        }
                        break;
                    case EDIF300Parser.T__551:
                        {
                            this.state = 5944;
                            this.schematicSubBusSet();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 5947;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicBusGraphics = function () {
        var _localctx = new SchematicBusGraphicsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1192, EDIF300Parser.RULE_schematicBusGraphics);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5949;
                this.match(EDIF300Parser.T__471);
                this.state = 5956;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 5954;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5950;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 5951;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 5952;
                                    this.schematicComplexFigure();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 5953;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5958;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5959;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicBusJoined = function () {
        var _localctx = new SchematicBusJoinedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1194, EDIF300Parser.RULE_schematicBusJoined);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5961;
                this.match(EDIF300Parser.T__472);
                this.state = 5973;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__423 || _la === EDIF300Parser.T__464 || _la === EDIF300Parser.T__485 || ((((_la - 500)) & ~0x1F) === 0 && ((1 << (_la - 500)) & ((1 << (EDIF300Parser.T__499 - 500)) | (1 << (EDIF300Parser.T__503 - 500)) | (1 << (EDIF300Parser.T__507 - 500)) | (1 << (EDIF300Parser.T__516 - 500)) | (1 << (EDIF300Parser.T__520 - 500)))) !== 0) || _la === EDIF300Parser.T__561) {
                    {
                        this.state = 5971;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__423:
                                {
                                    this.state = 5962;
                                    this.portJoined();
                                }
                                break;
                            case EDIF300Parser.T__464:
                                {
                                    this.state = 5963;
                                    this.ripperHotspotRef();
                                }
                                break;
                            case EDIF300Parser.T__485:
                                {
                                    this.state = 5964;
                                    this.schematicGlobalPortImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__499:
                                {
                                    this.state = 5965;
                                    this.schematicInterconnectTerminatorImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__503:
                                {
                                    this.state = 5966;
                                    this.schematicJunctionImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__507:
                                {
                                    this.state = 5967;
                                    this.schematicMasterPortImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__516:
                                {
                                    this.state = 5968;
                                    this.schematicOffPageConnectorImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__520:
                                {
                                    this.state = 5969;
                                    this.schematicOnPageConnectorImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__561:
                                {
                                    this.state = 5970;
                                    this.schematicSymbolPortImplementationRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5975;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5976;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicBusSlice = function () {
        var _localctx = new SchematicBusSliceContext(this._ctx, this.state);
        this.enterRule(_localctx, 1196, EDIF300Parser.RULE_schematicBusSlice);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5978;
                this.match(EDIF300Parser.T__473);
                this.state = 5979;
                this.interconnectNameDef();
                this.state = 5980;
                this.signalGroupRef();
                this.state = 5981;
                this.schematicInterconnectHeader();
                this.state = 5982;
                this.schematicBusJoined();
                this.state = 5990;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || ((((_la - 471)) & ~0x1F) === 0 && ((1 << (_la - 471)) & ((1 << (EDIF300Parser.T__470 - 471)) | (1 << (EDIF300Parser.T__473 - 471)) | (1 << (EDIF300Parser.T__496 - 471)))) !== 0) || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 5988;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 5983;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__470:
                                {
                                    this.state = 5984;
                                    this.schematicBusDetails();
                                }
                                break;
                            case EDIF300Parser.T__473:
                                {
                                    this.state = 5985;
                                    this.schematicBusSlice();
                                }
                                break;
                            case EDIF300Parser.T__496:
                                {
                                    this.state = 5986;
                                    this.schematicInterconnectAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 5987;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 5992;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 5993;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicComplexFigure = function () {
        var _localctx = new SchematicComplexFigureContext(this._ctx, this.state);
        this.enterRule(_localctx, 1198, EDIF300Parser.RULE_schematicComplexFigure);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 5995;
                this.match(EDIF300Parser.T__474);
                this.state = 5996;
                this.schematicFigureMacroRef();
                this.state = 5997;
                this.transform();
                this.state = 6002;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 6000;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 5998;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 5999;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6004;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6005;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicFigureMacro = function () {
        var _localctx = new SchematicFigureMacroContext(this._ctx, this.state);
        this.enterRule(_localctx, 1200, EDIF300Parser.RULE_schematicFigureMacro);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6007;
                this.match(EDIF300Parser.T__475);
                this.state = 6008;
                this.libraryObjectNameDef();
                this.state = 6009;
                this.schematicTemplateHeader();
                this.state = 6019;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 6017;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6010;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 6011;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6012;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6013;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6014;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6015;
                                    this.schematicComplexFigure();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 6016;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6021;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6022;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicFigureMacroRef = function () {
        var _localctx = new SchematicFigureMacroRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1202, EDIF300Parser.RULE_schematicFigureMacroRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6024;
                this.match(EDIF300Parser.T__476);
                this.state = 6025;
                this.libraryObjectNameRef();
                this.state = 6027;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6026;
                        this.libraryRef();
                    }
                }
                this.state = 6029;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicForFrameBorder = function () {
        var _localctx = new SchematicForFrameBorderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1204, EDIF300Parser.RULE_schematicForFrameBorder);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6031;
                this.match(EDIF300Parser.T__477);
                this.state = 6032;
                this.schematicForFrameBorderTemplateRef();
                this.state = 6033;
                this.transform();
                this.state = 6040;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__179 || ((((_la - 445)) & ~0x1F) === 0 && ((1 << (_la - 445)) & ((1 << (EDIF300Parser.T__444 - 445)) | (1 << (EDIF300Parser.T__448 - 445)) | (1 << (EDIF300Parser.T__456 - 445)))) !== 0)) {
                    {
                        this.state = 6038;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__179:
                                {
                                    this.state = 6034;
                                    this.forFrameIndexDisplay();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6035;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6036;
                                    this.propertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__456:
                                {
                                    this.state = 6037;
                                    this.repetitionCountDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6042;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6043;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicForFrameBorderTemplate = function () {
        var _localctx = new SchematicForFrameBorderTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1206, EDIF300Parser.RULE_schematicForFrameBorderTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6045;
                this.match(EDIF300Parser.T__478);
                this.state = 6046;
                this.libraryObjectNameDef();
                this.state = 6047;
                this.schematicTemplateHeader();
                this.state = 6048;
                this.usableArea();
                this.state = 6058;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__179 || ((((_la - 444)) & ~0x1F) === 0 && ((1 << (_la - 444)) & ((1 << (EDIF300Parser.T__443 - 444)) | (1 << (EDIF300Parser.T__456 - 444)) | (1 << (EDIF300Parser.T__474 - 444)))) !== 0)) {
                    {
                        this.state = 6056;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6049;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6050;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6051;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__179:
                                {
                                    this.state = 6052;
                                    this.forFrameIndexDisplay();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6053;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__456:
                                {
                                    this.state = 6054;
                                    this.repetitionCountDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6055;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6060;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6061;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicForFrameBorderTemplateRef = function () {
        var _localctx = new SchematicForFrameBorderTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1208, EDIF300Parser.RULE_schematicForFrameBorderTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6063;
                this.match(EDIF300Parser.T__479);
                this.state = 6064;
                this.libraryObjectNameRef();
                this.state = 6066;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6065;
                        this.libraryRef();
                    }
                }
                this.state = 6068;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicForFrameImplementation = function () {
        var _localctx = new SchematicForFrameImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1210, EDIF300Parser.RULE_schematicForFrameImplementation);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6070;
                this.match(EDIF300Parser.T__480);
                this.state = 6071;
                this.implementationNameDef();
                this.state = 6072;
                this.forFrameRef();
                this.state = 6073;
                this.schematicForFrameImplementationHeader();
                this.state = 6074;
                this.schematicFrameImplementationDetails();
                this.state = 6075;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicForFrameImplementationHeader = function () {
        var _localctx = new SchematicForFrameImplementationHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1212, EDIF300Parser.RULE_schematicForFrameImplementationHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6077;
                this.match(EDIF300Parser.T__481);
                this.state = 6079;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__477) {
                    {
                        this.state = 6078;
                        this.schematicForFrameBorder();
                    }
                }
                this.state = 6081;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicFrameImplementationDetails = function () {
        var _localctx = new SchematicFrameImplementationDetailsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1214, EDIF300Parser.RULE_schematicFrameImplementationDetails);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6083;
                this.match(EDIF300Parser.T__482);
                this.state = 6104;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 41)) & ~0x1F) === 0 && ((1 << (_la - 41)) & ((1 << (EDIF300Parser.T__40 - 41)) | (1 << (EDIF300Parser.T__56 - 41)) | (1 << (EDIF300Parser.T__61 - 41)) | (1 << (EDIF300Parser.T__62 - 41)))) !== 0) || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__469 || ((((_la - 481)) & ~0x1F) === 0 && ((1 << (_la - 481)) & ((1 << (EDIF300Parser.T__480 - 481)) | (1 << (EDIF300Parser.T__484 - 481)) | (1 << (EDIF300Parser.T__491 - 481)) | (1 << (EDIF300Parser.T__494 - 481)) | (1 << (EDIF300Parser.T__506 - 481)) | (1 << (EDIF300Parser.T__511 - 481)))) !== 0) || ((((_la - 516)) & ~0x1F) === 0 && ((1 << (_la - 516)) & ((1 << (EDIF300Parser.T__515 - 516)) | (1 << (EDIF300Parser.T__519 - 516)) | (1 << (EDIF300Parser.T__526 - 516)) | (1 << (EDIF300Parser.T__546 - 516)))) !== 0) || _la === EDIF300Parser.T__642 || _la === EDIF300Parser.T__651) {
                    {
                        this.state = 6102;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__40:
                                {
                                    this.state = 6084;
                                    this.cellPropertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__56:
                                {
                                    this.state = 6085;
                                    this.clusterPropertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 6086;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6087;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6088;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__469:
                                {
                                    this.state = 6089;
                                    this.schematicBus();
                                }
                                break;
                            case EDIF300Parser.T__480:
                                {
                                    this.state = 6090;
                                    this.schematicForFrameImplementation();
                                }
                                break;
                            case EDIF300Parser.T__484:
                                {
                                    this.state = 6091;
                                    this.schematicGlobalPortImplementation();
                                }
                                break;
                            case EDIF300Parser.T__491:
                                {
                                    this.state = 6092;
                                    this.schematicIfFrameImplementation();
                                }
                                break;
                            case EDIF300Parser.T__494:
                                {
                                    this.state = 6093;
                                    this.schematicInstanceImplementation();
                                }
                                break;
                            case EDIF300Parser.T__506:
                                {
                                    this.state = 6094;
                                    this.schematicMasterPortImplementation();
                                }
                                break;
                            case EDIF300Parser.T__511:
                                {
                                    this.state = 6095;
                                    this.schematicNet();
                                }
                                break;
                            case EDIF300Parser.T__515:
                                {
                                    this.state = 6096;
                                    this.schematicOffPageConnectorImplementation();
                                }
                                break;
                            case EDIF300Parser.T__519:
                                {
                                    this.state = 6097;
                                    this.schematicOnPageConnectorImplementation();
                                }
                                break;
                            case EDIF300Parser.T__526:
                                {
                                    this.state = 6098;
                                    this.schematicOtherwiseFrameImplementation();
                                }
                                break;
                            case EDIF300Parser.T__546:
                                {
                                    this.state = 6099;
                                    this.schematicRipperImplementation();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 6100;
                                    this.userData();
                                }
                                break;
                            case EDIF300Parser.T__651:
                                {
                                    this.state = 6101;
                                    this.viewPropertyDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6106;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6107;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicGlobalPortAttributes = function () {
        var _localctx = new SchematicGlobalPortAttributesContext(this._ctx, this.state);
        this.enterRule(_localctx, 1216, EDIF300Parser.RULE_schematicGlobalPortAttributes);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6109;
                this.match(EDIF300Parser.T__483);
                this.state = 6125;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__214 || ((((_la - 529)) & ~0x1F) === 0 && ((1 << (_la - 529)) & ((1 << (EDIF300Parser.T__528 - 529)) | (1 << (EDIF300Parser.T__531 - 529)) | (1 << (EDIF300Parser.T__533 - 529)) | (1 << (EDIF300Parser.T__534 - 529)) | (1 << (EDIF300Parser.T__535 - 529)) | (1 << (EDIF300Parser.T__537 - 529)) | (1 << (EDIF300Parser.T__538 - 529)) | (1 << (EDIF300Parser.T__539 - 529)) | (1 << (EDIF300Parser.T__540 - 529)) | (1 << (EDIF300Parser.T__541 - 529)) | (1 << (EDIF300Parser.T__542 - 529)) | (1 << (EDIF300Parser.T__544 - 529)))) !== 0)) {
                    {
                        this.state = 6123;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__214:
                                {
                                    this.state = 6110;
                                    this.ieeeStandard();
                                }
                                break;
                            case EDIF300Parser.T__528:
                                {
                                    this.state = 6111;
                                    this.schematicPortAcPower();
                                }
                                break;
                            case EDIF300Parser.T__531:
                                {
                                    this.state = 6112;
                                    this.schematicPortAnalog();
                                }
                                break;
                            case EDIF300Parser.T__533:
                                {
                                    this.state = 6113;
                                    this.schematicPortChassisGround();
                                }
                                break;
                            case EDIF300Parser.T__534:
                                {
                                    this.state = 6114;
                                    this.schematicPortClock();
                                }
                                break;
                            case EDIF300Parser.T__535:
                                {
                                    this.state = 6115;
                                    this.schematicPortDcPower();
                                }
                                break;
                            case EDIF300Parser.T__537:
                                {
                                    this.state = 6116;
                                    this.schematicPortEarthGround();
                                }
                                break;
                            case EDIF300Parser.T__538:
                                {
                                    this.state = 6117;
                                    this.schematicPortGround();
                                }
                                break;
                            case EDIF300Parser.T__539:
                                {
                                    this.state = 6118;
                                    this.schematicPortNonLogical();
                                }
                                break;
                            case EDIF300Parser.T__540:
                                {
                                    this.state = 6119;
                                    this.schematicPortOpenCollector();
                                }
                                break;
                            case EDIF300Parser.T__541:
                                {
                                    this.state = 6120;
                                    this.schematicPortOpenEmitter();
                                }
                                break;
                            case EDIF300Parser.T__542:
                                {
                                    this.state = 6121;
                                    this.schematicPortPower();
                                }
                                break;
                            case EDIF300Parser.T__544:
                                {
                                    this.state = 6122;
                                    this.schematicPortThreeState();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6127;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6128;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicGlobalPortImplementation = function () {
        var _localctx = new SchematicGlobalPortImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1218, EDIF300Parser.RULE_schematicGlobalPortImplementation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6130;
                this.match(EDIF300Parser.T__484);
                this.state = 6131;
                this.implementationNameDef();
                this.state = 6132;
                this.schematicGlobalPortTemplateRef();
                this.state = 6133;
                this.globalPortRef();
                this.state = 6134;
                this.transform();
                this.state = 6143;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 202)) & ~0x1F) === 0 && ((1 << (_la - 202)) & ((1 << (EDIF300Parser.T__201 - 202)) | (1 << (EDIF300Parser.T__202 - 202)) | (1 << (EDIF300Parser.T__221 - 202)))) !== 0) || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 6141;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__201:
                                {
                                    this.state = 6135;
                                    this.globalPortNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__202:
                                {
                                    this.state = 6136;
                                    this.globalPortPropertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6137;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6138;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6139;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6140;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6145;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6146;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicGlobalPortImplementationRef = function () {
        var _localctx = new SchematicGlobalPortImplementationRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1220, EDIF300Parser.RULE_schematicGlobalPortImplementationRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6148;
                this.match(EDIF300Parser.T__485);
                this.state = 6149;
                this.implementationNameRef();
                this.state = 6150;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicGlobalPortTemplate = function () {
        var _localctx = new SchematicGlobalPortTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1222, EDIF300Parser.RULE_schematicGlobalPortTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6152;
                this.match(EDIF300Parser.T__486);
                this.state = 6153;
                this.libraryObjectNameDef();
                this.state = 6154;
                this.schematicTemplateHeader();
                this.state = 6156;
                this._errHandler.sync(this);
                switch (this.interpreter.adaptivePredict(this._input, 468, this._ctx)) {
                    case 1:
                        {
                            this.state = 6155;
                            this.hotspot();
                        }
                        break;
                }
                this.state = 6168;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__201 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__483) {
                    {
                        this.state = 6166;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6158;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6159;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6160;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__201:
                                {
                                    this.state = 6161;
                                    this.globalPortNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6162;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6163;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6164;
                                    this.schematicComplexFigure();
                                }
                                break;
                            case EDIF300Parser.T__483:
                                {
                                    this.state = 6165;
                                    this.schematicGlobalPortAttributes();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6170;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6172;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__208) {
                    {
                        this.state = 6171;
                        this.hotspot();
                    }
                }
                this.state = 6174;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicGlobalPortTemplateRef = function () {
        var _localctx = new SchematicGlobalPortTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1224, EDIF300Parser.RULE_schematicGlobalPortTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6176;
                this.match(EDIF300Parser.T__487);
                this.state = 6177;
                this.libraryObjectNameRef();
                this.state = 6179;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6178;
                        this.libraryRef();
                    }
                }
                this.state = 6181;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicIfFrameBorder = function () {
        var _localctx = new SchematicIfFrameBorderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1226, EDIF300Parser.RULE_schematicIfFrameBorder);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6183;
                this.match(EDIF300Parser.T__488);
                this.state = 6184;
                this.schematicIfFrameBorderTemplateRef();
                this.state = 6185;
                this.transform();
                this.state = 6191;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__71 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 6189;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__71:
                                {
                                    this.state = 6186;
                                    this.conditionDisplay();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6187;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6188;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6193;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6194;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicIfFrameBorderTemplate = function () {
        var _localctx = new SchematicIfFrameBorderTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1228, EDIF300Parser.RULE_schematicIfFrameBorderTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6196;
                this.match(EDIF300Parser.T__489);
                this.state = 6197;
                this.libraryObjectNameDef();
                this.state = 6198;
                this.schematicTemplateHeader();
                this.state = 6199;
                this.usableArea();
                this.state = 6208;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__71 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
                    {
                        this.state = 6206;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6200;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6201;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__71:
                                {
                                    this.state = 6202;
                                    this.conditionDisplay();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6203;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6204;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6205;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6210;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6211;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicIfFrameBorderTemplateRef = function () {
        var _localctx = new SchematicIfFrameBorderTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1230, EDIF300Parser.RULE_schematicIfFrameBorderTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6213;
                this.match(EDIF300Parser.T__490);
                this.state = 6214;
                this.libraryObjectNameRef();
                this.state = 6216;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6215;
                        this.libraryRef();
                    }
                }
                this.state = 6218;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicIfFrameImplementation = function () {
        var _localctx = new SchematicIfFrameImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1232, EDIF300Parser.RULE_schematicIfFrameImplementation);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6220;
                this.match(EDIF300Parser.T__491);
                this.state = 6221;
                this.implementationNameDef();
                this.state = 6222;
                this.ifFrameRef();
                this.state = 6223;
                this.schematicIfFrameImplementationHeader();
                this.state = 6224;
                this.schematicFrameImplementationDetails();
                this.state = 6225;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicIfFrameImplementationHeader = function () {
        var _localctx = new SchematicIfFrameImplementationHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1234, EDIF300Parser.RULE_schematicIfFrameImplementationHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6227;
                this.match(EDIF300Parser.T__492);
                this.state = 6229;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__488) {
                    {
                        this.state = 6228;
                        this.schematicIfFrameBorder();
                    }
                }
                this.state = 6231;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicImplementation = function () {
        var _localctx = new SchematicImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1236, EDIF300Parser.RULE_schematicImplementation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6233;
                this.match(EDIF300Parser.T__493);
                this.state = 6238;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__378 || _la === EDIF300Parser.T__622) {
                    {
                        this.state = 6236;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__378:
                                {
                                    this.state = 6234;
                                    this.page();
                                }
                                break;
                            case EDIF300Parser.T__622:
                                {
                                    this.state = 6235;
                                    this.totalPages();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6240;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6241;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicInstanceImplementation = function () {
        var _localctx = new SchematicInstanceImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1238, EDIF300Parser.RULE_schematicInstanceImplementation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6243;
                this.match(EDIF300Parser.T__494);
                this.state = 6244;
                this.implementationNameDef();
                this.state = 6245;
                this.instanceRef();
                this.state = 6246;
                this.schematicSymbolRef();
                this.state = 6247;
                this.transform();
                this.state = 6267;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 40)) & ~0x1F) === 0 && ((1 << (_la - 40)) & ((1 << (EDIF300Parser.T__39 - 40)) | (1 << (EDIF300Parser.T__41 - 40)) | (1 << (EDIF300Parser.T__57 - 40)))) !== 0) || _la === EDIF300Parser.T__119 || ((((_la - 222)) & ~0x1F) === 0 && ((1 << (_la - 222)) & ((1 << (EDIF300Parser.T__221 - 222)) | (1 << (EDIF300Parser.T__237 - 222)) | (1 << (EDIF300Parser.T__239 - 222)) | (1 << (EDIF300Parser.T__240 - 222)) | (1 << (EDIF300Parser.T__242 - 222)) | (1 << (EDIF300Parser.T__246 - 222)))) !== 0) || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__383 || _la === EDIF300Parser.T__398 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448 || _la === EDIF300Parser.T__620 || _la === EDIF300Parser.T__650) {
                    {
                        this.state = 6265;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__39:
                                {
                                    this.state = 6248;
                                    this.cellNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__41:
                                {
                                    this.state = 6249;
                                    this.cellPropertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__57:
                                {
                                    this.state = 6250;
                                    this.clusterPropertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__119:
                                {
                                    this.state = 6251;
                                    this.designatorDisplay();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6252;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__237:
                                {
                                    this.state = 6253;
                                    this.instanceNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__239:
                                {
                                    this.state = 6254;
                                    this.instanceNameGeneratorDisplay();
                                }
                                break;
                            case EDIF300Parser.T__240:
                                {
                                    this.state = 6255;
                                    this.instancePortAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__242:
                                {
                                    this.state = 6256;
                                    this.instancePropertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__246:
                                {
                                    this.state = 6257;
                                    this.instanceWidthDisplay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6258;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__383:
                                {
                                    this.state = 6259;
                                    this.pageCommentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__398:
                                {
                                    this.state = 6260;
                                    this.parameterDisplay();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6261;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6262;
                                    this.propertyOverride();
                                }
                                break;
                            case EDIF300Parser.T__620:
                                {
                                    this.state = 6263;
                                    this.timingDisplay();
                                }
                                break;
                            case EDIF300Parser.T__650:
                                {
                                    this.state = 6264;
                                    this.viewNameDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6269;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6270;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicInstanceImplementationRef = function () {
        var _localctx = new SchematicInstanceImplementationRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1240, EDIF300Parser.RULE_schematicInstanceImplementationRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6272;
                this.match(EDIF300Parser.T__495);
                this.state = 6273;
                this.implementationNameRef();
                this.state = 6274;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicInterconnectAttributeDisplay = function () {
        var _localctx = new SchematicInterconnectAttributeDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1242, EDIF300Parser.RULE_schematicInterconnectAttributeDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6276;
                this.match(EDIF300Parser.T__496);
                this.state = 6285;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__86 || _la === EDIF300Parser.T__98 || ((((_la - 261)) & ~0x1F) === 0 && ((1 << (_la - 261)) & ((1 << (EDIF300Parser.T__260 - 261)) | (1 << (EDIF300Parser.T__262 - 261)) | (1 << (EDIF300Parser.T__265 - 261)) | (1 << (EDIF300Parser.T__266 - 261)))) !== 0)) {
                    {
                        this.state = 6283;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__86:
                                {
                                    this.state = 6277;
                                    this.connectivityTagGeneratorDisplay();
                                }
                                break;
                            case EDIF300Parser.T__98:
                                {
                                    this.state = 6278;
                                    this.criticalityDisplay();
                                }
                                break;
                            case EDIF300Parser.T__260:
                                {
                                    this.state = 6279;
                                    this.interconnectAttachedText();
                                }
                                break;
                            case EDIF300Parser.T__262:
                                {
                                    this.state = 6280;
                                    this.interconnectDelayDisplay();
                                }
                                break;
                            case EDIF300Parser.T__265:
                                {
                                    this.state = 6281;
                                    this.interconnectNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__266:
                                {
                                    this.state = 6282;
                                    this.interconnectPropertyDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6287;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6288;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicInterconnectHeader = function () {
        var _localctx = new SchematicInterconnectHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1244, EDIF300Parser.RULE_schematicInterconnectHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6290;
                this.match(EDIF300Parser.T__497);
                this.state = 6301;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__97 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__261 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__498 || _la === EDIF300Parser.T__502 || _la === EDIF300Parser.T__570) {
                    {
                        this.state = 6299;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__97:
                                {
                                    this.state = 6291;
                                    this.criticality();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 6292;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__261:
                                {
                                    this.state = 6293;
                                    this.interconnectDelay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6294;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 6295;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__498:
                                {
                                    this.state = 6296;
                                    this.schematicInterconnectTerminatorImplementation();
                                }
                                break;
                            case EDIF300Parser.T__502:
                                {
                                    this.state = 6297;
                                    this.schematicJunctionImplementation();
                                }
                                break;
                            case EDIF300Parser.T__570:
                                {
                                    this.state = 6298;
                                    this.schematicWireStyle();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6303;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6304;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicInterconnectTerminatorImplementation = function () {
        var _localctx = new SchematicInterconnectTerminatorImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1246, EDIF300Parser.RULE_schematicInterconnectTerminatorImplementation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6306;
                this.match(EDIF300Parser.T__498);
                this.state = 6307;
                this.implementationNameDef();
                this.state = 6308;
                this.schematicInterconnectTerminatorTemplateRef();
                this.state = 6309;
                this.transform();
                this.state = 6316;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 6314;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6310;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6311;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6312;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6313;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6318;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6319;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicInterconnectTerminatorImplementationRef = function () {
        var _localctx = new SchematicInterconnectTerminatorImplementationRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1248, EDIF300Parser.RULE_schematicInterconnectTerminatorImplementationRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6321;
                this.match(EDIF300Parser.T__499);
                this.state = 6322;
                this.implementationNameRef();
                this.state = 6323;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicInterconnectTerminatorTemplate = function () {
        var _localctx = new SchematicInterconnectTerminatorTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1250, EDIF300Parser.RULE_schematicInterconnectTerminatorTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6325;
                this.match(EDIF300Parser.T__500);
                this.state = 6326;
                this.libraryObjectNameDef();
                this.state = 6327;
                this.schematicTemplateHeader();
                this.state = 6328;
                this.hotspot();
                this.state = 6336;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
                    {
                        this.state = 6334;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6329;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6330;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6331;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6332;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6333;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6338;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6339;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicInterconnectTerminatorTemplateRef = function () {
        var _localctx = new SchematicInterconnectTerminatorTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1252, EDIF300Parser.RULE_schematicInterconnectTerminatorTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6341;
                this.match(EDIF300Parser.T__501);
                this.state = 6342;
                this.libraryObjectNameRef();
                this.state = 6344;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6343;
                        this.libraryRef();
                    }
                }
                this.state = 6346;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicJunctionImplementation = function () {
        var _localctx = new SchematicJunctionImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1254, EDIF300Parser.RULE_schematicJunctionImplementation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6348;
                this.match(EDIF300Parser.T__502);
                this.state = 6349;
                this.implementationNameDef();
                this.state = 6350;
                this.schematicJunctionTemplateRef();
                this.state = 6351;
                this.transform();
                this.state = 6358;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 6356;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6352;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6353;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6354;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6355;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6360;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6361;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicJunctionImplementationRef = function () {
        var _localctx = new SchematicJunctionImplementationRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1256, EDIF300Parser.RULE_schematicJunctionImplementationRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6363;
                this.match(EDIF300Parser.T__503);
                this.state = 6364;
                this.implementationNameRef();
                this.state = 6365;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicJunctionTemplate = function () {
        var _localctx = new SchematicJunctionTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1258, EDIF300Parser.RULE_schematicJunctionTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6367;
                this.match(EDIF300Parser.T__504);
                this.state = 6368;
                this.libraryObjectNameDef();
                this.state = 6369;
                this.schematicTemplateHeader();
                this.state = 6370;
                this.hotspot();
                this.state = 6378;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
                    {
                        this.state = 6376;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6371;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6372;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6373;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6374;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6375;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6380;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6381;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicJunctionTemplateRef = function () {
        var _localctx = new SchematicJunctionTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1260, EDIF300Parser.RULE_schematicJunctionTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6383;
                this.match(EDIF300Parser.T__505);
                this.state = 6384;
                this.libraryObjectNameRef();
                this.state = 6386;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6385;
                        this.libraryRef();
                    }
                }
                this.state = 6388;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicMasterPortImplementation = function () {
        var _localctx = new SchematicMasterPortImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1262, EDIF300Parser.RULE_schematicMasterPortImplementation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6390;
                this.match(EDIF300Parser.T__506);
                this.state = 6391;
                this.implementationNameDef();
                this.state = 6392;
                this.schematicMasterPortTemplateRef();
                this.state = 6395;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__436:
                        {
                            this.state = 6393;
                            this.portRef();
                        }
                        break;
                    case EDIF300Parser.T__317:
                        {
                            this.state = 6394;
                            this.localPortGroupRef();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 6397;
                this.transform();
                this.state = 6405;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__416 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 6403;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6398;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6399;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__416:
                                {
                                    this.state = 6400;
                                    this.portAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6401;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6402;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6407;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6408;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicMasterPortImplementationRef = function () {
        var _localctx = new SchematicMasterPortImplementationRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1264, EDIF300Parser.RULE_schematicMasterPortImplementationRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6410;
                this.match(EDIF300Parser.T__507);
                this.state = 6411;
                this.implementationNameRef();
                this.state = 6412;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicMasterPortTemplate = function () {
        var _localctx = new SchematicMasterPortTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1266, EDIF300Parser.RULE_schematicMasterPortTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6414;
                this.match(EDIF300Parser.T__508);
                this.state = 6415;
                this.libraryObjectNameDef();
                this.state = 6416;
                this.schematicTemplateHeader();
                this.state = 6417;
                this.hotspot();
                this.state = 6418;
                this.portDirectionIndicator();
                this.state = 6429;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__416 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__543) {
                    {
                        this.state = 6427;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6419;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6420;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6421;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6422;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__416:
                                {
                                    this.state = 6423;
                                    this.portAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6424;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6425;
                                    this.schematicComplexFigure();
                                }
                                break;
                            case EDIF300Parser.T__543:
                                {
                                    this.state = 6426;
                                    this.schematicPortStyle();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6431;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6432;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicMasterPortTemplateRef = function () {
        var _localctx = new SchematicMasterPortTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1268, EDIF300Parser.RULE_schematicMasterPortTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6434;
                this.match(EDIF300Parser.T__509);
                this.state = 6435;
                this.libraryObjectNameRef();
                this.state = 6437;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6436;
                        this.libraryRef();
                    }
                }
                this.state = 6439;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicMetric = function () {
        var _localctx = new SchematicMetricContext(this._ctx, this.state);
        this.enterRule(_localctx, 1270, EDIF300Parser.RULE_schematicMetric);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6441;
                this.match(EDIF300Parser.T__510);
                this.state = 6442;
                this.setDistance();
                this.state = 6445;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__210:
                        {
                            this.state = 6443;
                            this.hotspotGrid();
                        }
                        break;
                    case EDIF300Parser.T__351:
                        {
                            this.state = 6444;
                            this.noHotspotGrid();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 6448;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__352) {
                    {
                        this.state = 6447;
                        this.nominalHotspotGrid();
                    }
                }
                this.state = 6450;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicNet = function () {
        var _localctx = new SchematicNetContext(this._ctx, this.state);
        this.enterRule(_localctx, 1272, EDIF300Parser.RULE_schematicNet);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6452;
                this.match(EDIF300Parser.T__511);
                this.state = 6453;
                this.interconnectNameDef();
                this.state = 6454;
                this.signalRef();
                this.state = 6455;
                this.schematicInterconnectHeader();
                this.state = 6456;
                this.schematicNetJoined();
                this.state = 6463;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__496 || _la === EDIF300Parser.T__512 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 6461;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 6457;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__496:
                                {
                                    this.state = 6458;
                                    this.schematicInterconnectAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__512:
                                {
                                    this.state = 6459;
                                    this.schematicNetDetails();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 6460;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6465;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6466;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicNetDetails = function () {
        var _localctx = new SchematicNetDetailsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1274, EDIF300Parser.RULE_schematicNetDetails);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6468;
                this.match(EDIF300Parser.T__512);
                this.state = 6471;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__513:
                        {
                            this.state = 6469;
                            this.schematicNetGraphics();
                        }
                        break;
                    case EDIF300Parser.T__554:
                        {
                            this.state = 6470;
                            this.schematicSubNetSet();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 6473;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicNetGraphics = function () {
        var _localctx = new SchematicNetGraphicsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1276, EDIF300Parser.RULE_schematicNetGraphics);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6475;
                this.match(EDIF300Parser.T__513);
                this.state = 6482;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 6480;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 6476;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6477;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6478;
                                    this.schematicComplexFigure();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 6479;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6484;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6485;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicNetJoined = function () {
        var _localctx = new SchematicNetJoinedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1278, EDIF300Parser.RULE_schematicNetJoined);
        var _la;
        try {
            var _alt = void 0;
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6487;
                this.match(EDIF300Parser.T__514);
                this.state = 6490;
                this._errHandler.sync(this);
                switch (this.interpreter.adaptivePredict(this._input, 510, this._ctx)) {
                    case 1:
                        {
                            this.state = 6488;
                            this.portJoined();
                        }
                        break;
                    case 2:
                        {
                            this.state = 6489;
                            this.joinedAsSignal();
                        }
                        break;
                }
                this.state = 6502;
                this._errHandler.sync(this);
                _alt = this.interpreter.adaptivePredict(this._input, 512, this._ctx);
                while (_alt !== 2 && _alt !== ATN_1.ATN.INVALID_ALT_NUMBER) {
                    if (_alt === 1) {
                        {
                            this.state = 6500;
                            this._errHandler.sync(this);
                            switch (this._input.LA(1)) {
                                case EDIF300Parser.T__464:
                                    {
                                        this.state = 6492;
                                        this.ripperHotspotRef();
                                    }
                                    break;
                                case EDIF300Parser.T__485:
                                    {
                                        this.state = 6493;
                                        this.schematicGlobalPortImplementationRef();
                                    }
                                    break;
                                case EDIF300Parser.T__499:
                                    {
                                        this.state = 6494;
                                        this.schematicInterconnectTerminatorImplementationRef();
                                    }
                                    break;
                                case EDIF300Parser.T__503:
                                    {
                                        this.state = 6495;
                                        this.schematicJunctionImplementationRef();
                                    }
                                    break;
                                case EDIF300Parser.T__507:
                                    {
                                        this.state = 6496;
                                        this.schematicMasterPortImplementationRef();
                                    }
                                    break;
                                case EDIF300Parser.T__516:
                                    {
                                        this.state = 6497;
                                        this.schematicOffPageConnectorImplementationRef();
                                    }
                                    break;
                                case EDIF300Parser.T__520:
                                    {
                                        this.state = 6498;
                                        this.schematicOnPageConnectorImplementationRef();
                                    }
                                    break;
                                case EDIF300Parser.T__561:
                                    {
                                        this.state = 6499;
                                        this.schematicSymbolPortImplementationRef();
                                    }
                                    break;
                                default:
                                    throw new NoViableAltException_1.NoViableAltException(this);
                            }
                        }
                    }
                    this.state = 6504;
                    this._errHandler.sync(this);
                    _alt = this.interpreter.adaptivePredict(this._input, 512, this._ctx);
                }
                this.state = 6507;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__423:
                        {
                            this.state = 6505;
                            this.portJoined();
                        }
                        break;
                    case EDIF300Parser.T__277:
                        {
                            this.state = 6506;
                            this.joinedAsSignal();
                        }
                        break;
                    case EDIF300Parser.T__1:
                    case EDIF300Parser.T__464:
                    case EDIF300Parser.T__485:
                    case EDIF300Parser.T__499:
                    case EDIF300Parser.T__503:
                    case EDIF300Parser.T__507:
                    case EDIF300Parser.T__516:
                    case EDIF300Parser.T__520:
                    case EDIF300Parser.T__561:
                        break;
                    default:
                        break;
                }
                this.state = 6519;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__464 || _la === EDIF300Parser.T__485 || ((((_la - 500)) & ~0x1F) === 0 && ((1 << (_la - 500)) & ((1 << (EDIF300Parser.T__499 - 500)) | (1 << (EDIF300Parser.T__503 - 500)) | (1 << (EDIF300Parser.T__507 - 500)) | (1 << (EDIF300Parser.T__516 - 500)) | (1 << (EDIF300Parser.T__520 - 500)))) !== 0) || _la === EDIF300Parser.T__561) {
                    {
                        this.state = 6517;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__464:
                                {
                                    this.state = 6509;
                                    this.ripperHotspotRef();
                                }
                                break;
                            case EDIF300Parser.T__485:
                                {
                                    this.state = 6510;
                                    this.schematicGlobalPortImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__499:
                                {
                                    this.state = 6511;
                                    this.schematicInterconnectTerminatorImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__503:
                                {
                                    this.state = 6512;
                                    this.schematicJunctionImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__507:
                                {
                                    this.state = 6513;
                                    this.schematicMasterPortImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__516:
                                {
                                    this.state = 6514;
                                    this.schematicOffPageConnectorImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__520:
                                {
                                    this.state = 6515;
                                    this.schematicOnPageConnectorImplementationRef();
                                }
                                break;
                            case EDIF300Parser.T__561:
                                {
                                    this.state = 6516;
                                    this.schematicSymbolPortImplementationRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6521;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6522;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOffPageConnectorImplementation = function () {
        var _localctx = new SchematicOffPageConnectorImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1280, EDIF300Parser.RULE_schematicOffPageConnectorImplementation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6524;
                this.match(EDIF300Parser.T__515);
                this.state = 6525;
                this.implementationNameDef();
                this.state = 6526;
                this.schematicOffPageConnectorTemplateRef();
                this.state = 6527;
                this.transform();
                this.state = 6537;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__12 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || ((((_la - 443)) & ~0x1F) === 0 && ((1 << (_la - 443)) & ((1 << (EDIF300Parser.T__442 - 443)) | (1 << (EDIF300Parser.T__443 - 443)) | (1 << (EDIF300Parser.T__444 - 443)) | (1 << (EDIF300Parser.T__448 - 443)))) !== 0)) {
                    {
                        this.state = 6535;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__12:
                                {
                                    this.state = 6528;
                                    this.associatedInterconnectNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6529;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6530;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 6531;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6532;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6533;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6534;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6539;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6540;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOffPageConnectorImplementationRef = function () {
        var _localctx = new SchematicOffPageConnectorImplementationRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1282, EDIF300Parser.RULE_schematicOffPageConnectorImplementationRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6542;
                this.match(EDIF300Parser.T__516);
                this.state = 6543;
                this.implementationNameRef();
                this.state = 6544;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOffPageConnectorTemplate = function () {
        var _localctx = new SchematicOffPageConnectorTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1284, EDIF300Parser.RULE_schematicOffPageConnectorTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6546;
                this.match(EDIF300Parser.T__517);
                this.state = 6547;
                this.libraryObjectNameDef();
                this.state = 6548;
                this.schematicTemplateHeader();
                this.state = 6549;
                this.hotspot();
                this.state = 6559;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__12 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
                    {
                        this.state = 6557;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6550;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__12:
                                {
                                    this.state = 6551;
                                    this.associatedInterconnectNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6552;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6553;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6554;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6555;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6556;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6561;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6562;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOffPageConnectorTemplateRef = function () {
        var _localctx = new SchematicOffPageConnectorTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1286, EDIF300Parser.RULE_schematicOffPageConnectorTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6564;
                this.match(EDIF300Parser.T__518);
                this.state = 6565;
                this.libraryObjectNameRef();
                this.state = 6567;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6566;
                        this.libraryRef();
                    }
                }
                this.state = 6569;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOnPageConnectorImplementation = function () {
        var _localctx = new SchematicOnPageConnectorImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1288, EDIF300Parser.RULE_schematicOnPageConnectorImplementation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6571;
                this.match(EDIF300Parser.T__519);
                this.state = 6572;
                this.implementationNameDef();
                this.state = 6573;
                this.schematicOnPageConnectorTemplateRef();
                this.state = 6574;
                this.transform();
                this.state = 6584;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__12 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || ((((_la - 443)) & ~0x1F) === 0 && ((1 << (_la - 443)) & ((1 << (EDIF300Parser.T__442 - 443)) | (1 << (EDIF300Parser.T__443 - 443)) | (1 << (EDIF300Parser.T__444 - 443)) | (1 << (EDIF300Parser.T__448 - 443)))) !== 0)) {
                    {
                        this.state = 6582;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__12:
                                {
                                    this.state = 6575;
                                    this.associatedInterconnectNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6576;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6577;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 6578;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6579;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6580;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6581;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6586;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6587;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOnPageConnectorImplementationRef = function () {
        var _localctx = new SchematicOnPageConnectorImplementationRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1290, EDIF300Parser.RULE_schematicOnPageConnectorImplementationRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6589;
                this.match(EDIF300Parser.T__520);
                this.state = 6590;
                this.implementationNameRef();
                this.state = 6591;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOnPageConnectorTemplate = function () {
        var _localctx = new SchematicOnPageConnectorTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1292, EDIF300Parser.RULE_schematicOnPageConnectorTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6593;
                this.match(EDIF300Parser.T__521);
                this.state = 6594;
                this.libraryObjectNameDef();
                this.state = 6595;
                this.schematicTemplateHeader();
                this.state = 6596;
                this.hotspot();
                this.state = 6606;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__12 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
                    {
                        this.state = 6604;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6597;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__12:
                                {
                                    this.state = 6598;
                                    this.associatedInterconnectNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6599;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6600;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6601;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6602;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6603;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6608;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6609;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOnPageConnectorTemplateRef = function () {
        var _localctx = new SchematicOnPageConnectorTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1294, EDIF300Parser.RULE_schematicOnPageConnectorTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6611;
                this.match(EDIF300Parser.T__522);
                this.state = 6612;
                this.libraryObjectNameRef();
                this.state = 6614;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6613;
                        this.libraryRef();
                    }
                }
                this.state = 6616;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOtherwiseFrameBorder = function () {
        var _localctx = new SchematicOtherwiseFrameBorderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1296, EDIF300Parser.RULE_schematicOtherwiseFrameBorder);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6618;
                this.match(EDIF300Parser.T__523);
                this.state = 6619;
                this.schematicOtherwiseFrameBorderTemplateRef();
                this.state = 6620;
                this.transform();
                this.state = 6625;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 6623;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6621;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6622;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6627;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6628;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOtherwiseFrameBorderTemplate = function () {
        var _localctx = new SchematicOtherwiseFrameBorderTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1298, EDIF300Parser.RULE_schematicOtherwiseFrameBorderTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6630;
                this.match(EDIF300Parser.T__524);
                this.state = 6631;
                this.libraryObjectNameDef();
                this.state = 6632;
                this.schematicTemplateHeader();
                this.state = 6633;
                this.usableArea();
                this.state = 6641;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
                    {
                        this.state = 6639;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6634;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6635;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6636;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6637;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6638;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6643;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6644;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOtherwiseFrameBorderTemplateRef = function () {
        var _localctx = new SchematicOtherwiseFrameBorderTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1300, EDIF300Parser.RULE_schematicOtherwiseFrameBorderTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6646;
                this.match(EDIF300Parser.T__525);
                this.state = 6647;
                this.libraryObjectNameRef();
                this.state = 6649;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6648;
                        this.libraryRef();
                    }
                }
                this.state = 6651;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOtherwiseFrameImplementation = function () {
        var _localctx = new SchematicOtherwiseFrameImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1302, EDIF300Parser.RULE_schematicOtherwiseFrameImplementation);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6653;
                this.match(EDIF300Parser.T__526);
                this.state = 6654;
                this.implementationNameDef();
                this.state = 6655;
                this.otherwiseFrameRef();
                this.state = 6656;
                this.schematicOtherwiseFrameImplementationHeader();
                this.state = 6657;
                this.schematicFrameImplementationDetails();
                this.state = 6658;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicOtherwiseFrameImplementationHeader = function () {
        var _localctx = new SchematicOtherwiseFrameImplementationHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1304, EDIF300Parser.RULE_schematicOtherwiseFrameImplementationHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6660;
                this.match(EDIF300Parser.T__527);
                this.state = 6662;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__523) {
                    {
                        this.state = 6661;
                        this.schematicOtherwiseFrameBorder();
                    }
                }
                this.state = 6664;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortAcPower = function () {
        var _localctx = new SchematicPortAcPowerContext(this._ctx, this.state);
        this.enterRule(_localctx, 1306, EDIF300Parser.RULE_schematicPortAcPower);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6666;
                this.match(EDIF300Parser.T__528);
                this.state = 6671;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__529 || _la === EDIF300Parser.T__530) {
                    {
                        this.state = 6669;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__529:
                                {
                                    this.state = 6667;
                                    this.schematicPortAcPowerRecommendedFrequency();
                                }
                                break;
                            case EDIF300Parser.T__530:
                                {
                                    this.state = 6668;
                                    this.schematicPortAcPowerRecommendedVoltageRms();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6673;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6674;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortAcPowerRecommendedFrequency = function () {
        var _localctx = new SchematicPortAcPowerRecommendedFrequencyContext(this._ctx, this.state);
        this.enterRule(_localctx, 1308, EDIF300Parser.RULE_schematicPortAcPowerRecommendedFrequency);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6676;
                this.match(EDIF300Parser.T__529);
                this.state = 6677;
                this.frequencyValue();
                this.state = 6678;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortAcPowerRecommendedVoltageRms = function () {
        var _localctx = new SchematicPortAcPowerRecommendedVoltageRmsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1310, EDIF300Parser.RULE_schematicPortAcPowerRecommendedVoltageRms);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6680;
                this.match(EDIF300Parser.T__530);
                this.state = 6681;
                this.voltageValue();
                this.state = 6682;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortAnalog = function () {
        var _localctx = new SchematicPortAnalogContext(this._ctx, this.state);
        this.enterRule(_localctx, 1312, EDIF300Parser.RULE_schematicPortAnalog);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6684;
                this.match(EDIF300Parser.T__531);
                this.state = 6685;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortAttributes = function () {
        var _localctx = new SchematicPortAttributesContext(this._ctx, this.state);
        this.enterRule(_localctx, 1314, EDIF300Parser.RULE_schematicPortAttributes);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6687;
                this.match(EDIF300Parser.T__532);
                this.state = 6703;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__214 || ((((_la - 529)) & ~0x1F) === 0 && ((1 << (_la - 529)) & ((1 << (EDIF300Parser.T__528 - 529)) | (1 << (EDIF300Parser.T__531 - 529)) | (1 << (EDIF300Parser.T__533 - 529)) | (1 << (EDIF300Parser.T__534 - 529)) | (1 << (EDIF300Parser.T__535 - 529)) | (1 << (EDIF300Parser.T__537 - 529)) | (1 << (EDIF300Parser.T__538 - 529)) | (1 << (EDIF300Parser.T__539 - 529)) | (1 << (EDIF300Parser.T__540 - 529)) | (1 << (EDIF300Parser.T__541 - 529)) | (1 << (EDIF300Parser.T__542 - 529)) | (1 << (EDIF300Parser.T__544 - 529)))) !== 0)) {
                    {
                        this.state = 6701;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__214:
                                {
                                    this.state = 6688;
                                    this.ieeeStandard();
                                }
                                break;
                            case EDIF300Parser.T__528:
                                {
                                    this.state = 6689;
                                    this.schematicPortAcPower();
                                }
                                break;
                            case EDIF300Parser.T__531:
                                {
                                    this.state = 6690;
                                    this.schematicPortAnalog();
                                }
                                break;
                            case EDIF300Parser.T__533:
                                {
                                    this.state = 6691;
                                    this.schematicPortChassisGround();
                                }
                                break;
                            case EDIF300Parser.T__534:
                                {
                                    this.state = 6692;
                                    this.schematicPortClock();
                                }
                                break;
                            case EDIF300Parser.T__535:
                                {
                                    this.state = 6693;
                                    this.schematicPortDcPower();
                                }
                                break;
                            case EDIF300Parser.T__537:
                                {
                                    this.state = 6694;
                                    this.schematicPortEarthGround();
                                }
                                break;
                            case EDIF300Parser.T__538:
                                {
                                    this.state = 6695;
                                    this.schematicPortGround();
                                }
                                break;
                            case EDIF300Parser.T__539:
                                {
                                    this.state = 6696;
                                    this.schematicPortNonLogical();
                                }
                                break;
                            case EDIF300Parser.T__540:
                                {
                                    this.state = 6697;
                                    this.schematicPortOpenCollector();
                                }
                                break;
                            case EDIF300Parser.T__541:
                                {
                                    this.state = 6698;
                                    this.schematicPortOpenEmitter();
                                }
                                break;
                            case EDIF300Parser.T__542:
                                {
                                    this.state = 6699;
                                    this.schematicPortPower();
                                }
                                break;
                            case EDIF300Parser.T__544:
                                {
                                    this.state = 6700;
                                    this.schematicPortThreeState();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6705;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6706;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortChassisGround = function () {
        var _localctx = new SchematicPortChassisGroundContext(this._ctx, this.state);
        this.enterRule(_localctx, 1316, EDIF300Parser.RULE_schematicPortChassisGround);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6708;
                this.match(EDIF300Parser.T__533);
                this.state = 6710;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__531) {
                    {
                        this.state = 6709;
                        this.schematicPortAnalog();
                    }
                }
                this.state = 6712;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortClock = function () {
        var _localctx = new SchematicPortClockContext(this._ctx, this.state);
        this.enterRule(_localctx, 1318, EDIF300Parser.RULE_schematicPortClock);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6714;
                this.match(EDIF300Parser.T__534);
                this.state = 6716;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__214) {
                    {
                        this.state = 6715;
                        this.ieeeStandard();
                    }
                }
                this.state = 6718;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortDcPower = function () {
        var _localctx = new SchematicPortDcPowerContext(this._ctx, this.state);
        this.enterRule(_localctx, 1320, EDIF300Parser.RULE_schematicPortDcPower);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6720;
                this.match(EDIF300Parser.T__535);
                this.state = 6725;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__531 || _la === EDIF300Parser.T__536) {
                    {
                        this.state = 6723;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__531:
                                {
                                    this.state = 6721;
                                    this.schematicPortAnalog();
                                }
                                break;
                            case EDIF300Parser.T__536:
                                {
                                    this.state = 6722;
                                    this.schematicPortDcPowerRecommendedVoltage();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6727;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6728;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortDcPowerRecommendedVoltage = function () {
        var _localctx = new SchematicPortDcPowerRecommendedVoltageContext(this._ctx, this.state);
        this.enterRule(_localctx, 1322, EDIF300Parser.RULE_schematicPortDcPowerRecommendedVoltage);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6730;
                this.match(EDIF300Parser.T__536);
                this.state = 6731;
                this.voltageValue();
                this.state = 6732;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortEarthGround = function () {
        var _localctx = new SchematicPortEarthGroundContext(this._ctx, this.state);
        this.enterRule(_localctx, 1324, EDIF300Parser.RULE_schematicPortEarthGround);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6734;
                this.match(EDIF300Parser.T__537);
                this.state = 6736;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__531) {
                    {
                        this.state = 6735;
                        this.schematicPortAnalog();
                    }
                }
                this.state = 6738;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortGround = function () {
        var _localctx = new SchematicPortGroundContext(this._ctx, this.state);
        this.enterRule(_localctx, 1326, EDIF300Parser.RULE_schematicPortGround);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6740;
                this.match(EDIF300Parser.T__538);
                this.state = 6742;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__531) {
                    {
                        this.state = 6741;
                        this.schematicPortAnalog();
                    }
                }
                this.state = 6744;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortNonLogical = function () {
        var _localctx = new SchematicPortNonLogicalContext(this._ctx, this.state);
        this.enterRule(_localctx, 1328, EDIF300Parser.RULE_schematicPortNonLogical);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6746;
                this.match(EDIF300Parser.T__539);
                this.state = 6747;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortOpenCollector = function () {
        var _localctx = new SchematicPortOpenCollectorContext(this._ctx, this.state);
        this.enterRule(_localctx, 1330, EDIF300Parser.RULE_schematicPortOpenCollector);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6749;
                this.match(EDIF300Parser.T__540);
                this.state = 6750;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortOpenEmitter = function () {
        var _localctx = new SchematicPortOpenEmitterContext(this._ctx, this.state);
        this.enterRule(_localctx, 1332, EDIF300Parser.RULE_schematicPortOpenEmitter);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6752;
                this.match(EDIF300Parser.T__541);
                this.state = 6753;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortPower = function () {
        var _localctx = new SchematicPortPowerContext(this._ctx, this.state);
        this.enterRule(_localctx, 1334, EDIF300Parser.RULE_schematicPortPower);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6755;
                this.match(EDIF300Parser.T__542);
                this.state = 6756;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortStyle = function () {
        var _localctx = new SchematicPortStyleContext(this._ctx, this.state);
        this.enterRule(_localctx, 1336, EDIF300Parser.RULE_schematicPortStyle);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6758;
                this.match(EDIF300Parser.T__543);
                this.state = 6761;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__349:
                        {
                            this.state = 6759;
                            this.narrowPort();
                        }
                        break;
                    case EDIF300Parser.T__661:
                        {
                            this.state = 6760;
                            this.widePort();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 6763;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicPortThreeState = function () {
        var _localctx = new SchematicPortThreeStateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1338, EDIF300Parser.RULE_schematicPortThreeState);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6765;
                this.match(EDIF300Parser.T__544);
                this.state = 6766;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicRequiredDefaults = function () {
        var _localctx = new SchematicRequiredDefaultsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1340, EDIF300Parser.RULE_schematicRequiredDefaults);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6768;
                this.match(EDIF300Parser.T__545);
                this.state = 6769;
                this.schematicMetric();
                this.state = 6770;
                this.fontRef();
                this.state = 6771;
                this.textHeight();
                this.state = 6772;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicRipperImplementation = function () {
        var _localctx = new SchematicRipperImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1342, EDIF300Parser.RULE_schematicRipperImplementation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6774;
                this.match(EDIF300Parser.T__546);
                this.state = 6775;
                this.implementationNameDef();
                this.state = 6776;
                this.schematicRipperTemplateRef();
                this.state = 6777;
                this.transform();
                this.state = 6786;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || ((((_la - 443)) & ~0x1F) === 0 && ((1 << (_la - 443)) & ((1 << (EDIF300Parser.T__442 - 443)) | (1 << (EDIF300Parser.T__443 - 443)) | (1 << (EDIF300Parser.T__444 - 443)) | (1 << (EDIF300Parser.T__448 - 443)))) !== 0)) {
                    {
                        this.state = 6784;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6778;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6779;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 6780;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6781;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6782;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6783;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6788;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6789;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicRipperImplementationRef = function () {
        var _localctx = new SchematicRipperImplementationRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1344, EDIF300Parser.RULE_schematicRipperImplementationRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6791;
                this.match(EDIF300Parser.T__547);
                this.state = 6792;
                this.implementationNameRef();
                this.state = 6793;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicRipperTemplate = function () {
        var _localctx = new SchematicRipperTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1346, EDIF300Parser.RULE_schematicRipperTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6795;
                this.match(EDIF300Parser.T__548);
                this.state = 6796;
                this.libraryObjectNameDef();
                this.state = 6797;
                this.schematicTemplateHeader();
                this.state = 6807;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || ((((_la - 444)) & ~0x1F) === 0 && ((1 << (_la - 444)) & ((1 << (EDIF300Parser.T__443 - 444)) | (1 << (EDIF300Parser.T__463 - 444)) | (1 << (EDIF300Parser.T__474 - 444)))) !== 0)) {
                    {
                        this.state = 6805;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6798;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6799;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6800;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6801;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6802;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__463:
                                {
                                    this.state = 6803;
                                    this.ripperHotspot();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6804;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6809;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6810;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicRipperTemplateRef = function () {
        var _localctx = new SchematicRipperTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1348, EDIF300Parser.RULE_schematicRipperTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6812;
                this.match(EDIF300Parser.T__549);
                this.state = 6813;
                this.libraryObjectNameRef();
                this.state = 6815;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6814;
                        this.libraryRef();
                    }
                }
                this.state = 6817;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSubBus = function () {
        var _localctx = new SchematicSubBusContext(this._ctx, this.state);
        this.enterRule(_localctx, 1350, EDIF300Parser.RULE_schematicSubBus);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6819;
                this.match(EDIF300Parser.T__550);
                this.state = 6820;
                this.interconnectNameDef();
                this.state = 6821;
                this.schematicSubInterconnectHeader();
                this.state = 6822;
                this.schematicBusJoined();
                this.state = 6830;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || ((((_la - 471)) & ~0x1F) === 0 && ((1 << (_la - 471)) & ((1 << (EDIF300Parser.T__470 - 471)) | (1 << (EDIF300Parser.T__473 - 471)) | (1 << (EDIF300Parser.T__496 - 471)))) !== 0) || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 6828;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 6823;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__470:
                                {
                                    this.state = 6824;
                                    this.schematicBusDetails();
                                }
                                break;
                            case EDIF300Parser.T__473:
                                {
                                    this.state = 6825;
                                    this.schematicBusSlice();
                                }
                                break;
                            case EDIF300Parser.T__496:
                                {
                                    this.state = 6826;
                                    this.schematicInterconnectAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 6827;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6832;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6833;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSubBusSet = function () {
        var _localctx = new SchematicSubBusSetContext(this._ctx, this.state);
        this.enterRule(_localctx, 1352, EDIF300Parser.RULE_schematicSubBusSet);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6835;
                this.match(EDIF300Parser.T__551);
                this.state = 6839;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__550) {
                    {
                        {
                            this.state = 6836;
                            this.schematicSubBus();
                        }
                    }
                    this.state = 6841;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6842;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSubInterconnectHeader = function () {
        var _localctx = new SchematicSubInterconnectHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1354, EDIF300Parser.RULE_schematicSubInterconnectHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6844;
                this.match(EDIF300Parser.T__552);
                this.state = 6852;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__97 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__261 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442) {
                    {
                        this.state = 6850;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__97:
                                {
                                    this.state = 6845;
                                    this.criticality();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 6846;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__261:
                                {
                                    this.state = 6847;
                                    this.interconnectDelay();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6848;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 6849;
                                    this.property();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6854;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6855;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSubNet = function () {
        var _localctx = new SchematicSubNetContext(this._ctx, this.state);
        this.enterRule(_localctx, 1356, EDIF300Parser.RULE_schematicSubNet);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6857;
                this.match(EDIF300Parser.T__553);
                this.state = 6858;
                this.interconnectNameDef();
                this.state = 6859;
                this.schematicSubInterconnectHeader();
                this.state = 6860;
                this.schematicNetJoined();
                this.state = 6867;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__496 || _la === EDIF300Parser.T__512 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 6865;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 6861;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__496:
                                {
                                    this.state = 6862;
                                    this.schematicInterconnectAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__512:
                                {
                                    this.state = 6863;
                                    this.schematicNetDetails();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 6864;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6869;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6870;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSubNetSet = function () {
        var _localctx = new SchematicSubNetSetContext(this._ctx, this.state);
        this.enterRule(_localctx, 1358, EDIF300Parser.RULE_schematicSubNetSet);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6872;
                this.match(EDIF300Parser.T__554);
                this.state = 6876;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__553) {
                    {
                        {
                            this.state = 6873;
                            this.schematicSubNet();
                        }
                    }
                    this.state = 6878;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6879;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSymbol = function () {
        var _localctx = new SchematicSymbolContext(this._ctx, this.state);
        this.enterRule(_localctx, 1360, EDIF300Parser.RULE_schematicSymbol);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6881;
                this.match(EDIF300Parser.T__555);
                this.state = 6882;
                this.viewNameDef();
                this.state = 6883;
                this.schematicSymbolHeader();
                this.state = 6904;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || ((((_la - 40)) & ~0x1F) === 0 && ((1 << (_la - 40)) & ((1 << (EDIF300Parser.T__39 - 40)) | (1 << (EDIF300Parser.T__40 - 40)) | (1 << (EDIF300Parser.T__56 - 40)) | (1 << (EDIF300Parser.T__61 - 40)) | (1 << (EDIF300Parser.T__62 - 40)))) !== 0) || _la === EDIF300Parser.T__119 || _la === EDIF300Parser.T__159 || ((((_la - 222)) & ~0x1F) === 0 && ((1 << (_la - 222)) & ((1 << (EDIF300Parser.T__221 - 222)) | (1 << (EDIF300Parser.T__237 - 222)) | (1 << (EDIF300Parser.T__239 - 222)) | (1 << (EDIF300Parser.T__246 - 222)))) !== 0) || _la === EDIF300Parser.T__398 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__560 || _la === EDIF300Parser.T__642 || _la === EDIF300Parser.T__650) {
                    {
                        this.state = 6902;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6884;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__39:
                                {
                                    this.state = 6885;
                                    this.cellNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__40:
                                {
                                    this.state = 6886;
                                    this.cellPropertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__56:
                                {
                                    this.state = 6887;
                                    this.clusterPropertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 6888;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6889;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__119:
                                {
                                    this.state = 6890;
                                    this.designatorDisplay();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6891;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6892;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__237:
                                {
                                    this.state = 6893;
                                    this.instanceNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__239:
                                {
                                    this.state = 6894;
                                    this.instanceNameGeneratorDisplay();
                                }
                                break;
                            case EDIF300Parser.T__246:
                                {
                                    this.state = 6895;
                                    this.instanceWidthDisplay();
                                }
                                break;
                            case EDIF300Parser.T__398:
                                {
                                    this.state = 6896;
                                    this.parameterDisplay();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6897;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6898;
                                    this.schematicComplexFigure();
                                }
                                break;
                            case EDIF300Parser.T__560:
                                {
                                    this.state = 6899;
                                    this.schematicSymbolPortImplementation();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 6900;
                                    this.userData();
                                }
                                break;
                            case EDIF300Parser.T__650:
                                {
                                    this.state = 6901;
                                    this.viewNameDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6906;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6907;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSymbolBorder = function () {
        var _localctx = new SchematicSymbolBorderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1362, EDIF300Parser.RULE_schematicSymbolBorder);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6909;
                this.match(EDIF300Parser.T__556);
                this.state = 6910;
                this.schematicSymbolBorderTemplateRef();
                this.state = 6911;
                this.transform();
                this.state = 6916;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 6914;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6912;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6913;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6918;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6919;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSymbolBorderTemplate = function () {
        var _localctx = new SchematicSymbolBorderTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1364, EDIF300Parser.RULE_schematicSymbolBorderTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6921;
                this.match(EDIF300Parser.T__557);
                this.state = 6922;
                this.libraryObjectNameDef();
                this.state = 6923;
                this.schematicTemplateHeader();
                this.state = 6924;
                this.usableArea();
                this.state = 6932;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
                    {
                        this.state = 6930;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6925;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6926;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6927;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6928;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6929;
                                    this.schematicComplexFigure();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6934;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6935;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSymbolBorderTemplateRef = function () {
        var _localctx = new SchematicSymbolBorderTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1366, EDIF300Parser.RULE_schematicSymbolBorderTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6937;
                this.match(EDIF300Parser.T__558);
                this.state = 6938;
                this.libraryObjectNameRef();
                this.state = 6940;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 6939;
                        this.libraryRef();
                    }
                }
                this.state = 6942;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSymbolHeader = function () {
        var _localctx = new SchematicSymbolHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1368, EDIF300Parser.RULE_schematicSymbolHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6944;
                this.match(EDIF300Parser.T__559);
                this.state = 6945;
                this.schematicUnits();
                this.state = 6958;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__116 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__368 || _la === EDIF300Parser.T__390 || _la === EDIF300Parser.T__439 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__556 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 6956;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__14:
                                {
                                    this.state = 6946;
                                    this.backgroundColor();
                                }
                                break;
                            case EDIF300Parser.T__116:
                                {
                                    this.state = 6947;
                                    this.derivedFrom();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 6948;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 6949;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__368:
                                {
                                    this.state = 6950;
                                    this.originalBoundingBox();
                                }
                                break;
                            case EDIF300Parser.T__390:
                                {
                                    this.state = 6951;
                                    this.pageSize();
                                }
                                break;
                            case EDIF300Parser.T__439:
                                {
                                    this.state = 6952;
                                    this.previousVersion();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 6953;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__556:
                                {
                                    this.state = 6954;
                                    this.schematicSymbolBorder();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 6955;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6960;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6961;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSymbolPortImplementation = function () {
        var _localctx = new SchematicSymbolPortImplementationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1370, EDIF300Parser.RULE_schematicSymbolPortImplementation);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6963;
                this.match(EDIF300Parser.T__560);
                this.state = 6964;
                this.symbolPortImplementationNameDef();
                this.state = 6965;
                this.portRef();
                this.state = 6966;
                this.schematicSymbolPortTemplateRef();
                this.state = 6967;
                this.transform();
                this.state = 6973;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__416 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 6971;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__416:
                                {
                                    this.state = 6968;
                                    this.portAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__444:
                                {
                                    this.state = 6969;
                                    this.propertyDisplayOverride();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 6970;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 6975;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 6976;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSymbolPortImplementationRef = function () {
        var _localctx = new SchematicSymbolPortImplementationRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1372, EDIF300Parser.RULE_schematicSymbolPortImplementationRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6978;
                this.match(EDIF300Parser.T__561);
                this.state = 6979;
                this.symbolPortImplementationNameRef();
                this.state = 6980;
                this.schematicInstanceImplementationRef();
                this.state = 6981;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSymbolPortTemplate = function () {
        var _localctx = new SchematicSymbolPortTemplateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1374, EDIF300Parser.RULE_schematicSymbolPortTemplate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 6983;
                this.match(EDIF300Parser.T__562);
                this.state = 6984;
                this.libraryObjectNameDef();
                this.state = 6985;
                this.schematicTemplateHeader();
                this.state = 6986;
                this.hotspot();
                this.state = 6987;
                this.portDirectionIndicator();
                this.state = 6999;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__416 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__532 || _la === EDIF300Parser.T__543) {
                    {
                        this.state = 6997;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__7:
                                {
                                    this.state = 6988;
                                    this.annotate();
                                }
                                break;
                            case EDIF300Parser.T__62:
                                {
                                    this.state = 6989;
                                    this.commentGraphics();
                                }
                                break;
                            case EDIF300Parser.T__159:
                                {
                                    this.state = 6990;
                                    this.figure();
                                }
                                break;
                            case EDIF300Parser.T__221:
                                {
                                    this.state = 6991;
                                    this.implementationNameDisplay();
                                }
                                break;
                            case EDIF300Parser.T__416:
                                {
                                    this.state = 6992;
                                    this.portAttributeDisplay();
                                }
                                break;
                            case EDIF300Parser.T__443:
                                {
                                    this.state = 6993;
                                    this.propertyDisplay();
                                }
                                break;
                            case EDIF300Parser.T__474:
                                {
                                    this.state = 6994;
                                    this.schematicComplexFigure();
                                }
                                break;
                            case EDIF300Parser.T__532:
                                {
                                    this.state = 6995;
                                    this.schematicPortAttributes();
                                }
                                break;
                            case EDIF300Parser.T__543:
                                {
                                    this.state = 6996;
                                    this.schematicPortStyle();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7001;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7002;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSymbolPortTemplateRef = function () {
        var _localctx = new SchematicSymbolPortTemplateRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1376, EDIF300Parser.RULE_schematicSymbolPortTemplateRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7004;
                this.match(EDIF300Parser.T__563);
                this.state = 7005;
                this.libraryObjectNameRef();
                this.state = 7007;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__313) {
                    {
                        this.state = 7006;
                        this.libraryRef();
                    }
                }
                this.state = 7009;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicSymbolRef = function () {
        var _localctx = new SchematicSymbolRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1378, EDIF300Parser.RULE_schematicSymbolRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7011;
                this.match(EDIF300Parser.T__564);
                this.state = 7012;
                this.viewNameRef();
                this.state = 7013;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicTemplateHeader = function () {
        var _localctx = new SchematicTemplateHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1380, EDIF300Parser.RULE_schematicTemplateHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7015;
                this.match(EDIF300Parser.T__565);
                this.state = 7016;
                this.schematicUnits();
                this.state = 7025;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__368 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 7023;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__14:
                                {
                                    this.state = 7017;
                                    this.backgroundColor();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 7018;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 7019;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__368:
                                {
                                    this.state = 7020;
                                    this.originalBoundingBox();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 7021;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 7022;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7027;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7028;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicUnits = function () {
        var _localctx = new SchematicUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1382, EDIF300Parser.RULE_schematicUnits);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7030;
                this.match(EDIF300Parser.T__566);
                this.state = 7039;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__510 || ((((_la - 576)) & ~0x1F) === 0 && ((1 << (_la - 576)) & ((1 << (EDIF300Parser.T__575 - 576)) | (1 << (EDIF300Parser.T__576 - 576)) | (1 << (EDIF300Parser.T__579 - 576)) | (1 << (EDIF300Parser.T__580 - 576)) | (1 << (EDIF300Parser.T__581 - 576)))) !== 0)) {
                    {
                        this.state = 7037;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__510:
                                {
                                    this.state = 7031;
                                    this.schematicMetric();
                                }
                                break;
                            case EDIF300Parser.T__575:
                                {
                                    this.state = 7032;
                                    this.setAngle();
                                }
                                break;
                            case EDIF300Parser.T__576:
                                {
                                    this.state = 7033;
                                    this.setCapacitance();
                                }
                                break;
                            case EDIF300Parser.T__579:
                                {
                                    this.state = 7034;
                                    this.setFrequency();
                                }
                                break;
                            case EDIF300Parser.T__580:
                                {
                                    this.state = 7035;
                                    this.setTime();
                                }
                                break;
                            case EDIF300Parser.T__581:
                                {
                                    this.state = 7036;
                                    this.setVoltage();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7041;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7042;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicView = function () {
        var _localctx = new SchematicViewContext(this._ctx, this.state);
        this.enterRule(_localctx, 1384, EDIF300Parser.RULE_schematicView);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7044;
                this.match(EDIF300Parser.T__567);
                this.state = 7045;
                this.viewNameDef();
                this.state = 7046;
                this.schematicViewHeader();
                this.state = 7047;
                this.logicalConnectivity();
                this.state = 7048;
                this.schematicImplementation();
                this.state = 7053;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 7051;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 7049;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 7050;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7055;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7056;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicViewHeader = function () {
        var _localctx = new SchematicViewHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1386, EDIF300Parser.RULE_schematicViewHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7058;
                this.match(EDIF300Parser.T__568);
                this.state = 7059;
                this.schematicUnits();
                this.state = 7068;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__116 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__439 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
                    {
                        this.state = 7066;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__116:
                                {
                                    this.state = 7060;
                                    this.derivedFrom();
                                }
                                break;
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 7061;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 7062;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__439:
                                {
                                    this.state = 7063;
                                    this.previousVersion();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 7064;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__597:
                                {
                                    this.state = 7065;
                                    this.status();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7070;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7071;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicWireAffinity = function () {
        var _localctx = new SchematicWireAffinityContext(this._ctx, this.state);
        this.enterRule(_localctx, 1388, EDIF300Parser.RULE_schematicWireAffinity);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7073;
                this.match(EDIF300Parser.T__569);
                this.state = 7077;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__350:
                        {
                            this.state = 7074;
                            this.narrowWire();
                        }
                        break;
                    case EDIF300Parser.T__662:
                        {
                            this.state = 7075;
                            this.wideWire();
                        }
                        break;
                    case EDIF300Parser.T__636:
                        {
                            this.state = 7076;
                            this.unrestricted();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 7079;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.schematicWireStyle = function () {
        var _localctx = new SchematicWireStyleContext(this._ctx, this.state);
        this.enterRule(_localctx, 1390, EDIF300Parser.RULE_schematicWireStyle);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7081;
                this.match(EDIF300Parser.T__570);
                this.state = 7084;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__350:
                        {
                            this.state = 7082;
                            this.narrowWire();
                        }
                        break;
                    case EDIF300Parser.T__662:
                        {
                            this.state = 7083;
                            this.wideWire();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 7086;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.second = function () {
        var _localctx = new SecondContext(this._ctx, this.state);
        this.enterRule(_localctx, 1392, EDIF300Parser.RULE_second);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7088;
                this.match(EDIF300Parser.T__571);
                this.state = 7089;
                this.unitExponent();
                this.state = 7090;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.secondIntegerExpression = function () {
        var _localctx = new SecondIntegerExpressionContext(this._ctx, this.state);
        this.enterRule(_localctx, 1394, EDIF300Parser.RULE_secondIntegerExpression);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7092;
                this.integerExpression();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.secondNumber = function () {
        var _localctx = new SecondNumberContext(this._ctx, this.state);
        this.enterRule(_localctx, 1396, EDIF300Parser.RULE_secondNumber);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7094;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.secondStringExpression = function () {
        var _localctx = new SecondStringExpressionContext(this._ctx, this.state);
        this.enterRule(_localctx, 1398, EDIF300Parser.RULE_secondStringExpression);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7096;
                this.stringExpression();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.section = function () {
        var _localctx = new SectionContext(this._ctx, this.state);
        this.enterRule(_localctx, 1400, EDIF300Parser.RULE_section);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7098;
                this.match(EDIF300Parser.T__572);
                this.state = 7099;
                this.sectionNameDef();
                this.state = 7100;
                this.sectionTitle();
                this.state = 7106;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__126 || _la === EDIF300Parser.T__572 || _la === EDIF300Parser.STRING_LITERAL) {
                    {
                        this.state = 7104;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__126:
                                {
                                    this.state = 7101;
                                    this.diagram();
                                }
                                break;
                            case EDIF300Parser.T__572:
                                {
                                    this.state = 7102;
                                    this.section();
                                }
                                break;
                            case EDIF300Parser.STRING_LITERAL:
                                {
                                    this.state = 7103;
                                    this.stringValue();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7108;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7109;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.sectionNameDef = function () {
        var _localctx = new SectionNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1402, EDIF300Parser.RULE_sectionNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7111;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.sectionTitle = function () {
        var _localctx = new SectionTitleContext(this._ctx, this.state);
        this.enterRule(_localctx, 1404, EDIF300Parser.RULE_sectionTitle);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7113;
                this.match(EDIF300Parser.T__573);
                this.state = 7114;
                this.stringToken();
                this.state = 7115;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.sequence = function () {
        var _localctx = new SequenceContext(this._ctx, this.state);
        this.enterRule(_localctx, 1406, EDIF300Parser.RULE_sequence);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7117;
                this.match(EDIF300Parser.T__574);
                this.state = 7118;
                this.fromInteger();
                this.state = 7119;
                this.toInteger();
                this.state = 7121;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__598) {
                    {
                        this.state = 7120;
                        this.step();
                    }
                }
                this.state = 7123;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.setAngle = function () {
        var _localctx = new SetAngleContext(this._ctx, this.state);
        this.enterRule(_localctx, 1408, EDIF300Parser.RULE_setAngle);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7125;
                this.match(EDIF300Parser.T__575);
                this.state = 7126;
                this.unitRef();
                this.state = 7127;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.setCapacitance = function () {
        var _localctx = new SetCapacitanceContext(this._ctx, this.state);
        this.enterRule(_localctx, 1410, EDIF300Parser.RULE_setCapacitance);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7129;
                this.match(EDIF300Parser.T__576);
                this.state = 7130;
                this.unitRef();
                this.state = 7131;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.setCurrent = function () {
        var _localctx = new SetCurrentContext(this._ctx, this.state);
        this.enterRule(_localctx, 1412, EDIF300Parser.RULE_setCurrent);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7133;
                this.match(EDIF300Parser.T__577);
                this.state = 7134;
                this.unitRef();
                this.state = 7135;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.setDistance = function () {
        var _localctx = new SetDistanceContext(this._ctx, this.state);
        this.enterRule(_localctx, 1414, EDIF300Parser.RULE_setDistance);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7137;
                this.match(EDIF300Parser.T__578);
                this.state = 7138;
                this.unitRef();
                this.state = 7139;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.setFrequency = function () {
        var _localctx = new SetFrequencyContext(this._ctx, this.state);
        this.enterRule(_localctx, 1416, EDIF300Parser.RULE_setFrequency);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7141;
                this.match(EDIF300Parser.T__579);
                this.state = 7142;
                this.unitRef();
                this.state = 7143;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.setTime = function () {
        var _localctx = new SetTimeContext(this._ctx, this.state);
        this.enterRule(_localctx, 1418, EDIF300Parser.RULE_setTime);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7145;
                this.match(EDIF300Parser.T__580);
                this.state = 7146;
                this.unitRef();
                this.state = 7147;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.setVoltage = function () {
        var _localctx = new SetVoltageContext(this._ctx, this.state);
        this.enterRule(_localctx, 1420, EDIF300Parser.RULE_setVoltage);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7149;
                this.match(EDIF300Parser.T__581);
                this.state = 7150;
                this.unitRef();
                this.state = 7151;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.shape = function () {
        var _localctx = new ShapeContext(this._ctx, this.state);
        this.enterRule(_localctx, 1422, EDIF300Parser.RULE_shape);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7153;
                this.match(EDIF300Parser.T__582);
                this.state = 7154;
                this.curve();
                this.state = 7155;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.siemens = function () {
        var _localctx = new SiemensContext(this._ctx, this.state);
        this.enterRule(_localctx, 1424, EDIF300Parser.RULE_siemens);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7157;
                this.match(EDIF300Parser.T__583);
                this.state = 7158;
                this.unitExponent();
                this.state = 7159;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signal = function () {
        var _localctx = new SignalContext(this._ctx, this.state);
        this.enterRule(_localctx, 1426, EDIF300Parser.RULE_signal);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7161;
                this.match(EDIF300Parser.T__584);
                this.state = 7162;
                this.signalNameDef();
                this.state = 7163;
                this.signalJoined();
                this.state = 7170;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__85 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__596) {
                    {
                        this.state = 7168;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__85:
                                {
                                    this.state = 7164;
                                    this.connectivityTagGenerator();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 7165;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 7166;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__596:
                                {
                                    this.state = 7167;
                                    this.signalWidth();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7172;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7173;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalAnnotate = function () {
        var _localctx = new SignalAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1428, EDIF300Parser.RULE_signalAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7175;
                this.match(EDIF300Parser.T__585);
                this.state = 7178;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.IDENTIFIER:
                        {
                            this.state = 7176;
                            this.extendSignalDef();
                        }
                        break;
                    case EDIF300Parser.T__593:
                        {
                            this.state = 7177;
                            this.extendSignalMemberDef();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 7185;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 7183;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 7180;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 7181;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 7182;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7187;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7188;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalGroup = function () {
        var _localctx = new SignalGroupContext(this._ctx, this.state);
        this.enterRule(_localctx, 1430, EDIF300Parser.RULE_signalGroup);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7190;
                this.match(EDIF300Parser.T__586);
                this.state = 7191;
                this.signalGroupNameDef();
                this.state = 7192;
                this.signalList();
                this.state = 7197;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442) {
                    {
                        this.state = 7195;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 7193;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 7194;
                                    this.nameInformation();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7199;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7200;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalGroupAnnotate = function () {
        var _localctx = new SignalGroupAnnotateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1432, EDIF300Parser.RULE_signalGroupAnnotate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7202;
                this.match(EDIF300Parser.T__587);
                this.state = 7203;
                this.extendSignalGroupDef();
                this.state = 7209;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 7207;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 7204;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 7205;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 7206;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7211;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7212;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalGroupNameCaseSensitive = function () {
        var _localctx = new SignalGroupNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 1434, EDIF300Parser.RULE_signalGroupNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7214;
                this.match(EDIF300Parser.T__588);
                this.state = 7215;
                this.booleanToken();
                this.state = 7216;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalGroupNameDef = function () {
        var _localctx = new SignalGroupNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1436, EDIF300Parser.RULE_signalGroupNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7218;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalGroupNameRef = function () {
        var _localctx = new SignalGroupNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1438, EDIF300Parser.RULE_signalGroupNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7220;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalGroupRef = function () {
        var _localctx = new SignalGroupRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1440, EDIF300Parser.RULE_signalGroupRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7222;
                this.match(EDIF300Parser.T__589);
                this.state = 7223;
                this.signalGroupNameRef();
                this.state = 7224;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalIndexValue = function () {
        var _localctx = new SignalIndexValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1442, EDIF300Parser.RULE_signalIndexValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7226;
                this.match(EDIF300Parser.T__590);
                this.state = 7227;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalJoined = function () {
        var _localctx = new SignalJoinedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1444, EDIF300Parser.RULE_signalJoined);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7229;
                this.match(EDIF300Parser.T__591);
                this.state = 7236;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__203 || ((((_la - 423)) & ~0x1F) === 0 && ((1 << (_la - 423)) & ((1 << (EDIF300Parser.T__422 - 423)) | (1 << (EDIF300Parser.T__428 - 423)) | (1 << (EDIF300Parser.T__436 - 423)))) !== 0)) {
                    {
                        this.state = 7234;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__203:
                                {
                                    this.state = 7230;
                                    this.globalPortRef();
                                }
                                break;
                            case EDIF300Parser.T__422:
                                {
                                    this.state = 7231;
                                    this.portInstanceRef();
                                }
                                break;
                            case EDIF300Parser.T__428:
                                {
                                    this.state = 7232;
                                    this.portMemberRef();
                                }
                                break;
                            case EDIF300Parser.T__436:
                                {
                                    this.state = 7233;
                                    this.portRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7238;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7239;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalList = function () {
        var _localctx = new SignalListContext(this._ctx, this.state);
        this.enterRule(_localctx, 1446, EDIF300Parser.RULE_signalList);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7241;
                this.match(EDIF300Parser.T__592);
                this.state = 7246;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__589 || _la === EDIF300Parser.T__595) {
                    {
                        this.state = 7244;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__589:
                                {
                                    this.state = 7242;
                                    this.signalGroupRef();
                                }
                                break;
                            case EDIF300Parser.T__595:
                                {
                                    this.state = 7243;
                                    this.signalRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7248;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7249;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalMemberRef = function () {
        var _localctx = new SignalMemberRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1448, EDIF300Parser.RULE_signalMemberRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7251;
                this.match(EDIF300Parser.T__593);
                this.state = 7252;
                this.signalNameRef();
                this.state = 7253;
                this.indexValue();
                this.state = 7254;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalNameCaseSensitive = function () {
        var _localctx = new SignalNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 1450, EDIF300Parser.RULE_signalNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7256;
                this.match(EDIF300Parser.T__594);
                this.state = 7257;
                this.booleanToken();
                this.state = 7258;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalNameDef = function () {
        var _localctx = new SignalNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1452, EDIF300Parser.RULE_signalNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7260;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalNameRef = function () {
        var _localctx = new SignalNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1454, EDIF300Parser.RULE_signalNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7262;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalRef = function () {
        var _localctx = new SignalRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1456, EDIF300Parser.RULE_signalRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7264;
                this.match(EDIF300Parser.T__595);
                this.state = 7265;
                this.signalNameRef();
                this.state = 7266;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.signalWidth = function () {
        var _localctx = new SignalWidthContext(this._ctx, this.state);
        this.enterRule(_localctx, 1458, EDIF300Parser.RULE_signalWidth);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7268;
                this.match(EDIF300Parser.T__596);
                this.state = 7269;
                this.integerExpression();
                this.state = 7270;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.simpleName = function () {
        var _localctx = new SimpleNameContext(this._ctx, this.state);
        this.enterRule(_localctx, 1460, EDIF300Parser.RULE_simpleName);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7272;
                this.stringToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.startPoint = function () {
        var _localctx = new StartPointContext(this._ctx, this.state);
        this.enterRule(_localctx, 1462, EDIF300Parser.RULE_startPoint);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7274;
                this.pointValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.status = function () {
        var _localctx = new StatusContext(this._ctx, this.state);
        this.enterRule(_localctx, 1464, EDIF300Parser.RULE_status);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7276;
                this.match(EDIF300Parser.T__597);
                this.state = 7283;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__93 || _la === EDIF300Parser.T__642 || _la === EDIF300Parser.T__663) {
                    {
                        this.state = 7281;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 7277;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__93:
                                {
                                    this.state = 7278;
                                    this.copyright();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 7279;
                                    this.userData();
                                }
                                break;
                            case EDIF300Parser.T__663:
                                {
                                    this.state = 7280;
                                    this.written();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7285;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7286;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.step = function () {
        var _localctx = new StepContext(this._ctx, this.state);
        this.enterRule(_localctx, 1466, EDIF300Parser.RULE_step);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7288;
                this.match(EDIF300Parser.T__598);
                this.state = 7289;
                this.integerValue();
                this.state = 7290;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.string = function () {
        var _localctx = new StringContext(this._ctx, this.state);
        this.enterRule(_localctx, 1468, EDIF300Parser.RULE_string);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7292;
                this.match(EDIF300Parser.T__599);
                this.state = 7293;
                this.stringExpression();
                this.state = 7294;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringConcatenate = function () {
        var _localctx = new StringConcatenateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1470, EDIF300Parser.RULE_stringConcatenate);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7296;
                this.match(EDIF300Parser.T__600);
                this.state = 7300;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__111 || ((((_la - 601)) & ~0x1F) === 0 && ((1 << (_la - 601)) & ((1 << (EDIF300Parser.T__600 - 601)) | (1 << (EDIF300Parser.T__602 - 601)) | (1 << (EDIF300Parser.T__607 - 601)) | (1 << (EDIF300Parser.T__608 - 601)) | (1 << (EDIF300Parser.T__609 - 601)) | (1 << (EDIF300Parser.T__611 - 601)))) !== 0) || _la === EDIF300Parser.STRING_LITERAL) {
                    {
                        {
                            this.state = 7297;
                            this.stringExpression();
                        }
                    }
                    this.state = 7302;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7303;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringConstant = function () {
        var _localctx = new StringConstantContext(this._ctx, this.state);
        this.enterRule(_localctx, 1472, EDIF300Parser.RULE_stringConstant);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7305;
                this.match(EDIF300Parser.T__601);
                this.state = 7306;
                this.constantNameDef();
                this.state = 7307;
                this.stringToken();
                this.state = 7308;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringConstantRef = function () {
        var _localctx = new StringConstantRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1474, EDIF300Parser.RULE_stringConstantRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7310;
                this.match(EDIF300Parser.T__602);
                this.state = 7311;
                this.constantNameRef();
                this.state = 7312;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringEqual = function () {
        var _localctx = new StringEqualContext(this._ctx, this.state);
        this.enterRule(_localctx, 1476, EDIF300Parser.RULE_stringEqual);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7314;
                this.match(EDIF300Parser.T__603);
                this.state = 7315;
                this.firstStringExpression();
                this.state = 7316;
                this.secondStringExpression();
                this.state = 7317;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringExpression = function () {
        var _localctx = new StringExpressionContext(this._ctx, this.state);
        this.enterRule(_localctx, 1478, EDIF300Parser.RULE_stringExpression);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7327;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__607:
                        {
                            this.state = 7319;
                            this.stringParameterRef();
                        }
                        break;
                    case EDIF300Parser.STRING_LITERAL:
                        {
                            this.state = 7320;
                            this.stringToken();
                        }
                        break;
                    case EDIF300Parser.T__602:
                        {
                            this.state = 7321;
                            this.stringConstantRef();
                        }
                        break;
                    case EDIF300Parser.T__600:
                        {
                            this.state = 7322;
                            this.stringConcatenate();
                        }
                        break;
                    case EDIF300Parser.T__611:
                        {
                            this.state = 7323;
                            this.substring();
                        }
                        break;
                    case EDIF300Parser.T__111:
                        {
                            this.state = 7324;
                            this.decimalToString();
                        }
                        break;
                    case EDIF300Parser.T__608:
                        {
                            this.state = 7325;
                            this.stringPrefix();
                        }
                        break;
                    case EDIF300Parser.T__609:
                        {
                            this.state = 7326;
                            this.stringSuffix();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringLength = function () {
        var _localctx = new StringLengthContext(this._ctx, this.state);
        this.enterRule(_localctx, 1480, EDIF300Parser.RULE_stringLength);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7329;
                this.match(EDIF300Parser.T__604);
                this.state = 7330;
                this.stringExpression();
                this.state = 7331;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringParameter = function () {
        var _localctx = new StringParameterContext(this._ctx, this.state);
        this.enterRule(_localctx, 1482, EDIF300Parser.RULE_stringParameter);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7333;
                this.match(EDIF300Parser.T__605);
                this.state = 7334;
                this.parameterNameDef();
                this.state = 7339;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__599) {
                    {
                        this.state = 7337;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 7335;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__599:
                                {
                                    this.state = 7336;
                                    this.string();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7341;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7342;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringParameterAssign = function () {
        var _localctx = new StringParameterAssignContext(this._ctx, this.state);
        this.enterRule(_localctx, 1484, EDIF300Parser.RULE_stringParameterAssign);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7344;
                this.match(EDIF300Parser.T__606);
                this.state = 7345;
                this.parameterNameRef();
                this.state = 7346;
                this.stringExpression();
                this.state = 7347;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringParameterRef = function () {
        var _localctx = new StringParameterRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1486, EDIF300Parser.RULE_stringParameterRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7349;
                this.match(EDIF300Parser.T__607);
                this.state = 7350;
                this.parameterNameRef();
                this.state = 7351;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringPrefix = function () {
        var _localctx = new StringPrefixContext(this._ctx, this.state);
        this.enterRule(_localctx, 1488, EDIF300Parser.RULE_stringPrefix);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7353;
                this.match(EDIF300Parser.T__608);
                this.state = 7354;
                this.stringExpression();
                this.state = 7355;
                this.substringLength();
                this.state = 7356;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringSuffix = function () {
        var _localctx = new StringSuffixContext(this._ctx, this.state);
        this.enterRule(_localctx, 1490, EDIF300Parser.RULE_stringSuffix);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7358;
                this.match(EDIF300Parser.T__609);
                this.state = 7359;
                this.stringExpression();
                this.state = 7360;
                this.substringOffset();
                this.state = 7361;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringValue = function () {
        var _localctx = new StringValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1492, EDIF300Parser.RULE_stringValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7363;
                this.stringToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.strong = function () {
        var _localctx = new StrongContext(this._ctx, this.state);
        this.enterRule(_localctx, 1494, EDIF300Parser.RULE_strong);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7365;
                this.match(EDIF300Parser.T__610);
                this.state = 7366;
                this.logicNameRef();
                this.state = 7367;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.subIssue = function () {
        var _localctx = new SubIssueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1496, EDIF300Parser.RULE_subIssue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7369;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.substring = function () {
        var _localctx = new SubstringContext(this._ctx, this.state);
        this.enterRule(_localctx, 1498, EDIF300Parser.RULE_substring);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7371;
                this.match(EDIF300Parser.T__611);
                this.state = 7372;
                this.stringExpression();
                this.state = 7373;
                this.substringLength();
                this.state = 7374;
                this.substringOffset();
                this.state = 7375;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.substringLength = function () {
        var _localctx = new SubstringLengthContext(this._ctx, this.state);
        this.enterRule(_localctx, 1500, EDIF300Parser.RULE_substringLength);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7377;
                this.integerExpression();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.substringOffset = function () {
        var _localctx = new SubstringOffsetContext(this._ctx, this.state);
        this.enterRule(_localctx, 1502, EDIF300Parser.RULE_substringOffset);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7379;
                this.integerExpression();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.subtrahend = function () {
        var _localctx = new SubtrahendContext(this._ctx, this.state);
        this.enterRule(_localctx, 1504, EDIF300Parser.RULE_subtrahend);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7381;
                this.integerExpression();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.symbolicLayoutUnits = function () {
        var _localctx = new SymbolicLayoutUnitsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1506, EDIF300Parser.RULE_symbolicLayoutUnits);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7383;
                this.match(EDIF300Parser.T__612);
                this.state = 7390;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 576)) & ~0x1F) === 0 && ((1 << (_la - 576)) & ((1 << (EDIF300Parser.T__575 - 576)) | (1 << (EDIF300Parser.T__576 - 576)) | (1 << (EDIF300Parser.T__578 - 576)) | (1 << (EDIF300Parser.T__580 - 576)))) !== 0)) {
                    {
                        this.state = 7388;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__575:
                                {
                                    this.state = 7384;
                                    this.setAngle();
                                }
                                break;
                            case EDIF300Parser.T__576:
                                {
                                    this.state = 7385;
                                    this.setCapacitance();
                                }
                                break;
                            case EDIF300Parser.T__578:
                                {
                                    this.state = 7386;
                                    this.setDistance();
                                }
                                break;
                            case EDIF300Parser.T__580:
                                {
                                    this.state = 7387;
                                    this.setTime();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7392;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7393;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.symbolicLayoutView = function () {
        var _localctx = new SymbolicLayoutViewContext(this._ctx, this.state);
        this.enterRule(_localctx, 1508, EDIF300Parser.RULE_symbolicLayoutView);
        var _la;
        try {
            var _alt = void 0;
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7395;
                this.match(EDIF300Parser.T__613);
                this.state = 7396;
                this.viewNameDef();
                this.state = 7401;
                this._errHandler.sync(this);
                _alt = this.interpreter.adaptivePredict(this._input, 605, this._ctx);
                while (_alt !== 2 && _alt !== ATN_1.ATN.INVALID_ALT_NUMBER) {
                    if (_alt === 1) {
                        {
                            this.state = 7399;
                            this._errHandler.sync(this);
                            switch (this._input.LA(1)) {
                                case EDIF300Parser.T__61:
                                    {
                                        this.state = 7397;
                                        this.comment();
                                    }
                                    break;
                                case EDIF300Parser.T__642:
                                    {
                                        this.state = 7398;
                                        this.userData();
                                    }
                                    break;
                                default:
                                    throw new NoViableAltException_1.NoViableAltException(this);
                            }
                        }
                    }
                    this.state = 7403;
                    this._errHandler.sync(this);
                    _alt = this.interpreter.adaptivePredict(this._input, 605, this._ctx);
                }
                this.state = 7405;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__346) {
                    {
                        this.state = 7404;
                        this.nameInformation();
                    }
                }
                this.state = 7411;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 7409;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 7407;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 7408;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7413;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7414;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.symbolPortImplementationNameDef = function () {
        var _localctx = new SymbolPortImplementationNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1510, EDIF300Parser.RULE_symbolPortImplementationNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7416;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.symbolPortImplementationNameRef = function () {
        var _localctx = new SymbolPortImplementationNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1512, EDIF300Parser.RULE_symbolPortImplementationNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7418;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.technology = function () {
        var _localctx = new TechnologyContext(this._ctx, this.state);
        this.enterRule(_localctx, 1514, EDIF300Parser.RULE_technology);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7420;
                this.match(EDIF300Parser.T__614);
                this.state = 7421;
                this.physicalScaling();
                this.state = 7428;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__160 || _la === EDIF300Parser.T__319 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 7426;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 7422;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__160:
                                {
                                    this.state = 7423;
                                    this.figureGroup();
                                }
                                break;
                            case EDIF300Parser.T__319:
                                {
                                    this.state = 7424;
                                    this.logicDefinitions();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 7425;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7430;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7431;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.textHeight = function () {
        var _localctx = new TextHeightContext(this._ctx, this.state);
        this.enterRule(_localctx, 1516, EDIF300Parser.RULE_textHeight);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7433;
                this.match(EDIF300Parser.T__615);
                this.state = 7434;
                this.lengthValue();
                this.state = 7435;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.throughPoint = function () {
        var _localctx = new ThroughPointContext(this._ctx, this.state);
        this.enterRule(_localctx, 1518, EDIF300Parser.RULE_throughPoint);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7437;
                this.numberPoint();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.time = function () {
        var _localctx = new TimeContext(this._ctx, this.state);
        this.enterRule(_localctx, 1520, EDIF300Parser.RULE_time);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7439;
                this.match(EDIF300Parser.T__616);
                this.state = 7440;
                this.hourNumber();
                this.state = 7441;
                this.minuteNumber();
                this.state = 7442;
                this.secondNumber();
                this.state = 7443;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.timeDelay = function () {
        var _localctx = new TimeDelayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1522, EDIF300Parser.RULE_timeDelay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7445;
                this.timeValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.timeInterval = function () {
        var _localctx = new TimeIntervalContext(this._ctx, this.state);
        this.enterRule(_localctx, 1524, EDIF300Parser.RULE_timeInterval);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7447;
                this.match(EDIF300Parser.T__617);
                this.state = 7450;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__153:
                        {
                            this.state = 7448;
                            this.event();
                        }
                        break;
                    case EDIF300Parser.T__363:
                        {
                            this.state = 7449;
                            this.offsetEvent();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 7455;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__153:
                        {
                            this.state = 7452;
                            this.event();
                        }
                        break;
                    case EDIF300Parser.T__363:
                        {
                            this.state = 7453;
                            this.offsetEvent();
                        }
                        break;
                    case EDIF300Parser.T__144:
                        {
                            this.state = 7454;
                            this.duration();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 7457;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.timeStamp = function () {
        var _localctx = new TimeStampContext(this._ctx, this.state);
        this.enterRule(_localctx, 1526, EDIF300Parser.RULE_timeStamp);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7459;
                this.match(EDIF300Parser.T__618);
                this.state = 7460;
                this.date();
                this.state = 7461;
                this.time();
                this.state = 7462;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.timeValue = function () {
        var _localctx = new TimeValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1528, EDIF300Parser.RULE_timeValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7464;
                this.miNoMaxValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.timing = function () {
        var _localctx = new TimingContext(this._ctx, this.state);
        this.enterRule(_localctx, 1530, EDIF300Parser.RULE_timing);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7466;
                this.match(EDIF300Parser.T__619);
                this.state = 7467;
                this.timingNameDef();
                this.state = 7468;
                this.derivation();
                this.state = 7476;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__175 || _la === EDIF300Parser.T__402 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 7474;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 7469;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__175:
                                {
                                    this.state = 7470;
                                    this.forbiddenEvent();
                                }
                                break;
                            case EDIF300Parser.T__402:
                                {
                                    this.state = 7471;
                                    this.pathDelay();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 7472;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 7473;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7478;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7479;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.timingDisplay = function () {
        var _localctx = new TimingDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1532, EDIF300Parser.RULE_timingDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7481;
                this.match(EDIF300Parser.T__620);
                this.state = 7482;
                this.timingNameRef();
                this.state = 7486;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128) {
                    {
                        {
                            this.state = 7483;
                            this.display();
                        }
                    }
                    this.state = 7488;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7489;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.timingNameDef = function () {
        var _localctx = new TimingNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1534, EDIF300Parser.RULE_timingNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7491;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.timingNameRef = function () {
        var _localctx = new TimingNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1536, EDIF300Parser.RULE_timingNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7493;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.toInteger = function () {
        var _localctx = new ToIntegerContext(this._ctx, this.state);
        this.enterRule(_localctx, 1538, EDIF300Parser.RULE_toInteger);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7495;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.topJustify = function () {
        var _localctx = new TopJustifyContext(this._ctx, this.state);
        this.enterRule(_localctx, 1540, EDIF300Parser.RULE_topJustify);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7497;
                this.match(EDIF300Parser.T__621);
                this.state = 7498;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.totalPages = function () {
        var _localctx = new TotalPagesContext(this._ctx, this.state);
        this.enterRule(_localctx, 1542, EDIF300Parser.RULE_totalPages);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7500;
                this.match(EDIF300Parser.T__622);
                this.state = 7501;
                this.integerToken();
                this.state = 7502;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.totalPagesDisplay = function () {
        var _localctx = new TotalPagesDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1544, EDIF300Parser.RULE_totalPagesDisplay);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7504;
                this.match(EDIF300Parser.T__623);
                this.state = 7508;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__4:
                        {
                            this.state = 7505;
                            this.addDisplay();
                        }
                        break;
                    case EDIF300Parser.T__457:
                        {
                            this.state = 7506;
                            this.replaceDisplay();
                        }
                        break;
                    case EDIF300Parser.T__454:
                        {
                            this.state = 7507;
                            this.removeDisplay();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 7510;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.transform = function () {
        var _localctx = new TransformContext(this._ctx, this.state);
        this.enterRule(_localctx, 1546, EDIF300Parser.RULE_transform);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7512;
                this.match(EDIF300Parser.T__624);
                this.state = 7519;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__367 || ((((_la - 466)) & ~0x1F) === 0 && ((1 << (_la - 466)) & ((1 << (EDIF300Parser.T__465 - 466)) | (1 << (EDIF300Parser.T__467 - 466)) | (1 << (EDIF300Parser.T__468 - 466)))) !== 0)) {
                    {
                        this.state = 7517;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__367:
                                {
                                    this.state = 7513;
                                    this.origin();
                                }
                                break;
                            case EDIF300Parser.T__465:
                                {
                                    this.state = 7514;
                                    this.rotation();
                                }
                                break;
                            case EDIF300Parser.T__467:
                                {
                                    this.state = 7515;
                                    this.scaleX();
                                }
                                break;
                            case EDIF300Parser.T__468:
                                {
                                    this.state = 7516;
                                    this.scaleY();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7521;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7522;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.transition = function () {
        var _localctx = new TransitionContext(this._ctx, this.state);
        this.enterRule(_localctx, 1548, EDIF300Parser.RULE_transition);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7524;
                this.match(EDIF300Parser.T__625);
                this.state = 7525;
                this.previousLogicValue();
                this.state = 7526;
                this.presentLogicValue();
                this.state = 7527;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.etrue = function () {
        var _localctx = new EtrueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1550, EDIF300Parser.RULE_etrue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7529;
                this.match(EDIF300Parser.T__626);
                this.state = 7530;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.truncate = function () {
        var _localctx = new TruncateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1552, EDIF300Parser.RULE_truncate);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7532;
                this.match(EDIF300Parser.T__627);
                this.state = 7533;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.typedValue = function () {
        var _localctx = new TypedValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1554, EDIF300Parser.RULE_typedValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7541;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__23:
                        {
                            this.state = 7535;
                            this.eboolean();
                        }
                        break;
                    case EDIF300Parser.T__247:
                        {
                            this.state = 7536;
                            this.integer();
                        }
                        break;
                    case EDIF300Parser.T__336:
                        {
                            this.state = 7537;
                            this.miNoMax();
                        }
                        break;
                    case EDIF300Parser.T__356:
                        {
                            this.state = 7538;
                            this.number();
                        }
                        break;
                    case EDIF300Parser.T__411:
                        {
                            this.state = 7539;
                            this.point();
                        }
                        break;
                    case EDIF300Parser.T__599:
                        {
                            this.state = 7540;
                            this.string();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.typeface = function () {
        var _localctx = new TypefaceContext(this._ctx, this.state);
        this.enterRule(_localctx, 1556, EDIF300Parser.RULE_typeface);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7543;
                this.match(EDIF300Parser.T__628);
                this.state = 7544;
                this.fontFamily();
                this.state = 7546;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__629) {
                    {
                        this.state = 7545;
                        this.typefaceSuffix();
                    }
                }
                this.state = 7548;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.typefaceSuffix = function () {
        var _localctx = new TypefaceSuffixContext(this._ctx, this.state);
        this.enterRule(_localctx, 1558, EDIF300Parser.RULE_typefaceSuffix);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7550;
                this.match(EDIF300Parser.T__629);
                this.state = 7551;
                this.stringToken();
                this.state = 7552;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unconfigured = function () {
        var _localctx = new UnconfiguredContext(this._ctx, this.state);
        this.enterRule(_localctx, 1560, EDIF300Parser.RULE_unconfigured);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7554;
                this.match(EDIF300Parser.T__630);
                this.state = 7555;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unconstrained = function () {
        var _localctx = new UnconstrainedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1562, EDIF300Parser.RULE_unconstrained);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7557;
                this.match(EDIF300Parser.T__631);
                this.state = 7558;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.undefined = function () {
        var _localctx = new UndefinedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1564, EDIF300Parser.RULE_undefined);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7560;
                this.match(EDIF300Parser.T__632);
                this.state = 7561;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unit = function () {
        var _localctx = new UnitContext(this._ctx, this.state);
        this.enterRule(_localctx, 1566, EDIF300Parser.RULE_unit);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7563;
                this.match(EDIF300Parser.T__633);
                this.state = 7564;
                this.unitNameDef();
                this.state = 7565;
                this.numberOfNewUnits();
                this.state = 7566;
                this.numberOfBasicUnits();
                this.state = 7590;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__5 || _la === EDIF300Parser.T__35 || _la === EDIF300Parser.T__44 || _la === EDIF300Parser.T__96 || _la === EDIF300Parser.T__114 || _la === EDIF300Parser.T__156 || _la === EDIF300Parser.T__158 || _la === EDIF300Parser.T__205 || _la === EDIF300Parser.T__206 || ((((_la - 279)) & ~0x1F) === 0 && ((1 << (_la - 279)) & ((1 << (EDIF300Parser.T__278 - 279)) | (1 << (EDIF300Parser.T__301 - 279)) | (1 << (EDIF300Parser.T__303 - 279)))) !== 0) || _la === EDIF300Parser.T__332 || _la === EDIF300Parser.T__339 || _la === EDIF300Parser.T__364 || _la === EDIF300Parser.T__451 || _la === EDIF300Parser.T__571 || _la === EDIF300Parser.T__583 || ((((_la - 656)) & ~0x1F) === 0 && ((1 << (_la - 656)) & ((1 << (EDIF300Parser.T__655 - 656)) | (1 << (EDIF300Parser.T__657 - 656)) | (1 << (EDIF300Parser.T__660 - 656)))) !== 0)) {
                    {
                        this.state = 7588;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__5:
                                {
                                    this.state = 7567;
                                    this.ampere();
                                }
                                break;
                            case EDIF300Parser.T__35:
                                {
                                    this.state = 7568;
                                    this.candela();
                                }
                                break;
                            case EDIF300Parser.T__44:
                                {
                                    this.state = 7569;
                                    this.celsius();
                                }
                                break;
                            case EDIF300Parser.T__96:
                                {
                                    this.state = 7570;
                                    this.coulomb();
                                }
                                break;
                            case EDIF300Parser.T__114:
                                {
                                    this.state = 7571;
                                    this.degree();
                                }
                                break;
                            case EDIF300Parser.T__156:
                                {
                                    this.state = 7572;
                                    this.fahrenheit();
                                }
                                break;
                            case EDIF300Parser.T__158:
                                {
                                    this.state = 7573;
                                    this.farad();
                                }
                                break;
                            case EDIF300Parser.T__205:
                                {
                                    this.state = 7574;
                                    this.henry();
                                }
                                break;
                            case EDIF300Parser.T__206:
                                {
                                    this.state = 7575;
                                    this.hertz();
                                }
                                break;
                            case EDIF300Parser.T__278:
                                {
                                    this.state = 7576;
                                    this.joule();
                                }
                                break;
                            case EDIF300Parser.T__301:
                                {
                                    this.state = 7577;
                                    this.kelvin();
                                }
                                break;
                            case EDIF300Parser.T__303:
                                {
                                    this.state = 7578;
                                    this.kilogram();
                                }
                                break;
                            case EDIF300Parser.T__332:
                                {
                                    this.state = 7579;
                                    this.meter();
                                }
                                break;
                            case EDIF300Parser.T__339:
                                {
                                    this.state = 7580;
                                    this.mole();
                                }
                                break;
                            case EDIF300Parser.T__364:
                                {
                                    this.state = 7581;
                                    this.ohm();
                                }
                                break;
                            case EDIF300Parser.T__451:
                                {
                                    this.state = 7582;
                                    this.radian();
                                }
                                break;
                            case EDIF300Parser.T__571:
                                {
                                    this.state = 7583;
                                    this.second();
                                }
                                break;
                            case EDIF300Parser.T__583:
                                {
                                    this.state = 7584;
                                    this.siemens();
                                }
                                break;
                            case EDIF300Parser.T__655:
                                {
                                    this.state = 7585;
                                    this.volt();
                                }
                                break;
                            case EDIF300Parser.T__657:
                                {
                                    this.state = 7586;
                                    this.watt();
                                }
                                break;
                            case EDIF300Parser.T__660:
                                {
                                    this.state = 7587;
                                    this.weber();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7592;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7593;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unitDefinitions = function () {
        var _localctx = new UnitDefinitionsContext(this._ctx, this.state);
        this.enterRule(_localctx, 1568, EDIF300Parser.RULE_unitDefinitions);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7595;
                this.match(EDIF300Parser.T__634);
                this.state = 7599;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__633) {
                    {
                        {
                            this.state = 7596;
                            this.unit();
                        }
                    }
                    this.state = 7601;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7602;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unitExponent = function () {
        var _localctx = new UnitExponentContext(this._ctx, this.state);
        this.enterRule(_localctx, 1570, EDIF300Parser.RULE_unitExponent);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7604;
                this.scaledInteger();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unitNameDef = function () {
        var _localctx = new UnitNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1572, EDIF300Parser.RULE_unitNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7606;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unitNameRef = function () {
        var _localctx = new UnitNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1574, EDIF300Parser.RULE_unitNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7608;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unitRef = function () {
        var _localctx = new UnitRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1576, EDIF300Parser.RULE_unitRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7610;
                this.match(EDIF300Parser.T__635);
                this.state = 7611;
                this.unitNameRef();
                this.state = 7612;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unrestricted = function () {
        var _localctx = new UnrestrictedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1578, EDIF300Parser.RULE_unrestricted);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7614;
                this.match(EDIF300Parser.T__636);
                this.state = 7615;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unspecified = function () {
        var _localctx = new UnspecifiedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1580, EDIF300Parser.RULE_unspecified);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7617;
                this.match(EDIF300Parser.T__637);
                this.state = 7618;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unspecifiedDirectionPort = function () {
        var _localctx = new UnspecifiedDirectionPortContext(this._ctx, this.state);
        this.enterRule(_localctx, 1582, EDIF300Parser.RULE_unspecifiedDirectionPort);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7620;
                this.match(EDIF300Parser.T__638);
                this.state = 7621;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.untyped = function () {
        var _localctx = new UntypedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1584, EDIF300Parser.RULE_untyped);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7623;
                this.match(EDIF300Parser.T__639);
                this.state = 7624;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.unused = function () {
        var _localctx = new UnusedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1586, EDIF300Parser.RULE_unused);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7626;
                this.match(EDIF300Parser.T__640);
                this.state = 7627;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.usableArea = function () {
        var _localctx = new UsableAreaContext(this._ctx, this.state);
        this.enterRule(_localctx, 1588, EDIF300Parser.RULE_usableArea);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7629;
                this.match(EDIF300Parser.T__641);
                this.state = 7633;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__453) {
                    {
                        {
                            this.state = 7630;
                            this.rectangle();
                        }
                    }
                    this.state = 7635;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7636;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.userData = function () {
        var _localctx = new UserDataContext(this._ctx, this.state);
        this.enterRule(_localctx, 1590, EDIF300Parser.RULE_userData);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7638;
                this.match(EDIF300Parser.T__642);
                this.state = 7639;
                this.userDataTag();
                this.state = 7646;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (((((_la - 643)) & ~0x1F) === 0 && ((1 << (_la - 643)) & ((1 << (EDIF300Parser.T__642 - 643)) | (1 << (EDIF300Parser.IDENTIFIER - 643)) | (1 << (EDIF300Parser.STRING_LITERAL - 643)) | (1 << (EDIF300Parser.DECIMAL_LITERAL - 643)))) !== 0)) {
                    {
                        this.state = 7644;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.IDENTIFIER:
                                {
                                    this.state = 7640;
                                    this.match(EDIF300Parser.IDENTIFIER);
                                }
                                break;
                            case EDIF300Parser.DECIMAL_LITERAL:
                                {
                                    this.state = 7641;
                                    this.integerToken();
                                }
                                break;
                            case EDIF300Parser.STRING_LITERAL:
                                {
                                    this.state = 7642;
                                    this.stringToken();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 7643;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7648;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7649;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.userDataTag = function () {
        var _localctx = new UserDataTagContext(this._ctx, this.state);
        this.enterRule(_localctx, 1592, EDIF300Parser.RULE_userDataTag);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7651;
                this.match(EDIF300Parser.IDENTIFIER);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.version = function () {
        var _localctx = new VersionContext(this._ctx, this.state);
        this.enterRule(_localctx, 1594, EDIF300Parser.RULE_version);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7653;
                this.match(EDIF300Parser.T__643);
                this.state = 7654;
                this.stringValue();
                this.state = 7655;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.verticalJustification = function () {
        var _localctx = new VerticalJustificationContext(this._ctx, this.state);
        this.enterRule(_localctx, 1596, EDIF300Parser.RULE_verticalJustification);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7657;
                this.match(EDIF300Parser.T__644);
                this.state = 7663;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__33:
                        {
                            this.state = 7658;
                            this.bottomJustify();
                        }
                        break;
                    case EDIF300Parser.T__15:
                        {
                            this.state = 7659;
                            this.baselineJustify();
                        }
                        break;
                    case EDIF300Parser.T__333:
                        {
                            this.state = 7660;
                            this.middleJustify();
                        }
                        break;
                    case EDIF300Parser.T__36:
                        {
                            this.state = 7661;
                            this.caplineJustify();
                        }
                        break;
                    case EDIF300Parser.T__621:
                        {
                            this.state = 7662;
                            this.topJustify();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 7665;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewGroup = function () {
        var _localctx = new ViewGroupContext(this._ctx, this.state);
        this.enterRule(_localctx, 1598, EDIF300Parser.RULE_viewGroup);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7667;
                this.match(EDIF300Parser.T__645);
                this.state = 7668;
                this.viewGroupNameDef();
                this.state = 7669;
                this.viewGroupHeader();
                this.state = 7676;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || ((((_la - 643)) & ~0x1F) === 0 && ((1 << (_la - 643)) & ((1 << (EDIF300Parser.T__642 - 643)) | (1 << (EDIF300Parser.T__648 - 643)) | (1 << (EDIF300Parser.T__653 - 643)))) !== 0)) {
                    {
                        this.state = 7674;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 7670;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 7671;
                                    this.userData();
                                }
                                break;
                            case EDIF300Parser.T__648:
                                {
                                    this.state = 7672;
                                    this.viewGroupRef();
                                }
                                break;
                            case EDIF300Parser.T__653:
                                {
                                    this.state = 7673;
                                    this.viewRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7678;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7679;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewGroupHeader = function () {
        var _localctx = new ViewGroupHeaderContext(this._ctx, this.state);
        this.enterRule(_localctx, 1600, EDIF300Parser.RULE_viewGroupHeader);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7681;
                this.match(EDIF300Parser.T__646);
                this.state = 7688;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__452) {
                    {
                        this.state = 7686;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__132:
                                {
                                    this.state = 7682;
                                    this.documentation();
                                }
                                break;
                            case EDIF300Parser.T__346:
                                {
                                    this.state = 7683;
                                    this.nameInformation();
                                }
                                break;
                            case EDIF300Parser.T__442:
                                {
                                    this.state = 7684;
                                    this.property();
                                }
                                break;
                            case EDIF300Parser.T__452:
                                {
                                    this.state = 7685;
                                    this.reason();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7690;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7691;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewGroupNameCaseSensitive = function () {
        var _localctx = new ViewGroupNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 1602, EDIF300Parser.RULE_viewGroupNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7693;
                this.match(EDIF300Parser.T__647);
                this.state = 7694;
                this.booleanToken();
                this.state = 7695;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewGroupNameDef = function () {
        var _localctx = new ViewGroupNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1604, EDIF300Parser.RULE_viewGroupNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7697;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewGroupNameRef = function () {
        var _localctx = new ViewGroupNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1606, EDIF300Parser.RULE_viewGroupNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7699;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewGroupRef = function () {
        var _localctx = new ViewGroupRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1608, EDIF300Parser.RULE_viewGroupRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7701;
                this.match(EDIF300Parser.T__648);
                this.state = 7702;
                this.viewGroupNameRef();
                this.state = 7703;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewNameCaseSensitive = function () {
        var _localctx = new ViewNameCaseSensitiveContext(this._ctx, this.state);
        this.enterRule(_localctx, 1610, EDIF300Parser.RULE_viewNameCaseSensitive);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7705;
                this.match(EDIF300Parser.T__649);
                this.state = 7706;
                this.booleanToken();
                this.state = 7707;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewNameDef = function () {
        var _localctx = new ViewNameDefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1612, EDIF300Parser.RULE_viewNameDef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7709;
                this.nameDef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewNameDisplay = function () {
        var _localctx = new ViewNameDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1614, EDIF300Parser.RULE_viewNameDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7711;
                this.match(EDIF300Parser.T__650);
                this.state = 7716;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
                    {
                        this.state = 7714;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 7712;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__131:
                                {
                                    this.state = 7713;
                                    this.displayNameOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7718;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7719;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewNameRef = function () {
        var _localctx = new ViewNameRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1616, EDIF300Parser.RULE_viewNameRef);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7721;
                this.nameRef();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewPropertyDisplay = function () {
        var _localctx = new ViewPropertyDisplayContext(this._ctx, this.state);
        this.enterRule(_localctx, 1618, EDIF300Parser.RULE_viewPropertyDisplay);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7723;
                this.match(EDIF300Parser.T__651);
                this.state = 7724;
                this.propertyNameRef();
                this.state = 7729;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
                    {
                        this.state = 7727;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__128:
                                {
                                    this.state = 7725;
                                    this.display();
                                }
                                break;
                            case EDIF300Parser.T__447:
                                {
                                    this.state = 7726;
                                    this.propertyNameDisplay();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7731;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7732;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewPropertyOverride = function () {
        var _localctx = new ViewPropertyOverrideContext(this._ctx, this.state);
        this.enterRule(_localctx, 1620, EDIF300Parser.RULE_viewPropertyOverride);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7734;
                this.match(EDIF300Parser.T__652);
                this.state = 7735;
                this.propertyNameRef();
                this.state = 7738;
                this._errHandler.sync(this);
                switch (this._input.LA(1)) {
                    case EDIF300Parser.T__23:
                    case EDIF300Parser.T__247:
                    case EDIF300Parser.T__336:
                    case EDIF300Parser.T__356:
                    case EDIF300Parser.T__411:
                    case EDIF300Parser.T__599:
                        {
                            this.state = 7736;
                            this.typedValue();
                        }
                        break;
                    case EDIF300Parser.T__639:
                        {
                            this.state = 7737;
                            this.untyped();
                        }
                        break;
                    default:
                        throw new NoViableAltException_1.NoViableAltException(this);
                }
                this.state = 7745;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
                    {
                        this.state = 7743;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 7740;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__165:
                                {
                                    this.state = 7741;
                                    this.fixed();
                                }
                                break;
                            case EDIF300Parser.T__448:
                                {
                                    this.state = 7742;
                                    this.propertyOverride();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7747;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7748;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.viewRef = function () {
        var _localctx = new ViewRefContext(this._ctx, this.state);
        this.enterRule(_localctx, 1622, EDIF300Parser.RULE_viewRef);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7750;
                this.match(EDIF300Parser.T__653);
                this.state = 7751;
                this.viewNameRef();
                this.state = 7753;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === EDIF300Parser.T__59) {
                    {
                        this.state = 7752;
                        this.clusterRef();
                    }
                }
                this.state = 7755;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.visible = function () {
        var _localctx = new VisibleContext(this._ctx, this.state);
        this.enterRule(_localctx, 1624, EDIF300Parser.RULE_visible);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7757;
                this.match(EDIF300Parser.T__654);
                this.state = 7758;
                this.booleanValue();
                this.state = 7759;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.volt = function () {
        var _localctx = new VoltContext(this._ctx, this.state);
        this.enterRule(_localctx, 1626, EDIF300Parser.RULE_volt);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7761;
                this.match(EDIF300Parser.T__655);
                this.state = 7762;
                this.unitExponent();
                this.state = 7763;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.voltageMap = function () {
        var _localctx = new VoltageMapContext(this._ctx, this.state);
        this.enterRule(_localctx, 1628, EDIF300Parser.RULE_voltageMap);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7765;
                this.match(EDIF300Parser.T__656);
                this.state = 7766;
                this.voltageValue();
                this.state = 7767;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.voltageValue = function () {
        var _localctx = new VoltageValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1630, EDIF300Parser.RULE_voltageValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7769;
                this.miNoMaxValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.watt = function () {
        var _localctx = new WattContext(this._ctx, this.state);
        this.enterRule(_localctx, 1632, EDIF300Parser.RULE_watt);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7771;
                this.match(EDIF300Parser.T__657);
                this.state = 7772;
                this.unitExponent();
                this.state = 7773;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.weak = function () {
        var _localctx = new WeakContext(this._ctx, this.state);
        this.enterRule(_localctx, 1634, EDIF300Parser.RULE_weak);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7775;
                this.match(EDIF300Parser.T__658);
                this.state = 7776;
                this.logicNameRef();
                this.state = 7777;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.weakJoined = function () {
        var _localctx = new WeakJoinedContext(this._ctx, this.state);
        this.enterRule(_localctx, 1636, EDIF300Parser.RULE_weakJoined);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7779;
                this.match(EDIF300Parser.T__659);
                this.state = 7784;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__270 || _la === EDIF300Parser.T__436) {
                    {
                        this.state = 7782;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__270:
                                {
                                    this.state = 7780;
                                    this.interfaceJoined();
                                }
                                break;
                            case EDIF300Parser.T__436:
                                {
                                    this.state = 7781;
                                    this.portRef();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7786;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7787;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.weber = function () {
        var _localctx = new WeberContext(this._ctx, this.state);
        this.enterRule(_localctx, 1638, EDIF300Parser.RULE_weber);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7789;
                this.match(EDIF300Parser.T__660);
                this.state = 7790;
                this.unitExponent();
                this.state = 7791;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.widePort = function () {
        var _localctx = new WidePortContext(this._ctx, this.state);
        this.enterRule(_localctx, 1640, EDIF300Parser.RULE_widePort);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7793;
                this.match(EDIF300Parser.T__661);
                this.state = 7794;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.wideWire = function () {
        var _localctx = new WideWireContext(this._ctx, this.state);
        this.enterRule(_localctx, 1642, EDIF300Parser.RULE_wideWire);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7796;
                this.match(EDIF300Parser.T__662);
                this.state = 7797;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.written = function () {
        var _localctx = new WrittenContext(this._ctx, this.state);
        this.enterRule(_localctx, 1644, EDIF300Parser.RULE_written);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7799;
                this.match(EDIF300Parser.T__663);
                this.state = 7800;
                this.timeStamp();
                this.state = 7808;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.T__13 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__101 || _la === EDIF300Parser.T__441 || _la === EDIF300Parser.T__642) {
                    {
                        this.state = 7806;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case EDIF300Parser.T__13:
                                {
                                    this.state = 7801;
                                    this.author();
                                }
                                break;
                            case EDIF300Parser.T__61:
                                {
                                    this.state = 7802;
                                    this.comment();
                                }
                                break;
                            case EDIF300Parser.T__101:
                                {
                                    this.state = 7803;
                                    this.dataOrigin();
                                }
                                break;
                            case EDIF300Parser.T__441:
                                {
                                    this.state = 7804;
                                    this.program();
                                }
                                break;
                            case EDIF300Parser.T__642:
                                {
                                    this.state = 7805;
                                    this.userData();
                                }
                                break;
                            default:
                                throw new NoViableAltException_1.NoViableAltException(this);
                        }
                    }
                    this.state = 7810;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7811;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.xCoordinate = function () {
        var _localctx = new XCoordinateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1646, EDIF300Parser.RULE_xCoordinate);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7813;
                this.integerValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.xNumberValue = function () {
        var _localctx = new XNumberValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1648, EDIF300Parser.RULE_xNumberValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7815;
                this.numberValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.xor_ = function () {
        var _localctx = new Xor_Context(this._ctx, this.state);
        this.enterRule(_localctx, 1650, EDIF300Parser.RULE_xor_);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7817;
                this.match(EDIF300Parser.T__664);
                this.state = 7821;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << EDIF300Parser.T__6) | (1 << EDIF300Parser.T__25) | (1 << EDIF300Parser.T__29))) !== 0) || _la === EDIF300Parser.T__157 || _la === EDIF300Parser.T__250 || _la === EDIF300Parser.T__307 || _la === EDIF300Parser.T__308 || _la === EDIF300Parser.T__354 || _la === EDIF300Parser.T__366 || _la === EDIF300Parser.T__603 || _la === EDIF300Parser.T__626 || _la === EDIF300Parser.T__664) {
                    {
                        {
                            this.state = 7818;
                            this.booleanExpression();
                        }
                    }
                    this.state = 7823;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7824;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.yCoordinate = function () {
        var _localctx = new YCoordinateContext(this._ctx, this.state);
        this.enterRule(_localctx, 1652, EDIF300Parser.RULE_yCoordinate);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7826;
                this.integerValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.year = function () {
        var _localctx = new YearContext(this._ctx, this.state);
        this.enterRule(_localctx, 1654, EDIF300Parser.RULE_year);
        var _la;
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7828;
                this.match(EDIF300Parser.T__665);
                this.state = 7832;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while (_la === EDIF300Parser.DECIMAL_LITERAL) {
                    {
                        {
                            this.state = 7829;
                            this.yearNumber();
                        }
                    }
                    this.state = 7834;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 7835;
                this.match(EDIF300Parser.T__1);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.yearNumber = function () {
        var _localctx = new YearNumberContext(this._ctx, this.state);
        this.enterRule(_localctx, 1656, EDIF300Parser.RULE_yearNumber);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7837;
                this.integerToken();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.yNumberValue = function () {
        var _localctx = new YNumberValueContext(this._ctx, this.state);
        this.enterRule(_localctx, 1658, EDIF300Parser.RULE_yNumberValue);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7839;
                this.numberValue();
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.integerToken = function () {
        var _localctx = new IntegerTokenContext(this._ctx, this.state);
        this.enterRule(_localctx, 1660, EDIF300Parser.RULE_integerToken);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7841;
                this.match(EDIF300Parser.DECIMAL_LITERAL);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    // @RuleVersion(0)
    EDIF300Parser.prototype.stringToken = function () {
        var _localctx = new StringTokenContext(this._ctx, this.state);
        this.enterRule(_localctx, 1662, EDIF300Parser.RULE_stringToken);
        try {
            this.enterOuterAlt(_localctx, 1);
            {
                this.state = 7843;
                this.match(EDIF300Parser.STRING_LITERAL);
            }
        }
        catch (re) {
            if (re instanceof RecognitionException_1.RecognitionException) {
                _localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return _localctx;
    };
    Object.defineProperty(EDIF300Parser, "_ATN", {
        get: function () {
            if (!EDIF300Parser.__ATN) {
                EDIF300Parser.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(EDIF300Parser._serializedATN));
            }
            return EDIF300Parser.__ATN;
        },
        enumerable: true,
        configurable: true
    });
    EDIF300Parser.T__0 = 1;
    EDIF300Parser.T__1 = 2;
    EDIF300Parser.T__2 = 3;
    EDIF300Parser.T__3 = 4;
    EDIF300Parser.T__4 = 5;
    EDIF300Parser.T__5 = 6;
    EDIF300Parser.T__6 = 7;
    EDIF300Parser.T__7 = 8;
    EDIF300Parser.T__8 = 9;
    EDIF300Parser.T__9 = 10;
    EDIF300Parser.T__10 = 11;
    EDIF300Parser.T__11 = 12;
    EDIF300Parser.T__12 = 13;
    EDIF300Parser.T__13 = 14;
    EDIF300Parser.T__14 = 15;
    EDIF300Parser.T__15 = 16;
    EDIF300Parser.T__16 = 17;
    EDIF300Parser.T__17 = 18;
    EDIF300Parser.T__18 = 19;
    EDIF300Parser.T__19 = 20;
    EDIF300Parser.T__20 = 21;
    EDIF300Parser.T__21 = 22;
    EDIF300Parser.T__22 = 23;
    EDIF300Parser.T__23 = 24;
    EDIF300Parser.T__24 = 25;
    EDIF300Parser.T__25 = 26;
    EDIF300Parser.T__26 = 27;
    EDIF300Parser.T__27 = 28;
    EDIF300Parser.T__28 = 29;
    EDIF300Parser.T__29 = 30;
    EDIF300Parser.T__30 = 31;
    EDIF300Parser.T__31 = 32;
    EDIF300Parser.T__32 = 33;
    EDIF300Parser.T__33 = 34;
    EDIF300Parser.T__34 = 35;
    EDIF300Parser.T__35 = 36;
    EDIF300Parser.T__36 = 37;
    EDIF300Parser.T__37 = 38;
    EDIF300Parser.T__38 = 39;
    EDIF300Parser.T__39 = 40;
    EDIF300Parser.T__40 = 41;
    EDIF300Parser.T__41 = 42;
    EDIF300Parser.T__42 = 43;
    EDIF300Parser.T__43 = 44;
    EDIF300Parser.T__44 = 45;
    EDIF300Parser.T__45 = 46;
    EDIF300Parser.T__46 = 47;
    EDIF300Parser.T__47 = 48;
    EDIF300Parser.T__48 = 49;
    EDIF300Parser.T__49 = 50;
    EDIF300Parser.T__50 = 51;
    EDIF300Parser.T__51 = 52;
    EDIF300Parser.T__52 = 53;
    EDIF300Parser.T__53 = 54;
    EDIF300Parser.T__54 = 55;
    EDIF300Parser.T__55 = 56;
    EDIF300Parser.T__56 = 57;
    EDIF300Parser.T__57 = 58;
    EDIF300Parser.T__58 = 59;
    EDIF300Parser.T__59 = 60;
    EDIF300Parser.T__60 = 61;
    EDIF300Parser.T__61 = 62;
    EDIF300Parser.T__62 = 63;
    EDIF300Parser.T__63 = 64;
    EDIF300Parser.T__64 = 65;
    EDIF300Parser.T__65 = 66;
    EDIF300Parser.T__66 = 67;
    EDIF300Parser.T__67 = 68;
    EDIF300Parser.T__68 = 69;
    EDIF300Parser.T__69 = 70;
    EDIF300Parser.T__70 = 71;
    EDIF300Parser.T__71 = 72;
    EDIF300Parser.T__72 = 73;
    EDIF300Parser.T__73 = 74;
    EDIF300Parser.T__74 = 75;
    EDIF300Parser.T__75 = 76;
    EDIF300Parser.T__76 = 77;
    EDIF300Parser.T__77 = 78;
    EDIF300Parser.T__78 = 79;
    EDIF300Parser.T__79 = 80;
    EDIF300Parser.T__80 = 81;
    EDIF300Parser.T__81 = 82;
    EDIF300Parser.T__82 = 83;
    EDIF300Parser.T__83 = 84;
    EDIF300Parser.T__84 = 85;
    EDIF300Parser.T__85 = 86;
    EDIF300Parser.T__86 = 87;
    EDIF300Parser.T__87 = 88;
    EDIF300Parser.T__88 = 89;
    EDIF300Parser.T__89 = 90;
    EDIF300Parser.T__90 = 91;
    EDIF300Parser.T__91 = 92;
    EDIF300Parser.T__92 = 93;
    EDIF300Parser.T__93 = 94;
    EDIF300Parser.T__94 = 95;
    EDIF300Parser.T__95 = 96;
    EDIF300Parser.T__96 = 97;
    EDIF300Parser.T__97 = 98;
    EDIF300Parser.T__98 = 99;
    EDIF300Parser.T__99 = 100;
    EDIF300Parser.T__100 = 101;
    EDIF300Parser.T__101 = 102;
    EDIF300Parser.T__102 = 103;
    EDIF300Parser.T__103 = 104;
    EDIF300Parser.T__104 = 105;
    EDIF300Parser.T__105 = 106;
    EDIF300Parser.T__106 = 107;
    EDIF300Parser.T__107 = 108;
    EDIF300Parser.T__108 = 109;
    EDIF300Parser.T__109 = 110;
    EDIF300Parser.T__110 = 111;
    EDIF300Parser.T__111 = 112;
    EDIF300Parser.T__112 = 113;
    EDIF300Parser.T__113 = 114;
    EDIF300Parser.T__114 = 115;
    EDIF300Parser.T__115 = 116;
    EDIF300Parser.T__116 = 117;
    EDIF300Parser.T__117 = 118;
    EDIF300Parser.T__118 = 119;
    EDIF300Parser.T__119 = 120;
    EDIF300Parser.T__120 = 121;
    EDIF300Parser.T__121 = 122;
    EDIF300Parser.T__122 = 123;
    EDIF300Parser.T__123 = 124;
    EDIF300Parser.T__124 = 125;
    EDIF300Parser.T__125 = 126;
    EDIF300Parser.T__126 = 127;
    EDIF300Parser.T__127 = 128;
    EDIF300Parser.T__128 = 129;
    EDIF300Parser.T__129 = 130;
    EDIF300Parser.T__130 = 131;
    EDIF300Parser.T__131 = 132;
    EDIF300Parser.T__132 = 133;
    EDIF300Parser.T__133 = 134;
    EDIF300Parser.T__134 = 135;
    EDIF300Parser.T__135 = 136;
    EDIF300Parser.T__136 = 137;
    EDIF300Parser.T__137 = 138;
    EDIF300Parser.T__138 = 139;
    EDIF300Parser.T__139 = 140;
    EDIF300Parser.T__140 = 141;
    EDIF300Parser.T__141 = 142;
    EDIF300Parser.T__142 = 143;
    EDIF300Parser.T__143 = 144;
    EDIF300Parser.T__144 = 145;
    EDIF300Parser.T__145 = 146;
    EDIF300Parser.T__146 = 147;
    EDIF300Parser.T__147 = 148;
    EDIF300Parser.T__148 = 149;
    EDIF300Parser.T__149 = 150;
    EDIF300Parser.T__150 = 151;
    EDIF300Parser.T__151 = 152;
    EDIF300Parser.T__152 = 153;
    EDIF300Parser.T__153 = 154;
    EDIF300Parser.T__154 = 155;
    EDIF300Parser.T__155 = 156;
    EDIF300Parser.T__156 = 157;
    EDIF300Parser.T__157 = 158;
    EDIF300Parser.T__158 = 159;
    EDIF300Parser.T__159 = 160;
    EDIF300Parser.T__160 = 161;
    EDIF300Parser.T__161 = 162;
    EDIF300Parser.T__162 = 163;
    EDIF300Parser.T__163 = 164;
    EDIF300Parser.T__164 = 165;
    EDIF300Parser.T__165 = 166;
    EDIF300Parser.T__166 = 167;
    EDIF300Parser.T__167 = 168;
    EDIF300Parser.T__168 = 169;
    EDIF300Parser.T__169 = 170;
    EDIF300Parser.T__170 = 171;
    EDIF300Parser.T__171 = 172;
    EDIF300Parser.T__172 = 173;
    EDIF300Parser.T__173 = 174;
    EDIF300Parser.T__174 = 175;
    EDIF300Parser.T__175 = 176;
    EDIF300Parser.T__176 = 177;
    EDIF300Parser.T__177 = 178;
    EDIF300Parser.T__178 = 179;
    EDIF300Parser.T__179 = 180;
    EDIF300Parser.T__180 = 181;
    EDIF300Parser.T__181 = 182;
    EDIF300Parser.T__182 = 183;
    EDIF300Parser.T__183 = 184;
    EDIF300Parser.T__184 = 185;
    EDIF300Parser.T__185 = 186;
    EDIF300Parser.T__186 = 187;
    EDIF300Parser.T__187 = 188;
    EDIF300Parser.T__188 = 189;
    EDIF300Parser.T__189 = 190;
    EDIF300Parser.T__190 = 191;
    EDIF300Parser.T__191 = 192;
    EDIF300Parser.T__192 = 193;
    EDIF300Parser.T__193 = 194;
    EDIF300Parser.T__194 = 195;
    EDIF300Parser.T__195 = 196;
    EDIF300Parser.T__196 = 197;
    EDIF300Parser.T__197 = 198;
    EDIF300Parser.T__198 = 199;
    EDIF300Parser.T__199 = 200;
    EDIF300Parser.T__200 = 201;
    EDIF300Parser.T__201 = 202;
    EDIF300Parser.T__202 = 203;
    EDIF300Parser.T__203 = 204;
    EDIF300Parser.T__204 = 205;
    EDIF300Parser.T__205 = 206;
    EDIF300Parser.T__206 = 207;
    EDIF300Parser.T__207 = 208;
    EDIF300Parser.T__208 = 209;
    EDIF300Parser.T__209 = 210;
    EDIF300Parser.T__210 = 211;
    EDIF300Parser.T__211 = 212;
    EDIF300Parser.T__212 = 213;
    EDIF300Parser.T__213 = 214;
    EDIF300Parser.T__214 = 215;
    EDIF300Parser.T__215 = 216;
    EDIF300Parser.T__216 = 217;
    EDIF300Parser.T__217 = 218;
    EDIF300Parser.T__218 = 219;
    EDIF300Parser.T__219 = 220;
    EDIF300Parser.T__220 = 221;
    EDIF300Parser.T__221 = 222;
    EDIF300Parser.T__222 = 223;
    EDIF300Parser.T__223 = 224;
    EDIF300Parser.T__224 = 225;
    EDIF300Parser.T__225 = 226;
    EDIF300Parser.T__226 = 227;
    EDIF300Parser.T__227 = 228;
    EDIF300Parser.T__228 = 229;
    EDIF300Parser.T__229 = 230;
    EDIF300Parser.T__230 = 231;
    EDIF300Parser.T__231 = 232;
    EDIF300Parser.T__232 = 233;
    EDIF300Parser.T__233 = 234;
    EDIF300Parser.T__234 = 235;
    EDIF300Parser.T__235 = 236;
    EDIF300Parser.T__236 = 237;
    EDIF300Parser.T__237 = 238;
    EDIF300Parser.T__238 = 239;
    EDIF300Parser.T__239 = 240;
    EDIF300Parser.T__240 = 241;
    EDIF300Parser.T__241 = 242;
    EDIF300Parser.T__242 = 243;
    EDIF300Parser.T__243 = 244;
    EDIF300Parser.T__244 = 245;
    EDIF300Parser.T__245 = 246;
    EDIF300Parser.T__246 = 247;
    EDIF300Parser.T__247 = 248;
    EDIF300Parser.T__248 = 249;
    EDIF300Parser.T__249 = 250;
    EDIF300Parser.T__250 = 251;
    EDIF300Parser.T__251 = 252;
    EDIF300Parser.T__252 = 253;
    EDIF300Parser.T__253 = 254;
    EDIF300Parser.T__254 = 255;
    EDIF300Parser.T__255 = 256;
    EDIF300Parser.T__256 = 257;
    EDIF300Parser.T__257 = 258;
    EDIF300Parser.T__258 = 259;
    EDIF300Parser.T__259 = 260;
    EDIF300Parser.T__260 = 261;
    EDIF300Parser.T__261 = 262;
    EDIF300Parser.T__262 = 263;
    EDIF300Parser.T__263 = 264;
    EDIF300Parser.T__264 = 265;
    EDIF300Parser.T__265 = 266;
    EDIF300Parser.T__266 = 267;
    EDIF300Parser.T__267 = 268;
    EDIF300Parser.T__268 = 269;
    EDIF300Parser.T__269 = 270;
    EDIF300Parser.T__270 = 271;
    EDIF300Parser.T__271 = 272;
    EDIF300Parser.T__272 = 273;
    EDIF300Parser.T__273 = 274;
    EDIF300Parser.T__274 = 275;
    EDIF300Parser.T__275 = 276;
    EDIF300Parser.T__276 = 277;
    EDIF300Parser.T__277 = 278;
    EDIF300Parser.T__278 = 279;
    EDIF300Parser.T__279 = 280;
    EDIF300Parser.T__280 = 281;
    EDIF300Parser.T__281 = 282;
    EDIF300Parser.T__282 = 283;
    EDIF300Parser.T__283 = 284;
    EDIF300Parser.T__284 = 285;
    EDIF300Parser.T__285 = 286;
    EDIF300Parser.T__286 = 287;
    EDIF300Parser.T__287 = 288;
    EDIF300Parser.T__288 = 289;
    EDIF300Parser.T__289 = 290;
    EDIF300Parser.T__290 = 291;
    EDIF300Parser.T__291 = 292;
    EDIF300Parser.T__292 = 293;
    EDIF300Parser.T__293 = 294;
    EDIF300Parser.T__294 = 295;
    EDIF300Parser.T__295 = 296;
    EDIF300Parser.T__296 = 297;
    EDIF300Parser.T__297 = 298;
    EDIF300Parser.T__298 = 299;
    EDIF300Parser.T__299 = 300;
    EDIF300Parser.T__300 = 301;
    EDIF300Parser.T__301 = 302;
    EDIF300Parser.T__302 = 303;
    EDIF300Parser.T__303 = 304;
    EDIF300Parser.T__304 = 305;
    EDIF300Parser.T__305 = 306;
    EDIF300Parser.T__306 = 307;
    EDIF300Parser.T__307 = 308;
    EDIF300Parser.T__308 = 309;
    EDIF300Parser.T__309 = 310;
    EDIF300Parser.T__310 = 311;
    EDIF300Parser.T__311 = 312;
    EDIF300Parser.T__312 = 313;
    EDIF300Parser.T__313 = 314;
    EDIF300Parser.T__314 = 315;
    EDIF300Parser.T__315 = 316;
    EDIF300Parser.T__316 = 317;
    EDIF300Parser.T__317 = 318;
    EDIF300Parser.T__318 = 319;
    EDIF300Parser.T__319 = 320;
    EDIF300Parser.T__320 = 321;
    EDIF300Parser.T__321 = 322;
    EDIF300Parser.T__322 = 323;
    EDIF300Parser.T__323 = 324;
    EDIF300Parser.T__324 = 325;
    EDIF300Parser.T__325 = 326;
    EDIF300Parser.T__326 = 327;
    EDIF300Parser.T__327 = 328;
    EDIF300Parser.T__328 = 329;
    EDIF300Parser.T__329 = 330;
    EDIF300Parser.T__330 = 331;
    EDIF300Parser.T__331 = 332;
    EDIF300Parser.T__332 = 333;
    EDIF300Parser.T__333 = 334;
    EDIF300Parser.T__334 = 335;
    EDIF300Parser.T__335 = 336;
    EDIF300Parser.T__336 = 337;
    EDIF300Parser.T__337 = 338;
    EDIF300Parser.T__338 = 339;
    EDIF300Parser.T__339 = 340;
    EDIF300Parser.T__340 = 341;
    EDIF300Parser.T__341 = 342;
    EDIF300Parser.T__342 = 343;
    EDIF300Parser.T__343 = 344;
    EDIF300Parser.T__344 = 345;
    EDIF300Parser.T__345 = 346;
    EDIF300Parser.T__346 = 347;
    EDIF300Parser.T__347 = 348;
    EDIF300Parser.T__348 = 349;
    EDIF300Parser.T__349 = 350;
    EDIF300Parser.T__350 = 351;
    EDIF300Parser.T__351 = 352;
    EDIF300Parser.T__352 = 353;
    EDIF300Parser.T__353 = 354;
    EDIF300Parser.T__354 = 355;
    EDIF300Parser.T__355 = 356;
    EDIF300Parser.T__356 = 357;
    EDIF300Parser.T__357 = 358;
    EDIF300Parser.T__358 = 359;
    EDIF300Parser.T__359 = 360;
    EDIF300Parser.T__360 = 361;
    EDIF300Parser.T__361 = 362;
    EDIF300Parser.T__362 = 363;
    EDIF300Parser.T__363 = 364;
    EDIF300Parser.T__364 = 365;
    EDIF300Parser.T__365 = 366;
    EDIF300Parser.T__366 = 367;
    EDIF300Parser.T__367 = 368;
    EDIF300Parser.T__368 = 369;
    EDIF300Parser.T__369 = 370;
    EDIF300Parser.T__370 = 371;
    EDIF300Parser.T__371 = 372;
    EDIF300Parser.T__372 = 373;
    EDIF300Parser.T__373 = 374;
    EDIF300Parser.T__374 = 375;
    EDIF300Parser.T__375 = 376;
    EDIF300Parser.T__376 = 377;
    EDIF300Parser.T__377 = 378;
    EDIF300Parser.T__378 = 379;
    EDIF300Parser.T__379 = 380;
    EDIF300Parser.T__380 = 381;
    EDIF300Parser.T__381 = 382;
    EDIF300Parser.T__382 = 383;
    EDIF300Parser.T__383 = 384;
    EDIF300Parser.T__384 = 385;
    EDIF300Parser.T__385 = 386;
    EDIF300Parser.T__386 = 387;
    EDIF300Parser.T__387 = 388;
    EDIF300Parser.T__388 = 389;
    EDIF300Parser.T__389 = 390;
    EDIF300Parser.T__390 = 391;
    EDIF300Parser.T__391 = 392;
    EDIF300Parser.T__392 = 393;
    EDIF300Parser.T__393 = 394;
    EDIF300Parser.T__394 = 395;
    EDIF300Parser.T__395 = 396;
    EDIF300Parser.T__396 = 397;
    EDIF300Parser.T__397 = 398;
    EDIF300Parser.T__398 = 399;
    EDIF300Parser.T__399 = 400;
    EDIF300Parser.T__400 = 401;
    EDIF300Parser.T__401 = 402;
    EDIF300Parser.T__402 = 403;
    EDIF300Parser.T__403 = 404;
    EDIF300Parser.T__404 = 405;
    EDIF300Parser.T__405 = 406;
    EDIF300Parser.T__406 = 407;
    EDIF300Parser.T__407 = 408;
    EDIF300Parser.T__408 = 409;
    EDIF300Parser.T__409 = 410;
    EDIF300Parser.T__410 = 411;
    EDIF300Parser.T__411 = 412;
    EDIF300Parser.T__412 = 413;
    EDIF300Parser.T__413 = 414;
    EDIF300Parser.T__414 = 415;
    EDIF300Parser.T__415 = 416;
    EDIF300Parser.T__416 = 417;
    EDIF300Parser.T__417 = 418;
    EDIF300Parser.T__418 = 419;
    EDIF300Parser.T__419 = 420;
    EDIF300Parser.T__420 = 421;
    EDIF300Parser.T__421 = 422;
    EDIF300Parser.T__422 = 423;
    EDIF300Parser.T__423 = 424;
    EDIF300Parser.T__424 = 425;
    EDIF300Parser.T__425 = 426;
    EDIF300Parser.T__426 = 427;
    EDIF300Parser.T__427 = 428;
    EDIF300Parser.T__428 = 429;
    EDIF300Parser.T__429 = 430;
    EDIF300Parser.T__430 = 431;
    EDIF300Parser.T__431 = 432;
    EDIF300Parser.T__432 = 433;
    EDIF300Parser.T__433 = 434;
    EDIF300Parser.T__434 = 435;
    EDIF300Parser.T__435 = 436;
    EDIF300Parser.T__436 = 437;
    EDIF300Parser.T__437 = 438;
    EDIF300Parser.T__438 = 439;
    EDIF300Parser.T__439 = 440;
    EDIF300Parser.T__440 = 441;
    EDIF300Parser.T__441 = 442;
    EDIF300Parser.T__442 = 443;
    EDIF300Parser.T__443 = 444;
    EDIF300Parser.T__444 = 445;
    EDIF300Parser.T__445 = 446;
    EDIF300Parser.T__446 = 447;
    EDIF300Parser.T__447 = 448;
    EDIF300Parser.T__448 = 449;
    EDIF300Parser.T__449 = 450;
    EDIF300Parser.T__450 = 451;
    EDIF300Parser.T__451 = 452;
    EDIF300Parser.T__452 = 453;
    EDIF300Parser.T__453 = 454;
    EDIF300Parser.T__454 = 455;
    EDIF300Parser.T__455 = 456;
    EDIF300Parser.T__456 = 457;
    EDIF300Parser.T__457 = 458;
    EDIF300Parser.T__458 = 459;
    EDIF300Parser.T__459 = 460;
    EDIF300Parser.T__460 = 461;
    EDIF300Parser.T__461 = 462;
    EDIF300Parser.T__462 = 463;
    EDIF300Parser.T__463 = 464;
    EDIF300Parser.T__464 = 465;
    EDIF300Parser.T__465 = 466;
    EDIF300Parser.T__466 = 467;
    EDIF300Parser.T__467 = 468;
    EDIF300Parser.T__468 = 469;
    EDIF300Parser.T__469 = 470;
    EDIF300Parser.T__470 = 471;
    EDIF300Parser.T__471 = 472;
    EDIF300Parser.T__472 = 473;
    EDIF300Parser.T__473 = 474;
    EDIF300Parser.T__474 = 475;
    EDIF300Parser.T__475 = 476;
    EDIF300Parser.T__476 = 477;
    EDIF300Parser.T__477 = 478;
    EDIF300Parser.T__478 = 479;
    EDIF300Parser.T__479 = 480;
    EDIF300Parser.T__480 = 481;
    EDIF300Parser.T__481 = 482;
    EDIF300Parser.T__482 = 483;
    EDIF300Parser.T__483 = 484;
    EDIF300Parser.T__484 = 485;
    EDIF300Parser.T__485 = 486;
    EDIF300Parser.T__486 = 487;
    EDIF300Parser.T__487 = 488;
    EDIF300Parser.T__488 = 489;
    EDIF300Parser.T__489 = 490;
    EDIF300Parser.T__490 = 491;
    EDIF300Parser.T__491 = 492;
    EDIF300Parser.T__492 = 493;
    EDIF300Parser.T__493 = 494;
    EDIF300Parser.T__494 = 495;
    EDIF300Parser.T__495 = 496;
    EDIF300Parser.T__496 = 497;
    EDIF300Parser.T__497 = 498;
    EDIF300Parser.T__498 = 499;
    EDIF300Parser.T__499 = 500;
    EDIF300Parser.T__500 = 501;
    EDIF300Parser.T__501 = 502;
    EDIF300Parser.T__502 = 503;
    EDIF300Parser.T__503 = 504;
    EDIF300Parser.T__504 = 505;
    EDIF300Parser.T__505 = 506;
    EDIF300Parser.T__506 = 507;
    EDIF300Parser.T__507 = 508;
    EDIF300Parser.T__508 = 509;
    EDIF300Parser.T__509 = 510;
    EDIF300Parser.T__510 = 511;
    EDIF300Parser.T__511 = 512;
    EDIF300Parser.T__512 = 513;
    EDIF300Parser.T__513 = 514;
    EDIF300Parser.T__514 = 515;
    EDIF300Parser.T__515 = 516;
    EDIF300Parser.T__516 = 517;
    EDIF300Parser.T__517 = 518;
    EDIF300Parser.T__518 = 519;
    EDIF300Parser.T__519 = 520;
    EDIF300Parser.T__520 = 521;
    EDIF300Parser.T__521 = 522;
    EDIF300Parser.T__522 = 523;
    EDIF300Parser.T__523 = 524;
    EDIF300Parser.T__524 = 525;
    EDIF300Parser.T__525 = 526;
    EDIF300Parser.T__526 = 527;
    EDIF300Parser.T__527 = 528;
    EDIF300Parser.T__528 = 529;
    EDIF300Parser.T__529 = 530;
    EDIF300Parser.T__530 = 531;
    EDIF300Parser.T__531 = 532;
    EDIF300Parser.T__532 = 533;
    EDIF300Parser.T__533 = 534;
    EDIF300Parser.T__534 = 535;
    EDIF300Parser.T__535 = 536;
    EDIF300Parser.T__536 = 537;
    EDIF300Parser.T__537 = 538;
    EDIF300Parser.T__538 = 539;
    EDIF300Parser.T__539 = 540;
    EDIF300Parser.T__540 = 541;
    EDIF300Parser.T__541 = 542;
    EDIF300Parser.T__542 = 543;
    EDIF300Parser.T__543 = 544;
    EDIF300Parser.T__544 = 545;
    EDIF300Parser.T__545 = 546;
    EDIF300Parser.T__546 = 547;
    EDIF300Parser.T__547 = 548;
    EDIF300Parser.T__548 = 549;
    EDIF300Parser.T__549 = 550;
    EDIF300Parser.T__550 = 551;
    EDIF300Parser.T__551 = 552;
    EDIF300Parser.T__552 = 553;
    EDIF300Parser.T__553 = 554;
    EDIF300Parser.T__554 = 555;
    EDIF300Parser.T__555 = 556;
    EDIF300Parser.T__556 = 557;
    EDIF300Parser.T__557 = 558;
    EDIF300Parser.T__558 = 559;
    EDIF300Parser.T__559 = 560;
    EDIF300Parser.T__560 = 561;
    EDIF300Parser.T__561 = 562;
    EDIF300Parser.T__562 = 563;
    EDIF300Parser.T__563 = 564;
    EDIF300Parser.T__564 = 565;
    EDIF300Parser.T__565 = 566;
    EDIF300Parser.T__566 = 567;
    EDIF300Parser.T__567 = 568;
    EDIF300Parser.T__568 = 569;
    EDIF300Parser.T__569 = 570;
    EDIF300Parser.T__570 = 571;
    EDIF300Parser.T__571 = 572;
    EDIF300Parser.T__572 = 573;
    EDIF300Parser.T__573 = 574;
    EDIF300Parser.T__574 = 575;
    EDIF300Parser.T__575 = 576;
    EDIF300Parser.T__576 = 577;
    EDIF300Parser.T__577 = 578;
    EDIF300Parser.T__578 = 579;
    EDIF300Parser.T__579 = 580;
    EDIF300Parser.T__580 = 581;
    EDIF300Parser.T__581 = 582;
    EDIF300Parser.T__582 = 583;
    EDIF300Parser.T__583 = 584;
    EDIF300Parser.T__584 = 585;
    EDIF300Parser.T__585 = 586;
    EDIF300Parser.T__586 = 587;
    EDIF300Parser.T__587 = 588;
    EDIF300Parser.T__588 = 589;
    EDIF300Parser.T__589 = 590;
    EDIF300Parser.T__590 = 591;
    EDIF300Parser.T__591 = 592;
    EDIF300Parser.T__592 = 593;
    EDIF300Parser.T__593 = 594;
    EDIF300Parser.T__594 = 595;
    EDIF300Parser.T__595 = 596;
    EDIF300Parser.T__596 = 597;
    EDIF300Parser.T__597 = 598;
    EDIF300Parser.T__598 = 599;
    EDIF300Parser.T__599 = 600;
    EDIF300Parser.T__600 = 601;
    EDIF300Parser.T__601 = 602;
    EDIF300Parser.T__602 = 603;
    EDIF300Parser.T__603 = 604;
    EDIF300Parser.T__604 = 605;
    EDIF300Parser.T__605 = 606;
    EDIF300Parser.T__606 = 607;
    EDIF300Parser.T__607 = 608;
    EDIF300Parser.T__608 = 609;
    EDIF300Parser.T__609 = 610;
    EDIF300Parser.T__610 = 611;
    EDIF300Parser.T__611 = 612;
    EDIF300Parser.T__612 = 613;
    EDIF300Parser.T__613 = 614;
    EDIF300Parser.T__614 = 615;
    EDIF300Parser.T__615 = 616;
    EDIF300Parser.T__616 = 617;
    EDIF300Parser.T__617 = 618;
    EDIF300Parser.T__618 = 619;
    EDIF300Parser.T__619 = 620;
    EDIF300Parser.T__620 = 621;
    EDIF300Parser.T__621 = 622;
    EDIF300Parser.T__622 = 623;
    EDIF300Parser.T__623 = 624;
    EDIF300Parser.T__624 = 625;
    EDIF300Parser.T__625 = 626;
    EDIF300Parser.T__626 = 627;
    EDIF300Parser.T__627 = 628;
    EDIF300Parser.T__628 = 629;
    EDIF300Parser.T__629 = 630;
    EDIF300Parser.T__630 = 631;
    EDIF300Parser.T__631 = 632;
    EDIF300Parser.T__632 = 633;
    EDIF300Parser.T__633 = 634;
    EDIF300Parser.T__634 = 635;
    EDIF300Parser.T__635 = 636;
    EDIF300Parser.T__636 = 637;
    EDIF300Parser.T__637 = 638;
    EDIF300Parser.T__638 = 639;
    EDIF300Parser.T__639 = 640;
    EDIF300Parser.T__640 = 641;
    EDIF300Parser.T__641 = 642;
    EDIF300Parser.T__642 = 643;
    EDIF300Parser.T__643 = 644;
    EDIF300Parser.T__644 = 645;
    EDIF300Parser.T__645 = 646;
    EDIF300Parser.T__646 = 647;
    EDIF300Parser.T__647 = 648;
    EDIF300Parser.T__648 = 649;
    EDIF300Parser.T__649 = 650;
    EDIF300Parser.T__650 = 651;
    EDIF300Parser.T__651 = 652;
    EDIF300Parser.T__652 = 653;
    EDIF300Parser.T__653 = 654;
    EDIF300Parser.T__654 = 655;
    EDIF300Parser.T__655 = 656;
    EDIF300Parser.T__656 = 657;
    EDIF300Parser.T__657 = 658;
    EDIF300Parser.T__658 = 659;
    EDIF300Parser.T__659 = 660;
    EDIF300Parser.T__660 = 661;
    EDIF300Parser.T__661 = 662;
    EDIF300Parser.T__662 = 663;
    EDIF300Parser.T__663 = 664;
    EDIF300Parser.T__664 = 665;
    EDIF300Parser.T__665 = 666;
    EDIF300Parser.IDENTIFIER = 667;
    EDIF300Parser.STRING_LITERAL = 668;
    EDIF300Parser.DECIMAL_LITERAL = 669;
    EDIF300Parser.WS = 670;
    EDIF300Parser.RULE_goal = 0;
    EDIF300Parser.RULE_absolute = 1;
    EDIF300Parser.RULE_acLoad = 2;
    EDIF300Parser.RULE_acLoadDisplay = 3;
    EDIF300Parser.RULE_acLoadFactorCapacitance = 4;
    EDIF300Parser.RULE_acLoadFactorTime = 5;
    EDIF300Parser.RULE_addDisplay = 6;
    EDIF300Parser.RULE_ampere = 7;
    EDIF300Parser.RULE_and_ = 8;
    EDIF300Parser.RULE_angleValue = 9;
    EDIF300Parser.RULE_annotate = 10;
    EDIF300Parser.RULE_approvedDate = 11;
    EDIF300Parser.RULE_approvedDateDisplay = 12;
    EDIF300Parser.RULE_arc = 13;
    EDIF300Parser.RULE_ascii = 14;
    EDIF300Parser.RULE_associatedInterconnectNameDisplay = 15;
    EDIF300Parser.RULE_attachmentPoint = 16;
    EDIF300Parser.RULE_author = 17;
    EDIF300Parser.RULE_backgroundColor = 18;
    EDIF300Parser.RULE_baselineJustify = 19;
    EDIF300Parser.RULE_becomes = 20;
    EDIF300Parser.RULE_behaviorView = 21;
    EDIF300Parser.RULE_bidirectional = 22;
    EDIF300Parser.RULE_bidirectionalPort = 23;
    EDIF300Parser.RULE_bidirectionalPortAttributes = 24;
    EDIF300Parser.RULE_bitOrder = 25;
    EDIF300Parser.RULE_blue = 26;
    EDIF300Parser.RULE_boldStyle = 27;
    EDIF300Parser.RULE_eboolean = 28;
    EDIF300Parser.RULE_booleanConstant = 29;
    EDIF300Parser.RULE_booleanConstantRef = 30;
    EDIF300Parser.RULE_booleanExpression = 31;
    EDIF300Parser.RULE_booleanMap = 32;
    EDIF300Parser.RULE_booleanParameter = 33;
    EDIF300Parser.RULE_booleanParameterAssign = 34;
    EDIF300Parser.RULE_booleanParameterRef = 35;
    EDIF300Parser.RULE_booleanToken = 36;
    EDIF300Parser.RULE_booleanValue = 37;
    EDIF300Parser.RULE_borderPattern = 38;
    EDIF300Parser.RULE_borderPatternVisible = 39;
    EDIF300Parser.RULE_borderWidth = 40;
    EDIF300Parser.RULE_bottomJustify = 41;
    EDIF300Parser.RULE_calculated = 42;
    EDIF300Parser.RULE_candela = 43;
    EDIF300Parser.RULE_capacitanceValue = 44;
    EDIF300Parser.RULE_caplineJustify = 45;
    EDIF300Parser.RULE_cell = 46;
    EDIF300Parser.RULE_cellHeader = 47;
    EDIF300Parser.RULE_cellNameDisplay = 48;
    EDIF300Parser.RULE_cellPropertyDisplay = 49;
    EDIF300Parser.RULE_cellPropertyDisplayOverride = 50;
    EDIF300Parser.RULE_cellPropertyOverride = 51;
    EDIF300Parser.RULE_cellRef = 52;
    EDIF300Parser.RULE_celsius = 53;
    EDIF300Parser.RULE_centerJustify = 54;
    EDIF300Parser.RULE_characterEncoding = 55;
    EDIF300Parser.RULE_checkDate = 56;
    EDIF300Parser.RULE_checkDateDisplay = 57;
    EDIF300Parser.RULE_circle = 58;
    EDIF300Parser.RULE_cluster = 59;
    EDIF300Parser.RULE_clusterConfiguration = 60;
    EDIF300Parser.RULE_clusterConfigurationNameCaseSensitive = 61;
    EDIF300Parser.RULE_clusterConfigurationNameDef = 62;
    EDIF300Parser.RULE_clusterConfigurationNameRef = 63;
    EDIF300Parser.RULE_clusterConfigurationRef = 64;
    EDIF300Parser.RULE_clusterHeader = 65;
    EDIF300Parser.RULE_clusterNameCaseSensitive = 66;
    EDIF300Parser.RULE_clusterNameDef = 67;
    EDIF300Parser.RULE_clusterNameRef = 68;
    EDIF300Parser.RULE_clusterPropertyDisplay = 69;
    EDIF300Parser.RULE_clusterPropertyDisplayOverride = 70;
    EDIF300Parser.RULE_clusterPropertyOverride = 71;
    EDIF300Parser.RULE_clusterRef = 72;
    EDIF300Parser.RULE_color = 73;
    EDIF300Parser.RULE_comment = 74;
    EDIF300Parser.RULE_commentGraphics = 75;
    EDIF300Parser.RULE_companyName = 76;
    EDIF300Parser.RULE_companyNameDisplay = 77;
    EDIF300Parser.RULE_complementedName = 78;
    EDIF300Parser.RULE_complementedNamePart = 79;
    EDIF300Parser.RULE_complexGeometry = 80;
    EDIF300Parser.RULE_complexName = 81;
    EDIF300Parser.RULE_compound = 82;
    EDIF300Parser.RULE_condition = 83;
    EDIF300Parser.RULE_conditionDisplay = 84;
    EDIF300Parser.RULE_connectedSignalIndexGenerator = 85;
    EDIF300Parser.RULE_connectedSignalIndexGeneratorDisplay = 86;
    EDIF300Parser.RULE_connectivityBus = 87;
    EDIF300Parser.RULE_connectivityBusJoined = 88;
    EDIF300Parser.RULE_connectivityBusSlice = 89;
    EDIF300Parser.RULE_connectivityFrameStructure = 90;
    EDIF300Parser.RULE_connectivityFrameStructureNameDef = 91;
    EDIF300Parser.RULE_connectivityNet = 92;
    EDIF300Parser.RULE_connectivityNetJoined = 93;
    EDIF300Parser.RULE_connectivityRipper = 94;
    EDIF300Parser.RULE_connectivityRipperNameDef = 95;
    EDIF300Parser.RULE_connectivityRipperNameRef = 96;
    EDIF300Parser.RULE_connectivityRipperRef = 97;
    EDIF300Parser.RULE_connectivityStructure = 98;
    EDIF300Parser.RULE_connectivitySubBus = 99;
    EDIF300Parser.RULE_connectivitySubNet = 100;
    EDIF300Parser.RULE_connectivityTagGenerator = 101;
    EDIF300Parser.RULE_connectivityTagGeneratorDisplay = 102;
    EDIF300Parser.RULE_connectivityUnits = 103;
    EDIF300Parser.RULE_connectivityView = 104;
    EDIF300Parser.RULE_connectivityViewHeader = 105;
    EDIF300Parser.RULE_constantNameDef = 106;
    EDIF300Parser.RULE_constantNameRef = 107;
    EDIF300Parser.RULE_constantValues = 108;
    EDIF300Parser.RULE_contract = 109;
    EDIF300Parser.RULE_contractDisplay = 110;
    EDIF300Parser.RULE_copyright = 111;
    EDIF300Parser.RULE_copyrightDisplay = 112;
    EDIF300Parser.RULE_cornerType = 113;
    EDIF300Parser.RULE_coulomb = 114;
    EDIF300Parser.RULE_criticality = 115;
    EDIF300Parser.RULE_criticalityDisplay = 116;
    EDIF300Parser.RULE_currentMap = 117;
    EDIF300Parser.RULE_currentValue = 118;
    EDIF300Parser.RULE_curve = 119;
    EDIF300Parser.RULE_dataOrigin = 120;
    EDIF300Parser.RULE_date = 121;
    EDIF300Parser.RULE_dayNumber = 122;
    EDIF300Parser.RULE_dcFanInLoad = 123;
    EDIF300Parser.RULE_dcFanInLoadDisplay = 124;
    EDIF300Parser.RULE_dcFanOutLoad = 125;
    EDIF300Parser.RULE_dcFanOutLoadDisplay = 126;
    EDIF300Parser.RULE_dcMaxFanIn = 127;
    EDIF300Parser.RULE_dcMaxFanInDisplay = 128;
    EDIF300Parser.RULE_dcMaxFanOut = 129;
    EDIF300Parser.RULE_dcMaxFanOutDisplay = 130;
    EDIF300Parser.RULE_decimalToString = 131;
    EDIF300Parser.RULE_defaultClusterConfiguration = 132;
    EDIF300Parser.RULE_defaultConnection = 133;
    EDIF300Parser.RULE_degree = 134;
    EDIF300Parser.RULE_delay = 135;
    EDIF300Parser.RULE_denominator = 136;
    EDIF300Parser.RULE_derivation = 137;
    EDIF300Parser.RULE_derivedFrom = 138;
    EDIF300Parser.RULE_design = 139;
    EDIF300Parser.RULE_designator = 140;
    EDIF300Parser.RULE_designatorDisplay = 141;
    EDIF300Parser.RULE_designHeader = 142;
    EDIF300Parser.RULE_designHierarchy = 143;
    EDIF300Parser.RULE_designHierarchyHeader = 144;
    EDIF300Parser.RULE_designHierarchyNameCaseSensitive = 145;
    EDIF300Parser.RULE_designHierarchyNameDef = 146;
    EDIF300Parser.RULE_designNameCaseSensitive = 147;
    EDIF300Parser.RULE_designNameDef = 148;
    EDIF300Parser.RULE_designUnits = 149;
    EDIF300Parser.RULE_diagram = 150;
    EDIF300Parser.RULE_diagramNameDef = 151;
    EDIF300Parser.RULE_directionalPortAttributeOverride = 152;
    EDIF300Parser.RULE_display = 153;
    EDIF300Parser.RULE_displayAttributes = 154;
    EDIF300Parser.RULE_displayName = 155;
    EDIF300Parser.RULE_displayNameOverride = 156;
    EDIF300Parser.RULE_distanceValue = 157;
    EDIF300Parser.RULE_dividend = 158;
    EDIF300Parser.RULE_divisor = 159;
    EDIF300Parser.RULE_documentation = 160;
    EDIF300Parser.RULE_documentationHeader = 161;
    EDIF300Parser.RULE_documentationNameCaseSensitive = 162;
    EDIF300Parser.RULE_documentationNameDef = 163;
    EDIF300Parser.RULE_documentationUnits = 164;
    EDIF300Parser.RULE_dominates = 165;
    EDIF300Parser.RULE_dot = 166;
    EDIF300Parser.RULE_drawingDescription = 167;
    EDIF300Parser.RULE_drawingDescriptionDisplay = 168;
    EDIF300Parser.RULE_drawingIdentification = 169;
    EDIF300Parser.RULE_drawingIdentificationDisplay = 170;
    EDIF300Parser.RULE_drawingSize = 171;
    EDIF300Parser.RULE_drawingSizeDisplay = 172;
    EDIF300Parser.RULE_duration = 173;
    EDIF300Parser.RULE_e = 174;
    EDIF300Parser.RULE_edif = 175;
    EDIF300Parser.RULE_edifHeader = 176;
    EDIF300Parser.RULE_edifLevel = 177;
    EDIF300Parser.RULE_edifLevelValue = 178;
    EDIF300Parser.RULE_edifNameDef = 179;
    EDIF300Parser.RULE_edifVersion = 180;
    EDIF300Parser.RULE_endPoint = 181;
    EDIF300Parser.RULE_endType = 182;
    EDIF300Parser.RULE_engineeringDate = 183;
    EDIF300Parser.RULE_engineeringDateDisplay = 184;
    EDIF300Parser.RULE_event = 185;
    EDIF300Parser.RULE_exponent = 186;
    EDIF300Parser.RULE_extend = 187;
    EDIF300Parser.RULE_extendForFrameMemberDef = 188;
    EDIF300Parser.RULE_extendFrameDef = 189;
    EDIF300Parser.RULE_extendInstanceDef = 190;
    EDIF300Parser.RULE_extendInstanceMemberDef = 191;
    EDIF300Parser.RULE_extendInterconnectDef = 192;
    EDIF300Parser.RULE_extendPageDef = 193;
    EDIF300Parser.RULE_extendPortDef = 194;
    EDIF300Parser.RULE_extendPortMemberDef = 195;
    EDIF300Parser.RULE_extendSignalDef = 196;
    EDIF300Parser.RULE_extendSignalGroupDef = 197;
    EDIF300Parser.RULE_extendSignalMemberDef = 198;
    EDIF300Parser.RULE_external = 199;
    EDIF300Parser.RULE_fahrenheit = 200;
    EDIF300Parser.RULE_efalse = 201;
    EDIF300Parser.RULE_farad = 202;
    EDIF300Parser.RULE_figure = 203;
    EDIF300Parser.RULE_figureGroup = 204;
    EDIF300Parser.RULE_figureGroupNameCaseSensitive = 205;
    EDIF300Parser.RULE_figureGroupNameDef = 206;
    EDIF300Parser.RULE_figureGroupNameRef = 207;
    EDIF300Parser.RULE_figureGroupOverride = 208;
    EDIF300Parser.RULE_fillPattern = 209;
    EDIF300Parser.RULE_fillPatternVisible = 210;
    EDIF300Parser.RULE_firstIntegerExpression = 211;
    EDIF300Parser.RULE_firstStringExpression = 212;
    EDIF300Parser.RULE_fixed = 213;
    EDIF300Parser.RULE_font = 214;
    EDIF300Parser.RULE_fontCapitalHeight = 215;
    EDIF300Parser.RULE_fontDefinitions = 216;
    EDIF300Parser.RULE_fontDescent = 217;
    EDIF300Parser.RULE_fontFamily = 218;
    EDIF300Parser.RULE_fontHeight = 219;
    EDIF300Parser.RULE_fontNameDef = 220;
    EDIF300Parser.RULE_fontNameRef = 221;
    EDIF300Parser.RULE_fontProportions = 222;
    EDIF300Parser.RULE_fontRef = 223;
    EDIF300Parser.RULE_fonts = 224;
    EDIF300Parser.RULE_fontWidth = 225;
    EDIF300Parser.RULE_forbiddenEvent = 226;
    EDIF300Parser.RULE_forFrame = 227;
    EDIF300Parser.RULE_forFrameAnnotate = 228;
    EDIF300Parser.RULE_forFrameIndex = 229;
    EDIF300Parser.RULE_forFrameIndexDisplay = 230;
    EDIF300Parser.RULE_forFrameIndexNameCaseSensitive = 231;
    EDIF300Parser.RULE_forFrameIndexRef = 232;
    EDIF300Parser.RULE_forFrameMemberRef = 233;
    EDIF300Parser.RULE_forFrameRef = 234;
    EDIF300Parser.RULE_frameConfiguration = 235;
    EDIF300Parser.RULE_frameNameCaseSensitive = 236;
    EDIF300Parser.RULE_frameNameDef = 237;
    EDIF300Parser.RULE_frameNameRef = 238;
    EDIF300Parser.RULE_frameRef = 239;
    EDIF300Parser.RULE_frequencyValue = 240;
    EDIF300Parser.RULE_fromBottom = 241;
    EDIF300Parser.RULE_fromInteger = 242;
    EDIF300Parser.RULE_fromLeft = 243;
    EDIF300Parser.RULE_fromRight = 244;
    EDIF300Parser.RULE_fromTop = 245;
    EDIF300Parser.RULE_generated = 246;
    EDIF300Parser.RULE_geometryMacro = 247;
    EDIF300Parser.RULE_geometryMacroHeader = 248;
    EDIF300Parser.RULE_geometryMacroRef = 249;
    EDIF300Parser.RULE_geometryMacroUnits = 250;
    EDIF300Parser.RULE_globalPort = 251;
    EDIF300Parser.RULE_globalPortBundle = 252;
    EDIF300Parser.RULE_globalPortDefinitions = 253;
    EDIF300Parser.RULE_globalPortList = 254;
    EDIF300Parser.RULE_globalPortNameCaseSensitive = 255;
    EDIF300Parser.RULE_globalPortNameDef = 256;
    EDIF300Parser.RULE_globalPortNameDisplay = 257;
    EDIF300Parser.RULE_globalPortNameRef = 258;
    EDIF300Parser.RULE_globalPortPropertyDisplay = 259;
    EDIF300Parser.RULE_globalPortRef = 260;
    EDIF300Parser.RULE_globalPortScope = 261;
    EDIF300Parser.RULE_green = 262;
    EDIF300Parser.RULE_henry = 263;
    EDIF300Parser.RULE_hertz = 264;
    EDIF300Parser.RULE_horizontalJustification = 265;
    EDIF300Parser.RULE_hotspot = 266;
    EDIF300Parser.RULE_hotspotConnectDirection = 267;
    EDIF300Parser.RULE_hotspotGrid = 268;
    EDIF300Parser.RULE_hotspotNameCaseSensitive = 269;
    EDIF300Parser.RULE_hotspotNameDef = 270;
    EDIF300Parser.RULE_hotspotNameDisplay = 271;
    EDIF300Parser.RULE_hotspotNameRef = 272;
    EDIF300Parser.RULE_hourNumber = 273;
    EDIF300Parser.RULE_ieeeDesignation = 274;
    EDIF300Parser.RULE_ieeeSection = 275;
    EDIF300Parser.RULE_ieeeStandard = 276;
    EDIF300Parser.RULE_ifFrame = 277;
    EDIF300Parser.RULE_ifFrameAnnotate = 278;
    EDIF300Parser.RULE_ifFrameRef = 279;
    EDIF300Parser.RULE_ifFrameSet = 280;
    EDIF300Parser.RULE_ignore = 281;
    EDIF300Parser.RULE_implementationNameCaseSensitive = 282;
    EDIF300Parser.RULE_implementationNameDef = 283;
    EDIF300Parser.RULE_implementationNameDisplay = 284;
    EDIF300Parser.RULE_implementationNameRef = 285;
    EDIF300Parser.RULE_indexEndDisplay = 286;
    EDIF300Parser.RULE_indexNameDef = 287;
    EDIF300Parser.RULE_indexNameDisplay = 288;
    EDIF300Parser.RULE_indexNameRef = 289;
    EDIF300Parser.RULE_indexStart = 290;
    EDIF300Parser.RULE_indexStartDisplay = 291;
    EDIF300Parser.RULE_indexStep = 292;
    EDIF300Parser.RULE_indexStepDisplay = 293;
    EDIF300Parser.RULE_indexValue = 294;
    EDIF300Parser.RULE_input = 295;
    EDIF300Parser.RULE_inputPort = 296;
    EDIF300Parser.RULE_inputPortAttributes = 297;
    EDIF300Parser.RULE_instance = 298;
    EDIF300Parser.RULE_instanceConfiguration = 299;
    EDIF300Parser.RULE_instanceIndexValue = 300;
    EDIF300Parser.RULE_instanceMemberRef = 301;
    EDIF300Parser.RULE_instanceNameCaseSensitive = 302;
    EDIF300Parser.RULE_instanceNameDef = 303;
    EDIF300Parser.RULE_instanceNameDisplay = 304;
    EDIF300Parser.RULE_instanceNameGenerator = 305;
    EDIF300Parser.RULE_instanceNameGeneratorDisplay = 306;
    EDIF300Parser.RULE_instanceNameRef = 307;
    EDIF300Parser.RULE_instancePortAttributeDisplay = 308;
    EDIF300Parser.RULE_instancePortAttributes = 309;
    EDIF300Parser.RULE_instancePropertyDisplay = 310;
    EDIF300Parser.RULE_instancePropertyOverride = 311;
    EDIF300Parser.RULE_instanceRef = 312;
    EDIF300Parser.RULE_instanceWidth = 313;
    EDIF300Parser.RULE_instanceWidthDisplay = 314;
    EDIF300Parser.RULE_integer = 315;
    EDIF300Parser.RULE_integerConstant = 316;
    EDIF300Parser.RULE_integerConstantRef = 317;
    EDIF300Parser.RULE_integerEqual = 318;
    EDIF300Parser.RULE_integerExpression = 319;
    EDIF300Parser.RULE_integerParameter = 320;
    EDIF300Parser.RULE_integerParameterAssign = 321;
    EDIF300Parser.RULE_integerParameterRef = 322;
    EDIF300Parser.RULE_integerProduct = 323;
    EDIF300Parser.RULE_integerQuotient = 324;
    EDIF300Parser.RULE_integerRemainder = 325;
    EDIF300Parser.RULE_integerSubtract = 326;
    EDIF300Parser.RULE_integerSum = 327;
    EDIF300Parser.RULE_integerValue = 328;
    EDIF300Parser.RULE_interconnectAnnotate = 329;
    EDIF300Parser.RULE_interconnectAttachedText = 330;
    EDIF300Parser.RULE_interconnectDelay = 331;
    EDIF300Parser.RULE_interconnectDelayDisplay = 332;
    EDIF300Parser.RULE_interconnectDelayNameDef = 333;
    EDIF300Parser.RULE_interconnectDelayNameRef = 334;
    EDIF300Parser.RULE_interconnectHeader = 335;
    EDIF300Parser.RULE_interconnectNameCaseSensitive = 336;
    EDIF300Parser.RULE_interconnectNameDef = 337;
    EDIF300Parser.RULE_interconnectNameDisplay = 338;
    EDIF300Parser.RULE_interconnectNameRef = 339;
    EDIF300Parser.RULE_interconnectPropertyDisplay = 340;
    EDIF300Parser.RULE_interconnectRef = 341;
    EDIF300Parser.RULE_interconnectSet = 342;
    EDIF300Parser.RULE_einterface = 343;
    EDIF300Parser.RULE_interfaceJoined = 344;
    EDIF300Parser.RULE_interfaceUnits = 345;
    EDIF300Parser.RULE_iso8859 = 346;
    EDIF300Parser.RULE_iso8859Part = 347;
    EDIF300Parser.RULE_isolated = 348;
    EDIF300Parser.RULE_issue = 349;
    EDIF300Parser.RULE_italicStyle = 350;
    EDIF300Parser.RULE_jisx0201 = 351;
    EDIF300Parser.RULE_jisx0208 = 352;
    EDIF300Parser.RULE_joinedAsSignal = 353;
    EDIF300Parser.RULE_joule = 354;
    EDIF300Parser.RULE_k0KeywordLevel = 355;
    EDIF300Parser.RULE_k1KeywordAlias = 356;
    EDIF300Parser.RULE_k1KeywordLevel = 357;
    EDIF300Parser.RULE_k1KeywordNameDef = 358;
    EDIF300Parser.RULE_k1KeywordNameRef = 359;
    EDIF300Parser.RULE_k2Actual = 360;
    EDIF300Parser.RULE_k2Build = 361;
    EDIF300Parser.RULE_k2Formal = 362;
    EDIF300Parser.RULE_k2FormalNameDef = 363;
    EDIF300Parser.RULE_k2FormalNameRef = 364;
    EDIF300Parser.RULE_k2Generate = 365;
    EDIF300Parser.RULE_k2KeywordDefine = 366;
    EDIF300Parser.RULE_k2KeywordLevel = 367;
    EDIF300Parser.RULE_k2KeywordParameters = 368;
    EDIF300Parser.RULE_k2Literal = 369;
    EDIF300Parser.RULE_k2Optional = 370;
    EDIF300Parser.RULE_k2Required = 371;
    EDIF300Parser.RULE_k3Build = 372;
    EDIF300Parser.RULE_k3Collector = 373;
    EDIF300Parser.RULE_k3ForEach = 374;
    EDIF300Parser.RULE_k3Formal = 375;
    EDIF300Parser.RULE_k3FormalList = 376;
    EDIF300Parser.RULE_k3Generate = 377;
    EDIF300Parser.RULE_k3KeywordDefine = 378;
    EDIF300Parser.RULE_k3KeywordLevel = 379;
    EDIF300Parser.RULE_k3KeywordParameters = 380;
    EDIF300Parser.RULE_kelvin = 381;
    EDIF300Parser.RULE_keywordMap = 382;
    EDIF300Parser.RULE_kilogram = 383;
    EDIF300Parser.RULE_leaf = 384;
    EDIF300Parser.RULE_leafOccurrenceAnnotate = 385;
    EDIF300Parser.RULE_leftJustify = 386;
    EDIF300Parser.RULE_lengthValue = 387;
    EDIF300Parser.RULE_lessThan = 388;
    EDIF300Parser.RULE_lessThanOrEqual = 389;
    EDIF300Parser.RULE_library = 390;
    EDIF300Parser.RULE_libraryHeader = 391;
    EDIF300Parser.RULE_libraryNameCaseSensitive = 392;
    EDIF300Parser.RULE_libraryNameDef = 393;
    EDIF300Parser.RULE_libraryNameRef = 394;
    EDIF300Parser.RULE_libraryObjectNameCaseSensitive = 395;
    EDIF300Parser.RULE_libraryObjectNameDef = 396;
    EDIF300Parser.RULE_libraryObjectNameRef = 397;
    EDIF300Parser.RULE_libraryRef = 398;
    EDIF300Parser.RULE_loadDelay = 399;
    EDIF300Parser.RULE_localPortGroup = 400;
    EDIF300Parser.RULE_localPortGroupNameCaseSensitive = 401;
    EDIF300Parser.RULE_localPortGroupNameDef = 402;
    EDIF300Parser.RULE_localPortGroupNameRef = 403;
    EDIF300Parser.RULE_localPortGroupRef = 404;
    EDIF300Parser.RULE_logicalConnectivity = 405;
    EDIF300Parser.RULE_logicDefinitions = 406;
    EDIF300Parser.RULE_logicList = 407;
    EDIF300Parser.RULE_logicMapInput = 408;
    EDIF300Parser.RULE_logicMapOutput = 409;
    EDIF300Parser.RULE_logicModelUnits = 410;
    EDIF300Parser.RULE_logicModelView = 411;
    EDIF300Parser.RULE_logicNameDef = 412;
    EDIF300Parser.RULE_logicNameRef = 413;
    EDIF300Parser.RULE_logicOneOf = 414;
    EDIF300Parser.RULE_logicRef = 415;
    EDIF300Parser.RULE_logicValue = 416;
    EDIF300Parser.RULE_lsbToMsb = 417;
    EDIF300Parser.RULE_mantissa = 418;
    EDIF300Parser.RULE_mark = 419;
    EDIF300Parser.RULE_maskLayoutUnits = 420;
    EDIF300Parser.RULE_maskLayoutView = 421;
    EDIF300Parser.RULE_measured = 422;
    EDIF300Parser.RULE_meter = 423;
    EDIF300Parser.RULE_middleJustify = 424;
    EDIF300Parser.RULE_minimalWidth = 425;
    EDIF300Parser.RULE_minimumStringLength = 426;
    EDIF300Parser.RULE_miNoMax = 427;
    EDIF300Parser.RULE_miNoMaxValue = 428;
    EDIF300Parser.RULE_minuend = 429;
    EDIF300Parser.RULE_minuteNumber = 430;
    EDIF300Parser.RULE_mixedDirection = 431;
    EDIF300Parser.RULE_mnm = 432;
    EDIF300Parser.RULE_mole = 433;
    EDIF300Parser.RULE_monthNumber = 434;
    EDIF300Parser.RULE_msbToLsb = 435;
    EDIF300Parser.RULE_mustJoin = 436;
    EDIF300Parser.RULE_nameAlias = 437;
    EDIF300Parser.RULE_nameCaseSensitivity = 438;
    EDIF300Parser.RULE_nameDef = 439;
    EDIF300Parser.RULE_nameDimension = 440;
    EDIF300Parser.RULE_nameDimensionStructure = 441;
    EDIF300Parser.RULE_nameInformation = 442;
    EDIF300Parser.RULE_namePartSeparator = 443;
    EDIF300Parser.RULE_nameRef = 444;
    EDIF300Parser.RULE_nameStructure = 445;
    EDIF300Parser.RULE_narrowPort = 446;
    EDIF300Parser.RULE_narrowWire = 447;
    EDIF300Parser.RULE_noHotspotGrid = 448;
    EDIF300Parser.RULE_nominalHotspotGrid = 449;
    EDIF300Parser.RULE_nonPermutable = 450;
    EDIF300Parser.RULE_not_ = 451;
    EDIF300Parser.RULE_notInherited = 452;
    EDIF300Parser.RULE_number = 453;
    EDIF300Parser.RULE_numberExpression = 454;
    EDIF300Parser.RULE_numberOfBasicUnits = 455;
    EDIF300Parser.RULE_numberOfNewUnits = 456;
    EDIF300Parser.RULE_numberParameter = 457;
    EDIF300Parser.RULE_numberParameterAssign = 458;
    EDIF300Parser.RULE_numberParameterRef = 459;
    EDIF300Parser.RULE_numberPoint = 460;
    EDIF300Parser.RULE_numberValue = 461;
    EDIF300Parser.RULE_numerator = 462;
    EDIF300Parser.RULE_occurrenceAnnotate = 463;
    EDIF300Parser.RULE_occurrenceHierarchyAnnotate = 464;
    EDIF300Parser.RULE_offsetEvent = 465;
    EDIF300Parser.RULE_ohm = 466;
    EDIF300Parser.RULE_openShape = 467;
    EDIF300Parser.RULE_or_ = 468;
    EDIF300Parser.RULE_origin = 469;
    EDIF300Parser.RULE_originalBoundingBox = 470;
    EDIF300Parser.RULE_originalDrawingDate = 471;
    EDIF300Parser.RULE_originalDrawingDateDisplay = 472;
    EDIF300Parser.RULE_originalName = 473;
    EDIF300Parser.RULE_otherwiseFrame = 474;
    EDIF300Parser.RULE_otherwiseFrameAnnotate = 475;
    EDIF300Parser.RULE_otherwiseFrameRef = 476;
    EDIF300Parser.RULE_output = 477;
    EDIF300Parser.RULE_outputPort = 478;
    EDIF300Parser.RULE_outputPortAttributes = 479;
    EDIF300Parser.RULE_owner = 480;
    EDIF300Parser.RULE_page = 481;
    EDIF300Parser.RULE_pageAnnotate = 482;
    EDIF300Parser.RULE_pageBorder = 483;
    EDIF300Parser.RULE_pageBorderTemplate = 484;
    EDIF300Parser.RULE_pageBorderTemplateRef = 485;
    EDIF300Parser.RULE_pageCommentGraphics = 486;
    EDIF300Parser.RULE_pageHeader = 487;
    EDIF300Parser.RULE_pageIdentification = 488;
    EDIF300Parser.RULE_pageIdentificationDisplay = 489;
    EDIF300Parser.RULE_pageNameCaseSensitive = 490;
    EDIF300Parser.RULE_pageNameDef = 491;
    EDIF300Parser.RULE_pageNameRef = 492;
    EDIF300Parser.RULE_pagePropertyDisplay = 493;
    EDIF300Parser.RULE_pageRef = 494;
    EDIF300Parser.RULE_pageSize = 495;
    EDIF300Parser.RULE_pageTitle = 496;
    EDIF300Parser.RULE_pageTitleBlock = 497;
    EDIF300Parser.RULE_pageTitleBlockAttributeDisplay = 498;
    EDIF300Parser.RULE_pageTitleBlockAttributes = 499;
    EDIF300Parser.RULE_pageTitleBlockTemplate = 500;
    EDIF300Parser.RULE_pageTitleBlockTemplateRef = 501;
    EDIF300Parser.RULE_pageTitleDisplay = 502;
    EDIF300Parser.RULE_parameterDisplay = 503;
    EDIF300Parser.RULE_parameterNameCaseSensitive = 504;
    EDIF300Parser.RULE_parameterNameDef = 505;
    EDIF300Parser.RULE_parameterNameDisplay = 506;
    EDIF300Parser.RULE_parameterNameRef = 507;
    EDIF300Parser.RULE_path = 508;
    EDIF300Parser.RULE_pathDelay = 509;
    EDIF300Parser.RULE_pathWidth = 510;
    EDIF300Parser.RULE_pcbLayoutUnits = 511;
    EDIF300Parser.RULE_pcbLayoutView = 512;
    EDIF300Parser.RULE_permutable = 513;
    EDIF300Parser.RULE_physicalDefaults = 514;
    EDIF300Parser.RULE_physicalScaling = 515;
    EDIF300Parser.RULE_pixelPattern = 516;
    EDIF300Parser.RULE_pixelRow = 517;
    EDIF300Parser.RULE_point = 518;
    EDIF300Parser.RULE_pointList = 519;
    EDIF300Parser.RULE_pointValue = 520;
    EDIF300Parser.RULE_polygon = 521;
    EDIF300Parser.RULE_port = 522;
    EDIF300Parser.RULE_portAnnotate = 523;
    EDIF300Parser.RULE_portAttributeDisplay = 524;
    EDIF300Parser.RULE_portBundle = 525;
    EDIF300Parser.RULE_portDelay = 526;
    EDIF300Parser.RULE_portDelayDisplay = 527;
    EDIF300Parser.RULE_portDelayNameDef = 528;
    EDIF300Parser.RULE_portDelayNameRef = 529;
    EDIF300Parser.RULE_portDelayOverride = 530;
    EDIF300Parser.RULE_portDirection = 531;
    EDIF300Parser.RULE_portDirectionIndicator = 532;
    EDIF300Parser.RULE_portIndexValue = 533;
    EDIF300Parser.RULE_portInstanceRef = 534;
    EDIF300Parser.RULE_portJoined = 535;
    EDIF300Parser.RULE_portList = 536;
    EDIF300Parser.RULE_portLoadDelay = 537;
    EDIF300Parser.RULE_portLoadDelayDisplay = 538;
    EDIF300Parser.RULE_portLoadDelayNameDef = 539;
    EDIF300Parser.RULE_portLoadDelayNameRef = 540;
    EDIF300Parser.RULE_portLoadDelayOverride = 541;
    EDIF300Parser.RULE_portMemberRef = 542;
    EDIF300Parser.RULE_portNameCaseSensitive = 543;
    EDIF300Parser.RULE_portNameDef = 544;
    EDIF300Parser.RULE_portNameDisplay = 545;
    EDIF300Parser.RULE_portNameGenerator = 546;
    EDIF300Parser.RULE_portNameGeneratorDisplay = 547;
    EDIF300Parser.RULE_portNameRef = 548;
    EDIF300Parser.RULE_portPropertyDisplay = 549;
    EDIF300Parser.RULE_portPropertyDisplayOverride = 550;
    EDIF300Parser.RULE_portPropertyOverride = 551;
    EDIF300Parser.RULE_portRef = 552;
    EDIF300Parser.RULE_portSet = 553;
    EDIF300Parser.RULE_portWidth = 554;
    EDIF300Parser.RULE_presentLogicValue = 555;
    EDIF300Parser.RULE_previousLogicValue = 556;
    EDIF300Parser.RULE_previousVersion = 557;
    EDIF300Parser.RULE_primaryName = 558;
    EDIF300Parser.RULE_program = 559;
    EDIF300Parser.RULE_property = 560;
    EDIF300Parser.RULE_propertyDisplay = 561;
    EDIF300Parser.RULE_propertyDisplayOverride = 562;
    EDIF300Parser.RULE_propertyInheritanceControl = 563;
    EDIF300Parser.RULE_propertyNameCaseSensitive = 564;
    EDIF300Parser.RULE_propertyNameDef = 565;
    EDIF300Parser.RULE_propertyNameDisplay = 566;
    EDIF300Parser.RULE_propertyNameRef = 567;
    EDIF300Parser.RULE_propertyOverride = 568;
    EDIF300Parser.RULE_proportionalFont = 569;
    EDIF300Parser.RULE_pt = 570;
    EDIF300Parser.RULE_pt1 = 571;
    EDIF300Parser.RULE_pt2 = 572;
    EDIF300Parser.RULE_radian = 573;
    EDIF300Parser.RULE_reason = 574;
    EDIF300Parser.RULE_rectangle = 575;
    EDIF300Parser.RULE_red = 576;
    EDIF300Parser.RULE_removeDisplay = 577;
    EDIF300Parser.RULE_repetitionCount = 578;
    EDIF300Parser.RULE_repetitionCountDisplay = 579;
    EDIF300Parser.RULE_replaceDisplay = 580;
    EDIF300Parser.RULE_required = 581;
    EDIF300Parser.RULE_resolves = 582;
    EDIF300Parser.RULE_revision = 583;
    EDIF300Parser.RULE_revisionDisplay = 584;
    EDIF300Parser.RULE_rightJustify = 585;
    EDIF300Parser.RULE_ripperHotspot = 586;
    EDIF300Parser.RULE_ripperHotspotRef = 587;
    EDIF300Parser.RULE_rotation = 588;
    EDIF300Parser.RULE_round = 589;
    EDIF300Parser.RULE_rowSize = 590;
    EDIF300Parser.RULE_scaledInteger = 591;
    EDIF300Parser.RULE_scaleX = 592;
    EDIF300Parser.RULE_scaleY = 593;
    EDIF300Parser.RULE_schematicBus = 594;
    EDIF300Parser.RULE_schematicBusDetails = 595;
    EDIF300Parser.RULE_schematicBusGraphics = 596;
    EDIF300Parser.RULE_schematicBusJoined = 597;
    EDIF300Parser.RULE_schematicBusSlice = 598;
    EDIF300Parser.RULE_schematicComplexFigure = 599;
    EDIF300Parser.RULE_schematicFigureMacro = 600;
    EDIF300Parser.RULE_schematicFigureMacroRef = 601;
    EDIF300Parser.RULE_schematicForFrameBorder = 602;
    EDIF300Parser.RULE_schematicForFrameBorderTemplate = 603;
    EDIF300Parser.RULE_schematicForFrameBorderTemplateRef = 604;
    EDIF300Parser.RULE_schematicForFrameImplementation = 605;
    EDIF300Parser.RULE_schematicForFrameImplementationHeader = 606;
    EDIF300Parser.RULE_schematicFrameImplementationDetails = 607;
    EDIF300Parser.RULE_schematicGlobalPortAttributes = 608;
    EDIF300Parser.RULE_schematicGlobalPortImplementation = 609;
    EDIF300Parser.RULE_schematicGlobalPortImplementationRef = 610;
    EDIF300Parser.RULE_schematicGlobalPortTemplate = 611;
    EDIF300Parser.RULE_schematicGlobalPortTemplateRef = 612;
    EDIF300Parser.RULE_schematicIfFrameBorder = 613;
    EDIF300Parser.RULE_schematicIfFrameBorderTemplate = 614;
    EDIF300Parser.RULE_schematicIfFrameBorderTemplateRef = 615;
    EDIF300Parser.RULE_schematicIfFrameImplementation = 616;
    EDIF300Parser.RULE_schematicIfFrameImplementationHeader = 617;
    EDIF300Parser.RULE_schematicImplementation = 618;
    EDIF300Parser.RULE_schematicInstanceImplementation = 619;
    EDIF300Parser.RULE_schematicInstanceImplementationRef = 620;
    EDIF300Parser.RULE_schematicInterconnectAttributeDisplay = 621;
    EDIF300Parser.RULE_schematicInterconnectHeader = 622;
    EDIF300Parser.RULE_schematicInterconnectTerminatorImplementation = 623;
    EDIF300Parser.RULE_schematicInterconnectTerminatorImplementationRef = 624;
    EDIF300Parser.RULE_schematicInterconnectTerminatorTemplate = 625;
    EDIF300Parser.RULE_schematicInterconnectTerminatorTemplateRef = 626;
    EDIF300Parser.RULE_schematicJunctionImplementation = 627;
    EDIF300Parser.RULE_schematicJunctionImplementationRef = 628;
    EDIF300Parser.RULE_schematicJunctionTemplate = 629;
    EDIF300Parser.RULE_schematicJunctionTemplateRef = 630;
    EDIF300Parser.RULE_schematicMasterPortImplementation = 631;
    EDIF300Parser.RULE_schematicMasterPortImplementationRef = 632;
    EDIF300Parser.RULE_schematicMasterPortTemplate = 633;
    EDIF300Parser.RULE_schematicMasterPortTemplateRef = 634;
    EDIF300Parser.RULE_schematicMetric = 635;
    EDIF300Parser.RULE_schematicNet = 636;
    EDIF300Parser.RULE_schematicNetDetails = 637;
    EDIF300Parser.RULE_schematicNetGraphics = 638;
    EDIF300Parser.RULE_schematicNetJoined = 639;
    EDIF300Parser.RULE_schematicOffPageConnectorImplementation = 640;
    EDIF300Parser.RULE_schematicOffPageConnectorImplementationRef = 641;
    EDIF300Parser.RULE_schematicOffPageConnectorTemplate = 642;
    EDIF300Parser.RULE_schematicOffPageConnectorTemplateRef = 643;
    EDIF300Parser.RULE_schematicOnPageConnectorImplementation = 644;
    EDIF300Parser.RULE_schematicOnPageConnectorImplementationRef = 645;
    EDIF300Parser.RULE_schematicOnPageConnectorTemplate = 646;
    EDIF300Parser.RULE_schematicOnPageConnectorTemplateRef = 647;
    EDIF300Parser.RULE_schematicOtherwiseFrameBorder = 648;
    EDIF300Parser.RULE_schematicOtherwiseFrameBorderTemplate = 649;
    EDIF300Parser.RULE_schematicOtherwiseFrameBorderTemplateRef = 650;
    EDIF300Parser.RULE_schematicOtherwiseFrameImplementation = 651;
    EDIF300Parser.RULE_schematicOtherwiseFrameImplementationHeader = 652;
    EDIF300Parser.RULE_schematicPortAcPower = 653;
    EDIF300Parser.RULE_schematicPortAcPowerRecommendedFrequency = 654;
    EDIF300Parser.RULE_schematicPortAcPowerRecommendedVoltageRms = 655;
    EDIF300Parser.RULE_schematicPortAnalog = 656;
    EDIF300Parser.RULE_schematicPortAttributes = 657;
    EDIF300Parser.RULE_schematicPortChassisGround = 658;
    EDIF300Parser.RULE_schematicPortClock = 659;
    EDIF300Parser.RULE_schematicPortDcPower = 660;
    EDIF300Parser.RULE_schematicPortDcPowerRecommendedVoltage = 661;
    EDIF300Parser.RULE_schematicPortEarthGround = 662;
    EDIF300Parser.RULE_schematicPortGround = 663;
    EDIF300Parser.RULE_schematicPortNonLogical = 664;
    EDIF300Parser.RULE_schematicPortOpenCollector = 665;
    EDIF300Parser.RULE_schematicPortOpenEmitter = 666;
    EDIF300Parser.RULE_schematicPortPower = 667;
    EDIF300Parser.RULE_schematicPortStyle = 668;
    EDIF300Parser.RULE_schematicPortThreeState = 669;
    EDIF300Parser.RULE_schematicRequiredDefaults = 670;
    EDIF300Parser.RULE_schematicRipperImplementation = 671;
    EDIF300Parser.RULE_schematicRipperImplementationRef = 672;
    EDIF300Parser.RULE_schematicRipperTemplate = 673;
    EDIF300Parser.RULE_schematicRipperTemplateRef = 674;
    EDIF300Parser.RULE_schematicSubBus = 675;
    EDIF300Parser.RULE_schematicSubBusSet = 676;
    EDIF300Parser.RULE_schematicSubInterconnectHeader = 677;
    EDIF300Parser.RULE_schematicSubNet = 678;
    EDIF300Parser.RULE_schematicSubNetSet = 679;
    EDIF300Parser.RULE_schematicSymbol = 680;
    EDIF300Parser.RULE_schematicSymbolBorder = 681;
    EDIF300Parser.RULE_schematicSymbolBorderTemplate = 682;
    EDIF300Parser.RULE_schematicSymbolBorderTemplateRef = 683;
    EDIF300Parser.RULE_schematicSymbolHeader = 684;
    EDIF300Parser.RULE_schematicSymbolPortImplementation = 685;
    EDIF300Parser.RULE_schematicSymbolPortImplementationRef = 686;
    EDIF300Parser.RULE_schematicSymbolPortTemplate = 687;
    EDIF300Parser.RULE_schematicSymbolPortTemplateRef = 688;
    EDIF300Parser.RULE_schematicSymbolRef = 689;
    EDIF300Parser.RULE_schematicTemplateHeader = 690;
    EDIF300Parser.RULE_schematicUnits = 691;
    EDIF300Parser.RULE_schematicView = 692;
    EDIF300Parser.RULE_schematicViewHeader = 693;
    EDIF300Parser.RULE_schematicWireAffinity = 694;
    EDIF300Parser.RULE_schematicWireStyle = 695;
    EDIF300Parser.RULE_second = 696;
    EDIF300Parser.RULE_secondIntegerExpression = 697;
    EDIF300Parser.RULE_secondNumber = 698;
    EDIF300Parser.RULE_secondStringExpression = 699;
    EDIF300Parser.RULE_section = 700;
    EDIF300Parser.RULE_sectionNameDef = 701;
    EDIF300Parser.RULE_sectionTitle = 702;
    EDIF300Parser.RULE_sequence = 703;
    EDIF300Parser.RULE_setAngle = 704;
    EDIF300Parser.RULE_setCapacitance = 705;
    EDIF300Parser.RULE_setCurrent = 706;
    EDIF300Parser.RULE_setDistance = 707;
    EDIF300Parser.RULE_setFrequency = 708;
    EDIF300Parser.RULE_setTime = 709;
    EDIF300Parser.RULE_setVoltage = 710;
    EDIF300Parser.RULE_shape = 711;
    EDIF300Parser.RULE_siemens = 712;
    EDIF300Parser.RULE_signal = 713;
    EDIF300Parser.RULE_signalAnnotate = 714;
    EDIF300Parser.RULE_signalGroup = 715;
    EDIF300Parser.RULE_signalGroupAnnotate = 716;
    EDIF300Parser.RULE_signalGroupNameCaseSensitive = 717;
    EDIF300Parser.RULE_signalGroupNameDef = 718;
    EDIF300Parser.RULE_signalGroupNameRef = 719;
    EDIF300Parser.RULE_signalGroupRef = 720;
    EDIF300Parser.RULE_signalIndexValue = 721;
    EDIF300Parser.RULE_signalJoined = 722;
    EDIF300Parser.RULE_signalList = 723;
    EDIF300Parser.RULE_signalMemberRef = 724;
    EDIF300Parser.RULE_signalNameCaseSensitive = 725;
    EDIF300Parser.RULE_signalNameDef = 726;
    EDIF300Parser.RULE_signalNameRef = 727;
    EDIF300Parser.RULE_signalRef = 728;
    EDIF300Parser.RULE_signalWidth = 729;
    EDIF300Parser.RULE_simpleName = 730;
    EDIF300Parser.RULE_startPoint = 731;
    EDIF300Parser.RULE_status = 732;
    EDIF300Parser.RULE_step = 733;
    EDIF300Parser.RULE_string = 734;
    EDIF300Parser.RULE_stringConcatenate = 735;
    EDIF300Parser.RULE_stringConstant = 736;
    EDIF300Parser.RULE_stringConstantRef = 737;
    EDIF300Parser.RULE_stringEqual = 738;
    EDIF300Parser.RULE_stringExpression = 739;
    EDIF300Parser.RULE_stringLength = 740;
    EDIF300Parser.RULE_stringParameter = 741;
    EDIF300Parser.RULE_stringParameterAssign = 742;
    EDIF300Parser.RULE_stringParameterRef = 743;
    EDIF300Parser.RULE_stringPrefix = 744;
    EDIF300Parser.RULE_stringSuffix = 745;
    EDIF300Parser.RULE_stringValue = 746;
    EDIF300Parser.RULE_strong = 747;
    EDIF300Parser.RULE_subIssue = 748;
    EDIF300Parser.RULE_substring = 749;
    EDIF300Parser.RULE_substringLength = 750;
    EDIF300Parser.RULE_substringOffset = 751;
    EDIF300Parser.RULE_subtrahend = 752;
    EDIF300Parser.RULE_symbolicLayoutUnits = 753;
    EDIF300Parser.RULE_symbolicLayoutView = 754;
    EDIF300Parser.RULE_symbolPortImplementationNameDef = 755;
    EDIF300Parser.RULE_symbolPortImplementationNameRef = 756;
    EDIF300Parser.RULE_technology = 757;
    EDIF300Parser.RULE_textHeight = 758;
    EDIF300Parser.RULE_throughPoint = 759;
    EDIF300Parser.RULE_time = 760;
    EDIF300Parser.RULE_timeDelay = 761;
    EDIF300Parser.RULE_timeInterval = 762;
    EDIF300Parser.RULE_timeStamp = 763;
    EDIF300Parser.RULE_timeValue = 764;
    EDIF300Parser.RULE_timing = 765;
    EDIF300Parser.RULE_timingDisplay = 766;
    EDIF300Parser.RULE_timingNameDef = 767;
    EDIF300Parser.RULE_timingNameRef = 768;
    EDIF300Parser.RULE_toInteger = 769;
    EDIF300Parser.RULE_topJustify = 770;
    EDIF300Parser.RULE_totalPages = 771;
    EDIF300Parser.RULE_totalPagesDisplay = 772;
    EDIF300Parser.RULE_transform = 773;
    EDIF300Parser.RULE_transition = 774;
    EDIF300Parser.RULE_etrue = 775;
    EDIF300Parser.RULE_truncate = 776;
    EDIF300Parser.RULE_typedValue = 777;
    EDIF300Parser.RULE_typeface = 778;
    EDIF300Parser.RULE_typefaceSuffix = 779;
    EDIF300Parser.RULE_unconfigured = 780;
    EDIF300Parser.RULE_unconstrained = 781;
    EDIF300Parser.RULE_undefined = 782;
    EDIF300Parser.RULE_unit = 783;
    EDIF300Parser.RULE_unitDefinitions = 784;
    EDIF300Parser.RULE_unitExponent = 785;
    EDIF300Parser.RULE_unitNameDef = 786;
    EDIF300Parser.RULE_unitNameRef = 787;
    EDIF300Parser.RULE_unitRef = 788;
    EDIF300Parser.RULE_unrestricted = 789;
    EDIF300Parser.RULE_unspecified = 790;
    EDIF300Parser.RULE_unspecifiedDirectionPort = 791;
    EDIF300Parser.RULE_untyped = 792;
    EDIF300Parser.RULE_unused = 793;
    EDIF300Parser.RULE_usableArea = 794;
    EDIF300Parser.RULE_userData = 795;
    EDIF300Parser.RULE_userDataTag = 796;
    EDIF300Parser.RULE_version = 797;
    EDIF300Parser.RULE_verticalJustification = 798;
    EDIF300Parser.RULE_viewGroup = 799;
    EDIF300Parser.RULE_viewGroupHeader = 800;
    EDIF300Parser.RULE_viewGroupNameCaseSensitive = 801;
    EDIF300Parser.RULE_viewGroupNameDef = 802;
    EDIF300Parser.RULE_viewGroupNameRef = 803;
    EDIF300Parser.RULE_viewGroupRef = 804;
    EDIF300Parser.RULE_viewNameCaseSensitive = 805;
    EDIF300Parser.RULE_viewNameDef = 806;
    EDIF300Parser.RULE_viewNameDisplay = 807;
    EDIF300Parser.RULE_viewNameRef = 808;
    EDIF300Parser.RULE_viewPropertyDisplay = 809;
    EDIF300Parser.RULE_viewPropertyOverride = 810;
    EDIF300Parser.RULE_viewRef = 811;
    EDIF300Parser.RULE_visible = 812;
    EDIF300Parser.RULE_volt = 813;
    EDIF300Parser.RULE_voltageMap = 814;
    EDIF300Parser.RULE_voltageValue = 815;
    EDIF300Parser.RULE_watt = 816;
    EDIF300Parser.RULE_weak = 817;
    EDIF300Parser.RULE_weakJoined = 818;
    EDIF300Parser.RULE_weber = 819;
    EDIF300Parser.RULE_widePort = 820;
    EDIF300Parser.RULE_wideWire = 821;
    EDIF300Parser.RULE_written = 822;
    EDIF300Parser.RULE_xCoordinate = 823;
    EDIF300Parser.RULE_xNumberValue = 824;
    EDIF300Parser.RULE_xor_ = 825;
    EDIF300Parser.RULE_yCoordinate = 826;
    EDIF300Parser.RULE_year = 827;
    EDIF300Parser.RULE_yearNumber = 828;
    EDIF300Parser.RULE_yNumberValue = 829;
    EDIF300Parser.RULE_integerToken = 830;
    EDIF300Parser.RULE_stringToken = 831;
    // tslint:disable:no-trailing-whitespace
    EDIF300Parser.ruleNames = [
        "goal", "absolute", "acLoad", "acLoadDisplay", "acLoadFactorCapacitance",
        "acLoadFactorTime", "addDisplay", "ampere", "and_", "angleValue", "annotate",
        "approvedDate", "approvedDateDisplay", "arc", "ascii", "associatedInterconnectNameDisplay",
        "attachmentPoint", "author", "backgroundColor", "baselineJustify", "becomes",
        "behaviorView", "bidirectional", "bidirectionalPort", "bidirectionalPortAttributes",
        "bitOrder", "blue", "boldStyle", "eboolean", "booleanConstant", "booleanConstantRef",
        "booleanExpression", "booleanMap", "booleanParameter", "booleanParameterAssign",
        "booleanParameterRef", "booleanToken", "booleanValue", "borderPattern",
        "borderPatternVisible", "borderWidth", "bottomJustify", "calculated",
        "candela", "capacitanceValue", "caplineJustify", "cell", "cellHeader",
        "cellNameDisplay", "cellPropertyDisplay", "cellPropertyDisplayOverride",
        "cellPropertyOverride", "cellRef", "celsius", "centerJustify", "characterEncoding",
        "checkDate", "checkDateDisplay", "circle", "cluster", "clusterConfiguration",
        "clusterConfigurationNameCaseSensitive", "clusterConfigurationNameDef",
        "clusterConfigurationNameRef", "clusterConfigurationRef", "clusterHeader",
        "clusterNameCaseSensitive", "clusterNameDef", "clusterNameRef", "clusterPropertyDisplay",
        "clusterPropertyDisplayOverride", "clusterPropertyOverride", "clusterRef",
        "color", "comment", "commentGraphics", "companyName", "companyNameDisplay",
        "complementedName", "complementedNamePart", "complexGeometry", "complexName",
        "compound", "condition", "conditionDisplay", "connectedSignalIndexGenerator",
        "connectedSignalIndexGeneratorDisplay", "connectivityBus", "connectivityBusJoined",
        "connectivityBusSlice", "connectivityFrameStructure", "connectivityFrameStructureNameDef",
        "connectivityNet", "connectivityNetJoined", "connectivityRipper", "connectivityRipperNameDef",
        "connectivityRipperNameRef", "connectivityRipperRef", "connectivityStructure",
        "connectivitySubBus", "connectivitySubNet", "connectivityTagGenerator",
        "connectivityTagGeneratorDisplay", "connectivityUnits", "connectivityView",
        "connectivityViewHeader", "constantNameDef", "constantNameRef", "constantValues",
        "contract", "contractDisplay", "copyright", "copyrightDisplay", "cornerType",
        "coulomb", "criticality", "criticalityDisplay", "currentMap", "currentValue",
        "curve", "dataOrigin", "date", "dayNumber", "dcFanInLoad", "dcFanInLoadDisplay",
        "dcFanOutLoad", "dcFanOutLoadDisplay", "dcMaxFanIn", "dcMaxFanInDisplay",
        "dcMaxFanOut", "dcMaxFanOutDisplay", "decimalToString", "defaultClusterConfiguration",
        "defaultConnection", "degree", "delay", "denominator", "derivation", "derivedFrom",
        "design", "designator", "designatorDisplay", "designHeader", "designHierarchy",
        "designHierarchyHeader", "designHierarchyNameCaseSensitive", "designHierarchyNameDef",
        "designNameCaseSensitive", "designNameDef", "designUnits", "diagram",
        "diagramNameDef", "directionalPortAttributeOverride", "display", "displayAttributes",
        "displayName", "displayNameOverride", "distanceValue", "dividend", "divisor",
        "documentation", "documentationHeader", "documentationNameCaseSensitive",
        "documentationNameDef", "documentationUnits", "dominates", "dot", "drawingDescription",
        "drawingDescriptionDisplay", "drawingIdentification", "drawingIdentificationDisplay",
        "drawingSize", "drawingSizeDisplay", "duration", "e", "edif", "edifHeader",
        "edifLevel", "edifLevelValue", "edifNameDef", "edifVersion", "endPoint",
        "endType", "engineeringDate", "engineeringDateDisplay", "event", "exponent",
        "extend", "extendForFrameMemberDef", "extendFrameDef", "extendInstanceDef",
        "extendInstanceMemberDef", "extendInterconnectDef", "extendPageDef", "extendPortDef",
        "extendPortMemberDef", "extendSignalDef", "extendSignalGroupDef", "extendSignalMemberDef",
        "external", "fahrenheit", "efalse", "farad", "figure", "figureGroup",
        "figureGroupNameCaseSensitive", "figureGroupNameDef", "figureGroupNameRef",
        "figureGroupOverride", "fillPattern", "fillPatternVisible", "firstIntegerExpression",
        "firstStringExpression", "fixed", "font", "fontCapitalHeight", "fontDefinitions",
        "fontDescent", "fontFamily", "fontHeight", "fontNameDef", "fontNameRef",
        "fontProportions", "fontRef", "fonts", "fontWidth", "forbiddenEvent",
        "forFrame", "forFrameAnnotate", "forFrameIndex", "forFrameIndexDisplay",
        "forFrameIndexNameCaseSensitive", "forFrameIndexRef", "forFrameMemberRef",
        "forFrameRef", "frameConfiguration", "frameNameCaseSensitive", "frameNameDef",
        "frameNameRef", "frameRef", "frequencyValue", "fromBottom", "fromInteger",
        "fromLeft", "fromRight", "fromTop", "generated", "geometryMacro", "geometryMacroHeader",
        "geometryMacroRef", "geometryMacroUnits", "globalPort", "globalPortBundle",
        "globalPortDefinitions", "globalPortList", "globalPortNameCaseSensitive",
        "globalPortNameDef", "globalPortNameDisplay", "globalPortNameRef", "globalPortPropertyDisplay",
        "globalPortRef", "globalPortScope", "green", "henry", "hertz", "horizontalJustification",
        "hotspot", "hotspotConnectDirection", "hotspotGrid", "hotspotNameCaseSensitive",
        "hotspotNameDef", "hotspotNameDisplay", "hotspotNameRef", "hourNumber",
        "ieeeDesignation", "ieeeSection", "ieeeStandard", "ifFrame", "ifFrameAnnotate",
        "ifFrameRef", "ifFrameSet", "ignore", "implementationNameCaseSensitive",
        "implementationNameDef", "implementationNameDisplay", "implementationNameRef",
        "indexEndDisplay", "indexNameDef", "indexNameDisplay", "indexNameRef",
        "indexStart", "indexStartDisplay", "indexStep", "indexStepDisplay", "indexValue",
        "input", "inputPort", "inputPortAttributes", "instance", "instanceConfiguration",
        "instanceIndexValue", "instanceMemberRef", "instanceNameCaseSensitive",
        "instanceNameDef", "instanceNameDisplay", "instanceNameGenerator", "instanceNameGeneratorDisplay",
        "instanceNameRef", "instancePortAttributeDisplay", "instancePortAttributes",
        "instancePropertyDisplay", "instancePropertyOverride", "instanceRef",
        "instanceWidth", "instanceWidthDisplay", "integer", "integerConstant",
        "integerConstantRef", "integerEqual", "integerExpression", "integerParameter",
        "integerParameterAssign", "integerParameterRef", "integerProduct", "integerQuotient",
        "integerRemainder", "integerSubtract", "integerSum", "integerValue", "interconnectAnnotate",
        "interconnectAttachedText", "interconnectDelay", "interconnectDelayDisplay",
        "interconnectDelayNameDef", "interconnectDelayNameRef", "interconnectHeader",
        "interconnectNameCaseSensitive", "interconnectNameDef", "interconnectNameDisplay",
        "interconnectNameRef", "interconnectPropertyDisplay", "interconnectRef",
        "interconnectSet", "einterface", "interfaceJoined", "interfaceUnits",
        "iso8859", "iso8859Part", "isolated", "issue", "italicStyle", "jisx0201",
        "jisx0208", "joinedAsSignal", "joule", "k0KeywordLevel", "k1KeywordAlias",
        "k1KeywordLevel", "k1KeywordNameDef", "k1KeywordNameRef", "k2Actual",
        "k2Build", "k2Formal", "k2FormalNameDef", "k2FormalNameRef", "k2Generate",
        "k2KeywordDefine", "k2KeywordLevel", "k2KeywordParameters", "k2Literal",
        "k2Optional", "k2Required", "k3Build", "k3Collector", "k3ForEach", "k3Formal",
        "k3FormalList", "k3Generate", "k3KeywordDefine", "k3KeywordLevel", "k3KeywordParameters",
        "kelvin", "keywordMap", "kilogram", "leaf", "leafOccurrenceAnnotate",
        "leftJustify", "lengthValue", "lessThan", "lessThanOrEqual", "library",
        "libraryHeader", "libraryNameCaseSensitive", "libraryNameDef", "libraryNameRef",
        "libraryObjectNameCaseSensitive", "libraryObjectNameDef", "libraryObjectNameRef",
        "libraryRef", "loadDelay", "localPortGroup", "localPortGroupNameCaseSensitive",
        "localPortGroupNameDef", "localPortGroupNameRef", "localPortGroupRef",
        "logicalConnectivity", "logicDefinitions", "logicList", "logicMapInput",
        "logicMapOutput", "logicModelUnits", "logicModelView", "logicNameDef",
        "logicNameRef", "logicOneOf", "logicRef", "logicValue", "lsbToMsb", "mantissa",
        "mark", "maskLayoutUnits", "maskLayoutView", "measured", "meter", "middleJustify",
        "minimalWidth", "minimumStringLength", "miNoMax", "miNoMaxValue", "minuend",
        "minuteNumber", "mixedDirection", "mnm", "mole", "monthNumber", "msbToLsb",
        "mustJoin", "nameAlias", "nameCaseSensitivity", "nameDef", "nameDimension",
        "nameDimensionStructure", "nameInformation", "namePartSeparator", "nameRef",
        "nameStructure", "narrowPort", "narrowWire", "noHotspotGrid", "nominalHotspotGrid",
        "nonPermutable", "not_", "notInherited", "number", "numberExpression",
        "numberOfBasicUnits", "numberOfNewUnits", "numberParameter", "numberParameterAssign",
        "numberParameterRef", "numberPoint", "numberValue", "numerator", "occurrenceAnnotate",
        "occurrenceHierarchyAnnotate", "offsetEvent", "ohm", "openShape", "or_",
        "origin", "originalBoundingBox", "originalDrawingDate", "originalDrawingDateDisplay",
        "originalName", "otherwiseFrame", "otherwiseFrameAnnotate", "otherwiseFrameRef",
        "output", "outputPort", "outputPortAttributes", "owner", "page", "pageAnnotate",
        "pageBorder", "pageBorderTemplate", "pageBorderTemplateRef", "pageCommentGraphics",
        "pageHeader", "pageIdentification", "pageIdentificationDisplay", "pageNameCaseSensitive",
        "pageNameDef", "pageNameRef", "pagePropertyDisplay", "pageRef", "pageSize",
        "pageTitle", "pageTitleBlock", "pageTitleBlockAttributeDisplay", "pageTitleBlockAttributes",
        "pageTitleBlockTemplate", "pageTitleBlockTemplateRef", "pageTitleDisplay",
        "parameterDisplay", "parameterNameCaseSensitive", "parameterNameDef",
        "parameterNameDisplay", "parameterNameRef", "path", "pathDelay", "pathWidth",
        "pcbLayoutUnits", "pcbLayoutView", "permutable", "physicalDefaults", "physicalScaling",
        "pixelPattern", "pixelRow", "point", "pointList", "pointValue", "polygon",
        "port", "portAnnotate", "portAttributeDisplay", "portBundle", "portDelay",
        "portDelayDisplay", "portDelayNameDef", "portDelayNameRef", "portDelayOverride",
        "portDirection", "portDirectionIndicator", "portIndexValue", "portInstanceRef",
        "portJoined", "portList", "portLoadDelay", "portLoadDelayDisplay", "portLoadDelayNameDef",
        "portLoadDelayNameRef", "portLoadDelayOverride", "portMemberRef", "portNameCaseSensitive",
        "portNameDef", "portNameDisplay", "portNameGenerator", "portNameGeneratorDisplay",
        "portNameRef", "portPropertyDisplay", "portPropertyDisplayOverride", "portPropertyOverride",
        "portRef", "portSet", "portWidth", "presentLogicValue", "previousLogicValue",
        "previousVersion", "primaryName", "program", "property", "propertyDisplay",
        "propertyDisplayOverride", "propertyInheritanceControl", "propertyNameCaseSensitive",
        "propertyNameDef", "propertyNameDisplay", "propertyNameRef", "propertyOverride",
        "proportionalFont", "pt", "pt1", "pt2", "radian", "reason", "rectangle",
        "red", "removeDisplay", "repetitionCount", "repetitionCountDisplay", "replaceDisplay",
        "required", "resolves", "revision", "revisionDisplay", "rightJustify",
        "ripperHotspot", "ripperHotspotRef", "rotation", "round", "rowSize", "scaledInteger",
        "scaleX", "scaleY", "schematicBus", "schematicBusDetails", "schematicBusGraphics",
        "schematicBusJoined", "schematicBusSlice", "schematicComplexFigure", "schematicFigureMacro",
        "schematicFigureMacroRef", "schematicForFrameBorder", "schematicForFrameBorderTemplate",
        "schematicForFrameBorderTemplateRef", "schematicForFrameImplementation",
        "schematicForFrameImplementationHeader", "schematicFrameImplementationDetails",
        "schematicGlobalPortAttributes", "schematicGlobalPortImplementation",
        "schematicGlobalPortImplementationRef", "schematicGlobalPortTemplate",
        "schematicGlobalPortTemplateRef", "schematicIfFrameBorder", "schematicIfFrameBorderTemplate",
        "schematicIfFrameBorderTemplateRef", "schematicIfFrameImplementation",
        "schematicIfFrameImplementationHeader", "schematicImplementation", "schematicInstanceImplementation",
        "schematicInstanceImplementationRef", "schematicInterconnectAttributeDisplay",
        "schematicInterconnectHeader", "schematicInterconnectTerminatorImplementation",
        "schematicInterconnectTerminatorImplementationRef", "schematicInterconnectTerminatorTemplate",
        "schematicInterconnectTerminatorTemplateRef", "schematicJunctionImplementation",
        "schematicJunctionImplementationRef", "schematicJunctionTemplate", "schematicJunctionTemplateRef",
        "schematicMasterPortImplementation", "schematicMasterPortImplementationRef",
        "schematicMasterPortTemplate", "schematicMasterPortTemplateRef", "schematicMetric",
        "schematicNet", "schematicNetDetails", "schematicNetGraphics", "schematicNetJoined",
        "schematicOffPageConnectorImplementation", "schematicOffPageConnectorImplementationRef",
        "schematicOffPageConnectorTemplate", "schematicOffPageConnectorTemplateRef",
        "schematicOnPageConnectorImplementation", "schematicOnPageConnectorImplementationRef",
        "schematicOnPageConnectorTemplate", "schematicOnPageConnectorTemplateRef",
        "schematicOtherwiseFrameBorder", "schematicOtherwiseFrameBorderTemplate",
        "schematicOtherwiseFrameBorderTemplateRef", "schematicOtherwiseFrameImplementation",
        "schematicOtherwiseFrameImplementationHeader", "schematicPortAcPower",
        "schematicPortAcPowerRecommendedFrequency", "schematicPortAcPowerRecommendedVoltageRms",
        "schematicPortAnalog", "schematicPortAttributes", "schematicPortChassisGround",
        "schematicPortClock", "schematicPortDcPower", "schematicPortDcPowerRecommendedVoltage",
        "schematicPortEarthGround", "schematicPortGround", "schematicPortNonLogical",
        "schematicPortOpenCollector", "schematicPortOpenEmitter", "schematicPortPower",
        "schematicPortStyle", "schematicPortThreeState", "schematicRequiredDefaults",
        "schematicRipperImplementation", "schematicRipperImplementationRef", "schematicRipperTemplate",
        "schematicRipperTemplateRef", "schematicSubBus", "schematicSubBusSet",
        "schematicSubInterconnectHeader", "schematicSubNet", "schematicSubNetSet",
        "schematicSymbol", "schematicSymbolBorder", "schematicSymbolBorderTemplate",
        "schematicSymbolBorderTemplateRef", "schematicSymbolHeader", "schematicSymbolPortImplementation",
        "schematicSymbolPortImplementationRef", "schematicSymbolPortTemplate",
        "schematicSymbolPortTemplateRef", "schematicSymbolRef", "schematicTemplateHeader",
        "schematicUnits", "schematicView", "schematicViewHeader", "schematicWireAffinity",
        "schematicWireStyle", "second", "secondIntegerExpression", "secondNumber",
        "secondStringExpression", "section", "sectionNameDef", "sectionTitle",
        "sequence", "setAngle", "setCapacitance", "setCurrent", "setDistance",
        "setFrequency", "setTime", "setVoltage", "shape", "siemens", "signal",
        "signalAnnotate", "signalGroup", "signalGroupAnnotate", "signalGroupNameCaseSensitive",
        "signalGroupNameDef", "signalGroupNameRef", "signalGroupRef", "signalIndexValue",
        "signalJoined", "signalList", "signalMemberRef", "signalNameCaseSensitive",
        "signalNameDef", "signalNameRef", "signalRef", "signalWidth", "simpleName",
        "startPoint", "status", "step", "string", "stringConcatenate", "stringConstant",
        "stringConstantRef", "stringEqual", "stringExpression", "stringLength",
        "stringParameter", "stringParameterAssign", "stringParameterRef", "stringPrefix",
        "stringSuffix", "stringValue", "strong", "subIssue", "substring", "substringLength",
        "substringOffset", "subtrahend", "symbolicLayoutUnits", "symbolicLayoutView",
        "symbolPortImplementationNameDef", "symbolPortImplementationNameRef",
        "technology", "textHeight", "throughPoint", "time", "timeDelay", "timeInterval",
        "timeStamp", "timeValue", "timing", "timingDisplay", "timingNameDef",
        "timingNameRef", "toInteger", "topJustify", "totalPages", "totalPagesDisplay",
        "transform", "transition", "etrue", "truncate", "typedValue", "typeface",
        "typefaceSuffix", "unconfigured", "unconstrained", "undefined", "unit",
        "unitDefinitions", "unitExponent", "unitNameDef", "unitNameRef", "unitRef",
        "unrestricted", "unspecified", "unspecifiedDirectionPort", "untyped",
        "unused", "usableArea", "userData", "userDataTag", "version", "verticalJustification",
        "viewGroup", "viewGroupHeader", "viewGroupNameCaseSensitive", "viewGroupNameDef",
        "viewGroupNameRef", "viewGroupRef", "viewNameCaseSensitive", "viewNameDef",
        "viewNameDisplay", "viewNameRef", "viewPropertyDisplay", "viewPropertyOverride",
        "viewRef", "visible", "volt", "voltageMap", "voltageValue", "watt", "weak",
        "weakJoined", "weber", "widePort", "wideWire", "written", "xCoordinate",
        "xNumberValue", "xor_", "yCoordinate", "year", "yearNumber", "yNumberValue",
        "integerToken", "stringToken",
    ];
    EDIF300Parser._LITERAL_NAMES = [
        undefined, "'(absolute'", "')'", "'(acLoad'", "'(acLoadDisplay'", "'(addDisplay'",
        "'(ampere'", "'(and'", "'(annotate'", "'(approvedDate'", "'(approvedDateDisplay'",
        "'(arc'", "'(ascii'", "'(associatedInterconnectNameDisplay'", "'(author'",
        "'(backgroundColor'", "'(baselineJustify'", "'(becomes'", "'(behaviorView'",
        "'(bidirectional'", "'(bidirectionalPort'", "'(bidirectionalPortAttributes'",
        "'(bitOrder'", "'(boldStyle'", "'(boolean'", "'(booleanConstant'", "'(booleanConstantRef'",
        "'(booleanMap'", "'(booleanParameter'", "'(booleanParameterAssign'", "'(booleanParameterRef'",
        "'(borderPattern'", "'(borderPatternVisible'", "'(borderWidth'", "'(bottomJustify'",
        "'(calculated'", "'(candela'", "'(caplineJustify'", "'(cell'", "'(cellHeader'",
        "'(cellNameDisplay'", "'(cellPropertyDisplay'", "'(cellPropertyDisplayOverride'",
        "'(cellPropertyOverride'", "'(cellRef'", "'(celsius'", "'(centerJustify'",
        "'(characterEncoding'", "'(checkDate'", "'(checkDateDisplay'", "'(circle'",
        "'(cluster'", "'(clusterConfiguration'", "'(clusterConfigurationNameCaseSensitive'",
        "'(clusterConfigurationRef'", "'(clusterHeader'", "'(clusterNameCaseSensitive'",
        "'(clusterPropertyDisplay'", "'(clusterPropertyDisplayOverride'", "'(clusterPropertyOverride'",
        "'(clusterRef'", "'(color'", "'(comment'", "'(commentGraphics'", "'(companyName'",
        "'(companyNameDisplay'", "'(complementedName'", "'(complementedNamePart'",
        "'(complexGeometry'", "'(complexName'", "'(compound'", "'(condition'",
        "'(conditionDisplay'", "'(connectedSignalIndexGenerator'", "'(connectedSignalIndexGeneratorDisplay'",
        "'(connectivityBus'", "'(connectivityBusJoined'", "'(connectivityBusSlice'",
        "'(connectivityFrameStructure'", "'(connectivityNet'", "'(connectivityNetJoined'",
        "'(connectivityRipper'", "'(connectivityRipperRef'", "'(connectivityStructure'",
        "'(connectivitySubBus'", "'(connectivitySubNet'", "'(connectivityTagGenerator'",
        "'(connectivityTagGeneratorDisplay'", "'(connectivityUnits'", "'(connectivityView'",
        "'(connectivityViewHeader'", "'(constantValues'", "'(contract'", "'(contractDisplay'",
        "'(copyright'", "'(copyrightDisplay'", "'(cornerType'", "'(coulomb'",
        "'(criticality'", "'(criticalityDisplay'", "'(currentMap'", "'(curve'",
        "'(dataOrigin'", "'(date'", "'(dcFanInLoad'", "'(dcFanInLoadDisplay'",
        "'(dcFanOutLoad'", "'(dcFanOutLoadDisplay'", "'(dcMaxFanIn'", "'(dcMaxFanInDisplay'",
        "'(dcMaxFanOut'", "'(dcMaxFanOutDisplay'", "'(decimalToString'", "'(defaultClusterConfiguration'",
        "'(defaultConnection'", "'(degree'", "'(delay'", "'(derivedFrom'", "'(design'",
        "'(designator'", "'(designatorDisplay'", "'(designHeader'", "'(designHierarchy'",
        "'(designHierarchyHeader'", "'(designHierarchyNameCaseSensitive'", "'(designNameCaseSensitive'",
        "'(designUnits'", "'(diagram'", "'(directionalPortAttributeOverride'",
        "'(display'", "'(displayAttributes'", "'(displayName'", "'(displayNameOverride'",
        "'(documentation'", "'(documentationHeader'", "'(documentationNameCaseSensitive'",
        "'(documentationUnits'", "'(dominates'", "'(dot'", "'(drawingDescription'",
        "'(drawingDescriptionDisplay'", "'(drawingIdentification'", "'(drawingIdentificationDisplay'",
        "'(drawingSize'", "'(drawingSizeDisplay'", "'(duration'", "'(e'", "'(edif'",
        "'(edifHeader'", "'(edifLevel'", "'(edifVersion'", "'(endType'", "'(engineeringDate'",
        "'(engineeringDateDisplay'", "'(event'", "'(extend'", "'(external'", "'(fahrenheit'",
        "'(false'", "'(farad'", "'(figure'", "'(figureGroup'", "'(figureGroupNameCaseSensitive'",
        "'(figureGroupOverride'", "'(fillPattern'", "'(fillPatternVisible'", "'(fixed'",
        "'(font'", "'(fontCapitalHeight'", "'(fontDefinitions'", "'(fontDescent'",
        "'(fontHeight'", "'(fontProportions'", "'(fontRef'", "'(fonts'", "'(fontWidth'",
        "'(forbiddenEvent'", "'(forFrame'", "'(forFrameAnnotate'", "'(forFrameIndex'",
        "'(forFrameIndexDisplay'", "'(forFrameIndexNameCaseSensitive'", "'(forFrameIndexRef'",
        "'(forFrameMemberRef'", "'(forFrameRef'", "'(frameConfiguration'", "'(frameNameCaseSensitive'",
        "'(frameRef'", "'(fromBottom'", "'(fromLeft'", "'(fromRight'", "'(fromTop'",
        "'(generated'", "'(geometryMacro'", "'(geometryMacroHeader'", "'(geometryMacroRef'",
        "'(geometryMacroUnits'", "'(globalPort'", "'(globalPortBundle'", "'(globalPortDefinitions'",
        "'(globalPortList'", "'(globalPortNameCaseSensitive'", "'(globalPortNameDisplay'",
        "'(globalPortPropertyDisplay'", "'(globalPortRef'", "'(globalPortScope'",
        "'(henry'", "'(hertz'", "'(horizontalJustification'", "'(hotspot'", "'(hotspotConnectDirection'",
        "'(hotspotGrid'", "'(hotspotNameCaseSensitive'", "'(hotspotNameDisplay'",
        "'(ieeeSection'", "'(ieeeStandard'", "'(ifFrame'", "'(ifFrameAnnotate'",
        "'(ifFrameRef'", "'(ifFrameSet'", "'(ignore'", "'(implementationNameCaseSensitive'",
        "'(implementationNameDisplay'", "'(indexEndDisplay'", "'(indexNameDisplay'",
        "'(indexStart'", "'(indexStartDisplay'", "'(indexStep'", "'(indexStepDisplay'",
        "'(indexValue'", "'(input'", "'(inputPort'", "'(inputPortAttributes'",
        "'(instance'", "'(instanceConfiguration'", "'(instanceIndexValue'", "'(instanceMemberRef'",
        "'(instanceNameCaseSensitive'", "'(instanceNameDisplay'", "'(instanceNameGenerator'",
        "'(instanceNameGeneratorDisplay'", "'(instancePortAttributeDisplay'",
        "'(instancePortAttributes'", "'(instancePropertyDisplay'", "'(instancePropertyOverride'",
        "'(instanceRef'", "'(instanceWidth'", "'(instanceWidthDisplay'", "'(integer'",
        "'(integerConstant'", "'(integerConstantRef'", "'(integerEqual'", "'(integerParameter'",
        "'(integerParameterAssign'", "'(integerParameterRef'", "'(integerProduct'",
        "'(integerQuotient'", "'(integerRemainder'", "'(integerSubtract'", "'(integerSum'",
        "'(interconnectAnnotate'", "'(interconnectAttachedText'", "'(interconnectDelay'",
        "'(interconnectDelayDisplay'", "'(interconnectHeader'", "'(interconnectNameCaseSensitive'",
        "'(interconnectNameDisplay'", "'(interconnectPropertyDisplay'", "'(interconnectRef'",
        "'(interconnectSet'", "'(interface'", "'(interfaceJoined'", "'(interfaceUnits'",
        "'(iso8859'", "'(isolated'", "'(italicStyle'", "'(jisx0201'", "'(jisx0208'",
        "'(joinedAsSignal'", "'(joule'", "'(k0KeywordLevel'", "'(k1KeywordAlias'",
        "'(k1KeywordLevel'", "'(k2Actual'", "'(k2Build'", "'(k2Formal'", "'(k2Generate'",
        "'(k2KeywordDefine'", "'(k2KeywordLevel'", "'(k2KeywordParameters'", "'(k2Literal'",
        "'(k2Optional'", "'(k2Required'", "'(k3Build'", "'(k3Collector'", "'(k3ForEach'",
        "'(k3Formal'", "'(k3FormalList'", "'(k3Generate'", "'(k3KeywordDefine'",
        "'(k3KeywordLevel'", "'(k3KeywordParameters'", "'(kelvin'", "'(keywordMap'",
        "'(kilogram'", "'(leaf'", "'(leafOccurrenceAnnotate'", "'(leftJustify'",
        "'(lessThan'", "'(lessThanOrEqual'", "'(library'", "'(libraryHeader'",
        "'(libraryNameCaseSensitive'", "'(libraryObjectNameCaseSensitive'", "'(libraryRef'",
        "'(loadDelay'", "'(localPortGroup'", "'(localPortGroupNameCaseSensitive'",
        "'(localPortGroupRef'", "'(logicalConnectivity'", "'(logicDefinitions'",
        "'(logicList'", "'(logicMapInput'", "'(logicMapOutput'", "'(logicModelUnits'",
        "'(logicModelView'", "'(logicOneOf'", "'(logicRef'", "'(logicValue'",
        "'(lsbToMsb'", "'(maskLayoutUnits'", "'(maskLayoutView'", "'(measured'",
        "'(meter'", "'(middleJustify'", "'(minimalWidth'", "'(minimumStringLength'",
        "'(miNoMax'", "'(mixedDirection'", "'(mnm'", "'(mole'", "'(msbToLsb'",
        "'(mustJoin'", "'(nameAlias'", "'(nameCaseSensitivity'", "'(nameDimension'",
        "'(nameDimensionStructure'", "'(nameInformation'", "'(namePartSeparator'",
        "'(nameStructure'", "'(narrowPort'", "'(narrowWire'", "'(noHotspotGrid'",
        "'(nominalHotspotGrid'", "'(nonPermutable'", "'(not'", "'(notInherited'",
        "'(number'", "'(numberParameter'", "'(numberParameterAssign'", "'(numberParameterRef'",
        "'(numberPoint'", "'(occurrenceAnnotate'", "'(occurrenceHierarchyAnnotate'",
        "'(offsetEvent'", "'(ohm'", "'(openShape'", "'(or'", "'(origin'", "'(originalBoundingBox'",
        "'(originalDrawingDate'", "'(originalDrawingDateDisplay'", "'(otherwiseFrame'",
        "'(otherwiseFrameAnnotate'", "'(otherwiseFrameRef'", "'(output'", "'(outputPort'",
        "'(outputPortAttributes'", "'(owner'", "'(page'", "'(pageAnnotate'", "'(pageBorder'",
        "'(pageBorderTemplate'", "'(pageBorderTemplateRef'", "'(pageCommentGraphics'",
        "'(pageHeader'", "'(pageIdentification'", "'(pageIdentificationDisplay'",
        "'(pageNameCaseSensitive'", "'(pagePropertyDisplay'", "'(pageRef'", "'(pageSize'",
        "'(pageTitle'", "'(pageTitleBlock'", "'(pageTitleBlockAttributeDisplay'",
        "'(pageTitleBlockAttributes'", "'(pageTitleBlockTemplate'", "'(pageTitleBlockTemplateRef'",
        "'(pageTitleDisplay'", "'(parameterDisplay'", "'(parameterNameCaseSensitive'",
        "'(parameterNameDisplay'", "'(path'", "'(pathDelay'", "'(pathWidth'",
        "'(pcbLayoutUnits'", "'(pcbLayoutView'", "'(permutable'", "'(physicalDefaults'",
        "'(physicalScaling'", "'(pixelPattern'", "'(pixelRow'", "'(point'", "'(pointList'",
        "'(polygon'", "'(port'", "'(portAnnotate'", "'(portAttributeDisplay'",
        "'(portBundle'", "'(portDelay'", "'(portDelayDisplay'", "'(portDelayOverride'",
        "'(portIndexValue'", "'(portInstanceRef'", "'(portJoined'", "'(portList'",
        "'(portLoadDelay'", "'(portLoadDelayDisplay'", "'(portLoadDelayOverride'",
        "'(portMemberRef'", "'(portNameCaseSensitive'", "'(portNameDisplay'",
        "'(portNameGenerator'", "'(portNameGeneratorDisplay'", "'(portPropertyDisplay'",
        "'(portPropertyDisplayOverride'", "'(portPropertyOverride'", "'(portRef'",
        "'(portSet'", "'(portWidth'", "'(previousVersion'", "'(primaryName'",
        "'(program'", "'(property'", "'(propertyDisplay'", "'(propertyDisplayOverride'",
        "'(propertyInheritanceControl'", "'(propertyNameCaseSensitive'", "'(propertyNameDisplay'",
        "'(propertyOverride'", "'(proportionalFont'", "'(pt'", "'(radian'", "'(reason'",
        "'(rectangle'", "'(removeDisplay'", "'(repetitionCount'", "'(repetitionCountDisplay'",
        "'(replaceDisplay'", "'(required'", "'(resolves'", "'(revision'", "'(revisionDisplay'",
        "'(rightJustify'", "'(ripperHotspot'", "'(ripperHotspotRef'", "'(rotation'",
        "'(round'", "'(scaleX'", "'(scaleY'", "'(schematicBus'", "'(schematicBusDetails'",
        "'(schematicBusGraphics'", "'(schematicBusJoined'", "'(schematicBusSlice'",
        "'(schematicComplexFigure'", "'(schematicFigureMacro'", "'(schematicFigureMacroRef'",
        "'(schematicForFrameBorder'", "'(schematicForFrameBorderTemplate'", "'(schematicForFrameBorderTemplateRef'",
        "'(schematicForFrameImplementation'", "'(schematicForFrameImplementationHeader'",
        "'(schematicFrameImplementationDetails'", "'(schematicGlobalPortAttributes'",
        "'(schematicGlobalPortImplementation'", "'(schematicGlobalPortImplementationRef'",
        "'(schematicGlobalPortTemplate'", "'(schematicGlobalPortTemplateRef'",
        "'(schematicIfFrameBorder'", "'(schematicIfFrameBorderTemplate'", "'(schematicIfFrameBorderTemplateRef'",
        "'(schematicIfFrameImplementation'", "'(schematicIfFrameImplementationHeader'",
        "'(schematicImplementation'", "'(schematicInstanceImplementation'", "'(schematicInstanceImplementationRef'",
        "'(schematicInterconnectAttributeDisplay'", "'(schematicInterconnectHeader'",
        "'(schematicInterconnectTerminatorImplementation'", "'(schematicInterconnectTerminatorImplementationRef'",
        "'(schematicInterconnectTerminatorTemplate'", "'(schematicInterconnectTerminatorTemplateRef'",
        "'(schematicJunctionImplementation'", "'(schematicJunctionImplementationRef'",
        "'(schematicJunctionTemplate'", "'(schematicJunctionTemplateRef'", "'(schematicMasterPortImplementation'",
        "'(schematicMasterPortImplementationRef'", "'(schematicMasterPortTemplate'",
        "'(schematicMasterPortTemplateRef'", "'(schematicMetric'", "'(schematicNet'",
        "'(schematicNetDetails'", "'(schematicNetGraphics'", "'(schematicNetJoined'",
        "'(schematicOffPageConnectorImplementation'", "'(schematicOffPageConnectorImplementationRef'",
        "'(schematicOffPageConnectorTemplate'", "'(schematicOffPageConnectorTemplateRef'",
        "'(schematicOnPageConnectorImplementation'", "'(schematicOnPageConnectorImplementationRef'",
        "'(schematicOnPageConnectorTemplate'", "'(schematicOnPageConnectorTemplateRef'",
        "'(schematicOtherwiseFrameBorder'", "'(schematicOtherwiseFrameBorderTemplate'",
        "'(schematicOtherwiseFrameBorderTemplateRef'", "'(schematicOtherwiseFrameImplementation'",
        "'(schematicOtherwiseFrameImplementationHeader'", "'(schematicPortAcPower'",
        "'(schematicPortAcPowerRecommendedFrequency'", "'(schematicPortAcPowerRecommendedVoltageRms'",
        "'(schematicPortAnalog'", "'(schematicPortAttributes'", "'(schematicPortChassisGround'",
        "'(schematicPortClock'", "'(schematicPortDcPower'", "'(schematicPortDcPowerRecommendedVoltage'",
        "'(schematicPortEarthGround'", "'(schematicPortGround'", "'(schematicPortNonLogical'",
        "'(schematicPortOpenCollector'", "'(schematicPortOpenEmitter'", "'(schematicPortPower'",
        "'(schematicPortStyle'", "'(schematicPortThreeState'", "'(schematicRequiredDefaults'",
        "'(schematicRipperImplementation'", "'(schematicRipperImplementationRef'",
        "'(schematicRipperTemplate'", "'(schematicRipperTemplateRef'", "'(schematicSubBus'",
        "'(schematicSubBusSet'", "'(schematicSubInterconnectHeader'", "'(schematicSubNet'",
        "'(schematicSubNetSet'", "'(schematicSymbol'", "'(schematicSymbolBorder'",
        "'(schematicSymbolBorderTemplate'", "'(schematicSymbolBorderTemplateRef'",
        "'(schematicSymbolHeader'", "'(schematicSymbolPortImplementation'", "'(schematicSymbolPortImplementationRef'",
        "'(schematicSymbolPortTemplate'", "'(schematicSymbolPortTemplateRef'",
        "'(schematicSymbolRef'", "'(schematicTemplateHeader'", "'(schematicUnits'",
        "'(schematicView'", "'(schematicViewHeader'", "'(schematicWireAffinity'",
        "'(schematicWireStyle'", "'(second'", "'(section'", "'(sectionTitle'",
        "'(sequence'", "'(setAngle'", "'(setCapacitance'", "'(setCurrent'", "'(setDistance'",
        "'(setFrequency'", "'(setTime'", "'(setVoltage'", "'(shape'", "'(siemens'",
        "'(signal'", "'(signalAnnotate'", "'(signalGroup'", "'(signalGroupAnnotate'",
        "'(signalGroupNameCaseSensitive'", "'(signalGroupRef'", "'(signalIndexValue'",
        "'(signalJoined'", "'(signalList'", "'(signalMemberRef'", "'(signalNameCaseSensitive'",
        "'(signalRef'", "'(signalWidth'", "'(status'", "'(step'", "'(string'",
        "'(stringConcatenate'", "'(stringConstant'", "'(stringConstantRef'", "'(stringEqual'",
        "'(stringLength'", "'(stringParameter'", "'(stringParameterAssign'", "'(stringParameterRef'",
        "'(stringPrefix'", "'(stringSuffix'", "'(strong'", "'(substring'", "'(symbolicLayoutUnits'",
        "'(symbolicLayoutView'", "'(technology'", "'(textHeight'", "'(time'",
        "'(timeInterval'", "'(timeStamp'", "'(timing'", "'(timingDisplay'", "'(topJustify'",
        "'(totalPages'", "'(totalPagesDisplay'", "'(transform'", "'(transition'",
        "'(true'", "'(truncate'", "'(typeface'", "'(typefaceSuffix'", "'(unconfigured'",
        "'(unconstrained'", "'(undefined'", "'(unit'", "'(unitDefinitions'", "'(unitRef'",
        "'(unrestricted'", "'(unspecified'", "'(unspecifiedDirectionPort'", "'(untyped'",
        "'(unused'", "'(usableArea'", "'(userData'", "'(version'", "'(verticalJustification'",
        "'(viewGroup'", "'(viewGroupHeader'", "'(viewGroupNameCaseSensitive'",
        "'(viewGroupRef'", "'(viewNameCaseSensitive'", "'(viewNameDisplay'", "'(viewPropertyDisplay'",
        "'(viewPropertyOverride'", "'(viewRef'", "'(visible'", "'(volt'", "'(voltageMap'",
        "'(watt'", "'(weak'", "'(weakJoined'", "'(weber'", "'(widePort'", "'(wideWire'",
        "'(written'", "'(xor'", "'(year'",
    ];
    EDIF300Parser._SYMBOLIC_NAMES = [
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, "IDENTIFIER", "STRING_LITERAL", "DECIMAL_LITERAL",
        "WS",
    ];
    EDIF300Parser.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(EDIF300Parser._LITERAL_NAMES, EDIF300Parser._SYMBOLIC_NAMES, []);
    EDIF300Parser._serializedATNSegments = 14;
    EDIF300Parser._serializedATNSegment0 = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x03\u02A0\u1EA8\x04" +
        "\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
        "\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
        "\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
        "\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
        "\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
        "\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
        "#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04+\t" +
        "+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
        "4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
        "=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
        "F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04" +
        "O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04V\tV\x04W\tW\x04" +
        "X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04\\\t\\\x04]\t]\x04^\t^\x04_\t_\x04`\t" +
        "`\x04a\ta\x04b\tb\x04c\tc\x04d\td\x04e\te\x04f\tf\x04g\tg\x04h\th\x04" +
        "i\ti\x04j\tj\x04k\tk\x04l\tl\x04m\tm\x04n\tn\x04o\to\x04p\tp\x04q\tq\x04" +
        "r\tr\x04s\ts\x04t\tt\x04u\tu\x04v\tv\x04w\tw\x04x\tx\x04y\ty\x04z\tz\x04" +
        "{\t{\x04|\t|\x04}\t}\x04~\t~\x04\x7F\t\x7F\x04\x80\t\x80\x04\x81\t\x81" +
        "\x04\x82\t\x82\x04\x83\t\x83\x04\x84\t\x84\x04\x85\t\x85\x04\x86\t\x86" +
        "\x04\x87\t\x87\x04\x88\t\x88\x04\x89\t\x89\x04\x8A\t\x8A\x04\x8B\t\x8B" +
        "\x04\x8C\t\x8C\x04\x8D\t\x8D\x04\x8E\t\x8E\x04\x8F\t\x8F\x04\x90\t\x90" +
        "\x04\x91\t\x91\x04\x92\t\x92\x04\x93\t\x93\x04\x94\t\x94\x04\x95\t\x95" +
        "\x04\x96\t\x96\x04\x97\t\x97\x04\x98\t\x98\x04\x99\t\x99\x04\x9A\t\x9A" +
        "\x04\x9B\t\x9B\x04\x9C\t\x9C\x04\x9D\t\x9D\x04\x9E\t\x9E\x04\x9F\t\x9F" +
        "\x04\xA0\t\xA0\x04\xA1\t\xA1\x04\xA2\t\xA2\x04\xA3\t\xA3\x04\xA4\t\xA4" +
        "\x04\xA5\t\xA5\x04\xA6\t\xA6\x04\xA7\t\xA7\x04\xA8\t\xA8\x04\xA9\t\xA9" +
        "\x04\xAA\t\xAA\x04\xAB\t\xAB\x04\xAC\t\xAC\x04\xAD\t\xAD\x04\xAE\t\xAE" +
        "\x04\xAF\t\xAF\x04\xB0\t\xB0\x04\xB1\t\xB1\x04\xB2\t\xB2\x04\xB3\t\xB3" +
        "\x04\xB4\t\xB4\x04\xB5\t\xB5\x04\xB6\t\xB6\x04\xB7\t\xB7\x04\xB8\t\xB8" +
        "\x04\xB9\t\xB9\x04\xBA\t\xBA\x04\xBB\t\xBB\x04\xBC\t\xBC\x04\xBD\t\xBD" +
        "\x04\xBE\t\xBE\x04\xBF\t\xBF\x04\xC0\t\xC0\x04\xC1\t\xC1\x04\xC2\t\xC2" +
        "\x04\xC3\t\xC3\x04\xC4\t\xC4\x04\xC5\t\xC5\x04\xC6\t\xC6\x04\xC7\t\xC7" +
        "\x04\xC8\t\xC8\x04\xC9\t\xC9\x04\xCA\t\xCA\x04\xCB\t\xCB\x04\xCC\t\xCC" +
        "\x04\xCD\t\xCD\x04\xCE\t\xCE\x04\xCF\t\xCF\x04\xD0\t\xD0\x04\xD1\t\xD1" +
        "\x04\xD2\t\xD2\x04\xD3\t\xD3\x04\xD4\t\xD4\x04\xD5\t\xD5\x04\xD6\t\xD6" +
        "\x04\xD7\t\xD7\x04\xD8\t\xD8\x04\xD9\t\xD9\x04\xDA\t\xDA\x04\xDB\t\xDB" +
        "\x04\xDC\t\xDC\x04\xDD\t\xDD\x04\xDE\t\xDE\x04\xDF\t\xDF\x04\xE0\t\xE0" +
        "\x04\xE1\t\xE1\x04\xE2\t\xE2\x04\xE3\t\xE3\x04\xE4\t\xE4\x04\xE5\t\xE5" +
        "\x04\xE6\t\xE6\x04\xE7\t\xE7\x04\xE8\t\xE8\x04\xE9\t\xE9\x04\xEA\t\xEA" +
        "\x04\xEB\t\xEB\x04\xEC\t\xEC\x04\xED\t\xED\x04\xEE\t\xEE\x04\xEF\t\xEF" +
        "\x04\xF0\t\xF0\x04\xF1\t\xF1\x04\xF2\t\xF2\x04\xF3\t\xF3\x04\xF4\t\xF4" +
        "\x04\xF5\t\xF5\x04\xF6\t\xF6\x04\xF7\t\xF7\x04\xF8\t\xF8\x04\xF9\t\xF9" +
        "\x04\xFA\t\xFA\x04\xFB\t\xFB\x04\xFC\t\xFC\x04\xFD\t\xFD\x04\xFE\t\xFE" +
        "\x04\xFF\t\xFF\x04\u0100\t\u0100\x04\u0101\t\u0101\x04\u0102\t\u0102\x04" +
        "\u0103\t\u0103\x04\u0104\t\u0104\x04\u0105\t\u0105\x04\u0106\t\u0106\x04" +
        "\u0107\t\u0107\x04\u0108\t\u0108\x04\u0109\t\u0109\x04\u010A\t\u010A\x04" +
        "\u010B\t\u010B\x04\u010C\t\u010C\x04\u010D\t\u010D\x04\u010E\t\u010E\x04" +
        "\u010F\t\u010F\x04\u0110\t\u0110\x04\u0111\t\u0111\x04\u0112\t\u0112\x04" +
        "\u0113\t\u0113\x04\u0114\t\u0114\x04\u0115\t\u0115\x04\u0116\t\u0116\x04" +
        "\u0117\t\u0117\x04\u0118\t\u0118\x04\u0119\t\u0119\x04\u011A\t\u011A\x04" +
        "\u011B\t\u011B\x04\u011C\t\u011C\x04\u011D\t\u011D\x04\u011E\t\u011E\x04" +
        "\u011F\t\u011F\x04\u0120\t\u0120\x04\u0121\t\u0121\x04\u0122\t\u0122\x04" +
        "\u0123\t\u0123\x04\u0124\t\u0124\x04\u0125\t\u0125\x04\u0126\t\u0126\x04" +
        "\u0127\t\u0127\x04\u0128\t\u0128\x04\u0129\t\u0129\x04\u012A\t\u012A\x04" +
        "\u012B\t\u012B\x04\u012C\t\u012C\x04\u012D\t\u012D\x04\u012E\t\u012E\x04" +
        "\u012F\t\u012F\x04\u0130\t\u0130\x04\u0131\t\u0131\x04\u0132\t\u0132\x04" +
        "\u0133\t\u0133\x04\u0134\t\u0134\x04\u0135\t\u0135\x04\u0136\t\u0136\x04" +
        "\u0137\t\u0137\x04\u0138\t\u0138\x04\u0139\t\u0139\x04\u013A\t\u013A\x04" +
        "\u013B\t\u013B\x04\u013C\t\u013C\x04\u013D\t\u013D\x04\u013E\t\u013E\x04" +
        "\u013F\t\u013F\x04\u0140\t\u0140\x04\u0141\t\u0141\x04\u0142\t\u0142\x04" +
        "\u0143\t\u0143\x04\u0144\t\u0144\x04\u0145\t\u0145\x04\u0146\t\u0146\x04" +
        "\u0147\t\u0147\x04\u0148\t\u0148\x04\u0149\t\u0149\x04\u014A\t\u014A\x04" +
        "\u014B\t\u014B\x04\u014C\t\u014C\x04\u014D\t\u014D\x04\u014E\t\u014E\x04" +
        "\u014F\t\u014F\x04\u0150\t\u0150\x04\u0151\t\u0151\x04\u0152\t\u0152\x04" +
        "\u0153\t\u0153\x04\u0154\t\u0154\x04\u0155\t\u0155\x04\u0156\t\u0156\x04" +
        "\u0157\t\u0157\x04\u0158\t\u0158\x04\u0159\t\u0159\x04\u015A\t\u015A\x04" +
        "\u015B\t\u015B\x04\u015C\t\u015C\x04\u015D\t\u015D\x04\u015E\t\u015E\x04" +
        "\u015F\t\u015F\x04\u0160\t\u0160\x04\u0161\t\u0161\x04\u0162\t\u0162\x04" +
        "\u0163\t\u0163\x04\u0164\t\u0164\x04\u0165\t\u0165\x04\u0166\t\u0166\x04" +
        "\u0167\t\u0167\x04\u0168\t\u0168\x04\u0169\t\u0169\x04\u016A\t\u016A\x04" +
        "\u016B\t\u016B\x04\u016C\t\u016C\x04\u016D\t\u016D\x04\u016E\t\u016E\x04" +
        "\u016F\t\u016F\x04\u0170\t\u0170\x04\u0171\t\u0171\x04\u0172\t\u0172\x04" +
        "\u0173\t\u0173\x04\u0174\t\u0174\x04\u0175\t\u0175\x04\u0176\t\u0176\x04" +
        "\u0177\t\u0177\x04\u0178\t\u0178\x04\u0179\t\u0179\x04\u017A\t\u017A\x04" +
        "\u017B\t\u017B\x04\u017C\t\u017C\x04\u017D\t\u017D\x04\u017E\t\u017E\x04" +
        "\u017F\t\u017F\x04\u0180\t\u0180\x04\u0181\t\u0181\x04\u0182\t\u0182\x04" +
        "\u0183\t\u0183\x04\u0184\t\u0184\x04\u0185\t\u0185\x04\u0186\t\u0186\x04" +
        "\u0187\t\u0187\x04\u0188\t\u0188\x04\u0189\t\u0189\x04\u018A\t\u018A\x04" +
        "\u018B\t\u018B\x04\u018C\t\u018C\x04\u018D\t\u018D\x04\u018E\t\u018E\x04" +
        "\u018F\t\u018F\x04\u0190\t\u0190\x04\u0191\t\u0191\x04\u0192\t\u0192\x04" +
        "\u0193\t\u0193\x04\u0194\t\u0194\x04\u0195\t\u0195\x04\u0196\t\u0196\x04" +
        "\u0197\t\u0197\x04\u0198\t\u0198\x04\u0199\t\u0199\x04\u019A\t\u019A\x04" +
        "\u019B\t\u019B\x04\u019C\t\u019C\x04\u019D\t\u019D\x04\u019E\t\u019E\x04" +
        "\u019F\t\u019F\x04\u01A0\t\u01A0\x04\u01A1\t\u01A1\x04\u01A2\t\u01A2\x04" +
        "\u01A3\t\u01A3\x04\u01A4\t\u01A4\x04\u01A5\t\u01A5\x04\u01A6\t\u01A6\x04" +
        "\u01A7\t\u01A7\x04\u01A8\t\u01A8\x04\u01A9\t\u01A9\x04\u01AA\t\u01AA\x04" +
        "\u01AB\t\u01AB\x04\u01AC\t\u01AC\x04\u01AD\t\u01AD\x04\u01AE\t\u01AE\x04" +
        "\u01AF\t\u01AF\x04\u01B0\t\u01B0\x04\u01B1\t\u01B1\x04\u01B2\t\u01B2\x04" +
        "\u01B3\t\u01B3\x04\u01B4\t\u01B4\x04\u01B5\t\u01B5\x04\u01B6\t\u01B6\x04" +
        "\u01B7\t\u01B7\x04\u01B8\t\u01B8\x04\u01B9\t\u01B9\x04\u01BA\t\u01BA\x04" +
        "\u01BB\t\u01BB\x04\u01BC\t\u01BC\x04\u01BD\t\u01BD\x04\u01BE\t\u01BE\x04" +
        "\u01BF\t\u01BF\x04\u01C0\t\u01C0\x04\u01C1\t\u01C1\x04\u01C2\t\u01C2\x04" +
        "\u01C3\t\u01C3\x04\u01C4\t\u01C4\x04\u01C5\t\u01C5\x04\u01C6\t\u01C6\x04" +
        "\u01C7\t\u01C7\x04\u01C8\t\u01C8\x04\u01C9\t\u01C9\x04\u01CA\t\u01CA\x04" +
        "\u01CB\t\u01CB\x04\u01CC\t\u01CC\x04\u01CD\t\u01CD\x04\u01CE\t\u01CE\x04" +
        "\u01CF\t\u01CF\x04\u01D0\t\u01D0\x04\u01D1\t\u01D1\x04\u01D2\t\u01D2\x04" +
        "\u01D3\t\u01D3\x04\u01D4\t\u01D4\x04\u01D5\t\u01D5\x04\u01D6\t\u01D6\x04" +
        "\u01D7\t\u01D7\x04\u01D8\t\u01D8\x04\u01D9\t\u01D9\x04\u01DA\t\u01DA\x04" +
        "\u01DB\t\u01DB\x04\u01DC\t\u01DC\x04\u01DD\t\u01DD\x04\u01DE\t\u01DE\x04" +
        "\u01DF\t\u01DF\x04\u01E0\t\u01E0\x04\u01E1\t\u01E1\x04\u01E2\t\u01E2\x04" +
        "\u01E3\t\u01E3\x04\u01E4\t\u01E4\x04\u01E5\t\u01E5\x04\u01E6\t\u01E6\x04" +
        "\u01E7\t\u01E7\x04\u01E8\t\u01E8\x04\u01E9\t\u01E9\x04\u01EA\t\u01EA\x04" +
        "\u01EB\t\u01EB\x04\u01EC\t\u01EC\x04\u01ED\t\u01ED\x04\u01EE\t\u01EE\x04" +
        "\u01EF\t\u01EF\x04\u01F0\t\u01F0\x04\u01F1\t\u01F1\x04\u01F2\t\u01F2\x04" +
        "\u01F3\t\u01F3\x04\u01F4\t\u01F4\x04\u01F5\t\u01F5\x04\u01F6\t\u01F6\x04" +
        "\u01F7\t\u01F7\x04\u01F8\t\u01F8\x04\u01F9\t\u01F9\x04\u01FA\t\u01FA\x04" +
        "\u01FB\t\u01FB\x04\u01FC\t\u01FC\x04\u01FD\t\u01FD\x04\u01FE\t\u01FE\x04" +
        "\u01FF\t\u01FF\x04\u0200\t\u0200\x04\u0201\t\u0201\x04\u0202\t\u0202\x04" +
        "\u0203\t\u0203\x04\u0204\t\u0204\x04\u0205\t\u0205\x04\u0206\t\u0206\x04" +
        "\u0207\t\u0207\x04\u0208\t\u0208\x04\u0209\t\u0209\x04\u020A\t\u020A\x04" +
        "\u020B\t\u020B\x04\u020C\t\u020C\x04\u020D\t\u020D\x04\u020E\t\u020E\x04" +
        "\u020F\t\u020F\x04\u0210\t\u0210\x04\u0211\t\u0211\x04\u0212\t\u0212\x04" +
        "\u0213\t\u0213\x04\u0214\t\u0214\x04\u0215\t\u0215\x04\u0216\t\u0216\x04" +
        "\u0217\t\u0217\x04\u0218\t\u0218\x04\u0219\t\u0219\x04\u021A\t\u021A\x04" +
        "\u021B\t\u021B\x04\u021C\t\u021C\x04\u021D\t\u021D\x04\u021E\t\u021E\x04" +
        "\u021F\t\u021F\x04\u0220\t\u0220\x04\u0221\t\u0221\x04\u0222\t\u0222\x04" +
        "\u0223\t\u0223\x04\u0224\t\u0224\x04\u0225\t\u0225\x04\u0226\t\u0226\x04" +
        "\u0227\t\u0227\x04\u0228\t\u0228\x04\u0229\t\u0229\x04\u022A\t\u022A\x04" +
        "\u022B\t\u022B\x04\u022C\t\u022C\x04\u022D\t\u022D\x04\u022E\t\u022E\x04" +
        "\u022F\t\u022F\x04\u0230\t\u0230\x04\u0231\t\u0231\x04\u0232\t\u0232\x04" +
        "\u0233\t\u0233\x04\u0234\t\u0234\x04\u0235\t\u0235\x04\u0236\t\u0236\x04" +
        "\u0237\t\u0237\x04\u0238\t\u0238\x04\u0239\t\u0239\x04\u023A\t\u023A\x04" +
        "\u023B\t\u023B\x04\u023C\t\u023C\x04\u023D\t\u023D\x04\u023E\t\u023E\x04" +
        "\u023F\t\u023F\x04\u0240\t\u0240\x04\u0241\t\u0241\x04\u0242\t\u0242\x04" +
        "\u0243\t\u0243\x04\u0244\t\u0244\x04\u0245\t\u0245\x04\u0246\t\u0246\x04" +
        "\u0247\t\u0247\x04\u0248\t\u0248\x04\u0249\t\u0249\x04\u024A\t\u024A\x04" +
        "\u024B\t\u024B\x04\u024C\t\u024C\x04\u024D\t\u024D\x04\u024E\t\u024E\x04" +
        "\u024F\t\u024F\x04\u0250\t\u0250\x04\u0251\t\u0251\x04\u0252\t\u0252\x04" +
        "\u0253\t\u0253\x04\u0254\t\u0254\x04\u0255\t\u0255\x04\u0256\t\u0256\x04" +
        "\u0257\t\u0257\x04\u0258\t\u0258\x04\u0259\t\u0259\x04\u025A\t\u025A\x04" +
        "\u025B\t\u025B\x04\u025C\t\u025C\x04\u025D\t\u025D\x04\u025E\t\u025E\x04" +
        "\u025F\t\u025F\x04\u0260\t\u0260\x04\u0261\t\u0261\x04\u0262\t\u0262\x04" +
        "\u0263\t\u0263\x04\u0264\t\u0264\x04\u0265\t\u0265\x04\u0266\t\u0266\x04" +
        "\u0267\t\u0267\x04\u0268\t\u0268\x04\u0269\t\u0269\x04\u026A\t\u026A\x04" +
        "\u026B\t\u026B\x04\u026C\t\u026C\x04\u026D\t\u026D\x04\u026E\t\u026E\x04" +
        "\u026F\t\u026F\x04\u0270\t\u0270\x04\u0271\t\u0271\x04\u0272\t\u0272\x04" +
        "\u0273\t\u0273\x04\u0274\t\u0274\x04\u0275\t\u0275\x04\u0276\t\u0276\x04" +
        "\u0277\t\u0277\x04\u0278\t\u0278\x04\u0279\t\u0279\x04\u027A\t\u027A\x04" +
        "\u027B\t\u027B\x04\u027C\t\u027C\x04\u027D\t\u027D\x04\u027E\t\u027E\x04" +
        "\u027F\t\u027F\x04\u0280\t\u0280\x04\u0281\t\u0281\x04\u0282\t\u0282\x04" +
        "\u0283\t\u0283\x04\u0284\t\u0284\x04\u0285\t\u0285\x04\u0286\t\u0286\x04" +
        "\u0287\t\u0287\x04\u0288\t\u0288\x04\u0289\t\u0289\x04\u028A\t\u028A\x04" +
        "\u028B\t\u028B\x04\u028C\t\u028C\x04\u028D\t\u028D\x04\u028E\t\u028E\x04" +
        "\u028F\t\u028F\x04\u0290\t\u0290\x04\u0291\t\u0291\x04\u0292\t\u0292\x04" +
        "\u0293\t\u0293\x04\u0294\t\u0294\x04\u0295\t\u0295\x04\u0296\t\u0296\x04" +
        "\u0297\t\u0297\x04\u0298\t\u0298\x04\u0299\t\u0299\x04\u029A\t\u029A\x04" +
        "\u029B\t\u029B\x04\u029C\t\u029C\x04\u029D\t\u029D\x04\u029E\t\u029E\x04" +
        "\u029F\t\u029F\x04\u02A0\t\u02A0\x04\u02A1\t\u02A1\x04\u02A2\t\u02A2\x04" +
        "\u02A3\t\u02A3\x04\u02A4\t\u02A4\x04\u02A5\t\u02A5\x04\u02A6\t\u02A6\x04" +
        "\u02A7\t\u02A7\x04\u02A8\t\u02A8\x04\u02A9\t\u02A9\x04\u02AA\t\u02AA\x04" +
        "\u02AB\t\u02AB\x04\u02AC\t\u02AC\x04\u02AD\t\u02AD\x04\u02AE\t\u02AE\x04" +
        "\u02AF\t\u02AF\x04\u02B0\t\u02B0\x04\u02B1\t\u02B1\x04\u02B2\t\u02B2\x04" +
        "\u02B3\t\u02B3\x04\u02B4\t\u02B4\x04\u02B5\t\u02B5\x04\u02B6\t\u02B6\x04" +
        "\u02B7\t\u02B7\x04\u02B8\t\u02B8\x04\u02B9\t\u02B9\x04\u02BA\t\u02BA\x04" +
        "\u02BB\t\u02BB\x04\u02BC\t\u02BC\x04\u02BD\t\u02BD\x04\u02BE\t\u02BE\x04" +
        "\u02BF\t\u02BF\x04\u02C0\t\u02C0\x04\u02C1\t\u02C1\x04\u02C2\t\u02C2\x04" +
        "\u02C3\t\u02C3\x04\u02C4\t\u02C4\x04\u02C5\t\u02C5\x04\u02C6\t\u02C6\x04" +
        "\u02C7\t\u02C7\x04\u02C8\t\u02C8\x04\u02C9\t\u02C9\x04\u02CA\t\u02CA\x04" +
        "\u02CB\t\u02CB\x04\u02CC\t\u02CC\x04\u02CD\t\u02CD\x04\u02CE\t\u02CE\x04" +
        "\u02CF\t\u02CF\x04\u02D0\t\u02D0\x04\u02D1\t\u02D1\x04\u02D2\t\u02D2\x04" +
        "\u02D3\t\u02D3\x04\u02D4\t\u02D4\x04\u02D5\t\u02D5\x04\u02D6\t\u02D6\x04" +
        "\u02D7\t\u02D7\x04\u02D8\t\u02D8\x04\u02D9\t\u02D9\x04\u02DA\t\u02DA\x04" +
        "\u02DB\t\u02DB\x04\u02DC\t\u02DC\x04\u02DD\t\u02DD\x04\u02DE\t\u02DE\x04" +
        "\u02DF\t\u02DF\x04\u02E0\t\u02E0\x04\u02E1\t\u02E1\x04\u02E2\t\u02E2\x04" +
        "\u02E3\t\u02E3\x04\u02E4\t\u02E4\x04\u02E5\t\u02E5\x04\u02E6\t\u02E6\x04" +
        "\u02E7\t\u02E7\x04\u02E8\t\u02E8\x04\u02E9\t\u02E9\x04\u02EA\t\u02EA\x04" +
        "\u02EB\t\u02EB\x04\u02EC\t\u02EC\x04\u02ED\t\u02ED\x04\u02EE\t\u02EE\x04" +
        "\u02EF\t\u02EF\x04\u02F0\t\u02F0\x04\u02F1\t\u02F1\x04\u02F2\t\u02F2\x04" +
        "\u02F3\t\u02F3\x04\u02F4\t\u02F4\x04\u02F5\t\u02F5\x04\u02F6\t\u02F6\x04" +
        "\u02F7\t\u02F7\x04\u02F8\t\u02F8\x04\u02F9\t\u02F9\x04\u02FA\t\u02FA\x04" +
        "\u02FB\t\u02FB\x04\u02FC\t\u02FC\x04\u02FD\t\u02FD\x04\u02FE\t\u02FE\x04" +
        "\u02FF\t\u02FF\x04\u0300\t\u0300\x04\u0301\t\u0301\x04\u0302\t\u0302\x04" +
        "\u0303\t\u0303\x04\u0304\t\u0304\x04\u0305\t\u0305\x04\u0306\t\u0306\x04" +
        "\u0307\t\u0307\x04\u0308\t\u0308\x04\u0309\t\u0309\x04\u030A\t\u030A\x04" +
        "\u030B\t\u030B\x04\u030C\t\u030C\x04\u030D\t\u030D\x04\u030E\t\u030E\x04" +
        "\u030F\t\u030F\x04\u0310\t\u0310\x04\u0311\t\u0311\x04\u0312\t\u0312\x04" +
        "\u0313\t\u0313\x04\u0314\t\u0314\x04\u0315\t\u0315\x04\u0316\t\u0316\x04" +
        "\u0317\t\u0317\x04\u0318\t\u0318\x04\u0319\t\u0319\x04\u031A\t\u031A\x04" +
        "\u031B\t\u031B\x04\u031C\t\u031C\x04\u031D\t\u031D\x04\u031E\t\u031E\x04" +
        "\u031F\t\u031F\x04\u0320\t\u0320\x04\u0321\t\u0321\x04\u0322\t\u0322\x04" +
        "\u0323\t\u0323\x04\u0324\t\u0324\x04\u0325\t\u0325\x04\u0326\t\u0326\x04" +
        "\u0327\t\u0327\x04\u0328\t\u0328\x04\u0329\t\u0329\x04\u032A\t\u032A\x04" +
        "\u032B\t\u032B\x04\u032C\t\u032C\x04\u032D\t\u032D\x04\u032E\t\u032E\x04" +
        "\u032F\t\u032F\x04\u0330\t\u0330\x04\u0331\t\u0331\x04\u0332\t\u0332\x04" +
        "\u0333\t\u0333\x04\u0334\t\u0334\x04\u0335\t\u0335\x04\u0336\t\u0336\x04" +
        "\u0337\t\u0337\x04\u0338\t\u0338\x04\u0339\t\u0339\x04\u033A\t\u033A\x04" +
        "\u033B\t\u033B\x04\u033C\t\u033C\x04\u033D\t\u033D\x04\u033E\t\u033E\x04" +
        "\u033F\t\u033F\x04\u0340\t\u0340\x04\u0341\t\u0341\x03\x02\x03\x02\x03" +
        "\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03" +
        "\x05\x03\x05\x03\x05\x05\x05\u0691\n\x05\x03\x05\x03\x05\x03\x06\x03\x06" +
        "\x03\x07\x03\x07\x03\b\x03\b\x07\b\u069B\n\b\f\b\x0E\b\u069E\v\b\x03\b" +
        "\x03\b\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x07\n\u06A8\n\n\f\n\x0E\n\u06AB" +
        "\v\n\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x07\f\u06B4\n\f\f\f\x0E" +
        "\f\u06B7\v\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E" +
        "\x03\x0E\x05\x0E\u06C3\n\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03" +
        "\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03" +
        "\x11\x05\x11\u06D4\n\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13" +
        "\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15" +
        "\x03\x16\x03\x16\x03\x16\x03\x16\x05\x16\u06E9\n\x16\x03\x16\x03\x16\x03" +
        "\x17\x03\x17\x03\x17\x03\x17\x03\x17\x07\x17\u06F2\n\x17\f\x17\x0E\x17" +
        "\u06F5\v\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x05" +
        "\x19\u06FE\n\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
        "\x07\x1A\u0707\n\x1A\f\x1A\x0E\x1A\u070A\v\x1A\x03\x1A\x03\x1A\x03\x1B" +
        "\x03\x1B\x03\x1B\x05\x1B\u0711\n\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03" +
        "\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03" +
        "\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03" +
        "!\x03!\x03!\x03!\x03!\x03!\x05!\u0732\n!\x03\"\x03\"\x03\"\x03\"\x03#" +
        "\x03#\x03#\x03#\x07#\u073C\n#\f#\x0E#\u073F\v#\x03#\x03#\x03$\x03$\x03" +
        "$\x03$\x03$\x03%\x03%\x03%\x03%\x03&\x03&\x05&\u074E\n&\x03\'\x03\'\x03" +
        "(\x03(\x03(\x03(\x03)\x03)\x03)\x03)\x03*\x03*\x03*\x05*\u075D\n*\x03" +
        "*\x03*\x03+\x03+\x03+\x03,\x03,\x03,\x03-\x03-\x03-\x03-\x03.\x03.\x03" +
        "/\x03/\x03/\x030\x030\x030\x030\x030\x030\x030\x070\u0777\n0\f0\x0E0\u077A" +
        "\v0\x030\x030\x031\x031\x031\x031\x031\x071\u0783\n1\f1\x0E1\u0786\v1" +
        "\x031\x031\x032\x032\x032\x072\u078D\n2\f2\x0E2\u0790\v2\x032\x032\x03" +
        "3\x033\x033\x033\x073\u0798\n3\f3\x0E3\u079B\v3\x033\x033\x034\x034\x03" +
        "4\x034\x034\x054\u07A4\n4\x034\x054\u07A7\n4\x034\x034\x035\x035\x035" +
        "\x035\x055\u07AF\n5\x035\x035\x035\x075\u07B4\n5\f5\x0E5\u07B7\v5\x03" +
        "5\x035\x036\x036\x036\x056\u07BE\n6\x036\x036\x037\x037\x037\x037\x03" +
        "8\x038\x038\x039\x039\x039\x039\x039\x059\u07CE\n9\x039\x039\x03:\x03" +
        ":\x03:\x03:\x03;\x03;\x03;\x03;\x05;\u07DA\n;\x03;\x03;\x03<\x03<\x03" +
        "<\x03<\x03<\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03" +
        "=\x03=\x03=\x03=\x03=\x07=\u07F3\n=\f=\x0E=\u07F6\v=\x03=\x03=\x03>\x03" +
        ">\x03>\x03>\x03>\x05>\u07FF\n>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x07" +
        ">\u0808\n>\f>\x0E>\u080B\v>\x03>\x03>\x03?\x03?\x03?\x03?\x03@\x03@\x03" +
        "A\x03A\x03B\x03B\x03B\x03B\x03C\x03C\x03C\x03C\x03C\x07C\u0820\nC\fC\x0E" +
        "C\u0823\vC\x03C\x03C\x03D\x03D\x03D\x03D\x03E\x03E\x03F\x03F\x03G\x03" +
        "G\x03G\x03G\x07G\u0833\nG\fG\x0EG\u0836\vG\x03G\x03G\x03H\x03H\x03H\x03" +
        "H\x03H\x05H\u083F\nH\x03H\x05H\u0842\nH\x03H\x03H\x03I\x03I\x03I\x03I" +
        "\x05I\u084A\nI\x03I\x03I\x03I\x07I\u084F\nI\fI\x0EI\u0852\vI\x03I\x03" +
        "I\x03J\x03J\x03J\x05J\u0859\nJ\x03J\x03J\x03K\x03K\x03K\x03K\x03K\x03" +
        "K\x03L\x03L\x07L\u0865\nL\fL\x0EL\u0868\vL\x03L\x03L\x03M\x03M\x03M\x03" +
        "M\x03M\x03M\x03M\x07M\u0873\nM\fM\x0EM\u0876\vM\x03M\x03M\x03N\x03N\x03" +
        "N\x03N\x03O\x03O\x03O\x03O\x05O\u0882\nO\x03O\x03O\x03P\x03P\x03P\x03" +
        "P\x03P\x07P\u088B\nP\fP\x0EP\u088E\vP\x03P\x03P\x03Q\x03Q\x03Q\x03Q\x07" +
        "Q\u0896\nQ\fQ\x0EQ\u0899\vQ\x03Q\x03Q\x03R\x03R\x03R\x03R\x03R\x03S\x03" +
        "S\x03S\x03S\x03S\x07S\u08A7\nS\fS\x0ES\u08AA\vS\x03S\x03S\x03T\x03T\x07" +
        "T\u08B0\nT\fT\x0ET\u08B3\vT\x03T\x03T\x03U\x03U\x03U\x03U\x03V\x03V\x03" +
        "V\x03V\x05V\u08BF\nV\x03V\x03V\x03W\x03W\x03W\x03W\x03X\x03X\x03X\x03" +
        "X\x05X\u08CB\nX\x03X\x03X\x03Y\x03Y\x03Y\x03Y\x03Y\x03Y\x03Y\x03Y\x03" +
        "Y\x07Y\u08D8\nY\fY\x0EY\u08DB\vY\x03Y\x03Y\x03Z\x03Z\x03Z\x07Z\u08E2\n" +
        "Z\fZ\x0EZ\u08E5\vZ\x03Z\x03Z\x03[\x03[\x03[\x03[\x03[\x03[\x03[\x03[\x03" +
        "[\x07[\u08F2\n[\f[\x0E[\u08F5\v[\x03[\x03[\x03\\\x03\\\x03\\\x03\\\x03" +
        "\\\x03\\\x03\\\x03\\\x03\\\x03\\\x07\\\u0903\n\\\f\\\x0E\\\u0906\v\\\x03" +
        "\\\x03\\\x03]\x03]\x03^\x03^\x03^\x03^\x03^\x03^\x03^\x03^\x07^\u0914" +
        "\n^\f^\x0E^\u0917\v^\x03^\x03^\x03_\x03_\x03_\x05_\u091E\n_\x03_\x07_" +
        "\u0921\n_\f_\x0E_\u0924\v_\x03_\x03_\x03`\x03`\x03`\x03`\x03a\x03a\x03" +
        "b\x03b\x03c\x03c\x03c\x03c\x03d\x03d\x03d\x03d\x03d\x03d\x03d\x03d\x03" +
        "d\x07d\u093D\nd\fd\x0Ed\u0940\vd\x03d\x03d\x03e\x03e\x03e\x03e\x03e\x03" +
        "e\x03e\x03e\x07e\u094C\ne\fe\x0Ee\u094F\ve\x03e\x03e\x03f\x03f\x03f\x03" +
        "f\x03f\x03f\x03f\x07f\u095A\nf\ff\x0Ef\u095D\vf\x03f\x03f\x03g\x03g\x03" +
        "g\x03g\x03h\x03h\x07h\u0967\nh\fh\x0Eh\u096A\vh\x03h\x03h\x03i\x03i\x03" +
        "i\x05i\u0971\ni\x03i\x03i\x03j\x03j\x03j\x03j\x03j\x03j\x03j\x07j\u097C" +
        "\nj\fj\x0Ej\u097F\vj\x03j\x03j\x03k\x03k\x03k\x03k\x03k\x03k\x03k\x03" +
        "k\x07k\u098B\nk\fk\x0Ek\u098E\vk\x03k\x03k\x03";
    EDIF300Parser._serializedATNSegment1 = "l\x03l\x03m\x03m\x03n\x03n\x03n\x03n\x07n\u099A\nn\fn\x0En\u099D\vn\x03" +
        "n\x03n\x03o\x03o\x03o\x03o\x03p\x03p\x03p\x03p\x05p\u09A9\np\x03p\x03" +
        "p\x03q\x03q\x03q\x07q\u09B0\nq\fq\x0Eq\u09B3\vq\x03q\x03q\x03r\x03r\x03" +
        "r\x03r\x05r\u09BB\nr\x03r\x03r\x03s\x03s\x03s\x03s\x05s\u09C3\ns\x03s" +
        "\x03s\x03t\x03t\x03t\x03t\x03u\x03u\x03u\x03u\x03v\x03v\x07v\u09D1\nv" +
        "\fv\x0Ev\u09D4\vv\x03v\x03v\x03w\x03w\x03w\x03w\x03x\x03x\x03y\x03y\x03" +
        "y\x07y\u09E1\ny\fy\x0Ey\u09E4\vy\x03y\x03y\x03z\x03z\x03z\x05z\u09EB\n" +
        "z\x03z\x03z\x03{\x03{\x03{\x03{\x03{\x03{\x03|\x03|\x03}\x03}\x03}\x03" +
        "}\x03~\x03~\x03~\x03~\x05~\u09FF\n~\x03~\x03~\x03\x7F\x03\x7F\x03\x7F" +
        "\x03\x7F\x03\x80\x03\x80\x03\x80\x03\x80\x05\x80\u0A0B\n\x80\x03\x80\x03" +
        "\x80\x03\x81\x03\x81\x03\x81\x03\x81\x03\x82\x03\x82\x03\x82\x03\x82\x05" +
        "\x82\u0A17\n\x82\x03\x82\x03\x82\x03\x83\x03\x83\x03\x83\x03\x83\x03\x84" +
        "\x03\x84\x03\x84\x03\x84\x05\x84\u0A23\n\x84\x03\x84\x03\x84\x03\x85\x03" +
        "\x85\x03\x85\x05\x85\u0A2A\n\x85\x03\x85\x03\x85\x03\x86\x03\x86\x03\x86" +
        "\x03\x86\x03\x87\x03\x87\x03\x87\x03\x87\x03\x88\x03\x88\x03\x88\x03\x88" +
        "\x03\x89\x03\x89\x03\x89\x03\x89\x03\x8A\x03\x8A\x03\x8B\x03\x8B\x03\x8B" +
        "\x05\x8B\u0A43\n\x8B\x03\x8C\x03\x8C\x03\x8C\x05\x8C\u0A48\n\x8C\x03\x8C" +
        "\x03\x8C\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x07\x8D" +
        "\u0A53\n\x8D\f\x8D\x0E\x8D\u0A56\v\x8D\x03\x8D\x03\x8D\x03\x8E\x03\x8E" +
        "\x03\x8E\x03\x8E\x03\x8F\x03\x8F\x03\x8F\x03\x8F\x05\x8F\u0A62\n\x8F\x03" +
        "\x8F\x03\x8F\x03\x90\x03\x90\x03\x90\x03\x90\x03\x90\x03\x90\x07\x90\u0A6C" +
        "\n\x90\f\x90\x0E\x90\u0A6F\v\x90\x03\x90\x03\x90\x03\x91\x03\x91\x03\x91" +
        "\x03\x91\x03\x91\x03\x91\x05\x91\u0A79\n\x91\x03\x91\x03\x91\x03\x92\x03" +
        "\x92\x03\x92\x03\x92\x03\x92\x03\x92\x03\x92\x07\x92\u0A84\n\x92\f\x92" +
        "\x0E\x92\u0A87\v\x92\x03\x92\x03\x92\x03\x93\x03\x93\x03\x93\x03\x93\x03" +
        "\x94\x03\x94\x03\x95\x03\x95\x03\x95\x03\x95\x03\x96\x03\x96\x03\x97\x03" +
        "\x97\x03\x97\x07\x97\u0A9A\n\x97\f\x97\x0E\x97\u0A9D\v\x97\x03\x97\x03" +
        "\x97\x03\x98\x03\x98\x03\x98\x03\x98\x03\x98\x03\x98\x07\x98\u0AA7\n\x98" +
        "\f\x98\x0E\x98\u0AAA\v\x98\x03\x98\x03\x98\x03\x99\x03\x99\x03\x9A\x03" +
        "\x9A\x03\x9A\x03\x9A\x05\x9A\u0AB4\n\x9A\x03\x9A\x03\x9A\x03\x9B\x03\x9B" +
        "\x03\x9B\x07\x9B\u0ABB\n\x9B\f\x9B\x0E\x9B\u0ABE\v\x9B\x03\x9B\x03\x9B" +
        "\x03\x9B\x03\x9C\x03\x9C\x03\x9C\x03\x9C\x03\x9C\x03\x9C\x03\x9C\x03\x9C" +
        "\x03\x9C\x03\x9C\x03\x9C\x03\x9C\x07\x9C\u0ACF\n\x9C\f\x9C\x0E\x9C\u0AD2" +
        "\v\x9C\x03\x9C\x03\x9C\x03\x9D\x03\x9D\x03\x9D\x03\x9D\x03\x9E\x03\x9E" +
        "\x03\x9E\x03\x9E\x03\x9E\x05\x9E\u0ADF\n\x9E\x03\x9E\x03\x9E\x03\x9F\x03" +
        "\x9F\x03\xA0\x03\xA0\x03\xA1\x03\xA1\x03\xA2\x03\xA2\x03\xA2\x03\xA2\x07" +
        "\xA2\u0AED\n\xA2\f\xA2\x0E\xA2\u0AF0\v\xA2\x03\xA2\x03\xA2\x03\xA3\x03" +
        "\xA3\x03\xA3\x03\xA3\x03\xA3\x07\xA3\u0AF9\n\xA3\f\xA3\x0E\xA3\u0AFC\v" +
        "\xA3\x03\xA3\x03\xA3\x03\xA4\x03\xA4\x03\xA4\x03\xA4\x03\xA5\x03\xA5\x03" +
        "\xA6\x03\xA6\x03\xA6\x07\xA6\u0B09\n\xA6\f\xA6\x0E\xA6\u0B0C\v\xA6\x03" +
        "\xA6\x03\xA6\x03\xA7\x03\xA7\x07\xA7\u0B12\n\xA7\f\xA7\x0E\xA7\u0B15\v" +
        "\xA7\x03\xA7\x03\xA7\x03\xA8\x03\xA8\x03\xA8\x03\xA8\x03\xA9\x03\xA9\x03" +
        "\xA9\x03\xA9\x03\xAA\x03\xAA\x03\xAA\x03\xAA\x05\xAA\u0B25\n\xAA\x03\xAA" +
        "\x03\xAA\x03\xAB\x03\xAB\x03\xAB\x03\xAB\x03\xAC\x03\xAC\x03\xAC\x03\xAC" +
        "\x05\xAC\u0B31\n\xAC\x03\xAC\x03\xAC\x03\xAD\x03\xAD\x03\xAD\x03\xAD\x03" +
        "\xAE\x03\xAE\x03\xAE\x03\xAE\x05\xAE\u0B3D\n\xAE\x03\xAE\x03\xAE\x03\xAF" +
        "\x03\xAF\x03\xAF\x03\xAF\x03\xB0\x03\xB0\x03\xB0\x03\xB0\x03\xB0\x03\xB1" +
        "\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x07\xB1" +
        "\u0B53\n\xB1\f\xB1\x0E\xB1\u0B56\v\xB1\x03\xB1\x03\xB1\x03\xB2\x03\xB2" +
        "\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2" +
        "\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x07\xB2\u0B69\n\xB2\f\xB2\x0E\xB2\u0B6C" +
        "\v\xB2\x03\xB2\x03\xB2\x03\xB3\x03\xB3\x03\xB3\x03\xB3\x03\xB4\x03\xB4" +
        "\x03\xB5\x03\xB5\x03\xB6\x03\xB6\x03\xB6\x03\xB6\x03\xB6\x03\xB6\x03\xB7" +
        "\x03\xB7\x03\xB8\x03\xB8\x03\xB8\x03\xB8\x05\xB8\u0B84\n\xB8\x03\xB8\x03" +
        "\xB8\x03\xB9\x03\xB9\x03\xB9\x03\xB9\x03\xBA\x03\xBA\x03\xBA\x03\xBA\x05" +
        "\xBA\u0B90\n\xBA\x03\xBA\x03\xBA\x03\xBB\x03\xBB\x03\xBB\x03\xBB\x03\xBB" +
        "\x03\xBB\x05\xBB\u0B9A\n\xBB\x03\xBB\x03\xBB\x07\xBB\u0B9E\n\xBB\f\xBB" +
        "\x0E\xBB\u0BA1\v\xBB\x03\xBB\x03\xBB\x03\xBC\x03\xBC\x03\xBD\x03\xBD\x03" +
        "\xBD\x03\xBE\x03\xBE\x03\xBF\x03\xBF\x03\xC0\x03\xC0\x03\xC1\x03\xC1\x03" +
        "\xC2\x03\xC2\x03\xC3\x03\xC3\x03\xC4\x03\xC4\x03\xC5\x03\xC5\x03\xC6\x03" +
        "\xC6\x03\xC7\x03\xC7\x03\xC8\x03\xC8\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03" +
        "\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03" +
        "\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x07" +
        "\xC9\u0BD6\n\xC9\f\xC9\x0E\xC9\u0BD9\v\xC9\x03\xC9\x03\xC9\x03\xCA\x03" +
        "\xCA\x03\xCA\x03\xCA\x03\xCB\x03\xCB\x03\xCB\x03\xCC\x03\xCC\x03\xCC\x03" +
        "\xCC\x03\xCD\x03\xCD\x03\xCD\x05\xCD\u0BEB\n\xCD\x03\xCD\x03\xCD\x03\xCD" +
        "\x03\xCD\x03\xCD\x03\xCD\x03\xCD\x03\xCD\x03\xCD\x03\xCD\x07\xCD\u0BF7" +
        "\n\xCD\f\xCD\x0E\xCD\u0BFA\v\xCD\x03\xCD\x03\xCD\x03\xCE\x03\xCE\x03\xCE" +
        "\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x07\xCE\u0C08" +
        "\n\xCE\f\xCE\x0E\xCE\u0C0B\v\xCE\x03\xCE\x03\xCE\x03\xCF\x03\xCF\x03\xCF" +
        "\x03\xCF\x03\xD0\x03\xD0\x03\xD1\x03\xD1\x03\xD2\x03\xD2\x03\xD2\x03\xD2" +
        "\x03\xD2\x03\xD2\x03\xD2\x03\xD2\x07\xD2\u0C1F\n\xD2\f\xD2\x0E\xD2\u0C22" +
        "\v\xD2\x03\xD2\x03\xD2\x03\xD3\x03\xD3\x03\xD3\x03\xD3\x03\xD4\x03\xD4" +
        "\x03\xD4\x03\xD4\x03\xD5\x03\xD5\x03\xD6\x03\xD6\x03\xD7\x03\xD7\x03\xD7" +
        "\x03\xD8\x03\xD8\x03\xD8\x03\xD8\x03\xD8\x03\xD8\x03\xD8\x03\xD8\x03\xD8" +
        "\x07\xD8\u0C3E\n\xD8\f\xD8\x0E\xD8\u0C41\v\xD8\x03\xD8\x03\xD8\x03\xD9" +
        "\x03\xD9\x03\xD9\x03\xD9\x03\xDA\x03\xDA\x05\xDA\u0C4B\n\xDA\x03\xDA\x03" +
        "\xDA\x03\xDB\x03\xDB\x03\xDB\x03\xDB\x03\xDC\x03\xDC\x03\xDD\x03\xDD\x03" +
        "\xDD\x03\xDD\x03\xDE\x03\xDE\x03\xDF\x03\xDF\x03\xE0\x03\xE0\x03\xE0\x03" +
        "\xE0\x03\xE0\x03\xE0\x03\xE0\x03\xE1\x03\xE1\x03\xE1\x03\xE1\x03\xE2\x03" +
        "\xE2\x03\xE2\x07\xE2\u0C6B\n\xE2\f\xE2\x0E\xE2\u0C6E\v\xE2\x03\xE2\x03" +
        "\xE2\x03\xE3\x03\xE3\x03\xE3\x03\xE3\x03\xE4\x03\xE4\x03\xE4\x07\xE4\u0C79" +
        "\n\xE4\f\xE4\x0E\xE4\u0C7C\v\xE4\x03\xE4\x03\xE4\x03\xE5\x03\xE5\x03\xE5" +
        "\x03\xE5\x03\xE5\x03\xE5\x03\xE5\x03\xE5\x03\xE5\x03\xE5\x07\xE5\u0C8A" +
        "\n\xE5\f\xE5\x0E\xE5\u0C8D\v\xE5\x03\xE5\x03\xE5\x03\xE6\x03\xE6\x03\xE6" +
        "\x03\xE6\x03\xE6\x03\xE6\x03\xE6\x03\xE6\x03\xE6\x07\xE6\u0C9A\n\xE6\f" +
        "\xE6\x0E\xE6\u0C9D\v\xE6\x03\xE6\x03\xE6\x03\xE7\x03\xE7\x03\xE7\x03\xE7" +
        "\x03\xE7\x07\xE7\u0CA6\n\xE7\f\xE7\x0E\xE7\u0CA9\v\xE7\x03\xE7\x03\xE7" +
        "\x03\xE8\x03\xE8\x03\xE8\x03\xE8\x03\xE8\x07\xE8\u0CB2\n\xE8\f\xE8\x0E" +
        "\xE8\u0CB5\v\xE8\x03\xE8\x03\xE8\x03\xE9\x03\xE9\x03\xE9\x03\xE9\x03\xEA" +
        "\x03\xEA\x03\xEA\x03\xEA\x03\xEB\x03\xEB\x03\xEB\x03\xEB\x03\xEB\x03\xEC" +
        "\x03\xEC\x03\xEC\x03\xEC\x03\xED\x03\xED\x03\xED\x03\xED\x07\xED\u0CCE" +
        "\n\xED\f\xED\x0E\xED\u0CD1\v\xED\x03\xED\x03\xED\x03\xEE\x03\xEE\x03\xEE" +
        "\x03\xEE\x03\xEF\x03\xEF\x03\xF0\x03\xF0\x03\xF1\x03\xF1\x03\xF1\x03\xF1" +
        "\x03\xF2\x03\xF2\x03\xF3\x03\xF3\x03\xF3\x03\xF4\x03\xF4\x03\xF5\x03\xF5" +
        "\x03\xF5\x03\xF6\x03\xF6\x03\xF6\x03\xF7\x03\xF7\x03\xF7\x03\xF8\x03\xF8" +
        "\x03\xF8\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9" +
        "\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x07\xF9\u0D01\n\xF9\f\xF9\x0E" +
        "\xF9\u0D04\v\xF9\x03\xF9\x03\xF9\x03\xFA\x03\xFA\x03\xFA\x03\xFA\x03\xFA" +
        "\x03\xFA\x03\xFA\x03\xFA\x07\xFA\u0D10\n\xFA\f\xFA\x0E\xFA\u0D13\v\xFA" +
        "\x03\xFA\x03\xFA\x03\xFB\x03\xFB\x03\xFB\x05\xFB\u0D1A\n\xFB\x03\xFB\x03" +
        "\xFB\x03\xFC\x03\xFC\x05\xFC\u0D20\n\xFC\x03\xFC\x03\xFC\x03\xFD\x03\xFD" +
        "\x03\xFD\x03\xFD\x03\xFD\x03\xFD\x03\xFD\x07\xFD\u0D2B\n\xFD\f\xFD\x0E" +
        "\xFD\u0D2E\v\xFD\x03\xFD\x03\xFD\x03\xFE\x03\xFE\x03\xFE\x03\xFE\x03\xFE" +
        "\x03\xFE\x03\xFE\x07\xFE\u0D39\n\xFE\f\xFE\x0E\xFE\u0D3C\v\xFE\x03\xFE" +
        "\x03\xFE\x03\xFF\x03\xFF\x03\xFF\x07\xFF\u0D43\n\xFF\f\xFF\x0E\xFF\u0D46" +
        "\v\xFF\x03\xFF\x03\xFF\x03\u0100\x03\u0100\x07\u0100\u0D4C\n\u0100\f\u0100" +
        "\x0E\u0100\u0D4F\v\u0100\x03\u0100\x03\u0100\x03\u0101\x03\u0101\x03\u0101" +
        "\x03\u0101\x03\u0102\x03\u0102\x03\u0103\x03\u0103\x03\u0103\x07\u0103" +
        "\u0D5C\n\u0103\f\u0103\x0E\u0103\u0D5F\v\u0103\x03\u0103\x03\u0103\x03" +
        "\u0104\x03\u0104\x03\u0105\x03\u0105\x03\u0105\x03\u0105\x07\u0105\u0D69" +
        "\n\u0105\f\u0105\x0E\u0105\u0D6C\v\u0105\x03\u0105\x03\u0105\x03\u0106" +
        "\x03\u0106\x03\u0106\x03\u0106\x03\u0107\x03\u0107\x03\u0107\x03\u0107" +
        "\x03\u0108\x03\u0108\x03\u0109\x03\u0109\x03\u0109\x03\u0109\x03\u010A" +
        "\x03\u010A\x03\u010A\x03\u010A\x03\u010B\x03\u010B\x03\u010B\x03\u010B" +
        "\x05\u010B\u0D86\n\u010B\x03\u010B\x03\u010B\x03\u010C\x03\u010C\x03\u010C" +
        "\x03\u010C\x03\u010C\x03\u010C\x07\u010C\u0D90\n\u010C\f\u010C\x0E\u010C" +
        "\u0D93\v\u010C\x03\u010C\x03\u010C\x03\u010D\x03\u010D\x03\u010D\x03\u010D" +
        "\x03\u010D\x07\u010D\u0D9C\n\u010D\f\u010D\x0E\u010D\u0D9F\v\u010D\x03" +
        "\u010D\x03\u010D\x03\u010E\x03\u010E\x03\u010E\x03\u010E\x03\u010F\x03" +
        "\u010F\x03\u010F\x03\u010F\x03\u0110\x03\u0110\x03\u0111\x03\u0111\x03" +
        "\u0111\x07\u0111\u0DB0\n\u0111\f\u0111\x0E\u0111\u0DB3\v\u0111\x03\u0111" +
        "\x03\u0111\x03\u0112\x03\u0112\x03\u0113\x03\u0113\x03\u0114\x03\u0114" +
        "\x03\u0115\x03\u0115\x07\u0115\u0DBF\n\u0115\f\u0115\x0E\u0115\u0DC2\v" +
        "\u0115\x03\u0115\x03\u0115\x03\u0116\x03\u0116\x03\u0116\x03\u0116\x03" +
        "\u0116\x07\u0116\u0DCB\n\u0116\f\u0116\x0E\u0116\u0DCE\v\u0116\x03\u0116" +
        "\x03\u0116\x03\u0117\x03\u0117\x03\u0117\x03\u0117\x03\u0117\x03\u0117" +
        "\x03\u0117\x03\u0117\x03\u0117\x07\u0117\u0DDB\n\u0117\f\u0117\x0E\u0117" +
        "\u0DDE\v\u0117\x03\u0117\x03\u0117\x03\u0118\x03\u0118\x03\u0118\x03\u0118" +
        "\x03\u0118\x03\u0118\x03\u0118\x03\u0118\x03\u0118\x03\u0118\x07\u0118" +
        "\u0DEC\n\u0118\f\u0118\x0E\u0118\u0DEF\v\u0118\x03\u0118\x03\u0118\x03" +
        "\u0119\x03\u0119\x03\u0119\x03\u0119\x03\u011A\x03\u011A\x07\u011A\u0DF9" +
        "\n\u011A\f\u011A\x0E\u011A\u0DFC\v\u011A\x03\u011A\x03\u011A\x03\u011B" +
        "\x03\u011B\x03\u011B\x03\u011C\x03\u011C\x03\u011C\x03\u011C\x03\u011D" +
        "\x03\u011D\x03\u011E\x03\u011E\x03\u011E\x07\u011E\u0E0C\n\u011E\f\u011E" +
        "\x0E\u011E\u0E0F\v\u011E\x03\u011E\x03\u011E\x03\u011F\x03\u011F\x03\u0120" +
        "\x03\u0120\x03\u0120\x03\u0120\x05\u0120\u0E19\n\u0120\x03\u0120\x03\u0120" +
        "\x03\u0121\x03\u0121\x03\u0122\x03\u0122\x03\u0122\x03\u0122\x05\u0122" +
        "\u0E23\n\u0122\x03\u0122\x03\u0122\x03\u0123\x03\u0123\x03\u0124\x03\u0124" +
        "\x03\u0124\x03\u0124\x03\u0125\x03\u0125\x03\u0125\x03\u0125\x05\u0125" +
        "\u0E31\n\u0125\x03\u0125\x03\u0125\x03\u0126\x03\u0126\x03\u0126\x03\u0126" +
        "\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x05\u0127\u0E3D\n\u0127\x03\u0127" +
        "\x03\u0127\x03\u0128\x03\u0128\x03\u0128\x03\u0128\x03\u0129\x03\u0129" +
        "\x03\u0129\x03\u012A\x03\u012A\x05\u012A\u0E4A\n\u012A\x03\u012A\x03\u012A" +
        "\x03\u012B\x03\u012B\x03\u012B\x07\u012B\u0E51\n\u012B\f\u012B\x0E\u012B" +
        "\u0E54\v\u012B\x03\u012B\x03\u012B\x03\u012C\x03\u012C\x03\u012C\x03\u012C" +
        "\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C" +
        "\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C" +
        "\x07\u012C\u0E6A\n\u012C\f\u012C\x0E\u012C\u0E6D\v\u012C\x03\u012C\x03" +
        "\u012C\x03\u012D\x03\u012D\x03\u012D\x03\u012D\x03\u012D\x03\u012E\x03" +
        "\u012E\x03\u012E\x03\u012F\x03\u012F\x03\u012F\x03\u012F\x03\u012F\x03" +
        "\u0130\x03\u0130\x03\u0130\x03\u0130\x03\u0131\x03\u0131\x03\u0132\x03" +
        "\u0132\x03\u0132\x07\u0132\u0E87\n\u0132\f\u0132\x0E\u0132\u0E8A\v\u0132" +
        "\x03\u0132\x03\u0132\x03\u0133\x03\u0133\x03\u0133\x03\u0133\x03\u0134" +
        "\x03\u0134\x03\u0134\x03\u0134\x05\u0134\u0E96\n\u0134\x03\u0134\x03\u0134" +
        "\x03\u0135\x03\u0135\x03\u0136\x03\u0136\x03\u0136\x03\u0136\x03\u0136" +
        "\x07\u0136\u0EA1\n\u0136\f\u0136\x0E\u0136\u0EA4\v\u0136\x03\u0136\x03" +
        "\u0136\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03" +
        "\u0137\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03" +
        "\u0137\x07\u0137\u0EB6\n\u0137\f\u0137\x0E\u0137\u0EB9\v\u0137\x03\u0137" +
        "\x03\u0137\x03\u0138\x03\u0138\x03\u0138\x07\u0138\u0EC0\n\u0138\f\u0138" +
        "\x0E\u0138\u0EC3\v\u0138\x03\u0138\x05\u0138\u0EC6\n\u0138\x03\u0138\x07" +
        "\u0138\u0EC9\n\u0138\f\u0138\x0E\u0138\u0ECC\v\u0138\x03\u0138\x03\u0138" +
        "\x03\u0139\x03\u0139\x03\u0139\x03\u0139\x05\u0139\u0ED4\n\u0139\x03\u0139" +
        "\x03\u0139\x03\u0139\x07\u0139\u0ED9\n\u0139\f\u0139\x0E\u0139\u0EDC\v" +
        "\u0139\x03\u0139\x03\u0139\x03\u013A\x03\u013A\x03\u013A\x03\u013A\x03" +
        "\u013B\x03\u013B\x03\u013B\x03\u013B\x03\u013C\x03\u013C\x03\u013C\x03" +
        "\u013C\x05\u013C\u0EEC\n\u013C\x03\u013C\x03\u013C\x03\u013D\x03\u013D" +
        "\x03\u013D\x03\u013D\x03\u013E\x03\u013E\x03\u013E\x03\u013E\x03\u013E" +
        "\x03\u013F\x03\u013F\x03\u013F\x03\u013F\x03\u0140\x03\u0140\x03\u0140" +
        "\x03\u0140\x03\u0140\x03\u0141\x03\u0141\x03\u0141\x03\u0141\x03\u0141" +
        "\x03\u0141\x03\u0141\x03\u0141\x03\u0141\x03\u0141\x03\u0141\x03\u0141" +
        "\x03\u0141\x03\u0141\x05\u0141\u0F10\n\u0141\x03\u0142\x03\u0142\x03\u0142" +
        "\x03\u0142\x07\u0142\u0F16\n\u0142\f\u0142\x0E\u0142\u0F19\v\u0142\x03" +
        "\u0142\x03\u0142\x03\u0143\x03\u0143\x03\u0143\x03\u0143\x03\u0143\x03" +
        "\u0144\x03\u0144\x03\u0144\x03\u0144\x03\u0145\x03\u0145\x07\u0145\u0F28" +
        "\n\u0145\f\u0145\x0E\u0145\u0F2B\v\u0145\x03\u0145\x03\u0145\x03\u0146" +
        "\x03\u0146\x03\u0146\x03\u0146\x03\u0146\x03\u0147\x03\u0147\x03\u0147" +
        "\x03\u0147\x03\u0147\x03\u0148\x03\u0148\x03\u0148\x03\u0148\x03\u0148" +
        "\x03\u0149\x03\u0149\x07\u0149\u0F40\n\u0149\f\u0149\x0E\u0149\u0F43\v" +
        "\u0149\x03\u0149\x03\u0149\x03\u014A\x03\u014A\x03\u014B\x03\u014B\x03" +
        "\u014B\x03\u014B\x03\u014B\x03\u014B\x03\u014B\x03\u014B\x07\u014B\u0F51" +
        "\n\u014B\f\u014B\x0E\u014B\u0F54\v\u014B\x03\u014B\x03\u014B\x03\u014C" +
        "\x03\u014C\x03\u014C\x03\u014C\x03\u014C\x03\u014C\x03\u014C\x03\u014C" +
        "\x07\u014C\u0F60\n\u014C\f\u014C\x0E\u014C\u0F63\v\u014C\x03\u014C\x03" +
        "\u014C\x03\u014D\x03\u014D\x03\u014D\x03\u014D\x03\u014D\x03\u014D\x07" +
        "\u014D\u0F6D\n\u014D\f\u014D\x0E\u014D\u0F70\v\u014D\x03\u014D\x03\u014D" +
        "\x03\u014E\x03\u014E\x03\u014E\x07\u014E\u0F77\n\u014E\f\u014E\x0E\u014E" +
        "\u0F7A\v\u014E\x03\u014E\x03\u014E\x03\u014F\x03\u014F\x03\u0150\x03\u0150" +
        "\x03\u0151\x03\u0151\x03\u0151\x03\u0151\x03\u0151\x03\u0151\x07\u0151" +
        "\u0F88\n\u0151\f\u0151\x0E\u0151\u0F8B\v\u0151\x03\u0151\x03\u0151\x03" +
        "\u0152\x03\u0152\x03\u0152\x03\u0152\x03\u0153\x03\u0153\x03\u0154\x03" +
        "\u0154\x03\u0154\x07\u0154\u0F98\n\u0154\f\u0154\x0E\u0154\u0F9B\v\u0154" +
        "\x03\u0154\x03\u0154\x03\u0155\x03\u0155\x03\u0156\x03\u0156\x03\u0156" +
        "\x07\u0156\u0FA4\n\u0156\f\u0156\x0E\u0156\u0FA7\v\u0156\x03\u0156\x05" +
        "\u0156\u0FAA\n\u0156\x03\u0156\x07\u0156\u0FAD\n\u0156\f\u0156\x0E\u0156" +
        "\u0FB0\v\u0156\x03\u0156\x03\u0156\x03\u0157\x03\u0157\x03\u0157\x05\u0157" +
        "\u0FB7\n\u0157\x03\u0157\x03\u0157\x03\u0158\x03\u0158\x07\u0158\u0FBD" +
        "\n\u0158\f\u0158\x0E\u0158\u0FC0\v\u0158\x03\u0158\x03\u0158\x03\u0159" +
        "\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x03\u0159" +
        "\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x07\u0159" +
        "\u0FD2\n\u0159\f\u0159\x0E\u0159\u0FD5\v\u0159\x03\u0159\x03\u0159\x03" +
        "\u015A\x03\u015A\x07\u015A\u0FDB\n\u015A\f\u015A\x0E\u015A\u0FDE\v\u015A" +
        "\x03\u015A\x03\u015A\x03\u015B\x03\u015B\x03\u015B\x07\u015B\u0FE5\n\u015B" +
        "\f\u015B\x0E\u015B\u0FE8\v\u015B\x03\u015B\x03\u015B\x03\u015C\x03\u015C" +
        "\x03\u015C\x03\u015C\x03\u015D\x03\u015D\x03\u015E\x03\u015E\x03\u015E" +
        "\x03\u015F\x03\u015F\x03\u0160\x03\u0160\x03\u0160\x03\u0161\x03\u0161" +
        "\x03\u0161\x03\u0162\x03\u0162\x03\u0162\x03\u0163\x03\u0163\x03\u0163" +
        "\x03\u0164\x03\u0164\x03\u0164\x03\u0164\x03\u0165\x03\u0165\x03\u0165" +
        "\x03\u0166\x03\u0166\x03\u0166\x03\u0166\x03\u0166\x03\u0167\x03\u0167" +
        "\x07\u0167\u1011\n\u0167\f\u0167\x0E\u0167\u1014\v\u0167\x03\u0167\x03" +
        "\u0167\x03\u0168\x03\u0168\x03\u0169\x03\u0169\x03\u016A\x03\u016A\x03" +
        "\u016A\x03\u016A\x03\u016B\x03\u016B\x03\u016B\x03\u016B\x03\u016B\x03" +
        "\u016B\x07\u016B\u1026\n\u016B\f\u016B\x0E\u016B\u1029\v\u016B\x03\u016B" +
        "\x03\u016B\x03\u016C\x03\u016C\x03\u016C\x03\u016C\x05\u016C\u1031\n\u016C" +
        "\x03\u016C\x03\u016C\x03\u016D\x03\u016D\x03\u016E\x03\u016E\x03\u016F" +
        "\x03\u016F\x03\u016F\x03\u016F\x03\u016F\x07\u016F\u103E\n\u016F\f\u016F" +
        "\x0E\u016F\u1041\v\u016F\x03\u016F\x03\u016F\x03\u0170\x03\u0170\x03\u0170" +
        "\x03\u0170\x03\u0170\x03\u0170\x03\u0171\x03\u0171\x03\u0171\x07\u0171" +
        "\u104E\n\u0171\f\u0171\x0E\u0171\u1051\v\u0171\x03\u0171\x03\u0171\x03" +
        "\u0172\x03\u0172\x07\u0172\u1057\n\u0172\f\u0172\x0E\u0172\u105A\v\u0172" +
        "\x03\u0172\x03\u0172\x03\u0173\x03\u0173\x03\u0173\x03\u0173\x07\u0173" +
        "\u1062\n\u0173\f\u0173\x0E\u0173\u1065\v\u0173\x03\u0173\x03\u0173\x03" +
        "\u0174\x03\u0174\x03\u0174\x03\u0174\x05\u0174\u106D\n\u0174\x03\u0174" +
        "\x03\u0174\x03\u0175\x03\u0175\x03\u0175\x03\u0176\x03\u0176\x03\u0176" +
        "\x03\u0176\x03\u0176\x03\u0176\x03\u0176\x07\u0176\u107B\n\u0176\f\u0176" +
        "\x0E\u0176\u107E\v\u0176\x03\u0176\x03\u0176\x03\u0177\x03\u0177\x03\u0177" +
        "\x03\u0178\x03\u0178\x03\u0178\x05\u0178\u1088\n\u0178\x03\u0178\x03\u0178" +
        "\x03\u0178\x03\u0178\x03\u0178\x07\u0178\u108F\n\u0178\f\u0178\x0E\u0178" +
        "\u1092\v\u0178\x03\u0178\x03\u0178\x03\u0179\x03\u0179\x03\u0179\x03\u0179" +
        "\x03\u0179\x05\u0179\u109B\n\u0179\x03\u0179\x03\u0179\x03\u017A\x03\u017A" +
        "\x07\u017A\u10A1\n\u017A\f\u017A\x0E\u017A\u10A4\v\u017A\x03\u017A\x03" +
        "\u017A\x03\u017B\x03\u017B\x03\u017B\x03\u017B\x03\u017B\x03\u017B\x07" +
        "\u017B\u10AE\n\u017B\f\u017B\x0E\u017B\u10B1\v\u017B\x03\u017B\x03\u017B" +
        "\x03\u017C\x03\u017C\x03\u017C\x03\u017C\x03\u017C\x03\u017C\x03\u017D" +
        "\x03\u017D\x03\u017D\x07\u017D\u10BE\n\u017D\f\u017D\x0E\u017D\u10C1\v" +
        "\u017D\x03\u017D\x03\u017D\x03\u017E\x03\u017E\x07\u017E\u10C7\n\u017E" +
        "\f\u017E\x0E\u017E\u10CA\v\u017E\x03\u017E\x03\u017E\x03\u017F\x03\u017F" +
        "\x03\u017F\x03\u017F\x03\u0180\x03\u0180\x03\u0180\x03\u0180\x03\u0180" +
        "\x05\u0180\u10D7\n\u0180\x03\u0180\x07\u0180\u10DA\n\u0180\f\u0180\x0E" +
        "\u0180\u10DD\v\u0180\x03\u0180\x03\u0180\x03\u0181\x03\u0181\x03\u0181" +
        "\x03\u0181\x03\u0182\x03\u0182\x03\u0182\x03\u0183\x03\u0183\x03\u0183" +
        "\x05\u0183\u10EB\n\u0183\x03\u0183\x03\u0183\x03\u0183\x03\u0183\x03\u0183" +
        "\x03\u0183\x03\u0183\x07\u0183\u10F4\n\u0183\f\u0183\x0E\u0183\u10F7\v" +
        "\u0183\x03\u0183\x03\u0183\x03\u0184\x03\u0184\x03\u0184\x03\u0185\x03" +
        "\u0185\x03\u0186\x03\u0186\x07\u0186\u1102\n\u0186\f\u0186\x0E\u0186\u1105" +
        "\v\u0186\x03\u0186\x03\u0186\x03\u0187\x03\u0187\x07\u0187\u110B\n\u0187" +
        "\f\u0187\x0E\u0187\u110E\v\u0187\x03\u0187\x03\u0187\x03\u0188\x03\u0188" +
        "\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188" +
        "\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188" +
        "\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x07\u0188" +
        "\u1128\n\u0188\f\u0188\x0E\u0188\u112B\v\u0188\x03\u0188\x03\u0188\x03" +
        "\u0189\x03\u0189\x03\u0189\x03\u0189\x03\u0189\x03\u0189\x03\u0189\x03" +
        "\u0189\x03\u0189\x07\u0189\u1138\n\u0189\f\u0189\x0E\u0189\u113B\v\u0189" +
        "\x03\u0189\x03\u0189\x03\u018A\x03\u018A\x03\u018A\x03\u018A\x03\u018B" +
        "\x03\u018B\x03\u018C\x03\u018C\x03\u018D\x03\u018D\x03\u018D\x03\u018D" +
        "\x03\u018E\x03\u018E\x03\u018F\x03\u018F\x03\u0190\x03\u0190\x03\u0190" +
        "\x03\u0190\x03\u0191\x03\u0191\x03\u0191\x03\u0191\x03\u0191\x03\u0192" +
        "\x03\u0192\x03\u0192\x03\u0192\x03\u0192\x03\u0192\x03\u0192\x07\u0192" +
        "\u115F\n\u0192\f\u0192\x0E\u0192\u1162\v\u0192\x03\u0192\x03\u0192\x03" +
        "\u0193\x03\u0193\x03\u0193\x03\u0193\x03\u0194\x03\u0194\x03\u0195\x03" +
        "\u0195\x03\u0196\x03\u0196\x03\u0196\x03\u0196\x03\u0197\x03\u0197\x03" +
        "\u0197\x03\u0197\x03\u0197\x03\u0197\x03\u0197\x03\u0197\x03\u0197\x07" +
        "\u0197\u117B\n\u0197\f\u0197\x0E\u0197\u117E\v\u0197\x03\u0197\x03\u0197" +
        "\x03\u0198\x03\u0198\x03\u0198\x03\u0198\x03\u0198\x07\u0198\u1187\n\u0198" +
        "\f\u0198\x0E\u0198\u118A\v\u0198\x03\u0198\x03\u0198\x03\u0199\x03\u0199" +
        "\x03\u0199\x03\u0199\x07\u0199\u1192\n\u0199\f\u0199\x0E\u0199\u1195\v" +
        "\u0199\x03\u0199\x03\u0199\x03\u019A\x03\u019A\x07\u019A\u119B\n\u019A" +
        "\f\u019A\x0E\u019A\u119E\v\u019A\x03\u019A\x03\u019A\x03\u019B\x03\u019B" +
        "\x07\u019B\u11A4\n\u019B\f\u019B\x0E\u019B\u11A7\v\u019B\x03\u019B\x03" +
        "\u019B\x03\u019C\x03\u019C\x03\u019C\x07\u019C\u11AE\n\u019C\f\u019C\x0E" +
        "\u019C\u11B1\v\u019C\x03\u019C\x03\u019C\x03\u019D\x03\u019D\x03\u019D" +
        "\x03\u019D\x03\u019D\x07\u019D\u11BA\n\u019D\f\u019D\x0E\u019D\u11BD\v" +
        "\u019D\x03\u019D\x03\u019D\x03\u019E\x03\u019E\x03\u019F\x03\u019F\x03" +
        "\u01A0\x03\u01A0\x03\u01A0\x07\u01A0\u11C8\n\u01A0\f\u01A0\x0E\u01A0\u11CB" +
        "\v\u01A0\x03\u01A0\x03\u01A0\x03\u01A1\x03\u01A1\x03\u01A1\x05\u01A1\u11D2" +
        "\n\u01A1\x03\u01A1\x03\u01A1\x03\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03" +
        "\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03" +
        "\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x07\u01A2\u11E6\n\u01A2" +
        "\f\u01A2\x0E\u01A2\u11E9\v\u01A2\x03\u01A2\x03\u01A2\x03\u01A3\x03\u01A3" +
        "\x03\u01A3\x03\u01A4\x03\u01A4\x03\u01A5\x03\u01A5\x03\u01A6\x03\u01A6" +
        "\x03\u01A6\x03\u01A6\x03\u01A6\x07\u01A6\u11F9\n\u01A6\f\u01A6\x0E\u01A6" +
        "\u11FC\v\u01A6\x03\u01A6\x03\u01A6\x03\u01A7\x03\u01A7\x03\u01A7\x03\u01A7" +
        "\x03\u01A7\x07\u01A7\u1205\n\u01A7\f\u01A7\x0E\u01A7\u1208\v\u01A7\x03" +
        "\u01A7\x03\u01A7\x03\u01A8\x03\u01A8\x03\u01A8\x03\u01A9\x03\u01A9\x03" +
        "\u01A9\x03\u01A9\x03\u01AA\x03\u01AA\x03\u01AA\x03\u01AB\x03\u01AB\x03" +
        "\u01AB\x03\u01AC\x03\u01AC\x03\u01AC\x03\u01AC\x03\u01AD\x03\u01AD\x03" +
        "\u01AD\x03\u01AD\x03\u01AE\x03\u01AE\x05\u01AE\u1223\n\u01AE\x03\u01AF" +
        "\x03\u01AF\x03\u01B0\x03\u01B0\x03\u01B1\x03\u01B1\x03\u01B1\x03\u01B2" +
        "\x03\u01B2\x03\u01B2\x03\u01B2\x05\u01B2\u1230\n\u01B2\x03\u01B2\x03\u01B2" +
        "\x03\u01B2\x05\u01B2\u1235\n\u01B2\x03\u01B2\x03\u01B2\x03\u01B2\x05\u01B2" +
        "\u123A\n\u01B2\x03\u01B2\x03\u01B2\x03\u01B3\x03\u01B3\x03\u01B3\x03\u01B3" +
        "\x03\u01B4\x03\u01B4\x03\u01B5\x03\u01B5\x03\u01B5\x03\u01B6\x03\u01B6" +
        "\x03\u01B6\x03\u01B6\x07\u01B6\u124B\n\u01B6\f\u01B6\x0E\u01B6\u124E\v" +
        "\u01B6\x03\u01B6\x03\u01B6\x03\u01B7\x03\u01B7\x03\u01B7\x03\u01B7\x03" +
        "\u01B7\x07\u01B7\u1257\n\u01B7\f\u01B7\x0E\u01B7\u125A\v\u01B7\x03\u01B7" +
        "\x03\u01B7\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8" +
        "\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8" +
        "\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8" +
        "\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x07\u01B8\u1277\n\u01B8" +
        "\f\u01B8\x0E\u01B8\u127A\v\u01B8\x03\u01B8\x03\u01B8\x03\u01B9\x03\u01B9" +
        "\x03\u01BA\x03\u01BA\x03\u01BA\x05\u01BA\u1283\n\u01BA\x03\u01BA\x03\u01BA" +
        "\x03\u01BB\x03\u01BB\x03\u01BB\x03\u01BB\x03\u01BB\x03\u01BB\x07\u01BB" +
        "\u128D\n\u01BB\f\u01BB\x0E\u01BB\u1290\v\u01BB\x03\u01BB\x03\u01BB\x03" +
        "\u01BC\x03\u01BC\x03\u01BC\x07\u01BC\u1297\n\u01BC\f\u01BC\x0E\u01BC\u129A" +
        "\v\u01BC\x03\u01BC\x03\u01BC\x03\u01BD\x03\u01BD\x03\u01BD\x03\u01BD\x03" +
        "\u01BE\x03\u01BE\x03\u01BF\x03\u01BF\x03\u01BF\x03\u01BF\x05\u01BF\u12A8" +
        "\n\u01BF\x03\u01BF\x03\u01BF\x03\u01C0\x03\u01C0\x03\u01C0\x03\u01C1\x03" +
        "\u01C1\x03\u01C1\x03\u01C2\x03\u01C2\x03\u01C2\x03\u01C3\x03\u01C3\x03" +
        "\u01C3\x03\u01C3\x03\u01C4\x03\u01C4\x03\u01C4\x07\u01C4\u12BC\n\u01C4" +
        "\f\u01C4\x0E\u01C4\u12BF\v\u01C4\x03\u01C4\x03\u01C4\x03\u01C5\x03\u01C5" +
        "\x03\u01C5\x03\u01C5\x03\u01C6\x03\u01C6\x03\u01C6\x03\u01C7\x03\u01C7" +
        "\x03\u01C7\x03\u01C7\x03\u01C8\x03\u01C8\x05\u01C8\u12D0\n\u01C8\x03";
    EDIF300Parser._serializedATNSegment2 = "\u01C9\x03\u01C9\x03\u01CA\x03\u01CA\x03\u01CB\x03\u01CB\x03\u01CB\x03" +
        "\u01CB\x07\u01CB\u12DA\n\u01CB\f\u01CB\x0E\u01CB\u12DD\v\u01CB\x03\u01CB" +
        "\x03\u01CB\x03\u01CC\x03\u01CC\x03\u01CC\x03\u01CC\x03\u01CC\x03\u01CD" +
        "\x03\u01CD\x03\u01CD\x03\u01CD\x03\u01CE\x03\u01CE\x03\u01CE\x03\u01CE" +
        "\x03\u01CE\x03\u01CF\x03\u01CF\x03\u01D0\x03\u01D0\x03\u01D1\x03\u01D1" +
        "\x03\u01D1\x05\u01D1\u12F6\n\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1" +
        "\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1" +
        "\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1" +
        "\x07\u01D1\u130A\n\u01D1\f\u01D1\x0E\u01D1\u130D\v\u01D1\x03\u01D1\x03" +
        "\u01D1\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03" +
        "\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03" +
        "\u01D2\x03\u01D2\x03\u01D2\x07\u01D2\u1321\n\u01D2\f\u01D2\x0E\u01D2\u1324" +
        "\v\u01D2\x03\u01D2\x03\u01D2\x03\u01D3\x03\u01D3\x03\u01D3\x03\u01D3\x03" +
        "\u01D3\x03\u01D4\x03\u01D4\x03\u01D4\x03\u01D4\x03\u01D5\x03\u01D5\x03" +
        "\u01D5\x03\u01D5\x03\u01D6\x03\u01D6\x07\u01D6\u1337\n\u01D6\f\u01D6\x0E" +
        "\u01D6\u133A\v\u01D6\x03\u01D6\x03\u01D6\x03\u01D7\x03\u01D7\x03\u01D7" +
        "\x03\u01D7\x03\u01D8\x03\u01D8\x03\u01D8\x03\u01D8\x03\u01D9\x03\u01D9" +
        "\x03\u01D9\x03\u01D9\x03\u01DA\x03\u01DA\x03\u01DA\x03\u01DA\x05\u01DA" +
        "\u134E\n\u01DA\x03\u01DA\x03\u01DA\x03\u01DB\x03\u01DB\x03\u01DC\x03\u01DC" +
        "\x03\u01DC\x03\u01DC\x03\u01DC\x03\u01DC\x03\u01DC\x03\u01DC\x03\u01DC" +
        "\x07\u01DC\u135D\n\u01DC\f\u01DC\x0E\u01DC\u1360\v\u01DC\x03\u01DC\x03" +
        "\u01DC\x03\u01DD\x03\u01DD\x03\u01DD\x03\u01DD\x03\u01DD\x03\u01DD\x03" +
        "\u01DD\x03\u01DD\x03\u01DD\x03\u01DD\x07\u01DD\u136E\n\u01DD\f\u01DD\x0E" +
        "\u01DD\u1371\v\u01DD\x03\u01DD\x03\u01DD\x03\u01DE\x03\u01DE\x03\u01DE" +
        "\x03\u01DE\x03\u01DF\x03\u01DF\x03\u01DF\x03\u01E0\x03\u01E0\x05\u01E0" +
        "\u137E\n\u01E0\x03\u01E0\x03\u01E0\x03\u01E1\x03\u01E1\x03\u01E1\x07\u01E1" +
        "\u1385\n\u01E1\f\u01E1\x0E\u01E1\u1388\v\u01E1\x03\u01E1\x03\u01E1\x03" +
        "\u01E2\x03\u01E2\x03\u01E2\x03\u01E2\x03\u01E3\x03\u01E3\x03\u01E3\x03" +
        "\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03" +
        "\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03" +
        "\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x07\u01E3\u13A7" +
        "\n\u01E3\f\u01E3\x0E\u01E3\u13AA\v\u01E3\x03\u01E3\x03\u01E3\x03\u01E4" +
        "\x03\u01E4\x03\u01E4\x07\u01E4\u13B1\n\u01E4\f\u01E4\x0E\u01E4\u13B4\v" +
        "\u01E4\x03\u01E4\x03\u01E4\x03\u01E5\x03\u01E5\x03\u01E5\x03\u01E5\x03" +
        "\u01E5\x07\u01E5\u13BD\n\u01E5\f\u01E5\x0E\u01E5\u13C0\v\u01E5\x03\u01E5" +
        "\x03\u01E5\x03\u01E6\x03\u01E6\x03\u01E6\x03\u01E6\x03\u01E6\x03\u01E6" +
        "\x03\u01E6\x03\u01E6\x03\u01E6\x07\u01E6\u13CD\n\u01E6\f\u01E6\x0E\u01E6" +
        "\u13D0\v\u01E6\x03\u01E6\x03\u01E6\x03\u01E7\x03\u01E7\x03\u01E7\x05\u01E7" +
        "\u13D7\n\u01E7\x03\u01E7\x03\u01E7\x03\u01E8\x03\u01E8\x03\u01E8\x03\u01E8" +
        "\x03\u01E8\x03\u01E8\x07\u01E8\u13E1\n\u01E8\f\u01E8\x0E\u01E8\u13E4\v" +
        "\u01E8\x03\u01E8\x03\u01E8\x03\u01E9\x03\u01E9\x03\u01E9\x03\u01E9\x03" +
        "\u01E9\x03\u01E9\x03\u01E9\x03\u01E9\x03\u01E9\x07\u01E9\u13F1\n\u01E9" +
        "\f\u01E9\x0E\u01E9\u13F4\v\u01E9\x03\u01E9\x03\u01E9\x03\u01EA\x03\u01EA" +
        "\x03\u01EA\x03\u01EA\x03\u01EB\x03\u01EB\x03\u01EB\x03\u01EB\x05\u01EB" +
        "\u1400\n\u01EB\x03\u01EB\x03\u01EB\x03\u01EC\x03\u01EC\x03\u01EC\x03\u01EC" +
        "\x03\u01ED\x03\u01ED\x03\u01EE\x03\u01EE\x03\u01EF\x03\u01EF\x03\u01EF" +
        "\x03\u01EF\x07\u01EF\u1410\n\u01EF\f\u01EF\x0E\u01EF\u1413\v\u01EF\x03" +
        "\u01EF\x03\u01EF\x03\u01F0\x03\u01F0\x03\u01F0\x03\u01F0\x03\u01F1\x03" +
        "\u01F1\x03\u01F1\x03\u01F1\x03\u01F2\x03\u01F2\x03\u01F2\x03\u01F2\x03" +
        "\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x03" +
        "\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x07\u01F3\u142F\n\u01F3" +
        "\f\u01F3\x0E\u01F3\u1432\v\u01F3\x03\u01F3\x03\u01F3\x03\u01F4\x03\u01F4" +
        "\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4" +
        "\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x07\u01F4" +
        "\u1445\n\u01F4\f\u01F4\x0E\u01F4\u1448\v\u01F4\x03\u01F4\x03\u01F4\x03" +
        "\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03" +
        "\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x07\u01F5\u1459" +
        "\n\u01F5\f\u01F5\x0E\u01F5\u145C\v\u01F5\x03\u01F5\x03\u01F5\x03\u01F6" +
        "\x03\u01F6\x03\u01F6\x03\u01F6\x03\u01F6\x03\u01F6\x03\u01F6\x03\u01F6" +
        "\x03\u01F6\x03\u01F6\x07\u01F6\u146A\n\u01F6\f\u01F6\x0E\u01F6\u146D\v" +
        "\u01F6\x03\u01F6\x03\u01F6\x03\u01F7\x03\u01F7\x03\u01F7\x05\u01F7\u1474" +
        "\n\u01F7\x03\u01F7\x03\u01F7\x03\u01F8\x03\u01F8\x03\u01F8\x03\u01F8\x05" +
        "\u01F8\u147C\n\u01F8\x03\u01F8\x03\u01F8\x03\u01F9\x03\u01F9\x03\u01F9" +
        "\x03\u01F9\x03\u01F9\x05\u01F9\u1485\n\u01F9\x03\u01F9\x05\u01F9\u1488" +
        "\n\u01F9\x03\u01F9\x03\u01F9\x03\u01FA\x03\u01FA\x03\u01FA\x03\u01FA\x03" +
        "\u01FB\x03\u01FB\x03\u01FC\x03\u01FC\x03\u01FC\x03\u01FC\x05\u01FC\u1496" +
        "\n\u01FC\x03\u01FC\x03\u01FC\x03\u01FD\x03\u01FD\x03\u01FE\x03\u01FE\x03" +
        "\u01FE\x03\u01FE\x03\u01FF\x03\u01FF\x03\u01FF\x07\u01FF\u14A3\n\u01FF" +
        "\f\u01FF\x0E\u01FF\u14A6\v\u01FF\x03\u01FF\x03\u01FF\x03\u0200\x03\u0200" +
        "\x03\u0200\x05\u0200\u14AD\n\u0200\x03\u0200\x03\u0200\x03\u0201\x03\u0201" +
        "\x03\u0201\x03\u0201\x03\u0201\x07\u0201\u14B6\n\u0201\f\u0201\x0E\u0201" +
        "\u14B9\v\u0201\x03\u0201\x03\u0201\x03\u0202\x03\u0202\x03\u0202\x03\u0202" +
        "\x03\u0202\x07\u0202\u14C2\n\u0202\f\u0202\x0E\u0202\u14C5\v\u0202\x03" +
        "\u0202\x03\u0202\x03\u0203\x03\u0203\x03\u0203\x03\u0203\x07\u0203\u14CD" +
        "\n\u0203\f\u0203\x0E\u0203\u14D0\v\u0203\x03\u0203\x03\u0203\x03\u0204" +
        "\x03\u0204\x05\u0204\u14D6\n\u0204\x03\u0204\x03\u0204\x03\u0205\x03\u0205" +
        "\x03\u0205\x03\u0205\x03\u0205\x03\u0205\x03\u0205\x03\u0205\x03\u0205" +
        "\x03\u0205\x03\u0205\x07\u0205\u14E5\n\u0205\f\u0205\x0E\u0205\u14E8\v" +
        "\u0205\x03\u0205\x03\u0205\x03\u0206\x03\u0206\x03\u0206\x07\u0206\u14EF" +
        "\n\u0206\f\u0206\x0E\u0206\u14F2\v\u0206\x03\u0206\x03\u0206\x03\u0207" +
        "\x03\u0207\x07\u0207\u14F8\n\u0207\f\u0207\x0E\u0207\u14FB\v\u0207\x03" +
        "\u0207\x03\u0207\x03\u0208\x03\u0208\x03\u0208\x03\u0208\x03\u0209\x03" +
        "\u0209\x07\u0209\u1505\n\u0209\f\u0209\x0E\u0209\u1508\v\u0209\x03\u0209" +
        "\x03\u0209\x03\u020A\x03\u020A\x03\u020B\x03\u020B\x03\u020B\x03\u020B" +
        "\x03\u020C\x03\u020C\x05\u020C\u1514\n\u020C\x03\u020C\x05\u020C\u1517" +
        "\n\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x03" +
        "\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x07" +
        "\u020C\u1526\n\u020C\f\u020C\x0E\u020C\u1529\v\u020C\x03\u020C\x03\u020C" +
        "\x03\u020D\x03\u020D\x03\u020D\x05\u020D\u1530\n\u020D\x03\u020D\x03\u020D" +
        "\x03\u020D\x03\u020D\x03\u020D\x03\u020D\x03\u020D\x03\u020D\x03\u020D" +
        "\x03\u020D\x07\u020D\u153C\n\u020D\f\u020D\x0E\u020D\u153F\v\u020D\x03" +
        "\u020D\x03\u020D\x03\u020E\x03\u020E\x03\u020E\x03\u020E\x03\u020E\x03" +
        "\u020E\x03\u020E\x03\u020E\x03\u020E\x03\u020E\x03\u020E\x03\u020E\x03" +
        "\u020E\x07\u020E\u1550\n\u020E\f\u020E\x0E\u020E\u1553\v\u020E\x03\u020E" +
        "\x03\u020E\x03\u020F\x03\u020F\x03\u020F\x03\u020F\x03\u020F\x03\u020F" +
        "\x03\u020F\x03\u020F\x07\u020F\u155F\n\u020F\f\u020F\x0E\u020F\u1562\v" +
        "\u020F\x03\u020F\x03\u020F\x03\u0210\x03\u0210\x03\u0210\x03\u0210\x03" +
        "\u0210\x03\u0210\x07\u0210\u156C\n\u0210\f\u0210\x0E\u0210\u156F\v\u0210" +
        "\x03\u0210\x03\u0210\x03\u0211\x03\u0211\x03\u0211\x07\u0211\u1576\n\u0211" +
        "\f\u0211\x0E\u0211\u1579\v\u0211\x03\u0211\x03\u0211\x03\u0212\x03\u0212" +
        "\x03\u0213\x03\u0213\x03\u0214\x03\u0214\x03\u0214\x03\u0214\x03\u0214" +
        "\x03\u0214\x07\u0214\u1587\n\u0214\f\u0214\x0E\u0214\u158A\v\u0214\x03" +
        "\u0214\x03\u0214\x03\u0215\x03\u0215\x03\u0215\x03\u0215\x05\u0215\u1592" +
        "\n\u0215\x03\u0216\x03\u0216\x03\u0216\x03\u0216\x03\u0216\x03\u0216\x05" +
        "\u0216\u159A\n\u0216\x03\u0217\x03\u0217\x03\u0217\x03\u0218\x03\u0218" +
        "\x03\u0218\x05\u0218\u15A2\n\u0218\x03\u0218\x03\u0218\x05\u0218\u15A6" +
        "\n\u0218\x03\u0218\x03\u0218\x03\u0219\x03\u0219\x03\u0219\x03\u0219\x03" +
        "\u0219\x07\u0219\u15AF\n\u0219\f\u0219\x0E\u0219\u15B2\v\u0219\x03\u0219" +
        "\x03\u0219\x03\u021A\x03\u021A\x07\u021A\u15B8\n\u021A\f\u021A\x0E\u021A" +
        "\u15BB\v\u021A\x03\u021A\x03\u021A\x03\u021B\x03\u021B\x03\u021B\x03\u021B" +
        "\x03\u021B\x03\u021B\x07\u021B\u15C5\n\u021B\f\u021B\x0E\u021B\u15C8\v" +
        "\u021B\x03\u021B\x03\u021B\x03\u021C\x03\u021C\x03\u021C\x07\u021C\u15CF" +
        "\n\u021C\f\u021C\x0E\u021C\u15D2\v\u021C\x03\u021C\x03\u021C\x03\u021D" +
        "\x03\u021D\x03\u021E\x03\u021E\x03\u021F\x03\u021F\x03\u021F\x03\u021F" +
        "\x03\u021F\x03\u021F\x07\u021F\u15E0\n\u021F\f\u021F\x0E\u021F\u15E3\v" +
        "\u021F\x03\u021F\x03\u021F\x03\u0220\x03\u0220\x03\u0220\x03\u0220\x03" +
        "\u0220\x03\u0221\x03\u0221\x03\u0221\x03\u0221\x03\u0222\x03\u0222\x03" +
        "\u0223\x03\u0223\x03\u0223\x07\u0223\u15F5\n\u0223\f\u0223\x0E\u0223\u15F8" +
        "\v\u0223\x03\u0223\x03\u0223\x03\u0224\x03\u0224\x03\u0224\x03\u0224\x03" +
        "\u0225\x03\u0225\x03\u0225\x03\u0225\x05\u0225\u1604\n\u0225\x03\u0225" +
        "\x03\u0225\x03\u0226\x03\u0226\x03\u0227\x03\u0227\x03\u0227\x03\u0227" +
        "\x07\u0227\u160E\n\u0227\f\u0227\x0E\u0227\u1611\v\u0227\x03\u0227\x03" +
        "\u0227\x03\u0228\x03\u0228\x03\u0228\x03\u0228\x03\u0228\x05\u0228\u161A" +
        "\n\u0228\x03\u0228\x05\u0228\u161D\n\u0228\x03\u0228\x03\u0228\x03\u0229" +
        "\x03\u0229\x03\u0229\x03\u0229\x05\u0229\u1625\n\u0229\x03\u0229\x03\u0229" +
        "\x03\u0229\x07\u0229\u162A\n\u0229\f\u0229\x0E\u0229\u162D\v\u0229\x03" +
        "\u0229\x03\u0229\x03\u022A\x03\u022A\x03\u022A\x03\u022A\x03\u022B\x03" +
        "\u022B\x07\u022B\u1637\n\u022B\f\u022B\x0E\u022B\u163A\v\u022B\x03\u022B" +
        "\x03\u022B\x03\u022C\x03\u022C\x03\u022C\x03\u022C\x03\u022D\x03\u022D" +
        "\x03\u022D\x05\u022D\u1645\n\u022D\x03\u022E\x03\u022E\x03\u022E\x05\u022E" +
        "\u164A\n\u022E\x03\u022F\x03\u022F\x03\u022F\x05\u022F\u164F\n\u022F\x03" +
        "\u022F\x03\u022F\x03\u0230\x03\u0230\x03\u0230\x03\u0230\x03\u0230\x07" +
        "\u0230\u1658\n\u0230\f\u0230\x0E\u0230\u165B\v\u0230\x03\u0230\x03\u0230" +
        "\x03\u0231\x03\u0231\x03\u0231\x05\u0231\u1662\n\u0231\x03\u0231\x03\u0231" +
        "\x03\u0232\x03\u0232\x03\u0232\x03\u0232\x05\u0232\u166A\n\u0232\x03\u0232" +
        "\x03\u0232\x03\u0232\x03\u0232\x03\u0232\x03\u0232\x07\u0232\u1672\n\u0232" +
        "\f\u0232\x0E\u0232\u1675\v\u0232\x03\u0232\x03\u0232\x03\u0233\x03\u0233" +
        "\x03\u0233\x03\u0233\x07\u0233\u167D\n\u0233\f\u0233\x0E\u0233\u1680\v" +
        "\u0233\x03\u0233\x03\u0233\x03\u0234\x03\u0234\x03\u0234\x03\u0234\x03" +
        "\u0234\x05\u0234\u1689\n\u0234\x03\u0234\x05\u0234\u168C\n\u0234\x03\u0234" +
        "\x03\u0234\x03\u0235\x03\u0235\x03\u0235\x05\u0235\u1693\n\u0235\x03\u0235" +
        "\x03\u0235\x03\u0236\x03\u0236\x03\u0236\x03\u0236\x03\u0237\x03\u0237" +
        "\x03\u0238\x03\u0238\x03\u0238\x07\u0238\u16A0\n\u0238\f\u0238\x0E\u0238" +
        "\u16A3\v\u0238\x03\u0238\x03\u0238\x03\u0239\x03\u0239\x03\u023A\x03\u023A" +
        "\x03\u023A\x03\u023A\x05\u023A\u16AD\n\u023A\x03\u023A\x03\u023A\x03\u023A" +
        "\x07\u023A\u16B2\n\u023A\f\u023A\x0E\u023A\u16B5\v\u023A\x03\u023A\x03" +
        "\u023A\x03\u023B\x03\u023B\x03\u023B\x03\u023C\x03\u023C\x03\u023C\x03" +
        "\u023C\x03\u023C\x03\u023D\x03\u023D\x03\u023E\x03\u023E\x03\u023F\x03" +
        "\u023F\x03\u023F\x03\u023F\x03\u0240\x03\u0240\x03\u0240\x03\u0240\x03" +
        "\u0241\x03\u0241\x03\u0241\x03\u0241\x03\u0241\x03\u0242\x03\u0242\x03" +
        "\u0243\x03\u0243\x03\u0243\x03\u0244\x03\u0244\x03\u0244\x03\u0244\x03" +
        "\u0245\x03\u0245\x03\u0245\x03\u0245\x05\u0245\u16DF\n\u0245\x03\u0245" +
        "\x03\u0245\x03\u0246\x03\u0246\x07\u0246\u16E5\n\u0246\f\u0246\x0E\u0246" +
        "\u16E8\v\u0246\x03\u0246\x03\u0246\x03\u0247\x03\u0247\x03\u0247\x03\u0248" +
        "\x03\u0248\x07\u0248\u16F1\n\u0248\f\u0248\x0E\u0248\u16F4\v\u0248\x03" +
        "\u0248\x03\u0248\x03\u0249\x03\u0249\x03\u0249\x03\u0249\x03\u024A\x03" +
        "\u024A\x03\u024A\x03\u024A\x05\u024A\u1700\n\u024A\x03\u024A\x03\u024A" +
        "\x03\u024B\x03\u024B\x03\u024B\x03\u024C\x03\u024C\x03\u024C\x03\u024C" +
        "\x03\u024C\x03\u024D\x03\u024D\x03\u024D\x03\u024D\x03\u024D\x03\u024E" +
        "\x03\u024E\x03\u024E\x03\u024E\x03\u024F\x03\u024F\x03\u024F\x03\u0250" +
        "\x03\u0250\x03\u0251\x03\u0251\x05\u0251\u171C\n\u0251\x03\u0252\x03\u0252" +
        "\x03\u0252\x03\u0252\x03\u0252\x03\u0253\x03\u0253\x03\u0253\x03\u0253" +
        "\x03\u0253\x03\u0254\x03\u0254\x03\u0254\x03\u0254\x03\u0254\x03\u0254" +
        "\x03\u0254\x03\u0254\x03\u0254\x03\u0254\x07\u0254\u1732\n\u0254\f\u0254" +
        "\x0E\u0254\u1735\v\u0254\x03\u0254\x03\u0254\x03\u0255\x03\u0255\x03\u0255" +
        "\x05\u0255\u173C\n\u0255\x03\u0255\x03\u0255\x03\u0256\x03\u0256\x03\u0256" +
        "\x03\u0256\x03\u0256\x07\u0256\u1745\n\u0256\f\u0256\x0E\u0256\u1748\v" +
        "\u0256\x03\u0256\x03\u0256\x03\u0257\x03\u0257\x03\u0257\x03\u0257\x03" +
        "\u0257\x03\u0257\x03\u0257\x03\u0257\x03\u0257\x03\u0257\x07\u0257\u1756" +
        "\n\u0257\f\u0257\x0E\u0257\u1759\v\u0257\x03\u0257\x03\u0257\x03\u0258" +
        "\x03\u0258\x03\u0258\x03\u0258\x03\u0258\x03\u0258\x03\u0258\x03\u0258" +
        "\x03\u0258\x03\u0258\x07\u0258\u1767\n\u0258\f\u0258\x0E\u0258\u176A\v" +
        "\u0258\x03\u0258\x03\u0258\x03\u0259\x03\u0259\x03\u0259\x03\u0259\x03" +
        "\u0259\x07\u0259\u1773\n\u0259\f\u0259\x0E\u0259\u1776\v\u0259\x03\u0259" +
        "\x03\u0259\x03\u025A\x03\u025A\x03\u025A\x03\u025A\x03\u025A\x03\u025A" +
        "\x03\u025A\x03\u025A\x03\u025A\x03\u025A\x07\u025A\u1784\n\u025A\f\u025A" +
        "\x0E\u025A\u1787\v\u025A\x03\u025A\x03\u025A\x03\u025B\x03\u025B\x03\u025B" +
        "\x05\u025B\u178E\n\u025B\x03\u025B\x03\u025B\x03\u025C\x03\u025C\x03\u025C" +
        "\x03\u025C\x03\u025C\x03\u025C\x03\u025C\x07\u025C\u1799\n\u025C\f\u025C" +
        "\x0E\u025C\u179C\v\u025C\x03\u025C\x03\u025C\x03\u025D\x03\u025D\x03\u025D" +
        "\x03\u025D\x03\u025D\x03\u025D\x03\u025D\x03\u025D\x03\u025D\x03\u025D" +
        "\x03\u025D\x07\u025D\u17AB\n\u025D\f\u025D\x0E\u025D\u17AE\v\u025D\x03" +
        "\u025D\x03\u025D\x03\u025E\x03\u025E\x03\u025E\x05\u025E\u17B5\n\u025E" +
        "\x03\u025E\x03\u025E\x03\u025F\x03\u025F\x03\u025F\x03\u025F\x03\u025F" +
        "\x03\u025F\x03\u025F\x03\u0260\x03\u0260\x05\u0260\u17C2\n\u0260\x03\u0260" +
        "\x03\u0260\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261" +
        "\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261" +
        "\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x07\u0261" +
        "\u17D9\n\u0261\f\u0261\x0E\u0261\u17DC\v\u0261\x03\u0261\x03\u0261\x03" +
        "\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x03" +
        "\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x07" +
        "\u0262\u17EE\n\u0262\f\u0262\x0E\u0262\u17F1\v\u0262\x03\u0262\x03\u0262" +
        "\x03\u0263\x03\u0263\x03\u0263\x03\u0263\x03\u0263\x03\u0263\x03\u0263" +
        "\x03\u0263\x03\u0263\x03\u0263\x03\u0263\x07\u0263\u1800\n\u0263\f\u0263" +
        "\x0E\u0263\u1803\v\u0263\x03\u0263\x03\u0263\x03\u0264\x03\u0264\x03\u0264" +
        "\x03\u0264\x03\u0265\x03\u0265\x03\u0265\x03\u0265\x05\u0265\u180F\n\u0265" +
        "\x03\u0265\x03\u0265\x03\u0265\x03\u0265\x03\u0265\x03\u0265\x03\u0265" +
        "\x03\u0265\x07\u0265\u1819\n\u0265\f\u0265\x0E\u0265\u181C\v\u0265\x03" +
        "\u0265\x05\u0265\u181F\n\u0265\x03\u0265\x03\u0265\x03\u0266\x03\u0266" +
        "\x03\u0266\x05\u0266\u1826\n\u0266\x03\u0266\x03\u0266\x03\u0267\x03\u0267" +
        "\x03\u0267\x03\u0267\x03\u0267\x03\u0267\x07\u0267\u1830\n\u0267\f\u0267" +
        "\x0E\u0267\u1833\v\u0267\x03\u0267\x03\u0267\x03\u0268\x03\u0268\x03\u0268" +
        "\x03\u0268\x03\u0268\x03\u0268\x03\u0268\x03\u0268\x03\u0268\x03\u0268" +
        "\x07\u0268\u1841\n\u0268\f\u0268\x0E\u0268\u1844\v\u0268\x03\u0268\x03" +
        "\u0268\x03\u0269\x03\u0269\x03\u0269\x05\u0269\u184B\n\u0269\x03\u0269" +
        "\x03\u0269\x03\u026A\x03\u026A\x03\u026A\x03\u026A\x03\u026A\x03\u026A" +
        "\x03\u026A\x03\u026B\x03\u026B\x05\u026B\u1858\n\u026B\x03\u026B\x03\u026B" +
        "\x03\u026C\x03\u026C\x03\u026C\x07\u026C\u185F\n\u026C\f\u026C\x0E\u026C" +
        "\u1862\v\u026C\x03\u026C\x03\u026C\x03\u026D\x03\u026D\x03\u026D\x03\u026D" +
        "\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D" +
        "\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D" +
        "\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x07\u026D\u187C\n\u026D\f\u026D" +
        "\x0E\u026D\u187F\v\u026D\x03\u026D\x03\u026D\x03\u026E\x03\u026E\x03\u026E" +
        "\x03\u026E\x03\u026F\x03\u026F\x03\u026F\x03\u026F\x03\u026F\x03\u026F" +
        "\x03\u026F\x07\u026F\u188E\n\u026F\f\u026F\x0E\u026F\u1891\v\u026F\x03" +
        "\u026F\x03\u026F\x03\u0270\x03\u0270\x03\u0270\x03\u0270\x03\u0270\x03" +
        "\u0270\x03\u0270\x03\u0270\x03\u0270\x07\u0270\u189E\n\u0270\f\u0270\x0E" +
        "\u0270\u18A1\v\u0270\x03\u0270\x03\u0270\x03\u0271\x03\u0271\x03\u0271" +
        "\x03\u0271\x03\u0271\x03\u0271\x03\u0271\x03\u0271\x07\u0271\u18AD\n\u0271" +
        "\f\u0271\x0E\u0271\u18B0\v\u0271\x03\u0271\x03\u0271\x03\u0272\x03\u0272" +
        "\x03\u0272\x03\u0272\x03\u0273\x03\u0273\x03\u0273\x03\u0273\x03\u0273" +
        "\x03\u0273\x03\u0273\x03\u0273\x03\u0273\x07\u0273\u18C1\n\u0273\f\u0273" +
        "\x0E\u0273\u18C4\v\u0273\x03\u0273\x03\u0273\x03\u0274\x03\u0274\x03\u0274" +
        "\x05\u0274\u18CB\n\u0274\x03\u0274\x03\u0274\x03\u0275\x03\u0275\x03\u0275" +
        "\x03\u0275\x03\u0275\x03\u0275\x03\u0275\x03\u0275\x07\u0275\u18D7\n\u0275" +
        "\f\u0275\x0E\u0275\u18DA\v\u0275\x03\u0275\x03\u0275\x03\u0276\x03\u0276" +
        "\x03\u0276\x03\u0276\x03\u0277\x03\u0277\x03\u0277\x03\u0277\x03\u0277" +
        "\x03\u0277\x03\u0277\x03\u0277\x03\u0277\x07\u0277\u18EB\n\u0277\f\u0277" +
        "\x0E\u0277\u18EE\v\u0277\x03\u0277\x03\u0277\x03\u0278\x03\u0278\x03\u0278" +
        "\x05\u0278\u18F5\n\u0278\x03\u0278\x03\u0278\x03\u0279\x03\u0279\x03\u0279" +
        "\x03\u0279\x03\u0279\x05\u0279\u18FE\n\u0279\x03\u0279\x03\u0279\x03\u0279" +
        "\x03\u0279\x03\u0279\x03\u0279\x07\u0279\u1906\n\u0279\f\u0279\x0E\u0279" +
        "\u1909\v\u0279\x03\u0279\x03\u0279\x03\u027A\x03\u027A\x03\u027A\x03\u027A" +
        "\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x03\u027B" +
        "\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x07\u027B" +
        "\u191E\n\u027B\f\u027B\x0E\u027B\u1921\v\u027B\x03\u027B\x03\u027B\x03" +
        "\u027C\x03\u027C\x03\u027C\x05\u027C\u1928\n\u027C\x03\u027C\x03\u027C" +
        "\x03\u027D\x03\u027D\x03\u027D\x03\u027D\x05\u027D\u1930\n\u027D\x03\u027D" +
        "\x05\u027D\u1933\n\u027D\x03\u027D\x03\u027D\x03\u027E\x03\u027E\x03\u027E" +
        "\x03\u027E\x03\u027E\x03\u027E\x03\u027E\x03\u027E\x03\u027E\x07\u027E" +
        "\u1940\n\u027E\f\u027E\x0E\u027E\u1943\v\u027E\x03\u027E\x03\u027E\x03" +
        "\u027F\x03\u027F\x03\u027F\x05\u027F\u194A\n\u027F\x03\u027F\x03\u027F" +
        "\x03\u0280\x03\u0280\x03\u0280\x03\u0280\x03\u0280\x07\u0280\u1953\n\u0280" +
        "\f\u0280\x0E\u0280\u1956\v\u0280\x03\u0280\x03\u0280\x03\u0281\x03\u0281" +
        "\x03\u0281\x05\u0281\u195D\n\u0281\x03\u0281\x03\u0281\x03\u0281\x03\u0281" +
        "\x03\u0281\x03\u0281\x03\u0281\x03\u0281\x07\u0281\u1967\n\u0281\f\u0281" +
        "\x0E\u0281\u196A\v\u0281\x03\u0281\x03\u0281\x05\u0281\u196E\n\u0281\x03" +
        "\u0281\x03\u0281\x03\u0281\x03\u0281\x03\u0281\x03\u0281\x03\u0281\x03" +
        "\u0281\x07\u0281\u1978\n\u0281\f\u0281\x0E\u0281\u197B\v\u0281\x03\u0281" +
        "\x03\u0281\x03\u0282\x03\u0282\x03\u0282\x03\u0282\x03\u0282\x03\u0282" +
        "\x03\u0282\x03\u0282\x03\u0282\x03\u0282\x03\u0282\x07\u0282\u198A\n\u0282" +
        "\f\u0282\x0E\u0282\u198D\v\u0282\x03\u0282\x03\u0282\x03\u0283\x03\u0283" +
        "\x03\u0283\x03\u0283\x03\u0284\x03\u0284\x03\u0284\x03\u0284\x03\u0284" +
        "\x03\u0284\x03\u0284\x03\u0284\x03\u0284\x03\u0284\x03\u0284\x07\u0284" +
        "\u19A0\n\u0284\f\u0284\x0E\u0284\u19A3\v\u0284\x03\u0284\x03\u0284\x03" +
        "\u0285\x03\u0285\x03\u0285\x05\u0285\u19AA\n\u0285\x03\u0285\x03\u0285" +
        "\x03\u0286\x03\u0286\x03\u0286\x03\u0286\x03\u0286\x03\u0286\x03\u0286" +
        "\x03\u0286\x03\u0286\x03\u0286\x03\u0286\x07\u0286\u19B9\n\u0286\f\u0286" +
        "\x0E\u0286\u19BC\v\u0286\x03\u0286\x03\u0286\x03\u0287\x03\u0287\x03\u0287" +
        "\x03\u0287\x03\u0288\x03\u0288\x03\u0288\x03\u0288\x03\u0288\x03\u0288" +
        "\x03\u0288\x03\u0288\x03\u0288\x03\u0288\x03\u0288\x07\u0288\u19CF\n\u0288" +
        "\f\u0288\x0E\u0288\u19D2\v\u0288\x03\u0288\x03\u0288\x03\u0289\x03\u0289" +
        "\x03\u0289\x05\u0289\u19D9\n\u0289\x03\u0289\x03\u0289\x03\u028A\x03\u028A" +
        "\x03\u028A\x03\u028A\x03\u028A\x07\u028A\u19E2\n\u028A\f\u028A\x0E\u028A" +
        "\u19E5\v\u028A\x03\u028A\x03\u028A\x03\u028B\x03\u028B\x03\u028B\x03\u028B" +
        "\x03\u028B\x03\u028B\x03\u028B\x03\u028B\x03\u028B\x07\u028B\u19F2\n\u028B" +
        "\f\u028B\x0E\u028B\u19F5\v\u028B\x03\u028B\x03\u028B\x03\u028C\x03\u028C" +
        "\x03\u028C\x05\u028C\u19FC\n\u028C\x03\u028C\x03\u028C\x03\u028D\x03\u028D" +
        "\x03\u028D\x03\u028D\x03\u028D\x03\u028D\x03\u028D\x03\u028E\x03\u028E" +
        "\x05\u028E\u1A09\n\u028E\x03\u028E\x03\u028E\x03\u028F\x03\u028F\x03\u028F" +
        "\x07\u028F\u1A10\n\u028F\f\u028F\x0E\u028F\u1A13\v\u028F\x03\u028F\x03" +
        "\u028F\x03\u0290\x03\u0290\x03\u0290\x03\u0290\x03\u0291\x03\u0291\x03" +
        "\u0291\x03\u0291\x03\u0292\x03\u0292\x03\u0292\x03\u0293\x03\u0293\x03" +
        "\u0293\x03\u0293\x03\u0293\x03\u0293\x03\u0293\x03\u0293\x03\u0293\x03" +
        "\u0293\x03\u0293\x03\u0293\x03\u0293\x03\u0293\x07\u0293\u1A30\n\u0293" +
        "\f\u0293\x0E\u0293\u1A33\v\u0293\x03\u0293\x03\u0293\x03\u0294\x03\u0294" +
        "\x05\u0294\u1A39\n\u0294\x03\u0294\x03\u0294\x03\u0295\x03\u0295\x05\u0295" +
        "\u1A3F\n\u0295\x03\u0295\x03\u0295\x03\u0296\x03\u0296\x03\u0296\x07\u0296" +
        "\u1A46\n\u0296\f\u0296\x0E\u0296\u1A49\v\u0296\x03\u0296\x03\u0296\x03" +
        "\u0297\x03\u0297\x03\u0297\x03\u0297\x03\u0298\x03\u0298\x05\u0298\u1A53" +
        "\n\u0298\x03\u0298\x03\u0298\x03\u0299\x03\u0299\x05\u0299\u1A59\n\u0299" +
        "\x03\u0299\x03\u0299\x03\u029A\x03\u029A\x03\u029A\x03\u029B\x03\u029B" +
        "\x03\u029B\x03\u029C\x03\u029C\x03\u029C\x03\u029D\x03\u029D\x03\u029D" +
        "\x03\u029E\x03\u029E\x03\u029E\x05\u029E\u1A6C\n\u029E\x03\u029E\x03\u029E" +
        "\x03\u029F\x03\u029F\x03\u029F\x03\u02A0\x03\u02A0\x03\u02A0\x03\u02A0" +
        "\x03\u02A0\x03\u02A0\x03\u02A1\x03\u02A1\x03\u02A1\x03\u02A1\x03\u02A1" +
        "\x03\u02A1\x03\u02A1\x03\u02A1\x03\u02A1\x03\u02A1\x07\u02A1\u1A83\n\u02A1" +
        "\f\u02A1\x0E\u02A1\u1A86\v\u02A1\x03\u02A1\x03\u02A1\x03\u02A2\x03\u02A2" +
        "\x03\u02A2\x03\u02A2\x03\u02A3\x03\u02A3\x03\u02A3\x03\u02A3\x03\u02A3" +
        "\x03\u02A3\x03\u02A3\x03\u02A3\x03\u02A3\x03\u02A3\x07\u02A3\u1A98\n\u02A3" +
        "\f\u02A3\x0E\u02A3\u1A9B\v\u02A3\x03\u02A3\x03\u02A3\x03\u02A4\x03\u02A4" +
        "\x03\u02A4\x05\u02A4\u1AA2\n\u02A4\x03\u02A4\x03\u02A4\x03\u02A5\x03\u02A5" +
        "\x03\u02A5\x03\u02A5\x03\u02A5\x03\u02A5\x03\u02A5\x03\u02A5\x03\u02A5" +
        "\x07\u02A5\u1AAF\n\u02A5\f\u02A5\x0E\u02A5\u1AB2\v\u02A5\x03\u02A5\x03" +
        "\u02A5\x03\u02A6\x03\u02A6\x07\u02A6\u1AB8\n\u02A6\f\u02A6\x0E\u02A6\u1ABB" +
        "\v\u02A6\x03\u02A6\x03\u02A6\x03\u02A7\x03\u02A7\x03\u02A7\x03\u02A7\x03" +
        "\u02A7\x03\u02A7\x07\u02A7\u1AC5\n\u02A7\f\u02A7\x0E\u02A7\u1AC8\v\u02A7" +
        "\x03\u02A7\x03\u02A7\x03\u02A8\x03\u02A8\x03\u02A8\x03\u02A8\x03\u02A8" +
        "\x03\u02A8\x03\u02A8\x03\u02A8\x07\u02A8\u1AD4\n\u02A8\f\u02A8\x0E\u02A8" +
        "\u1AD7\v\u02A8\x03\u02A8\x03\u02A8\x03\u02A9\x03\u02A9\x07\u02A9\u1ADD" +
        "\n\u02A9\f\u02A9\x0E\u02A9\u1AE0\v\u02A9\x03\u02A9\x03\u02A9\x03\u02AA" +
        "\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA" +
        "\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA" +
        "\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x07\u02AA" +
        "\u1AF9\n\u02AA\f\u02AA\x0E\u02AA\u1AFC\v\u02AA\x03\u02AA\x03\u02AA\x03" +
        "\u02AB\x03\u02AB\x03\u02AB\x03\u02AB\x03\u02AB\x07\u02AB\u1B05\n\u02AB" +
        "\f\u02AB\x0E\u02AB\u1B08\v\u02AB\x03\u02AB\x03\u02AB\x03\u02AC\x03\u02AC" +
        "\x03\u02AC\x03\u02AC\x03\u02AC\x03\u02AC\x03\u02AC\x03\u02AC\x03\u02AC" +
        "\x07\u02AC\u1B15\n\u02AC\f\u02AC\x0E\u02AC\u1B18\v\u02AC\x03\u02AC\x03" +
        "\u02AC\x03\u02AD\x03\u02AD\x03\u02AD\x05\u02AD\u1B1F\n\u02AD\x03\u02AD" +
        "\x03\u02AD\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE" +
        "\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE\x07\u02AE" +
        "\u1B2F\n\u02AE\f\u02AE\x0E\u02AE\u1B32\v\u02AE\x03\u02AE\x03\u02AE\x03" +
        "\u02AF\x03\u02AF\x03\u02AF\x03\u02AF\x03\u02AF\x03\u02AF\x03\u02AF\x03" +
        "\u02AF\x07\u02AF\u1B3E\n\u02AF\f\u02AF\x0E\u02AF\u1B41\v\u02AF\x03\u02AF" +
        "\x03\u02AF\x03\u02B0\x03\u02B0\x03\u02B0\x03\u02B0\x03\u02B0\x03\u02B1" +
        "\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1" +
        "\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x07\u02B1" +
        "\u1B58\n\u02B1\f\u02B1\x0E\u02B1\u1B5B\v\u02B1\x03\u02B1\x03\u02B1\x03" +
        "\u02B2\x03\u02B2\x03\u02B2\x05\u02B2\u1B62\n\u02B2\x03\u02B2\x03\u02B2" +
        "\x03\u02B3\x03\u02B3\x03\u02B3\x03\u02B3\x03\u02B4\x03\u02B4\x03\u02B4" +
        "\x03\u02B4\x03\u02B4\x03\u02B4\x03\u02B4\x03\u02B4\x07\u02B4\u1B72\n\u02B4" +
        "\f\u02B4\x0E\u02B4\u1B75\v\u02B4\x03\u02B4\x03\u02B4\x03\u02B5\x03\u02B5" +
        "\x03\u02B5\x03\u02B5\x03\u02B5\x03\u02B5\x03\u02B5\x07\u02B5\u1B80\n\u02B5" +
        "\f\u02B5\x0E\u02B5\u1B83\v\u02B5\x03\u02B5\x03\u02B5\x03\u02B6\x03\u02B6" +
        "\x03\u02B6\x03\u02B6\x03\u02B6\x03\u02B6\x03\u02B6\x07\u02B6\u1B8E\n\u02B6" +
        "\f\u02B6\x0E\u02B6\u1B91\v\u02B6\x03\u02B6\x03\u02B6\x03\u02B7\x03\u02B7" +
        "\x03\u02B7\x03\u02B7\x03\u02B7\x03\u02B7\x03\u02B7\x03\u02B7\x07\u02B7" +
        "\u1B9D\n\u02B7\f\u02B7\x0E\u02B7\u1BA0\v\u02B7\x03\u02B7\x03\u02B7\x03" +
        "\u02B8\x03\u02B8\x03\u02B8\x03\u02B8\x05\u02B8\u1BA8\n\u02B8\x03\u02B8" +
        "\x03\u02B8\x03\u02B9\x03\u02B9\x03\u02B9\x05\u02B9\u1BAF\n\u02B9\x03\u02B9" +
        "\x03\u02B9\x03\u02BA\x03\u02BA\x03\u02BA\x03\u02BA\x03\u02BB\x03\u02BB" +
        "\x03\u02BC\x03\u02BC\x03\u02BD\x03\u02BD\x03\u02BE\x03\u02BE\x03\u02BE" +
        "\x03\u02BE\x03\u02BE\x03\u02BE\x07\u02BE\u1BC3\n\u02BE\f\u02BE\x0E\u02BE" +
        "\u1BC6\v\u02BE\x03\u02BE\x03\u02BE\x03\u02BF\x03\u02BF\x03\u02C0\x03\u02C0" +
        "\x03\u02C0\x03\u02C0\x03\u02C1\x03\u02C1\x03\u02C1\x03\u02C1\x05\u02C1" +
        "\u1BD4\n\u02C1\x03\u02C1\x03\u02C1\x03\u02C2\x03\u02C2\x03\u02C2\x03\u02C2" +
        "\x03\u02C3\x03\u02C3\x03\u02C3\x03\u02C3\x03\u02C4\x03\u02C4\x03\u02C4" +
        "\x03\u02C4\x03\u02C5\x03\u02C5\x03\u02C5\x03\u02C5\x03\u02C6\x03\u02C6" +
        "\x03\u02C6\x03\u02C6\x03\u02C7\x03\u02C7\x03\u02C7\x03\u02C7\x03\u02C8" +
        "\x03\u02C8\x03\u02C8\x03\u02C8\x03\u02C9\x03\u02C9\x03\u02C9\x03\u02C9" +
        "\x03\u02CA\x03\u02CA\x03\u02CA\x03\u02CA\x03\u02CB\x03\u02CB\x03\u02CB" +
        "\x03\u02CB\x03\u02CB\x03\u02CB\x03\u02CB\x07\u02CB\u1C03\n\u02CB\f\u02CB" +
        "\x0E\u02CB\u1C06\v\u02CB\x03\u02CB\x03\u02CB\x03\u02CC\x03";
    EDIF300Parser._serializedATNSegment3 = "\u02CC\x03\u02CC\x05\u02CC\u1C0D\n\u02CC\x03\u02CC\x03\u02CC\x03\u02CC" +
        "\x07\u02CC\u1C12\n\u02CC\f\u02CC\x0E\u02CC\u1C15\v\u02CC\x03\u02CC\x03" +
        "\u02CC\x03\u02CD\x03\u02CD\x03\u02CD\x03\u02CD\x03\u02CD\x07\u02CD\u1C1E" +
        "\n\u02CD\f\u02CD\x0E\u02CD\u1C21\v\u02CD\x03\u02CD\x03\u02CD\x03\u02CE" +
        "\x03\u02CE\x03\u02CE\x03\u02CE\x03\u02CE\x07\u02CE\u1C2A\n\u02CE\f\u02CE" +
        "\x0E\u02CE\u1C2D\v\u02CE\x03\u02CE\x03\u02CE\x03\u02CF\x03\u02CF\x03\u02CF" +
        "\x03\u02CF\x03\u02D0\x03\u02D0\x03\u02D1\x03\u02D1\x03\u02D2\x03\u02D2" +
        "\x03\u02D2\x03\u02D2\x03\u02D3\x03\u02D3\x03\u02D3\x03\u02D4\x03\u02D4" +
        "\x03\u02D4\x03\u02D4\x03\u02D4\x07\u02D4\u1C45\n\u02D4\f\u02D4\x0E\u02D4" +
        "\u1C48\v\u02D4\x03\u02D4\x03\u02D4\x03\u02D5\x03\u02D5\x03\u02D5\x07\u02D5" +
        "\u1C4F\n\u02D5\f\u02D5\x0E\u02D5\u1C52\v\u02D5\x03\u02D5\x03\u02D5\x03" +
        "\u02D6\x03\u02D6\x03\u02D6\x03\u02D6\x03\u02D6\x03\u02D7\x03\u02D7\x03" +
        "\u02D7\x03\u02D7\x03\u02D8\x03\u02D8\x03\u02D9\x03\u02D9\x03\u02DA\x03" +
        "\u02DA\x03\u02DA\x03\u02DA\x03\u02DB\x03\u02DB\x03\u02DB\x03\u02DB\x03" +
        "\u02DC\x03\u02DC\x03\u02DD\x03\u02DD\x03\u02DE\x03\u02DE\x03\u02DE\x03" +
        "\u02DE\x03\u02DE\x07\u02DE\u1C74\n\u02DE\f\u02DE\x0E\u02DE\u1C77\v\u02DE" +
        "\x03\u02DE\x03\u02DE\x03\u02DF\x03\u02DF\x03\u02DF\x03\u02DF\x03\u02E0" +
        "\x03\u02E0\x03\u02E0\x03\u02E0\x03\u02E1\x03\u02E1\x07\u02E1\u1C85\n\u02E1" +
        "\f\u02E1\x0E\u02E1\u1C88\v\u02E1\x03\u02E1\x03\u02E1\x03\u02E2\x03\u02E2" +
        "\x03\u02E2\x03\u02E2\x03\u02E2\x03\u02E3\x03\u02E3\x03\u02E3\x03\u02E3" +
        "\x03\u02E4\x03\u02E4\x03\u02E4\x03\u02E4\x03\u02E4\x03\u02E5\x03\u02E5" +
        "\x03\u02E5\x03\u02E5\x03\u02E5\x03\u02E5\x03\u02E5\x03\u02E5\x05\u02E5" +
        "\u1CA2\n\u02E5\x03\u02E6\x03\u02E6\x03\u02E6\x03\u02E6\x03\u02E7\x03\u02E7" +
        "\x03\u02E7\x03\u02E7\x07\u02E7\u1CAC\n\u02E7\f\u02E7\x0E\u02E7\u1CAF\v" +
        "\u02E7\x03\u02E7\x03\u02E7\x03\u02E8\x03\u02E8\x03\u02E8\x03\u02E8\x03" +
        "\u02E8\x03\u02E9\x03\u02E9\x03\u02E9\x03\u02E9\x03\u02EA\x03\u02EA\x03" +
        "\u02EA\x03\u02EA\x03\u02EA\x03\u02EB\x03\u02EB\x03\u02EB\x03\u02EB\x03" +
        "\u02EB\x03\u02EC\x03\u02EC\x03\u02ED\x03\u02ED\x03\u02ED\x03\u02ED\x03" +
        "\u02EE\x03\u02EE\x03\u02EF\x03\u02EF\x03\u02EF\x03\u02EF\x03\u02EF\x03" +
        "\u02EF\x03\u02F0\x03\u02F0\x03\u02F1\x03\u02F1\x03\u02F2\x03\u02F2\x03" +
        "\u02F3\x03\u02F3\x03\u02F3\x03\u02F3\x03\u02F3\x07\u02F3\u1CDF\n\u02F3" +
        "\f\u02F3\x0E\u02F3\u1CE2\v\u02F3\x03\u02F3\x03\u02F3\x03\u02F4\x03\u02F4" +
        "\x03\u02F4\x03\u02F4\x07\u02F4\u1CEA\n\u02F4\f\u02F4\x0E\u02F4\u1CED\v" +
        "\u02F4\x03\u02F4\x05\u02F4\u1CF0\n\u02F4\x03\u02F4\x03\u02F4\x07\u02F4" +
        "\u1CF4\n\u02F4\f\u02F4\x0E\u02F4\u1CF7\v\u02F4\x03\u02F4\x03\u02F4\x03" +
        "\u02F5\x03\u02F5\x03\u02F6\x03\u02F6\x03\u02F7\x03\u02F7\x03\u02F7\x03" +
        "\u02F7\x03\u02F7\x03\u02F7\x07\u02F7\u1D05\n\u02F7\f\u02F7\x0E\u02F7\u1D08" +
        "\v\u02F7\x03\u02F7\x03\u02F7\x03\u02F8\x03\u02F8\x03\u02F8\x03\u02F8\x03" +
        "\u02F9\x03\u02F9\x03\u02FA\x03\u02FA\x03\u02FA\x03\u02FA\x03\u02FA\x03" +
        "\u02FA\x03\u02FB\x03\u02FB\x03\u02FC\x03\u02FC\x03\u02FC\x05\u02FC\u1D1D" +
        "\n\u02FC\x03\u02FC\x03\u02FC\x03\u02FC\x05\u02FC\u1D22\n\u02FC\x03\u02FC" +
        "\x03\u02FC\x03\u02FD\x03\u02FD\x03\u02FD\x03\u02FD\x03\u02FD\x03\u02FE" +
        "\x03\u02FE\x03\u02FF\x03\u02FF\x03\u02FF\x03\u02FF\x03\u02FF\x03\u02FF" +
        "\x03\u02FF\x03\u02FF\x07\u02FF\u1D35\n\u02FF\f\u02FF\x0E\u02FF\u1D38\v" +
        "\u02FF\x03\u02FF\x03\u02FF\x03\u0300\x03\u0300\x03\u0300\x07\u0300\u1D3F" +
        "\n\u0300\f\u0300\x0E\u0300\u1D42\v\u0300\x03\u0300\x03\u0300\x03\u0301" +
        "\x03\u0301\x03\u0302\x03\u0302\x03\u0303\x03\u0303\x03\u0304\x03\u0304" +
        "\x03\u0304\x03\u0305\x03\u0305\x03\u0305\x03\u0305\x03\u0306\x03\u0306" +
        "\x03\u0306\x03\u0306\x05\u0306\u1D57\n\u0306\x03\u0306\x03\u0306\x03\u0307" +
        "\x03\u0307\x03\u0307\x03\u0307\x03\u0307\x07\u0307\u1D60\n\u0307\f\u0307" +
        "\x0E\u0307\u1D63\v\u0307\x03\u0307\x03\u0307\x03\u0308\x03\u0308\x03\u0308" +
        "\x03\u0308\x03\u0308\x03\u0309\x03\u0309\x03\u0309\x03\u030A\x03\u030A" +
        "\x03\u030A\x03\u030B\x03\u030B\x03\u030B\x03\u030B\x03\u030B\x03\u030B" +
        "\x05\u030B\u1D78\n\u030B\x03\u030C\x03\u030C\x03\u030C\x05\u030C\u1D7D" +
        "\n\u030C\x03\u030C\x03\u030C\x03\u030D\x03\u030D\x03\u030D\x03\u030D\x03" +
        "\u030E\x03\u030E\x03\u030E\x03\u030F\x03\u030F\x03\u030F\x03\u0310\x03" +
        "\u0310\x03\u0310\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03" +
        "\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03" +
        "\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03" +
        "\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x07\u0311\u1DA7" +
        "\n\u0311\f\u0311\x0E\u0311\u1DAA\v\u0311\x03\u0311\x03\u0311\x03\u0312" +
        "\x03\u0312\x07\u0312\u1DB0\n\u0312\f\u0312\x0E\u0312\u1DB3\v\u0312\x03" +
        "\u0312\x03\u0312\x03\u0313\x03\u0313\x03\u0314\x03\u0314\x03\u0315\x03" +
        "\u0315\x03\u0316\x03\u0316\x03\u0316\x03\u0316\x03\u0317\x03\u0317\x03" +
        "\u0317\x03\u0318\x03\u0318\x03\u0318\x03\u0319\x03\u0319\x03\u0319\x03" +
        "\u031A\x03\u031A\x03\u031A\x03\u031B\x03\u031B\x03\u031B\x03\u031C\x03" +
        "\u031C\x07\u031C\u1DD2\n\u031C\f\u031C\x0E\u031C\u1DD5\v\u031C\x03\u031C" +
        "\x03\u031C\x03\u031D\x03\u031D\x03\u031D\x03\u031D\x03\u031D\x03\u031D" +
        "\x07\u031D\u1DDF\n\u031D\f\u031D\x0E\u031D\u1DE2\v\u031D\x03\u031D\x03" +
        "\u031D\x03\u031E\x03\u031E\x03\u031F\x03\u031F\x03\u031F\x03\u031F\x03" +
        "\u0320\x03\u0320\x03\u0320\x03\u0320\x03\u0320\x03\u0320\x05\u0320\u1DF2" +
        "\n\u0320\x03\u0320\x03\u0320\x03\u0321\x03\u0321\x03\u0321\x03\u0321\x03" +
        "\u0321\x03\u0321\x03\u0321\x07\u0321\u1DFD\n\u0321\f\u0321\x0E\u0321\u1E00" +
        "\v\u0321\x03\u0321\x03\u0321\x03\u0322\x03\u0322\x03\u0322\x03\u0322\x03" +
        "\u0322\x07\u0322\u1E09\n\u0322\f\u0322\x0E\u0322\u1E0C\v\u0322\x03\u0322" +
        "\x03\u0322\x03\u0323\x03\u0323\x03\u0323\x03\u0323\x03\u0324\x03\u0324" +
        "\x03\u0325\x03\u0325\x03\u0326\x03\u0326\x03\u0326\x03\u0326\x03\u0327" +
        "\x03\u0327\x03\u0327\x03\u0327\x03\u0328\x03\u0328\x03\u0329\x03\u0329" +
        "\x03\u0329\x07\u0329\u1E25\n\u0329\f\u0329\x0E\u0329\u1E28\v\u0329\x03" +
        "\u0329\x03\u0329\x03\u032A\x03\u032A\x03\u032B\x03\u032B\x03\u032B\x03" +
        "\u032B\x07\u032B\u1E32\n\u032B\f\u032B\x0E\u032B\u1E35\v\u032B\x03\u032B" +
        "\x03\u032B\x03\u032C\x03\u032C\x03\u032C\x03\u032C\x05\u032C\u1E3D\n\u032C" +
        "\x03\u032C\x03\u032C\x03\u032C\x07\u032C\u1E42\n\u032C\f\u032C\x0E\u032C" +
        "\u1E45\v\u032C\x03\u032C\x03\u032C\x03\u032D\x03\u032D\x03\u032D\x05\u032D" +
        "\u1E4C\n\u032D\x03\u032D\x03\u032D\x03\u032E\x03\u032E\x03\u032E\x03\u032E" +
        "\x03\u032F\x03\u032F\x03\u032F\x03\u032F\x03\u0330\x03\u0330\x03\u0330" +
        "\x03\u0330\x03\u0331\x03\u0331\x03\u0332\x03\u0332\x03\u0332\x03\u0332" +
        "\x03\u0333\x03\u0333\x03\u0333\x03\u0333\x03\u0334\x03\u0334\x03\u0334" +
        "\x07\u0334\u1E69\n\u0334\f\u0334\x0E\u0334\u1E6C\v\u0334\x03\u0334\x03" +
        "\u0334\x03\u0335\x03\u0335\x03\u0335\x03\u0335\x03\u0336\x03\u0336\x03" +
        "\u0336\x03\u0337\x03\u0337\x03\u0337\x03\u0338\x03\u0338\x03\u0338\x03" +
        "\u0338\x03\u0338\x03\u0338\x03\u0338\x07\u0338\u1E81\n\u0338\f\u0338\x0E" +
        "\u0338\u1E84\v\u0338\x03\u0338\x03\u0338\x03\u0339\x03\u0339\x03\u033A" +
        "\x03\u033A\x03\u033B\x03\u033B\x07\u033B\u1E8E\n\u033B\f\u033B\x0E\u033B" +
        "\u1E91\v\u033B\x03\u033B\x03\u033B\x03\u033C\x03\u033C\x03\u033D\x03\u033D" +
        "\x07\u033D\u1E99\n\u033D\f\u033D\x0E\u033D\u1E9C\v\u033D\x03\u033D\x03" +
        "\u033D\x03\u033E\x03\u033E\x03\u033F\x03\u033F\x03\u0340\x03\u0340\x03" +
        "\u0341\x03\u0341\x03\u0341\x02\x02\x02\u0342\x02\x02\x04\x02\x06\x02\b" +
        "\x02\n\x02\f\x02\x0E\x02\x10\x02\x12\x02\x14\x02\x16\x02\x18\x02\x1A\x02" +
        "\x1C\x02\x1E\x02 \x02\"\x02$\x02&\x02(\x02*\x02,\x02.\x020\x022\x024\x02" +
        "6\x028\x02:\x02<\x02>\x02@\x02B\x02D\x02F\x02H\x02J\x02L\x02N\x02P\x02" +
        "R\x02T\x02V\x02X\x02Z\x02\\\x02^\x02`\x02b\x02d\x02f\x02h\x02j\x02l\x02" +
        "n\x02p\x02r\x02t\x02v\x02x\x02z\x02|\x02~\x02\x80\x02\x82\x02\x84\x02" +
        "\x86\x02\x88\x02\x8A\x02\x8C\x02\x8E\x02\x90\x02\x92\x02\x94\x02\x96\x02" +
        "\x98\x02\x9A\x02\x9C\x02\x9E\x02\xA0\x02\xA2\x02\xA4\x02\xA6\x02\xA8\x02" +
        "\xAA\x02\xAC\x02\xAE\x02\xB0\x02\xB2\x02\xB4\x02\xB6\x02\xB8\x02\xBA\x02" +
        "\xBC\x02\xBE\x02\xC0\x02\xC2\x02\xC4\x02\xC6\x02\xC8\x02\xCA\x02\xCC\x02" +
        "\xCE\x02\xD0\x02\xD2\x02\xD4\x02\xD6\x02\xD8\x02\xDA\x02\xDC\x02\xDE\x02" +
        "\xE0\x02\xE2\x02\xE4\x02\xE6\x02\xE8\x02\xEA\x02\xEC\x02\xEE\x02\xF0\x02" +
        "\xF2\x02\xF4\x02\xF6\x02\xF8\x02\xFA\x02\xFC\x02\xFE\x02\u0100\x02\u0102" +
        "\x02\u0104\x02\u0106\x02\u0108\x02\u010A\x02\u010C\x02\u010E\x02\u0110" +
        "\x02\u0112\x02\u0114\x02\u0116\x02\u0118\x02\u011A\x02\u011C\x02\u011E" +
        "\x02\u0120\x02\u0122\x02\u0124\x02\u0126\x02\u0128\x02\u012A\x02\u012C" +
        "\x02\u012E\x02\u0130\x02\u0132\x02\u0134\x02\u0136\x02\u0138\x02\u013A" +
        "\x02\u013C\x02\u013E\x02\u0140\x02\u0142\x02\u0144\x02\u0146\x02\u0148" +
        "\x02\u014A\x02\u014C\x02\u014E\x02\u0150\x02\u0152\x02\u0154\x02\u0156" +
        "\x02\u0158\x02\u015A\x02\u015C\x02\u015E\x02\u0160\x02\u0162\x02\u0164" +
        "\x02\u0166\x02\u0168\x02\u016A\x02\u016C\x02\u016E\x02\u0170\x02\u0172" +
        "\x02\u0174\x02\u0176\x02\u0178\x02\u017A\x02\u017C\x02\u017E\x02\u0180" +
        "\x02\u0182\x02\u0184\x02\u0186\x02\u0188\x02\u018A\x02\u018C\x02\u018E" +
        "\x02\u0190\x02\u0192\x02\u0194\x02\u0196\x02\u0198\x02\u019A\x02\u019C" +
        "\x02\u019E\x02\u01A0\x02\u01A2\x02\u01A4\x02\u01A6\x02\u01A8\x02\u01AA" +
        "\x02\u01AC\x02\u01AE\x02\u01B0\x02\u01B2\x02\u01B4\x02\u01B6\x02\u01B8" +
        "\x02\u01BA\x02\u01BC\x02\u01BE\x02\u01C0\x02\u01C2\x02\u01C4\x02\u01C6" +
        "\x02\u01C8\x02\u01CA\x02\u01CC\x02\u01CE\x02\u01D0\x02\u01D2\x02\u01D4" +
        "\x02\u01D6\x02\u01D8\x02\u01DA\x02\u01DC\x02\u01DE\x02\u01E0\x02\u01E2" +
        "\x02\u01E4\x02\u01E6\x02\u01E8\x02\u01EA\x02\u01EC\x02\u01EE\x02\u01F0" +
        "\x02\u01F2\x02\u01F4\x02\u01F6\x02\u01F8\x02\u01FA\x02\u01FC\x02\u01FE" +
        "\x02\u0200\x02\u0202\x02\u0204\x02\u0206\x02\u0208\x02\u020A\x02\u020C" +
        "\x02\u020E\x02\u0210\x02\u0212\x02\u0214\x02\u0216\x02\u0218\x02\u021A" +
        "\x02\u021C\x02\u021E\x02\u0220\x02\u0222\x02\u0224\x02\u0226\x02\u0228" +
        "\x02\u022A\x02\u022C\x02\u022E\x02\u0230\x02\u0232\x02\u0234\x02\u0236" +
        "\x02\u0238\x02\u023A\x02\u023C\x02\u023E\x02\u0240\x02\u0242\x02\u0244" +
        "\x02\u0246\x02\u0248\x02\u024A\x02\u024C\x02\u024E\x02\u0250\x02\u0252" +
        "\x02\u0254\x02\u0256\x02\u0258\x02\u025A\x02\u025C\x02\u025E\x02\u0260" +
        "\x02\u0262\x02\u0264\x02\u0266\x02\u0268\x02\u026A\x02\u026C\x02\u026E" +
        "\x02\u0270\x02\u0272\x02\u0274\x02\u0276\x02\u0278\x02\u027A\x02\u027C" +
        "\x02\u027E\x02\u0280\x02\u0282\x02\u0284\x02\u0286\x02\u0288\x02\u028A" +
        "\x02\u028C\x02\u028E\x02\u0290\x02\u0292\x02\u0294\x02\u0296\x02\u0298" +
        "\x02\u029A\x02\u029C\x02\u029E\x02\u02A0\x02\u02A2\x02\u02A4\x02\u02A6" +
        "\x02\u02A8\x02\u02AA\x02\u02AC\x02\u02AE\x02\u02B0\x02\u02B2\x02\u02B4" +
        "\x02\u02B6\x02\u02B8\x02\u02BA\x02\u02BC\x02\u02BE\x02\u02C0\x02\u02C2" +
        "\x02\u02C4\x02\u02C6\x02\u02C8\x02\u02CA\x02\u02CC\x02\u02CE\x02\u02D0" +
        "\x02\u02D2\x02\u02D4\x02\u02D6\x02\u02D8\x02\u02DA\x02\u02DC\x02\u02DE" +
        "\x02\u02E0\x02\u02E2\x02\u02E4\x02\u02E6\x02\u02E8\x02\u02EA\x02\u02EC" +
        "\x02\u02EE\x02\u02F0\x02\u02F2\x02\u02F4\x02\u02F6\x02\u02F8\x02\u02FA" +
        "\x02\u02FC\x02\u02FE\x02\u0300\x02\u0302\x02\u0304\x02\u0306\x02\u0308" +
        "\x02\u030A\x02\u030C\x02\u030E\x02\u0310\x02\u0312\x02\u0314\x02\u0316" +
        "\x02\u0318\x02\u031A\x02\u031C\x02\u031E\x02\u0320\x02\u0322\x02\u0324" +
        "\x02\u0326\x02\u0328\x02\u032A\x02\u032C\x02\u032E\x02\u0330\x02\u0332" +
        "\x02\u0334\x02\u0336\x02\u0338\x02\u033A\x02\u033C\x02\u033E\x02\u0340" +
        "\x02\u0342\x02\u0344\x02\u0346\x02\u0348\x02\u034A\x02\u034C\x02\u034E" +
        "\x02\u0350\x02\u0352\x02\u0354\x02\u0356\x02\u0358\x02\u035A\x02\u035C" +
        "\x02\u035E\x02\u0360\x02\u0362\x02\u0364\x02\u0366\x02\u0368\x02\u036A" +
        "\x02\u036C\x02\u036E\x02\u0370\x02\u0372\x02\u0374\x02\u0376\x02\u0378" +
        "\x02\u037A\x02\u037C\x02\u037E\x02\u0380\x02\u0382\x02\u0384\x02\u0386" +
        "\x02\u0388\x02\u038A\x02\u038C\x02\u038E\x02\u0390\x02\u0392\x02\u0394" +
        "\x02\u0396\x02\u0398\x02\u039A\x02\u039C\x02\u039E\x02\u03A0\x02\u03A2" +
        "\x02\u03A4\x02\u03A6\x02\u03A8\x02\u03AA\x02\u03AC\x02\u03AE\x02\u03B0" +
        "\x02\u03B2\x02\u03B4\x02\u03B6\x02\u03B8\x02\u03BA\x02\u03BC\x02\u03BE" +
        "\x02\u03C0\x02\u03C2\x02\u03C4\x02\u03C6\x02\u03C8\x02\u03CA\x02\u03CC" +
        "\x02\u03CE\x02\u03D0\x02\u03D2\x02\u03D4\x02\u03D6\x02\u03D8\x02\u03DA" +
        "\x02\u03DC\x02\u03DE\x02\u03E0\x02\u03E2\x02\u03E4\x02\u03E6\x02\u03E8" +
        "\x02\u03EA\x02\u03EC\x02\u03EE\x02\u03F0\x02\u03F2\x02\u03F4\x02\u03F6" +
        "\x02\u03F8\x02\u03FA\x02\u03FC\x02\u03FE\x02\u0400\x02\u0402\x02\u0404" +
        "\x02\u0406\x02\u0408\x02\u040A\x02\u040C\x02\u040E\x02\u0410\x02\u0412" +
        "\x02\u0414\x02\u0416\x02\u0418\x02\u041A\x02\u041C\x02\u041E\x02\u0420" +
        "\x02\u0422\x02\u0424\x02\u0426\x02\u0428\x02\u042A\x02\u042C\x02\u042E" +
        "\x02\u0430\x02\u0432\x02\u0434\x02\u0436\x02\u0438\x02\u043A\x02\u043C" +
        "\x02\u043E\x02\u0440\x02\u0442\x02\u0444\x02\u0446\x02\u0448\x02\u044A" +
        "\x02\u044C\x02\u044E\x02\u0450\x02\u0452\x02\u0454\x02\u0456\x02\u0458" +
        "\x02\u045A\x02\u045C\x02\u045E\x02\u0460\x02\u0462\x02\u0464\x02\u0466" +
        "\x02\u0468\x02\u046A\x02\u046C\x02\u046E\x02\u0470\x02\u0472\x02\u0474" +
        "\x02\u0476\x02\u0478\x02\u047A\x02\u047C\x02\u047E\x02\u0480\x02\u0482" +
        "\x02\u0484\x02\u0486\x02\u0488\x02\u048A\x02\u048C\x02\u048E\x02\u0490" +
        "\x02\u0492\x02\u0494\x02\u0496\x02\u0498\x02\u049A\x02\u049C\x02\u049E" +
        "\x02\u04A0\x02\u04A2\x02\u04A4\x02\u04A6\x02\u04A8\x02\u04AA\x02\u04AC" +
        "\x02\u04AE\x02\u04B0\x02\u04B2\x02\u04B4\x02\u04B6\x02\u04B8\x02\u04BA" +
        "\x02\u04BC\x02\u04BE\x02\u04C0\x02\u04C2\x02\u04C4\x02\u04C6\x02\u04C8" +
        "\x02\u04CA\x02\u04CC\x02\u04CE\x02\u04D0\x02\u04D2\x02\u04D4\x02\u04D6" +
        "\x02\u04D8\x02\u04DA\x02\u04DC\x02\u04DE\x02\u04E0\x02\u04E2\x02\u04E4" +
        "\x02\u04E6\x02\u04E8\x02\u04EA\x02\u04EC\x02\u04EE\x02\u04F0\x02\u04F2" +
        "\x02\u04F4\x02\u04F6\x02\u04F8\x02\u04FA\x02\u04FC\x02\u04FE\x02\u0500" +
        "\x02\u0502\x02\u0504\x02\u0506\x02\u0508\x02\u050A\x02\u050C\x02\u050E" +
        "\x02\u0510\x02\u0512\x02\u0514\x02\u0516\x02\u0518\x02\u051A\x02\u051C" +
        "\x02\u051E\x02\u0520\x02\u0522\x02\u0524\x02\u0526\x02\u0528\x02\u052A" +
        "\x02\u052C\x02\u052E\x02\u0530\x02\u0532\x02\u0534\x02\u0536\x02\u0538" +
        "\x02\u053A\x02\u053C\x02\u053E\x02\u0540\x02\u0542\x02\u0544\x02\u0546" +
        "\x02\u0548\x02\u054A\x02\u054C\x02\u054E\x02\u0550\x02\u0552\x02\u0554" +
        "\x02\u0556\x02\u0558\x02\u055A\x02\u055C\x02\u055E\x02\u0560\x02\u0562" +
        "\x02\u0564\x02\u0566\x02\u0568\x02\u056A\x02\u056C\x02\u056E\x02\u0570" +
        "\x02\u0572\x02\u0574\x02\u0576\x02\u0578\x02\u057A\x02\u057C\x02\u057E" +
        "\x02\u0580\x02\u0582\x02\u0584\x02\u0586\x02\u0588\x02\u058A\x02\u058C" +
        "\x02\u058E\x02\u0590\x02\u0592\x02\u0594\x02\u0596\x02\u0598\x02\u059A" +
        "\x02\u059C\x02\u059E\x02\u05A0\x02\u05A2\x02\u05A4\x02\u05A6\x02\u05A8" +
        "\x02\u05AA\x02\u05AC\x02\u05AE\x02\u05B0\x02\u05B2\x02\u05B4\x02\u05B6" +
        "\x02\u05B8\x02\u05BA\x02\u05BC\x02\u05BE\x02\u05C0\x02\u05C2\x02\u05C4" +
        "\x02\u05C6\x02\u05C8\x02\u05CA\x02\u05CC\x02\u05CE\x02\u05D0\x02\u05D2" +
        "\x02\u05D4\x02\u05D6\x02\u05D8\x02\u05DA\x02\u05DC\x02\u05DE\x02\u05E0" +
        "\x02\u05E2\x02\u05E4\x02\u05E6\x02\u05E8\x02\u05EA\x02\u05EC\x02\u05EE" +
        "\x02\u05F0\x02\u05F2\x02\u05F4\x02\u05F6\x02\u05F8\x02\u05FA\x02\u05FC" +
        "\x02\u05FE\x02\u0600\x02\u0602\x02\u0604\x02\u0606\x02\u0608\x02\u060A" +
        "\x02\u060C\x02\u060E\x02\u0610\x02\u0612\x02\u0614\x02\u0616\x02\u0618" +
        "\x02\u061A\x02\u061C\x02\u061E\x02\u0620\x02\u0622\x02\u0624\x02\u0626" +
        "\x02\u0628\x02\u062A\x02\u062C\x02\u062E\x02\u0630\x02\u0632\x02\u0634" +
        "\x02\u0636\x02\u0638\x02\u063A\x02\u063C\x02\u063E\x02\u0640\x02\u0642" +
        "\x02\u0644\x02\u0646\x02\u0648\x02\u064A\x02\u064C\x02\u064E\x02\u0650" +
        "\x02\u0652\x02\u0654\x02\u0656\x02\u0658\x02\u065A\x02\u065C\x02\u065E" +
        "\x02\u0660\x02\u0662\x02\u0664\x02\u0666\x02\u0668\x02\u066A\x02\u066C" +
        "\x02\u066E\x02\u0670\x02\u0672\x02\u0674\x02\u0676\x02\u0678\x02\u067A" +
        "\x02\u067C\x02\u067E\x02\u0680\x02\x02\x02\x02\u2131\x02\u0682\x03\x02" +
        "\x02\x02\x04\u0684\x03\x02\x02\x02\x06\u0688\x03\x02\x02\x02\b\u068C\x03" +
        "\x02\x02\x02\n\u0694\x03\x02\x02\x02\f\u0696\x03\x02\x02\x02\x0E\u0698" +
        "\x03\x02\x02\x02\x10\u06A1\x03\x02\x02\x02\x12\u06A5\x03\x02\x02\x02\x14" +
        "\u06AE\x03\x02\x02\x02\x16\u06B0\x03\x02\x02\x02\x18\u06BA\x03\x02\x02" +
        "\x02\x1A\u06BE\x03\x02\x02\x02\x1C\u06C6\x03\x02\x02\x02\x1E\u06CC\x03" +
        "\x02\x02\x02 \u06CF\x03\x02\x02\x02\"\u06D7\x03\x02\x02\x02$\u06D9\x03" +
        "\x02\x02\x02&\u06DD\x03\x02\x02\x02(\u06E1\x03\x02\x02\x02*\u06E4\x03" +
        "\x02\x02\x02,\u06EC\x03\x02\x02\x02.\u06F8\x03\x02\x02\x020\u06FB\x03" +
        "\x02\x02\x022\u0701\x03\x02\x02\x024\u070D\x03\x02\x02\x026\u0714\x03" +
        "\x02\x02\x028\u0716\x03\x02\x02\x02:\u0719\x03\x02\x02\x02<\u071D\x03" +
        "\x02\x02\x02>\u0722\x03\x02\x02\x02@\u0731\x03\x02\x02\x02B\u0733\x03" +
        "\x02\x02\x02D\u0737\x03\x02\x02\x02F\u0742\x03\x02\x02\x02H\u0747\x03" +
        "\x02\x02\x02J\u074D\x03\x02\x02\x02L\u074F\x03\x02\x02\x02N\u0751\x03" +
        "\x02\x02\x02P\u0755\x03\x02\x02\x02R\u0759\x03\x02\x02\x02T\u0760\x03" +
        "\x02\x02\x02V\u0763\x03\x02\x02\x02X\u0766\x03\x02\x02\x02Z\u076A\x03" +
        "\x02\x02\x02\\\u076C\x03\x02\x02\x02^\u076F\x03\x02\x02\x02`\u077D\x03" +
        "\x02\x02\x02b\u0789\x03\x02\x02\x02d\u0793\x03\x02\x02\x02f\u079E\x03" +
        "\x02\x02\x02h\u07AA\x03\x02\x02\x02j\u07BA\x03\x02\x02\x02l\u07C1\x03" +
        "\x02\x02\x02n\u07C5\x03\x02\x02\x02p\u07C8\x03\x02\x02\x02r\u07D1\x03" +
        "\x02\x02\x02t\u07D5\x03\x02\x02\x02v\u07DD\x03\x02\x02\x02x\u07E2\x03" +
        "\x02\x02\x02z\u07F9\x03\x02\x02\x02|\u080E\x03\x02\x02\x02~\u0812\x03" +
        "\x02\x02\x02\x80\u0814\x03\x02\x02\x02\x82\u0816\x03\x02\x02\x02\x84\u081A" +
        "\x03\x02\x02\x02\x86\u0826\x03\x02\x02\x02\x88\u082A\x03\x02\x02\x02\x8A" +
        "\u082C\x03\x02\x02\x02\x8C\u082E\x03\x02\x02\x02\x8E\u0839\x03\x02\x02" +
        "\x02\x90\u0845\x03\x02\x02\x02\x92\u0855\x03\x02\x02\x02\x94\u085C\x03" +
        "\x02\x02\x02\x96\u0862\x03\x02\x02\x02\x98\u086B\x03\x02\x02\x02\x9A\u0879" +
        "\x03\x02\x02\x02\x9C\u087D\x03\x02\x02\x02\x9E\u0885\x03\x02\x02\x02\xA0" +
        "\u0891\x03\x02\x02\x02\xA2\u089C\x03\x02\x02\x02\xA4\u08A1\x03\x02\x02" +
        "\x02\xA6\u08AD\x03\x02\x02\x02\xA8\u08B6\x03\x02\x02\x02\xAA\u08BA\x03" +
        "\x02\x02\x02\xAC\u08C2\x03\x02\x02\x02\xAE\u08C6\x03\x02\x02\x02\xB0\u08CE" +
        "\x03\x02\x02\x02\xB2\u08DE\x03\x02\x02\x02\xB4\u08E8\x03\x02\x02\x02\xB6" +
        "\u08F8\x03\x02\x02\x02\xB8\u0909\x03\x02\x02\x02\xBA\u090B\x03\x02\x02" +
        "\x02\xBC\u091A\x03\x02\x02\x02\xBE\u0927\x03\x02\x02\x02\xC0\u092B\x03" +
        "\x02\x02\x02\xC2\u092D\x03\x02\x02\x02\xC4\u092F\x03\x02\x02\x02\xC6\u0933" +
        "\x03\x02\x02\x02\xC8\u0943\x03\x02\x02\x02\xCA\u0952\x03\x02\x02\x02\xCC" +
        "\u0960\x03\x02\x02\x02\xCE\u0964\x03\x02\x02\x02\xD0\u096D\x03\x02\x02" +
        "\x02\xD2\u0974\x03\x02\x02\x02\xD4\u0982\x03\x02\x02\x02\xD6\u0991\x03" +
        "\x02\x02\x02\xD8\u0993\x03\x02\x02\x02\xDA\u0995\x03\x02\x02\x02\xDC\u09A0" +
        "\x03\x02\x02\x02\xDE\u09A4\x03\x02\x02\x02\xE0\u09AC\x03\x02\x02\x02\xE2" +
        "\u09B6\x03\x02\x02\x02\xE4\u09BE\x03\x02\x02\x02\xE6\u09C6\x03\x02\x02" +
        "\x02\xE8\u09CA\x03\x02\x02\x02\xEA\u09CE\x03\x02\x02\x02\xEC\u09D7\x03" +
        "\x02\x02\x02\xEE\u09DB\x03\x02\x02\x02\xF0\u09DD\x03\x02\x02\x02\xF2\u09E7" +
        "\x03\x02\x02\x02\xF4\u09EE\x03\x02\x02\x02\xF6\u09F4\x03\x02\x02\x02\xF8" +
        "\u09F6\x03\x02\x02\x02\xFA\u09FA\x03\x02\x02\x02\xFC\u0A02\x03\x02\x02" +
        "\x02\xFE\u0A06\x03\x02\x02\x02\u0100\u0A0E\x03\x02\x02\x02\u0102\u0A12" +
        "\x03\x02\x02\x02\u0104\u0A1A\x03\x02\x02\x02\u0106\u0A1E\x03\x02\x02\x02" +
        "\u0108\u0A26\x03\x02\x02\x02\u010A\u0A2D\x03\x02\x02\x02\u010C\u0A31\x03" +
        "\x02\x02\x02\u010E\u0A35\x03\x02\x02\x02\u0110\u0A39\x03\x02\x02\x02\u0112" +
        "\u0A3D\x03\x02\x02\x02\u0114\u0A42\x03\x02\x02\x02\u0116\u0A44\x03\x02" +
        "\x02\x02\u0118\u0A4B\x03\x02\x02\x02\u011A\u0A59\x03\x02\x02\x02\u011C" +
        "\u0A5D\x03\x02\x02\x02\u011E\u0A65\x03\x02\x02\x02\u0120\u0A72\x03\x02" +
        "\x02\x02\u0122\u0A7C\x03\x02\x02\x02\u0124\u0A8A\x03\x02\x02\x02\u0126" +
        "\u0A8E\x03\x02\x02\x02\u0128\u0A90\x03\x02\x02\x02\u012A\u0A94\x03\x02" +
        "\x02\x02\u012C\u0A96\x03\x02\x02\x02\u012E\u0AA0\x03\x02\x02\x02\u0130" +
        "\u0AAD\x03\x02\x02\x02\u0132\u0AAF\x03\x02\x02\x02\u0134\u0AB7\x03\x02" +
        "\x02\x02\u0136\u0AC2\x03\x02\x02\x02\u0138\u0AD5\x03\x02\x02\x02\u013A" +
        "\u0AD9\x03\x02\x02\x02\u013C\u0AE2\x03\x02\x02\x02\u013E\u0AE4\x03\x02" +
        "\x02\x02\u0140\u0AE6\x03\x02\x02\x02\u0142\u0AE8\x03\x02\x02\x02\u0144" +
        "\u0AF3\x03\x02\x02\x02\u0146\u0AFF\x03\x02\x02\x02\u0148\u0B03\x03\x02" +
        "\x02\x02\u014A\u0B05\x03\x02\x02\x02\u014C\u0B0F\x03\x02\x02\x02\u014E" +
        "\u0B18\x03\x02\x02\x02\u0150\u0B1C\x03\x02\x02\x02\u0152\u0B20\x03\x02" +
        "\x02\x02\u0154\u0B28\x03\x02\x02\x02\u0156\u0B2C\x03\x02\x02\x02\u0158" +
        "\u0B34\x03\x02\x02\x02\u015A\u0B38\x03\x02\x02\x02\u015C\u0B40\x03\x02" +
        "\x02\x02\u015E\u0B44\x03\x02\x02\x02\u0160\u0B49\x03\x02\x02\x02\u0162" +
        "\u0B59\x03\x02\x02\x02\u0164\u0B6F\x03\x02\x02\x02\u0166\u0B73\x03\x02" +
        "\x02\x02\u0168\u0B75\x03\x02\x02\x02\u016A\u0B77\x03\x02\x02\x02\u016C" +
        "\u0B7D\x03\x02\x02\x02\u016E\u0B7F\x03\x02\x02\x02\u0170\u0B87\x03\x02" +
        "\x02\x02\u0172\u0B8B\x03\x02\x02\x02\u0174\u0B93\x03\x02\x02\x02\u0176" +
        "\u0BA4\x03\x02\x02\x02\u0178\u0BA6\x03\x02\x02\x02\u017A\u0BA9\x03\x02" +
        "\x02\x02\u017C\u0BAB\x03\x02\x02\x02\u017E\u0BAD\x03\x02\x02\x02\u0180" +
        "\u0BAF\x03\x02\x02\x02\u0182\u0BB1\x03\x02\x02\x02\u0184\u0BB3\x03\x02" +
        "\x02\x02\u0186\u0BB5\x03\x02\x02\x02\u0188\u0BB7\x03\x02\x02\x02\u018A" +
        "\u0BB9\x03\x02\x02\x02\u018C\u0BBB\x03\x02\x02\x02\u018E\u0BBD\x03\x02" +
        "\x02\x02\u0190\u0BBF\x03\x02\x02\x02\u0192\u0BDC\x03\x02\x02\x02\u0194" +
        "\u0BE0\x03\x02\x02\x02\u0196\u0BE3\x03\x02\x02\x02\u0198\u0BE7\x03\x02" +
        "\x02\x02\u019A\u0BFD\x03\x02\x02\x02\u019C\u0C0E\x03\x02\x02\x02\u019E" +
        "\u0C12\x03\x02\x02\x02\u01A0\u0C14\x03\x02\x02\x02\u01A2\u0C16\x03\x02" +
        "\x02\x02\u01A4\u0C25\x03\x02\x02\x02\u01A6\u0C29\x03\x02\x02\x02\u01A8" +
        "\u0C2D\x03\x02\x02\x02\u01AA\u0C2F\x03\x02\x02\x02\u01AC\u0C31\x03\x02" +
        "\x02\x02\u01AE\u0C34\x03\x02\x02\x02\u01B0\u0C44\x03\x02\x02\x02\u01B2" +
        "\u0C48\x03\x02\x02\x02\u01B4\u0C4E\x03\x02\x02\x02\u01B6\u0C52\x03\x02" +
        "\x02\x02\u01B8\u0C54\x03\x02\x02\x02\u01BA\u0C58\x03\x02\x02\x02\u01BC" +
        "\u0C5A\x03\x02\x02\x02\u01BE\u0C5C\x03\x02\x02\x02\u01C0\u0C63\x03\x02" +
        "\x02\x02\u01C2\u0C67\x03\x02\x02\x02\u01C4\u0C71\x03\x02\x02\x02\u01C6" +
        "\u0C75\x03\x02\x02\x02\u01C8\u0C7F\x03\x02\x02\x02\u01CA\u0C90\x03\x02" +
        "\x02\x02\u01CC\u0CA0\x03\x02\x02\x02\u01CE\u0CAC\x03\x02\x02\x02\u01D0" +
        "\u0CB8\x03\x02\x02\x02\u01D2\u0CBC\x03\x02\x02\x02\u01D4\u0CC0\x03\x02" +
        "\x02\x02\u01D6\u0CC5\x03\x02\x02\x02\u01D8\u0CC9\x03\x02\x02\x02\u01DA" +
        "\u0CD4\x03\x02\x02\x02\u01DC\u0CD8\x03\x02\x02\x02\u01DE\u0CDA\x03\x02" +
        "\x02\x02\u01E0\u0CDC\x03\x02\x02\x02\u01E2\u0CE0\x03\x02\x02\x02\u01E4" +
        "\u0CE2\x03\x02\x02\x02\u01E6\u0CE5\x03\x02\x02\x02\u01E8\u0CE7\x03\x02" +
        "\x02\x02\u01EA\u0CEA\x03\x02\x02\x02\u01EC\u0CED\x03\x02\x02\x02\u01EE" +
        "\u0CF0\x03\x02\x02\x02\u01F0\u0CF3\x03\x02\x02\x02\u01F2\u0D07\x03\x02" +
        "\x02\x02\u01F4\u0D16\x03\x02\x02\x02\u01F6\u0D1D\x03\x02\x02\x02\u01F8" +
        "\u0D23\x03\x02\x02\x02\u01FA\u0D31\x03\x02\x02\x02\u01FC\u0D3F\x03\x02" +
        "\x02\x02\u01FE\u0D49\x03\x02\x02\x02\u0200\u0D52\x03\x02\x02\x02\u0202" +
        "\u0D56\x03\x02\x02\x02\u0204\u0D58\x03\x02\x02\x02\u0206\u0D62\x03\x02" +
        "\x02\x02\u0208\u0D64\x03\x02\x02\x02\u020A\u0D6F\x03\x02\x02\x02\u020C" +
        "\u0D73\x03\x02\x02\x02\u020E\u0D77\x03\x02\x02\x02\u0210\u0D79\x03\x02" +
        "\x02\x02\u0212\u0D7D\x03\x02\x02\x02\u0214\u0D81\x03\x02\x02\x02\u0216" +
        "\u0D89\x03\x02\x02\x02\u0218\u0D96\x03\x02\x02\x02\u021A\u0DA2\x03\x02" +
        "\x02\x02\u021C\u0DA6\x03\x02\x02\x02\u021E\u0DAA\x03\x02\x02\x02\u0220" +
        "\u0DAC\x03\x02\x02\x02\u0222\u0DB6\x03\x02\x02\x02\u0224\u0DB8\x03\x02" +
        "\x02\x02\u0226\u0DBA\x03\x02\x02\x02\u0228\u0DBC\x03\x02\x02\x02\u022A" +
        "\u0DC5\x03\x02\x02\x02\u022C\u0DD1\x03\x02\x02\x02\u022E\u0DE1\x03\x02" +
        "\x02\x02\u0230\u0DF2\x03\x02\x02\x02\u0232\u0DF6\x03\x02\x02\x02\u0234" +
        "\u0DFF\x03\x02\x02\x02\u0236\u0E02\x03\x02\x02\x02\u0238\u0E06\x03\x02" +
        "\x02\x02\u023A\u0E08\x03\x02\x02\x02\u023C\u0E12\x03\x02\x02\x02\u023E" +
        "\u0E14\x03\x02\x02\x02\u0240\u0E1C\x03\x02\x02\x02\u0242\u0E1E\x03\x02" +
        "\x02\x02\u0244\u0E26\x03\x02\x02\x02\u0246\u0E28\x03\x02\x02\x02\u0248" +
        "\u0E2C\x03\x02\x02\x02\u024A\u0E34\x03\x02\x02\x02\u024C\u0E38\x03\x02" +
        "\x02\x02\u024E\u0E40\x03\x02\x02\x02\u0250\u0E44\x03\x02\x02\x02\u0252" +
        "\u0E47\x03\x02\x02\x02\u0254\u0E4D\x03\x02\x02\x02\u0256\u0E57\x03\x02" +
        "\x02\x02\u0258\u0E70\x03\x02\x02\x02\u025A\u0E75\x03\x02\x02\x02\u025C" +
        "\u0E78\x03\x02\x02\x02\u025E\u0E7D\x03\x02\x02\x02\u0260\u0E81\x03\x02" +
        "\x02\x02\u0262\u0E83\x03\x02\x02\x02\u0264\u0E8D\x03\x02\x02\x02\u0266" +
        "\u0E91\x03\x02\x02\x02\u0268\u0E99\x03\x02\x02\x02\u026A\u0E9B\x03\x02" +
        "\x02\x02\u026C\u0EA7\x03\x02\x02\x02\u026E\u0EBC\x03\x02\x02\x02\u0270" +
        "\u0ECF\x03\x02\x02\x02\u0272\u0EDF\x03\x02\x02\x02\u0274\u0EE3\x03\x02" +
        "\x02\x02\u0276\u0EE7\x03\x02\x02\x02\u0278\u0EEF\x03\x02\x02\x02\u027A" +
        "\u0EF3\x03\x02\x02\x02\u027C\u0EF8\x03\x02\x02\x02\u027E\u0EFC\x03\x02" +
        "\x02\x02\u0280\u0F0F\x03\x02\x02\x02\u0282\u0F11";
    EDIF300Parser._serializedATNSegment4 = "\x03\x02\x02\x02\u0284\u0F1C\x03\x02\x02\x02\u0286\u0F21\x03\x02\x02\x02" +
        "\u0288\u0F25\x03\x02\x02\x02\u028A\u0F2E\x03\x02\x02\x02\u028C\u0F33\x03" +
        "\x02\x02\x02\u028E\u0F38\x03\x02\x02\x02\u0290\u0F3D\x03\x02\x02\x02\u0292" +
        "\u0F46\x03\x02\x02\x02\u0294\u0F48\x03\x02\x02\x02\u0296\u0F57\x03\x02" +
        "\x02\x02\u0298\u0F66\x03\x02\x02\x02\u029A\u0F73\x03\x02\x02\x02\u029C" +
        "\u0F7D\x03\x02\x02\x02\u029E\u0F7F\x03\x02\x02\x02\u02A0\u0F81\x03\x02" +
        "\x02\x02\u02A2\u0F8E\x03\x02\x02\x02\u02A4\u0F92\x03\x02\x02\x02\u02A6" +
        "\u0F94\x03\x02\x02\x02\u02A8\u0F9E\x03\x02\x02\x02\u02AA\u0FA0\x03\x02" +
        "\x02\x02\u02AC\u0FB3\x03\x02\x02\x02\u02AE\u0FBA\x03\x02\x02\x02\u02B0" +
        "\u0FC3\x03\x02\x02\x02\u02B2\u0FD8\x03\x02\x02\x02\u02B4\u0FE1\x03\x02" +
        "\x02\x02\u02B6\u0FEB\x03\x02\x02\x02\u02B8\u0FEF\x03\x02\x02\x02\u02BA" +
        "\u0FF1\x03\x02\x02\x02\u02BC\u0FF4\x03\x02\x02\x02\u02BE\u0FF6\x03\x02" +
        "\x02\x02\u02C0\u0FF9\x03\x02\x02\x02\u02C2\u0FFC\x03\x02\x02\x02\u02C4" +
        "\u0FFF\x03\x02\x02\x02\u02C6\u1002\x03\x02\x02\x02\u02C8\u1006\x03\x02" +
        "\x02\x02\u02CA\u1009\x03\x02\x02\x02\u02CC\u100E\x03\x02\x02\x02\u02CE" +
        "\u1017\x03\x02\x02\x02\u02D0\u1019\x03\x02\x02\x02\u02D2\u101B\x03\x02" +
        "\x02\x02\u02D4\u101F\x03\x02\x02\x02\u02D6\u102C\x03\x02\x02\x02\u02D8" +
        "\u1034\x03\x02\x02\x02\u02DA\u1036\x03\x02\x02\x02\u02DC\u1038\x03\x02" +
        "\x02\x02\u02DE\u1044\x03\x02\x02\x02\u02E0\u104A\x03\x02\x02\x02\u02E2" +
        "\u1054\x03\x02\x02\x02\u02E4\u105D\x03\x02\x02\x02\u02E6\u1068\x03\x02" +
        "\x02\x02\u02E8\u1070\x03\x02\x02\x02\u02EA\u1073\x03\x02\x02\x02\u02EC" +
        "\u1081\x03\x02\x02\x02\u02EE\u1084\x03\x02\x02\x02\u02F0\u1095\x03\x02" +
        "\x02\x02\u02F2\u109E\x03\x02\x02\x02\u02F4\u10A7\x03\x02\x02\x02\u02F6" +
        "\u10B4\x03\x02\x02\x02\u02F8\u10BA\x03\x02\x02\x02\u02FA\u10C4\x03\x02" +
        "\x02\x02\u02FC\u10CD\x03\x02\x02\x02\u02FE\u10D1\x03\x02\x02\x02\u0300" +
        "\u10E0\x03\x02\x02\x02\u0302\u10E4\x03\x02\x02\x02\u0304\u10E7\x03\x02" +
        "\x02\x02\u0306\u10FA\x03\x02\x02\x02\u0308\u10FD\x03\x02\x02\x02\u030A" +
        "\u10FF\x03\x02\x02\x02\u030C\u1108\x03\x02\x02\x02\u030E\u1111\x03\x02" +
        "\x02\x02\u0310\u112E\x03\x02\x02\x02\u0312\u113E\x03\x02\x02\x02\u0314" +
        "\u1142\x03\x02\x02\x02\u0316\u1144\x03\x02\x02\x02\u0318\u1146\x03\x02" +
        "\x02\x02\u031A\u114A\x03\x02\x02\x02\u031C\u114C\x03\x02\x02\x02\u031E" +
        "\u114E\x03\x02\x02\x02\u0320\u1152\x03\x02\x02\x02\u0322\u1157\x03\x02" +
        "\x02\x02\u0324\u1165\x03\x02\x02\x02\u0326\u1169\x03\x02\x02\x02\u0328" +
        "\u116B\x03\x02\x02\x02\u032A\u116D\x03\x02\x02\x02\u032C\u1171\x03\x02" +
        "\x02\x02\u032E\u1181\x03\x02\x02\x02\u0330\u118D\x03\x02\x02\x02\u0332" +
        "\u1198\x03\x02\x02\x02\u0334\u11A1\x03\x02\x02\x02\u0336\u11AA\x03\x02" +
        "\x02\x02\u0338\u11B4\x03\x02\x02\x02\u033A\u11C0\x03\x02\x02\x02\u033C" +
        "\u11C2\x03\x02\x02\x02\u033E\u11C4\x03\x02\x02\x02\u0340\u11CE\x03\x02" +
        "\x02\x02\u0342\u11D5\x03\x02\x02\x02\u0344\u11EC\x03\x02\x02\x02\u0346" +
        "\u11EF\x03\x02\x02\x02\u0348\u11F1\x03\x02\x02\x02\u034A\u11F3\x03\x02" +
        "\x02\x02\u034C\u11FF\x03\x02\x02\x02\u034E\u120B\x03\x02\x02\x02\u0350" +
        "\u120E\x03\x02\x02\x02\u0352\u1212\x03\x02\x02\x02\u0354\u1215\x03\x02" +
        "\x02\x02\u0356\u1218\x03\x02\x02\x02\u0358\u121C\x03\x02\x02\x02\u035A" +
        "\u1222\x03\x02\x02\x02\u035C\u1224\x03\x02\x02\x02\u035E\u1226\x03\x02" +
        "\x02\x02\u0360\u1228\x03\x02\x02\x02\u0362\u122B\x03\x02\x02\x02\u0364" +
        "\u123D\x03\x02\x02\x02\u0366\u1241\x03\x02\x02\x02\u0368\u1243\x03\x02" +
        "\x02\x02\u036A\u1246\x03\x02\x02\x02\u036C\u1251\x03\x02\x02\x02\u036E" +
        "\u125D\x03\x02\x02\x02\u0370\u127D\x03\x02\x02\x02\u0372\u127F\x03\x02" +
        "\x02\x02\u0374\u1286\x03\x02\x02\x02\u0376\u1293\x03\x02\x02\x02\u0378" +
        "\u129D\x03\x02\x02\x02\u037A\u12A1\x03\x02\x02\x02\u037C\u12A3\x03\x02" +
        "\x02\x02\u037E\u12AB\x03\x02\x02\x02\u0380\u12AE\x03\x02\x02\x02\u0382" +
        "\u12B1\x03\x02\x02\x02\u0384\u12B4\x03\x02\x02\x02\u0386\u12B8\x03\x02" +
        "\x02\x02\u0388\u12C2\x03\x02\x02\x02\u038A\u12C6\x03\x02\x02\x02\u038C" +
        "\u12C9\x03\x02\x02\x02\u038E\u12CF\x03\x02\x02\x02\u0390\u12D1\x03\x02" +
        "\x02\x02\u0392\u12D3\x03\x02\x02\x02\u0394\u12D5\x03\x02\x02\x02\u0396" +
        "\u12E0\x03\x02\x02\x02\u0398\u12E5\x03\x02\x02\x02\u039A\u12E9\x03\x02" +
        "\x02\x02\u039C\u12EE\x03\x02\x02\x02\u039E\u12F0\x03\x02\x02\x02\u03A0" +
        "\u12F2\x03\x02\x02\x02\u03A2\u1310\x03\x02\x02\x02\u03A4\u1327\x03\x02" +
        "\x02\x02\u03A6\u132C\x03\x02\x02\x02\u03A8\u1330\x03\x02\x02\x02\u03AA" +
        "\u1334\x03\x02\x02\x02\u03AC\u133D\x03\x02\x02\x02\u03AE\u1341\x03\x02" +
        "\x02\x02\u03B0\u1345\x03\x02\x02\x02\u03B2\u1349\x03\x02\x02\x02\u03B4" +
        "\u1351\x03\x02\x02\x02\u03B6\u1353\x03\x02\x02\x02\u03B8\u1363\x03\x02" +
        "\x02\x02\u03BA\u1374\x03\x02\x02\x02\u03BC\u1378\x03\x02\x02\x02\u03BE" +
        "\u137B\x03\x02\x02\x02\u03C0\u1381\x03\x02\x02\x02\u03C2\u138B\x03\x02" +
        "\x02\x02\u03C4\u138F\x03\x02\x02\x02\u03C6\u13AD\x03\x02\x02\x02\u03C8" +
        "\u13B7\x03\x02\x02\x02\u03CA\u13C3\x03\x02\x02\x02\u03CC\u13D3\x03\x02" +
        "\x02\x02\u03CE\u13DA\x03\x02\x02\x02\u03D0\u13E7\x03\x02\x02\x02\u03D2" +
        "\u13F7\x03\x02\x02\x02\u03D4\u13FB\x03\x02\x02\x02\u03D6\u1403\x03\x02" +
        "\x02\x02\u03D8\u1407\x03\x02\x02\x02\u03DA\u1409\x03\x02\x02\x02\u03DC" +
        "\u140B\x03\x02\x02\x02\u03DE\u1416\x03\x02\x02\x02\u03E0\u141A\x03\x02" +
        "\x02\x02\u03E2\u141E\x03\x02\x02\x02\u03E4\u1422\x03\x02\x02\x02\u03E6" +
        "\u1435\x03\x02\x02\x02\u03E8\u144B\x03\x02\x02\x02\u03EA\u145F\x03\x02" +
        "\x02\x02\u03EC\u1470\x03\x02\x02\x02\u03EE\u1477\x03\x02\x02\x02\u03F0" +
        "\u147F\x03\x02\x02\x02\u03F2\u148B\x03\x02\x02\x02\u03F4\u148F\x03\x02" +
        "\x02\x02\u03F6\u1491\x03\x02\x02\x02\u03F8\u1499\x03\x02\x02\x02\u03FA" +
        "\u149B\x03\x02\x02\x02\u03FC\u149F\x03\x02\x02\x02\u03FE\u14A9\x03\x02" +
        "\x02\x02\u0400\u14B0\x03\x02\x02\x02\u0402\u14BC\x03\x02\x02\x02\u0404" +
        "\u14C8\x03\x02\x02\x02\u0406\u14D3\x03\x02\x02\x02\u0408\u14D9\x03\x02" +
        "\x02\x02\u040A\u14EB\x03\x02\x02\x02\u040C\u14F5\x03\x02\x02\x02\u040E" +
        "\u14FE\x03\x02\x02\x02\u0410\u1502\x03\x02\x02\x02\u0412\u150B\x03\x02" +
        "\x02\x02\u0414\u150D\x03\x02\x02\x02\u0416\u1511\x03\x02\x02\x02\u0418" +
        "\u152C\x03\x02\x02\x02\u041A\u1542\x03\x02\x02\x02\u041C\u1556\x03\x02" +
        "\x02\x02\u041E\u1565\x03\x02\x02\x02\u0420\u1572\x03\x02\x02\x02\u0422" +
        "\u157C\x03\x02\x02\x02\u0424\u157E\x03\x02\x02\x02\u0426\u1580\x03\x02" +
        "\x02\x02\u0428\u1591\x03\x02\x02\x02\u042A\u1599\x03\x02\x02\x02\u042C" +
        "\u159B\x03\x02\x02\x02\u042E\u159E\x03\x02\x02\x02\u0430\u15A9\x03\x02" +
        "\x02\x02\u0432\u15B5\x03\x02\x02\x02\u0434\u15BE\x03\x02\x02\x02\u0436" +
        "\u15CB\x03\x02\x02\x02\u0438\u15D5\x03\x02\x02\x02\u043A\u15D7\x03\x02" +
        "\x02\x02\u043C\u15D9\x03\x02\x02\x02\u043E\u15E6\x03\x02\x02\x02\u0440" +
        "\u15EB\x03\x02\x02\x02\u0442\u15EF\x03\x02\x02\x02\u0444\u15F1\x03\x02" +
        "\x02\x02\u0446\u15FB\x03\x02\x02\x02\u0448\u15FF\x03\x02\x02\x02\u044A" +
        "\u1607\x03\x02\x02\x02\u044C\u1609\x03\x02\x02\x02\u044E\u1614\x03\x02" +
        "\x02\x02\u0450\u1620\x03\x02\x02\x02\u0452\u1630\x03\x02\x02\x02\u0454" +
        "\u1634\x03\x02\x02\x02\u0456\u163D\x03\x02\x02\x02\u0458\u1644\x03\x02" +
        "\x02\x02\u045A\u1649\x03\x02\x02\x02\u045C\u164B\x03\x02\x02\x02\u045E" +
        "\u1652\x03\x02\x02\x02\u0460\u165E\x03\x02\x02\x02\u0462\u1665\x03\x02" +
        "\x02\x02\u0464\u1678\x03\x02\x02\x02\u0466\u1683\x03\x02\x02\x02\u0468" +
        "\u168F\x03\x02\x02\x02\u046A\u1696\x03\x02\x02\x02\u046C\u169A\x03\x02" +
        "\x02\x02\u046E\u169C\x03\x02\x02\x02\u0470\u16A6\x03\x02\x02\x02\u0472" +
        "\u16A8\x03\x02\x02\x02\u0474\u16B8\x03\x02\x02\x02\u0476\u16BB\x03\x02" +
        "\x02\x02\u0478\u16C0\x03\x02\x02\x02\u047A\u16C2\x03\x02\x02\x02\u047C" +
        "\u16C4\x03\x02\x02\x02\u047E\u16C8\x03\x02\x02\x02\u0480\u16CC\x03\x02" +
        "\x02\x02\u0482\u16D1\x03\x02\x02\x02\u0484\u16D3\x03\x02\x02\x02\u0486" +
        "\u16D6\x03\x02\x02\x02\u0488\u16DA\x03\x02\x02\x02\u048A\u16E2\x03\x02" +
        "\x02\x02\u048C\u16EB\x03\x02\x02\x02\u048E\u16EE\x03\x02\x02\x02\u0490" +
        "\u16F7\x03\x02\x02\x02\u0492\u16FB\x03\x02\x02\x02\u0494\u1703\x03\x02" +
        "\x02\x02\u0496\u1706\x03\x02\x02\x02\u0498\u170B\x03\x02\x02\x02\u049A" +
        "\u1710\x03\x02\x02\x02\u049C\u1714\x03\x02\x02\x02\u049E\u1717\x03\x02" +
        "\x02\x02\u04A0\u171B\x03\x02\x02\x02\u04A2\u171D\x03\x02\x02\x02\u04A4" +
        "\u1722\x03\x02\x02\x02\u04A6\u1727\x03\x02\x02\x02\u04A8\u1738\x03\x02" +
        "\x02\x02\u04AA\u173F\x03\x02\x02\x02\u04AC\u174B\x03\x02\x02\x02\u04AE" +
        "\u175C\x03\x02\x02\x02\u04B0\u176D\x03\x02\x02\x02\u04B2\u1779\x03\x02" +
        "\x02\x02\u04B4\u178A\x03\x02\x02\x02\u04B6\u1791\x03\x02\x02\x02\u04B8" +
        "\u179F\x03\x02\x02\x02\u04BA\u17B1\x03\x02\x02\x02\u04BC\u17B8\x03\x02" +
        "\x02\x02\u04BE\u17BF\x03\x02\x02\x02\u04C0\u17C5\x03\x02\x02\x02\u04C2" +
        "\u17DF\x03\x02\x02\x02\u04C4\u17F4\x03\x02\x02\x02\u04C6\u1806\x03\x02" +
        "\x02\x02\u04C8\u180A\x03\x02\x02\x02\u04CA\u1822\x03\x02\x02\x02\u04CC" +
        "\u1829\x03\x02\x02\x02\u04CE\u1836\x03\x02\x02\x02\u04D0\u1847\x03\x02" +
        "\x02\x02\u04D2\u184E\x03\x02\x02\x02\u04D4\u1855\x03\x02\x02\x02\u04D6" +
        "\u185B\x03\x02\x02\x02\u04D8\u1865\x03\x02\x02\x02\u04DA\u1882\x03\x02" +
        "\x02\x02\u04DC\u1886\x03\x02\x02\x02\u04DE\u1894\x03\x02\x02\x02\u04E0" +
        "\u18A4\x03\x02\x02\x02\u04E2\u18B3\x03\x02\x02\x02\u04E4\u18B7\x03\x02" +
        "\x02\x02\u04E6\u18C7\x03\x02\x02\x02\u04E8\u18CE\x03\x02\x02\x02\u04EA" +
        "\u18DD\x03\x02\x02\x02\u04EC\u18E1\x03\x02\x02\x02\u04EE\u18F1\x03\x02" +
        "\x02\x02\u04F0\u18F8\x03\x02\x02\x02\u04F2\u190C\x03\x02\x02\x02\u04F4" +
        "\u1910\x03\x02\x02\x02\u04F6\u1924\x03\x02\x02\x02\u04F8\u192B\x03\x02" +
        "\x02\x02\u04FA\u1936\x03\x02\x02\x02\u04FC\u1946\x03\x02\x02\x02\u04FE" +
        "\u194D\x03\x02\x02\x02\u0500\u1959\x03\x02\x02\x02\u0502\u197E\x03\x02" +
        "\x02\x02\u0504\u1990\x03\x02\x02\x02\u0506\u1994\x03\x02\x02\x02\u0508" +
        "\u19A6\x03\x02\x02\x02\u050A\u19AD\x03\x02\x02\x02\u050C\u19BF\x03\x02" +
        "\x02\x02\u050E\u19C3\x03\x02\x02\x02\u0510\u19D5\x03\x02\x02\x02\u0512" +
        "\u19DC\x03\x02\x02\x02\u0514\u19E8\x03\x02\x02\x02\u0516\u19F8\x03\x02" +
        "\x02\x02\u0518\u19FF\x03\x02\x02\x02\u051A\u1A06\x03\x02\x02\x02\u051C" +
        "\u1A0C\x03\x02\x02\x02\u051E\u1A16\x03\x02\x02\x02\u0520\u1A1A\x03\x02" +
        "\x02\x02\u0522\u1A1E\x03\x02\x02\x02\u0524\u1A21\x03\x02\x02\x02\u0526" +
        "\u1A36\x03\x02\x02\x02\u0528\u1A3C\x03\x02\x02\x02\u052A\u1A42\x03\x02" +
        "\x02\x02\u052C\u1A4C\x03\x02\x02\x02\u052E\u1A50\x03\x02\x02\x02\u0530" +
        "\u1A56\x03\x02\x02\x02\u0532\u1A5C\x03\x02\x02\x02\u0534\u1A5F\x03\x02" +
        "\x02\x02\u0536\u1A62\x03\x02\x02\x02\u0538\u1A65\x03\x02\x02\x02\u053A" +
        "\u1A68\x03\x02\x02\x02\u053C\u1A6F\x03\x02\x02\x02\u053E\u1A72\x03\x02" +
        "\x02\x02\u0540\u1A78\x03\x02\x02\x02\u0542\u1A89\x03\x02\x02\x02\u0544" +
        "\u1A8D\x03\x02\x02\x02\u0546\u1A9E\x03\x02\x02\x02\u0548\u1AA5\x03\x02" +
        "\x02\x02\u054A\u1AB5\x03\x02\x02\x02\u054C\u1ABE\x03\x02\x02\x02\u054E" +
        "\u1ACB\x03\x02\x02\x02\u0550\u1ADA\x03\x02\x02\x02\u0552\u1AE3\x03\x02" +
        "\x02\x02\u0554\u1AFF\x03\x02\x02\x02\u0556\u1B0B\x03\x02\x02\x02\u0558" +
        "\u1B1B\x03\x02\x02\x02\u055A\u1B22\x03\x02\x02\x02\u055C\u1B35\x03\x02" +
        "\x02\x02\u055E\u1B44\x03\x02\x02\x02\u0560\u1B49\x03\x02\x02\x02\u0562" +
        "\u1B5E\x03\x02\x02\x02\u0564\u1B65\x03\x02\x02\x02\u0566\u1B69\x03\x02" +
        "\x02\x02\u0568\u1B78\x03\x02\x02\x02\u056A\u1B86\x03\x02\x02\x02\u056C" +
        "\u1B94\x03\x02\x02\x02\u056E\u1BA3\x03\x02\x02\x02\u0570\u1BAB\x03\x02" +
        "\x02\x02\u0572\u1BB2\x03\x02\x02\x02\u0574\u1BB6\x03\x02\x02\x02\u0576" +
        "\u1BB8\x03\x02\x02\x02\u0578\u1BBA\x03\x02\x02\x02\u057A\u1BBC\x03\x02" +
        "\x02\x02\u057C\u1BC9\x03\x02\x02\x02\u057E\u1BCB\x03\x02\x02\x02\u0580" +
        "\u1BCF\x03\x02\x02\x02\u0582\u1BD7\x03\x02\x02\x02\u0584\u1BDB\x03\x02" +
        "\x02\x02\u0586\u1BDF\x03\x02\x02\x02\u0588\u1BE3\x03\x02\x02\x02\u058A" +
        "\u1BE7\x03\x02\x02\x02\u058C\u1BEB\x03\x02\x02\x02\u058E\u1BEF\x03\x02" +
        "\x02\x02\u0590\u1BF3\x03\x02\x02\x02\u0592\u1BF7\x03\x02\x02\x02\u0594" +
        "\u1BFB\x03\x02\x02\x02\u0596\u1C09\x03\x02\x02\x02\u0598\u1C18\x03\x02" +
        "\x02\x02\u059A\u1C24\x03\x02\x02\x02\u059C\u1C30\x03\x02\x02\x02\u059E" +
        "\u1C34\x03\x02\x02\x02\u05A0\u1C36\x03\x02\x02\x02\u05A2\u1C38\x03\x02" +
        "\x02\x02\u05A4\u1C3C\x03\x02\x02\x02\u05A6\u1C3F\x03\x02\x02\x02\u05A8" +
        "\u1C4B\x03\x02\x02\x02\u05AA\u1C55\x03\x02\x02\x02\u05AC\u1C5A\x03\x02" +
        "\x02\x02\u05AE\u1C5E\x03\x02\x02\x02\u05B0\u1C60\x03\x02\x02\x02\u05B2" +
        "\u1C62\x03\x02\x02\x02\u05B4\u1C66\x03\x02\x02\x02\u05B6\u1C6A\x03\x02" +
        "\x02\x02\u05B8\u1C6C\x03\x02\x02\x02\u05BA\u1C6E\x03\x02\x02\x02\u05BC" +
        "\u1C7A\x03\x02\x02\x02\u05BE\u1C7E\x03\x02\x02\x02\u05C0\u1C82\x03\x02" +
        "\x02\x02\u05C2\u1C8B\x03\x02\x02\x02\u05C4\u1C90\x03\x02\x02\x02\u05C6" +
        "\u1C94\x03\x02\x02\x02\u05C8\u1CA1\x03\x02\x02\x02\u05CA\u1CA3\x03\x02" +
        "\x02\x02\u05CC\u1CA7\x03\x02\x02\x02\u05CE\u1CB2\x03\x02\x02\x02\u05D0" +
        "\u1CB7\x03\x02\x02\x02\u05D2\u1CBB\x03\x02\x02\x02\u05D4\u1CC0\x03\x02" +
        "\x02\x02\u05D6\u1CC5\x03\x02\x02\x02\u05D8\u1CC7\x03\x02\x02\x02\u05DA" +
        "\u1CCB\x03\x02\x02\x02\u05DC\u1CCD\x03\x02\x02\x02\u05DE\u1CD3\x03\x02" +
        "\x02\x02\u05E0\u1CD5\x03\x02\x02\x02\u05E2\u1CD7\x03\x02\x02\x02\u05E4" +
        "\u1CD9\x03\x02\x02\x02\u05E6\u1CE5\x03\x02\x02\x02\u05E8\u1CFA\x03\x02" +
        "\x02\x02\u05EA\u1CFC\x03\x02\x02\x02\u05EC\u1CFE\x03\x02\x02\x02\u05EE" +
        "\u1D0B\x03\x02\x02\x02\u05F0\u1D0F\x03\x02\x02\x02\u05F2\u1D11\x03\x02" +
        "\x02\x02\u05F4\u1D17\x03\x02\x02\x02\u05F6\u1D19\x03\x02\x02\x02\u05F8" +
        "\u1D25\x03\x02\x02\x02\u05FA\u1D2A\x03\x02\x02\x02\u05FC\u1D2C\x03\x02" +
        "\x02\x02\u05FE\u1D3B\x03\x02\x02\x02\u0600\u1D45\x03\x02\x02\x02\u0602" +
        "\u1D47\x03\x02\x02\x02\u0604\u1D49\x03\x02\x02\x02\u0606\u1D4B\x03\x02" +
        "\x02\x02\u0608\u1D4E\x03\x02\x02\x02\u060A\u1D52\x03\x02\x02\x02\u060C" +
        "\u1D5A\x03\x02\x02\x02\u060E\u1D66\x03\x02\x02\x02\u0610\u1D6B\x03\x02" +
        "\x02\x02\u0612\u1D6E\x03\x02\x02\x02\u0614\u1D77\x03\x02\x02\x02\u0616" +
        "\u1D79\x03\x02\x02\x02\u0618\u1D80\x03\x02\x02\x02\u061A\u1D84\x03\x02" +
        "\x02\x02\u061C\u1D87\x03\x02\x02\x02\u061E\u1D8A\x03\x02\x02\x02\u0620" +
        "\u1D8D\x03\x02\x02\x02\u0622\u1DAD\x03\x02\x02\x02\u0624\u1DB6\x03\x02" +
        "\x02\x02\u0626\u1DB8\x03\x02\x02\x02\u0628\u1DBA\x03\x02\x02\x02\u062A" +
        "\u1DBC\x03\x02\x02\x02\u062C\u1DC0\x03\x02\x02\x02\u062E\u1DC3\x03\x02" +
        "\x02\x02\u0630\u1DC6\x03\x02\x02\x02\u0632\u1DC9\x03\x02\x02\x02\u0634" +
        "\u1DCC\x03\x02\x02\x02\u0636\u1DCF\x03\x02\x02\x02\u0638\u1DD8\x03\x02" +
        "\x02\x02\u063A\u1DE5\x03\x02\x02\x02\u063C\u1DE7\x03\x02\x02\x02\u063E" +
        "\u1DEB\x03\x02\x02\x02\u0640\u1DF5\x03\x02\x02\x02\u0642\u1E03\x03\x02" +
        "\x02\x02\u0644\u1E0F\x03\x02\x02\x02\u0646\u1E13\x03\x02\x02\x02\u0648" +
        "\u1E15\x03\x02\x02\x02\u064A\u1E17\x03\x02\x02\x02\u064C\u1E1B\x03\x02" +
        "\x02\x02\u064E\u1E1F\x03\x02\x02\x02\u0650\u1E21\x03\x02\x02\x02\u0652" +
        "\u1E2B\x03\x02\x02\x02\u0654\u1E2D\x03\x02\x02\x02\u0656\u1E38\x03\x02" +
        "\x02\x02\u0658\u1E48\x03\x02\x02\x02\u065A\u1E4F\x03\x02\x02\x02\u065C" +
        "\u1E53\x03\x02\x02\x02\u065E\u1E57\x03\x02\x02\x02\u0660\u1E5B\x03\x02" +
        "\x02\x02\u0662\u1E5D\x03\x02\x02\x02\u0664\u1E61\x03\x02\x02\x02\u0666" +
        "\u1E65\x03\x02\x02\x02\u0668\u1E6F\x03\x02\x02\x02\u066A\u1E73\x03\x02" +
        "\x02\x02\u066C\u1E76\x03\x02\x02\x02\u066E\u1E79\x03\x02\x02\x02\u0670" +
        "\u1E87\x03\x02\x02\x02\u0672\u1E89\x03\x02\x02\x02\u0674\u1E8B\x03\x02" +
        "\x02\x02\u0676\u1E94\x03\x02\x02\x02\u0678\u1E96\x03\x02\x02\x02\u067A" +
        "\u1E9F\x03\x02\x02\x02\u067C\u1EA1\x03\x02\x02\x02\u067E\u1EA3\x03\x02" +
        "\x02\x02\u0680\u1EA5\x03\x02\x02\x02\u0682\u0683\x05\u0160\xB1\x02\u0683" +
        "\x03\x03\x02\x02\x02\u0684\u0685\x07\x03\x02\x02\u0685\u0686\x05\u0280" +
        "\u0141\x02\u0686\u0687\x07\x04\x02\x02\u0687\x05\x03\x02\x02\x02\u0688" +
        "\u0689\x07\x05\x02\x02\u0689\u068A\x05Z.\x02\u068A\u068B\x07\x04\x02\x02" +
        "\u068B\x07\x03\x02\x02\x02\u068C\u0690\x07\x06\x02\x02\u068D\u0691\x05" +
        "\x0E\b\x02\u068E\u0691\x05\u048A\u0246\x02\u068F\u0691\x05\u0484\u0243" +
        "\x02\u0690\u068D\x03\x02\x02\x02\u0690\u068E\x03\x02\x02\x02\u0690\u068F" +
        "\x03\x02\x02\x02\u0691\u0692\x03\x02\x02\x02\u0692\u0693\x07\x04\x02\x02" +
        "\u0693\t\x03\x02\x02\x02\u0694\u0695\x05Z.\x02\u0695\v\x03\x02\x02\x02" +
        "\u0696\u0697\x05\u05FA\u02FE\x02\u0697\r\x03\x02\x02\x02\u0698\u069C\x07" +
        "\x07\x02\x02\u0699\u069B\x05\u0134\x9B\x02\u069A\u0699\x03\x02\x02\x02" +
        "\u069B\u069E\x03\x02\x02\x02\u069C\u069A\x03\x02\x02\x02\u069C\u069D\x03" +
        "\x02\x02\x02\u069D\u069F\x03\x02\x02\x02\u069E\u069C\x03\x02\x02\x02\u069F" +
        "\u06A0\x07\x04\x02\x02\u06A0\x0F\x03\x02\x02\x02\u06A1\u06A2\x07\b\x02" +
        "\x02\u06A2\u06A3\x05\u0624\u0313\x02\u06A3\u06A4\x07\x04\x02\x02\u06A4" +
        "\x11\x03\x02\x02\x02\u06A5\u06A9\x07\t\x02\x02\u06A6\u06A8\x05@!\x02\u06A7" +
        "\u06A6\x03\x02\x02\x02\u06A8\u06AB\x03\x02\x02\x02\u06A9\u06A7\x03\x02" +
        "\x02\x02\u06A9\u06AA\x03\x02\x02\x02\u06AA\u06AC\x03\x02\x02\x02\u06AB" +
        "\u06A9\x03\x02\x02\x02\u06AC\u06AD\x07\x04\x02\x02\u06AD\x13\x03\x02\x02" +
        "\x02\u06AE\u06AF\x05\u039C\u01CF\x02\u06AF\x15\x03\x02\x02\x02\u06B0\u06B1" +
        "\x07\n\x02\x02\u06B1\u06B5\x05\u05D6\u02EC\x02\u06B2\u06B4\x05\u0134\x9B" +
        "\x02\u06B3\u06B2\x03\x02\x02\x02\u06B4\u06B7\x03\x02\x02\x02\u06B5\u06B3" +
        "\x03\x02\x02\x02\u06B5\u06B6\x03\x02\x02\x02\u06B6\u06B8\x03\x02\x02\x02" +
        "\u06B7\u06B5\x03\x02\x02\x02\u06B8\u06B9\x07\x04\x02\x02\u06B9\x17\x03" +
        "\x02\x02\x02\u06BA\u06BB\x07\v\x02\x02\u06BB\u06BC\x05\xF4{\x02\u06BC" +
        "\u06BD\x07\x04\x02\x02\u06BD\x19\x03\x02\x02\x02\u06BE\u06C2\x07\f\x02" +
        "\x02\u06BF\u06C3\x05\x0E\b\x02\u06C0\u06C3\x05\u048A\u0246\x02\u06C1\u06C3" +
        "\x05\u0484\u0243\x02\u06C2\u06BF\x03\x02\x02\x02\u06C2\u06C0\x03\x02\x02" +
        "\x02\u06C2\u06C1\x03\x02\x02\x02\u06C3\u06C4\x03\x02\x02\x02\u06C4\u06C5" +
        "\x07\x04\x02\x02\u06C5\x1B\x03\x02\x02\x02\u06C6\u06C7\x07\r\x02\x02\u06C7" +
        "\u06C8\x05\u05B8\u02DD\x02\u06C8\u06C9\x05\u05F0\u02F9\x02\u06C9\u06CA" +
        "\x05\u016C\xB7\x02\u06CA\u06CB\x07\x04\x02\x02\u06CB\x1D\x03\x02\x02\x02" +
        "\u06CC\u06CD\x07\x0E\x02\x02\u06CD\u06CE\x07\x04\x02\x02\u06CE\x1F\x03" +
        "\x02\x02\x02\u06CF\u06D3\x07\x0F\x02\x02\u06D0\u06D4\x05\x0E\b\x02\u06D1" +
        "\u06D4\x05\u048A\u0246\x02\u06D2\u06D4\x05\u0484\u0243\x02\u06D3\u06D0" +
        "\x03\x02\x02\x02\u06D3\u06D1\x03\x02\x02\x02\u06D3\u06D2\x03\x02\x02\x02" +
        "\u06D4\u06D5\x03\x02\x02\x02\u06D5\u06D6\x07\x04\x02\x02\u06D6!\x03\x02" +
        "\x02\x02\u06D7\u06D8\x05\u0412\u020A\x02\u06D8#\x03\x02\x02\x02\u06D9" +
        "\u06DA\x07\x10\x02\x02\u06DA\u06DB\x05\u0680\u0341\x02\u06DB\u06DC\x07" +
        "\x04\x02\x02\u06DC%\x03\x02\x02\x02\u06DD\u06DE\x07\x11\x02\x02\u06DE" +
        "\u06DF\x05\x94K\x02\u06DF\u06E0\x07\x04\x02\x02\u06E0\'\x03\x02\x02\x02" +
        "\u06E1\u06E2\x07\x12\x02\x02\u06E2\u06E3\x07\x04\x02\x02\u06E3)\x03\x02" +
        "\x02\x02\u06E4\u06E8\x07\x13\x02\x02\u06E5\u06E9\x05\u033C\u019F\x02\u06E6" +
        "\u06E9\x05\u0330\u0199\x02\u06E7\u06E9\x05\u033E\u01A0\x02\u06E8\u06E5" +
        "\x03\x02\x02\x02\u06E8\u06E6\x03\x02\x02\x02\u06E8\u06E7\x03\x02\x02\x02" +
        "\u06E9\u06EA\x03\x02\x02\x02\u06EA\u06EB\x07\x04\x02\x02\u06EB+\x03\x02" +
        "\x02\x02\u06EC\u06ED\x07\x14\x02\x02\u06ED\u06F3\x05\u064E\u0328\x02\u06EE" +
        "\u06F2\x05\x96L\x02\u06EF\u06F2\x05\u0376\u01BC\x02\u06F0\u06F2\x05\u0638" +
        "\u031D\x02\u06F1\u06EE\x03\x02\x02\x02\u06F1\u06EF\x03\x02\x02\x02\u06F1" +
        "\u06F0\x03\x02\x02\x02\u06F2\u06F5\x03\x02\x02\x02\u06F3\u06F1\x03\x02" +
        "\x02\x02\u06F3\u06F4\x03\x02\x02\x02\u06F4\u06F6\x03\x02\x02\x02\u06F5" +
        "\u06F3\x03\x02\x02\x02\u06F6\u06F7\x07\x04\x02\x02\u06F7-\x03\x02\x02" +
        "\x02\u06F8\u06F9\x07\x15\x02\x02\u06F9\u06FA\x07\x04\x02\x02\u06FA/\x03" +
        "\x02\x02\x02\u06FB\u06FD\x07\x16\x02\x02\u06FC\u06FE\x052\x1A\x02\u06FD" +
        "\u06FC\x03\x02\x02\x02\u06FD\u06FE\x03\x02\x02\x02\u06FE\u06FF\x03\x02" +
        "\x02\x02\u06FF\u0700\x07\x04\x02\x02\u07001\x03\x02\x02\x02\u0701\u0708" +
        "\x07\x17\x02\x02\u0702\u0707\x05\xF8}\x02\u0703\u0707\x05\xFC\x7F\x02" +
        "\u0704\u0707\x05\u0100\x81\x02\u0705\u0707\x05\u0104\x83\x02\u0706\u0702" +
        "\x03\x02\x02\x02\u0706\u0703\x03\x02\x02\x02\u0706\u0704\x03\x02\x02\x02" +
        "\u0706\u0705\x03\x02\x02\x02\u0707\u070A\x03\x02\x02\x02\u0708\u0706\x03" +
        "\x02\x02\x02\u0708\u0709\x03\x02\x02\x02\u0709\u070B\x03\x02\x02\x02\u070A" +
        "\u0708\x03\x02\x02\x02\u070B\u070C\x07\x04\x02\x02\u070C3\x03\x02\x02" +
        "\x02\u070D\u0710\x07\x18\x02\x02\u070E\u0711\x05\u0344\u01A3\x02\u070F" +
        "\u0711\x05\u0368\u01B5\x02\u0710\u070E\x03\x02\x02\x02\u0710\u070F\x03" +
        "\x02\x02\x02\u0711\u0712\x03\x02\x02\x02\u0712\u0713\x07\x04\x02\x02\u0713" +
        "5\x03\x02\x02\x02\u0714\u0715\x05\u04A0\u0251\x02\u07157\x03\x02\x02\x02" +
        "\u0716\u0717\x07\x19\x02\x02\u0717\u0718\x07\x04\x02\x02\u07189\x03\x02" +
        "\x02\x02\u0719\u071A\x07\x1A\x02\x02\u071A\u071B\x05@!\x02\u071B\u071C" +
        "\x07\x04\x02\x02\u071C;\x03\x02\x02\x02\u071D\u071E\x07\x1B\x02\x02\u071E" +
        "\u071F\x05\xD6l\x02\u071F\u0720\x05J&\x02\u0720\u0721\x07\x04\x02\x02" +
        "\u0721=\x03\x02\x02\x02\u0722\u0723\x07\x1C\x02\x02\u0723\u0724\x05\xD8" +
        "m\x02\u0724\u0725\x07\x04\x02\x02\u0725?\x03\x02\x02\x02\u0726\u0732\x05" +
        "\x12\n\x02\u0727\u0732\x05H%\x02\u0728\u0732\x05J&\x02\u0729\u0732\x05" +
        "\u05C6\u02E4\x02\u072A\u0732\x05\u027E\u0140\x02\u072B\u0732\x05\u030A" +
        "\u0186\x02\u072C\u0732\x05\u030C\u0187\x02\u072D\u0732\x05\u0388\u01C5" +
        "\x02\u072E\u0732\x05\u03AA\u01D6\x02\u072F\u0732\x05\u0674\u033B\x02\u0730" +
        "\u0732\x05> \x02\u0731\u0726\x03\x02\x02\x02\u0731\u0727\x03\x02\x02\x02" +
        "\u0731\u0728\x03\x02\x02\x02\u0731\u0729\x03\x02\x02\x02\u0731\u072A\x03" +
        "\x02\x02\x02\u0731\u072B\x03\x02\x02\x02\u0731\u072C\x03\x02\x02\x02\u0731" +
        "\u072D\x03\x02\x02\x02\u0731\u072E\x03\x02\x02\x02\u0731\u072F\x03\x02" +
        "\x02\x02\u0731\u0730\x03\x02\x02\x02\u0732A\x03\x02\x02\x02\u0733\u0734" +
        "\x07\x1D\x02\x02\u0734\u0735\x05L\'\x02\u0735\u0736\x07\x04\x02\x02\u0736" +
        "C\x03\x02\x02\x02\u0737\u0738\x07\x1E\x02\x02\u0738\u073D\x05\u03F4\u01FB" +
        "\x02\u0739\u073C\x05:\x1E\x02\u073A\u073C\x05\u0376\u01BC\x02\u073B\u0739" +
        "\x03\x02\x02\x02\u073B\u073A\x03\x02\x02\x02\u073C\u073F\x03\x02\x02\x02" +
        "\u073D\u073B\x03\x02\x02\x02\u073D\u073E\x03\x02\x02\x02\u073E\u0740\x03" +
        "\x02\x02\x02\u073F\u073D\x03\x02\x02\x02\u0740\u0741\x07\x04\x02\x02\u0741" +
        "E\x03\x02\x02\x02\u0742\u0743\x07\x1F\x02\x02\u0743\u0744\x05\u03F8\u01FD" +
        "\x02\u0744\u0745\x05@!\x02\u0745\u0746\x07\x04\x02\x02\u0746G\x03\x02" +
        "\x02\x02\u0747\u0748\x07 \x02\x02\u0748\u0749\x05\u03F8\u01FD\x02\u0749" +
        "\u074A\x07\x04\x02\x02\u074AI\x03\x02\x02\x02\u074B\u074E\x05\u0194\xCB" +
        "\x02\u074C\u074E\x05\u0610\u0309\x02\u074D\u074B\x03\x02\x02\x02\u074D" +
        "\u074C\x03\x02\x02\x02\u074EK\x03\x02\x02\x02\u074F\u0750\x05J&\x02\u0750" +
        "M\x03\x02\x02\x02\u0751\u0752\x07!\x02\x02\u0752\u0753\x05\u040A\u0206" +
        "\x02\u0753\u0754\x07\x04\x02\x02\u0754O\x03\x02\x02\x02\u0755\u0756\x07" +
        "\"\x02\x02\u0756\u0757\x05L\'\x02\u0757\u0758\x07\x04\x02\x02\u0758Q\x03" +
        "\x02\x02\x02\u0759\u075C\x07#\x02\x02\u075A\u075D\x05\u0308\u0185\x02" +
        "\u075B\u075D\x05\u0354\u01AB\x02\u075C\u075A\x03\x02\x02\x02\u075C\u075B" +
        "\x03\x02\x02\x02\u075D\u075E\x03\x02\x02\x02\u075E\u075F\x07\x04\x02\x02" +
        "\u075FS\x03\x02\x02\x02\u0760\u0761\x07$\x02\x02\u0761\u0762\x07\x04\x02" +
        "\x02\u0762U\x03\x02\x02\x02\u0763\u0764\x07%\x02\x02\u0764\u0765\x07\x04" +
        "\x02\x02\u0765W\x03\x02\x02\x02\u0766\u0767\x07&\x02\x02\u0767\u0768\x05" +
        "\u0624\u0313\x02\u0768\u0769\x07\x04\x02\x02\u0769Y\x03\x02\x02\x02\u076A" +
        "\u076B\x05\u035A\u01AE\x02\u076B[\x03\x02\x02\x02\u076C\u076D\x07\'\x02" +
        "\x02\u076D\u076E\x07\x04\x02\x02\u076E]\x03\x02\x02\x02\u076F\u0770\x07" +
        "(\x02\x02\u0770\u0771\x05\u031A\u018E\x02\u0771\u0778\x05`1\x02\u0772" +
        "\u0777\x05x=\x02\u0773\u0777\x05\x96L\x02\u0774\u0777\x05\u0638\u031D" +
        "\x02\u0775\u0777\x05\u0640\u0321\x02\u0776\u0772\x03\x02\x02\x02\u0776" +
        "\u0773\x03\x02\x02\x02\u0776\u0774\x03\x02\x02\x02\u0776\u0775\x03\x02" +
        "\x02\x02\u0777\u077A\x03\x02\x02\x02\u0778\u0776\x03\x02\x02\x02\u0778" +
        "\u0779\x03\x02\x02\x02\u0779\u077B\x03\x02\x02\x02\u077A\u0778\x03\x02" +
        "\x02\x02\u077B\u077C\x07\x04\x02\x02\u077C_\x03\x02\x02\x02\u077D\u0784" +
        "\x07)\x02\x02\u077E\u0783\x05\u0142\xA2\x02\u077F\u0783\x05\u0376\u01BC" +
        "\x02\u0780\u0783\x05\u0462\u0232\x02\u0781\u0783\x05\u05BA\u02DE\x02\u0782" +
        "\u077E\x03\x02\x02\x02\u0782\u077F\x03\x02\x02\x02\u0782\u0780\x03\x02" +
        "\x02\x02\u0782\u0781\x03\x02\x02\x02\u0783\u0786\x03\x02\x02\x02\u0784" +
        "\u0782\x03\x02\x02\x02\u0784\u0785\x03\x02\x02\x02\u0785\u0787\x03\x02" +
        "\x02\x02\u0786\u0784\x03\x02\x02\x02\u0787\u0788\x07\x04\x02\x02\u0788" +
        "a\x03\x02\x02\x02\u0789\u078E\x07*\x02\x02\u078A\u078D\x05\u0134\x9B\x02" +
        "\u078B\u078D\x05\u013A\x9E\x02\u078C\u078A\x03\x02\x02\x02\u078C\u078B" +
        "\x03\x02\x02\x02\u078D\u0790\x03\x02\x02\x02\u078E\u078C\x03\x02\x02\x02" +
        "\u078E\u078F\x03\x02\x02\x02\u078F\u0791\x03\x02\x02\x02\u0790\u078E\x03" +
        "\x02\x02\x02\u0791\u0792\x07\x04\x02\x02\u0792c\x03\x02\x02\x02\u0793" +
        "\u0794\x07+\x02\x02\u0794\u0799\x05\u0470\u0239\x02\u0795\u0798\x05\u0134" +
        "\x9B\x02\u0796\u0798\x05\u046E\u0238\x02\u0797\u0795\x03\x02";
    EDIF300Parser._serializedATNSegment5 = "\x02\x02\u0797\u0796\x03\x02\x02\x02\u0798\u079B\x03\x02\x02\x02\u0799" +
        "\u0797\x03\x02\x02\x02\u0799\u079A\x03\x02\x02\x02\u079A\u079C\x03\x02" +
        "\x02\x02\u079B\u0799\x03\x02\x02\x02\u079C\u079D\x07\x04\x02\x02\u079D" +
        "e\x03\x02\x02\x02\u079E\u079F\x07,\x02\x02\u079F\u07A3\x05\u0470\u0239" +
        "\x02\u07A0\u07A4\x05\x0E\b\x02\u07A1\u07A4\x05\u048A\u0246\x02\u07A2\u07A4" +
        "\x05\u0484\u0243\x02\u07A3\u07A0\x03\x02\x02\x02\u07A3\u07A1\x03\x02\x02" +
        "\x02\u07A3\u07A2\x03\x02\x02\x02\u07A4\u07A6\x03\x02\x02\x02\u07A5\u07A7" +
        "\x05\u046E\u0238\x02\u07A6\u07A5\x03\x02\x02\x02\u07A6\u07A7\x03\x02\x02" +
        "\x02\u07A7\u07A8\x03\x02\x02\x02\u07A8\u07A9\x07\x04\x02\x02\u07A9g\x03" +
        "\x02\x02\x02\u07AA\u07AB\x07-\x02\x02\u07AB\u07AE\x05\u0470\u0239\x02" +
        "\u07AC\u07AF\x05\u0614\u030B\x02\u07AD\u07AF\x05\u0632\u031A\x02\u07AE" +
        "\u07AC\x03\x02\x02\x02\u07AE\u07AD\x03\x02\x02\x02\u07AF\u07B5\x03\x02" +
        "\x02\x02\u07B0\u07B4\x05\x96L\x02\u07B1\u07B4\x05\u01AC\xD7\x02\u07B2" +
        "\u07B4\x05\u0472\u023A\x02\u07B3\u07B0\x03\x02\x02\x02\u07B3\u07B1\x03" +
        "\x02\x02\x02\u07B3\u07B2\x03\x02\x02\x02\u07B4\u07B7\x03\x02\x02\x02\u07B5" +
        "\u07B3\x03\x02\x02\x02\u07B5\u07B6\x03\x02\x02\x02\u07B6\u07B8\x03\x02" +
        "\x02\x02\u07B7\u07B5\x03\x02\x02\x02\u07B8\u07B9\x07\x04\x02\x02\u07B9" +
        "i\x03\x02\x02\x02\u07BA\u07BB\x07.\x02\x02\u07BB\u07BD\x05\u031C\u018F" +
        "\x02\u07BC\u07BE\x05\u031E\u0190\x02\u07BD\u07BC\x03\x02\x02\x02\u07BD" +
        "\u07BE\x03\x02\x02\x02\u07BE\u07BF\x03\x02\x02\x02\u07BF\u07C0\x07\x04" +
        "\x02\x02\u07C0k\x03\x02\x02\x02\u07C1\u07C2\x07/\x02\x02\u07C2\u07C3\x05" +
        "\u0624\u0313\x02\u07C3\u07C4\x07\x04\x02\x02\u07C4m\x03\x02\x02\x02\u07C5" +
        "\u07C6\x070\x02\x02\u07C6\u07C7\x07\x04\x02\x02\u07C7o\x03\x02\x02\x02" +
        "\u07C8\u07CD\x071\x02\x02\u07C9\u07CE\x05\x1E\x10\x02\u07CA\u07CE\x05" +
        "\u02B6\u015C\x02\u07CB\u07CE\x05\u02C0\u0161\x02\u07CC\u07CE\x05\u02C2" +
        "\u0162\x02\u07CD\u07C9\x03\x02\x02\x02\u07CD\u07CA\x03\x02\x02\x02\u07CD" +
        "\u07CB\x03\x02\x02\x02\u07CD\u07CC\x03\x02\x02\x02\u07CE\u07CF\x03\x02" +
        "\x02\x02\u07CF\u07D0\x07\x04\x02\x02\u07D0q\x03\x02\x02\x02\u07D1\u07D2" +
        "\x072\x02\x02\u07D2\u07D3\x05\xF4{\x02\u07D3\u07D4\x07\x04\x02\x02\u07D4" +
        "s\x03\x02\x02\x02\u07D5\u07D9\x073\x02\x02\u07D6\u07DA\x05\x0E\b\x02\u07D7" +
        "\u07DA\x05\u048A\u0246\x02\u07D8\u07DA\x05\u0484\u0243\x02\u07D9\u07D6" +
        "\x03\x02\x02\x02\u07D9\u07D7\x03\x02\x02\x02\u07D9\u07D8\x03\x02\x02\x02" +
        "\u07DA\u07DB\x03\x02\x02\x02\u07DB\u07DC\x07\x04\x02\x02\u07DCu\x03\x02" +
        "\x02\x02\u07DD\u07DE\x074\x02\x02\u07DE\u07DF\x05\u0478\u023D\x02\u07DF" +
        "\u07E0\x05\u047A\u023E\x02\u07E0\u07E1\x07\x04\x02\x02\u07E1w\x03\x02" +
        "\x02\x02\u07E2\u07E3\x075\x02\x02\u07E3\u07E4\x05\x88E\x02\u07E4\u07E5" +
        "\x05\u02B0\u0159\x02\u07E5\u07F4\x05\x84C\x02\u07E6\u07F3\x05\u0552\u02AA" +
        "\x02\u07E7\u07F3\x05\u056A\u02B6\x02\u07E8\u07F3\x05,\x17\x02\u07E9\u07F3" +
        "\x05z>\x02\u07EA\u07F3\x05\x96L\x02\u07EB\u07F3\x05\xD2j\x02\u07EC\u07F3" +
        "\x05\u010A\x86\x02\u07ED\u07F3\x05\u0638\u031D\x02\u07EE\u07F3\x05\u0338" +
        "\u019D\x02\u07EF\u07F3\x05\u034C\u01A7\x02\u07F0\u07F3\x05\u0402\u0202" +
        "\x02\u07F1\u07F3\x05\u05E6\u02F4\x02\u07F2\u07E6\x03\x02\x02\x02\u07F2" +
        "\u07E7\x03\x02\x02\x02\u07F2\u07E8\x03\x02\x02\x02\u07F2\u07E9\x03\x02" +
        "\x02\x02\u07F2\u07EA\x03\x02\x02\x02\u07F2\u07EB\x03\x02\x02\x02\u07F2" +
        "\u07EC\x03\x02\x02\x02\u07F2\u07ED\x03\x02\x02\x02\u07F2\u07EE\x03\x02" +
        "\x02\x02\u07F2\u07EF\x03\x02\x02\x02\u07F2\u07F0\x03\x02\x02\x02\u07F2" +
        "\u07F1\x03\x02\x02\x02\u07F3\u07F6\x03\x02\x02\x02\u07F4\u07F2\x03\x02" +
        "\x02\x02\u07F4\u07F5\x03\x02\x02\x02\u07F5\u07F7\x03\x02\x02\x02\u07F6" +
        "\u07F4\x03\x02\x02\x02\u07F7\u07F8\x07\x04\x02\x02\u07F8y\x03\x02\x02" +
        "\x02\u07F9\u07FA\x076\x02\x02\u07FA\u07FE\x05~@\x02\u07FB\u07FF\x05\u0658" +
        "\u032D\x02\u07FC\u07FF\x05\u0302\u0182\x02\u07FD\u07FF\x05\u061A\u030E" +
        "\x02\u07FE\u07FB\x03\x02\x02\x02\u07FE\u07FC\x03\x02\x02\x02\u07FE\u07FD" +
        "\x03\x02\x02\x02\u07FF\u0809\x03\x02\x02\x02\u0800\u0808\x05\x96L\x02" +
        "\u0801\u0808\x05\u01D8\xED\x02\u0802\u0808\x05\u020C\u0107\x02\u0803\u0808" +
        "\x05\u0376\u01BC\x02\u0804\u0808\x05\u0258\u012D\x02\u0805\u0808\x05\u0462" +
        "\u0232\x02\u0806\u0808\x05\u0638\u031D\x02\u0807\u0800\x03\x02\x02\x02" +
        "\u0807\u0801\x03\x02\x02\x02\u0807\u0802\x03\x02\x02\x02\u0807\u0803\x03" +
        "\x02\x02\x02\u0807\u0804\x03\x02\x02\x02\u0807\u0805\x03\x02\x02\x02\u0807" +
        "\u0806\x03\x02\x02\x02\u0808\u080B\x03\x02\x02\x02\u0809\u0807\x03\x02" +
        "\x02\x02\u0809\u080A\x03\x02\x02\x02\u080A\u080C\x03\x02\x02\x02\u080B" +
        "\u0809\x03\x02\x02\x02\u080C\u080D\x07\x04\x02\x02\u080D{\x03\x02\x02" +
        "\x02\u080E\u080F\x077\x02\x02\u080F\u0810\x05J&\x02\u0810\u0811\x07\x04" +
        "\x02\x02\u0811}\x03\x02\x02\x02\u0812\u0813\x05\u0370\u01B9\x02\u0813" +
        "\x7F\x03\x02\x02\x02\u0814\u0815\x05\u037A\u01BE\x02\u0815\x81\x03\x02" +
        "\x02\x02\u0816\u0817\x078\x02\x02\u0817\u0818\x05\x80A\x02\u0818\u0819" +
        "\x07\x04\x02\x02\u0819\x83\x03\x02\x02\x02\u081A\u0821\x079\x02\x02\u081B" +
        "\u0820\x05\u0142\xA2\x02\u081C\u0820\x05\u0376\u01BC\x02\u081D\u0820\x05" +
        "\u0462\u0232\x02\u081E\u0820\x05\u05BA\u02DE\x02\u081F\u081B\x03\x02\x02" +
        "\x02\u081F\u081C\x03\x02\x02\x02\u081F\u081D\x03\x02\x02\x02\u081F\u081E" +
        "\x03\x02\x02\x02\u0820\u0823\x03\x02\x02\x02\u0821\u081F\x03\x02\x02\x02" +
        "\u0821\u0822\x03\x02\x02\x02\u0822\u0824\x03\x02\x02\x02\u0823\u0821\x03" +
        "\x02\x02\x02\u0824\u0825\x07\x04\x02\x02\u0825\x85\x03\x02\x02\x02\u0826" +
        "\u0827\x07:\x02\x02\u0827\u0828\x05J&\x02\u0828\u0829\x07\x04\x02\x02" +
        "\u0829\x87\x03\x02\x02\x02\u082A\u082B\x05\u0370\u01B9\x02\u082B\x89\x03" +
        "\x02\x02\x02\u082C\u082D\x05\u037A\u01BE\x02\u082D\x8B\x03\x02\x02\x02" +
        "\u082E\u082F\x07;\x02\x02\u082F\u0834\x05\u0470\u0239\x02\u0830\u0833" +
        "\x05\u0134\x9B\x02\u0831\u0833\x05\u046E\u0238\x02\u0832\u0830\x03\x02" +
        "\x02\x02\u0832\u0831\x03\x02\x02\x02\u0833\u0836\x03\x02\x02\x02\u0834" +
        "\u0832\x03\x02\x02\x02\u0834\u0835\x03\x02\x02\x02\u0835\u0837\x03\x02" +
        "\x02\x02\u0836\u0834\x03\x02\x02\x02\u0837\u0838\x07\x04\x02\x02\u0838" +
        "\x8D\x03\x02\x02\x02\u0839\u083A\x07<\x02\x02\u083A\u083E\x05\u0470\u0239" +
        "\x02\u083B\u083F\x05\x0E\b\x02\u083C\u083F\x05\u048A\u0246\x02\u083D\u083F" +
        "\x05\u0484\u0243\x02\u083E\u083B\x03\x02\x02\x02\u083E\u083C\x03\x02\x02" +
        "\x02\u083E\u083D\x03\x02\x02\x02\u083F\u0841\x03\x02\x02\x02\u0840\u0842" +
        "\x05\u046E\u0238\x02\u0841\u0840\x03\x02\x02\x02\u0841\u0842\x03\x02\x02" +
        "\x02\u0842\u0843\x03\x02\x02\x02\u0843\u0844\x07\x04\x02\x02\u0844\x8F" +
        "\x03\x02\x02\x02\u0845\u0846\x07=\x02\x02\u0846\u0849\x05\u0470\u0239" +
        "\x02\u0847\u084A\x05\u0614\u030B\x02\u0848\u084A\x05\u0632\u031A\x02\u0849" +
        "\u0847\x03\x02\x02\x02\u0849\u0848\x03\x02\x02\x02\u084A\u0850\x03\x02" +
        "\x02\x02\u084B\u084F\x05\x96L\x02\u084C\u084F\x05\u01AC\xD7\x02\u084D" +
        "\u084F\x05\u0472\u023A\x02\u084E\u084B\x03\x02\x02\x02\u084E\u084C\x03" +
        "\x02\x02\x02\u084E\u084D\x03\x02\x02\x02\u084F\u0852\x03\x02\x02\x02\u0850" +
        "\u084E\x03\x02\x02\x02\u0850\u0851\x03\x02\x02\x02\u0851\u0853\x03\x02" +
        "\x02\x02\u0852\u0850\x03\x02\x02\x02\u0853\u0854\x07\x04\x02\x02\u0854" +
        "\x91\x03\x02\x02\x02\u0855\u0856\x07>\x02\x02\u0856\u0858\x05\x8AF\x02" +
        "\u0857\u0859\x05j6\x02\u0858\u0857\x03\x02\x02\x02\u0858\u0859\x03\x02" +
        "\x02\x02\u0859\u085A\x03\x02\x02\x02\u085A\u085B\x07\x04\x02\x02\u085B" +
        "\x93\x03\x02\x02\x02\u085C\u085D\x07?\x02\x02\u085D\u085E\x05\u0482\u0242" +
        "\x02\u085E\u085F\x05\u020E\u0108\x02\u085F\u0860\x056\x1C\x02\u0860\u0861" +
        "\x07\x04\x02\x02\u0861\x95\x03\x02\x02\x02\u0862\u0866\x07@\x02\x02\u0863" +
        "\u0865\x05\u0680\u0341\x02\u0864\u0863\x03\x02\x02\x02\u0865\u0868\x03" +
        "\x02\x02\x02\u0866\u0864\x03\x02\x02\x02\u0866\u0867\x03\x02\x02\x02\u0867" +
        "\u0869\x03\x02\x02\x02\u0868\u0866\x03\x02\x02\x02\u0869\u086A\x07\x04" +
        "\x02\x02\u086A\x97\x03\x02\x02\x02\u086B\u0874\x07A\x02\x02\u086C\u0873" +
        "\x05\x16\f\x02\u086D\u0873\x05\x96L\x02\u086E\u0873\x05\u0198\xCD\x02" +
        "\u086F\u0873\x05\u03AE\u01D8\x02\u0870\u0873\x05\u0464\u0233\x02\u0871" +
        "\u0873\x05\u0638\u031D\x02\u0872\u086C\x03\x02\x02\x02\u0872\u086D\x03" +
        "\x02\x02\x02\u0872\u086E\x03\x02\x02\x02\u0872\u086F\x03\x02\x02\x02\u0872" +
        "\u0870\x03\x02\x02\x02\u0872\u0871\x03\x02\x02\x02\u0873\u0876\x03\x02" +
        "\x02\x02\u0874\u0872\x03\x02\x02\x02\u0874\u0875\x03\x02\x02\x02\u0875" +
        "\u0877\x03\x02\x02\x02\u0876\u0874\x03\x02\x02\x02\u0877\u0878\x07\x04" +
        "\x02\x02\u0878\x99\x03\x02\x02\x02\u0879\u087A\x07B\x02\x02\u087A\u087B" +
        "\x05\u0680\u0341\x02\u087B\u087C\x07\x04\x02\x02\u087C\x9B\x03\x02\x02" +
        "\x02\u087D\u0881\x07C\x02\x02\u087E\u0882\x05\x0E\b\x02\u087F\u0882\x05" +
        "\u048A\u0246\x02\u0880\u0882\x05\u0484\u0243\x02\u0881\u087E\x03\x02\x02" +
        "\x02\u0881\u087F\x03\x02\x02\x02\u0881\u0880\x03\x02\x02\x02\u0882\u0883" +
        "\x03\x02\x02\x02\u0883\u0884\x07\x04\x02\x02\u0884\x9D\x03\x02\x02\x02" +
        "\u0885\u088C\x07D\x02\x02\u0886\u088B\x05\xA0Q\x02\u0887\u088B\x05\u0372" +
        "\u01BA\x02\u0888\u088B\x05\u0378\u01BD\x02\u0889\u088B\x05\u05B6\u02DC" +
        "\x02\u088A\u0886\x03\x02\x02\x02\u088A\u0887\x03\x02\x02\x02\u088A\u0888" +
        "\x03\x02\x02\x02\u088A\u0889\x03\x02\x02\x02\u088B\u088E\x03\x02\x02\x02" +
        "\u088C\u088A\x03\x02\x02\x02\u088C\u088D\x03\x02\x02\x02\u088D\u088F\x03" +
        "\x02\x02\x02\u088E\u088C\x03\x02\x02\x02\u088F\u0890\x07\x04\x02\x02\u0890" +
        "\x9F\x03\x02\x02\x02\u0891\u0897\x07E\x02\x02\u0892\u0896\x05\xA0Q\x02" +
        "\u0893\u0896\x05\u0378\u01BD\x02\u0894\u0896\x05\u05B6\u02DC\x02\u0895" +
        "\u0892\x03\x02\x02\x02\u0895\u0893\x03\x02\x02\x02\u0895\u0894\x03\x02" +
        "\x02\x02\u0896\u0899\x03\x02\x02\x02\u0897\u0895\x03\x02\x02\x02\u0897" +
        "\u0898\x03\x02\x02\x02\u0898\u089A\x03\x02\x02\x02\u0899\u0897\x03\x02" +
        "\x02\x02\u089A\u089B\x07\x04\x02\x02\u089B\xA1\x03\x02\x02\x02\u089C\u089D" +
        "\x07F\x02\x02\u089D\u089E\x05\u01F4\xFB\x02\u089E\u089F\x05\u060C\u0307" +
        "\x02\u089F\u08A0\x07\x04\x02\x02\u08A0\xA3\x03\x02\x02\x02\u08A1\u08A8" +
        "\x07G\x02\x02\u08A2\u08A7\x05\xA0Q\x02\u08A3\u08A7\x05\u0372\u01BA\x02" +
        "\u08A4\u08A7\x05\u0378\u01BD\x02\u08A5\u08A7\x05\u05B6\u02DC\x02\u08A6" +
        "\u08A2\x03\x02\x02\x02\u08A6\u08A3\x03\x02\x02\x02\u08A6\u08A4\x03\x02" +
        "\x02\x02\u08A6\u08A5\x03\x02\x02\x02\u08A7\u08AA\x03\x02\x02\x02\u08A8" +
        "\u08A6\x03\x02\x02\x02\u08A8\u08A9\x03\x02\x02\x02\u08A9\u08AB\x03\x02" +
        "\x02\x02\u08AA\u08A8\x03\x02\x02\x02\u08AB\u08AC\x07\x04\x02\x02\u08AC" +
        "\xA5\x03\x02\x02\x02\u08AD\u08B1\x07H\x02\x02\u08AE\u08B0\x05\u033C\u019F" +
        "\x02\u08AF\u08AE\x03\x02\x02\x02\u08B0\u08B3\x03\x02\x02\x02\u08B1\u08AF" +
        "\x03\x02\x02\x02\u08B1\u08B2\x03\x02\x02\x02\u08B2\u08B4\x03\x02\x02\x02" +
        "\u08B3\u08B1\x03\x02\x02\x02\u08B4\u08B5\x07\x04\x02\x02\u08B5\xA7\x03" +
        "\x02\x02\x02\u08B6\u08B7\x07I\x02\x02\u08B7\u08B8\x05@!\x02\u08B8\u08B9" +
        "\x07\x04\x02\x02\u08B9\xA9\x03\x02\x02\x02\u08BA\u08BE\x07J\x02\x02\u08BB" +
        "\u08BF\x05\x0E\b\x02\u08BC\u08BF\x05\u048A\u0246\x02\u08BD\u08BF\x05\u0484" +
        "\u0243\x02\u08BE\u08BB\x03\x02\x02\x02\u08BE\u08BC\x03\x02\x02\x02\u08BE" +
        "\u08BD\x03\x02\x02\x02\u08BF\u08C0\x03\x02\x02\x02\u08C0\u08C1\x07\x04" +
        "\x02\x02\u08C1\xAB\x03\x02\x02\x02\u08C2\u08C3\x07K\x02\x02\u08C3\u08C4" +
        "\x05\u0280\u0141\x02\u08C4\u08C5\x07\x04\x02\x02\u08C5\xAD\x03\x02\x02" +
        "\x02\u08C6\u08CA\x07L\x02\x02\u08C7\u08CB\x05\x0E\b\x02\u08C8\u08CB\x05" +
        "\u048A\u0246\x02\u08C9\u08CB\x05\u0484\u0243\x02\u08CA\u08C7\x03\x02\x02" +
        "\x02\u08CA\u08C8\x03\x02\x02\x02\u08CA\u08C9\x03\x02\x02\x02\u08CB\u08CC" +
        "\x03\x02\x02\x02\u08CC\u08CD\x07\x04\x02\x02\u08CD\xAF\x03\x02\x02\x02" +
        "\u08CE\u08CF\x07M\x02\x02\u08CF\u08D0\x05\u02A4\u0153\x02\u08D0\u08D1" +
        "\x05\u05A2\u02D2\x02\u08D1\u08D2\x05\u02A0\u0151\x02\u08D2\u08D9\x05\xB2" +
        "Z\x02\u08D3\u08D8\x05\x96L\x02\u08D4\u08D8\x05\xB4[\x02\u08D5\u08D8\x05" +
        "\xC8e\x02\u08D6\u08D8\x05\u0638\u031D\x02\u08D7\u08D3\x03\x02\x02\x02" +
        "\u08D7\u08D4\x03\x02\x02\x02\u08D7\u08D5\x03\x02\x02\x02\u08D7\u08D6\x03" +
        "\x02\x02\x02\u08D8\u08DB\x03\x02\x02\x02\u08D9\u08D7\x03\x02\x02\x02\u08D9" +
        "\u08DA\x03\x02\x02\x02\u08DA\u08DC\x03\x02\x02\x02\u08DB\u08D9\x03\x02" +
        "\x02\x02\u08DC\u08DD\x07\x04\x02\x02\u08DD\xB1\x03\x02\x02\x02\u08DE\u08DF" +
        "\x07N\x02\x02\u08DF\u08E3\x05\u0430\u0219\x02\u08E0\u08E2\x05\xC4c\x02" +
        "\u08E1\u08E0\x03\x02\x02\x02\u08E2\u08E5\x03\x02\x02\x02\u08E3\u08E1\x03" +
        "\x02\x02\x02\u08E3\u08E4\x03\x02\x02\x02\u08E4\u08E6\x03\x02\x02\x02\u08E5" +
        "\u08E3\x03\x02\x02\x02\u08E6\u08E7\x07\x04\x02\x02\u08E7\xB3\x03\x02\x02" +
        "\x02\u08E8\u08E9\x07O\x02\x02\u08E9\u08EA\x05\u02A4\u0153\x02\u08EA\u08EB" +
        "\x05\u05A2\u02D2\x02\u08EB\u08EC\x05\u02A0\u0151\x02\u08EC\u08F3\x05\xB2" +
        "Z\x02\u08ED\u08F2\x05\x96L\x02\u08EE\u08F2\x05\xB4[\x02\u08EF\u08F2\x05" +
        "\xC8e\x02\u08F0\u08F2\x05\u0638\u031D\x02\u08F1\u08ED\x03\x02\x02\x02" +
        "\u08F1\u08EE\x03\x02\x02\x02\u08F1\u08EF\x03\x02\x02\x02\u08F1\u08F0\x03" +
        "\x02\x02\x02\u08F2\u08F5\x03\x02\x02\x02\u08F3\u08F1\x03\x02\x02\x02\u08F3" +
        "\u08F4\x03\x02\x02\x02\u08F4\u08F6\x03\x02\x02\x02\u08F5\u08F3\x03\x02" +
        "\x02\x02\u08F6\u08F7\x07\x04\x02\x02\u08F7\xB5\x03\x02\x02\x02\u08F8\u08F9" +
        "\x07P\x02\x02\u08F9\u08FA\x05\xB8]\x02\u08FA\u0904\x05\u01E0\xF1\x02\u08FB" +
        "\u0903\x05\x96L\x02\u08FC\u0903\x05\xB0Y\x02\u08FD\u0903\x05\xB6\\\x02" +
        "\u08FE\u0903\x05\xBA^\x02\u08FF\u0903\x05\xBE`\x02\u0900\u0903\x05\u05FC" +
        "\u02FF\x02\u0901\u0903\x05\u0638\u031D\x02\u0902\u08FB\x03\x02\x02\x02" +
        "\u0902\u08FC\x03\x02\x02\x02\u0902\u08FD\x03\x02\x02\x02\u0902\u08FE\x03" +
        "\x02\x02\x02\u0902\u08FF\x03\x02\x02\x02\u0902\u0900\x03\x02\x02\x02\u0902" +
        "\u0901\x03\x02\x02\x02\u0903\u0906\x03\x02\x02\x02\u0904\u0902\x03\x02" +
        "\x02\x02\u0904\u0905\x03\x02\x02\x02\u0905\u0907\x03\x02\x02\x02\u0906" +
        "\u0904\x03\x02\x02\x02\u0907\u0908\x07\x04\x02\x02\u0908\xB7\x03\x02\x02" +
        "\x02\u0909\u090A\x05\u0370\u01B9\x02\u090A\xB9\x03\x02\x02\x02\u090B\u090C" +
        "\x07Q\x02\x02\u090C\u090D\x05\u02A4\u0153\x02\u090D\u090E\x05\u05B2\u02DA" +
        "\x02\u090E\u090F\x05\u02A0\u0151\x02\u090F\u0915\x05\xBC_\x02\u0910\u0914" +
        "\x05\x96L\x02\u0911\u0914\x05\xCAf\x02\u0912\u0914\x05\u0638\u031D\x02" +
        "\u0913\u0910\x03\x02\x02\x02\u0913\u0911\x03\x02\x02\x02\u0913\u0912\x03" +
        "\x02\x02\x02\u0914\u0917\x03\x02\x02\x02\u0915\u0913\x03\x02\x02\x02\u0915" +
        "\u0916\x03\x02\x02\x02\u0916\u0918\x03\x02\x02\x02\u0917\u0915\x03\x02" +
        "\x02\x02\u0918\u0919\x07\x04\x02\x02\u0919\xBB\x03\x02\x02\x02\u091A\u091D" +
        "\x07R\x02\x02\u091B\u091E\x05\u0430\u0219\x02\u091C\u091E\x05\u02C4\u0163" +
        "\x02\u091D\u091B\x03\x02\x02\x02\u091D\u091C\x03\x02\x02\x02\u091E\u0922" +
        "\x03\x02\x02\x02\u091F\u0921\x05\xC4c\x02\u0920\u091F\x03\x02\x02\x02" +
        "\u0921\u0924\x03\x02\x02\x02\u0922\u0920\x03\x02\x02\x02\u0922\u0923\x03" +
        "\x02\x02\x02\u0923\u0925\x03\x02\x02\x02\u0924\u0922\x03\x02\x02\x02\u0925" +
        "\u0926\x07\x04\x02\x02\u0926\xBD\x03\x02\x02\x02\u0927\u0928\x07S\x02" +
        "\x02\u0928\u0929\x05\xC0a\x02\u0929\u092A\x07\x04\x02\x02\u092A\xBF\x03" +
        "\x02\x02\x02\u092B\u092C\x05\u0370\u01B9\x02\u092C\xC1\x03\x02\x02\x02" +
        "\u092D\u092E\x05\u037A\u01BE\x02\u092E\xC3\x03\x02\x02\x02\u092F\u0930" +
        "\x07T\x02\x02\u0930\u0931\x05\xC2b\x02\u0931\u0932\x07\x04\x02\x02\u0932" +
        "\xC5\x03\x02\x02\x02\u0933\u093E\x07U\x02\x02\u0934\u093D\x05\x96L\x02" +
        "\u0935\u093D\x05\xB0Y\x02\u0936\u093D\x05\xB6\\\x02\u0937\u093D\x05\xBA" +
        "^\x02\u0938\u093D\x05\xBE`\x02\u0939\u093D\x05\u0322\u0192\x02\u093A\u093D" +
        "\x05\u05FC\u02FF\x02\u093B\u093D\x05\u0638\u031D\x02\u093C\u0934\x03\x02" +
        "\x02\x02\u093C\u0935\x03\x02\x02\x02\u093C\u0936\x03\x02\x02\x02\u093C" +
        "\u0937\x03\x02\x02\x02\u093C\u0938\x03\x02\x02\x02\u093C\u0939\x03\x02" +
        "\x02\x02\u093C\u093A\x03\x02\x02\x02\u093C\u093B\x03\x02\x02\x02\u093D" +
        "\u0940\x03\x02\x02\x02\u093E\u093C\x03\x02\x02\x02\u093E\u093F\x03\x02" +
        "\x02\x02\u093F\u0941\x03\x02\x02\x02\u0940\u093E\x03\x02\x02\x02\u0941" +
        "\u0942\x07\x04\x02\x02\u0942\xC7\x03\x02\x02\x02\u0943\u0944\x07V\x02" +
        "\x02\u0944\u0945\x05\u02A4\u0153\x02\u0945\u0946\x05\u02A0\u0151\x02\u0946" +
        "\u094D\x05\xB2Z\x02\u0947\u094C\x05\x96L\x02\u0948\u094C\x05\xB4[\x02" +
        "\u0949\u094C\x05\xC8e\x02\u094A\u094C\x05\u0638\u031D\x02\u094B\u0947" +
        "\x03\x02\x02\x02\u094B\u0948\x03\x02\x02\x02\u094B\u0949\x03\x02\x02\x02" +
        "\u094B\u094A\x03\x02\x02\x02\u094C\u094F\x03\x02\x02\x02\u094D\u094B\x03" +
        "\x02\x02\x02\u094D\u094E\x03\x02\x02\x02\u094E\u0950\x03\x02\x02\x02\u094F" +
        "\u094D\x03\x02\x02\x02\u0950\u0951\x07\x04\x02\x02\u0951\xC9\x03\x02\x02" +
        "\x02\u0952\u0953\x07W\x02\x02\u0953\u0954\x05\u02A4\u0153\x02\u0954\u0955" +
        "\x05\u02A0\u0151\x02\u0955\u095B\x05\xBC_\x02\u0956\u095A\x05\x96L\x02" +
        "\u0957\u095A\x05\xCAf\x02\u0958\u095A\x05\u0638\u031D\x02\u0959\u0956" +
        "\x03\x02\x02\x02\u0959\u0957\x03\x02\x02\x02\u0959\u0958\x03\x02\x02\x02" +
        "\u095A\u095D\x03\x02\x02\x02\u095B\u0959\x03\x02\x02\x02\u095B\u095C\x03" +
        "\x02\x02\x02\u095C\u095E\x03\x02\x02\x02\u095D\u095B\x03\x02\x02\x02\u095E" +
        "\u095F\x07\x04\x02\x02\u095F\xCB\x03\x02\x02\x02\u0960\u0961\x07X\x02" +
        "\x02\u0961\u0962\x05\u05C8\u02E5\x02\u0962\u0963\x07\x04\x02\x02\u0963" +
        "\xCD\x03\x02\x02\x02\u0964\u0968\x07Y\x02\x02\u0965\u0967\x05\u0134\x9B" +
        "\x02\u0966\u0965\x03\x02\x02\x02\u0967\u096A\x03\x02\x02\x02\u0968\u0966" +
        "\x03\x02\x02\x02\u0968\u0969\x03\x02\x02\x02\u0969\u096B\x03\x02\x02\x02" +
        "\u096A\u0968\x03\x02\x02\x02\u096B\u096C\x07\x04\x02\x02\u096C\xCF\x03" +
        "\x02\x02\x02\u096D\u0970\x07Z\x02\x02\u096E\u0971\x05\u0584\u02C3\x02" +
        "\u096F\u0971\x05\u058C\u02C7\x02\u0970\u096E\x03\x02\x02\x02\u0970\u096F" +
        "\x03\x02\x02\x02\u0970\u0971\x03\x02\x02\x02\u0971\u0972\x03\x02\x02\x02" +
        "\u0972\u0973\x07\x04\x02\x02\u0973\xD1\x03\x02\x02\x02\u0974\u0975\x07" +
        "[\x02\x02\u0975\u0976\x05\u064E\u0328\x02\u0976\u0977\x05\xD4k\x02\u0977" +
        "\u0978\x05\u032C\u0197\x02\u0978\u097D\x05\xC6d\x02\u0979\u097C\x05\x96" +
        "L\x02\u097A\u097C\x05\u0638\u031D\x02\u097B\u0979\x03\x02\x02\x02\u097B" +
        "\u097A\x03\x02\x02\x02\u097C\u097F\x03\x02\x02\x02\u097D\u097B\x03\x02" +
        "\x02\x02\u097D\u097E\x03\x02\x02\x02\u097E\u0980\x03\x02\x02\x02\u097F" +
        "\u097D\x03\x02\x02\x02\u0980\u0981\x07\x04\x02\x02\u0981\xD3\x03\x02\x02" +
        "\x02\u0982\u0983\x07\\\x02\x02\u0983\u098C\x05\xD0i\x02\u0984\u098B\x05" +
        "\u0116\x8C\x02\u0985\u098B\x05\u0142\xA2\x02\u0986\u098B\x05\u0376\u01BC" +
        "\x02\u0987\u098B\x05\u045C\u022F\x02\u0988\u098B\x05\u0462\u0232\x02\u0989" +
        "\u098B\x05\u05BA\u02DE\x02\u098A\u0984\x03\x02\x02\x02\u098A\u0985\x03" +
        "\x02\x02\x02\u098A\u0986\x03\x02\x02\x02\u098A\u0987\x03\x02\x02\x02\u098A" +
        "\u0988\x03\x02\x02\x02\u098A\u0989\x03\x02\x02\x02\u098B\u098E\x03\x02" +
        "\x02\x02\u098C\u098A\x03\x02\x02\x02\u098C\u098D\x03\x02\x02\x02\u098D" +
        "\u098F\x03\x02\x02\x02\u098E\u098C\x03\x02\x02\x02\u098F\u0990\x07\x04" +
        "\x02\x02\u0990\xD5\x03\x02\x02\x02\u0991\u0992\x05\u0370\u01B9\x02\u0992" +
        "\xD7\x03\x02\x02\x02\u0993\u0994\x05\u037A\u01BE\x02\u0994\xD9\x03\x02" +
        "\x02\x02\u0995\u099B\x07]\x02\x02\u0996\u099A\x05<\x1F\x02\u0997\u099A" +
        "\x05\u027A\u013E\x02\u0998\u099A\x05\u05C2\u02E2\x02\u0999\u0996\x03\x02" +
        "\x02\x02\u0999\u0997\x03\x02\x02\x02\u0999\u0998\x03\x02\x02\x02\u099A" +
        "\u099D\x03\x02\x02\x02\u099B\u0999\x03\x02\x02\x02\u099B\u099C\x03\x02" +
        "\x02\x02\u099C\u099E\x03\x02\x02\x02\u099D\u099B\x03\x02\x02\x02\u099E" +
        "\u099F\x07\x04\x02\x02\u099F\xDB\x03\x02\x02\x02\u09A0\u09A1\x07^\x02" +
        "\x02\u09A1\u09A2\x05\u0680\u0341\x02\u09A2\u09A3\x07\x04\x02\x02\u09A3" +
        "\xDD\x03\x02\x02\x02\u09A4\u09A8\x07_\x02\x02\u09A5\u09A9\x05\x0E\b\x02" +
        "\u09A6\u09A9\x05\u048A\u0246\x02\u09A7\u09A9\x05\u0484\u0243\x02\u09A8" +
        "\u09A5\x03\x02\x02\x02\u09A8\u09A6\x03\x02\x02\x02\u09A8\u09A7\x03\x02" +
        "\x02\x02\u09A9\u09AA\x03\x02\x02\x02\u09AA\u09AB\x07\x04\x02\x02\u09AB" +
        "\xDF\x03\x02\x02\x02\u09AC\u09AD\x07`\x02\x02\u09AD\u09B1\x05\u0678\u033D" +
        "\x02\u09AE\u09B0\x05\u0680\u0341\x02\u09AF\u09AE\x03\x02\x02\x02\u09B0" +
        "\u09B3\x03\x02\x02\x02\u09B1\u09AF\x03\x02\x02\x02\u09B1\u09B2\x03\x02" +
        "\x02\x02\u09B2\u09B4\x03\x02\x02\x02\u09B3\u09B1\x03\x02\x02\x02\u09B4" +
        "\u09B5\x07\x04\x02\x02\u09B5\xE1\x03\x02\x02\x02\u09B6\u09BA\x07a\x02" +
        "\x02\u09B7\u09BB\x05\x0E\b\x02\u09B8\u09BB\x05\u048A\u0246\x02\u09B9\u09BB" +
        "\x05\u0484\u0243\x02\u09BA\u09B7\x03\x02\x02\x02\u09BA\u09B8\x03\x02\x02" +
        "\x02\u09BA\u09B9\x03\x02\x02\x02\u09BB\u09BC\x03\x02\x02\x02\u09BC\u09BD" +
        "\x07\x04\x02\x02\u09BD\xE3\x03\x02\x02\x02\u09BE\u09C2\x07b\x02\x02\u09BF" +
        "\u09C3\x05\u0612\u030A\x02\u09C0\u09C3\x05\u049C\u024F\x02\u09C1\u09C3" +
        "\x05\u0178\xBD\x02\u09C2\u09BF\x03\x02\x02\x02\u09C2\u09C0\x03\x02\x02" +
        "\x02\u09C2\u09C1\x03\x02\x02\x02\u09C3\u09C4\x03\x02\x02\x02\u09C4\u09C5" +
        "\x07\x04\x02\x02\u09C5\xE5\x03\x02\x02\x02\u09C6\u09C7\x07c\x02\x02\u09C7" +
        "\u09C8\x05\u0624\u0313\x02\u09C8\u09C9\x07\x04\x02\x02\u09C9\xE7\x03\x02" +
        "\x02\x02\u09CA\u09CB\x07d\x02\x02\u09CB\u09CC\x05\u0292\u014A\x02\u09CC" +
        "\u09CD\x07\x04\x02\x02\u09CD\xE9\x03\x02\x02\x02\u09CE\u09D2\x07e\x02" +
        "\x02\u09CF\u09D1\x05\u0134\x9B\x02\u09D0\u09CF\x03\x02\x02\x02\u09D1\u09D4" +
        "\x03\x02\x02\x02\u09D2\u09D0\x03\x02\x02\x02\u09D2\u09D3\x03\x02\x02\x02" +
        "\u09D3\u09D5\x03\x02\x02\x02\u09D4\u09D2\x03\x02\x02\x02\u09D5\u09D6\x07" +
        "\x04\x02\x02\u09D6\xEB\x03\x02\x02\x02\u09D7\u09D8\x07f\x02\x02\u09D8" +
        "\u09D9\x05\xEEx\x02\u09D9\u09DA\x07\x04\x02\x02\u09DA\xED\x03\x02\x02" +
        "\x02\u09DB\u09DC\x05\u035A\u01AE\x02\u09DC\xEF\x03\x02\x02\x02\u09DD\u09E2" +
        "\x07g\x02\x02\u09DE\u09E1\x05\x1C\x0F\x02\u09DF\u09E1\x05\u0412\u020A" +
        "\x02\u09E0\u09DE\x03\x02\x02\x02\u09E0\u09DF\x03\x02\x02\x02\u09E1\u09E4" +
        "\x03\x02\x02\x02\u09E2\u09E0\x03\x02\x02\x02\u09E2\u09E3\x03\x02\x02\x02" +
        "\u09E3\u09E5\x03\x02\x02\x02\u09E4\u09E2\x03\x02\x02\x02\u09E5\u09E6\x07" +
        "\x04\x02\x02\u09E6\xF1\x03\x02\x02\x02\u09E7\u09E8\x07h\x02\x02\u09E8" +
        "\u09EA\x05\u0680\u0341\x02\u09E9\u09EB\x05\u063C\u031F\x02\u09EA\u09E9" +
        "\x03\x02\x02\x02\u09EA\u09EB\x03\x02\x02\x02\u09EB\u09EC\x03\x02\x02\x02" +
        "\u09EC\u09ED\x07\x04\x02\x02\u09ED\xF3\x03\x02\x02\x02\u09EE\u09EF\x07" +
        "i\x02\x02\u09EF\u09F0\x05\u067A\u033E\x02\u09F0\u09F1\x05\u0366\u01B4" +
        "\x02\u09F1\u09F2\x05\xF6|\x02\u09F2\u09F3\x07\x04\x02\x02\u09F3\xF5\x03" +
        "\x02\x02\x02\u09F4\u09F5\x05\u067E\u0340\x02\u09F5\xF7\x03\x02\x02\x02" +
        "\u09F6\u09F7\x07j\x02\x02\u09F7\u09F8\x05\u039C\u01CF\x02\u09F8\u09F9" +
        "\x07\x04\x02\x02\u09F9\xF9\x03\x02\x02\x02\u09FA\u09FE\x07k\x02\x02\u09FB" +
        "\u09FF\x05\x0E\b\x02\u09FC\u09FF\x05\u048A\u0246\x02\u09FD\u09FF\x05\u0484" +
        "\u0243\x02\u09FE\u09FB\x03\x02\x02\x02\u09FE\u09FC\x03\x02\x02\x02\u09FE" +
        "\u09FD\x03\x02\x02\x02\u09FF\u0A00\x03\x02\x02\x02\u0A00\u0A01\x07\x04" +
        "\x02\x02\u0A01\xFB\x03\x02\x02\x02\u0A02\u0A03\x07l\x02\x02\u0A03\u0A04" +
        "\x05\u039C\u01CF\x02\u0A04\u0A05\x07\x04\x02\x02\u0A05\xFD\x03\x02\x02" +
        "\x02\u0A06\u0A0A\x07m\x02\x02\u0A07\u0A0B\x05\x0E\b\x02\u0A08\u0A0B\x05" +
        "\u048A\u0246\x02\u0A09\u0A0B\x05\u0484\u0243\x02\u0A0A\u0A07\x03\x02\x02" +
        "\x02\u0A0A\u0A08\x03\x02\x02\x02\u0A0A\u0A09\x03\x02\x02\x02\u0A0B\u0A0C" +
        "\x03\x02\x02\x02\u0A0C\u0A0D\x07\x04\x02\x02\u0A0D\xFF\x03\x02\x02\x02" +
        "\u0A0E\u0A0F\x07n\x02\x02\u0A0F\u0A10\x05\u039C\u01CF\x02\u0A10\u0A11" +
        "\x07\x04\x02\x02\u0A11\u0101\x03\x02\x02\x02\u0A12\u0A16\x07o\x02\x02" +
        "\u0A13\u0A17\x05\x0E\b\x02\u0A14\u0A17\x05\u048A\u0246\x02\u0A15\u0A17" +
        "\x05\u0484\u0243\x02\u0A16\u0A13\x03\x02\x02\x02\u0A16\u0A14\x03\x02\x02" +
        "\x02\u0A16\u0A15\x03\x02\x02\x02\u0A17\u0A18\x03\x02\x02\x02\u0A18\u0A19" +
        "\x07\x04\x02\x02\u0A19\u0103\x03\x02\x02\x02\u0A1A\u0A1B\x07p\x02\x02" +
        "\u0A1B\u0A1C\x05\u039C\u01CF\x02\u0A1C\u0A1D\x07\x04\x02\x02\u0A1D\u0105" +
        "\x03\x02\x02\x02\u0A1E\u0A22\x07q\x02\x02\u0A1F\u0A23\x05\x0E\b\x02\u0A20" +
        "\u0A23\x05\u048A\u0246\x02\u0A21\u0A23\x05\u0484\u0243\x02\u0A22\u0A1F" +
        "\x03\x02\x02\x02\u0A22\u0A20\x03\x02\x02\x02\u0A22\u0A21\x03\x02\x02\x02" +
        "\u0A23\u0A24\x03\x02\x02\x02\u0A24\u0A25\x07\x04\x02\x02\u0A25\u0107\x03" +
        "\x02\x02\x02\u0A26\u0A27\x07r\x02\x02\u0A27\u0A29\x05\u0280\u0141\x02" +
        "\u0A28\u0A2A\x05\u0356\u01AC\x02\u0A29\u0A28\x03\x02\x02\x02\u0A29\u0A2A" +
        "\x03\x02\x02\x02\u0A2A\u0A2B\x03\x02\x02\x02\u0A2B\u0A2C\x07\x04\x02\x02" +
        "\u0A2C\u0109\x03\x02\x02\x02\u0A2D\u0A2E\x07s\x02\x02\u0A2E\u0A2F\x05" +
        "\x80A\x02\u0A2F\u0A30\x07\x04\x02\x02\u0A30\u010B\x03\x02\x02\x02\u0A31" +
        "\u0A32\x07t\x02\x02\u0A32\u0A33\x05\u020A\u0106\x02\u0A33\u0A34\x07\x04" +
        "\x02\x02\u0A34\u010D\x03\x02\x02\x02\u0A35\u0A36\x07u\x02\x02\u0A36\u0A37" +
        "\x05\u0624\u0313\x02\u0A37\u0A38\x07\x04\x02\x02\u0A38\u010F\x03\x02\x02" +
        "\x02\u0A39\u0A3A\x07v\x02\x02\u0A3A\u0A3B\x05\u05F4\u02FB\x02\u0A3B\u0A3C" +
        "\x07\x04\x02\x02\u0A3C\u0111\x03\x02\x02\x02\u0A3D\u0A3E\x05\u0292\u014A" +
        "\x02\u0A3E\u0113\x03\x02\x02\x02\u0A3F\u0A43\x05V,\x02\u0A40\u0A43\x05" +
        "\u034E\u01A8\x02\u0A41\u0A43\x05\u048C\u0247\x02\u0A42\u0A3F\x03\x02\x02" +
        "\x02\u0A42\u0A40\x03\x02\x02\x02\u0A42\u0A41\x03\x02\x02\x02\u0A43\u0115" +
        "\x03\x02\x02\x02\u0A44\u0A45\x07w\x02\x02\u0A45\u0A47\x05\u0658\u032D" +
        "\x02";
    EDIF300Parser._serializedATNSegment6 = "\u0A46\u0A48\x05\u047E\u0240\x02\u0A47\u0A46\x03\x02\x02\x02\u0A47\u0A48" +
        "\x03\x02\x02\x02\u0A48\u0A49\x03\x02\x02\x02\u0A49\u0A4A\x07\x04\x02\x02" +
        "\u0A4A\u0117\x03\x02\x02\x02\u0A4B\u0A4C\x07x\x02\x02\u0A4C\u0A4D\x05" +
        "\u012A\x96\x02\u0A4D\u0A4E\x05j6\x02\u0A4E\u0A54\x05\u011E\x90\x02\u0A4F" +
        "\u0A53\x05\x96L\x02\u0A50\u0A53\x05\u0120\x91\x02\u0A51\u0A53\x05\u0638" +
        "\u031D\x02\u0A52\u0A4F\x03\x02\x02\x02\u0A52\u0A50\x03\x02\x02\x02\u0A52" +
        "\u0A51\x03\x02\x02\x02\u0A53\u0A56\x03\x02\x02\x02\u0A54\u0A52\x03\x02" +
        "\x02\x02\u0A54\u0A55\x03\x02\x02\x02\u0A55\u0A57\x03\x02\x02\x02\u0A56" +
        "\u0A54\x03\x02\x02\x02\u0A57\u0A58\x07\x04\x02\x02\u0A58\u0119\x03\x02" +
        "\x02\x02\u0A59\u0A5A\x07y\x02\x02\u0A5A\u0A5B\x05\u05D6\u02EC\x02\u0A5B" +
        "\u0A5C\x07\x04\x02\x02\u0A5C\u011B\x03\x02\x02\x02\u0A5D\u0A61\x07z\x02" +
        "\x02\u0A5E\u0A62\x05\x0E\b\x02\u0A5F\u0A62\x05\u048A\u0246\x02\u0A60\u0A62" +
        "\x05\u0484\u0243\x02\u0A61\u0A5E\x03\x02\x02\x02\u0A61\u0A5F\x03\x02\x02" +
        "\x02\u0A61\u0A60\x03\x02\x02\x02\u0A62\u0A63\x03\x02\x02\x02\u0A63\u0A64" +
        "\x07\x04\x02\x02\u0A64\u011D\x03\x02\x02\x02\u0A65\u0A66\x07{\x02\x02" +
        "\u0A66\u0A6D\x05\u012C\x97\x02\u0A67\u0A6C\x05\u0142\xA2\x02\u0A68\u0A6C" +
        "\x05\u0376\u01BC\x02\u0A69\u0A6C\x05\u0462\u0232\x02\u0A6A\u0A6C\x05\u05BA" +
        "\u02DE\x02\u0A6B\u0A67\x03\x02\x02\x02\u0A6B\u0A68\x03\x02\x02\x02\u0A6B" +
        "\u0A69\x03\x02\x02\x02\u0A6B\u0A6A\x03\x02\x02\x02\u0A6C\u0A6F\x03\x02" +
        "\x02\x02\u0A6D\u0A6B\x03\x02\x02\x02\u0A6D\u0A6E\x03\x02\x02\x02\u0A6E" +
        "\u0A70\x03\x02\x02\x02\u0A6F\u0A6D\x03\x02\x02\x02\u0A70\u0A71\x07\x04" +
        "\x02\x02\u0A71\u011F\x03\x02\x02\x02\u0A72\u0A73\x07|\x02\x02\u0A73\u0A74" +
        "\x05\u0126\x94\x02\u0A74\u0A75\x05\x92J\x02\u0A75\u0A76\x05\x82B\x02\u0A76" +
        "\u0A78\x05\u0122\x92\x02\u0A77\u0A79\x05\u03A2\u01D2\x02\u0A78\u0A77\x03" +
        "\x02\x02\x02\u0A78\u0A79\x03\x02\x02\x02\u0A79\u0A7A\x03\x02\x02\x02\u0A7A" +
        "\u0A7B\x07\x04\x02\x02\u0A7B\u0121\x03\x02\x02\x02\u0A7C\u0A85\x07}\x02" +
        "\x02\u0A7D\u0A84\x05F$\x02\u0A7E\u0A84\x05\u0284\u0143\x02\u0A7F\u0A84" +
        "\x05\u0376\u01BC\x02\u0A80\u0A84\x05\u0396\u01CC\x02\u0A81\u0A84\x05\u0462" +
        "\u0232\x02\u0A82\u0A84\x05\u05CE\u02E8\x02\u0A83\u0A7D\x03\x02\x02\x02" +
        "\u0A83\u0A7E\x03\x02\x02\x02\u0A83\u0A7F\x03\x02\x02\x02\u0A83\u0A80\x03" +
        "\x02\x02\x02\u0A83\u0A81\x03\x02\x02\x02\u0A83\u0A82\x03\x02\x02\x02\u0A84" +
        "\u0A87\x03\x02\x02\x02\u0A85\u0A83\x03\x02\x02\x02\u0A85\u0A86\x03\x02" +
        "\x02\x02\u0A86\u0A88\x03\x02\x02\x02\u0A87\u0A85\x03\x02\x02\x02\u0A88" +
        "\u0A89\x07\x04\x02\x02\u0A89\u0123\x03\x02\x02\x02\u0A8A\u0A8B\x07~\x02" +
        "\x02\u0A8B\u0A8C\x05J&\x02\u0A8C\u0A8D\x07\x04\x02\x02\u0A8D\u0125\x03" +
        "\x02\x02\x02\u0A8E\u0A8F\x05\u0370\u01B9\x02\u0A8F\u0127\x03\x02\x02\x02" +
        "\u0A90\u0A91\x07\x7F\x02\x02\u0A91\u0A92\x05J&\x02\u0A92\u0A93\x07\x04" +
        "\x02\x02\u0A93\u0129\x03\x02\x02\x02\u0A94\u0A95\x05\u0370\u01B9\x02\u0A95" +
        "\u012B\x03\x02\x02\x02\u0A96\u0A9B\x07\x80\x02\x02\u0A97\u0A9A\x05\u0584" +
        "\u02C3\x02\u0A98\u0A9A\x05\u058C\u02C7\x02\u0A99\u0A97\x03\x02\x02\x02" +
        "\u0A99\u0A98\x03\x02\x02\x02\u0A9A\u0A9D\x03\x02\x02\x02\u0A9B\u0A99\x03" +
        "\x02\x02\x02\u0A9B\u0A9C\x03\x02\x02\x02\u0A9C\u0A9E\x03\x02\x02\x02\u0A9D" +
        "\u0A9B\x03\x02\x02\x02\u0A9E\u0A9F\x07\x04\x02\x02\u0A9F\u012D\x03\x02" +
        "\x02\x02\u0AA0\u0AA1\x07\x81\x02\x02\u0AA1\u0AA8\x05\u0130\x99\x02\u0AA2" +
        "\u0AA7\x05\x16\f\x02\u0AA3\u0AA7\x05\x96L\x02\u0AA4\u0AA7\x05\u0198\xCD" +
        "\x02\u0AA5\u0AA7\x05\u0638\u031D\x02\u0AA6\u0AA2\x03\x02\x02\x02\u0AA6" +
        "\u0AA3\x03\x02\x02\x02\u0AA6\u0AA4\x03\x02\x02\x02\u0AA6\u0AA5\x03\x02" +
        "\x02\x02\u0AA7\u0AAA\x03\x02\x02\x02\u0AA8\u0AA6\x03\x02\x02\x02\u0AA8" +
        "\u0AA9\x03\x02\x02\x02\u0AA9\u0AAB\x03\x02\x02\x02\u0AAA\u0AA8\x03\x02" +
        "\x02\x02\u0AAB\u0AAC\x07\x04\x02\x02\u0AAC\u012F\x03\x02\x02\x02\u0AAD" +
        "\u0AAE\x05\u0370\u01B9\x02\u0AAE\u0131\x03\x02\x02\x02\u0AAF\u0AB3\x07" +
        "\x82\x02\x02\u0AB0\u0AB4\x05\u0254\u012B\x02\u0AB1\u0AB4\x05\u03C0\u01E1" +
        "\x02\u0AB2\u0AB4\x052\x1A\x02\u0AB3\u0AB0\x03\x02\x02\x02\u0AB3\u0AB1" +
        "\x03\x02\x02\x02\u0AB3\u0AB2\x03\x02\x02\x02\u0AB4\u0AB5\x03\x02\x02\x02" +
        "\u0AB5\u0AB6\x07\x04\x02\x02\u0AB6\u0133\x03\x02\x02\x02\u0AB7\u0ABC\x07" +
        "\x83\x02\x02\u0AB8\u0ABB\x05\u01A0\xD1\x02\u0AB9\u0ABB\x05\u01A2\xD2\x02" +
        "\u0ABA\u0AB8\x03\x02\x02\x02\u0ABA\u0AB9\x03\x02\x02\x02\u0ABB\u0ABE\x03" +
        "\x02\x02\x02\u0ABC\u0ABA\x03\x02\x02\x02\u0ABC\u0ABD\x03\x02\x02\x02\u0ABD" +
        "\u0ABF\x03\x02\x02\x02\u0ABE\u0ABC\x03\x02\x02\x02\u0ABF\u0AC0\x05\u060C" +
        "\u0307\x02\u0AC0\u0AC1\x07\x04\x02\x02\u0AC1\u0135\x03\x02\x02\x02\u0AC2" +
        "\u0AD0\x07\x84\x02\x02\u0AC3\u0ACF\x05N(\x02\u0AC4\u0ACF\x05P)\x02\u0AC5" +
        "\u0ACF\x05R*\x02\u0AC6\u0ACF\x05\x94K\x02\u0AC7\u0ACF\x05\u01A4\xD3\x02" +
        "\u0AC8\u0ACF\x05\u01A6\xD4\x02\u0AC9\u0ACF\x05\u01C0\xE1\x02\u0ACA\u0ACF" +
        "\x05\u0214\u010B\x02\u0ACB\u0ACF\x05\u05EE\u02F8\x02\u0ACC\u0ACF\x05\u063E" +
        "\u0320\x02\u0ACD\u0ACF\x05\u065A\u032E\x02\u0ACE\u0AC3\x03\x02\x02\x02" +
        "\u0ACE\u0AC4\x03\x02\x02\x02\u0ACE\u0AC5\x03\x02\x02\x02\u0ACE\u0AC6\x03" +
        "\x02\x02\x02\u0ACE\u0AC7\x03\x02\x02\x02\u0ACE\u0AC8\x03\x02\x02\x02\u0ACE" +
        "\u0AC9\x03\x02\x02\x02\u0ACE\u0ACA\x03\x02\x02\x02\u0ACE\u0ACB\x03\x02" +
        "\x02\x02\u0ACE\u0ACC\x03\x02\x02\x02\u0ACE\u0ACD\x03\x02\x02\x02\u0ACF" +
        "\u0AD2\x03\x02\x02\x02\u0AD0\u0ACE\x03\x02\x02\x02\u0AD0\u0AD1\x03\x02" +
        "\x02\x02\u0AD1\u0AD3\x03\x02\x02\x02\u0AD2\u0AD0\x03\x02\x02\x02\u0AD3" +
        "\u0AD4\x07\x04\x02\x02\u0AD4\u0137\x03\x02\x02\x02\u0AD5\u0AD6\x07\x85" +
        "\x02\x02\u0AD6\u0AD7\x05\u0680\u0341\x02\u0AD7\u0AD8\x07\x04\x02\x02\u0AD8" +
        "\u0139\x03\x02\x02\x02\u0AD9\u0ADA\x07\x86\x02\x02\u0ADA\u0ADE\x05\u0680" +
        "\u0341\x02\u0ADB\u0ADF\x05\x0E\b\x02\u0ADC\u0ADF\x05\u048A\u0246\x02\u0ADD" +
        "\u0ADF\x05\u0484\u0243\x02\u0ADE\u0ADB\x03\x02\x02\x02\u0ADE\u0ADC\x03" +
        "\x02\x02\x02\u0ADE\u0ADD\x03\x02\x02\x02\u0ADF\u0AE0\x03\x02\x02\x02\u0AE0" +
        "\u0AE1\x07\x04\x02\x02\u0AE1\u013B\x03\x02\x02\x02\u0AE2\u0AE3\x05\u0292" +
        "\u014A\x02\u0AE3\u013D\x03\x02\x02\x02\u0AE4\u0AE5\x05\u0280\u0141\x02" +
        "\u0AE5\u013F\x03\x02\x02\x02\u0AE6\u0AE7\x05\u0280\u0141\x02\u0AE7\u0141" +
        "\x03\x02\x02\x02\u0AE8\u0AE9\x07\x87\x02\x02\u0AE9\u0AEA\x05\u0148\xA5" +
        "\x02\u0AEA\u0AEE\x05\u0144\xA3\x02\u0AEB\u0AED\x05\u057A\u02BE\x02\u0AEC" +
        "\u0AEB\x03\x02\x02\x02\u0AED\u0AF0\x03\x02\x02\x02\u0AEE\u0AEC\x03\x02" +
        "\x02\x02\u0AEE\u0AEF\x03\x02\x02\x02\u0AEF\u0AF1\x03\x02\x02\x02\u0AF0" +
        "\u0AEE\x03\x02\x02\x02\u0AF1\u0AF2\x07\x04\x02\x02\u0AF2\u0143\x03\x02" +
        "\x02\x02\u0AF3\u0AF4\x07\x88\x02\x02\u0AF4\u0AFA\x05\u014A\xA6\x02\u0AF5" +
        "\u0AF9\x05&\x14\x02\u0AF6\u0AF9\x05\u0376\u01BC\x02\u0AF7\u0AF9\x05\u05BA" +
        "\u02DE\x02\u0AF8\u0AF5\x03\x02\x02\x02\u0AF8\u0AF6\x03\x02\x02\x02\u0AF8" +
        "\u0AF7\x03\x02\x02\x02\u0AF9\u0AFC\x03\x02\x02\x02\u0AFA\u0AF8\x03\x02" +
        "\x02\x02\u0AFA\u0AFB\x03\x02\x02\x02\u0AFB\u0AFD\x03\x02\x02\x02\u0AFC" +
        "\u0AFA\x03\x02\x02\x02\u0AFD\u0AFE\x07\x04\x02\x02\u0AFE\u0145\x03\x02" +
        "\x02\x02\u0AFF\u0B00\x07\x89\x02\x02\u0B00\u0B01\x05J&\x02\u0B01\u0B02" +
        "\x07\x04\x02\x02\u0B02\u0147\x03\x02\x02\x02\u0B03\u0B04\x05\u0370\u01B9" +
        "\x02\u0B04\u0149\x03\x02\x02\x02\u0B05\u0B0A\x07\x8A\x02\x02\u0B06\u0B09" +
        "\x05\u0582\u02C2\x02\u0B07\u0B09\x05\u0588\u02C5\x02\u0B08\u0B06\x03\x02" +
        "\x02\x02\u0B08\u0B07\x03\x02\x02\x02\u0B09\u0B0C\x03\x02\x02\x02\u0B0A" +
        "\u0B08\x03\x02\x02\x02\u0B0A\u0B0B\x03\x02\x02\x02\u0B0B\u0B0D\x03\x02" +
        "\x02\x02\u0B0C\u0B0A\x03\x02\x02\x02\u0B0D\u0B0E\x07\x04\x02\x02\u0B0E" +
        "\u014B\x03\x02\x02\x02\u0B0F\u0B13\x07\x8B\x02\x02\u0B10\u0B12\x05\u033C" +
        "\u019F\x02\u0B11\u0B10\x03\x02\x02\x02\u0B12\u0B15\x03\x02\x02\x02\u0B13" +
        "\u0B11\x03\x02\x02\x02\u0B13\u0B14\x03\x02\x02\x02\u0B14\u0B16\x03\x02" +
        "\x02\x02\u0B15\u0B13\x03\x02\x02\x02\u0B16\u0B17\x07\x04\x02\x02\u0B17" +
        "\u014D\x03\x02\x02\x02\u0B18\u0B19\x07\x8C\x02\x02\u0B19\u0B1A\x05\u0412" +
        "\u020A\x02\u0B1A\u0B1B\x07\x04\x02\x02\u0B1B\u014F\x03\x02\x02\x02\u0B1C" +
        "\u0B1D\x07\x8D\x02\x02\u0B1D\u0B1E\x05\u0680\u0341\x02\u0B1E\u0B1F\x07" +
        "\x04\x02\x02\u0B1F\u0151\x03\x02\x02\x02\u0B20\u0B24\x07\x8E\x02\x02\u0B21" +
        "\u0B25\x05\x0E\b\x02\u0B22\u0B25\x05\u048A\u0246\x02\u0B23\u0B25\x05\u0484" +
        "\u0243\x02\u0B24\u0B21\x03\x02\x02\x02\u0B24\u0B22\x03\x02\x02\x02\u0B24" +
        "\u0B23\x03\x02\x02\x02\u0B25\u0B26\x03\x02\x02\x02\u0B26\u0B27\x07\x04" +
        "\x02\x02\u0B27\u0153\x03\x02\x02\x02\u0B28\u0B29\x07\x8F\x02\x02\u0B29" +
        "\u0B2A\x05\u0680\u0341\x02\u0B2A\u0B2B\x07\x04\x02\x02\u0B2B\u0155\x03" +
        "\x02\x02\x02\u0B2C\u0B30\x07\x90\x02\x02\u0B2D\u0B31\x05\x0E\b\x02\u0B2E" +
        "\u0B31\x05\u048A\u0246\x02\u0B2F\u0B31\x05\u0484\u0243\x02\u0B30\u0B2D" +
        "\x03\x02\x02\x02\u0B30\u0B2E\x03\x02\x02\x02\u0B30\u0B2F\x03\x02\x02\x02" +
        "\u0B31\u0B32\x03\x02\x02\x02\u0B32\u0B33\x07\x04\x02\x02\u0B33\u0157\x03" +
        "\x02\x02\x02\u0B34\u0B35\x07\x91\x02\x02\u0B35\u0B36\x05\u0680\u0341\x02" +
        "\u0B36\u0B37\x07\x04\x02\x02\u0B37\u0159\x03\x02\x02\x02\u0B38\u0B3C\x07" +
        "\x92\x02\x02\u0B39\u0B3D\x05\x0E\b\x02\u0B3A\u0B3D\x05\u048A\u0246\x02" +
        "\u0B3B\u0B3D\x05\u0484\u0243\x02\u0B3C\u0B39\x03\x02\x02\x02\u0B3C\u0B3A" +
        "\x03\x02\x02\x02\u0B3C\u0B3B\x03\x02\x02\x02\u0B3D\u0B3E\x03\x02\x02\x02" +
        "\u0B3E\u0B3F\x07\x04\x02\x02\u0B3F\u015B\x03\x02\x02\x02\u0B40\u0B41\x07" +
        "\x93\x02\x02\u0B41\u0B42\x05\u05FA\u02FE\x02\u0B42\u0B43\x07\x04\x02\x02" +
        "\u0B43\u015D\x03\x02\x02\x02\u0B44\u0B45\x07\x94\x02\x02\u0B45\u0B46\x05" +
        "\u0346\u01A4\x02\u0B46\u0B47\x05\u0176\xBC\x02\u0B47\u0B48\x07\x04\x02" +
        "\x02\u0B48\u015F\x03\x02\x02\x02\u0B49\u0B4A\x07\x95\x02\x02\u0B4A\u0B4B" +
        "\x05\u0168\xB5\x02\u0B4B\u0B4C\x05\u016A\xB6\x02\u0B4C\u0B54\x05\u0162" +
        "\xB2\x02\u0B4D\u0B53\x05\u030E\u0188\x02\u0B4E\u0B53\x05\u0118\x8D\x02" +
        "\u0B4F\u0B53\x05\x96L\x02\u0B50\u0B53\x05\u0190\xC9\x02\u0B51\u0B53\x05" +
        "\u0638\u031D\x02\u0B52\u0B4D\x03\x02\x02\x02\u0B52\u0B4E\x03\x02\x02\x02" +
        "\u0B52\u0B4F\x03\x02\x02\x02\u0B52\u0B50\x03\x02\x02\x02\u0B52\u0B51\x03" +
        "\x02\x02\x02\u0B53\u0B56\x03\x02\x02\x02\u0B54\u0B52\x03\x02\x02\x02\u0B54" +
        "\u0B55\x03\x02\x02\x02\u0B55\u0B57\x03\x02\x02\x02\u0B56\u0B54\x03\x02" +
        "\x02\x02\u0B57\u0B58\x07\x04\x02\x02\u0B58\u0161\x03\x02\x02\x02\u0B59" +
        "\u0B5A\x07\x96\x02\x02\u0B5A\u0B5B\x05\u0164\xB3\x02\u0B5B\u0B5C\x05\u02FE" +
        "\u0180\x02\u0B5C\u0B5D\x05\u0622\u0312\x02\u0B5D\u0B5E\x05\u01B2\xDA\x02" +
        "\u0B5E\u0B6A\x05\u0406\u0204\x02\u0B5F\u0B69\x05p9\x02\u0B60\u0B69\x05" +
        "\xDAn\x02\u0B61\u0B69\x05\u0142\xA2\x02\u0B62\u0B69\x05\u01FC\xFF\x02" +
        "\u0B63\u0B69\x05\u036E\u01B8\x02\u0B64\u0B69\x05\u0376\u01BC\x02\u0B65" +
        "\u0B69\x05\u0408\u0205\x02\u0B66\u0B69\x05\u0462\u0232\x02\u0B67\u0B69" +
        "\x05\u05BA\u02DE\x02\u0B68\u0B5F\x03\x02\x02\x02\u0B68\u0B60\x03\x02\x02" +
        "\x02\u0B68\u0B61\x03\x02\x02\x02\u0B68\u0B62\x03\x02\x02\x02\u0B68\u0B63" +
        "\x03\x02\x02\x02\u0B68\u0B64\x03\x02\x02\x02\u0B68\u0B65\x03\x02\x02\x02" +
        "\u0B68\u0B66\x03\x02\x02\x02\u0B68\u0B67\x03\x02\x02\x02\u0B69\u0B6C\x03" +
        "\x02\x02\x02\u0B6A\u0B68\x03\x02\x02\x02\u0B6A\u0B6B\x03\x02\x02\x02\u0B6B" +
        "\u0B6D\x03\x02\x02\x02\u0B6C\u0B6A\x03\x02\x02\x02\u0B6D\u0B6E\x07\x04" +
        "\x02\x02\u0B6E\u0163\x03\x02\x02\x02\u0B6F\u0B70\x07\x97\x02\x02\u0B70" +
        "\u0B71\x05\u0166\xB4\x02\u0B71\u0B72\x07\x04\x02\x02\u0B72\u0165\x03\x02" +
        "\x02\x02\u0B73\u0B74\x05\u067E\u0340\x02\u0B74\u0167\x03\x02\x02\x02\u0B75" +
        "\u0B76\x05\u0370\u01B9\x02\u0B76\u0169\x03\x02\x02\x02\u0B77\u0B78\x07" +
        "\x98\x02\x02\u0B78\u0B79\x05\u0348\u01A5\x02\u0B79\u0B7A\x05\u02BC\u015F" +
        "\x02\u0B7A\u0B7B\x05\u05DA\u02EE\x02\u0B7B\u0B7C\x07\x04\x02\x02\u0B7C" +
        "\u016B\x03\x02\x02\x02\u0B7D\u0B7E\x05\u0412\u020A\x02\u0B7E\u016D\x03" +
        "\x02\x02\x02\u0B7F\u0B83\x07\x99\x02\x02\u0B80\u0B84\x05\u0612\u030A\x02" +
        "\u0B81\u0B84\x05\u049C\u024F\x02\u0B82\u0B84\x05\u0178\xBD\x02\u0B83\u0B80" +
        "\x03\x02\x02\x02\u0B83\u0B81\x03\x02\x02\x02\u0B83\u0B82\x03\x02\x02\x02" +
        "\u0B84\u0B85\x03\x02\x02\x02\u0B85\u0B86\x07\x04\x02\x02\u0B86\u016F\x03" +
        "\x02\x02\x02\u0B87\u0B88\x07\x9A\x02\x02\u0B88\u0B89\x05\xF4{\x02\u0B89" +
        "\u0B8A\x07\x04\x02\x02\u0B8A\u0171\x03\x02\x02\x02\u0B8B\u0B8F\x07\x9B" +
        "\x02\x02\u0B8C\u0B90\x05\x0E\b\x02\u0B8D\u0B90\x05\u048A\u0246\x02\u0B8E" +
        "\u0B90\x05\u0484\u0243\x02\u0B8F\u0B8C\x03\x02\x02\x02\u0B8F\u0B8D\x03" +
        "\x02\x02\x02\u0B8F\u0B8E\x03\x02\x02\x02\u0B90\u0B91\x03\x02\x02\x02\u0B91" +
        "\u0B92\x07\x04\x02\x02\u0B92\u0173\x03\x02\x02\x02\u0B93\u0B99\x07\x9C" +
        "\x02\x02\u0B94\u0B9A\x05\u0452\u022A\x02\u0B95\u0B9A\x05\u0432\u021A\x02" +
        "\u0B96\u0B9A\x05\u0454\u022B\x02\u0B97\u0B9A\x05\u02AC\u0157\x02\u0B98" +
        "\u0B9A\x05\u02AE\u0158\x02\u0B99\u0B94\x03\x02\x02\x02\u0B99\u0B95\x03" +
        "\x02\x02\x02\u0B99\u0B96\x03\x02\x02\x02\u0B99\u0B97\x03\x02\x02\x02\u0B99" +
        "\u0B98\x03\x02\x02\x02\u0B9A\u0B9F\x03\x02\x02\x02\u0B9B\u0B9E\x05*\x16" +
        "\x02\u0B9C\u0B9E\x05\u060E\u0308\x02\u0B9D\u0B9B\x03\x02\x02\x02\u0B9D" +
        "\u0B9C\x03\x02\x02\x02\u0B9E\u0BA1\x03\x02\x02\x02\u0B9F\u0B9D\x03\x02" +
        "\x02\x02\u0B9F\u0BA0\x03\x02\x02\x02\u0BA0\u0BA2\x03\x02\x02\x02\u0BA1" +
        "\u0B9F\x03\x02\x02\x02\u0BA2\u0BA3\x07\x04\x02\x02\u0BA3\u0175\x03\x02" +
        "\x02\x02\u0BA4\u0BA5\x05\u067E\u0340\x02\u0BA5\u0177\x03\x02\x02\x02\u0BA6" +
        "\u0BA7\x07\x9D\x02\x02\u0BA7\u0BA8\x07\x04\x02\x02\u0BA8\u0179\x03\x02" +
        "\x02\x02\u0BA9\u0BAA\x05\u01D4\xEB\x02\u0BAA\u017B\x03\x02\x02\x02\u0BAB" +
        "\u0BAC\x05\u01DE\xF0\x02\u0BAC\u017D\x03\x02\x02\x02\u0BAD\u0BAE\x05\u0268" +
        "\u0135\x02\u0BAE\u017F\x03\x02\x02\x02\u0BAF\u0BB0\x05\u025C\u012F\x02" +
        "\u0BB0\u0181\x03\x02\x02\x02\u0BB1\u0BB2\x05\u02A8\u0155\x02\u0BB2\u0183" +
        "\x03\x02\x02\x02\u0BB3\u0BB4\x05\u03DA\u01EE\x02\u0BB4\u0185\x03\x02\x02" +
        "\x02\u0BB5\u0BB6\x05\u044A\u0226\x02\u0BB6\u0187\x03\x02\x02\x02\u0BB7" +
        "\u0BB8\x05\u043E\u0220\x02\u0BB8\u0189\x03\x02\x02\x02\u0BB9\u0BBA\x05" +
        "\u05B0\u02D9\x02\u0BBA\u018B\x03\x02\x02\x02\u0BBB\u0BBC\x05\u05A0\u02D1" +
        "\x02\u0BBC\u018D\x03\x02\x02\x02\u0BBD\u0BBE\x05\u05AA\u02D6\x02\u0BBE" +
        "\u018F\x03\x02\x02\x02\u0BBF\u0BC0\x07\x9E\x02\x02\u0BC0\u0BC1\x05\u0314" +
        "\u018B\x02\u0BC1\u0BD7\x05\u0310\u0189\x02\u0BC2\u0BD6\x05^0\x02\u0BC3" +
        "\u0BD6\x05\x96L\x02\u0BC4\u0BD6\x05\u01F0\xF9\x02\u0BC5\u0BD6\x05\u03CA" +
        "\u01E6\x02\u0BC6\u0BD6\x05\u03EA\u01F6\x02\u0BC7\u0BD6\x05\u04B2\u025A" +
        "\x02\u0BC8\u0BD6\x05\u04B8\u025D\x02\u0BC9\u0BD6\x05\u04C8\u0265\x02\u0BCA" +
        "\u0BD6\x05\u04CE\u0268\x02\u0BCB\u0BD6\x05\u04E4\u0273\x02\u0BCC\u0BD6" +
        "\x05\u04EC\u0277\x02\u0BCD\u0BD6\x05\u04F4\u027B\x02\u0BCE\u0BD6\x05\u0506" +
        "\u0284\x02\u0BCF\u0BD6\x05\u050E\u0288\x02\u0BD0\u0BD6\x05\u0514\u028B" +
        "\x02\u0BD1\u0BD6\x05\u0544\u02A3\x02\u0BD2\u0BD6\x05\u0556\u02AC\x02\u0BD3" +
        "\u0BD6\x05\u0560\u02B1\x02\u0BD4\u0BD6\x05\u0638\u031D\x02\u0BD5\u0BC2" +
        "\x03\x02\x02\x02\u0BD5\u0BC3\x03\x02\x02\x02\u0BD5\u0BC4\x03\x02\x02\x02" +
        "\u0BD5\u0BC5\x03\x02\x02\x02\u0BD5\u0BC6\x03\x02\x02\x02\u0BD5\u0BC7\x03" +
        "\x02\x02\x02\u0BD5\u0BC8\x03\x02\x02\x02\u0BD5\u0BC9\x03\x02\x02\x02\u0BD5" +
        "\u0BCA\x03\x02\x02\x02\u0BD5\u0BCB\x03\x02\x02\x02\u0BD5\u0BCC\x03\x02" +
        "\x02\x02\u0BD5\u0BCD\x03\x02\x02\x02\u0BD5\u0BCE\x03\x02\x02\x02\u0BD5" +
        "\u0BCF\x03\x02\x02\x02\u0BD5\u0BD0\x03\x02\x02\x02\u0BD5\u0BD1\x03\x02" +
        "\x02\x02\u0BD5\u0BD2\x03\x02\x02\x02\u0BD5\u0BD3\x03\x02\x02\x02\u0BD5" +
        "\u0BD4\x03\x02\x02\x02\u0BD6\u0BD9\x03\x02\x02\x02\u0BD7\u0BD5\x03\x02" +
        "\x02\x02\u0BD7\u0BD8\x03\x02\x02\x02\u0BD8\u0BDA\x03\x02\x02\x02\u0BD9" +
        "\u0BD7\x03\x02\x02\x02\u0BDA\u0BDB\x07\x04\x02\x02\u0BDB\u0191\x03\x02" +
        "\x02\x02\u0BDC\u0BDD\x07\x9F\x02\x02\u0BDD\u0BDE\x05\u0624\u0313\x02\u0BDE" +
        "\u0BDF\x07\x04\x02\x02\u0BDF\u0193\x03\x02\x02\x02\u0BE0\u0BE1\x07\xA0" +
        "\x02\x02\u0BE1\u0BE2\x07\x04\x02\x02\u0BE2\u0195\x03\x02\x02\x02\u0BE3" +
        "\u0BE4\x07\xA1\x02\x02\u0BE4\u0BE5\x05\u0624\u0313\x02\u0BE5\u0BE6\x07" +
        "\x04\x02\x02\u0BE6\u0197\x03\x02\x02\x02\u0BE7\u0BEA\x07\xA2\x02\x02\u0BE8" +
        "\u0BEB\x05\u01A0\xD1\x02\u0BE9\u0BEB\x05\u01A2\xD2\x02\u0BEA\u0BE8\x03" +
        "\x02\x02\x02\u0BEA\u0BE9\x03\x02\x02\x02\u0BEB\u0BF8\x03\x02\x02\x02\u0BEC" +
        "\u0BF7\x05v<\x02\u0BED\u0BF7\x05\x96L\x02\u0BEE\u0BF7\x05\xA2R\x02\u0BEF" +
        "\u0BF7\x05\u014E\xA8\x02\u0BF0\u0BF7\x05\u03A8\u01D5\x02\u0BF1\u0BF7\x05" +
        "\u03FA\u01FE\x02\u0BF2\u0BF7\x05\u0414\u020B\x02\u0BF3\u0BF7\x05\u0480" +
        "\u0241\x02\u0BF4\u0BF7\x05\u0590\u02C9\x02\u0BF5\u0BF7\x05\u0638\u031D" +
        "\x02\u0BF6\u0BEC\x03\x02\x02\x02\u0BF6\u0BED\x03\x02\x02\x02\u0BF6\u0BEE" +
        "\x03\x02\x02\x02\u0BF6\u0BEF\x03\x02\x02\x02\u0BF6\u0BF0\x03\x02\x02\x02" +
        "\u0BF6\u0BF1\x03\x02\x02\x02\u0BF6\u0BF2\x03\x02\x02\x02\u0BF6\u0BF3\x03" +
        "\x02\x02\x02\u0BF6\u0BF4\x03\x02\x02\x02\u0BF6\u0BF5\x03\x02\x02\x02\u0BF7" +
        "\u0BFA\x03\x02\x02\x02\u0BF8\u0BF6\x03\x02\x02\x02\u0BF8\u0BF9\x03\x02" +
        "\x02\x02\u0BF9\u0BFB\x03\x02\x02\x02\u0BFA\u0BF8\x03\x02\x02\x02\u0BFB" +
        "\u0BFC\x07\x04\x02\x02\u0BFC\u0199\x03\x02\x02\x02\u0BFD\u0BFE\x07\xA3" +
        "\x02\x02\u0BFE\u0C09\x05\u019E\xD0\x02\u0BFF\u0C08\x05\x96L\x02\u0C00" +
        "\u0C08\x05\xE4s\x02\u0C01\u0C08\x05\u0136\x9C\x02\u0C02\u0C08\x05\u016E" +
        "\xB8\x02\u0C03\u0C08\x05\u0376\u01BC\x02\u0C04\u0C08\x05\u03FE\u0200\x02" +
        "\u0C05\u0C08\x05\u0462\u0232\x02\u0C06\u0C08\x05\u0638\u031D\x02\u0C07" +
        "\u0BFF\x03\x02\x02\x02\u0C07\u0C00\x03\x02\x02\x02\u0C07\u0C01\x03\x02" +
        "\x02\x02\u0C07\u0C02\x03\x02\x02\x02\u0C07\u0C03\x03\x02\x02\x02\u0C07" +
        "\u0C04\x03\x02\x02\x02\u0C07\u0C05\x03\x02\x02\x02\u0C07\u0C06\x03\x02" +
        "\x02\x02\u0C08\u0C0B\x03\x02\x02\x02\u0C09\u0C07\x03\x02\x02\x02\u0C09" +
        "\u0C0A\x03\x02\x02\x02\u0C0A\u0C0C\x03\x02\x02\x02\u0C0B\u0C09\x03\x02" +
        "\x02\x02\u0C0C\u0C0D\x07\x04\x02\x02\u0C0D\u019B\x03\x02\x02\x02\u0C0E" +
        "\u0C0F\x07\xA4\x02\x02\u0C0F\u0C10\x05J&\x02\u0C10\u0C11\x07\x04\x02\x02" +
        "\u0C11\u019D\x03\x02\x02\x02\u0C12\u0C13\x05\u0370\u01B9\x02\u0C13\u019F" +
        "\x03\x02\x02\x02\u0C14\u0C15\x05\u037A\u01BE\x02\u0C15\u01A1\x03\x02\x02" +
        "\x02\u0C16\u0C17\x07\xA5\x02\x02\u0C17\u0C20\x05\u01A0\xD1\x02\u0C18\u0C1F" +
        "\x05\x96L\x02\u0C19\u0C1F\x05\xE4s\x02\u0C1A\u0C1F\x05\u0136\x9C\x02\u0C1B" +
        "\u0C1F\x05\u016E\xB8\x02\u0C1C\u0C1F\x05\u03FE\u0200\x02\u0C1D\u0C1F\x05" +
        "\u0472\u023A\x02\u0C1E\u0C18\x03\x02\x02\x02\u0C1E\u0C19\x03\x02\x02\x02" +
        "\u0C1E\u0C1A\x03\x02\x02\x02\u0C1E\u0C1B\x03\x02\x02\x02\u0C1E\u0C1C\x03" +
        "\x02\x02\x02\u0C1E\u0C1D\x03\x02\x02\x02\u0C1F\u0C22\x03\x02\x02\x02\u0C20" +
        "\u0C1E\x03\x02\x02\x02\u0C20\u0C21\x03\x02\x02\x02\u0C21\u0C23\x03\x02" +
        "\x02\x02\u0C22\u0C20\x03\x02\x02\x02\u0C23\u0C24\x07\x04\x02\x02\u0C24" +
        "\u01A3\x03\x02\x02\x02\u0C25\u0C26\x07\xA6\x02\x02\u0C26\u0C27\x05\u040A" +
        "\u0206\x02\u0C27\u0C28\x07\x04\x02\x02\u0C28\u01A5\x03\x02\x02\x02\u0C29" +
        "\u0C2A\x07\xA7\x02\x02\u0C2A\u0C2B\x05L\'\x02\u0C2B\u0C2C\x07\x04\x02" +
        "\x02\u0C2C\u01A7\x03\x02\x02\x02\u0C2D\u0C2E\x05\u0280\u0141\x02\u0C2E" +
        "\u01A9\x03\x02\x02\x02\u0C2F\u0C30\x05\u05C8\u02E5\x02\u0C30\u01AB\x03" +
        "\x02\x02\x02\u0C31\u0C32\x07\xA8\x02\x02\u0C32\u0C33\x07\x04\x02\x02\u0C33" +
        "\u01AD\x03\x02\x02\x02\u0C34\u0C35\x07\xA9\x02\x02\u0C35\u0C36\x05\u01BA" +
        "\xDE\x02\u0C36\u0C37\x05\u0616\u030C\x02\u0C37\u0C3F\x05\u01BE\xE0\x02" +
        "\u0C38\u0C3E\x058\x1D\x02\u0C39\u0C3E\x05\u02BE\u0160\x02\u0C3A\u0C3E" +
        "\x05\u0462\u0232\x02\u0C3B\u0C3E\x05\u0474\u023B\x02\u0C3C\u0C3E\x05\u0638" +
        "\u031D\x02\u0C3D\u0C38\x03\x02\x02\x02\u0C3D\u0C39\x03\x02\x02\x02\u0C3D" +
        "\u0C3A\x03\x02\x02\x02\u0C3D\u0C3B\x03\x02\x02\x02\u0C3D\u0C3C\x03\x02" +
        "\x02\x02\u0C3E\u0C41\x03\x02\x02\x02\u0C3F\u0C3D\x03\x02\x02\x02\u0C3F" +
        "\u0C40\x03\x02\x02\x02\u0C40\u0C42\x03\x02\x02\x02\u0C41\u0C3F\x03\x02" +
        "\x02\x02\u0C42\u0C43\x07\x04\x02\x02\u0C43\u01AF\x03\x02\x02\x02\u0C44" +
        "\u0C45\x07\xAA\x02\x02\u0C45\u0C46\x05\u0308\u0185\x02\u0C46\u0C47\x07" +
        "\x04\x02\x02\u0C47\u01B1\x03\x02\x02\x02\u0C48\u0C4A\x07\xAB\x02\x02\u0C49" +
        "\u0C4B\x05\u01C2\xE2\x02\u0C4A\u0C49\x03\x02\x02\x02\u0C4A\u0C4B\x03\x02" +
        "\x02\x02\u0C4B\u0C4C\x03\x02\x02\x02\u0C4C\u0C4D\x07\x04\x02\x02\u0C4D" +
        "\u01B3\x03\x02\x02\x02\u0C4E\u0C4F\x07\xAC\x02\x02\u0C4F\u0C50\x05\u0308" +
        "\u0185\x02\u0C50\u0C51\x07\x04\x02\x02\u0C51\u01B5\x03\x02\x02\x02\u0C52" +
        "\u0C53\x05\u0680\u0341\x02\u0C53\u01B7\x03\x02\x02\x02\u0C54\u0C55\x07" +
        "\xAD\x02\x02\u0C55\u0C56\x05\u0308\u0185\x02\u0C56\u0C57\x07\x04\x02\x02" +
        "\u0C57\u01B9\x03\x02\x02\x02\u0C58\u0C59\x05\u0370\u01B9\x02\u0C59\u01BB" +
        "\x03\x02\x02\x02\u0C5A\u0C5B\x05\u037A\u01BE\x02\u0C5B\u01BD\x03\x02\x02" +
        "\x02\u0C5C\u0C5D\x07\xAE\x02\x02\u0C5D\u0C5E\x05\u01B8\xDD\x02\u0C5E\u0C5F" +
        "\x05\u01B4\xDB\x02\u0C5F\u0C60\x05\u01B0\xD9\x02\u0C60\u0C61\x05\u01C4" +
        "\xE3\x02\u0C61\u0C62\x07\x04\x02\x02\u0C62\u01BF\x03\x02\x02\x02\u0C63" +
        "\u0C64\x07\xAF\x02\x02\u0C64\u0C65\x05\u01BC\xDF\x02\u0C65\u0C66\x07\x04" +
        "\x02\x02\u0C66\u01C1\x03\x02\x02\x02\u0C67\u0C68\x07\xB0\x02\x02\u0C68" +
        "\u0C6C\x05\u0588\u02C5\x02\u0C69\u0C6B\x05\u01AE\xD8\x02\u0C6A\u0C69\x03" +
        "\x02\x02\x02\u0C6B\u0C6E\x03\x02\x02\x02\u0C6C\u0C6A\x03\x02\x02\x02\u0C6C" +
        "\u0C6D\x03\x02\x02\x02\u0C6D\u0C6F\x03\x02\x02\x02\u0C6E\u0C6C\x03\x02" +
        "\x02\x02\u0C6F\u0C70\x07\x04\x02\x02\u0C70\u01C3\x03\x02\x02\x02\u0C71" +
        "\u0C72\x07\xB1\x02\x02\u0C72\u0C73\x05\u0308\u0185\x02\u0C73\u0C74\x07" +
        "\x04\x02\x02\u0C74\u01C5\x03\x02\x02\x02\u0C75\u0C76\x07\xB2\x02\x02\u0C76" +
        "\u0C7A\x05\u05F6\u02FC\x02\u0C77\u0C79\x05\u0174\xBB\x02\u0C78\u0C77\x03" +
        "\x02\x02\x02\u0C79\u0C7C\x03\x02\x02\x02\u0C7A\u0C78\x03\x02\x02\x02\u0C7A" +
        "\u0C7B\x03\x02\x02\x02\u0C7B\u0C7D\x03\x02\x02\x02\u0C7C\u0C7A\x03\x02" +
        "\x02\x02\u0C7D\u0C7E\x07\x04\x02\x02\u0C7E\u01C7\x03\x02\x02\x02\u0C7F" +
        "\u0C80\x07\xB3\x02\x02\u0C80\u0C81\x05\u01DC\xEF\x02\u0C81\u0C82\x05\u0486" +
        "\u0244\x02\u0C82\u0C83\x05\u01CC\xE7\x02\u0C83\u0C8B\x05\u032C\u0197\x02" +
        "\u0C84\u0C8A\x05\x96L\x02\u0C85\u0C8A\x05\u0142\xA2\x02\u0C86\u0C8A\x05" +
        "\u0376\u01BC\x02\u0C87\u0C8A\x05\u0462\u0232\x02\u0C88\u0C8A\x05\u0638" +
        "\u031D\x02\u0C89\u0C84\x03\x02\x02\x02\u0C89\u0C85\x03\x02\x02\x02\u0C89" +
        "\u0C86\x03\x02\x02\x02\u0C89\u0C87\x03\x02\x02\x02\u0C89\u0C88\x03\x02" +
        "\x02\x02\u0C8A\u0C8D\x03\x02\x02\x02\u0C8B\u0C89\x03\x02\x02\x02\u0C8B" +
        "\u0C8C\x03\x02\x02\x02\u0C8C\u0C8E\x03\x02\x02\x02\u0C8D\u0C8B\x03\x02" +
        "\x02\x02\u0C8E\u0C8F\x07\x04\x02\x02\u0C8F\u01C9\x03\x02\x02\x02\u0C90" +
        "\u0C91\x07\xB4\x02\x02\u0C91\u0C9B\x05\u017A\xBE\x02\u0C92\u0C9A\x05\x96" +
        "L\x02\u0C93\u0C9A\x05\u01CA\xE6\x02\u0C94\u0C9A\x05\u022E\u0118\x02\u0C95" +
        "\u0C9A\x05\u0294\u014B\x02\u0C96\u0C9A\x05\u0304\u0183\x02\u0C97\u0C9A" +
        "\x05\u03A0\u01D1\x02\u0C98\u0C9A\x05\u03B8\u01DD\x02\u0C99\u0C92\x03\x02" +
        "\x02\x02\u0C99\u0C93\x03\x02\x02\x02\u0C99\u0C94\x03\x02\x02\x02\u0C99" +
        "\u0C95\x03\x02\x02\x02\u0C99\u0C96\x03\x02\x02\x02\u0C99\u0C97\x03\x02" +
        "\x02\x02\u0C99\u0C98\x03\x02\x02\x02\u0C9A\u0C9D\x03\x02\x02\x02\u0C9B" +
        "\u0C99\x03\x02\x02\x02\u0C9B\u0C9C\x03\x02\x02\x02\u0C9C\u0C9E\x03\x02" +
        "\x02\x02\u0C9D\u0C9B\x03\x02\x02\x02\u0C9E\u0C9F\x07\x04\x02\x02\u0C9F" +
        "\u01CB\x03\x02\x02\x02\u0CA0\u0CA1\x07\xB5\x02\x02\u0CA1\u0CA7\x05\u0240" +
        "\u0121\x02\u0CA2\u0CA6\x05\u0246\u0124\x02\u0CA3\u0CA6\x05\u024A\u0126" +
        "\x02\u0CA4\u0CA6\x05\u0376\u01BC\x02\u0CA5\u0CA2\x03\x02\x02\x02\u0CA5" +
        "\u0CA3\x03\x02\x02\x02\u0CA5\u0CA4\x03\x02\x02\x02\u0CA6\u0CA9\x03\x02" +
        "\x02\x02\u0CA7\u0CA5\x03\x02\x02\x02\u0CA7\u0CA8\x03\x02\x02\x02\u0CA8" +
        "\u0CAA\x03\x02\x02\x02\u0CA9\u0CA7\x03\x02\x02\x02\u0CAA\u0CAB\x07\x04" +
        "\x02\x02\u0CAB\u01CD\x03\x02\x02\x02\u0CAC\u0CB3\x07\xB6\x02\x02\u0CAD" +
        "\u0CB2\x05\u023E\u0120\x02\u0CAE\u0CB2\x05\u0242\u0122\x02\u0CAF\u0CB2" +
        "\x05\u0248\u0125\x02\u0CB0\u0CB2\x05\u024C\u0127\x02\u0CB1\u0CAD\x03\x02" +
        "\x02\x02\u0CB1\u0CAE\x03\x02\x02\x02\u0CB1\u0CAF\x03\x02\x02\x02\u0CB1" +
        "\u0CB0\x03\x02\x02\x02\u0CB2\u0CB5\x03\x02\x02\x02\u0CB3\u0CB1\x03\x02" +
        "\x02\x02\u0CB3\u0CB4\x03\x02\x02\x02\u0CB4\u0CB6\x03\x02\x02\x02\u0CB5" +
        "\u0CB3\x03\x02\x02\x02\u0CB6\u0CB7\x07\x04\x02\x02\u0CB7\u01CF\x03\x02" +
        "\x02\x02\u0CB8\u0CB9\x07\xB7\x02\x02\u0CB9\u0CBA\x05J&\x02\u0CBA\u0CBB" +
        "\x07\x04\x02\x02\u0CBB\u01D1\x03\x02\x02\x02\u0CBC\u0CBD\x07\xB8\x02\x02" +
        "\u0CBD\u0CBE\x05\u0244\u0123\x02\u0CBE\u0CBF\x07\x04\x02\x02\u0CBF\u01D3" +
        "\x03\x02\x02\x02\u0CC0\u0CC1\x07\xB9\x02\x02\u0CC1\u0CC2\x05\u01DE\xF0" +
        "\x02\u0CC2\u0CC3\x05\u024E\u0128\x02\u0CC3\u0CC4\x07\x04\x02\x02\u0CC4" +
        "\u01D5\x03\x02\x02\x02\u0CC5\u0CC6\x07\xBA\x02\x02\u0CC6\u0CC7\x05\u01DE" +
        "\xF0\x02\u0CC7\u0CC8\x07\x04\x02\x02\u0CC8\u01D7\x03\x02\x02\x02\u0CC9" +
        "\u0CCA\x07\xBB\x02\x02\u0CCA\u0CCF\x05\u01DE\xF0\x02\u0CCB\u0CCE\x05\u01D8" +
        "\xED\x02\u0CCC\u0CCE\x05\u0258\u012D\x02\u0CCD\u0CCB\x03\x02\x02\x02\u0CCD" +
        "\u0CCC\x03\x02\x02\x02\u0CCE\u0CD1\x03\x02\x02\x02\u0CCF\u0CCD\x03\x02" +
        "\x02\x02\u0CCF\u0CD0\x03\x02\x02\x02\u0CD0\u0CD2\x03\x02\x02\x02\u0CD1" +
        "\u0CCF\x03\x02\x02\x02\u0CD2\u0CD3\x07\x04\x02\x02\u0CD3\u01D9\x03\x02" +
        "\x02\x02\u0CD4\u0CD5\x07\xBC\x02\x02\u0CD5\u0CD6\x05J&\x02\u0CD6\u0CD7" +
        "\x07\x04\x02\x02\u0CD7\u01DB\x03\x02\x02\x02\u0CD8\u0CD9\x05\u0370\u01B9" +
        "\x02\u0CD9\u01DD\x03\x02\x02\x02\u0CDA\u0CDB\x05\u037A\u01BE\x02\u0CDB" +
        "\u01DF\x03\x02\x02\x02\u0CDC\u0CDD\x07\xBD\x02\x02\u0CDD\u0CDE\x05\u01DE" +
        "\xF0\x02\u0CDE\u0CDF\x07\x04\x02\x02\u0CDF\u01E1\x03\x02\x02\x02\u0CE0" +
        "\u0CE1\x05\u035A\u01AE\x02\u0CE1\u01E3\x03\x02\x02\x02\u0CE2\u0CE3\x07" +
        "\xBE\x02\x02\u0CE3\u0CE4\x07\x04\x02\x02\u0CE4\u01E5\x03\x02\x02\x02\u0CE5" +
        "\u0CE6\x05\u067E\u0340\x02\u0CE6\u01E7\x03\x02\x02\x02\u0CE7\u0CE8\x07" +
        "\xBF\x02\x02\u0CE8\u0CE9\x07\x04\x02\x02\u0CE9\u01E9\x03\x02\x02\x02\u0CEA" +
        "\u0CEB\x07\xC0\x02\x02\u0CEB\u0CEC\x07\x04\x02\x02\u0CEC\u01EB\x03\x02" +
        "\x02\x02\u0CED\u0CEE\x07\xC1\x02\x02\u0CEE\u0CEF\x07\x04\x02\x02\u0CEF" +
        "\u01ED\x03\x02\x02\x02\u0CF0\u0CF1\x07\xC2\x02\x02\u0CF1\u0CF2";
    EDIF300Parser._serializedATNSegment7 = "\x07\x04\x02\x02\u0CF2\u01EF\x03\x02\x02\x02\u0CF3\u0CF4\x07\xC3\x02\x02" +
        "\u0CF4\u0CF5\x05\u031A\u018E\x02\u0CF5\u0D02\x05\u01F2\xFA\x02\u0CF6\u0D01" +
        "\x05v<\x02\u0CF7\u0D01\x05\x96L\x02\u0CF8\u0D01\x05\xA2R\x02\u0CF9\u0D01" +
        "\x05\u014E\xA8\x02\u0CFA\u0D01\x05\u03A8\u01D5\x02\u0CFB\u0D01\x05\u03FA" +
        "\u01FE\x02\u0CFC\u0D01\x05\u0414\u020B\x02\u0CFD\u0D01\x05\u0480\u0241" +
        "\x02\u0CFE\u0D01\x05\u0590\u02C9\x02\u0CFF\u0D01\x05\u0638\u031D\x02\u0D00" +
        "\u0CF6\x03\x02\x02\x02\u0D00\u0CF7\x03\x02\x02\x02\u0D00\u0CF8\x03\x02" +
        "\x02\x02\u0D00\u0CF9\x03\x02\x02\x02\u0D00\u0CFA\x03\x02\x02\x02\u0D00" +
        "\u0CFB\x03\x02\x02\x02\u0D00\u0CFC\x03\x02\x02\x02\u0D00\u0CFD\x03\x02" +
        "\x02\x02\u0D00\u0CFE\x03\x02\x02\x02\u0D00\u0CFF\x03\x02\x02\x02\u0D01" +
        "\u0D04\x03\x02\x02\x02\u0D02\u0D00\x03\x02\x02\x02\u0D02\u0D03\x03\x02" +
        "\x02\x02\u0D03\u0D05\x03\x02\x02\x02\u0D04\u0D02\x03\x02\x02\x02\u0D05" +
        "\u0D06\x07\x04\x02\x02\u0D06\u01F1\x03\x02\x02\x02\u0D07\u0D08\x07\xC4" +
        "\x02\x02\u0D08\u0D11\x05\u01F6\xFC\x02\u0D09\u0D10\x05&\x14\x02\u0D0A" +
        "\u0D10\x05\u0142\xA2\x02\u0D0B\u0D10\x05\u0376\u01BC\x02\u0D0C\u0D10\x05" +
        "\u03AE\u01D8\x02\u0D0D\u0D10\x05\u0462\u0232\x02\u0D0E\u0D10\x05\u05BA" +
        "\u02DE\x02\u0D0F\u0D09\x03\x02\x02\x02\u0D0F\u0D0A\x03\x02\x02\x02\u0D0F" +
        "\u0D0B\x03\x02\x02\x02\u0D0F\u0D0C\x03\x02\x02\x02\u0D0F\u0D0D\x03\x02" +
        "\x02\x02\u0D0F\u0D0E\x03\x02\x02\x02\u0D10\u0D13\x03\x02\x02\x02\u0D11" +
        "\u0D0F\x03\x02\x02\x02\u0D11\u0D12\x03\x02\x02\x02\u0D12\u0D14\x03\x02" +
        "\x02\x02\u0D13\u0D11\x03\x02\x02\x02\u0D14\u0D15\x07\x04\x02\x02\u0D15" +
        "\u01F3\x03\x02\x02\x02\u0D16\u0D17\x07\xC5\x02\x02\u0D17\u0D19\x05\u031C" +
        "\u018F\x02\u0D18\u0D1A\x05\u031E\u0190\x02\u0D19\u0D18\x03\x02\x02\x02" +
        "\u0D19\u0D1A\x03\x02\x02\x02\u0D1A\u0D1B\x03\x02\x02\x02\u0D1B\u0D1C\x07" +
        "\x04\x02\x02\u0D1C\u01F5\x03\x02\x02\x02\u0D1D\u0D1F\x07\xC6\x02\x02\u0D1E" +
        "\u0D20\x05\u0582\u02C2\x02\u0D1F\u0D1E\x03\x02\x02\x02\u0D1F\u0D20\x03" +
        "\x02\x02\x02\u0D20\u0D21\x03\x02\x02\x02\u0D21\u0D22\x07\x04\x02\x02\u0D22" +
        "\u01F7\x03\x02\x02\x02\u0D23\u0D24\x07\xC7\x02\x02\u0D24\u0D2C\x05\u0202" +
        "\u0102\x02\u0D25\u0D2B\x05\x96L\x02\u0D26\u0D2B\x05\u0376\u01BC\x02\u0D27" +
        "\u0D2B\x05\u0462\u0232\x02\u0D28\u0D2B\x05\u04C2\u0262\x02\u0D29\u0D2B" +
        "\x05\u0638\u031D\x02\u0D2A\u0D25\x03\x02\x02\x02\u0D2A\u0D26\x03\x02\x02" +
        "\x02\u0D2A\u0D27\x03\x02\x02\x02\u0D2A\u0D28\x03\x02\x02\x02\u0D2A\u0D29" +
        "\x03\x02\x02\x02\u0D2B\u0D2E\x03\x02\x02\x02\u0D2C\u0D2A\x03\x02\x02\x02" +
        "\u0D2C\u0D2D\x03\x02\x02\x02\u0D2D\u0D2F\x03\x02\x02\x02\u0D2E\u0D2C\x03" +
        "\x02\x02\x02\u0D2F\u0D30\x07\x04\x02\x02\u0D30\u01F9\x03\x02\x02\x02\u0D31" +
        "\u0D32\x07\xC8\x02\x02\u0D32\u0D33\x05\u0202\u0102\x02\u0D33\u0D3A\x05" +
        "\u01FE\u0100\x02\u0D34\u0D39\x05\x96L\x02\u0D35\u0D39\x05\u0376\u01BC" +
        "\x02\u0D36\u0D39\x05\u0462\u0232\x02\u0D37\u0D39\x05\u0638\u031D\x02\u0D38" +
        "\u0D34\x03\x02\x02\x02\u0D38\u0D35\x03\x02\x02\x02\u0D38\u0D36\x03\x02" +
        "\x02\x02\u0D38\u0D37\x03\x02\x02\x02\u0D39\u0D3C\x03\x02\x02\x02\u0D3A" +
        "\u0D38\x03\x02\x02\x02\u0D3A\u0D3B\x03\x02\x02\x02\u0D3B\u0D3D\x03\x02" +
        "\x02\x02\u0D3C\u0D3A\x03\x02\x02\x02\u0D3D\u0D3E\x07\x04\x02\x02\u0D3E" +
        "\u01FB\x03\x02\x02\x02\u0D3F\u0D44\x07\xC9\x02\x02\u0D40\u0D43\x05\u01F8" +
        "\xFD\x02\u0D41\u0D43\x05\u01FA\xFE\x02\u0D42\u0D40\x03\x02\x02\x02\u0D42" +
        "\u0D41\x03\x02\x02\x02\u0D43\u0D46\x03\x02\x02\x02\u0D44\u0D42\x03\x02" +
        "\x02\x02\u0D44\u0D45\x03\x02\x02\x02\u0D45\u0D47\x03\x02\x02\x02\u0D46" +
        "\u0D44\x03\x02\x02\x02\u0D47\u0D48\x07\x04\x02\x02\u0D48\u01FD\x03\x02" +
        "\x02\x02\u0D49\u0D4D\x07\xCA\x02\x02\u0D4A\u0D4C\x05\u020A\u0106\x02\u0D4B" +
        "\u0D4A\x03\x02\x02\x02\u0D4C\u0D4F\x03\x02\x02\x02\u0D4D\u0D4B\x03\x02" +
        "\x02\x02\u0D4D\u0D4E\x03\x02\x02\x02\u0D4E\u0D50\x03\x02\x02\x02\u0D4F" +
        "\u0D4D\x03\x02\x02\x02\u0D50\u0D51\x07\x04\x02\x02\u0D51\u01FF\x03\x02" +
        "\x02\x02\u0D52\u0D53\x07\xCB\x02\x02\u0D53\u0D54\x05J&\x02\u0D54\u0D55" +
        "\x07\x04\x02\x02\u0D55\u0201\x03\x02\x02\x02\u0D56\u0D57\x05\u0370\u01B9" +
        "\x02\u0D57\u0203\x03\x02\x02\x02\u0D58\u0D5D\x07\xCC\x02\x02\u0D59\u0D5C" +
        "\x05\u0134\x9B\x02\u0D5A\u0D5C\x05\u013A\x9E\x02\u0D5B\u0D59\x03\x02\x02" +
        "\x02\u0D5B\u0D5A\x03\x02\x02\x02\u0D5C\u0D5F\x03\x02\x02\x02\u0D5D\u0D5B" +
        "\x03\x02\x02\x02\u0D5D\u0D5E\x03\x02\x02\x02\u0D5E\u0D60\x03\x02\x02\x02" +
        "\u0D5F\u0D5D\x03\x02\x02\x02\u0D60\u0D61\x07\x04\x02\x02\u0D61\u0205\x03" +
        "\x02\x02\x02\u0D62\u0D63\x05\u037A\u01BE\x02\u0D63\u0207\x03\x02\x02\x02" +
        "\u0D64\u0D65\x07\xCD\x02\x02\u0D65\u0D6A\x05\u0470\u0239\x02\u0D66\u0D69" +
        "\x05\u0134\x9B\x02\u0D67\u0D69\x05\u046E\u0238\x02\u0D68\u0D66\x03\x02" +
        "\x02\x02\u0D68\u0D67\x03\x02\x02\x02\u0D69\u0D6C\x03\x02\x02\x02\u0D6A" +
        "\u0D68\x03\x02\x02\x02\u0D6A\u0D6B\x03\x02\x02\x02\u0D6B\u0D6D\x03\x02" +
        "\x02\x02\u0D6C\u0D6A\x03\x02\x02\x02\u0D6D\u0D6E\x07\x04\x02\x02\u0D6E" +
        "\u0209\x03\x02\x02\x02\u0D6F\u0D70\x07\xCE\x02\x02\u0D70\u0D71\x05\u0206" +
        "\u0104\x02\u0D71\u0D72\x07\x04\x02\x02\u0D72\u020B\x03\x02\x02\x02\u0D73" +
        "\u0D74\x07\xCF\x02\x02\u0D74\u0D75\x05\u0206\u0104\x02\u0D75\u0D76\x07" +
        "\x04\x02\x02\u0D76\u020D\x03\x02\x02\x02\u0D77\u0D78\x05\u04A0\u0251\x02" +
        "\u0D78\u020F\x03\x02\x02\x02\u0D79\u0D7A\x07\xD0\x02\x02\u0D7A\u0D7B\x05" +
        "\u0624\u0313\x02\u0D7B\u0D7C\x07\x04\x02\x02\u0D7C\u0211\x03\x02\x02\x02" +
        "\u0D7D\u0D7E\x07\xD1\x02\x02\u0D7E\u0D7F\x05\u0624\u0313\x02\u0D7F\u0D80" +
        "\x07\x04\x02\x02\u0D80\u0213\x03\x02\x02\x02\u0D81\u0D85\x07\xD2\x02\x02" +
        "\u0D82\u0D86\x05\u0306\u0184\x02\u0D83\u0D86\x05n8\x02\u0D84\u0D86\x05" +
        "\u0494\u024B\x02\u0D85\u0D82\x03\x02\x02\x02\u0D85\u0D83\x03\x02\x02\x02" +
        "\u0D85\u0D84\x03\x02\x02\x02\u0D86\u0D87\x03\x02\x02\x02\u0D87\u0D88\x07" +
        "\x04\x02\x02\u0D88\u0215\x03\x02\x02\x02\u0D89\u0D8A\x07\xD3\x02\x02\u0D8A" +
        "\u0D91\x05\u0412\u020A\x02\u0D8B\u0D90\x05\u0218\u010D\x02\u0D8C\u0D90" +
        "\x05\u0220\u0111\x02\u0D8D\u0D90\x05\u0376\u01BC\x02\u0D8E\u0D90\x05\u056E" +
        "\u02B8\x02\u0D8F\u0D8B\x03\x02\x02\x02\u0D8F\u0D8C\x03\x02\x02\x02\u0D8F" +
        "\u0D8D\x03\x02\x02\x02\u0D8F\u0D8E\x03\x02\x02\x02\u0D90\u0D93\x03\x02" +
        "\x02\x02\u0D91\u0D8F\x03\x02\x02\x02\u0D91\u0D92\x03\x02\x02\x02\u0D92" +
        "\u0D94\x03\x02\x02\x02\u0D93\u0D91\x03\x02\x02\x02\u0D94\u0D95\x07\x04" +
        "\x02\x02\u0D95\u0217\x03\x02\x02\x02\u0D96\u0D9D\x07\xD4\x02\x02\u0D97" +
        "\u0D9C\x05\u01E4\xF3\x02\u0D98\u0D9C\x05\u01E8\xF5\x02\u0D99\u0D9C\x05" +
        "\u01EA\xF6\x02\u0D9A\u0D9C\x05\u01EC\xF7\x02\u0D9B\u0D97\x03\x02\x02\x02" +
        "\u0D9B\u0D98\x03\x02\x02\x02\u0D9B\u0D99\x03\x02\x02\x02\u0D9B\u0D9A\x03" +
        "\x02\x02\x02\u0D9C\u0D9F\x03\x02\x02\x02\u0D9D\u0D9B\x03\x02\x02\x02\u0D9D" +
        "\u0D9E\x03\x02\x02\x02\u0D9E\u0DA0\x03\x02\x02\x02\u0D9F\u0D9D\x03\x02" +
        "\x02\x02\u0DA0\u0DA1\x07\x04\x02\x02\u0DA1\u0219\x03\x02\x02\x02\u0DA2" +
        "\u0DA3\x07\xD5\x02\x02\u0DA3\u0DA4\x05\u0308\u0185\x02\u0DA4\u0DA5\x07" +
        "\x04\x02\x02\u0DA5\u021B\x03\x02\x02\x02\u0DA6\u0DA7\x07\xD6\x02\x02\u0DA7" +
        "\u0DA8\x05J&\x02\u0DA8\u0DA9\x07\x04\x02\x02\u0DA9\u021D\x03\x02\x02\x02" +
        "\u0DAA\u0DAB\x05\u0370\u01B9\x02\u0DAB\u021F\x03\x02\x02\x02\u0DAC\u0DB1" +
        "\x07\xD7\x02\x02\u0DAD\u0DB0\x05\u0134\x9B\x02\u0DAE\u0DB0\x05\u013A\x9E" +
        "\x02\u0DAF\u0DAD\x03\x02\x02\x02\u0DAF\u0DAE\x03\x02\x02\x02\u0DB0\u0DB3" +
        "\x03\x02\x02\x02\u0DB1\u0DAF\x03\x02\x02\x02\u0DB1\u0DB2\x03\x02\x02\x02" +
        "\u0DB2\u0DB4\x03\x02\x02\x02\u0DB3\u0DB1\x03\x02\x02\x02\u0DB4\u0DB5\x07" +
        "\x04\x02\x02\u0DB5\u0221\x03\x02\x02\x02\u0DB6\u0DB7\x05\u037A\u01BE\x02" +
        "\u0DB7\u0223\x03\x02\x02\x02\u0DB8\u0DB9\x05\u067E\u0340\x02\u0DB9\u0225" +
        "\x03\x02\x02\x02\u0DBA\u0DBB\x05\u0680\u0341\x02\u0DBB\u0227\x03\x02\x02" +
        "\x02\u0DBC\u0DC0\x07\xD8\x02\x02\u0DBD\u0DBF\x05\u067E\u0340\x02\u0DBE" +
        "\u0DBD\x03\x02\x02\x02\u0DBF\u0DC2\x03\x02\x02\x02\u0DC0\u0DBE\x03\x02" +
        "\x02\x02\u0DC0\u0DC1\x03\x02\x02\x02\u0DC1\u0DC3\x03\x02\x02\x02\u0DC2" +
        "\u0DC0\x03\x02\x02\x02\u0DC3\u0DC4\x07\x04\x02\x02\u0DC4\u0229\x03\x02" +
        "\x02\x02\u0DC5\u0DC6\x07\xD9\x02\x02\u0DC6\u0DC7\x05\u0226\u0114\x02\u0DC7" +
        "\u0DCC\x05\u0678\u033D\x02\u0DC8\u0DCB\x05\x96L\x02\u0DC9\u0DCB\x05\u0228" +
        "\u0115\x02\u0DCA\u0DC8\x03\x02\x02\x02\u0DCA\u0DC9\x03\x02\x02\x02\u0DCB" +
        "\u0DCE\x03\x02\x02\x02\u0DCC\u0DCA\x03\x02\x02\x02\u0DCC\u0DCD\x03\x02" +
        "\x02\x02\u0DCD\u0DCF\x03\x02\x02\x02\u0DCE\u0DCC\x03\x02\x02\x02\u0DCF" +
        "\u0DD0\x07\x04\x02\x02\u0DD0\u022B\x03\x02\x02\x02\u0DD1\u0DD2\x07\xDA" +
        "\x02\x02\u0DD2\u0DD3\x05\u01DC\xEF\x02\u0DD3\u0DD4\x05\xA8U\x02\u0DD4" +
        "\u0DDC\x05\u032C\u0197\x02\u0DD5\u0DDB\x05\x96L\x02\u0DD6\u0DDB\x05\u0376" +
        "\u01BC\x02\u0DD7\u0DDB\x05\u0142\xA2\x02\u0DD8\u0DDB\x05\u0462\u0232\x02" +
        "\u0DD9\u0DDB\x05\u0638\u031D\x02\u0DDA\u0DD5\x03\x02\x02\x02\u0DDA\u0DD6" +
        "\x03\x02\x02\x02\u0DDA\u0DD7\x03\x02\x02\x02\u0DDA\u0DD8\x03\x02\x02\x02" +
        "\u0DDA\u0DD9\x03\x02\x02\x02\u0DDB\u0DDE\x03\x02\x02\x02\u0DDC\u0DDA\x03" +
        "\x02\x02\x02\u0DDC\u0DDD\x03\x02\x02\x02\u0DDD\u0DDF\x03\x02\x02\x02\u0DDE" +
        "\u0DDC\x03\x02\x02\x02\u0DDF\u0DE0\x07\x04\x02\x02\u0DE0\u022D\x03\x02" +
        "\x02\x02\u0DE1\u0DE2\x07\xDB\x02\x02\u0DE2\u0DED\x05\u017C\xBF\x02\u0DE3" +
        "\u0DEC\x05\x96L\x02\u0DE4\u0DEC\x05\u01CA\xE6\x02\u0DE5\u0DEC\x05\u022E" +
        "\u0118\x02\u0DE6\u0DEC\x05\u0294\u014B\x02\u0DE7\u0DEC\x05\u0304\u0183" +
        "\x02\u0DE8\u0DEC\x05\u03A0\u01D1\x02\u0DE9\u0DEC\x05\u03B8\u01DD\x02\u0DEA" +
        "\u0DEC\x05\u0472\u023A\x02\u0DEB\u0DE3\x03\x02\x02\x02\u0DEB\u0DE4\x03" +
        "\x02\x02\x02\u0DEB\u0DE5\x03\x02\x02\x02\u0DEB\u0DE6\x03\x02\x02\x02\u0DEB" +
        "\u0DE7\x03\x02\x02\x02\u0DEB\u0DE8\x03\x02\x02\x02\u0DEB\u0DE9\x03\x02" +
        "\x02\x02\u0DEB\u0DEA\x03\x02\x02\x02\u0DEC\u0DEF\x03\x02\x02\x02\u0DED" +
        "\u0DEB\x03\x02\x02\x02\u0DED\u0DEE\x03\x02\x02\x02\u0DEE\u0DF0\x03\x02" +
        "\x02\x02\u0DEF\u0DED\x03\x02\x02\x02\u0DF0\u0DF1\x07\x04\x02\x02\u0DF1" +
        "\u022F\x03\x02\x02\x02\u0DF2\u0DF3\x07\xDC\x02\x02\u0DF3\u0DF4\x05\u01DE" +
        "\xF0\x02\u0DF4\u0DF5\x07\x04\x02\x02\u0DF5\u0231\x03\x02\x02\x02\u0DF6" +
        "\u0DFA\x07\xDD\x02\x02\u0DF7\u0DF9\x05\u0230\u0119\x02\u0DF8\u0DF7\x03" +
        "\x02\x02\x02\u0DF9\u0DFC\x03\x02\x02\x02\u0DFA\u0DF8\x03\x02\x02\x02\u0DFA" +
        "\u0DFB\x03\x02\x02\x02\u0DFB\u0DFD\x03\x02\x02\x02\u0DFC\u0DFA\x03\x02" +
        "\x02\x02\u0DFD\u0DFE\x07\x04\x02\x02\u0DFE\u0233\x03\x02\x02\x02\u0DFF" +
        "\u0E00\x07\xDE\x02\x02\u0E00\u0E01\x07\x04\x02\x02\u0E01\u0235\x03\x02" +
        "\x02\x02\u0E02\u0E03\x07\xDF\x02\x02\u0E03\u0E04\x05J&\x02\u0E04\u0E05" +
        "\x07\x04\x02\x02\u0E05\u0237\x03\x02\x02\x02\u0E06\u0E07\x05\u0370\u01B9" +
        "\x02\u0E07\u0239\x03\x02\x02\x02\u0E08\u0E0D\x07\xE0\x02\x02\u0E09\u0E0C" +
        "\x05\u0134\x9B\x02\u0E0A\u0E0C\x05\u013A\x9E\x02\u0E0B\u0E09\x03\x02\x02" +
        "\x02\u0E0B\u0E0A\x03\x02\x02\x02\u0E0C\u0E0F\x03\x02\x02\x02\u0E0D\u0E0B" +
        "\x03\x02\x02\x02\u0E0D\u0E0E\x03\x02\x02\x02\u0E0E\u0E10\x03\x02\x02\x02" +
        "\u0E0F\u0E0D\x03\x02\x02\x02\u0E10\u0E11\x07\x04\x02\x02\u0E11\u023B\x03" +
        "\x02\x02\x02\u0E12\u0E13\x05\u037A\u01BE\x02\u0E13\u023D\x03\x02\x02\x02" +
        "\u0E14\u0E18\x07\xE1\x02\x02\u0E15\u0E19\x05\x0E\b\x02\u0E16\u0E19\x05" +
        "\u048A\u0246\x02\u0E17\u0E19\x05\u0484\u0243\x02\u0E18\u0E15\x03\x02\x02" +
        "\x02\u0E18\u0E16\x03\x02\x02\x02\u0E18\u0E17\x03\x02\x02\x02\u0E19\u0E1A" +
        "\x03\x02\x02\x02\u0E1A\u0E1B\x07\x04\x02\x02\u0E1B\u023F\x03\x02\x02\x02" +
        "\u0E1C\u0E1D\x05\u0370\u01B9\x02\u0E1D\u0241\x03\x02\x02\x02\u0E1E\u0E22" +
        "\x07\xE2\x02\x02\u0E1F\u0E23\x05\x0E\b\x02\u0E20\u0E23\x05\u048A\u0246" +
        "\x02\u0E21\u0E23\x05\u0484\u0243\x02\u0E22\u0E1F\x03\x02\x02\x02\u0E22" +
        "\u0E20\x03\x02\x02\x02\u0E22\u0E21\x03\x02\x02\x02\u0E23\u0E24\x03\x02" +
        "\x02\x02\u0E24\u0E25\x07\x04\x02\x02\u0E25\u0243\x03\x02\x02\x02\u0E26" +
        "\u0E27\x05\u037A\u01BE\x02\u0E27\u0245\x03\x02\x02\x02\u0E28\u0E29\x07" +
        "\xE3\x02\x02\u0E29\u0E2A\x05\u0280\u0141\x02\u0E2A\u0E2B\x07\x04\x02\x02" +
        "\u0E2B\u0247\x03\x02\x02\x02\u0E2C\u0E30\x07\xE4\x02\x02\u0E2D\u0E31\x05" +
        "\x0E\b\x02\u0E2E\u0E31\x05\u048A\u0246\x02\u0E2F\u0E31\x05\u0484\u0243" +
        "\x02\u0E30\u0E2D\x03\x02\x02\x02\u0E30\u0E2E\x03\x02\x02\x02\u0E30\u0E2F" +
        "\x03\x02\x02\x02\u0E31\u0E32\x03\x02\x02\x02\u0E32\u0E33\x07\x04\x02\x02" +
        "\u0E33\u0249\x03\x02\x02\x02\u0E34\u0E35\x07\xE5\x02\x02\u0E35\u0E36\x05" +
        "\u0280\u0141\x02\u0E36\u0E37\x07\x04\x02\x02\u0E37\u024B\x03\x02\x02\x02" +
        "\u0E38\u0E3C\x07\xE6\x02\x02\u0E39\u0E3D\x05\x0E\b\x02\u0E3A\u0E3D\x05" +
        "\u048A\u0246\x02\u0E3B\u0E3D\x05\u0484\u0243\x02\u0E3C\u0E39\x03\x02\x02" +
        "\x02\u0E3C\u0E3A\x03\x02\x02\x02\u0E3C\u0E3B\x03\x02\x02\x02\u0E3D\u0E3E" +
        "\x03\x02\x02\x02\u0E3E\u0E3F\x07\x04\x02\x02\u0E3F\u024D\x03\x02\x02\x02" +
        "\u0E40\u0E41\x07\xE7\x02\x02\u0E41\u0E42\x05\u067E\u0340\x02\u0E42\u0E43" +
        "\x07\x04\x02\x02\u0E43\u024F\x03\x02\x02\x02\u0E44\u0E45\x07\xE8\x02\x02" +
        "\u0E45\u0E46\x07\x04\x02\x02\u0E46\u0251\x03\x02\x02\x02\u0E47\u0E49\x07" +
        "\xE9\x02\x02\u0E48\u0E4A\x05\u0254\u012B\x02\u0E49\u0E48\x03\x02\x02\x02" +
        "\u0E49\u0E4A\x03\x02\x02\x02\u0E4A\u0E4B\x03\x02\x02\x02\u0E4B\u0E4C\x07" +
        "\x04\x02\x02\u0E4C\u0253\x03\x02\x02\x02\u0E4D\u0E52\x07\xEA\x02\x02\u0E4E" +
        "\u0E51\x05\xFC\x7F\x02\u0E4F\u0E51\x05\u0100\x81\x02\u0E50\u0E4E\x03\x02" +
        "\x02\x02\u0E50\u0E4F\x03\x02\x02\x02\u0E51\u0E54\x03\x02\x02\x02\u0E52" +
        "\u0E50\x03\x02\x02\x02\u0E52\u0E53\x03\x02\x02\x02\u0E53\u0E55\x03\x02" +
        "\x02\x02\u0E54\u0E52\x03\x02\x02\x02\u0E55\u0E56\x07\x04\x02\x02\u0E56" +
        "\u0255\x03\x02\x02\x02\u0E57\u0E58\x07\xEB\x02\x02\u0E58\u0E59\x05\u0260" +
        "\u0131\x02\u0E59\u0E6B\x05\x92J\x02\u0E5A\u0E6A\x05F$\x02\u0E5B\u0E6A" +
        "\x05h5\x02\u0E5C\u0E6A\x05\x90I\x02\u0E5D\u0E6A\x05\x96L\x02\u0E5E\u0E6A" +
        "\x05\u011A\x8E\x02\u0E5F\u0E6A\x05\u0264\u0133\x02\u0E60\u0E6A\x05\u026C" +
        "\u0137\x02\u0E61\u0E6A\x05\u0274\u013B\x02\u0E62\u0E6A\x05\u0284\u0143" +
        "\x02\u0E63\u0E6A\x05\u0376\u01BC\x02\u0E64\u0E6A\x05\u0396\u01CC\x02\u0E65" +
        "\u0E6A\x05\u0462\u0232\x02\u0E66\u0E6A\x05\u05CE\u02E8\x02\u0E67\u0E6A" +
        "\x05\u05FC\u02FF\x02\u0E68\u0E6A\x05\u0638\u031D\x02\u0E69\u0E5A\x03\x02" +
        "\x02\x02\u0E69\u0E5B\x03\x02\x02\x02\u0E69\u0E5C\x03\x02\x02\x02\u0E69" +
        "\u0E5D\x03\x02\x02\x02\u0E69\u0E5E\x03\x02\x02\x02\u0E69\u0E5F\x03\x02" +
        "\x02\x02\u0E69\u0E60\x03\x02\x02\x02\u0E69\u0E61\x03\x02\x02\x02\u0E69" +
        "\u0E62\x03\x02\x02\x02\u0E69\u0E63\x03\x02\x02\x02\u0E69\u0E64\x03\x02" +
        "\x02\x02\u0E69\u0E65\x03\x02\x02\x02\u0E69\u0E66\x03\x02\x02\x02\u0E69" +
        "\u0E67\x03\x02\x02\x02\u0E69\u0E68\x03\x02\x02\x02\u0E6A\u0E6D\x03\x02" +
        "\x02\x02\u0E6B\u0E69\x03\x02\x02\x02\u0E6B\u0E6C\x03\x02\x02\x02\u0E6C" +
        "\u0E6E\x03\x02\x02\x02\u0E6D\u0E6B\x03\x02\x02\x02\u0E6E\u0E6F\x07\x04" +
        "\x02\x02\u0E6F\u0257\x03\x02\x02\x02\u0E70\u0E71\x07\xEC\x02\x02\u0E71" +
        "\u0E72\x05\u0268\u0135\x02\u0E72\u0E73\x05\x82B\x02\u0E73\u0E74\x07\x04" +
        "\x02\x02\u0E74\u0259\x03\x02\x02\x02\u0E75\u0E76\x07\xED\x02\x02\u0E76" +
        "\u0E77\x07\x04\x02\x02\u0E77\u025B\x03\x02\x02\x02\u0E78\u0E79\x07\xEE" +
        "\x02\x02\u0E79\u0E7A\x05\u0268\u0135\x02\u0E7A\u0E7B\x05\u024E\u0128\x02" +
        "\u0E7B\u0E7C\x07\x04\x02\x02\u0E7C\u025D\x03\x02\x02\x02\u0E7D\u0E7E\x07" +
        "\xEF\x02\x02\u0E7E\u0E7F\x05J&\x02\u0E7F\u0E80\x07\x04\x02\x02\u0E80\u025F" +
        "\x03\x02\x02\x02\u0E81\u0E82\x05\u0370\u01B9\x02\u0E82\u0261\x03\x02\x02" +
        "\x02\u0E83\u0E88\x07\xF0\x02\x02\u0E84\u0E87\x05\u0134\x9B\x02\u0E85\u0E87" +
        "\x05\u013A\x9E\x02\u0E86\u0E84\x03\x02\x02\x02\u0E86\u0E85\x03\x02\x02" +
        "\x02\u0E87\u0E8A\x03\x02\x02\x02\u0E88\u0E86\x03\x02\x02\x02\u0E88\u0E89" +
        "\x03\x02\x02\x02\u0E89\u0E8B\x03\x02\x02\x02\u0E8A\u0E88\x03\x02\x02\x02" +
        "\u0E8B\u0E8C\x07\x04\x02\x02\u0E8C\u0263\x03\x02\x02\x02\u0E8D\u0E8E\x07" +
        "\xF1\x02\x02\u0E8E\u0E8F\x05\u05C8\u02E5\x02\u0E8F\u0E90\x07\x04\x02\x02" +
        "\u0E90\u0265\x03\x02\x02\x02\u0E91\u0E95\x07\xF2\x02\x02\u0E92\u0E96\x05" +
        "\x0E\b\x02\u0E93\u0E96\x05\u048A\u0246\x02\u0E94\u0E96\x05\u0484\u0243" +
        "\x02\u0E95\u0E92\x03\x02\x02\x02\u0E95\u0E93\x03\x02\x02\x02\u0E95\u0E94" +
        "\x03\x02\x02\x02\u0E96\u0E97\x03\x02\x02\x02\u0E97\u0E98\x07\x04\x02\x02" +
        "\u0E98\u0267\x03\x02\x02\x02\u0E99\u0E9A\x05\u037A\u01BE\x02\u0E9A\u0269" +
        "\x03\x02\x02\x02\u0E9B\u0E9C\x07\xF3\x02\x02\u0E9C\u0E9D\x05\u05EA\u02F6" +
        "\x02\u0E9D\u0EA2\x05\u0452\u022A\x02\u0E9E\u0EA1\x05\u044E\u0228\x02\u0E9F" +
        "\u0EA1\x05\u041A\u020E\x02\u0EA0\u0E9E\x03\x02\x02\x02\u0EA0\u0E9F\x03" +
        "\x02\x02\x02\u0EA1\u0EA4\x03\x02\x02\x02\u0EA2\u0EA0\x03\x02\x02\x02\u0EA2" +
        "\u0EA3\x03\x02\x02\x02\u0EA3\u0EA5\x03\x02\x02\x02\u0EA4\u0EA2\x03\x02" +
        "\x02\x02\u0EA5\u0EA6\x07\x04\x02\x02\u0EA6\u026B\x03\x02\x02\x02\u0EA7" +
        "\u0EA8\x07\xF4\x02\x02\u0EA8\u0EB7\x05\u0186\xC4\x02\u0EA9\u0EB6\x05\x06" +
        "\x04\x02\u0EAA\u0EB6\x05\x96L\x02\u0EAB\u0EB6\x05\xACW\x02\u0EAC\u0EB6" +
        "\x05\u011A\x8E\x02\u0EAD\u0EB6\x05\u0132\x9A\x02\u0EAE\u0EB6\x05\u041E" +
        "\u0210\x02\u0EAF\u0EB6\x05\u0426\u0214\x02\u0EB0\u0EB6\x05\u0434\u021B" +
        "\x02\u0EB1\u0EB6\x05\u043C\u021F\x02\u0EB2\u0EB6\x05\u0450\u0229\x02\u0EB3" +
        "\u0EB6\x05\u0462\u0232\x02\u0EB4\u0EB6\x05\u0634\u031B\x02\u0EB5\u0EA9" +
        "\x03\x02\x02\x02\u0EB5\u0EAA\x03\x02\x02\x02\u0EB5\u0EAB\x03\x02\x02\x02" +
        "\u0EB5\u0EAC\x03\x02\x02\x02\u0EB5\u0EAD\x03\x02\x02\x02\u0EB5\u0EAE\x03" +
        "\x02\x02\x02\u0EB5\u0EAF\x03\x02\x02\x02\u0EB5\u0EB0\x03\x02\x02\x02\u0EB5" +
        "\u0EB1\x03\x02\x02\x02\u0EB5\u0EB2\x03\x02\x02\x02\u0EB5\u0EB3\x03\x02" +
        "\x02\x02\u0EB5\u0EB4\x03\x02\x02\x02\u0EB6\u0EB9\x03\x02\x02\x02\u0EB7" +
        "\u0EB5\x03\x02\x02\x02\u0EB7\u0EB8\x03\x02\x02\x02\u0EB8\u0EBA\x03\x02" +
        "\x02\x02\u0EB9\u0EB7\x03\x02\x02\x02\u0EBA\u0EBB\x07\x04\x02\x02\u0EBB" +
        "\u026D\x03\x02\x02\x02\u0EBC\u0EBD\x07\xF5\x02\x02\u0EBD\u0EC1\x05\u0470" +
        "\u0239\x02\u0EBE\u0EC0\x05\u0134\x9B\x02\u0EBF\u0EBE\x03\x02\x02\x02\u0EC0" +
        "\u0EC3\x03\x02\x02\x02\u0EC1\u0EBF\x03\x02\x02\x02\u0EC1\u0EC2\x03\x02" +
        "\x02\x02\u0EC2\u0EC5\x03\x02\x02\x02\u0EC3\u0EC1\x03\x02\x02\x02\u0EC4" +
        "\u0EC6\x05\u046E\u0238\x02\u0EC5\u0EC4\x03\x02\x02\x02\u0EC5\u0EC6\x03" +
        "\x02\x02\x02\u0EC6\u0ECA\x03\x02\x02\x02\u0EC7\u0EC9\x05\u0134\x9B\x02" +
        "\u0EC8\u0EC7\x03\x02\x02\x02\u0EC9\u0ECC\x03\x02\x02\x02\u0ECA\u0EC8\x03" +
        "\x02\x02\x02\u0ECA\u0ECB\x03\x02\x02\x02\u0ECB\u0ECD\x03\x02\x02\x02\u0ECC" +
        "\u0ECA\x03\x02\x02\x02\u0ECD\u0ECE\x07\x04\x02\x02\u0ECE\u026F\x03\x02" +
        "\x02\x02\u0ECF\u0ED0\x07\xF6\x02\x02\u0ED0\u0ED3\x05\u0470\u0239\x02\u0ED1" +
        "\u0ED4\x05\u0614\u030B\x02\u0ED2\u0ED4\x05\u0632\u031A\x02\u0ED3\u0ED1" +
        "\x03\x02\x02\x02\u0ED3\u0ED2\x03\x02\x02\x02\u0ED4\u0EDA\x03\x02\x02\x02" +
        "\u0ED5\u0ED9\x05\x96L\x02\u0ED6\u0ED9\x05\u01AC\xD7\x02\u0ED7\u0ED9\x05" +
        "\u0472\u023A\x02\u0ED8\u0ED5\x03\x02\x02\x02\u0ED8\u0ED6\x03\x02\x02\x02" +
        "\u0ED8\u0ED7\x03\x02\x02\x02\u0ED9\u0EDC\x03\x02\x02\x02\u0EDA\u0ED8\x03" +
        "\x02\x02\x02\u0EDA\u0EDB\x03\x02\x02\x02\u0EDB\u0EDD\x03\x02\x02\x02\u0EDC" +
        "\u0EDA\x03\x02\x02\x02\u0EDD\u0EDE\x07\x04\x02\x02\u0EDE\u0271\x03\x02" +
        "\x02\x02\u0EDF\u0EE0\x07\xF7\x02\x02\u0EE0\u0EE1\x05\u0268\u0135\x02\u0EE1" +
        "\u0EE2\x07\x04\x02\x02\u0EE2\u0273\x03\x02\x02\x02\u0EE3\u0EE4\x07\xF8" +
        "\x02\x02\u0EE4\u0EE5\x05\u0280\u0141\x02\u0EE5\u0EE6\x07\x04\x02\x02\u0EE6" +
        "\u0275\x03\x02\x02\x02\u0EE7\u0EEB\x07\xF9\x02\x02\u0EE8\u0EEC\x05\x0E" +
        "\b\x02\u0EE9\u0EEC\x05\u048A\u0246\x02\u0EEA\u0EEC\x05\u0484\u0243\x02" +
        "\u0EEB\u0EE8\x03\x02\x02\x02\u0EEB\u0EE9\x03\x02\x02\x02\u0EEB\u0EEA\x03" +
        "\x02\x02\x02\u0EEC\u0EED\x03\x02\x02\x02\u0EED\u0EEE\x07\x04\x02\x02\u0EEE" +
        "\u0277\x03\x02\x02\x02\u0EEF\u0EF0\x07\xFA\x02\x02\u0EF0\u0EF1\x05\u0280" +
        "\u0141\x02\u0EF1\u0EF2\x07\x04\x02\x02\u0EF2\u0279\x03\x02\x02\x02\u0EF3" +
        "\u0EF4\x07\xFB\x02\x02\u0EF4\u0EF5\x05\xD6l\x02\u0EF5\u0EF6\x05\u067E" +
        "\u0340\x02\u0EF6\u0EF7\x07\x04\x02\x02\u0EF7\u027B\x03\x02\x02\x02\u0EF8" +
        "\u0EF9\x07\xFC\x02\x02\u0EF9\u0EFA\x05\xD8m\x02\u0EFA\u0EFB\x07\x04\x02" +
        "\x02\u0EFB\u027D\x03\x02\x02\x02\u0EFC\u0EFD\x07\xFD\x02\x02\u0EFD\u0EFE" +
        "\x05\u01A8\xD5\x02\u0EFE\u0EFF\x05\u0574\u02BB\x02\u0EFF\u0F00\x07\x04" +
        "\x02\x02\u0F00\u027F\x03\x02\x02\x02\u0F01\u0F10\x05\u0286\u0144\x02\u0F02" +
        "\u0F10\x05\u067E\u0340\x02\u0F03\u0F10\x05\u0288\u0145\x02\u0F04\u0F10" +
        "\x05\u028E\u0148\x02\u0F05\u0F10\x05\u0290\u0149\x02\u0F06\u0F10\x05\u028C" +
        "\u0147\x02\u0F07\u0F10\x05\u028A\u0146\x02\u0F08\u0F10\x05\u05CA\u02E6" +
        "\x02\u0F09\u0F10\x05\u027C\u013F\x02\u0F0A\u0F10\x05\u01D2\xEA\x02\u0F0B" +
        "\u0F10\x05\u042C\u0217\x02\u0F0C\u0F10\x05\u05A4\u02D3\x02\u0F0D\u0F10" +
        "\x05\x04\x03\x02\u0F0E\u0F10\x05\u025A\u012E\x02\u0F0F\u0F01\x03\x02\x02" +
        "\x02\u0F0F\u0F02\x03\x02\x02\x02\u0F0F\u0F03\x03\x02\x02\x02\u0F0F\u0F04" +
        "\x03\x02\x02\x02\u0F0F\u0F05\x03\x02\x02\x02\u0F0F\u0F06\x03\x02\x02\x02" +
        "\u0F0F\u0F07\x03\x02\x02\x02\u0F0F\u0F08\x03\x02\x02\x02\u0F0F\u0F09\x03" +
        "\x02\x02\x02\u0F0F\u0F0A\x03\x02\x02\x02\u0F0F\u0F0B\x03\x02\x02\x02\u0F0F" +
        "\u0F0C\x03\x02\x02\x02\u0F0F\u0F0D\x03\x02\x02\x02\u0F0F\u0F0E\x03\x02" +
        "\x02\x02\u0F10\u0281\x03\x02\x02\x02\u0F11\u0F12\x07\xFE\x02\x02\u0F12" +
        "\u0F17\x05\u03F4\u01FB\x02\u0F13\u0F16\x05\u0278\u013D\x02\u0F14\u0F16" +
        "\x05\u0376\u01BC\x02\u0F15\u0F13\x03\x02\x02\x02\u0F15\u0F14\x03\x02\x02" +
        "\x02\u0F16\u0F19\x03\x02\x02\x02\u0F17\u0F15\x03\x02\x02\x02\u0F17\u0F18" +
        "\x03\x02\x02\x02\u0F18\u0F1A\x03\x02\x02\x02\u0F19\u0F17\x03\x02\x02\x02" +
        "\u0F1A\u0F1B\x07\x04\x02\x02\u0F1B\u0283\x03\x02\x02\x02\u0F1C\u0F1D\x07" +
        "\xFF\x02\x02\u0F1D\u0F1E\x05\u03F8\u01FD\x02\u0F1E\u0F1F\x05\u0280\u0141" +
        "\x02\u0F1F\u0F20\x07\x04\x02\x02\u0F20\u0285\x03\x02\x02\x02\u0F21\u0F22" +
        "\x07\u0100\x02\x02\u0F22\u0F23\x05\u03F8\u01FD\x02\u0F23\u0F24\x07\x04" +
        "\x02\x02\u0F24\u0287\x03\x02\x02\x02\u0F25\u0F29\x07\u0101\x02\x02\u0F26" +
        "\u0F28\x05\u0280\u0141\x02\u0F27\u0F26\x03\x02\x02\x02\u0F28\u0F2B\x03" +
        "\x02\x02\x02\u0F29\u0F27\x03\x02\x02\x02\u0F29\u0F2A\x03\x02\x02\x02\u0F2A" +
        "\u0F2C\x03\x02\x02\x02\u0F2B\u0F29\x03\x02\x02\x02\u0F2C\u0F2D\x07\x04" +
        "\x02\x02\u0F2D\u0289\x03\x02\x02\x02\u0F2E\u0F2F\x07\u0102\x02\x02\u0F2F" +
        "\u0F30\x05\u013E\xA0\x02\u0F30\u0F31\x05\u0140\xA1\x02\u0F31\u0F32\x07" +
        "\x04\x02\x02\u0F32\u028B\x03\x02\x02\x02\u0F33\u0F34\x07\u0103\x02\x02" +
        "\u0F34\u0F35\x05\u013E\xA0\x02\u0F35\u0F36\x05\u0140\xA1\x02\u0F36\u0F37" +
        "\x07\x04\x02\x02\u0F37\u028D\x03\x02\x02\x02\u0F38\u0F39\x07\u0104\x02" +
        "\x02\u0F39\u0F3A\x05\u035C\u01AF\x02\u0F3A\u0F3B\x05\u05E2\u02F2\x02\u0F3B" +
        "\u0F3C\x07\x04\x02\x02\u0F3C\u028F\x03\x02\x02\x02\u0F3D\u0F41\x07\u0105" +
        "\x02\x02\u0F3E\u0F40\x05\u0280\u0141\x02\u0F3F\u0F3E\x03\x02\x02\x02\u0F40" +
        "\u0F43\x03\x02\x02\x02\u0F41\u0F3F\x03\x02\x02\x02\u0F41\u0F42\x03\x02" +
        "\x02\x02\u0F42\u0F44\x03\x02\x02\x02\u0F43\u0F41\x03\x02\x02\x02\u0F44" +
        "\u0F45\x07\x04\x02\x02\u0F45\u0291\x03\x02\x02\x02\u0F46\u0F47\x05\u067E" +
        "\u0340\x02\u0F47\u0293\x03\x02\x02\x02\u0F48\u0F49\x07\u0106\x02\x02\u0F49" +
        "\u0F52\x05\u0182\xC2\x02\u0F4A\u0F51\x05\x96L\x02\u0F4B\u0F51\x05\u0294" +
        "\u014B\x02\u0F4C\u0F51\x05\xE8u\x02\u0F4D\u0F51\x05\u0298\u014D\x02\u0F4E" +
        "\u0F51\x05\u0462\u0232\x02\u0F4F\u0F51\x05\u0472\u023A\x02\u0F50\u0F4A" +
        "\x03\x02\x02\x02\u0F50\u0F4B\x03\x02\x02\x02\u0F50\u0F4C\x03\x02\x02\x02" +
        "\u0F50\u0F4D\x03\x02\x02\x02\u0F50\u0F4E\x03\x02\x02\x02\u0F50\u0F4F\x03" +
        "\x02\x02\x02\u0F51\u0F54\x03\x02\x02\x02\u0F52\u0F50\x03\x02\x02\x02\u0F52" +
        "\u0F53\x03\x02\x02\x02\u0F53\u0F55\x03\x02\x02\x02\u0F54\u0F52\x03\x02" +
        "\x02\x02\u0F55\u0F56\x07\x04\x02\x02\u0F56\u0295\x03\x02\x02\x02\u0F57" +
        "\u0F58\x07\u0107\x02\x02\u0F58\u0F61\x05\"\x12\x02\u0F59\u0F60\x05\x16" +
        "\f\x02\u0F5A\u0F60\x05\xCEh\x02\u0F5B\u0F60\x05\xEAv\x02\u0F5C\u0F60\x05" +
        "\u029A\u014E\x02\u0F5D\u0F60\x05\u02A6\u0154\x02\u0F5E\u0F60\x05\u02AA" +
        "\u0156\x02\u0F5F\u0F59\x03\x02\x02\x02\u0F5F\u0F5A\x03\x02\x02\x02\u0F5F" +
        "\u0F5B\x03\x02\x02\x02\u0F5F\u0F5C\x03\x02\x02\x02\u0F5F\u0F5D\x03\x02" +
        "\x02\x02\u0F5F\u0F5E\x03\x02\x02\x02\u0F60\u0F63\x03\x02\x02\x02\u0F61" +
        "\u0F5F\x03\x02\x02\x02\u0F61\u0F62\x03\x02\x02\x02\u0F62\u0F64\x03\x02" +
        "\x02\x02\u0F63\u0F61\x03\x02\x02\x02\u0F64\u0F65\x07\x04\x02\x02\u0F65" +
        "\u0297\x03\x02\x02\x02\u0F66\u0F67\x07\u0108\x02\x02\u0F67\u0F68\x05\u029C" +
        "\u014F\x02\u0F68\u0F69\x05\u0114\x8B\x02\u0F69\u0F6E\x05\u0110\x89\x02" +
        "\u0F6A\u0F6D\x05*\x16\x02\u0F6B\u0F6D\x05\u060E\u0308\x02\u0F6C\u0F6A" +
        "\x03\x02\x02\x02\u0F6C\u0F6B\x03\x02\x02\x02\u0F6D\u0F70\x03\x02\x02\x02" +
        "\u0F6E\u0F6C\x03\x02\x02\x02\u0F6E\u0F6F\x03\x02\x02\x02\u0F6F\u0F71\x03" +
        "\x02\x02\x02\u0F70\u0F6E\x03\x02\x02\x02\u0F71\u0F72\x07\x04\x02\x02\u0F72" +
        "\u0299\x03\x02\x02\x02\u0F73\u0F74\x07\u0109\x02\x02\u0F74\u0F78\x05\u029E" +
        "\u0150\x02\u0F75\u0F77\x05\u0134\x9B\x02\u0F76\u0F75\x03\x02\x02\x02\u0F77" +
        "\u0F7A\x03\x02\x02\x02\u0F78\u0F76\x03\x02\x02\x02\u0F78\u0F79\x03\x02" +
        "\x02\x02\u0F79\u0F7B\x03\x02\x02\x02\u0F7A\u0F78\x03\x02\x02\x02\u0F7B" +
        "\u0F7C\x07\x04\x02\x02\u0F7C\u029B\x03\x02\x02\x02\u0F7D\u0F7E\x05\u0370" +
        "\u01B9\x02\u0F7E\u029D\x03\x02\x02\x02\u0F7F\u0F80\x05\u037A\u01BE\x02" +
        "\u0F80\u029F\x03\x02\x02\x02\u0F81\u0F89\x07\u010A\x02\x02\u0F82\u0F88" +
        "\x05\xE8u\x02\u0F83\u0F88\x05\u0142\xA2\x02\u0F84\u0F88\x05\u0298\u014D" +
        "\x02\u0F85\u0F88\x05\u0376\u01BC\x02\u0F86\u0F88\x05\u0462\u0232\x02\u0F87" +
        "\u0F82\x03\x02\x02\x02\u0F87\u0F83\x03\x02\x02\x02\u0F87\u0F84\x03\x02" +
        "\x02\x02\u0F87\u0F85\x03\x02\x02\x02\u0F87\u0F86\x03\x02\x02\x02\u0F88" +
        "\u0F8B\x03\x02\x02\x02\u0F89\u0F87\x03\x02\x02\x02\u0F89\u0F8A\x03\x02" +
        "\x02\x02\u0F8A\u0F8C\x03\x02\x02\x02\u0F8B\u0F89\x03\x02\x02\x02\u0F8C" +
        "\u0F8D\x07\x04\x02\x02\u0F8D\u02A1\x03\x02\x02\x02\u0F8E\u0F8F\x07\u010B" +
        "\x02\x02\u0F8F\u0F90\x05J&\x02\u0F90\u0F91\x07\x04\x02\x02\u0F91\u02A3" +
        "\x03\x02\x02\x02\u0F92\u0F93\x05\u0370\u01B9\x02\u0F93\u02A5\x03\x02\x02" +
        "\x02\u0F94\u0F99\x07\u010C\x02\x02\u0F95\u0F98\x05\u0134\x9B\x02\u0F96" +
        "\u0F98\x05\u013A\x9E\x02\u0F97\u0F95\x03\x02";
    EDIF300Parser._serializedATNSegment8 = "\x02\x02\u0F97\u0F96\x03\x02\x02\x02\u0F98\u0F9B\x03\x02\x02\x02\u0F99" +
        "\u0F97\x03\x02\x02\x02\u0F99\u0F9A\x03\x02\x02\x02\u0F9A\u0F9C\x03\x02" +
        "\x02\x02\u0F9B\u0F99\x03\x02\x02\x02\u0F9C\u0F9D\x07\x04\x02\x02\u0F9D" +
        "\u02A7\x03\x02\x02\x02\u0F9E\u0F9F\x05\u037A\u01BE\x02\u0F9F\u02A9\x03" +
        "\x02\x02\x02\u0FA0\u0FA1\x07\u010D\x02\x02\u0FA1\u0FA5\x05\u0470\u0239" +
        "\x02\u0FA2\u0FA4\x05\u0134\x9B\x02\u0FA3\u0FA2\x03\x02\x02\x02\u0FA4\u0FA7" +
        "\x03\x02\x02\x02\u0FA5\u0FA3\x03\x02\x02\x02\u0FA5\u0FA6\x03\x02\x02\x02" +
        "\u0FA6\u0FA9\x03\x02\x02\x02\u0FA7\u0FA5\x03\x02\x02\x02\u0FA8\u0FAA\x05" +
        "\u046E\u0238\x02\u0FA9\u0FA8\x03\x02\x02\x02\u0FA9\u0FAA\x03\x02\x02\x02" +
        "\u0FAA\u0FAE\x03\x02\x02\x02\u0FAB\u0FAD\x05\u0134\x9B\x02\u0FAC\u0FAB" +
        "\x03\x02\x02\x02\u0FAD\u0FB0\x03\x02\x02\x02\u0FAE\u0FAC\x03\x02\x02\x02" +
        "\u0FAE\u0FAF\x03\x02\x02\x02\u0FAF\u0FB1\x03\x02\x02\x02\u0FB0\u0FAE\x03" +
        "\x02\x02\x02\u0FB1\u0FB2\x07\x04\x02\x02\u0FB2\u02AB\x03\x02\x02\x02\u0FB3" +
        "\u0FB4\x07\u010E\x02\x02\u0FB4\u0FB6\x05\u02A8\u0155\x02\u0FB5\u0FB7\x05" +
        "\u03DE\u01F0\x02\u0FB6\u0FB5\x03\x02\x02\x02\u0FB6\u0FB7\x03\x02\x02\x02" +
        "\u0FB7\u0FB8\x03\x02\x02\x02\u0FB8\u0FB9\x07\x04\x02\x02\u0FB9\u02AD\x03" +
        "\x02\x02\x02\u0FBA\u0FBE\x07\u010F\x02\x02\u0FBB\u0FBD\x05\u02AC\u0157" +
        "\x02\u0FBC\u0FBB\x03\x02\x02\x02\u0FBD\u0FC0\x03\x02\x02\x02\u0FBE\u0FBC" +
        "\x03\x02\x02\x02\u0FBE\u0FBF\x03\x02\x02\x02\u0FBF\u0FC1\x03\x02\x02\x02" +
        "\u0FC0\u0FBE\x03\x02\x02\x02\u0FC1\u0FC2\x07\x04\x02\x02\u0FC2\u02AF\x03" +
        "\x02\x02\x02\u0FC3\u0FC4\x07\u0110\x02\x02\u0FC4\u0FD3\x05\u02B4\u015B" +
        "\x02\u0FC5\u0FD2\x05\u011A\x8E\x02\u0FC6\u0FD2\x05D#\x02\u0FC7\u0FD2\x05" +
        "\u0282\u0142\x02\u0FC8\u0FD2\x05\u02B2\u015A\x02\u0FC9\u0FD2\x05\u036A" +
        "\u01B6\x02\u0FCA\u0FD2\x05\u0394\u01CB\x02\u0FCB\u0FD2\x05\u0404\u0203" +
        "\x02\u0FCC\u0FD2\x05\u0416\u020C\x02\u0FCD\u0FD2\x05\u041C\u020F\x02\u0FCE" +
        "\u0FD2\x05\u05CC\u02E7\x02\u0FCF\u0FD2\x05\u05FC\u02FF\x02\u0FD0\u0FD2" +
        "\x05\u0666\u0334\x02\u0FD1\u0FC5\x03\x02\x02\x02\u0FD1\u0FC6\x03\x02\x02" +
        "\x02\u0FD1\u0FC7\x03\x02\x02\x02\u0FD1\u0FC8\x03\x02\x02\x02\u0FD1\u0FC9" +
        "\x03\x02\x02\x02\u0FD1\u0FCA\x03\x02\x02\x02\u0FD1\u0FCB\x03\x02\x02\x02" +
        "\u0FD1\u0FCC\x03\x02\x02\x02\u0FD1\u0FCD\x03\x02\x02\x02\u0FD1\u0FCE\x03" +
        "\x02\x02\x02\u0FD1\u0FCF\x03\x02\x02\x02\u0FD1\u0FD0\x03\x02\x02\x02\u0FD2" +
        "\u0FD5\x03\x02\x02\x02\u0FD3\u0FD1\x03\x02\x02\x02\u0FD3\u0FD4\x03\x02" +
        "\x02\x02\u0FD4\u0FD6\x03\x02\x02\x02\u0FD5\u0FD3\x03\x02\x02\x02\u0FD6" +
        "\u0FD7\x07\x04\x02\x02\u0FD7\u02B1\x03\x02\x02\x02\u0FD8\u0FDC\x07\u0111" +
        "\x02\x02\u0FD9\u0FDB\x05\u0452\u022A\x02\u0FDA\u0FD9\x03\x02\x02\x02\u0FDB" +
        "\u0FDE\x03\x02\x02\x02\u0FDC\u0FDA\x03\x02\x02\x02\u0FDC\u0FDD\x03\x02" +
        "\x02\x02\u0FDD\u0FDF\x03\x02\x02\x02\u0FDE\u0FDC\x03\x02\x02\x02\u0FDF" +
        "\u0FE0\x07\x04\x02\x02\u0FE0\u02B3\x03\x02\x02\x02\u0FE1\u0FE6\x07\u0112" +
        "\x02\x02\u0FE2\u0FE5\x05\u0584\u02C3\x02\u0FE3\u0FE5\x05\u058C\u02C7\x02" +
        "\u0FE4\u0FE2\x03\x02\x02\x02\u0FE4\u0FE3\x03\x02\x02\x02\u0FE5\u0FE8\x03" +
        "\x02\x02\x02\u0FE6\u0FE4\x03\x02\x02\x02\u0FE6\u0FE7\x03\x02\x02\x02\u0FE7" +
        "\u0FE9\x03\x02\x02\x02\u0FE8\u0FE6\x03\x02\x02\x02\u0FE9\u0FEA\x07\x04" +
        "\x02\x02\u0FEA\u02B5\x03\x02\x02\x02\u0FEB\u0FEC\x07\u0113\x02\x02\u0FEC" +
        "\u0FED\x05\u02B8\u015D\x02\u0FED\u0FEE\x07\x04\x02\x02\u0FEE\u02B7\x03" +
        "\x02\x02\x02\u0FEF\u0FF0\x05\u067E\u0340\x02\u0FF0\u02B9\x03\x02\x02\x02" +
        "\u0FF1\u0FF2\x07\u0114\x02\x02\u0FF2\u0FF3\x07\x04\x02\x02\u0FF3\u02BB" +
        "\x03\x02\x02\x02\u0FF4\u0FF5\x05\u067E\u0340\x02\u0FF5\u02BD\x03\x02\x02" +
        "\x02\u0FF6\u0FF7\x07\u0115\x02\x02\u0FF7\u0FF8\x07\x04\x02\x02\u0FF8\u02BF" +
        "\x03\x02\x02\x02\u0FF9\u0FFA\x07\u0116\x02\x02\u0FFA\u0FFB\x07\x04\x02" +
        "\x02\u0FFB\u02C1\x03\x02\x02\x02\u0FFC\u0FFD\x07\u0117\x02\x02\u0FFD\u0FFE" +
        "\x07\x04\x02\x02\u0FFE\u02C3\x03\x02\x02\x02\u0FFF\u1000\x07\u0118\x02" +
        "\x02\u1000\u1001\x07\x04\x02\x02\u1001\u02C5\x03\x02\x02\x02\u1002\u1003" +
        "\x07\u0119\x02\x02\u1003\u1004\x05\u0624\u0313\x02\u1004\u1005\x07\x04" +
        "\x02\x02\u1005\u02C7\x03\x02\x02\x02\u1006\u1007\x07\u011A\x02\x02\u1007" +
        "\u1008\x07\x04\x02\x02\u1008\u02C9\x03\x02\x02\x02\u1009\u100A\x07\u011B" +
        "\x02\x02\u100A\u100B\x05\u02CE\u0168\x02\u100B\u100C\x05\u02D0\u0169\x02" +
        "\u100C\u100D\x07\x04\x02\x02\u100D\u02CB\x03\x02\x02\x02\u100E\u1012\x07" +
        "\u011C\x02\x02\u100F\u1011\x05\u02CA\u0166\x02\u1010\u100F\x03\x02\x02" +
        "\x02\u1011\u1014\x03\x02\x02\x02\u1012\u1010\x03\x02\x02\x02\u1012\u1013" +
        "\x03\x02\x02\x02\u1013\u1015\x03\x02\x02\x02\u1014\u1012\x03\x02\x02\x02" +
        "\u1015\u1016\x07\x04\x02\x02\u1016\u02CD\x03\x02\x02\x02\u1017\u1018\x07" +
        "\u029D\x02\x02\u1018\u02CF\x03\x02\x02\x02\u1019\u101A\x07\u029D\x02\x02" +
        "\u101A\u02D1\x03\x02\x02\x02\u101B\u101C\x07\u011D\x02\x02\u101C\u101D" +
        "\x05\u02DA\u016E\x02\u101D\u101E\x07\x04\x02\x02\u101E\u02D3\x03\x02\x02" +
        "\x02\u101F\u1020\x07\u011E\x02\x02\u1020\u1027\x05\u02D0\u0169\x02\u1021" +
        "\u1026\x05\x96L\x02\u1022\u1026\x05\u02D2\u016A\x02\u1023\u1026\x05\u02D4" +
        "\u016B\x02\u1024\u1026\x05\u02E4\u0173\x02\u1025\u1021\x03\x02\x02\x02" +
        "\u1025\u1022\x03\x02\x02\x02\u1025\u1023\x03\x02\x02\x02\u1025\u1024\x03" +
        "\x02\x02\x02\u1026\u1029\x03\x02\x02\x02\u1027\u1025\x03\x02\x02\x02\u1027" +
        "\u1028\x03\x02\x02\x02\u1028\u102A\x03\x02\x02\x02\u1029\u1027\x03\x02" +
        "\x02\x02\u102A\u102B\x07\x04\x02\x02\u102B\u02D5\x03\x02\x02\x02\u102C" +
        "\u102D\x07\u011F\x02\x02\u102D\u1030\x05\u02D8\u016D\x02\u102E\u1031\x05" +
        "\u02E6\u0174\x02\u102F\u1031\x05\u02E8\u0175\x02\u1030\u102E\x03\x02\x02" +
        "\x02\u1030\u102F\x03\x02\x02\x02\u1031\u1032\x03\x02\x02\x02\u1032\u1033" +
        "\x07\x04\x02\x02\u1033\u02D7\x03\x02\x02\x02\u1034\u1035\x07\u029D\x02" +
        "\x02\u1035\u02D9\x03\x02\x02\x02\u1036\u1037\x07\u029D\x02\x02\u1037\u02DB" +
        "\x03\x02\x02\x02\u1038\u103F\x07\u0120\x02\x02\u1039\u103E\x05\x96L\x02" +
        "\u103A\u103E\x05\u02D2\u016A\x02\u103B\u103E\x05\u02D4\u016B\x02\u103C" +
        "\u103E\x05\u02E4\u0173\x02\u103D\u1039\x03\x02\x02\x02\u103D\u103A\x03" +
        "\x02\x02\x02\u103D\u103B\x03\x02\x02\x02\u103D\u103C\x03\x02\x02\x02\u103E" +
        "\u1041\x03\x02\x02\x02\u103F\u103D\x03\x02\x02\x02\u103F\u1040\x03\x02" +
        "\x02\x02\u1040\u1042\x03\x02\x02\x02\u1041\u103F\x03\x02\x02\x02\u1042" +
        "\u1043\x07\x04\x02\x02\u1043\u02DD\x03\x02\x02\x02\u1044\u1045\x07\u0121" +
        "\x02\x02\u1045\u1046\x05\u02CE\u0168\x02\u1046\u1047\x05\u02E2\u0172\x02" +
        "\u1047\u1048\x05\u02DC\u016F\x02\u1048\u1049\x07\x04\x02\x02\u1049\u02DF" +
        "\x03\x02\x02\x02\u104A\u104F\x07\u0122\x02\x02\u104B\u104E\x05\u02CA\u0166" +
        "\x02\u104C\u104E\x05\u02DE\u0170\x02\u104D\u104B\x03\x02\x02\x02\u104D" +
        "\u104C\x03\x02\x02\x02\u104E\u1051\x03\x02\x02\x02\u104F\u104D\x03\x02" +
        "\x02\x02\u104F\u1050\x03\x02\x02\x02\u1050\u1052\x03\x02\x02\x02\u1051" +
        "\u104F\x03\x02\x02\x02\u1052\u1053\x07\x04\x02\x02\u1053\u02E1\x03\x02" +
        "\x02\x02\u1054\u1058\x07\u0123\x02\x02\u1055\u1057\x05\u02D6\u016C\x02" +
        "\u1056\u1055\x03\x02\x02\x02\u1057\u105A\x03\x02\x02\x02\u1058\u1056\x03" +
        "\x02\x02\x02\u1058\u1059\x03\x02\x02\x02\u1059\u105B\x03\x02\x02\x02\u105A" +
        "\u1058\x03\x02\x02\x02\u105B\u105C\x07\x04\x02\x02\u105C\u02E3\x03\x02" +
        "\x02\x02\u105D\u1063\x07\u0124\x02\x02\u105E\u1062\x07\u029D\x02\x02\u105F" +
        "\u1062\x05\u067E\u0340\x02\u1060\u1062\x05\u0680\u0341\x02\u1061\u105E" +
        "\x03\x02\x02\x02\u1061\u105F\x03\x02\x02\x02\u1061\u1060\x03\x02\x02\x02" +
        "\u1062\u1065\x03\x02\x02\x02\u1063\u1061\x03\x02\x02\x02\u1063\u1064\x03" +
        "\x02\x02\x02\u1064\u1066\x03\x02\x02\x02\u1065\u1063\x03\x02\x02\x02\u1066" +
        "\u1067\x07\x04\x02\x02\u1067\u02E5\x03\x02\x02\x02\u1068\u106C\x07\u0125" +
        "\x02\x02\u1069\u106D\x05\u02E4\u0173\x02\u106A\u106D\x05\u02D2\u016A\x02" +
        "\u106B\u106D\x05\u02D4\u016B\x02\u106C\u1069\x03\x02\x02\x02\u106C\u106A" +
        "\x03\x02\x02\x02\u106C\u106B\x03\x02\x02\x02\u106D\u106E\x03\x02\x02\x02" +
        "\u106E\u106F\x07\x04\x02\x02\u106F\u02E7\x03\x02\x02\x02\u1070\u1071\x07" +
        "\u0126\x02\x02\u1071\u1072\x07\x04\x02\x02\u1072\u02E9\x03\x02\x02\x02" +
        "\u1073\u1074\x07\u0127\x02\x02\u1074\u107C\x05\u02D0\u0169\x02\u1075\u107B" +
        "\x05\x96L\x02\u1076\u107B\x05\u02D2\u016A\x02\u1077\u107B\x05\u02E4\u0173" +
        "\x02\u1078\u107B\x05\u02EA\u0176\x02\u1079\u107B\x05\u02EE\u0178\x02\u107A" +
        "\u1075\x03\x02\x02\x02\u107A\u1076\x03\x02\x02\x02\u107A\u1077\x03\x02" +
        "\x02\x02\u107A\u1078\x03\x02\x02\x02\u107A\u1079\x03\x02\x02\x02\u107B" +
        "\u107E\x03\x02\x02\x02\u107C\u107A\x03\x02\x02\x02\u107C\u107D\x03\x02" +
        "\x02\x02\u107D\u107F\x03\x02\x02\x02\u107E\u107C\x03\x02\x02\x02\u107F" +
        "\u1080\x07\x04\x02\x02\u1080\u02EB\x03\x02\x02\x02\u1081\u1082\x07\u0128" +
        "\x02\x02\u1082\u1083\x07\x04\x02\x02\u1083\u02ED\x03\x02\x02\x02\u1084" +
        "\u1087\x07\u0129\x02\x02\u1085\u1088\x05\u02DA\u016E\x02\u1086\u1088\x05" +
        "\u02F2\u017A\x02\u1087\u1085\x03\x02\x02\x02\u1087\u1086\x03\x02\x02\x02" +
        "\u1088\u1090\x03\x02\x02\x02\u1089\u108F\x05\x96L\x02\u108A\u108F\x05" +
        "\u02D2\u016A\x02\u108B\u108F\x05\u02E4\u0173\x02\u108C\u108F\x05\u02EA" +
        "\u0176\x02\u108D\u108F\x05\u02EE\u0178\x02\u108E\u1089\x03\x02\x02\x02" +
        "\u108E\u108A\x03\x02\x02\x02\u108E\u108B\x03\x02\x02\x02\u108E\u108C\x03" +
        "\x02\x02\x02\u108E\u108D\x03\x02\x02\x02\u108F\u1092\x03\x02\x02\x02\u1090" +
        "\u108E\x03\x02\x02\x02\u1090\u1091\x03\x02\x02\x02\u1091\u1093\x03\x02" +
        "\x02\x02\u1092\u1090\x03\x02\x02\x02\u1093\u1094\x07\x04\x02\x02\u1094" +
        "\u02EF\x03\x02\x02\x02\u1095\u1096\x07\u012A\x02\x02\u1096\u109A\x05\u02D8" +
        "\u016D\x02\u1097\u109B\x05\u02E6\u0174\x02\u1098\u109B\x05\u02E8\u0175" +
        "\x02\u1099\u109B\x05\u02EC\u0177\x02\u109A\u1097\x03\x02\x02\x02\u109A" +
        "\u1098\x03\x02\x02\x02\u109A\u1099\x03\x02\x02\x02\u109B\u109C\x03\x02" +
        "\x02\x02\u109C\u109D\x07\x04\x02\x02\u109D\u02F1\x03\x02\x02\x02\u109E" +
        "\u10A2\x07\u012B\x02\x02\u109F\u10A1\x05\u02DA\u016E\x02\u10A0\u109F\x03" +
        "\x02\x02\x02\u10A1\u10A4\x03\x02\x02\x02\u10A2\u10A0\x03\x02\x02\x02\u10A2" +
        "\u10A3\x03\x02\x02\x02\u10A3\u10A5\x03\x02\x02\x02\u10A4\u10A2\x03\x02" +
        "\x02\x02\u10A5\u10A6\x07\x04\x02\x02\u10A6\u02F3\x03\x02\x02\x02\u10A7" +
        "\u10AF\x07\u012C\x02\x02\u10A8\u10AE\x05\x96L\x02\u10A9\u10AE\x05\u02D2" +
        "\u016A\x02\u10AA\u10AE\x05\u02D4\u016B\x02\u10AB\u10AE\x05\u02E4\u0173" +
        "\x02\u10AC\u10AE\x05\u02EE\u0178\x02\u10AD\u10A8\x03\x02\x02\x02\u10AD" +
        "\u10A9\x03\x02\x02\x02\u10AD\u10AA\x03\x02\x02\x02\u10AD\u10AB\x03\x02" +
        "\x02\x02\u10AD\u10AC\x03\x02\x02\x02\u10AE\u10B1\x03\x02\x02\x02\u10AF" +
        "\u10AD\x03\x02\x02\x02\u10AF\u10B0\x03\x02\x02\x02\u10B0\u10B2\x03\x02" +
        "\x02\x02\u10B1\u10AF\x03\x02\x02\x02\u10B2\u10B3\x07\x04\x02\x02\u10B3" +
        "\u02F5\x03\x02\x02\x02\u10B4\u10B5\x07\u012D\x02\x02\u10B5\u10B6\x05\u02CE" +
        "\u0168\x02\u10B6\u10B7\x05\u02FA\u017E\x02\u10B7\u10B8\x05\u02F4\u017B" +
        "\x02\u10B8\u10B9\x07\x04\x02\x02\u10B9\u02F7\x03\x02\x02\x02\u10BA\u10BF" +
        "\x07\u012E\x02\x02\u10BB\u10BE\x05\u02CA\u0166\x02\u10BC\u10BE\x05\u02F6" +
        "\u017C\x02\u10BD\u10BB\x03\x02\x02\x02\u10BD\u10BC\x03\x02\x02\x02\u10BE" +
        "\u10C1\x03\x02\x02\x02\u10BF\u10BD\x03\x02\x02\x02\u10BF\u10C0\x03\x02" +
        "\x02\x02\u10C0\u10C2\x03\x02\x02\x02\u10C1\u10BF\x03\x02\x02\x02\u10C2" +
        "\u10C3\x07\x04\x02\x02\u10C3\u02F9\x03\x02\x02\x02\u10C4\u10C8\x07\u012F" +
        "\x02\x02\u10C5\u10C7\x05\u02F0\u0179\x02\u10C6\u10C5\x03\x02\x02\x02\u10C7" +
        "\u10CA\x03\x02\x02\x02\u10C8\u10C6\x03\x02\x02\x02\u10C8\u10C9\x03\x02" +
        "\x02\x02\u10C9\u10CB\x03\x02\x02\x02\u10CA\u10C8\x03\x02\x02\x02\u10CB" +
        "\u10CC\x07\x04\x02\x02\u10CC\u02FB\x03\x02\x02\x02\u10CD\u10CE\x07\u0130" +
        "\x02\x02\u10CE\u10CF\x05\u0624\u0313\x02\u10CF\u10D0\x07\x04\x02\x02\u10D0" +
        "\u02FD\x03\x02\x02\x02\u10D1\u10D6\x07\u0131\x02\x02\u10D2\u10D7\x05\u02C8" +
        "\u0165\x02\u10D3\u10D7\x05\u02CC\u0167\x02\u10D4\u10D7\x05\u02E0\u0171" +
        "\x02\u10D5\u10D7\x05\u02F8\u017D\x02\u10D6\u10D2\x03\x02\x02\x02\u10D6" +
        "\u10D3\x03\x02\x02\x02\u10D6\u10D4\x03\x02\x02\x02\u10D6\u10D5\x03\x02" +
        "\x02\x02\u10D7\u10DB\x03\x02\x02\x02\u10D8\u10DA\x05\x96L\x02\u10D9\u10D8" +
        "\x03\x02\x02\x02\u10DA\u10DD\x03\x02\x02\x02\u10DB\u10D9\x03\x02\x02\x02" +
        "\u10DB\u10DC\x03\x02\x02\x02\u10DC\u10DE\x03\x02\x02\x02\u10DD\u10DB\x03" +
        "\x02\x02\x02\u10DE\u10DF\x07\x04\x02\x02\u10DF\u02FF\x03\x02\x02\x02\u10E0" +
        "\u10E1\x07\u0132\x02\x02\u10E1\u10E2\x05\u0624\u0313\x02\u10E2\u10E3\x07" +
        "\x04\x02\x02\u10E3\u0301\x03\x02\x02\x02\u10E4\u10E5\x07\u0133\x02\x02" +
        "\u10E5\u10E6\x07\x04\x02\x02\u10E6\u0303\x03\x02\x02\x02\u10E7\u10EA\x07" +
        "\u0134\x02\x02\u10E8\u10EB\x05\u017E\xC0\x02\u10E9\u10EB\x05\u0180\xC1" +
        "\x02\u10EA\u10E8\x03\x02\x02\x02\u10EA\u10E9\x03\x02\x02\x02\u10EB\u10F5" +
        "\x03\x02\x02\x02\u10EC\u10F4\x05h5\x02\u10ED\u10F4\x05\x90I\x02\u10EE" +
        "\u10F4\x05\x96L\x02\u10EF\u10F4\x05\u011A\x8E\x02\u10F0\u10F4\x05\u0270" +
        "\u0139\x02\u10F1\u10F4\x05\u0418\u020D\x02\u10F2\u10F4\x05\u0462\u0232" +
        "\x02\u10F3\u10EC\x03\x02\x02\x02\u10F3\u10ED\x03\x02\x02\x02\u10F3\u10EE" +
        "\x03\x02\x02\x02\u10F3\u10EF\x03\x02\x02\x02\u10F3\u10F0\x03\x02\x02\x02" +
        "\u10F3\u10F1\x03\x02\x02\x02\u10F3\u10F2\x03\x02\x02\x02\u10F4\u10F7\x03" +
        "\x02\x02\x02\u10F5\u10F3\x03\x02\x02\x02\u10F5\u10F6\x03\x02\x02\x02\u10F6" +
        "\u10F8\x03\x02\x02\x02\u10F7\u10F5\x03\x02\x02\x02\u10F8\u10F9\x07\x04" +
        "\x02\x02\u10F9\u0305\x03\x02\x02\x02\u10FA\u10FB\x07\u0135\x02\x02\u10FB" +
        "\u10FC\x07\x04\x02\x02\u10FC\u0307\x03\x02\x02\x02\u10FD\u10FE\x05\u013C" +
        "\x9F\x02\u10FE\u0309\x03\x02\x02\x02\u10FF\u1103\x07\u0136\x02\x02\u1100" +
        "\u1102\x05\u0280\u0141\x02\u1101\u1100\x03\x02\x02\x02\u1102\u1105\x03" +
        "\x02\x02\x02\u1103\u1101\x03\x02\x02\x02\u1103\u1104\x03\x02\x02\x02\u1104" +
        "\u1106\x03\x02\x02\x02\u1105\u1103\x03\x02\x02\x02\u1106\u1107\x07\x04" +
        "\x02\x02\u1107\u030B\x03\x02\x02\x02\u1108\u110C\x07\u0137\x02\x02\u1109" +
        "\u110B\x05\u0280\u0141\x02\u110A\u1109\x03\x02\x02\x02\u110B\u110E\x03" +
        "\x02\x02\x02\u110C\u110A\x03\x02\x02\x02\u110C\u110D\x03\x02\x02\x02\u110D" +
        "\u110F\x03\x02\x02\x02\u110E\u110C\x03\x02\x02\x02\u110F\u1110\x07\x04" +
        "\x02\x02\u1110\u030D\x03\x02\x02\x02\u1111\u1112\x07\u0138\x02\x02\u1112" +
        "\u1113\x05\u0314\u018B\x02\u1113\u1129\x05\u0310\u0189\x02\u1114\u1128" +
        "\x05^0\x02\u1115\u1128\x05\u04E4\u0273\x02\u1116\u1128\x05\u04EC\u0277" +
        "\x02\u1117\u1128\x05\u04C8\u0265\x02\u1118\u1128\x05\u04F4\u027B\x02\u1119" +
        "\u1128\x05\u0506\u0284\x02\u111A\u1128\x05\u050E\u0288\x02\u111B\u1128" +
        "\x05\u0544\u02A3\x02\u111C\u1128\x05\u0556\u02AC\x02\u111D\u1128\x05\u0560" +
        "\u02B1\x02\u111E\u1128\x05\u03CA\u01E6\x02\u111F\u1128\x05\u03EA\u01F6" +
        "\x02\u1120\u1128\x05\x96L\x02\u1121\u1128\x05\u01F0\xF9\x02\u1122\u1128" +
        "\x05\u04B2\u025A\x02\u1123\u1128\x05\u04B8\u025D\x02\u1124\u1128\x05\u04CE" +
        "\u0268\x02\u1125\u1128\x05\u0514\u028B\x02\u1126\u1128\x05\u0638\u031D" +
        "\x02\u1127\u1114\x03\x02\x02\x02\u1127\u1115\x03\x02\x02\x02\u1127\u1116" +
        "\x03\x02\x02\x02\u1127\u1117\x03\x02\x02\x02\u1127\u1118\x03\x02\x02\x02" +
        "\u1127\u1119\x03\x02\x02\x02\u1127\u111A\x03\x02\x02\x02\u1127\u111B\x03" +
        "\x02\x02\x02\u1127\u111C\x03\x02\x02\x02\u1127\u111D\x03\x02\x02\x02\u1127" +
        "\u111E\x03\x02\x02\x02\u1127\u111F\x03\x02\x02\x02\u1127\u1120\x03\x02" +
        "\x02\x02\u1127\u1121\x03\x02\x02\x02\u1127\u1122\x03\x02\x02\x02\u1127" +
        "\u1123\x03\x02\x02\x02\u1127\u1124\x03\x02\x02\x02\u1127\u1125\x03\x02" +
        "\x02\x02\u1127\u1126\x03\x02\x02\x02\u1128\u112B\x03\x02\x02\x02\u1129" +
        "\u1127\x03\x02\x02\x02\u1129\u112A\x03\x02\x02\x02\u112A\u112C\x03\x02" +
        "\x02\x02\u112B\u1129\x03\x02\x02\x02\u112C\u112D\x07\x04\x02\x02\u112D" +
        "\u030F\x03\x02\x02\x02\u112E\u112F\x07\u0139\x02\x02\u112F\u1130\x05\u0164" +
        "\xB3\x02\u1130\u1131\x05\u036E\u01B8\x02\u1131\u1139\x05\u05EC\u02F7\x02" +
        "\u1132\u1138\x05&\x14\x02\u1133\u1138\x05\u0142\xA2\x02\u1134\u1138\x05" +
        "\u0376\u01BC\x02\u1135\u1138\x05\u0462\u0232\x02\u1136\u1138\x05\u05BA" +
        "\u02DE\x02\u1137\u1132\x03\x02\x02\x02\u1137\u1133\x03\x02\x02\x02\u1137" +
        "\u1134\x03\x02\x02\x02\u1137\u1135\x03\x02\x02\x02\u1137\u1136\x03\x02" +
        "\x02\x02\u1138\u113B\x03\x02\x02\x02\u1139\u1137\x03\x02\x02\x02\u1139" +
        "\u113A\x03\x02\x02\x02\u113A\u113C\x03\x02\x02\x02\u113B\u1139\x03\x02" +
        "\x02\x02\u113C\u113D\x07\x04\x02\x02\u113D\u0311\x03\x02\x02\x02\u113E" +
        "\u113F\x07\u013A\x02\x02\u113F\u1140\x05J&\x02\u1140\u1141\x07\x04\x02" +
        "\x02\u1141\u0313\x03\x02\x02\x02\u1142\u1143\x05\u0370\u01B9\x02\u1143" +
        "\u0315\x03\x02\x02\x02\u1144\u1145\x05\u037A\u01BE\x02\u1145\u0317\x03" +
        "\x02\x02\x02\u1146\u1147\x07\u013B\x02\x02\u1147\u1148\x05J&\x02\u1148" +
        "\u1149\x07\x04\x02\x02\u1149\u0319\x03\x02\x02\x02\u114A\u114B\x05\u0370" +
        "\u01B9\x02\u114B\u031B\x03\x02\x02\x02\u114C\u114D\x05\u037A\u01BE\x02" +
        "\u114D\u031D\x03\x02\x02\x02\u114E\u114F\x07\u013C\x02\x02\u114F\u1150" +
        "\x05\u0316\u018C\x02\u1150\u1151\x07\x04\x02\x02\u1151\u031F\x03\x02\x02" +
        "\x02\u1152\u1153\x07\u013D\x02\x02\u1153\u1154\x05\f\x07\x02\u1154\u1155" +
        "\x05\n\x06\x02\u1155\u1156\x07\x04\x02\x02\u1156\u0321\x03\x02\x02\x02" +
        "\u1157\u1158\x07\u013E\x02\x02\u1158\u1159\x05\u0326\u0194\x02\u1159\u1160" +
        "\x05\u0432\u021A\x02\u115A\u115F\x05\x96L\x02\u115B\u115F\x05\u0376\u01BC" +
        "\x02\u115C\u115F\x05\u0462\u0232\x02\u115D\u115F\x05\u0638\u031D\x02\u115E" +
        "\u115A\x03\x02\x02\x02\u115E\u115B\x03\x02\x02\x02\u115E\u115C\x03\x02" +
        "\x02\x02\u115E\u115D\x03\x02\x02\x02\u115F\u1162\x03\x02\x02\x02\u1160" +
        "\u115E\x03\x02\x02\x02\u1160\u1161\x03\x02\x02\x02\u1161\u1163\x03\x02" +
        "\x02\x02\u1162\u1160\x03\x02\x02\x02\u1163\u1164\x07\x04\x02\x02\u1164" +
        "\u0323\x03\x02\x02\x02\u1165\u1166\x07\u013F\x02\x02\u1166\u1167\x05J" +
        "&\x02\u1167\u1168\x07\x04\x02\x02\u1168\u0325\x03\x02\x02\x02\u1169\u116A" +
        "\x05\u0370\u01B9\x02\u116A\u0327\x03\x02\x02\x02\u116B\u116C\x05\u037A" +
        "\u01BE\x02\u116C\u0329\x03\x02\x02\x02\u116D\u116E\x07\u0140\x02\x02\u116E" +
        "\u116F\x05\u0328\u0195\x02\u116F\u1170\x07\x04\x02\x02\u1170\u032B\x03" +
        "\x02\x02\x02\u1171\u117C\x07\u0141\x02\x02\u1172\u117B\x05\x96L\x02\u1173" +
        "\u117B\x05\u01C8\xE5\x02\u1174\u117B\x05\u022C\u0117\x02\u1175\u117B\x05" +
        "\u0256\u012C\x02\u1176\u117B\x05\u03B6\u01DC\x02\u1177\u117B\x05\u0594" +
        "\u02CB\x02\u1178\u117B\x05\u0598\u02CD\x02\u1179\u117B\x05\u0638\u031D" +
        "\x02\u117A\u1172\x03\x02\x02\x02\u117A\u1173\x03\x02\x02\x02\u117A\u1174" +
        "\x03\x02\x02\x02\u117A\u1175\x03\x02\x02\x02\u117A\u1176\x03\x02\x02\x02" +
        "\u117A\u1177\x03\x02\x02\x02\u117A\u1178\x03\x02\x02\x02\u117A\u1179\x03" +
        "\x02\x02\x02\u117B\u117E\x03\x02\x02\x02\u117C\u117A\x03\x02\x02\x02\u117C" +
        "\u117D\x03\x02\x02\x02\u117D\u117F\x03\x02\x02\x02\u117E\u117C\x03\x02" +
        "\x02\x02\u117F\u1180\x07\x04\x02\x02\u1180\u032D\x03\x02\x02\x02\u1181" +
        "\u1182\x07\u0142\x02\x02\u1182\u1183\x05\u058E\u02C8\x02\u1183\u1188\x05" +
        "\u0586\u02C4\x02\u1184\u1187\x05\x96L\x02\u1185\u1187\x05\u0342\u01A2" +
        "\x02\u1186\u1184\x03\x02\x02\x02\u1186\u1185\x03\x02\x02\x02\u1187\u118A" +
        "\x03\x02\x02\x02\u1188\u1186\x03\x02\x02\x02\u1188\u1189\x03\x02\x02\x02" +
        "\u1189\u118B\x03\x02\x02\x02\u118A\u1188\x03\x02\x02\x02\u118B\u118C\x07" +
        "\x04\x02\x02\u118C\u032F\x03\x02\x02\x02\u118D\u1193\x07\u0143\x02\x02" +
        "\u118E\u1192\x05\u0234\u011B\x02\u118F\u1192\x05\u033C\u019F\x02\u1190" +
        "\u1192\x05\u033E\u01A0\x02\u1191\u118E\x03\x02\x02\x02\u1191\u118F\x03" +
        "\x02\x02\x02\u1191\u1190\x03\x02\x02\x02\u1192\u1195\x03\x02\x02\x02\u1193" +
        "\u1191\x03\x02\x02\x02\u1193\u1194\x03\x02\x02\x02\u1194\u1196\x03\x02" +
        "\x02\x02\u1195\u1193\x03\x02\x02\x02\u1196\u1197\x07\x04\x02\x02\u1197" +
        "\u0331\x03\x02\x02\x02\u1198\u119C\x07\u0144\x02\x02\u1199\u119B\x05\u0340" +
        "\u01A1\x02\u119A\u1199\x03\x02\x02\x02\u119B\u119E\x03\x02\x02\x02\u119C" +
        "\u119A\x03\x02\x02\x02\u119C\u119D\x03\x02\x02\x02\u119D\u119F\x03\x02" +
        "\x02\x02\u119E\u119C\x03\x02\x02\x02\u119F\u11A0\x07\x04\x02\x02\u11A0" +
        "\u0333\x03\x02\x02\x02\u11A1\u11A5\x07\u0145\x02\x02\u11A2\u11A4\x05\u0340" +
        "\u01A1\x02\u11A3\u11A2\x03\x02\x02\x02\u11A4\u11A7\x03\x02\x02\x02\u11A5" +
        "\u11A3\x03\x02\x02\x02\u11A5\u11A6\x03\x02\x02\x02\u11A6\u11A8\x03\x02" +
        "\x02\x02\u11A7\u11A5\x03\x02\x02\x02\u11A8\u11A9\x07\x04\x02\x02\u11A9" +
        "\u0335\x03\x02\x02\x02\u11AA\u11AF\x07\u0146\x02\x02\u11AB\u11AE\x05\u0584" +
        "\u02C3\x02\u11AC\u11AE\x05\u058C\u02C7\x02\u11AD\u11AB\x03\x02\x02\x02" +
        "\u11AD\u11AC\x03\x02\x02\x02\u11AE\u11B1\x03\x02\x02\x02\u11AF\u11AD\x03" +
        "\x02\x02\x02\u11AF\u11B0\x03\x02\x02\x02\u11B0\u11B2\x03\x02\x02\x02\u11B1" +
        "\u11AF\x03\x02\x02\x02\u11B2\u11B3\x07\x04\x02\x02\u11B3\u0337\x03\x02" +
        "\x02\x02\u11B4\u11B5\x07\u0147\x02\x02\u11B5\u11BB\x05\u064E\u0328\x02" +
        "\u11B6\u11BA\x05\x96L\x02\u11B7\u11BA\x05\u0376\u01BC\x02\u11B8\u11BA" +
        "\x05\u0638\u031D\x02\u11B9\u11B6\x03\x02\x02\x02\u11B9\u11B7\x03\x02\x02" +
        "\x02\u11B9\u11B8\x03\x02\x02\x02\u11BA\u11BD\x03\x02\x02\x02\u11BB\u11B9" +
        "\x03\x02\x02\x02\u11BB\u11BC\x03\x02\x02\x02\u11BC\u11BE\x03\x02\x02\x02" +
        "\u11BD\u11BB\x03\x02\x02\x02\u11BE\u11BF\x07\x04\x02\x02\u11BF\u0339\x03" +
        "\x02\x02\x02\u11C0\u11C1\x05\u0370\u01B9\x02\u11C1\u033B\x03\x02\x02\x02" +
        "\u11C2\u11C3\x05\u037A\u01BE\x02\u11C3\u033D\x03\x02\x02\x02\u11C4\u11C9" +
        "\x07\u0148\x02\x02\u11C5\u11C8\x05\u0330\u0199\x02\u11C6\u11C8\x05\u033C" +
        "\u019F\x02\u11C7\u11C5\x03\x02\x02\x02\u11C7\u11C6\x03\x02\x02\x02\u11C8" +
        "\u11CB\x03\x02\x02\x02\u11C9\u11C7\x03\x02\x02\x02\u11C9\u11CA\x03\x02" +
        "\x02\x02\u11CA\u11CC\x03\x02\x02\x02\u11CB\u11C9\x03\x02\x02\x02\u11CC" +
        "\u11CD\x07\x04\x02\x02\u11CD\u033F\x03\x02\x02\x02\u11CE\u11CF\x07\u0149" +
        "\x02\x02\u11CF\u11D1\x05\u033C\u019F\x02\u11D0\u11D2\x05\u031E\u0190\x02" +
        "\u11D1\u11D0\x03\x02\x02\x02\u11D1\u11D2\x03\x02\x02\x02\u11D2\u11D3\x03" +
        "\x02\x02\x02\u11D3\u11D4\x07\x04\x02\x02\u11D4\u0341\x03\x02\x02\x02\u11D5" +
        "\u11D6\x07\u014A\x02\x02\u11D6\u11E7\x05\u033A\u019E\x02\u11D7\u11E6\x05" +
        "B\"\x02\u11D8\u11E6\x05\x96L\x02\u11D9\u11E6\x05\xA6T\x02\u11DA\u11E6" +
        "\x05\xECw\x02\u11DB\u11E6\x05\u014C\xA7\x02\u11DC\u11E6\x05\u02BA\u015E" +
        "\x02\u11DD\u11E6\x05\u0332\u019A\x02\u11DE\u11E6\x05\u0334\u019B\x02\u11DF" +
        "\u11E6\x05\u0376\u01BC\x02\u11E0\u11E6\x05\u0462\u0232\x02\u11E1\u11E6" +
        "\x05\u048E\u0248\x02\u11E2\u11E6\x05\u05D8\u02ED\x02\u11E3\u11E6\x05\u065E" +
        "\u0330\x02\u11E4\u11E6\x05\u0664\u0333\x02\u11E5\u11D7\x03\x02\x02\x02" +
        "\u11E5\u11D8\x03\x02\x02\x02\u11E5\u11D9\x03\x02\x02\x02\u11E5\u11DA\x03" +
        "\x02\x02\x02\u11E5\u11DB\x03\x02\x02\x02\u11E5\u11DC\x03\x02\x02\x02\u11E5" +
        "\u11DD\x03\x02\x02\x02\u11E5\u11DE\x03\x02\x02\x02\u11E5\u11DF\x03\x02" +
        "\x02\x02\u11E5\u11E0\x03\x02\x02\x02\u11E5\u11E1\x03\x02\x02\x02\u11E5" +
        "\u11E2\x03\x02\x02\x02\u11E5\u11E3\x03\x02\x02\x02\u11E5\u11E4\x03\x02" +
        "\x02\x02\u11E6\u11E9\x03\x02\x02\x02\u11E7\u11E5\x03\x02\x02\x02\u11E7" +
        "\u11E8\x03\x02\x02\x02\u11E8\u11EA\x03\x02\x02\x02\u11E9\u11E7\x03\x02" +
        "\x02\x02\u11EA\u11EB\x07\x04\x02\x02\u11EB\u0343\x03\x02\x02\x02\u11EC" +
        "\u11ED\x07\u014B\x02\x02\u11ED\u11EE\x07\x04\x02\x02\u11EE\u0345\x03\x02" +
        "\x02\x02\u11EF\u11F0\x05\u067E\u0340\x02\u11F0\u0347\x03\x02\x02\x02\u11F1" +
        "\u11F2\x05\u067E\u0340\x02\u11F2\u0349\x03\x02\x02\x02\u11F3\u11FA\x07" +
        "\u014C\x02\x02\u11F4\u11F9\x05\u0582\u02C2\x02\u11F5\u11F9\x05\u0584\u02C3" +
        "\x02\u11F6\u11F9\x05\u0588\u02C5\x02\u11F7\u11F9\x05\u058C\u02C7\x02\u11F8" +
        "\u11F4\x03\x02\x02\x02\u11F8\u11F5\x03\x02\x02\x02\u11F8\u11F6\x03\x02" +
        "\x02\x02\u11F8\u11F7\x03\x02\x02\x02\u11F9\u11FC\x03\x02\x02\x02\u11FA" +
        "\u11F8\x03\x02\x02\x02\u11FA\u11FB\x03\x02\x02\x02\u11FB\u11FD\x03\x02" +
        "\x02\x02\u11FC\u11FA\x03\x02\x02\x02\u11FD\u11FE\x07\x04\x02\x02\u11FE" +
        "\u034B\x03\x02\x02\x02\u11FF\u1200\x07\u014D\x02\x02\u1200\u1206\x05\u064E" +
        "\u0328\x02\u1201\u1205\x05\x96L\x02\u1202\u1205\x05\u0376\u01BC\x02\u1203" +
        "\u1205\x05\u0638\u031D\x02\u1204\u1201\x03\x02\x02\x02\u1204\u1202\x03" +
        "\x02\x02\x02\u1204\u1203\x03\x02\x02\x02\u1205\u1208\x03\x02\x02\x02\u1206" +
        "\u1204\x03\x02\x02\x02\u1206\u1207\x03\x02\x02\x02\u1207\u1209\x03\x02" +
        "\x02\x02\u1208\u1206\x03\x02\x02\x02\u1209\u120A\x07\x04\x02\x02\u120A" +
        "\u034D\x03\x02\x02\x02\u120B\u120C\x07\u014E\x02\x02\u120C\u120D\x07\x04" +
        "\x02\x02\u120D\u034F\x03\x02\x02\x02\u120E\u120F\x07\u014F\x02\x02\u120F" +
        "\u1210\x05\u0624\u0313\x02\u1210\u1211\x07\x04\x02\x02\u1211\u0351\x03" +
        "\x02\x02\x02\u1212\u1213\x07\u0150\x02\x02\u1213\u1214\x07\x04\x02\x02" +
        "\u1214\u0353\x03\x02\x02\x02\u1215\u1216\x07\u0151\x02\x02\u1216\u1217" +
        "\x07\x04\x02\x02\u1217\u0355\x03\x02\x02\x02\u1218\u1219\x07\u0152\x02" +
        "\x02\u1219\u121A\x05\u05DE\u02F0\x02\u121A\u121B\x07\x04\x02\x02\u121B" +
        "\u0357\x03\x02\x02\x02\u121C\u121D\x07\u0153\x02\x02\u121D\u121E\x05\u035A" +
        "\u01AE\x02\u121E\u121F\x07\x04\x02\x02\u121F\u0359\x03\x02\x02\x02\u1220" +
        "\u1223\x05\u039C\u01CF\x02\u1221\u1223\x05\u0362\u01B2\x02\u1222\u1220" +
        "\x03\x02\x02\x02\u1222\u1221\x03\x02\x02\x02\u1223\u035B\x03\x02\x02\x02" +
        "\u1224\u1225\x05\u0280\u0141\x02\u1225\u035D\x03\x02\x02\x02\u1226\u1227" +
        "\x05\u067E\u0340\x02\u1227\u035F\x03\x02\x02\x02\u1228\u1229\x07\u0154" +
        "\x02\x02\u1229\u122A\x07\x04\x02\x02\u122A\u0361\x03\x02\x02\x02\u122B" +
        "\u122F\x07\u0155\x02\x02\u122C\u1230\x05\u039C\u01CF\x02\u122D\u1230\x05" +
        "\u061E\u0310\x02\u122E\u1230\x05\u061C\u030F\x02\u122F\u122C\x03\x02\x02" +
        "\x02\u122F\u122D\x03\x02\x02\x02\u122F\u122E\x03\x02\x02\x02\u1230\u1234" +
        "\x03\x02\x02\x02\u1231\u1235\x05\u039C\u01CF\x02\u1232\u1235\x05\u061E" +
        "\u0310\x02\u1233\u1235\x05\u061C\u030F\x02\u1234\u1231\x03\x02\x02\x02" +
        "\u1234\u1232\x03\x02\x02\x02\u1234\u1233\x03\x02\x02\x02\u1235\u1239\x03" +
        "\x02\x02\x02\u1236\u123A\x05\u039C\u01CF\x02\u1237\u123A\x05\u061E\u0310" +
        "\x02\u1238\u123A\x05\u061C\u030F\x02\u1239\u1236\x03\x02\x02\x02\u1239" +
        "\u1237\x03\x02\x02\x02\u1239\u1238\x03\x02\x02\x02\u123A\u123B\x03\x02" +
        "\x02\x02\u123B\u123C\x07\x04\x02\x02\u123C\u0363\x03\x02\x02\x02\u123D" +
        "\u123E\x07\u0156\x02\x02";
    EDIF300Parser._serializedATNSegment9 = "\u123E\u123F\x05\u0624\u0313\x02\u123F\u1240\x07\x04\x02\x02\u1240\u0365" +
        "\x03\x02\x02\x02\u1241\u1242\x05\u067E\u0340\x02\u1242\u0367\x03\x02\x02" +
        "\x02\u1243\u1244\x07\u0157\x02\x02\u1244\u1245\x07\x04\x02\x02\u1245\u0369" +
        "\x03\x02\x02\x02\u1246\u124C\x07\u0158\x02\x02\u1247\u124B\x05\u02B2\u015A" +
        "\x02\u1248\u124B\x05\u0452\u022A\x02\u1249\u124B\x05\u0666\u0334\x02\u124A" +
        "\u1247\x03\x02\x02\x02\u124A\u1248\x03\x02\x02\x02\u124A\u1249\x03\x02" +
        "\x02\x02\u124B\u124E\x03\x02\x02\x02\u124C\u124A\x03\x02\x02\x02\u124C" +
        "\u124D\x03\x02\x02\x02\u124D\u124F\x03\x02\x02\x02\u124E\u124C\x03\x02" +
        "\x02\x02\u124F\u1250\x07\x04\x02\x02\u1250\u036B\x03\x02\x02\x02\u1251" +
        "\u1252\x07\u0159\x02\x02\u1252\u1258\x05\u03B4\u01DB\x02\u1253\u1257\x05" +
        "\u0138\x9D\x02\u1254\u1257\x05\u01EE\xF8\x02\u1255\u1257\x05\u037C\u01BF" +
        "\x02\u1256\u1253\x03\x02\x02\x02\u1256\u1254\x03\x02\x02\x02\u1256\u1255" +
        "\x03\x02\x02\x02\u1257\u125A\x03\x02\x02\x02\u1258\u1256\x03\x02\x02\x02" +
        "\u1258\u1259\x03\x02\x02\x02\u1259\u125B\x03\x02\x02\x02\u125A\u1258\x03" +
        "\x02\x02\x02\u125B\u125C\x07\x04\x02\x02\u125C\u036D\x03\x02\x02\x02\u125D" +
        "\u1278\x07\u015A\x02\x02\u125E\u1277\x05|?\x02\u125F\u1277\x05\x86D\x02" +
        "\u1260\u1277\x05\u0124\x93\x02\u1261\u1277\x05\u0128\x95\x02\u1262\u1277" +
        "\x05\u0146\xA4\x02\u1263\u1277\x05\u019C\xCF\x02\u1264\u1277\x05\u01D0" +
        "\xE9\x02\u1265\u1277\x05\u01DA\xEE\x02\u1266\u1277\x05\u0200\u0101\x02" +
        "\u1267\u1277\x05\u021C\u010F\x02\u1268\u1277\x05\u0236\u011C\x02\u1269" +
        "\u1277\x05\u025E\u0130\x02\u126A\u1277\x05\u02A2\u0152\x02\u126B\u1277" +
        "\x05\u0312\u018A\x02\u126C\u1277\x05\u0318\u018D\x02\u126D\u1277\x05\u0324" +
        "\u0193\x02\u126E\u1277\x05\u03D6\u01EC\x02\u126F\u1277\x05\u03F2\u01FA" +
        "\x02\u1270\u1277\x05\u0440\u0221\x02\u1271\u1277\x05\u046A\u0236\x02\u1272" +
        "\u1277\x05\u059C\u02CF\x02\u1273\u1277\x05\u05AC\u02D7\x02\u1274\u1277" +
        "\x05\u0644\u0323\x02\u1275\u1277\x05\u064C\u0327\x02\u1276\u125E\x03\x02" +
        "\x02\x02\u1276\u125F\x03\x02\x02\x02\u1276\u1260\x03\x02\x02\x02\u1276" +
        "\u1261\x03\x02\x02\x02\u1276\u1262\x03\x02\x02\x02\u1276\u1263\x03\x02" +
        "\x02\x02\u1276\u1264\x03\x02\x02\x02\u1276\u1265\x03\x02\x02\x02\u1276" +
        "\u1266\x03\x02\x02\x02\u1276\u1267\x03\x02\x02\x02\u1276\u1268\x03\x02" +
        "\x02\x02\u1276\u1269\x03\x02\x02\x02\u1276\u126A\x03\x02\x02\x02\u1276" +
        "\u126B\x03\x02\x02\x02\u1276\u126C\x03\x02\x02\x02\u1276\u126D\x03\x02" +
        "\x02\x02\u1276\u126E\x03\x02\x02\x02\u1276\u126F\x03\x02\x02\x02\u1276" +
        "\u1270\x03\x02\x02\x02\u1276\u1271\x03\x02\x02\x02\u1276\u1272\x03\x02" +
        "\x02\x02\u1276\u1273\x03\x02\x02\x02\u1276\u1274\x03\x02\x02\x02\u1276" +
        "\u1275\x03\x02\x02\x02\u1277\u127A\x03\x02\x02\x02\u1278\u1276\x03\x02" +
        "\x02\x02\u1278\u1279\x03\x02\x02\x02\u1279\u127B\x03\x02\x02\x02\u127A" +
        "\u1278\x03\x02\x02\x02\u127B\u127C\x07\x04\x02\x02\u127C\u036F\x03\x02" +
        "\x02\x02\u127D\u127E\x07\u029D\x02\x02\u127E\u0371\x03\x02\x02\x02\u127F" +
        "\u1280\x07\u015B\x02\x02\u1280\u1282\x05\u0374\u01BB\x02\u1281\u1283\x05" +
        "4\x1B\x02\u1282\u1281\x03\x02\x02\x02\u1282\u1283\x03\x02\x02\x02\u1283" +
        "\u1284\x03\x02\x02\x02\u1284\u1285\x07\x04\x02\x02\u1285\u0373\x03\x02" +
        "\x02\x02\u1286\u128E\x07\u015C\x02\x02\u1287\u128D\x05\x9EP\x02\u1288" +
        "\u128D\x05\xA4S\x02\u1289\u128D\x05\u0292\u014A\x02\u128A\u128D\x05\u0580" +
        "\u02C1\x02\u128B\u128D\x05\u05B6\u02DC\x02\u128C\u1287\x03\x02\x02\x02" +
        "\u128C\u1288\x03\x02\x02\x02\u128C\u1289\x03\x02\x02\x02\u128C\u128A\x03" +
        "\x02\x02\x02\u128C\u128B\x03\x02\x02\x02\u128D\u1290\x03\x02\x02\x02\u128E" +
        "\u128C\x03\x02\x02\x02\u128E\u128F\x03\x02\x02\x02\u128F\u1291\x03\x02" +
        "\x02\x02\u1290\u128E\x03\x02\x02\x02\u1291\u1292\x07\x04\x02\x02\u1292" +
        "\u0375\x03\x02\x02\x02\u1293\u1294\x07\u015D\x02\x02\u1294\u1298\x05\u045E" +
        "\u0230\x02\u1295\u1297\x05\u036C\u01B7\x02\u1296\u1295\x03\x02\x02\x02" +
        "\u1297\u129A\x03\x02\x02\x02\u1298\u1296\x03\x02\x02\x02\u1298\u1299\x03" +
        "\x02\x02\x02\u1299\u129B\x03\x02\x02\x02\u129A\u1298\x03\x02\x02\x02\u129B" +
        "\u129C\x07\x04\x02\x02\u129C\u0377\x03\x02\x02\x02\u129D\u129E\x07\u015E" +
        "\x02\x02\u129E\u129F\x05\u0680\u0341\x02\u129F\u12A0\x07\x04\x02\x02\u12A0" +
        "\u0379\x03\x02\x02\x02\u12A1\u12A2\x07\u029D\x02\x02\u12A2\u037B\x03\x02" +
        "\x02\x02\u12A3\u12A7\x07\u015F\x02\x02\u12A4\u12A8\x05\u05B6\u02DC\x02" +
        "\u12A5\u12A8\x05\xA4S\x02\u12A6\u12A8\x05\x9EP\x02\u12A7\u12A4\x03\x02" +
        "\x02\x02\u12A7\u12A5\x03\x02\x02\x02\u12A7\u12A6\x03\x02\x02\x02\u12A8" +
        "\u12A9\x03\x02\x02\x02\u12A9\u12AA\x07\x04\x02\x02\u12AA\u037D\x03\x02" +
        "\x02\x02\u12AB\u12AC\x07\u0160\x02\x02\u12AC\u12AD\x07\x04\x02\x02\u12AD" +
        "\u037F\x03\x02\x02\x02\u12AE\u12AF\x07\u0161\x02\x02\u12AF\u12B0\x07\x04" +
        "\x02\x02\u12B0\u0381\x03\x02\x02\x02\u12B1\u12B2\x07\u0162\x02\x02\u12B2" +
        "\u12B3\x07\x04\x02\x02\u12B3\u0383\x03\x02\x02\x02\u12B4\u12B5\x07\u0163" +
        "\x02\x02\u12B5\u12B6\x05\u0308\u0185\x02\u12B6\u12B7\x07\x04\x02\x02\u12B7" +
        "\u0385\x03\x02\x02\x02\u12B8\u12BD\x07\u0164\x02\x02\u12B9\u12BC\x05\u0404" +
        "\u0203\x02\u12BA\u12BC\x05\u0452\u022A\x02\u12BB\u12B9\x03\x02\x02\x02" +
        "\u12BB\u12BA\x03\x02\x02\x02\u12BC\u12BF\x03\x02\x02\x02\u12BD\u12BB\x03" +
        "\x02\x02\x02\u12BD\u12BE\x03\x02\x02\x02\u12BE\u12C0\x03\x02\x02\x02\u12BF" +
        "\u12BD\x03\x02\x02\x02\u12C0\u12C1\x07\x04\x02\x02\u12C1\u0387\x03\x02" +
        "\x02\x02\u12C2\u12C3\x07\u0165\x02\x02\u12C3\u12C4\x05@!\x02\u12C4\u12C5" +
        "\x07\x04\x02\x02\u12C5\u0389\x03\x02\x02\x02\u12C6\u12C7\x07\u0166\x02" +
        "\x02\u12C7\u12C8\x07\x04\x02\x02\u12C8\u038B\x03\x02\x02\x02\u12C9\u12CA" +
        "\x07\u0167\x02\x02\u12CA\u12CB\x05\u038E\u01C8\x02\u12CB\u12CC\x07\x04" +
        "\x02\x02\u12CC\u038D\x03\x02\x02\x02\u12CD\u12D0\x05\u039C\u01CF\x02\u12CE" +
        "\u12D0\x05\u0398\u01CD\x02\u12CF\u12CD\x03\x02\x02\x02\u12CF\u12CE\x03" +
        "\x02\x02\x02\u12D0\u038F\x03\x02\x02\x02\u12D1\u12D2\x05\u04A0\u0251\x02" +
        "\u12D2\u0391\x03\x02\x02\x02\u12D3\u12D4\x05\u04A0\u0251\x02\u12D4\u0393" +
        "\x03\x02\x02\x02\u12D5\u12D6\x07\u0168\x02\x02\u12D6\u12DB\x05\u03F4\u01FB" +
        "\x02\u12D7\u12DA\x05\u0376\u01BC\x02\u12D8\u12DA\x05\u038C\u01C7\x02\u12D9" +
        "\u12D7\x03\x02\x02\x02\u12D9\u12D8\x03\x02\x02\x02\u12DA\u12DD\x03\x02" +
        "\x02\x02\u12DB\u12D9\x03\x02\x02\x02\u12DB\u12DC\x03\x02\x02\x02\u12DC" +
        "\u12DE\x03\x02\x02\x02\u12DD\u12DB\x03\x02\x02\x02\u12DE\u12DF\x07\x04" +
        "\x02\x02\u12DF\u0395\x03\x02\x02\x02\u12E0\u12E1\x07\u0169\x02\x02\u12E1" +
        "\u12E2\x05\u03F8\u01FD\x02\u12E2\u12E3\x05\u038E\u01C8\x02\u12E3\u12E4" +
        "\x07\x04\x02\x02\u12E4\u0397\x03\x02\x02\x02\u12E5\u12E6\x07\u016A\x02" +
        "\x02\u12E6\u12E7\x05\u03F8\u01FD\x02\u12E7\u12E8\x07\x04\x02\x02\u12E8" +
        "\u0399\x03\x02\x02\x02\u12E9\u12EA\x07\u016B\x02\x02\u12EA\u12EB\x05\u0672" +
        "\u033A\x02\u12EB\u12EC\x05\u067C\u033F\x02\u12EC\u12ED\x07\x04\x02\x02" +
        "\u12ED\u039B\x03\x02\x02\x02\u12EE\u12EF\x05\u04A0\u0251\x02\u12EF\u039D" +
        "\x03\x02\x02\x02\u12F0\u12F1\x05\u0292\u014A\x02\u12F1\u039F\x03\x02\x02" +
        "\x02\u12F2\u12F5\x07\u016C\x02\x02\u12F3\u12F6\x05\u017E\xC0\x02\u12F4" +
        "\u12F6\x05\u0180\xC1\x02\u12F5\u12F3\x03\x02\x02\x02\u12F5\u12F4\x03\x02" +
        "\x02\x02\u12F6\u130B\x03\x02\x02\x02\u12F7\u130A\x05h5\x02\u12F8\u130A" +
        "\x05\x90I\x02\u12F9\u130A\x05\x96L\x02\u12FA\u130A\x05\u011A\x8E\x02\u12FB" +
        "\u130A\x05\u01CA\xE6\x02\u12FC\u130A\x05\u022E\u0118\x02\u12FD\u130A\x05" +
        "\u0270\u0139\x02\u12FE\u130A\x05\u0294\u014B\x02\u12FF\u130A\x05\u0304" +
        "\u0183\x02\u1300\u130A\x05\u03A0\u01D1\x02\u1301\u130A\x05\u03B8\u01DD" +
        "\x02\u1302\u130A\x05\u03C6\u01E4\x02\u1303\u130A\x05\u0418\u020D\x02\u1304" +
        "\u130A\x05\u0462\u0232\x02\u1305\u130A\x05\u0596\u02CC\x02\u1306\u130A" +
        "\x05\u059A\u02CE\x02\u1307\u130A\x05\u05FC\u02FF\x02\u1308\u130A\x05\u0656" +
        "\u032C\x02\u1309\u12F7\x03\x02\x02\x02\u1309\u12F8\x03\x02\x02\x02\u1309" +
        "\u12F9\x03\x02\x02\x02\u1309\u12FA\x03\x02\x02\x02\u1309\u12FB\x03\x02" +
        "\x02\x02\u1309\u12FC\x03\x02\x02\x02\u1309\u12FD\x03\x02\x02\x02\u1309" +
        "\u12FE\x03\x02\x02\x02\u1309\u12FF\x03\x02\x02\x02\u1309\u1300\x03\x02" +
        "\x02\x02\u1309\u1301\x03\x02\x02\x02\u1309\u1302\x03\x02\x02\x02\u1309" +
        "\u1303\x03\x02\x02\x02\u1309\u1304\x03\x02\x02\x02\u1309\u1305\x03\x02" +
        "\x02\x02\u1309\u1306\x03\x02\x02\x02\u1309\u1307\x03\x02\x02\x02\u1309" +
        "\u1308\x03\x02\x02\x02\u130A\u130D\x03\x02\x02\x02\u130B\u1309\x03\x02" +
        "\x02\x02\u130B\u130C\x03\x02\x02\x02\u130C\u130E\x03\x02\x02\x02\u130D" +
        "\u130B\x03\x02\x02\x02\u130E\u130F\x07\x04\x02\x02\u130F\u03A1\x03\x02" +
        "\x02\x02\u1310\u1322\x07\u016D\x02\x02\u1311\u1321\x05h5\x02\u1312\u1321" +
        "\x05\x90I\x02\u1313\u1321\x05\x96L\x02\u1314\u1321\x05\u01CA\xE6\x02\u1315" +
        "\u1321\x05\u022E\u0118\x02\u1316\u1321\x05\u0294\u014B\x02\u1317\u1321" +
        "\x05\u0304\u0183\x02\u1318\u1321\x05\u03A0\u01D1\x02\u1319\u1321\x05\u03B8" +
        "\u01DD\x02\u131A\u1321\x05\u03C6\u01E4\x02\u131B\u1321\x05\u0418\u020D" +
        "\x02\u131C\u1321\x05\u0596\u02CC\x02\u131D\u1321\x05\u059A\u02CE\x02\u131E" +
        "\u1321\x05\u05FC\u02FF\x02\u131F\u1321\x05\u0656\u032C\x02\u1320\u1311" +
        "\x03\x02\x02\x02\u1320\u1312\x03\x02\x02\x02\u1320\u1313\x03\x02\x02\x02" +
        "\u1320\u1314\x03\x02\x02\x02\u1320\u1315\x03\x02\x02\x02\u1320\u1316\x03" +
        "\x02\x02\x02\u1320\u1317\x03\x02\x02\x02\u1320\u1318\x03\x02\x02\x02\u1320" +
        "\u1319\x03\x02\x02\x02\u1320\u131A\x03\x02\x02\x02\u1320\u131B\x03\x02" +
        "\x02\x02\u1320\u131C\x03\x02\x02\x02\u1320\u131D\x03\x02\x02\x02\u1320" +
        "\u131E\x03\x02\x02\x02\u1320\u131F\x03\x02\x02\x02\u1321\u1324\x03\x02" +
        "\x02\x02\u1322\u1320\x03\x02\x02\x02\u1322\u1323\x03\x02\x02\x02\u1323" +
        "\u1325\x03\x02\x02\x02\u1324\u1322\x03\x02\x02\x02\u1325\u1326\x07\x04" +
        "\x02\x02\u1326\u03A3\x03\x02\x02\x02\u1327\u1328\x07\u016E\x02\x02\u1328" +
        "\u1329\x05\u0174\xBB\x02\u1329\u132A\x05\u039C\u01CF\x02\u132A\u132B\x07" +
        "\x04\x02\x02\u132B\u03A5\x03\x02\x02\x02\u132C\u132D\x07\u016F\x02\x02" +
        "\u132D\u132E\x05\u0624\u0313\x02\u132E\u132F\x07\x04\x02\x02\u132F\u03A7" +
        "\x03\x02\x02\x02\u1330\u1331\x07\u0170\x02\x02\u1331\u1332\x05\xF0y\x02" +
        "\u1332\u1333\x07\x04\x02\x02\u1333\u03A9\x03\x02\x02\x02\u1334\u1338\x07" +
        "\u0171\x02\x02\u1335\u1337\x05@!\x02\u1336\u1335\x03\x02\x02\x02\u1337" +
        "\u133A\x03\x02\x02\x02\u1338\u1336\x03\x02\x02\x02\u1338\u1339\x03\x02" +
        "\x02\x02\u1339\u133B\x03\x02\x02\x02\u133A\u1338\x03\x02\x02\x02\u133B" +
        "\u133C\x07\x04\x02\x02\u133C\u03AB\x03\x02\x02\x02\u133D\u133E\x07\u0172" +
        "\x02\x02\u133E\u133F\x05\u0412\u020A\x02\u133F\u1340\x07\x04\x02\x02\u1340" +
        "\u03AD\x03\x02\x02\x02\u1341\u1342\x07\u0173\x02\x02\u1342\u1343\x05\u0480" +
        "\u0241\x02\u1343\u1344\x07\x04\x02\x02\u1344\u03AF\x03\x02\x02\x02\u1345" +
        "\u1346\x07\u0174\x02\x02\u1346\u1347\x05\xF4{\x02\u1347\u1348\x07\x04" +
        "\x02\x02\u1348\u03B1\x03\x02\x02\x02\u1349\u134D\x07\u0175\x02\x02\u134A" +
        "\u134E\x05\x0E\b\x02\u134B\u134E\x05\u048A\u0246\x02\u134C\u134E\x05\u0484" +
        "\u0243\x02\u134D\u134A\x03\x02\x02\x02\u134D\u134B\x03\x02\x02\x02\u134D" +
        "\u134C\x03\x02\x02\x02\u134E\u134F\x03\x02\x02\x02\u134F\u1350\x07\x04" +
        "\x02\x02\u1350\u03B3\x03\x02\x02\x02\u1351\u1352\x05\u0680\u0341\x02\u1352" +
        "\u03B5\x03\x02\x02\x02\u1353\u1354\x07\u0176\x02\x02\u1354\u1355\x05\u01DC" +
        "\xEF\x02\u1355\u1356\x05\u0232\u011A\x02\u1356\u135E\x05\u032C\u0197\x02" +
        "\u1357\u135D\x05\x96L\x02\u1358\u135D\x05\u0142\xA2\x02\u1359\u135D\x05" +
        "\u0376\u01BC\x02\u135A\u135D\x05\u0462\u0232\x02\u135B\u135D\x05\u0638" +
        "\u031D\x02\u135C\u1357\x03\x02\x02\x02\u135C\u1358\x03\x02\x02\x02\u135C" +
        "\u1359\x03\x02\x02\x02\u135C\u135A\x03\x02\x02\x02\u135C\u135B\x03\x02" +
        "\x02\x02\u135D\u1360\x03\x02\x02\x02\u135E\u135C\x03\x02\x02\x02\u135E" +
        "\u135F\x03\x02\x02\x02\u135F\u1361\x03\x02\x02\x02\u1360\u135E\x03\x02" +
        "\x02\x02\u1361\u1362\x07\x04\x02\x02\u1362\u03B7\x03\x02\x02\x02\u1363" +
        "\u1364\x07\u0177\x02\x02\u1364\u136F\x05\u017C\xBF\x02\u1365\u136E\x05" +
        "\x96L\x02\u1366\u136E\x05\u01CA\xE6\x02\u1367\u136E\x05\u022E\u0118\x02" +
        "\u1368\u136E\x05\u0294\u014B\x02\u1369\u136E\x05\u0304\u0183\x02\u136A" +
        "\u136E\x05\u03A0\u01D1\x02\u136B\u136E\x05\u03B8\u01DD\x02\u136C\u136E" +
        "\x05\u0472\u023A\x02\u136D\u1365\x03\x02\x02\x02\u136D\u1366\x03\x02\x02" +
        "\x02\u136D\u1367\x03\x02\x02\x02\u136D\u1368\x03\x02\x02\x02\u136D\u1369" +
        "\x03\x02\x02\x02\u136D\u136A\x03\x02\x02\x02\u136D\u136B\x03\x02\x02\x02" +
        "\u136D\u136C\x03\x02\x02\x02\u136E\u1371\x03\x02\x02\x02\u136F\u136D\x03" +
        "\x02\x02\x02\u136F\u1370\x03\x02\x02\x02\u1370\u1372\x03\x02\x02\x02\u1371" +
        "\u136F\x03\x02\x02\x02\u1372\u1373\x07\x04\x02\x02\u1373\u03B9\x03\x02" +
        "\x02\x02\u1374\u1375\x07\u0178\x02\x02\u1375\u1376\x05\u01DE\xF0\x02\u1376" +
        "\u1377\x07\x04\x02\x02\u1377\u03BB\x03\x02\x02\x02\u1378\u1379\x07\u0179" +
        "\x02\x02\u1379\u137A\x07\x04\x02\x02\u137A\u03BD\x03\x02\x02\x02\u137B" +
        "\u137D\x07\u017A\x02\x02\u137C\u137E\x05\u03C0\u01E1\x02\u137D\u137C\x03" +
        "\x02\x02\x02\u137D\u137E\x03\x02\x02\x02\u137E\u137F\x03\x02\x02\x02\u137F" +
        "\u1380\x07\x04\x02\x02\u1380\u03BF\x03\x02\x02\x02\u1381\u1386\x07\u017B" +
        "\x02\x02\u1382\u1385\x05\xF8}\x02\u1383\u1385\x05\u0104\x83\x02\u1384" +
        "\u1382\x03\x02\x02\x02\u1384\u1383\x03\x02\x02\x02\u1385\u1388\x03\x02" +
        "\x02\x02\u1386\u1384\x03\x02\x02\x02\u1386\u1387\x03\x02\x02\x02\u1387" +
        "\u1389\x03\x02\x02\x02\u1388\u1386\x03\x02\x02\x02\u1389\u138A\x07\x04" +
        "\x02\x02\u138A\u03C1\x03\x02\x02\x02\u138B\u138C\x07\u017C\x02\x02\u138C" +
        "\u138D\x05\u05D6\u02EC\x02\u138D\u138E\x07\x04\x02\x02\u138E\u03C3\x03" +
        "\x02\x02\x02\u138F\u1390\x07\u017D\x02\x02\u1390\u1391\x05\u03D8\u01ED" +
        "\x02\u1391\u13A8\x05\u03D0\u01E9\x02\u1392\u13A7\x05d3\x02\u1393\u13A7" +
        "\x05\x8CG\x02\u1394\u13A7\x05\x96L\x02\u1395\u13A7\x05\u0322\u0192\x02" +
        "\u1396\u13A7\x05\u03CE\u01E8\x02\u1397\u13A7\x05\u03E4\u01F3\x02\u1398" +
        "\u13A7\x05\u0464\u0233\x02\u1399\u13A7\x05\u04A6\u0254\x02\u139A\u13A7" +
        "\x05\u04BC\u025F\x02\u139B\u13A7\x05\u04C4\u0263\x02\u139C\u13A7\x05\u04D2" +
        "\u026A\x02\u139D\u13A7\x05\u04D8\u026D\x02\u139E\u13A7\x05\u04F0\u0279" +
        "\x02\u139F\u13A7\x05\u04FA\u027E\x02\u13A0\u13A7\x05\u0502\u0282\x02\u13A1" +
        "\u13A7\x05\u050A\u0286\x02\u13A2\u13A7\x05\u0518\u028D\x02\u13A3\u13A7" +
        "\x05\u0540\u02A1\x02\u13A4\u13A7\x05\u0638\u031D\x02\u13A5\u13A7\x05\u0654" +
        "\u032B\x02\u13A6\u1392\x03\x02\x02\x02\u13A6\u1393\x03\x02\x02\x02\u13A6" +
        "\u1394\x03\x02\x02\x02\u13A6\u1395\x03\x02\x02\x02\u13A6\u1396\x03\x02" +
        "\x02\x02\u13A6\u1397\x03\x02\x02\x02\u13A6\u1398\x03\x02\x02\x02\u13A6" +
        "\u1399\x03\x02\x02\x02\u13A6\u139A\x03\x02\x02\x02\u13A6\u139B\x03\x02" +
        "\x02\x02\u13A6\u139C\x03\x02\x02\x02\u13A6\u139D\x03\x02\x02\x02\u13A6" +
        "\u139E\x03\x02\x02\x02\u13A6\u139F\x03\x02\x02\x02\u13A6\u13A0\x03\x02" +
        "\x02\x02\u13A6\u13A1\x03\x02\x02\x02\u13A6\u13A2\x03\x02\x02\x02\u13A6" +
        "\u13A3\x03\x02\x02\x02\u13A6\u13A4\x03\x02\x02\x02\u13A6\u13A5\x03\x02" +
        "\x02\x02\u13A7\u13AA\x03\x02\x02\x02\u13A8\u13A6\x03\x02\x02\x02\u13A8" +
        "\u13A9\x03\x02\x02\x02\u13A9\u13AB\x03\x02\x02\x02\u13AA\u13A8\x03\x02" +
        "\x02\x02\u13AB\u13AC\x07\x04\x02\x02\u13AC\u03C5\x03\x02\x02\x02\u13AD" +
        "\u13AE\x07\u017E\x02\x02\u13AE\u13B2\x05\u0184\xC3\x02\u13AF\u13B1\x05" +
        "\u0294\u014B\x02\u13B0\u13AF\x03\x02\x02\x02\u13B1\u13B4\x03\x02\x02\x02" +
        "\u13B2\u13B0\x03\x02\x02\x02\u13B2\u13B3\x03\x02\x02\x02\u13B3\u13B5\x03" +
        "\x02\x02\x02\u13B4\u13B2\x03\x02\x02\x02\u13B5\u13B6\x07\x04\x02\x02\u13B6" +
        "\u03C7\x03\x02\x02\x02\u13B7\u13B8\x07\u017F\x02\x02\u13B8\u13B9\x05\u03CC" +
        "\u01E7\x02\u13B9\u13BE\x05\u060C\u0307\x02\u13BA\u13BD\x05\u0466\u0234" +
        "\x02\u13BB\u13BD\x05\u0472\u023A\x02\u13BC\u13BA\x03\x02\x02\x02\u13BC" +
        "\u13BB\x03\x02\x02\x02\u13BD\u13C0\x03\x02\x02\x02\u13BE\u13BC\x03\x02" +
        "\x02\x02\u13BE\u13BF\x03\x02\x02\x02\u13BF\u13C1\x03\x02\x02\x02\u13C0" +
        "\u13BE\x03\x02\x02\x02\u13C1\u13C2\x07\x04\x02\x02\u13C2\u03C9\x03\x02" +
        "\x02\x02\u13C3\u13C4\x07\u0180\x02\x02\u13C4\u13C5\x05\u031A\u018E\x02" +
        "\u13C5\u13C6\x05\u0566\u02B4\x02\u13C6\u13CE\x05\u0636\u031C\x02\u13C7" +
        "\u13CD\x05\x16\f\x02\u13C8\u13CD\x05\x98M\x02\u13C9\u13CD\x05\u0198\xCD" +
        "\x02\u13CA\u13CD\x05\u0464\u0233\x02\u13CB\u13CD\x05\u04B0\u0259\x02\u13CC" +
        "\u13C7\x03\x02\x02\x02\u13CC\u13C8\x03\x02\x02\x02\u13CC\u13C9\x03\x02" +
        "\x02\x02\u13CC\u13CA\x03\x02\x02\x02\u13CC\u13CB\x03\x02\x02\x02\u13CD" +
        "\u13D0\x03\x02\x02\x02\u13CE\u13CC\x03\x02\x02\x02\u13CE\u13CF\x03\x02" +
        "\x02\x02\u13CF\u13D1\x03\x02\x02\x02\u13D0\u13CE\x03\x02\x02\x02\u13D1" +
        "\u13D2\x07\x04\x02\x02\u13D2\u03CB\x03\x02\x02\x02\u13D3\u13D4\x07\u0181" +
        "\x02\x02\u13D4\u13D6\x05\u031C\u018F\x02\u13D5\u13D7\x05\u031E\u0190\x02" +
        "\u13D6\u13D5\x03\x02\x02\x02\u13D6\u13D7\x03\x02\x02\x02\u13D7\u13D8\x03" +
        "\x02\x02\x02\u13D8\u13D9\x07\x04\x02\x02\u13D9\u03CD\x03\x02\x02\x02\u13DA" +
        "\u13E2\x07\u0182\x02\x02\u13DB\u13E1\x05\x16\f\x02\u13DC\u13E1\x05\x96" +
        "L\x02\u13DD\u13E1\x05\u0198\xCD\x02\u13DE\u13E1\x05\u04B0\u0259\x02\u13DF" +
        "\u13E1\x05\u0638\u031D\x02\u13E0\u13DB\x03\x02\x02\x02\u13E0\u13DC\x03" +
        "\x02\x02\x02\u13E0\u13DD\x03\x02\x02\x02\u13E0\u13DE\x03\x02\x02\x02\u13E0" +
        "\u13DF\x03\x02\x02\x02\u13E1\u13E4\x03\x02\x02\x02\u13E2\u13E0\x03\x02" +
        "\x02\x02\u13E2\u13E3\x03\x02\x02\x02\u13E3\u13E5\x03\x02\x02\x02\u13E4" +
        "\u13E2\x03\x02\x02\x02\u13E5\u13E6\x07\x04\x02\x02\u13E6\u03CF\x03\x02" +
        "\x02\x02\u13E7\u13F2\x07\u0183\x02\x02\u13E8\u13F1\x05&\x14\x02\u13E9" +
        "\u13F1\x05\u0142\xA2\x02\u13EA\u13F1\x05\u0376\u01BC\x02\u13EB\u13F1\x05" +
        "\u03AE\u01D8\x02\u13EC\u13F1\x05\u03C8\u01E5\x02\u13ED\u13F1\x05\u03E0" +
        "\u01F1\x02\u13EE\u13F1\x05\u0462\u0232\x02\u13EF\u13F1\x05\u05BA\u02DE" +
        "\x02\u13F0\u13E8\x03\x02\x02\x02\u13F0\u13E9\x03\x02\x02\x02\u13F0\u13EA" +
        "\x03\x02\x02\x02\u13F0\u13EB\x03\x02\x02\x02\u13F0\u13EC\x03\x02\x02\x02" +
        "\u13F0\u13ED\x03\x02\x02\x02\u13F0\u13EE\x03\x02\x02\x02\u13F0\u13EF\x03" +
        "\x02\x02\x02\u13F1\u13F4\x03\x02\x02\x02\u13F2\u13F0\x03\x02\x02\x02\u13F2" +
        "\u13F3\x03\x02\x02\x02\u13F3\u13F5\x03\x02\x02\x02\u13F4\u13F2\x03\x02" +
        "\x02\x02\u13F5\u13F6\x07\x04\x02\x02\u13F6\u03D1\x03\x02\x02\x02\u13F7" +
        "\u13F8\x07\u0184\x02\x02\u13F8\u13F9\x05\u0680\u0341\x02\u13F9\u13FA\x07" +
        "\x04\x02\x02\u13FA\u03D3\x03\x02\x02\x02\u13FB\u13FF\x07\u0185\x02\x02" +
        "\u13FC\u1400\x05\x0E\b\x02\u13FD\u1400\x05\u048A\u0246\x02\u13FE\u1400" +
        "\x05\u0484\u0243\x02\u13FF\u13FC\x03\x02\x02\x02\u13FF\u13FD\x03\x02\x02" +
        "\x02\u13FF\u13FE\x03\x02\x02\x02\u1400\u1401\x03\x02\x02\x02\u1401\u1402" +
        "\x07\x04\x02\x02\u1402\u03D5\x03\x02\x02\x02\u1403\u1404\x07\u0186\x02" +
        "\x02\u1404\u1405\x05J&\x02\u1405\u1406\x07\x04\x02\x02\u1406\u03D7\x03" +
        "\x02\x02\x02\u1407\u1408\x05\u0370\u01B9\x02\u1408\u03D9\x03\x02\x02\x02" +
        "\u1409\u140A\x05\u037A\u01BE\x02\u140A\u03DB\x03\x02\x02\x02\u140B\u140C" +
        "\x07\u0187\x02\x02\u140C\u1411\x05\u0470\u0239\x02\u140D\u1410\x05\u0134" +
        "\x9B\x02\u140E\u1410\x05\u046E\u0238\x02\u140F\u140D\x03\x02\x02\x02\u140F" +
        "\u140E\x03\x02\x02\x02\u1410\u1413\x03\x02\x02\x02\u1411\u140F\x03\x02" +
        "\x02\x02\u1411\u1412\x03\x02\x02\x02\u1412\u1414\x03\x02\x02\x02\u1413" +
        "\u1411\x03\x02\x02\x02\u1414\u1415\x07\x04\x02\x02\u1415\u03DD\x03\x02" +
        "\x02\x02\u1416\u1417\x07\u0188\x02\x02\u1417\u1418\x05\u03DA\u01EE\x02" +
        "\u1418\u1419\x07\x04\x02\x02\u1419\u03DF\x03\x02\x02\x02\u141A\u141B\x07" +
        "\u0189\x02\x02\u141B\u141C\x05\u0480\u0241\x02\u141C\u141D\x07\x04\x02" +
        "\x02\u141D\u03E1\x03\x02\x02\x02\u141E\u141F\x07\u018A\x02\x02\u141F\u1420" +
        "\x05\u0680\u0341\x02\u1420\u1421\x07\x04\x02\x02\u1421\u03E3\x03\x02\x02" +
        "\x02\u1422\u1423\x07\u018B\x02\x02\u1423\u1424\x05\u0238\u011D\x02\u1424" +
        "\u1425\x05\u03EC\u01F7\x02\u1425\u1430\x05\u060C\u0307\x02\u1426\u142F" +
        "\x05\u0376\u01BC\x02\u1427\u142F\x05\u03DC\u01EF\x02\u1428\u142F\x05\u03E6" +
        "\u01F4\x02\u1429\u142F\x05\u03E8\u01F5\x02\u142A\u142F\x05\u0462\u0232" +
        "\x02\u142B\u142F\x05\u0464\u0233\x02\u142C\u142F\x05\u0466\u0234\x02\u142D" +
        "\u142F\x05\u0472\u023A\x02\u142E\u1426\x03\x02\x02\x02\u142E\u1427\x03" +
        "\x02\x02\x02\u142E\u1428\x03\x02\x02\x02\u142E\u1429\x03\x02\x02\x02\u142E" +
        "\u142A\x03\x02\x02\x02\u142E\u142B\x03\x02\x02\x02\u142E\u142C\x03\x02" +
        "\x02\x02\u142E\u142D\x03\x02\x02\x02\u142F\u1432\x03\x02\x02\x02\u1430" +
        "\u142E\x03\x02\x02\x02\u1430\u1431\x03\x02\x02\x02\u1431\u1433\x03\x02" +
        "\x02\x02\u1432\u1430\x03\x02\x02\x02\u1433\u1434\x07\x04\x02\x02\u1434" +
        "\u03E5\x03\x02\x02\x02\u1435\u1446\x07\u018C\x02\x02\u1436\u1445\x05\x1A" +
        "\x0E\x02\u1437\u1445\x05t;\x02\u1438\u1445\x05\x9CO\x02\u1439\u1445\x05" +
        "\xDEp\x02\u143A\u1445\x05\xE2r\x02\u143B\u1445\x05\u0152\xAA\x02\u143C" +
        "\u1445\x05\u0156\xAC\x02\u143D\u1445\x05\u015A\xAE\x02\u143E\u1445\x05" +
        "\u0172\xBA\x02\u143F\u1445\x05\u03B2\u01DA\x02\u1440\u1445\x05\u03D4\u01EB" +
        "\x02\u1441\u1445\x05\u03EE\u01F8\x02\u1442\u1445\x05\u0492\u024A\x02\u1443" +
        "\u1445\x05\u060A\u0306\x02\u1444\u1436\x03\x02\x02\x02\u1444\u1437\x03" +
        "\x02\x02\x02\u1444\u1438\x03\x02\x02\x02\u1444\u1439\x03\x02\x02\x02\u1444" +
        "\u143A\x03\x02\x02\x02\u1444\u143B\x03\x02\x02\x02\u1444\u143C\x03\x02" +
        "\x02\x02\u1444\u143D\x03\x02\x02\x02\u1444\u143E\x03\x02\x02\x02\u1444" +
        "\u143F\x03\x02\x02\x02\u1444\u1440\x03\x02\x02\x02\u1444\u1441\x03\x02" +
        "\x02\x02\u1444\u1442\x03\x02\x02\x02\u1444\u1443\x03\x02\x02\x02\u1445" +
        "\u1448\x03\x02\x02\x02\u1446\u1444\x03\x02\x02\x02\u1446\u1447\x03\x02" +
        "\x02\x02\u1447\u1449\x03\x02\x02\x02\u1448\u1446\x03\x02\x02\x02\u1449" +
        "\u144A\x07\x04\x02\x02\u144A\u03E7\x03\x02\x02\x02\u144B\u145A\x07\u018D" +
        "\x02\x02\u144C\u1459\x05\x18\r\x02\u144D\u1459\x05r:\x02\u144E\u1459\x05" +
        "\x9AN\x02\u144F\u1459\x05\xDCo\x02\u1450\u1459\x05\u0150\xA9\x02\u1451" +
        "\u1459\x05\u0154\xAB\x02\u1452\u1459\x05\u0158\xAD\x02\u1453\u1459\x05" +
        "\u0170\xB9\x02\u1454\u1459\x05\u03B0\u01D9\x02\u1455\u1459\x05\u03D2\u01EA" +
        "\x02\u1456\u1459\x05\u03E2\u01F2\x02\u1457\u1459\x05\u0490\u0249\x02\u1458" +
        "\u144C\x03\x02\x02\x02\u1458\u144D\x03\x02\x02\x02\u1458\u144E\x03\x02" +
        "\x02\x02\u1458\u144F\x03\x02\x02\x02\u1458\u1450\x03\x02\x02\x02\u1458" +
        "\u1451\x03\x02\x02\x02\u1458\u1452\x03\x02\x02\x02\u1458\u1453\x03\x02" +
        "\x02\x02\u1458\u1454\x03\x02\x02\x02\u1458\u1455\x03\x02\x02\x02\u1458" +
        "\u1456\x03\x02\x02\x02\u1458\u1457\x03\x02\x02\x02\u1459\u145C\x03\x02" +
        "\x02\x02\u145A\u1458\x03\x02\x02\x02\u145A\u145B\x03\x02\x02\x02\u145B" +
        "\u145D\x03\x02\x02\x02\u145C\u145A\x03\x02\x02\x02\u145D\u145E\x07\x04" +
        "\x02\x02\u145E\u03E9\x03\x02\x02\x02\u145F\u1460\x07\u018E\x02\x02\u1460" +
        "\u1461\x05\u031A\u018E\x02\u1461\u146B\x05\u0566\u02B4\x02\u1462\u146A" +
        "\x05\x16\f\x02\u1463\u146A\x05\x98M\x02\u1464\u146A\x05\u0198\xCD\x02" +
        "\u1465\u146A\x05\u03E6\u01F4\x02\u1466\u146A\x05\u03E8\u01F5\x02\u1467" +
        "\u146A\x05\u0464\u0233\x02\u1468\u146A\x05\u04B0\u0259\x02\u1469\u1462" +
        "\x03\x02\x02\x02\u1469\u1463\x03\x02\x02\x02\u1469\u1464\x03\x02\x02\x02" +
        "\u1469\u1465\x03\x02\x02\x02\u1469\u1466\x03\x02\x02\x02\u1469\u1467\x03" +
        "\x02\x02\x02\u1469\u1468\x03\x02\x02\x02\u146A\u146D\x03\x02\x02\x02\u146B" +
        "\u1469\x03\x02\x02\x02\u146B\u146C\x03\x02\x02\x02\u146C\u146E\x03\x02" +
        "\x02\x02\u146D\u146B\x03\x02\x02\x02\u146E\u146F\x07\x04\x02\x02\u146F" +
        "\u03EB\x03\x02\x02\x02\u1470\u1471\x07\u018F\x02\x02\u1471\u1473\x05\u031C" +
        "\u018F\x02\u1472\u1474\x05\u031E\u0190\x02\u1473\u1472\x03\x02\x02\x02" +
        "\u1473\u1474\x03\x02\x02\x02\u1474\u1475\x03\x02\x02\x02\u1475\u1476\x07" +
        "\x04\x02\x02\u1476\u03ED\x03\x02\x02\x02\u1477\u147B\x07\u0190\x02\x02" +
        "\u1478\u147C\x05\x0E\b\x02\u1479\u147C\x05\u048A\u0246\x02\u147A\u147C" +
        "\x05\u0484\u0243\x02\u147B\u1478\x03\x02\x02\x02\u147B\u1479\x03\x02\x02" +
        "\x02\u147B\u147A\x03\x02\x02\x02\u147C\u147D\x03\x02\x02\x02\u147D\u147E" +
        "\x07\x04\x02\x02\u147E\u03EF\x03\x02\x02\x02\u147F\u1480\x07\u0191\x02" +
        "\x02\u1480\u1484\x05\u03F8\u01FD\x02\u1481\u1485\x05\x0E\b\x02\u1482\u1485" +
        "\x05\u048A\u0246\x02\u1483\u1485\x05\u0484\u0243\x02\u1484\u1481\x03\x02" +
        "\x02\x02\u1484\u1482\x03\x02\x02\x02\u1484\u1483\x03\x02\x02\x02\u1485" +
        "\u1487\x03\x02\x02\x02\u1486\u1488\x05\u03F6\u01FC\x02\u1487\u1486\x03" +
        "\x02\x02\x02\u1487\u1488\x03\x02\x02\x02\u1488\u1489\x03\x02\x02\x02\u1489" +
        "\u148A\x07\x04\x02\x02\u148A\u03F1\x03\x02\x02\x02\u148B\u148C\x07\u0192" +
        "\x02\x02\u148C\u148D\x05J&\x02\u148D\u148E\x07\x04\x02\x02\u148E\u03F3" +
        "\x03\x02\x02\x02\u148F\u1490\x05\u0370\u01B9\x02\u1490\u03F5\x03\x02\x02" +
        "\x02\u1491\u1495\x07\u0193\x02\x02\u1492\u1496\x05\x0E\b\x02\u1493\u1496" +
        "\x05\u048A\u0246\x02\u1494\u1496\x05\u0484\u0243\x02\u1495\u1492\x03\x02" +
        "\x02\x02\u1495\u1493\x03\x02\x02\x02\u1495\u1494\x03\x02\x02\x02\u1496" +
        "\u1497\x03\x02\x02\x02\u1497\u1498\x07\x04\x02\x02\u1498\u03F7\x03\x02" +
        "\x02\x02\u1499\u149A\x05\u037A\u01BE\x02\u149A\u03F9\x03\x02\x02\x02\u149B" +
        "\u149C\x07\u0194\x02\x02\u149C\u149D\x05\u0410\u0209\x02\u149D\u149E\x07" +
        "\x04\x02\x02\u149E\u03FB\x03\x02\x02\x02\u149F\u14A0\x07\u0195\x02\x02" +
        "\u14A0\u14A4\x05\u0110\x89\x02\u14A1\u14A3\x05\u0174\xBB\x02\u14A2\u14A1" +
        "\x03\x02\x02\x02\u14A3\u14A6\x03\x02\x02\x02\u14A4\u14A2\x03\x02\x02\x02" +
        "\u14A4\u14A5\x03\x02\x02\x02\u14A5\u14A7\x03\x02\x02\x02\u14A6\u14A4\x03" +
        "\x02\x02\x02\u14A7\u14A8\x07\x04\x02\x02\u14A8\u03FD\x03\x02\x02\x02\u14A9" +
        "\u14AC\x07\u0196\x02\x02\u14AA\u14AD\x05\u0308\u0185\x02\u14AB\u14AD\x05" +
        "\u0354\u01AB\x02\u14AC\u14AA\x03\x02\x02\x02\u14AC\u14AB\x03\x02\x02\x02" +
        "\u14AD\u14AE\x03\x02\x02\x02\u14AE\u14AF\x07\x04\x02\x02\u14AF\u03FF\x03" +
        "\x02\x02\x02\u14B0\u14B7\x07\u0197\x02\x02\u14B1\u14B6\x05\u0582\u02C2" +
        "\x02\u14B2\u14B6\x05\u0584\u02C3\x02\u14B3\u14B6\x05\u0588\u02C5\x02\u14B4" +
        "\u14B6\x05\u058C\u02C7\x02\u14B5\u14B1\x03\x02\x02\x02\u14B5\u14B2\x03" +
        "\x02\x02\x02\u14B5\u14B3\x03\x02\x02\x02\u14B5\u14B4\x03\x02\x02\x02\u14B6" +
        "\u14B9\x03\x02\x02\x02\u14B7\u14B5\x03\x02\x02\x02\u14B7\u14B8\x03\x02" +
        "\x02\x02\u14B8\u14BA\x03\x02\x02\x02\u14B9\u14B7";
    EDIF300Parser._serializedATNSegment10 = "\x03\x02\x02\x02\u14BA\u14BB\x07\x04\x02\x02\u14BB\u0401\x03\x02\x02\x02" +
        "\u14BC\u14BD\x07\u0198\x02\x02\u14BD\u14C3\x05\u064E\u0328\x02\u14BE\u14C2" +
        "\x05\x96L\x02\u14BF\u14C2\x05\u0376\u01BC\x02\u14C0\u14C2\x05\u0638\u031D" +
        "\x02\u14C1\u14BE\x03\x02\x02\x02\u14C1\u14BF\x03\x02\x02\x02\u14C1\u14C0" +
        "\x03\x02\x02\x02\u14C2\u14C5\x03\x02\x02\x02\u14C3\u14C1\x03\x02\x02\x02" +
        "\u14C3\u14C4\x03\x02\x02\x02\u14C4\u14C6\x03\x02\x02\x02\u14C5\u14C3\x03" +
        "\x02\x02\x02\u14C6\u14C7\x07\x04\x02\x02\u14C7\u0403\x03\x02\x02\x02\u14C8" +
        "\u14CE\x07\u0199\x02\x02\u14C9\u14CD\x05\u0386\u01C4\x02\u14CA\u14CD\x05" +
        "\u0404\u0203\x02\u14CB\u14CD\x05\u0452\u022A\x02\u14CC\u14C9\x03\x02\x02" +
        "\x02\u14CC\u14CA\x03\x02\x02\x02\u14CC\u14CB\x03\x02\x02\x02\u14CD\u14D0" +
        "\x03\x02\x02\x02\u14CE\u14CC\x03\x02\x02\x02\u14CE\u14CF\x03\x02\x02\x02" +
        "\u14CF\u14D1\x03\x02\x02\x02\u14D0\u14CE\x03\x02\x02\x02\u14D1\u14D2\x07" +
        "\x04\x02\x02\u14D2\u0405\x03\x02\x02\x02\u14D3\u14D5\x07\u019A\x02\x02" +
        "\u14D4\u14D6\x05\u053E\u02A0\x02\u14D5\u14D4\x03\x02\x02\x02\u14D5\u14D6" +
        "\x03\x02\x02\x02\u14D6\u14D7\x03\x02\x02\x02\u14D7\u14D8\x07\x04\x02\x02" +
        "\u14D8\u0407\x03\x02\x02\x02\u14D9\u14E6\x07\u019B\x02\x02\u14DA\u14E5" +
        "\x05\x96L\x02\u14DB\u14E5\x05\xD0i\x02\u14DC\u14E5\x05\u014A\xA6\x02\u14DD" +
        "\u14E5\x05\u01F6\xFC\x02\u14DE\u14E5\x05\u02B4\u015B\x02\u14DF\u14E5\x05" +
        "\u0336\u019C\x02\u14E0\u14E5\x05\u034A\u01A6\x02\u14E1\u14E5\x05\u0400" +
        "\u0201\x02\u14E2\u14E5\x05\u0568\u02B5\x02\u14E3\u14E5\x05\u05E4\u02F3" +
        "\x02\u14E4\u14DA\x03\x02\x02\x02\u14E4\u14DB\x03\x02\x02\x02\u14E4\u14DC" +
        "\x03\x02\x02\x02\u14E4\u14DD\x03\x02\x02\x02\u14E4\u14DE\x03\x02\x02\x02" +
        "\u14E4\u14DF\x03\x02\x02\x02\u14E4\u14E0\x03\x02\x02\x02\u14E4\u14E1\x03" +
        "\x02\x02\x02\u14E4\u14E2\x03\x02\x02\x02\u14E4\u14E3\x03\x02\x02\x02\u14E5" +
        "\u14E8\x03\x02\x02\x02\u14E6\u14E4\x03\x02\x02\x02\u14E6\u14E7\x03\x02" +
        "\x02\x02\u14E7\u14E9\x03\x02\x02\x02\u14E8\u14E6\x03\x02\x02\x02\u14E9" +
        "\u14EA\x07\x04\x02\x02\u14EA\u0409\x03\x02\x02\x02\u14EB\u14EC\x07\u019C" +
        "\x02\x02\u14EC\u14F0\x05\u049E\u0250\x02\u14ED\u14EF\x05\u040C\u0207\x02" +
        "\u14EE\u14ED\x03\x02\x02\x02\u14EF\u14F2\x03\x02\x02\x02\u14F0\u14EE\x03" +
        "\x02\x02\x02\u14F0\u14F1\x03\x02\x02\x02\u14F1\u14F3\x03\x02\x02\x02\u14F2" +
        "\u14F0\x03\x02\x02\x02\u14F3\u14F4\x07\x04\x02\x02\u14F4\u040B\x03\x02" +
        "\x02\x02\u14F5\u14F9\x07\u019D\x02\x02\u14F6\u14F8\x05J&\x02\u14F7\u14F6" +
        "\x03\x02\x02\x02\u14F8\u14FB\x03\x02\x02\x02\u14F9\u14F7\x03\x02\x02\x02" +
        "\u14F9\u14FA\x03\x02\x02\x02\u14FA\u14FC\x03\x02\x02\x02\u14FB\u14F9\x03" +
        "\x02\x02\x02\u14FC\u14FD\x07\x04\x02\x02\u14FD\u040D\x03\x02\x02\x02\u14FE" +
        "\u14FF\x07\u019E\x02\x02\u14FF\u1500\x05\u0412\u020A\x02\u1500\u1501\x07" +
        "\x04\x02\x02\u1501\u040F\x03\x02\x02\x02\u1502\u1506\x07\u019F\x02\x02" +
        "\u1503\u1505\x05\u0412\u020A\x02\u1504\u1503\x03\x02\x02\x02\u1505\u1508" +
        "\x03\x02\x02\x02\u1506\u1504\x03\x02\x02\x02\u1506\u1507\x03\x02\x02\x02" +
        "\u1507\u1509\x03\x02\x02\x02\u1508\u1506\x03\x02\x02\x02\u1509\u150A\x07" +
        "\x04\x02\x02\u150A\u0411\x03\x02\x02\x02\u150B\u150C\x05\u0476\u023C\x02" +
        "\u150C\u0413\x03\x02\x02\x02\u150D\u150E\x07\u01A0\x02\x02\u150E\u150F" +
        "\x05\u0410\u0209\x02\u150F\u1510\x07\x04\x02\x02\u1510\u0415\x03\x02\x02" +
        "\x02\u1511\u1513\x07\u01A1\x02\x02\u1512\u1514\x05\u0442\u0222\x02\u1513" +
        "\u1512\x03\x02\x02\x02\u1513\u1514\x03\x02\x02\x02\u1514\u1516\x03\x02" +
        "\x02\x02\u1515\u1517\x05\u0428\u0215\x02\u1516\u1515\x03\x02\x02\x02\u1516" +
        "\u1517\x03\x02\x02\x02\u1517\u1527\x03\x02\x02\x02\u1518\u1526\x05\x06" +
        "\x04\x02\u1519\u1526\x05\x96L\x02\u151A\u1526\x05\u010C\x87\x02\u151B" +
        "\u1526\x05\u011A\x8E\x02\u151C\u1526\x05\u0376\u01BC\x02\u151D\u1526\x05" +
        "\u041E\u0210\x02\u151E\u1526\x05\u0434\u021B\x02\u151F\u1526\x05\u0446" +
        "\u0224\x02\u1520\u1526\x05\u0456\u022C\x02\u1521\u1526\x05\u0462\u0232" +
        "\x02\u1522\u1526\x05\u0524\u0293\x02\u1523\u1526\x05\u0634\u031B\x02\u1524" +
        "\u1526\x05\u0638\u031D\x02\u1525\u1518\x03\x02\x02\x02\u1525\u1519\x03" +
        "\x02\x02\x02\u1525\u151A\x03\x02\x02\x02\u1525\u151B\x03\x02\x02\x02\u1525" +
        "\u151C\x03\x02\x02\x02\u1525\u151D\x03\x02\x02\x02\u1525\u151E\x03\x02" +
        "\x02\x02\u1525\u151F\x03\x02\x02\x02\u1525\u1520\x03\x02\x02\x02\u1525" +
        "\u1521\x03\x02\x02\x02\u1525\u1522\x03\x02\x02\x02\u1525\u1523\x03\x02" +
        "\x02\x02\u1525\u1524\x03\x02\x02\x02\u1526\u1529\x03\x02\x02\x02\u1527" +
        "\u1525\x03\x02\x02\x02\u1527\u1528\x03\x02\x02\x02\u1528\u152A\x03\x02" +
        "\x02\x02\u1529\u1527\x03\x02\x02\x02\u152A\u152B\x07\x04\x02\x02\u152B" +
        "\u0417\x03\x02\x02\x02\u152C\u152F\x07\u01A2\x02\x02\u152D\u1530\x05\u0186" +
        "\xC4\x02\u152E\u1530\x05\u0188\xC5\x02\u152F\u152D\x03\x02\x02\x02\u152F" +
        "\u152E\x03\x02\x02\x02\u1530\u153D\x03\x02\x02\x02\u1531\u153C\x05\x06" +
        "\x04\x02\u1532\u153C\x05\x96L\x02\u1533\u153C\x05\u011A\x8E\x02\u1534" +
        "\u153C\x05\u0132\x9A\x02\u1535\u153C\x05\u041E\u0210\x02\u1536\u153C\x05" +
        "\u0426\u0214\x02\u1537\u153C\x05\u0434\u021B\x02\u1538\u153C\x05\u043C" +
        "\u021F\x02\u1539\u153C\x05\u0450\u0229\x02\u153A\u153C\x05\u0462\u0232" +
        "\x02\u153B\u1531\x03\x02\x02\x02\u153B\u1532\x03\x02\x02\x02\u153B\u1533" +
        "\x03\x02\x02\x02\u153B\u1534\x03\x02\x02\x02\u153B\u1535\x03\x02\x02\x02" +
        "\u153B\u1536\x03\x02\x02\x02\u153B\u1537\x03\x02\x02\x02\u153B\u1538\x03" +
        "\x02\x02\x02\u153B\u1539\x03\x02\x02\x02\u153B\u153A\x03\x02\x02\x02\u153C" +
        "\u153F\x03\x02\x02\x02\u153D\u153B\x03\x02\x02\x02\u153D\u153E\x03\x02" +
        "\x02\x02\u153E\u1540\x03\x02\x02\x02\u153F\u153D\x03\x02\x02\x02\u1540" +
        "\u1541\x07\x04\x02\x02\u1541\u0419\x03\x02\x02\x02\u1542\u1551\x07\u01A3" +
        "\x02\x02\u1543\u1550\x05\b\x05\x02\u1544\u1550\x05\xAEX\x02\u1545\u1550" +
        "\x05\xFA~\x02\u1546\u1550\x05\xFE\x80\x02\u1547\u1550\x05\u0102\x82\x02" +
        "\u1548\u1550\x05\u0106\x84\x02\u1549\u1550\x05\u011C\x8F\x02\u154A\u1550" +
        "\x05\u0420\u0211\x02\u154B\u1550\x05\u0436\u021C\x02\u154C\u1550\x05\u0444" +
        "\u0223\x02\u154D\u1550\x05\u0448\u0225\x02\u154E\u1550\x05\u044C\u0227" +
        "\x02\u154F\u1543\x03\x02\x02\x02\u154F\u1544\x03\x02\x02\x02\u154F\u1545" +
        "\x03\x02\x02\x02\u154F\u1546\x03\x02\x02\x02\u154F\u1547\x03\x02\x02\x02" +
        "\u154F\u1548\x03\x02\x02\x02\u154F\u1549\x03\x02\x02\x02\u154F\u154A\x03" +
        "\x02\x02\x02\u154F\u154B\x03\x02\x02\x02\u154F\u154C\x03\x02\x02\x02\u154F" +
        "\u154D\x03\x02\x02\x02\u154F\u154E\x03\x02\x02\x02\u1550\u1553\x03\x02" +
        "\x02\x02\u1551\u154F\x03\x02\x02\x02\u1551\u1552\x03\x02\x02\x02\u1552" +
        "\u1554\x03\x02\x02\x02\u1553\u1551\x03\x02\x02\x02\u1554\u1555\x07\x04" +
        "\x02\x02\u1555\u041B\x03\x02\x02\x02\u1556\u1557\x07\u01A4\x02\x02\u1557" +
        "\u1558\x05\u0442\u0222\x02\u1558\u1560\x05\u0432\u021A\x02\u1559\u155F" +
        "\x05\x96L\x02\u155A\u155F\x05\u0376\u01BC\x02\u155B\u155F\x05\u0462\u0232" +
        "\x02\u155C\u155F\x05\u0638\u031D\x02\u155D\u155F\x05\u011A\x8E\x02\u155E" +
        "\u1559\x03\x02\x02\x02\u155E\u155A\x03\x02\x02\x02\u155E\u155B\x03\x02" +
        "\x02\x02\u155E\u155C\x03\x02\x02\x02\u155E\u155D\x03\x02\x02\x02\u155F" +
        "\u1562\x03\x02\x02\x02\u1560\u155E\x03\x02\x02\x02\u1560\u1561\x03\x02" +
        "\x02\x02\u1561\u1563\x03\x02\x02\x02\u1562\u1560\x03\x02\x02\x02\u1563" +
        "\u1564\x07\x04\x02\x02\u1564\u041D\x03\x02\x02\x02\u1565\u1566\x07\u01A5" +
        "\x02\x02\u1566\u1567\x05\u0422\u0212\x02\u1567\u1568\x05\u0114\x8B\x02" +
        "\u1568\u156D\x05\u0110\x89\x02\u1569\u156C\x05*\x16\x02\u156A\u156C\x05" +
        "\u060E\u0308\x02\u156B\u1569\x03\x02\x02\x02\u156B\u156A\x03\x02\x02\x02" +
        "\u156C\u156F\x03\x02\x02\x02\u156D\u156B\x03\x02\x02\x02\u156D\u156E\x03" +
        "\x02\x02\x02\u156E\u1570\x03\x02\x02\x02\u156F\u156D\x03\x02\x02\x02\u1570" +
        "\u1571\x07\x04\x02\x02\u1571\u041F\x03\x02\x02\x02\u1572\u1573\x07\u01A6" +
        "\x02\x02\u1573\u1577\x05\u0424\u0213\x02\u1574\u1576\x05\u0134\x9B\x02" +
        "\u1575\u1574\x03\x02\x02\x02\u1576\u1579\x03\x02\x02\x02\u1577\u1575\x03" +
        "\x02\x02\x02\u1577\u1578\x03\x02\x02\x02\u1578\u157A\x03\x02\x02\x02\u1579" +
        "\u1577\x03\x02\x02\x02\u157A\u157B\x07\x04\x02\x02\u157B\u0421\x03\x02" +
        "\x02\x02\u157C\u157D\x05\u0370\u01B9\x02\u157D\u0423\x03\x02\x02\x02\u157E" +
        "\u157F\x05\u037A\u01BE\x02\u157F\u0425\x03\x02\x02\x02\u1580\u1581\x07" +
        "\u01A7\x02\x02\u1581\u1582\x05\u0424\u0213\x02\u1582\u1583\x05\u0114\x8B" +
        "\x02\u1583\u1588\x05\u0110\x89\x02\u1584\u1587\x05*\x16\x02\u1585\u1587" +
        "\x05\u060E\u0308\x02\u1586\u1584\x03\x02\x02\x02\u1586\u1585\x03\x02\x02" +
        "\x02\u1587\u158A\x03\x02\x02\x02\u1588\u1586\x03\x02\x02\x02\u1588\u1589" +
        "\x03\x02\x02\x02\u1589\u158B\x03\x02\x02\x02\u158A\u1588\x03\x02\x02\x02" +
        "\u158B\u158C\x07\x04\x02\x02\u158C\u0427\x03\x02\x02\x02\u158D\u1592\x05" +
        "\u0252\u012A\x02\u158E\u1592\x05\u03BE\u01E0\x02\u158F\u1592\x050\x19" +
        "\x02\u1590\u1592\x05\u0630\u0319\x02\u1591\u158D\x03\x02\x02\x02\u1591" +
        "\u158E\x03\x02\x02\x02\u1591\u158F\x03\x02\x02\x02\u1591\u1590\x03\x02" +
        "\x02\x02\u1592\u0429\x03\x02\x02\x02\u1593\u159A\x05\u0250\u0129\x02\u1594" +
        "\u159A\x05\u03BC\u01DF\x02\u1595\u159A\x05.\x18\x02\u1596\u159A\x05\u062E" +
        "\u0318\x02\u1597\u159A\x05\u062C\u0317\x02\u1598\u159A\x05\u0360\u01B1" +
        "\x02\u1599\u1593\x03\x02\x02\x02\u1599\u1594\x03\x02\x02\x02\u1599\u1595" +
        "\x03\x02\x02\x02\u1599\u1596\x03\x02\x02\x02\u1599\u1597\x03\x02\x02\x02" +
        "\u1599\u1598\x03\x02\x02\x02\u159A\u042B\x03\x02\x02\x02\u159B\u159C\x07" +
        "\u01A8\x02\x02\u159C\u159D\x07\x04\x02\x02\u159D\u042D\x03\x02\x02\x02" +
        "\u159E\u15A1\x07\u01A9\x02\x02\u159F\u15A2\x05\u044A\u0226\x02\u15A0\u15A2" +
        "\x05\u043E\u0220\x02\u15A1\u159F\x03\x02\x02\x02\u15A1\u15A0\x03\x02\x02" +
        "\x02\u15A2\u15A5\x03\x02\x02\x02\u15A3\u15A6\x05\u0272\u013A\x02\u15A4" +
        "\u15A6\x05\u025C\u012F\x02\u15A5\u15A3\x03\x02\x02\x02\u15A5\u15A4\x03" +
        "\x02\x02\x02\u15A6\u15A7\x03\x02\x02\x02\u15A7\u15A8\x07\x04\x02\x02\u15A8" +
        "\u042F\x03\x02\x02\x02\u15A9\u15B0\x07\u01AA\x02\x02\u15AA\u15AF\x05\u020A" +
        "\u0106\x02\u15AB\u15AF\x05\u032A\u0196\x02\u15AC\u15AF\x05\u042E\u0218" +
        "\x02\u15AD\u15AF\x05\u0452\u022A\x02\u15AE\u15AA\x03\x02\x02\x02\u15AE" +
        "\u15AB\x03\x02\x02\x02\u15AE\u15AC\x03\x02\x02\x02\u15AE\u15AD\x03\x02" +
        "\x02\x02\u15AF\u15B2\x03\x02\x02\x02\u15B0\u15AE\x03\x02\x02\x02\u15B0" +
        "\u15B1\x03\x02\x02\x02\u15B1\u15B3\x03\x02\x02\x02\u15B2\u15B0\x03\x02" +
        "\x02\x02\u15B3\u15B4\x07\x04\x02\x02\u15B4\u0431\x03\x02\x02\x02\u15B5" +
        "\u15B9\x07\u01AB\x02\x02\u15B6\u15B8\x05\u0452\u022A\x02\u15B7\u15B6\x03" +
        "\x02\x02\x02\u15B8\u15BB\x03\x02\x02\x02\u15B9\u15B7\x03\x02\x02\x02\u15B9" +
        "\u15BA\x03\x02\x02\x02\u15BA\u15BC\x03\x02\x02\x02\u15BB\u15B9\x03\x02" +
        "\x02\x02\u15BC\u15BD\x07\x04\x02\x02\u15BD\u0433\x03\x02\x02\x02\u15BE" +
        "\u15BF\x07\u01AC\x02\x02\u15BF\u15C0\x05\u0438\u021D\x02\u15C0\u15C1\x05" +
        "\u0114\x8B\x02\u15C1\u15C6\x05\u0320\u0191\x02\u15C2\u15C5\x05*\x16\x02" +
        "\u15C3\u15C5\x05\u060E\u0308\x02\u15C4\u15C2\x03\x02\x02\x02\u15C4\u15C3" +
        "\x03\x02\x02\x02\u15C5\u15C8\x03\x02\x02\x02\u15C6\u15C4\x03\x02\x02\x02" +
        "\u15C6\u15C7\x03\x02\x02\x02\u15C7\u15C9\x03\x02\x02\x02\u15C8\u15C6\x03" +
        "\x02\x02\x02\u15C9\u15CA\x07\x04\x02\x02\u15CA\u0435\x03\x02\x02\x02\u15CB" +
        "\u15CC\x07\u01AD\x02\x02\u15CC\u15D0\x05\u043A\u021E\x02\u15CD\u15CF\x05" +
        "\u0134\x9B\x02\u15CE\u15CD\x03\x02\x02\x02\u15CF\u15D2\x03\x02\x02\x02" +
        "\u15D0\u15CE\x03\x02\x02\x02\u15D0\u15D1\x03\x02\x02\x02\u15D1\u15D3\x03" +
        "\x02\x02\x02\u15D2\u15D0\x03\x02\x02\x02\u15D3\u15D4\x07\x04\x02\x02\u15D4" +
        "\u0437\x03\x02\x02\x02\u15D5\u15D6\x05\u0370\u01B9\x02\u15D6\u0439\x03" +
        "\x02\x02\x02\u15D7\u15D8\x05\u037A\u01BE\x02\u15D8\u043B\x03\x02\x02\x02" +
        "\u15D9\u15DA\x07\u01AE\x02\x02\u15DA\u15DB\x05\u043A\u021E\x02\u15DB\u15DC" +
        "\x05\u0114\x8B\x02\u15DC\u15E1\x05\u0320\u0191\x02\u15DD\u15E0\x05*\x16" +
        "\x02\u15DE\u15E0\x05\u060E\u0308\x02\u15DF\u15DD\x03\x02\x02\x02\u15DF" +
        "\u15DE\x03\x02\x02\x02\u15E0\u15E3\x03\x02\x02\x02\u15E1\u15DF\x03\x02" +
        "\x02\x02\u15E1\u15E2\x03\x02\x02\x02\u15E2\u15E4\x03\x02\x02\x02\u15E3" +
        "\u15E1\x03\x02\x02\x02\u15E4\u15E5\x07\x04\x02\x02\u15E5\u043D\x03\x02" +
        "\x02\x02\u15E6\u15E7\x07\u01AF\x02\x02\u15E7\u15E8\x05\u044A\u0226\x02" +
        "\u15E8\u15E9\x05\u024E\u0128\x02\u15E9\u15EA\x07\x04\x02\x02\u15EA\u043F" +
        "\x03\x02\x02\x02\u15EB\u15EC\x07\u01B0\x02\x02\u15EC\u15ED\x05J&\x02\u15ED" +
        "\u15EE\x07\x04\x02\x02\u15EE\u0441\x03\x02\x02\x02\u15EF\u15F0\x05\u0370" +
        "\u01B9\x02\u15F0\u0443\x03\x02\x02\x02\u15F1\u15F6\x07\u01B1\x02\x02\u15F2" +
        "\u15F5\x05\u0134\x9B\x02\u15F3\u15F5\x05\u013A\x9E\x02\u15F4\u15F2\x03" +
        "\x02\x02\x02\u15F4\u15F3\x03\x02\x02\x02\u15F5\u15F8\x03\x02\x02\x02\u15F6" +
        "\u15F4\x03\x02\x02\x02\u15F6\u15F7\x03\x02\x02\x02\u15F7\u15F9\x03\x02" +
        "\x02\x02\u15F8\u15F6\x03\x02\x02\x02\u15F9\u15FA\x07\x04\x02\x02\u15FA" +
        "\u0445\x03\x02\x02\x02\u15FB\u15FC\x07\u01B2\x02\x02\u15FC\u15FD\x05\u05C8" +
        "\u02E5\x02\u15FD\u15FE\x07\x04\x02\x02\u15FE\u0447\x03\x02\x02\x02\u15FF" +
        "\u1603\x07\u01B3\x02\x02\u1600\u1604\x05\x0E\b\x02\u1601\u1604\x05\u048A" +
        "\u0246\x02\u1602\u1604\x05\u0484\u0243\x02\u1603\u1600\x03\x02\x02\x02" +
        "\u1603\u1601\x03\x02\x02\x02\u1603\u1602\x03\x02\x02\x02\u1604\u1605\x03" +
        "\x02\x02\x02\u1605\u1606\x07\x04\x02\x02\u1606\u0449\x03\x02\x02\x02\u1607" +
        "\u1608\x05\u037A\u01BE\x02\u1608\u044B\x03\x02\x02\x02\u1609\u160A\x07" +
        "\u01B4\x02\x02\u160A\u160F\x05\u0470\u0239\x02\u160B\u160E\x05\u0134\x9B" +
        "\x02\u160C\u160E\x05\u046E\u0238\x02\u160D\u160B\x03\x02\x02\x02\u160D" +
        "\u160C\x03\x02\x02\x02\u160E\u1611\x03\x02\x02\x02\u160F\u160D\x03\x02" +
        "\x02\x02\u160F\u1610\x03\x02\x02\x02\u1610\u1612\x03\x02\x02\x02\u1611" +
        "\u160F\x03\x02\x02\x02\u1612\u1613\x07\x04\x02\x02\u1613\u044D\x03\x02" +
        "\x02\x02\u1614\u1615\x07\u01B5\x02\x02\u1615\u1619\x05\u0470\u0239\x02" +
        "\u1616\u161A\x05\x0E\b\x02\u1617\u161A\x05\u048A\u0246\x02\u1618\u161A" +
        "\x05\u0484\u0243\x02\u1619\u1616\x03\x02\x02\x02\u1619\u1617\x03\x02\x02" +
        "\x02\u1619\u1618\x03\x02\x02\x02\u161A\u161C\x03\x02\x02\x02\u161B\u161D" +
        "\x05\u046E\u0238\x02\u161C\u161B\x03\x02\x02\x02\u161C\u161D\x03\x02\x02" +
        "\x02\u161D\u161E\x03\x02\x02\x02\u161E\u161F\x07\x04\x02\x02\u161F\u044F" +
        "\x03\x02\x02\x02\u1620\u1621\x07\u01B6\x02\x02\u1621\u1624\x05\u0470\u0239" +
        "\x02\u1622\u1625\x05\u0614\u030B\x02\u1623\u1625\x05\u0632\u031A\x02\u1624" +
        "\u1622\x03\x02\x02\x02\u1624\u1623\x03\x02\x02\x02\u1625\u162B\x03\x02" +
        "\x02\x02\u1626\u162A\x05\x96L\x02\u1627\u162A\x05\u01AC\xD7\x02\u1628" +
        "\u162A\x05\u0472\u023A\x02\u1629\u1626\x03\x02\x02\x02\u1629\u1627\x03" +
        "\x02\x02\x02\u1629\u1628\x03\x02\x02\x02\u162A\u162D\x03\x02\x02\x02\u162B" +
        "\u1629\x03\x02\x02\x02\u162B\u162C\x03\x02\x02\x02\u162C\u162E\x03\x02" +
        "\x02\x02\u162D\u162B\x03\x02\x02\x02\u162E\u162F\x07\x04\x02\x02\u162F" +
        "\u0451\x03\x02\x02\x02\u1630\u1631\x07\u01B7\x02\x02\u1631\u1632\x05\u044A" +
        "\u0226\x02\u1632\u1633\x07\x04\x02\x02\u1633\u0453\x03\x02\x02\x02\u1634" +
        "\u1638\x07\u01B8\x02\x02\u1635\u1637\x05\u0452\u022A\x02\u1636\u1635\x03" +
        "\x02\x02\x02\u1637\u163A\x03\x02\x02\x02\u1638\u1636\x03\x02\x02\x02\u1638" +
        "\u1639\x03\x02\x02\x02\u1639\u163B\x03\x02\x02\x02\u163A\u1638\x03\x02" +
        "\x02\x02\u163B\u163C\x07\x04\x02\x02\u163C\u0455\x03\x02\x02\x02\u163D" +
        "\u163E\x07\u01B9\x02\x02\u163E\u163F\x05\u0280\u0141\x02\u163F\u1640\x07" +
        "\x04\x02\x02\u1640\u0457\x03\x02\x02\x02\u1641\u1645\x05\u033C\u019F\x02" +
        "\u1642\u1645\x05\u0330\u0199\x02\u1643\u1645\x05\u033E\u01A0\x02\u1644" +
        "\u1641\x03\x02\x02\x02\u1644\u1642\x03\x02\x02\x02\u1644\u1643\x03\x02" +
        "\x02\x02\u1645\u0459\x03\x02\x02\x02\u1646\u164A\x05\u033C\u019F\x02\u1647" +
        "\u164A\x05\u0330\u0199\x02\u1648\u164A\x05\u033E\u01A0\x02\u1649\u1646" +
        "\x03\x02\x02\x02\u1649\u1647\x03\x02\x02\x02\u1649\u1648\x03\x02\x02\x02" +
        "\u164A\u045B\x03\x02\x02\x02\u164B\u164C\x07\u01BA\x02\x02\u164C\u164E" +
        "\x05\u0658\u032D\x02\u164D\u164F\x05\u047E\u0240\x02\u164E\u164D\x03\x02" +
        "\x02\x02\u164E\u164F\x03\x02\x02\x02\u164F\u1650\x03\x02\x02\x02\u1650" +
        "\u1651\x07\x04\x02\x02\u1651\u045D\x03\x02\x02\x02\u1652\u1653\x07\u01BB" +
        "\x02\x02\u1653\u1659\x05\u03B4\u01DB\x02\u1654\u1658\x05\u0138\x9D\x02" +
        "\u1655\u1658\x05\u01EE\xF8\x02\u1656\u1658\x05\u037C\u01BF\x02\u1657\u1654" +
        "\x03\x02\x02\x02\u1657\u1655\x03\x02\x02\x02\u1657\u1656\x03\x02\x02\x02" +
        "\u1658\u165B\x03\x02\x02\x02\u1659\u1657\x03\x02\x02\x02\u1659\u165A\x03" +
        "\x02\x02\x02\u165A\u165C\x03\x02\x02\x02\u165B\u1659\x03\x02\x02\x02\u165C" +
        "\u165D\x07\x04\x02\x02\u165D\u045F\x03\x02\x02\x02\u165E\u165F\x07\u01BC" +
        "\x02\x02\u165F\u1661\x05\u05D6\u02EC\x02\u1660\u1662\x05\u063C\u031F\x02" +
        "\u1661\u1660\x03\x02\x02\x02\u1661\u1662\x03\x02\x02\x02\u1662\u1663\x03" +
        "\x02\x02\x02\u1663\u1664\x07\x04\x02\x02\u1664\u0461\x03\x02\x02\x02\u1665" +
        "\u1666\x07\u01BD\x02\x02\u1666\u1669\x05\u046C\u0237\x02\u1667\u166A\x05" +
        "\u0614\u030B\x02\u1668\u166A\x05\u0632\u031A\x02\u1669\u1667\x03\x02\x02" +
        "\x02\u1669\u1668\x03\x02\x02\x02\u166A\u1673\x03\x02\x02\x02\u166B\u1672" +
        "\x05\x96L\x02\u166C\u1672\x05\u0376\u01BC\x02\u166D\u1672\x05\u03C2\u01E2" +
        "\x02\u166E\u1672\x05\u0462\u0232\x02\u166F\u1672\x05\u0468\u0235\x02\u1670" +
        "\u1672\x05\u062A\u0316\x02\u1671\u166B\x03\x02\x02\x02\u1671\u166C\x03" +
        "\x02\x02\x02\u1671\u166D\x03\x02\x02\x02\u1671\u166E\x03\x02\x02\x02\u1671" +
        "\u166F\x03\x02\x02\x02\u1671\u1670\x03\x02\x02\x02\u1672\u1675\x03\x02" +
        "\x02\x02\u1673\u1671\x03\x02\x02\x02\u1673\u1674\x03\x02\x02\x02\u1674" +
        "\u1676\x03\x02\x02\x02\u1675\u1673\x03\x02\x02\x02\u1676\u1677\x07\x04" +
        "\x02\x02\u1677\u0463\x03\x02\x02\x02\u1678\u1679\x07\u01BE\x02\x02\u1679" +
        "\u167E\x05\u0470\u0239\x02\u167A\u167D\x05\u0134\x9B\x02\u167B\u167D\x05" +
        "\u046E\u0238\x02\u167C\u167A\x03\x02\x02\x02\u167C\u167B\x03\x02\x02\x02" +
        "\u167D\u1680\x03\x02\x02\x02\u167E\u167C\x03\x02\x02\x02\u167E\u167F\x03" +
        "\x02\x02\x02\u167F\u1681\x03\x02\x02\x02\u1680\u167E\x03\x02\x02\x02\u1681" +
        "\u1682\x07\x04\x02\x02\u1682\u0465\x03\x02\x02\x02\u1683\u1684\x07\u01BF" +
        "\x02\x02\u1684\u1688\x05\u0470\u0239\x02\u1685\u1689\x05\x0E\b\x02\u1686" +
        "\u1689\x05\u048A\u0246\x02\u1687\u1689\x05\u0484\u0243\x02\u1688\u1685" +
        "\x03\x02\x02\x02\u1688\u1686\x03\x02\x02\x02\u1688\u1687\x03\x02\x02\x02" +
        "\u1689\u168B\x03\x02\x02\x02\u168A\u168C\x05\u046E\u0238\x02\u168B\u168A" +
        "\x03\x02\x02\x02\u168B\u168C\x03\x02\x02\x02\u168C\u168D\x03\x02\x02\x02" +
        "\u168D\u168E\x07\x04\x02\x02\u168E\u0467\x03\x02\x02\x02\u168F\u1692\x07" +
        "\u01C0\x02\x02\u1690\u1693\x05\u01AC\xD7\x02\u1691\u1693\x05\u038A\u01C6" +
        "\x02\u1692\u1690\x03\x02\x02\x02\u1692\u1691\x03\x02\x02\x02\u1693\u1694" +
        "\x03\x02\x02\x02\u1694\u1695\x07\x04\x02\x02\u1695\u0469\x03\x02\x02\x02" +
        "\u1696\u1697\x07\u01C1\x02\x02\u1697\u1698\x05J&\x02\u1698\u1699\x07\x04" +
        "\x02\x02\u1699\u046B\x03\x02\x02\x02\u169A\u169B\x05\u0370\u01B9\x02\u169B" +
        "\u046D\x03\x02\x02\x02\u169C\u16A1\x07\u01C2\x02\x02\u169D\u16A0\x05\u0134" +
        "\x9B\x02\u169E\u16A0\x05\u013A\x9E\x02\u169F\u169D\x03\x02\x02\x02\u169F" +
        "\u169E\x03\x02\x02\x02\u16A0\u16A3\x03\x02\x02\x02\u16A1\u169F\x03\x02" +
        "\x02\x02\u16A1\u16A2\x03\x02\x02\x02\u16A2\u16A4\x03\x02\x02\x02\u16A3" +
        "\u16A1\x03\x02\x02\x02\u16A4\u16A5\x07\x04\x02\x02\u16A5\u046F\x03\x02" +
        "\x02\x02\u16A6\u16A7\x05\u037A\u01BE\x02\u16A7\u0471\x03\x02\x02\x02\u16A8" +
        "\u16A9\x07\u01C3\x02\x02\u16A9\u16AC\x05\u0470\u0239\x02\u16AA\u16AD\x05" +
        "\u0614\u030B\x02\u16AB\u16AD\x05\u0632\u031A\x02\u16AC\u16AA\x03\x02\x02" +
        "\x02\u16AC\u16AB\x03\x02\x02\x02\u16AD\u16B3\x03\x02\x02\x02\u16AE\u16B2" +
        "\x05\x96L\x02\u16AF\u16B2\x05\u01AC\xD7\x02\u16B0\u16B2\x05\u0472\u023A" +
        "\x02\u16B1\u16AE\x03\x02\x02\x02\u16B1\u16AF\x03\x02\x02\x02\u16B1\u16B0" +
        "\x03\x02\x02\x02\u16B2\u16B5\x03\x02\x02\x02\u16B3\u16B1\x03\x02\x02\x02" +
        "\u16B3\u16B4\x03\x02\x02\x02\u16B4\u16B6\x03\x02\x02\x02\u16B5\u16B3\x03" +
        "\x02\x02\x02\u16B6\u16B7\x07\x04\x02\x02\u16B7\u0473\x03\x02\x02\x02\u16B8" +
        "\u16B9\x07\u01C4\x02\x02\u16B9\u16BA\x07\x04\x02\x02\u16BA\u0475\x03\x02" +
        "\x02\x02\u16BB\u16BC\x07\u01C5\x02\x02\u16BC\u16BD\x05\u0670\u0339\x02" +
        "\u16BD\u16BE\x05\u0676\u033C\x02\u16BE\u16BF\x07\x04\x02\x02\u16BF\u0477" +
        "\x03\x02\x02\x02\u16C0\u16C1\x05\u0412\u020A\x02\u16C1\u0479\x03\x02\x02" +
        "\x02\u16C2\u16C3\x05\u0412\u020A\x02\u16C3\u047B\x03\x02\x02\x02\u16C4" +
        "\u16C5\x07\u01C6\x02\x02\u16C5\u16C6\x05\u0624\u0313\x02\u16C6\u16C7\x07" +
        "\x04\x02\x02\u16C7\u047D\x03\x02\x02\x02\u16C8\u16C9\x07\u01C7\x02\x02" +
        "\u16C9\u16CA\x05\u0680\u0341\x02\u16CA\u16CB\x07\x04\x02\x02\u16CB\u047F" +
        "\x03\x02\x02\x02\u16CC\u16CD\x07\u01C8\x02\x02\u16CD\u16CE\x05\u0478\u023D" +
        "\x02\u16CE\u16CF\x05\u047A\u023E\x02\u16CF\u16D0\x07\x04\x02\x02\u16D0" +
        "\u0481\x03\x02\x02\x02\u16D1\u16D2\x05\u04A0\u0251\x02\u16D2\u0483\x03" +
        "\x02\x02\x02\u16D3\u16D4\x07\u01C9\x02\x02\u16D4\u16D5\x07\x04\x02\x02" +
        "\u16D5\u0485\x03\x02\x02\x02\u16D6\u16D7\x07\u01CA\x02\x02\u16D7\u16D8" +
        "\x05\u0280\u0141\x02\u16D8\u16D9\x07\x04\x02\x02\u16D9\u0487\x03\x02\x02" +
        "\x02\u16DA\u16DE\x07\u01CB\x02\x02\u16DB\u16DF\x05\x0E\b\x02\u16DC\u16DF" +
        "\x05\u048A\u0246\x02\u16DD\u16DF\x05\u0484\u0243\x02\u16DE\u16DB\x03\x02" +
        "\x02\x02\u16DE\u16DC\x03\x02\x02\x02\u16DE\u16DD\x03\x02\x02\x02\u16DF" +
        "\u16E0\x03\x02\x02\x02\u16E0\u16E1\x07\x04\x02\x02\u16E1\u0489\x03\x02" +
        "\x02\x02\u16E2\u16E6\x07\u01CC\x02\x02\u16E3\u16E5\x05\u0134\x9B\x02\u16E4" +
        "\u16E3\x03\x02\x02\x02\u16E5\u16E8\x03\x02\x02\x02\u16E6\u16E4\x03\x02" +
        "\x02\x02\u16E6\u16E7\x03\x02\x02\x02\u16E7\u16E9\x03\x02\x02\x02\u16E8" +
        "\u16E6\x03\x02\x02\x02\u16E9\u16EA\x07\x04\x02\x02\u16EA\u048B\x03\x02" +
        "\x02\x02\u16EB\u16EC\x07\u01CD\x02\x02\u16EC\u16ED\x07\x04\x02\x02\u16ED" +
        "\u048D\x03\x02\x02\x02\u16EE\u16F2\x07\u01CE\x02\x02\u16EF\u16F1\x05\u033C" +
        "\u019F\x02\u16F0\u16EF\x03\x02\x02\x02\u16F1\u16F4\x03\x02\x02\x02\u16F2" +
        "\u16F0\x03\x02\x02\x02\u16F2\u16F3\x03\x02\x02\x02\u16F3\u16F5\x03\x02" +
        "\x02\x02\u16F4\u16F2\x03\x02\x02\x02\u16F5\u16F6\x07\x04\x02\x02\u16F6" +
        "\u048F\x03\x02\x02\x02\u16F7\u16F8\x07\u01CF\x02\x02\u16F8\u16F9\x05\u0680" +
        "\u0341\x02\u16F9\u16FA\x07\x04\x02\x02\u16FA\u0491\x03\x02\x02\x02\u16FB" +
        "\u16FF\x07\u01D0\x02\x02\u16FC\u1700\x05\x0E\b\x02\u16FD\u1700\x05\u048A" +
        "\u0246\x02\u16FE\u1700\x05\u0484\u0243\x02\u16FF\u16FC\x03\x02\x02\x02" +
        "\u16FF\u16FD\x03\x02\x02\x02\u16FF\u16FE\x03\x02\x02\x02\u1700\u1701\x03" +
        "\x02\x02\x02\u1701\u1702\x07\x04\x02\x02\u1702\u0493\x03\x02\x02\x02\u1703" +
        "\u1704\x07\u01D1\x02\x02\u1704\u1705\x07\x04\x02\x02\u1705\u0495\x03\x02" +
        "\x02\x02\u1706\u1707\x07\u01D2\x02\x02\u1707\u1708\x05\u021E\u0110\x02" +
        "\u1708\u1709\x05\u0216\u010C\x02\u1709\u170A\x07\x04\x02\x02\u170A\u0497" +
        "\x03\x02\x02\x02\u170B\u170C\x07\u01D3\x02\x02\u170C\u170D\x05\u0222\u0112" +
        "\x02\u170D\u170E\x05\u0542\u02A2\x02\u170E\u170F\x07\x04\x02\x02\u170F" +
        "\u0499\x03\x02\x02\x02\u1710\u1711\x07\u01D4\x02\x02\u1711\u1712\x05\x14" +
        "\v\x02\u1712\u1713\x07\x04\x02\x02\u1713\u049B\x03\x02\x02\x02\u1714\u1715" +
        "\x07\u01D5\x02\x02\u1715\u1716\x07\x04\x02\x02\u1716\u049D\x03\x02\x02" +
        "\x02\u1717\u1718\x05\u067E\u0340\x02\u1718\u049F\x03\x02\x02\x02\u1719" +
        "\u171C\x05\u067E\u0340\x02\u171A\u171C\x05\u015E\xB0\x02\u171B\u1719\x03" +
        "\x02\x02\x02\u171B\u171A\x03\x02\x02\x02\u171C\u04A1\x03\x02\x02\x02\u171D" +
        "\u171E\x07\u01D6\x02\x02\u171E\u171F\x05\u039E\u01D0\x02\u171F\u1720\x05" +
        "\u0112\x8A\x02\u1720\u1721\x07\x04\x02\x02\u1721\u04A3\x03\x02\x02\x02" +
        "\u1722\u1723\x07\u01D7\x02\x02\u1723\u1724\x05\u039E\u01D0\x02\u1724\u1725" +
        "\x05\u0112\x8A\x02\u1725\u1726\x07\x04\x02\x02\u1726\u04A5\x03\x02\x02" +
        "\x02\u1727\u1728\x07\u01D8\x02\x02\u1728\u1729\x05\u02A4\u0153\x02\u1729" +
        "\u172A\x05\u05A2\u02D2\x02\u172A\u172B\x05\u04DE\u0270\x02\u172B\u1733" +
        "\x05\u04AC\u0257\x02\u172C\u1732\x05\x96L\x02\u172D\u1732\x05\u04A8\u0255" +
        "\x02\u172E\u1732\x05\u04AE\u0258\x02\u172F\u1732\x05\u04DC\u026F\x02\u1730" +
        "\u1732\x05\u0638\u031D\x02\u1731\u172C\x03\x02\x02\x02\u1731\u172D\x03" +
        "\x02\x02\x02\u1731\u172E\x03\x02\x02\x02\u1731\u172F\x03\x02\x02\x02\u1731" +
        "\u1730\x03\x02\x02\x02\u1732\u1735\x03\x02\x02\x02\u1733\u1731\x03\x02" +
        "\x02\x02\u1733\u1734\x03\x02\x02\x02\u1734\u1736\x03\x02\x02\x02\u1735" +
        "\u1733\x03\x02\x02\x02\u1736\u1737\x07\x04\x02\x02\u1737\u04A7\x03\x02" +
        "\x02\x02\u1738\u173B\x07\u01D9\x02\x02\u1739\u173C\x05\u04AA\u0256\x02" +
        "\u173A\u173C\x05\u054A\u02A6\x02\u173B\u1739\x03\x02\x02\x02\u173B\u173A" +
        "\x03\x02\x02\x02\u173C\u173D\x03\x02\x02\x02\u173D\u173E\x07\x04\x02\x02" +
        "\u173E\u04A9\x03\x02\x02\x02\u173F\u1746\x07\u01DA\x02\x02\u1740\u1745" +
        "\x05\x96L\x02\u1741\u1745\x05\u0198\xCD\x02\u1742\u1745\x05\u04B0\u0259" +
        "\x02\u1743\u1745\x05\u0638\u031D\x02\u1744\u1740\x03\x02\x02\x02\u1744" +
        "\u1741\x03\x02\x02\x02\u1744\u1742\x03\x02\x02\x02\u1744\u1743\x03\x02" +
        "\x02\x02\u1745\u1748\x03\x02\x02\x02\u1746\u1744\x03\x02\x02\x02\u1746" +
        "\u1747\x03\x02\x02\x02\u1747\u1749\x03\x02\x02\x02\u1748\u1746\x03\x02" +
        "\x02\x02\u1749\u174A\x07\x04\x02\x02\u174A\u04AB\x03\x02\x02\x02\u174B" +
        "\u1757\x07\u01DB\x02\x02\u174C\u1756\x05\u0430\u0219\x02\u174D\u1756\x05" +
        "\u0498\u024D\x02\u174E\u1756\x05\u04C6\u0264\x02\u174F\u1756\x05\u04E2" +
        "\u0272\x02\u1750\u1756\x05\u04EA\u0276\x02\u1751\u1756\x05\u04F2\u027A" +
        "\x02\u1752\u1756\x05\u0504\u0283\x02\u1753\u1756\x05\u050C\u0287\x02\u1754" +
        "\u1756\x05\u055E\u02B0\x02\u1755\u174C\x03\x02\x02\x02\u1755\u174D\x03" +
        "\x02\x02\x02\u1755\u174E\x03\x02\x02\x02\u1755\u174F\x03\x02\x02\x02\u1755" +
        "\u1750\x03\x02\x02\x02\u1755\u1751\x03\x02\x02\x02\u1755\u1752\x03\x02" +
        "\x02\x02\u1755\u1753\x03\x02\x02\x02\u1755\u1754\x03\x02\x02\x02\u1756" +
        "\u1759\x03\x02\x02\x02\u1757\u1755\x03\x02\x02\x02\u1757\u1758\x03\x02" +
        "\x02\x02\u1758\u175A\x03\x02\x02\x02\u1759\u1757\x03\x02\x02\x02\u175A" +
        "\u175B\x07\x04\x02\x02\u175B\u04AD\x03\x02\x02\x02\u175C\u175D\x07\u01DC" +
        "\x02\x02\u175D\u175E\x05\u02A4\u0153\x02\u175E\u175F\x05\u05A2";
    EDIF300Parser._serializedATNSegment11 = "\u02D2\x02\u175F\u1760\x05\u04DE\u0270\x02\u1760\u1768\x05\u04AC\u0257" +
        "\x02\u1761\u1767\x05\x96L\x02\u1762\u1767\x05\u04A8\u0255\x02\u1763\u1767" +
        "\x05\u04AE\u0258\x02\u1764\u1767\x05\u04DC\u026F\x02\u1765\u1767\x05\u0638" +
        "\u031D\x02\u1766\u1761\x03\x02\x02\x02\u1766\u1762\x03\x02\x02\x02\u1766" +
        "\u1763\x03\x02\x02\x02\u1766\u1764\x03\x02\x02\x02\u1766\u1765\x03\x02" +
        "\x02\x02\u1767\u176A\x03\x02\x02\x02\u1768\u1766\x03\x02\x02\x02\u1768" +
        "\u1769\x03\x02\x02\x02\u1769\u176B\x03\x02\x02\x02\u176A\u1768\x03\x02" +
        "\x02\x02\u176B\u176C\x07\x04\x02\x02\u176C\u04AF\x03\x02\x02\x02\u176D" +
        "\u176E\x07\u01DD\x02\x02\u176E\u176F\x05\u04B4\u025B\x02\u176F\u1774\x05" +
        "\u060C\u0307\x02\u1770\u1773\x05\u0466\u0234\x02\u1771\u1773\x05\u0472" +
        "\u023A\x02\u1772\u1770\x03\x02\x02\x02\u1772\u1771\x03\x02\x02\x02\u1773" +
        "\u1776\x03\x02\x02\x02\u1774\u1772\x03\x02\x02\x02\u1774\u1775\x03\x02" +
        "\x02\x02\u1775\u1777\x03\x02\x02\x02\u1776\u1774\x03\x02\x02\x02\u1777" +
        "\u1778\x07\x04\x02\x02\u1778\u04B1\x03\x02\x02\x02\u1779\u177A\x07\u01DE" +
        "\x02\x02\u177A\u177B\x05\u031A\u018E\x02\u177B\u1785\x05\u0566\u02B4\x02" +
        "\u177C\u1784\x05\x16\f\x02\u177D\u1784\x05\x96L\x02\u177E\u1784\x05\x98" +
        "M\x02\u177F\u1784\x05\u0198\xCD\x02\u1780\u1784\x05\u0464\u0233\x02\u1781" +
        "\u1784\x05\u04B0\u0259\x02\u1782\u1784\x05\u0638\u031D\x02\u1783\u177C" +
        "\x03\x02\x02\x02\u1783\u177D\x03\x02\x02\x02\u1783\u177E\x03\x02\x02\x02" +
        "\u1783\u177F\x03\x02\x02\x02\u1783\u1780\x03\x02\x02\x02\u1783\u1781\x03" +
        "\x02\x02\x02\u1783\u1782\x03\x02\x02\x02\u1784\u1787\x03\x02\x02\x02\u1785" +
        "\u1783\x03\x02\x02\x02\u1785\u1786\x03\x02\x02\x02\u1786\u1788\x03\x02" +
        "\x02\x02\u1787\u1785\x03\x02\x02\x02\u1788\u1789\x07\x04\x02\x02\u1789" +
        "\u04B3\x03\x02\x02\x02\u178A\u178B\x07\u01DF\x02\x02\u178B\u178D\x05\u031C" +
        "\u018F\x02\u178C\u178E\x05\u031E\u0190\x02\u178D\u178C\x03\x02\x02\x02" +
        "\u178D\u178E\x03\x02\x02\x02\u178E\u178F\x03\x02\x02\x02\u178F\u1790\x07" +
        "\x04\x02\x02\u1790\u04B5\x03\x02\x02\x02\u1791\u1792\x07\u01E0\x02\x02" +
        "\u1792\u1793\x05\u04BA\u025E\x02\u1793\u179A\x05\u060C\u0307\x02\u1794" +
        "\u1799\x05\u01CE\xE8\x02\u1795\u1799\x05\u0466\u0234\x02\u1796\u1799\x05" +
        "\u0472\u023A\x02\u1797\u1799\x05\u0488\u0245\x02\u1798\u1794\x03\x02\x02" +
        "\x02\u1798\u1795\x03\x02\x02\x02\u1798\u1796\x03\x02\x02\x02\u1798\u1797" +
        "\x03\x02\x02\x02\u1799\u179C\x03\x02\x02\x02\u179A\u1798\x03\x02\x02\x02" +
        "\u179A\u179B\x03\x02\x02\x02\u179B\u179D\x03\x02\x02\x02\u179C\u179A\x03" +
        "\x02\x02\x02\u179D\u179E\x07\x04\x02\x02\u179E\u04B7\x03\x02\x02\x02\u179F" +
        "\u17A0\x07\u01E1\x02\x02\u17A0\u17A1\x05\u031A\u018E\x02\u17A1\u17A2\x05" +
        "\u0566\u02B4\x02\u17A2\u17AC\x05\u0636\u031C\x02\u17A3\u17AB\x05\x16\f" +
        "\x02\u17A4\u17AB\x05\x98M\x02\u17A5\u17AB\x05\u0198\xCD\x02\u17A6\u17AB" +
        "\x05\u01CE\xE8\x02\u17A7\u17AB\x05\u0464\u0233\x02\u17A8\u17AB\x05\u0488" +
        "\u0245\x02\u17A9\u17AB\x05\u04B0\u0259\x02\u17AA\u17A3\x03\x02\x02\x02" +
        "\u17AA\u17A4\x03\x02\x02\x02\u17AA\u17A5\x03\x02\x02\x02\u17AA\u17A6\x03" +
        "\x02\x02\x02\u17AA\u17A7\x03\x02\x02\x02\u17AA\u17A8\x03\x02\x02\x02\u17AA" +
        "\u17A9\x03\x02\x02\x02\u17AB\u17AE\x03\x02\x02\x02\u17AC\u17AA\x03\x02" +
        "\x02\x02\u17AC\u17AD\x03\x02\x02\x02\u17AD\u17AF\x03\x02\x02\x02\u17AE" +
        "\u17AC\x03\x02\x02\x02\u17AF\u17B0\x07\x04\x02\x02\u17B0\u04B9\x03\x02" +
        "\x02\x02\u17B1\u17B2\x07\u01E2\x02\x02\u17B2\u17B4\x05\u031C\u018F\x02" +
        "\u17B3\u17B5\x05\u031E\u0190\x02\u17B4\u17B3\x03\x02\x02\x02\u17B4\u17B5" +
        "\x03\x02\x02\x02\u17B5\u17B6\x03\x02\x02\x02\u17B6\u17B7\x07\x04\x02\x02" +
        "\u17B7\u04BB\x03\x02\x02\x02\u17B8\u17B9\x07\u01E3\x02\x02\u17B9\u17BA" +
        "\x05\u0238\u011D\x02\u17BA\u17BB\x05\u01D6\xEC\x02\u17BB\u17BC\x05\u04BE" +
        "\u0260\x02\u17BC\u17BD\x05\u04C0\u0261\x02\u17BD\u17BE\x07\x04\x02\x02" +
        "\u17BE\u04BD\x03\x02\x02\x02\u17BF\u17C1\x07\u01E4\x02\x02\u17C0\u17C2" +
        "\x05\u04B6\u025C\x02\u17C1\u17C0\x03\x02\x02\x02\u17C1\u17C2\x03\x02\x02" +
        "\x02\u17C2\u17C3\x03\x02\x02\x02\u17C3\u17C4\x07\x04\x02\x02\u17C4\u04BF" +
        "\x03\x02\x02\x02\u17C5\u17DA\x07\u01E5\x02\x02\u17C6\u17D9\x05d3\x02\u17C7" +
        "\u17D9\x05\x8CG\x02\u17C8\u17D9\x05\x96L\x02\u17C9\u17D9\x05\x98M\x02" +
        "\u17CA\u17D9\x05\u0464\u0233\x02\u17CB\u17D9\x05\u04A6\u0254\x02\u17CC" +
        "\u17D9\x05\u04BC\u025F\x02\u17CD\u17D9\x05\u04C4\u0263\x02\u17CE\u17D9" +
        "\x05\u04D2\u026A\x02\u17CF\u17D9\x05\u04D8\u026D\x02\u17D0\u17D9\x05\u04F0" +
        "\u0279\x02\u17D1\u17D9\x05\u04FA\u027E\x02\u17D2\u17D9\x05\u0502\u0282" +
        "\x02\u17D3\u17D9\x05\u050A\u0286\x02\u17D4\u17D9\x05\u0518\u028D\x02\u17D5" +
        "\u17D9\x05\u0540\u02A1\x02\u17D6\u17D9\x05\u0638\u031D\x02\u17D7\u17D9" +
        "\x05\u0654\u032B\x02\u17D8\u17C6\x03\x02\x02\x02\u17D8\u17C7\x03\x02\x02" +
        "\x02\u17D8\u17C8\x03\x02\x02\x02\u17D8\u17C9\x03\x02\x02\x02\u17D8\u17CA" +
        "\x03\x02\x02\x02\u17D8\u17CB\x03\x02\x02\x02\u17D8\u17CC\x03\x02\x02\x02" +
        "\u17D8\u17CD\x03\x02\x02\x02\u17D8\u17CE\x03\x02\x02\x02\u17D8\u17CF\x03" +
        "\x02\x02\x02\u17D8\u17D0\x03\x02\x02\x02\u17D8\u17D1\x03\x02\x02\x02\u17D8" +
        "\u17D2\x03\x02\x02\x02\u17D8\u17D3\x03\x02\x02\x02\u17D8\u17D4\x03\x02" +
        "\x02\x02\u17D8\u17D5\x03\x02\x02\x02\u17D8\u17D6\x03\x02\x02\x02\u17D8" +
        "\u17D7\x03\x02\x02\x02\u17D9\u17DC\x03\x02\x02\x02\u17DA\u17D8\x03\x02" +
        "\x02\x02\u17DA\u17DB\x03\x02\x02\x02\u17DB\u17DD\x03\x02\x02\x02\u17DC" +
        "\u17DA\x03\x02\x02\x02\u17DD\u17DE\x07\x04\x02\x02\u17DE\u04C1\x03\x02" +
        "\x02\x02\u17DF\u17EF\x07\u01E6\x02\x02\u17E0\u17EE\x05\u022A\u0116\x02" +
        "\u17E1\u17EE\x05\u051C\u028F\x02\u17E2\u17EE\x05\u0522\u0292\x02\u17E3" +
        "\u17EE\x05\u0526\u0294\x02\u17E4\u17EE\x05\u0528\u0295\x02\u17E5\u17EE" +
        "\x05\u052A\u0296\x02\u17E6\u17EE\x05\u052E\u0298\x02\u17E7\u17EE\x05\u0530" +
        "\u0299\x02\u17E8\u17EE\x05\u0532\u029A\x02\u17E9\u17EE\x05\u0534\u029B" +
        "\x02\u17EA\u17EE\x05\u0536\u029C\x02\u17EB\u17EE\x05\u0538\u029D\x02\u17EC" +
        "\u17EE\x05\u053C\u029F\x02\u17ED\u17E0\x03\x02\x02\x02\u17ED\u17E1\x03" +
        "\x02\x02\x02\u17ED\u17E2\x03\x02\x02\x02\u17ED\u17E3\x03\x02\x02\x02\u17ED" +
        "\u17E4\x03\x02\x02\x02\u17ED\u17E5\x03\x02\x02\x02\u17ED\u17E6\x03\x02" +
        "\x02\x02\u17ED\u17E7\x03\x02\x02\x02\u17ED\u17E8\x03\x02\x02\x02\u17ED" +
        "\u17E9\x03\x02\x02\x02\u17ED\u17EA\x03\x02\x02\x02\u17ED\u17EB\x03\x02" +
        "\x02\x02\u17ED\u17EC\x03\x02\x02\x02\u17EE\u17F1\x03\x02\x02\x02\u17EF" +
        "\u17ED\x03\x02\x02\x02\u17EF\u17F0\x03\x02\x02\x02\u17F0\u17F2\x03\x02" +
        "\x02\x02\u17F1\u17EF\x03\x02\x02\x02\u17F2\u17F3\x07\x04\x02\x02\u17F3" +
        "\u04C3\x03\x02\x02\x02\u17F4\u17F5\x07\u01E7\x02\x02\u17F5\u17F6\x05\u0238" +
        "\u011D\x02\u17F6\u17F7\x05\u04CA\u0266\x02\u17F7\u17F8\x05\u020A\u0106" +
        "\x02\u17F8\u1801\x05\u060C\u0307\x02\u17F9\u1800\x05\u0204\u0103\x02\u17FA" +
        "\u1800\x05\u0208\u0105\x02\u17FB\u1800\x05\u023A\u011E\x02\u17FC\u1800" +
        "\x05\u0376\u01BC\x02\u17FD\u1800\x05\u0466\u0234\x02\u17FE\u1800\x05\u0472" +
        "\u023A\x02\u17FF\u17F9\x03\x02\x02\x02\u17FF\u17FA\x03\x02\x02\x02\u17FF" +
        "\u17FB\x03\x02\x02\x02\u17FF\u17FC\x03\x02\x02\x02\u17FF\u17FD\x03\x02" +
        "\x02\x02\u17FF\u17FE\x03\x02\x02\x02\u1800\u1803\x03\x02\x02\x02\u1801" +
        "\u17FF\x03\x02\x02\x02\u1801\u1802\x03\x02\x02\x02\u1802\u1804\x03\x02" +
        "\x02\x02\u1803\u1801\x03\x02\x02\x02\u1804\u1805\x07\x04\x02\x02\u1805" +
        "\u04C5\x03\x02\x02\x02\u1806\u1807\x07\u01E8\x02\x02\u1807\u1808\x05\u023C" +
        "\u011F\x02\u1808\u1809\x07\x04\x02\x02\u1809\u04C7\x03\x02\x02\x02\u180A" +
        "\u180B\x07\u01E9\x02\x02\u180B\u180C\x05\u031A\u018E\x02\u180C\u180E\x05" +
        "\u0566\u02B4\x02\u180D\u180F\x05\u0216\u010C\x02\u180E\u180D\x03\x02\x02" +
        "\x02\u180E\u180F\x03\x02\x02\x02\u180F\u181A\x03\x02\x02\x02\u1810\u1819" +
        "\x05\x16\f\x02\u1811\u1819\x05\x98M\x02\u1812\u1819\x05\u0198\xCD\x02" +
        "\u1813\u1819\x05\u0204\u0103\x02\u1814\u1819\x05\u023A\u011E\x02\u1815" +
        "\u1819\x05\u0464\u0233\x02\u1816\u1819\x05\u04B0\u0259\x02\u1817\u1819" +
        "\x05\u04C2\u0262\x02\u1818\u1810\x03\x02\x02\x02\u1818\u1811\x03\x02\x02" +
        "\x02\u1818\u1812\x03\x02\x02\x02\u1818\u1813\x03\x02\x02\x02\u1818\u1814" +
        "\x03\x02\x02\x02\u1818\u1815\x03\x02\x02\x02\u1818\u1816\x03\x02\x02\x02" +
        "\u1818\u1817\x03\x02\x02\x02\u1819\u181C\x03\x02\x02\x02\u181A\u1818\x03" +
        "\x02\x02\x02\u181A\u181B\x03\x02\x02\x02\u181B\u181E\x03\x02\x02\x02\u181C" +
        "\u181A\x03\x02\x02\x02\u181D\u181F\x05\u0216\u010C\x02\u181E\u181D\x03" +
        "\x02\x02\x02\u181E\u181F\x03\x02\x02\x02\u181F\u1820\x03\x02\x02\x02\u1820" +
        "\u1821\x07\x04\x02\x02\u1821\u04C9\x03\x02\x02\x02\u1822\u1823\x07\u01EA" +
        "\x02\x02\u1823\u1825\x05\u031C\u018F\x02\u1824\u1826\x05\u031E\u0190\x02" +
        "\u1825\u1824\x03\x02\x02\x02\u1825\u1826\x03\x02\x02\x02\u1826\u1827\x03" +
        "\x02\x02\x02\u1827\u1828\x07\x04\x02\x02\u1828\u04CB\x03\x02\x02\x02\u1829" +
        "\u182A\x07\u01EB\x02\x02\u182A\u182B\x05\u04D0\u0269\x02\u182B\u1831\x05" +
        "\u060C\u0307\x02\u182C\u1830\x05\xAAV\x02\u182D\u1830\x05\u0466\u0234" +
        "\x02\u182E\u1830\x05\u0472\u023A\x02\u182F\u182C\x03\x02\x02\x02\u182F" +
        "\u182D\x03\x02\x02\x02\u182F\u182E\x03\x02\x02\x02\u1830\u1833\x03\x02" +
        "\x02\x02\u1831\u182F\x03\x02\x02\x02\u1831\u1832\x03\x02\x02\x02\u1832" +
        "\u1834\x03\x02\x02\x02\u1833\u1831\x03\x02\x02\x02\u1834\u1835\x07\x04" +
        "\x02\x02\u1835\u04CD\x03\x02\x02\x02\u1836\u1837\x07\u01EC\x02\x02\u1837" +
        "\u1838\x05\u031A\u018E\x02\u1838\u1839\x05\u0566\u02B4\x02\u1839\u1842" +
        "\x05\u0636\u031C\x02\u183A\u1841\x05\x16\f\x02\u183B\u1841\x05\x98M\x02" +
        "\u183C\u1841\x05\xAAV\x02\u183D\u1841\x05\u0198\xCD\x02\u183E\u1841\x05" +
        "\u0464\u0233\x02\u183F\u1841\x05\u04B0\u0259\x02\u1840\u183A\x03\x02\x02" +
        "\x02\u1840\u183B\x03\x02\x02\x02\u1840\u183C\x03\x02\x02\x02\u1840\u183D" +
        "\x03\x02\x02\x02\u1840\u183E\x03\x02\x02\x02\u1840\u183F\x03\x02\x02\x02" +
        "\u1841\u1844\x03\x02\x02\x02\u1842\u1840\x03\x02\x02\x02\u1842\u1843\x03" +
        "\x02\x02\x02\u1843\u1845\x03\x02\x02\x02\u1844\u1842\x03\x02\x02\x02\u1845" +
        "\u1846\x07\x04\x02\x02\u1846\u04CF\x03\x02\x02\x02\u1847\u1848\x07\u01ED" +
        "\x02\x02\u1848\u184A\x05\u031C\u018F\x02\u1849\u184B\x05\u031E\u0190\x02" +
        "\u184A\u1849\x03\x02\x02\x02\u184A\u184B\x03\x02\x02\x02\u184B\u184C\x03" +
        "\x02\x02\x02\u184C\u184D\x07\x04\x02\x02\u184D\u04D1\x03\x02\x02\x02\u184E" +
        "\u184F\x07\u01EE\x02\x02\u184F\u1850\x05\u0238\u011D\x02\u1850\u1851\x05" +
        "\u0230\u0119\x02\u1851\u1852\x05\u04D4\u026B\x02\u1852\u1853\x05\u04C0" +
        "\u0261\x02\u1853\u1854\x07\x04\x02\x02\u1854\u04D3\x03\x02\x02\x02\u1855" +
        "\u1857\x07\u01EF\x02\x02\u1856\u1858\x05\u04CC\u0267\x02\u1857\u1856\x03" +
        "\x02\x02\x02\u1857\u1858\x03\x02\x02\x02\u1858\u1859\x03\x02\x02\x02\u1859" +
        "\u185A\x07\x04\x02\x02\u185A\u04D5\x03\x02\x02\x02\u185B\u1860\x07\u01F0" +
        "\x02\x02\u185C\u185F\x05\u03C4\u01E3\x02\u185D\u185F\x05\u0608\u0305\x02" +
        "\u185E\u185C\x03\x02\x02\x02\u185E\u185D\x03\x02\x02\x02\u185F\u1862\x03" +
        "\x02\x02\x02\u1860\u185E\x03\x02\x02\x02\u1860\u1861\x03\x02\x02\x02\u1861" +
        "\u1863\x03\x02\x02\x02\u1862\u1860\x03\x02\x02\x02\u1863\u1864\x07\x04" +
        "\x02\x02\u1864\u04D7\x03\x02\x02\x02\u1865\u1866\x07\u01F1\x02\x02\u1866" +
        "\u1867\x05\u0238\u011D\x02\u1867\u1868\x05\u0272\u013A\x02\u1868\u1869" +
        "\x05\u0564\u02B3\x02\u1869\u187D\x05\u060C\u0307\x02\u186A\u187C\x05b" +
        "2\x02\u186B\u187C\x05f4\x02\u186C\u187C\x05\x8EH\x02\u186D\u187C\x05\u011C" +
        "\x8F\x02\u186E\u187C\x05\u023A\u011E\x02\u186F\u187C\x05\u0262\u0132\x02" +
        "\u1870\u187C\x05\u0266\u0134\x02\u1871\u187C\x05\u026A\u0136\x02\u1872" +
        "\u187C\x05\u026E\u0138\x02\u1873\u187C\x05\u0276\u013C\x02\u1874\u187C" +
        "\x05\u0376\u01BC\x02\u1875\u187C\x05\u03CE\u01E8\x02\u1876\u187C\x05\u03F0" +
        "\u01F9\x02\u1877\u187C\x05\u0466\u0234\x02\u1878\u187C\x05\u0472\u023A" +
        "\x02\u1879\u187C\x05\u05FE\u0300\x02\u187A\u187C\x05\u0650\u0329\x02\u187B" +
        "\u186A\x03\x02\x02\x02\u187B\u186B\x03\x02\x02\x02\u187B\u186C\x03\x02" +
        "\x02\x02\u187B\u186D\x03\x02\x02\x02\u187B\u186E\x03\x02\x02\x02\u187B" +
        "\u186F\x03\x02\x02\x02\u187B\u1870\x03\x02\x02\x02\u187B\u1871\x03\x02" +
        "\x02\x02\u187B\u1872\x03\x02\x02\x02\u187B\u1873\x03\x02\x02\x02\u187B" +
        "\u1874\x03\x02\x02\x02\u187B\u1875\x03\x02\x02\x02\u187B\u1876\x03\x02" +
        "\x02\x02\u187B\u1877\x03\x02\x02\x02\u187B\u1878\x03\x02\x02\x02\u187B" +
        "\u1879\x03\x02\x02\x02\u187B\u187A\x03\x02\x02\x02\u187C\u187F\x03\x02" +
        "\x02\x02\u187D\u187B\x03\x02\x02\x02\u187D\u187E\x03\x02\x02\x02\u187E" +
        "\u1880\x03\x02\x02\x02\u187F\u187D\x03\x02\x02\x02\u1880\u1881\x07\x04" +
        "\x02\x02\u1881\u04D9\x03\x02\x02\x02\u1882\u1883\x07\u01F2\x02\x02\u1883" +
        "\u1884\x05\u023C\u011F\x02\u1884\u1885\x07\x04\x02\x02\u1885\u04DB\x03" +
        "\x02\x02\x02\u1886\u188F\x07\u01F3\x02\x02\u1887\u188E\x05\xCEh\x02\u1888" +
        "\u188E\x05\xEAv\x02\u1889\u188E\x05\u0296\u014C\x02\u188A\u188E\x05\u029A" +
        "\u014E\x02\u188B\u188E\x05\u02A6\u0154\x02\u188C\u188E\x05\u02AA\u0156" +
        "\x02\u188D\u1887\x03\x02\x02\x02\u188D\u1888\x03\x02\x02\x02\u188D\u1889" +
        "\x03\x02\x02\x02\u188D\u188A\x03\x02\x02\x02\u188D\u188B\x03\x02\x02\x02" +
        "\u188D\u188C\x03\x02\x02\x02\u188E\u1891\x03\x02\x02\x02\u188F\u188D\x03" +
        "\x02\x02\x02\u188F\u1890\x03\x02\x02\x02\u1890\u1892\x03\x02\x02\x02\u1891" +
        "\u188F\x03\x02\x02\x02\u1892\u1893\x07\x04\x02\x02\u1893\u04DD\x03\x02" +
        "\x02\x02\u1894\u189F\x07\u01F4\x02\x02\u1895\u189E\x05\xE8u\x02\u1896" +
        "\u189E\x05\u0142\xA2\x02\u1897\u189E\x05\u0298\u014D\x02\u1898\u189E\x05" +
        "\u0376\u01BC\x02\u1899\u189E\x05\u0462\u0232\x02\u189A\u189E\x05\u04E0" +
        "\u0271\x02\u189B\u189E\x05\u04E8\u0275\x02\u189C\u189E\x05\u0570\u02B9" +
        "\x02\u189D\u1895\x03\x02\x02\x02\u189D\u1896\x03\x02\x02\x02\u189D\u1897" +
        "\x03\x02\x02\x02\u189D\u1898\x03\x02\x02\x02\u189D\u1899\x03\x02\x02\x02" +
        "\u189D\u189A\x03\x02\x02\x02\u189D\u189B\x03\x02\x02\x02\u189D\u189C\x03" +
        "\x02\x02\x02\u189E\u18A1\x03\x02\x02\x02\u189F\u189D\x03\x02\x02\x02\u189F" +
        "\u18A0\x03\x02\x02\x02\u18A0\u18A2\x03\x02\x02\x02\u18A1\u189F\x03\x02" +
        "\x02\x02\u18A2\u18A3\x07\x04\x02\x02\u18A3\u04DF\x03\x02\x02\x02\u18A4" +
        "\u18A5\x07\u01F5\x02\x02\u18A5\u18A6\x05\u0238\u011D\x02\u18A6\u18A7\x05" +
        "\u04E6\u0274\x02\u18A7\u18AE\x05\u060C\u0307\x02\u18A8\u18AD\x05\u023A" +
        "\u011E\x02\u18A9\u18AD\x05\u0376\u01BC\x02\u18AA\u18AD\x05\u0466\u0234" +
        "\x02\u18AB\u18AD\x05\u0472\u023A\x02\u18AC\u18A8\x03\x02\x02\x02\u18AC" +
        "\u18A9\x03\x02\x02\x02\u18AC\u18AA\x03\x02\x02\x02\u18AC\u18AB\x03\x02" +
        "\x02\x02\u18AD\u18B0\x03\x02\x02\x02\u18AE\u18AC\x03\x02\x02\x02\u18AE" +
        "\u18AF\x03\x02\x02\x02\u18AF\u18B1\x03\x02\x02\x02\u18B0\u18AE\x03\x02" +
        "\x02\x02\u18B1\u18B2\x07\x04\x02\x02\u18B2\u04E1\x03\x02\x02\x02\u18B3" +
        "\u18B4\x07\u01F6\x02\x02\u18B4\u18B5\x05\u023C\u011F\x02\u18B5\u18B6\x07" +
        "\x04\x02\x02\u18B6\u04E3\x03\x02\x02\x02\u18B7\u18B8\x07\u01F7\x02\x02" +
        "\u18B8\u18B9\x05\u031A\u018E\x02\u18B9\u18BA\x05\u0566\u02B4\x02\u18BA" +
        "\u18C2\x05\u0216\u010C\x02\u18BB\u18C1\x05\x98M\x02\u18BC\u18C1\x05\u0198" +
        "\xCD\x02\u18BD\u18C1\x05\u023A\u011E\x02\u18BE\u18C1\x05\u0464\u0233\x02" +
        "\u18BF\u18C1\x05\u04B0\u0259\x02\u18C0\u18BB\x03\x02\x02\x02\u18C0\u18BC" +
        "\x03\x02\x02\x02\u18C0\u18BD\x03\x02\x02\x02\u18C0\u18BE\x03\x02\x02\x02" +
        "\u18C0\u18BF\x03\x02\x02\x02\u18C1\u18C4\x03\x02\x02\x02\u18C2\u18C0\x03" +
        "\x02\x02\x02\u18C2\u18C3\x03\x02\x02\x02\u18C3\u18C5\x03\x02\x02\x02\u18C4" +
        "\u18C2\x03\x02\x02\x02\u18C5\u18C6\x07\x04\x02\x02\u18C6\u04E5\x03\x02" +
        "\x02\x02\u18C7\u18C8\x07\u01F8\x02\x02\u18C8\u18CA\x05\u031C\u018F\x02" +
        "\u18C9\u18CB\x05\u031E\u0190\x02\u18CA\u18C9\x03\x02\x02\x02\u18CA\u18CB" +
        "\x03\x02\x02\x02\u18CB\u18CC\x03\x02\x02\x02\u18CC\u18CD\x07\x04\x02\x02" +
        "\u18CD\u04E7\x03\x02\x02\x02\u18CE\u18CF\x07\u01F9\x02\x02\u18CF\u18D0" +
        "\x05\u0238\u011D\x02\u18D0\u18D1\x05\u04EE\u0278\x02\u18D1\u18D8\x05\u060C" +
        "\u0307\x02\u18D2\u18D7\x05\u023A\u011E\x02\u18D3\u18D7\x05\u0376\u01BC" +
        "\x02\u18D4\u18D7\x05\u0466\u0234\x02\u18D5\u18D7\x05\u0472\u023A\x02\u18D6" +
        "\u18D2\x03\x02\x02\x02\u18D6\u18D3\x03\x02\x02\x02\u18D6\u18D4\x03\x02" +
        "\x02\x02\u18D6\u18D5\x03\x02\x02\x02\u18D7\u18DA\x03\x02\x02\x02\u18D8" +
        "\u18D6\x03\x02\x02\x02\u18D8\u18D9\x03\x02\x02\x02\u18D9\u18DB\x03\x02" +
        "\x02\x02\u18DA\u18D8\x03\x02\x02\x02\u18DB\u18DC\x07\x04\x02\x02\u18DC" +
        "\u04E9\x03\x02\x02\x02\u18DD\u18DE\x07\u01FA\x02\x02\u18DE\u18DF\x05\u023C" +
        "\u011F\x02\u18DF\u18E0\x07\x04\x02\x02\u18E0\u04EB\x03\x02\x02\x02\u18E1" +
        "\u18E2\x07\u01FB\x02\x02\u18E2\u18E3\x05\u031A\u018E\x02\u18E3\u18E4\x05" +
        "\u0566\u02B4\x02\u18E4\u18EC\x05\u0216\u010C\x02\u18E5\u18EB\x05\x98M" +
        "\x02\u18E6\u18EB\x05\u0198\xCD\x02\u18E7\u18EB\x05\u023A\u011E\x02\u18E8" +
        "\u18EB\x05\u0464\u0233\x02\u18E9\u18EB\x05\u04B0\u0259\x02\u18EA\u18E5" +
        "\x03\x02\x02\x02\u18EA\u18E6\x03\x02\x02\x02\u18EA\u18E7\x03\x02\x02\x02" +
        "\u18EA\u18E8\x03\x02\x02\x02\u18EA\u18E9\x03\x02\x02\x02\u18EB\u18EE\x03" +
        "\x02\x02\x02\u18EC\u18EA\x03\x02\x02\x02\u18EC\u18ED\x03\x02\x02\x02\u18ED" +
        "\u18EF\x03\x02\x02\x02\u18EE\u18EC\x03\x02\x02\x02\u18EF\u18F0\x07\x04" +
        "\x02\x02\u18F0\u04ED\x03\x02\x02\x02\u18F1\u18F2\x07\u01FC\x02\x02\u18F2" +
        "\u18F4\x05\u031C\u018F\x02\u18F3\u18F5\x05\u031E\u0190\x02\u18F4\u18F3" +
        "\x03\x02\x02\x02\u18F4\u18F5\x03\x02\x02\x02\u18F5\u18F6\x03\x02\x02\x02" +
        "\u18F6\u18F7\x07\x04\x02\x02\u18F7\u04EF\x03\x02\x02\x02\u18F8\u18F9\x07" +
        "\u01FD\x02\x02\u18F9\u18FA\x05\u0238\u011D\x02\u18FA\u18FD\x05\u04F6\u027C" +
        "\x02\u18FB\u18FE\x05\u0452\u022A\x02\u18FC\u18FE\x05\u032A\u0196\x02\u18FD" +
        "\u18FB\x03\x02\x02\x02\u18FD\u18FC\x03\x02\x02\x02\u18FE\u18FF\x03\x02" +
        "\x02\x02\u18FF\u1907\x05\u060C\u0307\x02\u1900\u1906\x05\u023A\u011E\x02" +
        "\u1901\u1906\x05\u0376\u01BC\x02\u1902\u1906\x05\u041A\u020E\x02\u1903" +
        "\u1906\x05\u0466\u0234\x02\u1904\u1906\x05\u0472\u023A\x02\u1905\u1900" +
        "\x03\x02\x02\x02\u1905\u1901\x03\x02\x02\x02\u1905\u1902\x03\x02\x02\x02" +
        "\u1905\u1903\x03\x02\x02\x02\u1905\u1904\x03\x02\x02\x02\u1906\u1909\x03" +
        "\x02\x02\x02\u1907\u1905\x03\x02\x02\x02\u1907\u1908\x03\x02\x02\x02\u1908" +
        "\u190A\x03\x02\x02\x02\u1909\u1907\x03\x02\x02\x02\u190A\u190B\x07\x04" +
        "\x02\x02\u190B\u04F1\x03\x02\x02\x02\u190C\u190D\x07\u01FE\x02\x02\u190D" +
        "\u190E\x05\u023C\u011F\x02\u190E\u190F\x07\x04\x02\x02\u190F\u04F3\x03" +
        "\x02\x02\x02\u1910\u1911\x07\u01FF\x02\x02\u1911\u1912\x05\u031A\u018E" +
        "\x02\u1912\u1913\x05\u0566\u02B4\x02\u1913\u1914\x05\u0216\u010C\x02\u1914" +
        "\u191F\x05\u042A\u0216\x02\u1915\u191E\x05\x16\f\x02\u1916\u191E\x05\x98" +
        "M\x02\u1917\u191E\x05\u0198\xCD\x02\u1918\u191E\x05\u023A\u011E\x02\u1919" +
        "\u191E\x05\u041A\u020E\x02\u191A\u191E\x05\u0464\u0233\x02\u191B\u191E" +
        "\x05\u04B0\u0259\x02\u191C\u191E\x05\u053A\u029E\x02\u191D\u1915\x03\x02" +
        "\x02\x02\u191D\u1916\x03\x02\x02\x02\u191D\u1917\x03\x02\x02\x02\u191D" +
        "\u1918\x03\x02\x02\x02\u191D\u1919\x03\x02\x02\x02\u191D\u191A\x03\x02" +
        "\x02\x02\u191D\u191B\x03\x02\x02\x02\u191D\u191C\x03\x02\x02\x02\u191E" +
        "\u1921\x03\x02\x02\x02\u191F\u191D\x03\x02\x02\x02\u191F\u1920\x03\x02" +
        "\x02\x02\u1920\u1922\x03\x02\x02\x02\u1921\u191F\x03\x02\x02\x02\u1922" +
        "\u1923\x07\x04\x02\x02\u1923\u04F5\x03\x02\x02\x02\u1924\u1925\x07\u0200" +
        "\x02\x02\u1925\u1927\x05\u031C\u018F\x02\u1926\u1928\x05\u031E\u0190\x02" +
        "\u1927\u1926\x03\x02\x02\x02\u1927\u1928\x03\x02\x02\x02\u1928\u1929\x03" +
        "\x02\x02\x02\u1929\u192A\x07\x04\x02\x02\u192A\u04F7\x03\x02\x02\x02\u192B" +
        "\u192C\x07\u0201\x02\x02\u192C\u192F\x05\u0588\u02C5\x02\u192D\u1930\x05" +
        "\u021A\u010E\x02\u192E\u1930\x05\u0382\u01C2\x02\u192F\u192D\x03\x02\x02" +
        "\x02\u192F\u192E\x03\x02\x02\x02\u1930\u1932\x03\x02\x02\x02\u1931\u1933" +
        "\x05\u0384\u01C3\x02\u1932\u1931\x03\x02\x02\x02\u1932\u1933\x03\x02\x02" +
        "\x02\u1933\u1934\x03\x02\x02\x02\u1934\u1935\x07\x04\x02\x02\u1935\u04F9" +
        "\x03\x02\x02\x02\u1936\u1937\x07\u0202\x02\x02\u1937\u1938\x05\u02A4\u0153" +
        "\x02\u1938\u1939\x05\u05B2\u02DA\x02\u1939\u193A\x05\u04DE\u0270\x02\u193A" +
        "\u1941\x05\u0500\u0281\x02\u193B\u1940\x05\x96L\x02\u193C\u1940\x05\u04DC" +
        "\u026F\x02\u193D\u1940\x05\u04FC\u027F\x02\u193E\u1940\x05\u0638\u031D" +
        "\x02\u193F\u193B\x03\x02\x02\x02\u193F\u193C\x03\x02\x02\x02\u193F\u193D" +
        "\x03\x02\x02\x02\u193F\u193E\x03\x02\x02\x02\u1940\u1943\x03\x02\x02\x02" +
        "\u1941\u193F\x03\x02\x02\x02\u1941\u1942\x03\x02\x02\x02\u1942\u1944\x03" +
        "\x02\x02\x02\u1943\u1941\x03\x02\x02\x02\u1944\u1945\x07\x04\x02\x02\u1945" +
        "\u04FB\x03\x02\x02\x02\u1946\u1949\x07\u0203\x02\x02\u1947\u194A\x05\u04FE" +
        "\u0280\x02\u1948\u194A\x05\u0550\u02A9\x02\u1949\u1947\x03\x02\x02\x02" +
        "\u1949\u1948\x03\x02\x02\x02\u194A\u194B\x03\x02\x02\x02\u194B\u194C\x07" +
        "\x04\x02\x02\u194C\u04FD\x03\x02\x02\x02\u194D\u1954\x07\u0204\x02\x02" +
        "\u194E\u1953\x05\x96L\x02\u194F\u1953\x05\u0198\xCD\x02\u1950\u1953\x05" +
        "\u04B0\u0259\x02\u1951\u1953\x05\u0638\u031D\x02\u1952\u194E\x03\x02\x02" +
        "\x02\u1952\u194F\x03\x02\x02\x02\u1952\u1950\x03\x02\x02\x02\u1952\u1951" +
        "\x03\x02\x02\x02\u1953\u1956\x03\x02\x02\x02\u1954\u1952\x03\x02\x02\x02" +
        "\u1954\u1955\x03\x02\x02\x02\u1955\u1957\x03\x02\x02\x02\u1956\u1954\x03" +
        "\x02\x02\x02\u1957\u1958\x07\x04\x02\x02\u1958\u04FF\x03\x02\x02\x02\u1959" +
        "\u195C\x07\u0205\x02\x02\u195A\u195D\x05\u0430\u0219\x02\u195B\u195D\x05" +
        "\u02C4\u0163\x02\u195C\u195A\x03\x02\x02\x02\u195C\u195B\x03\x02\x02\x02" +
        "\u195C\u195D\x03\x02\x02\x02\u195D\u1968\x03\x02\x02\x02\u195E\u1967\x05" +
        "\u0498\u024D\x02\u195F\u1967\x05\u04C6\u0264\x02\u1960\u1967\x05\u04E2" +
        "\u0272\x02\u1961\u1967\x05\u04EA\u0276\x02\u1962\u1967\x05\u04F2\u027A" +
        "\x02\u1963\u1967\x05\u0504\u0283\x02\u1964\u1967\x05\u050C\u0287\x02\u1965" +
        "\u1967\x05\u055E\u02B0\x02\u1966\u195E\x03\x02\x02\x02\u1966\u195F\x03" +
        "\x02\x02\x02\u1966\u1960\x03\x02\x02\x02\u1966\u1961\x03\x02\x02\x02\u1966" +
        "\u1962\x03\x02\x02\x02\u1966\u1963\x03\x02\x02\x02\u1966\u1964\x03\x02" +
        "\x02\x02\u1966\u1965\x03\x02\x02\x02\u1967\u196A\x03\x02\x02\x02\u1968" +
        "\u1966\x03\x02\x02\x02\u1968\u1969\x03\x02\x02\x02\u1969\u196D\x03\x02" +
        "\x02\x02\u196A\u1968\x03\x02\x02\x02\u196B\u196E\x05\u0430\u0219\x02\u196C" +
        "\u196E\x05\u02C4\u0163\x02\u196D\u196B\x03\x02\x02\x02\u196D\u196C\x03" +
        "\x02\x02\x02\u196D\u196E\x03\x02\x02\x02\u196E\u1979\x03\x02\x02\x02\u196F" +
        "\u1978\x05\u0498\u024D\x02\u1970\u1978\x05\u04C6\u0264\x02\u1971\u1978" +
        "\x05\u04E2\u0272\x02\u1972\u1978\x05\u04EA\u0276\x02\u1973\u1978\x05\u04F2" +
        "\u027A\x02\u1974\u1978\x05\u0504\u0283\x02\u1975\u1978\x05\u050C\u0287" +
        "\x02\u1976\u1978\x05\u055E\u02B0\x02\u1977\u196F\x03\x02\x02\x02\u1977" +
        "\u1970\x03\x02\x02\x02\u1977\u1971\x03\x02\x02\x02\u1977\u1972\x03\x02" +
        "\x02\x02\u1977\u1973\x03\x02\x02\x02\u1977\u1974\x03\x02\x02\x02\u1977" +
        "\u1975\x03\x02\x02\x02\u1977\u1976\x03\x02\x02\x02\u1978\u197B\x03\x02" +
        "\x02\x02\u1979\u1977\x03\x02\x02\x02\u1979\u197A\x03\x02\x02\x02\u197A" +
        "\u197C\x03\x02\x02\x02\u197B\u1979\x03\x02\x02\x02\u197C\u197D\x07\x04" +
        "\x02\x02\u197D\u0501\x03\x02\x02\x02\u197E\u197F\x07\u0206\x02\x02\u197F" +
        "\u1980\x05\u0238\u011D\x02\u1980\u1981\x05\u0508\u0285\x02\u1981\u198B" +
        "\x05\u060C\u0307\x02\u1982\u198A\x05 \x11\x02\u1983\u198A\x05\u023A\u011E" +
        "\x02\u1984\u198A\x05\u0376\u01BC\x02\u1985\u198A\x05\u0462\u0232\x02\u1986" +
        "\u198A\x05\u0464\u0233\x02\u1987\u198A\x05\u0466\u0234\x02\u1988\u198A" +
        "\x05\u0472\u023A\x02\u1989\u1982\x03\x02\x02\x02\u1989\u1983\x03\x02\x02" +
        "\x02\u1989\u1984\x03\x02\x02\x02\u1989\u1985\x03\x02\x02\x02\u1989\u1986" +
        "\x03\x02\x02\x02\u1989\u1987\x03\x02\x02\x02\u1989\u1988\x03\x02\x02\x02" +
        "\u198A\u198D\x03\x02\x02\x02\u198B\u1989\x03\x02\x02\x02\u198B\u198C\x03" +
        "\x02\x02\x02\u198C\u198E\x03\x02\x02\x02\u198D\u198B\x03\x02\x02\x02\u198E" +
        "\u198F\x07\x04\x02\x02\u198F\u0503\x03\x02\x02\x02\u1990\u1991\x07\u0207" +
        "\x02\x02\u1991\u1992\x05\u023C\u011F\x02\u1992\u1993\x07\x04\x02\x02\u1993" +
        "\u0505\x03\x02\x02\x02\u1994\u1995\x07\u0208\x02\x02\u1995\u1996\x05\u031A" +
        "\u018E\x02\u1996\u1997\x05\u0566\u02B4\x02\u1997\u19A1\x05\u0216\u010C" +
        "\x02\u1998\u19A0\x05\x16\f\x02\u1999\u19A0\x05 \x11\x02\u199A\u19A0\x05" +
        "\x98M\x02\u199B\u19A0\x05\u0198\xCD\x02\u199C\u19A0\x05\u023A\u011E\x02" +
        "\u199D\u19A0\x05\u0464\u0233\x02\u199E\u19A0\x05\u04B0\u0259\x02\u199F" +
        "\u1998\x03\x02\x02\x02\u199F\u1999\x03\x02\x02\x02\u199F\u199A\x03\x02" +
        "\x02\x02\u199F\u199B\x03\x02\x02\x02\u199F\u199C\x03\x02\x02\x02\u199F" +
        "\u199D\x03\x02\x02\x02\u199F\u199E\x03\x02\x02\x02\u19A0\u19A3\x03\x02" +
        "\x02\x02\u19A1\u199F\x03\x02\x02\x02\u19A1\u19A2\x03\x02\x02\x02\u19A2" +
        "\u19A4\x03\x02\x02\x02\u19A3\u19A1\x03\x02\x02\x02\u19A4\u19A5\x07\x04" +
        "\x02\x02\u19A5\u0507\x03\x02\x02\x02\u19A6\u19A7\x07\u0209\x02\x02\u19A7" +
        "\u19A9\x05\u031C\u018F\x02\u19A8\u19AA\x05\u031E\u0190\x02\u19A9\u19A8" +
        "\x03\x02\x02\x02\u19A9\u19AA\x03\x02\x02\x02\u19AA\u19AB\x03\x02\x02\x02" +
        "\u19AB\u19AC\x07\x04\x02\x02\u19AC\u0509\x03\x02\x02\x02\u19AD\u19AE\x07" +
        "\u020A\x02\x02\u19AE\u19AF\x05\u0238\u011D\x02\u19AF\u19B0\x05\u0510\u0289" +
        "\x02\u19B0\u19BA\x05\u060C\u0307\x02\u19B1\u19B9\x05 \x11\x02\u19B2\u19B9" +
        "\x05\u023A\u011E\x02\u19B3\u19B9\x05\u0376\u01BC\x02\u19B4\u19B9\x05\u0462" +
        "\u0232\x02\u19B5\u19B9\x05\u0464\u0233\x02\u19B6\u19B9\x05\u0466\u0234" +
        "\x02\u19B7\u19B9\x05\u0472\u023A\x02\u19B8\u19B1\x03\x02\x02\x02\u19B8" +
        "\u19B2\x03\x02\x02\x02\u19B8\u19B3\x03\x02\x02\x02\u19B8\u19B4\x03\x02" +
        "\x02\x02\u19B8\u19B5\x03\x02\x02\x02\u19B8\u19B6\x03\x02\x02\x02\u19B8" +
        "\u19B7\x03\x02\x02\x02\u19B9\u19BC\x03\x02\x02\x02\u19BA\u19B8\x03\x02" +
        "\x02\x02\u19BA\u19BB\x03\x02\x02\x02\u19BB\u19BD\x03\x02\x02\x02\u19BC" +
        "\u19BA\x03\x02\x02\x02\u19BD\u19BE\x07\x04\x02\x02\u19BE\u050B\x03\x02" +
        "\x02\x02\u19BF\u19C0\x07\u020B\x02\x02\u19C0\u19C1\x05\u023C\u011F\x02" +
        "\u19C1\u19C2\x07\x04\x02\x02\u19C2\u050D\x03\x02\x02\x02\u19C3\u19C4\x07" +
        "\u020C\x02\x02\u19C4\u19C5\x05\u031A\u018E\x02\u19C5\u19C6\x05\u0566\u02B4" +
        "\x02\u19C6\u19D0\x05\u0216\u010C\x02\u19C7\u19CF\x05\x16\f\x02\u19C8\u19CF" +
        "\x05 \x11\x02\u19C9\u19CF\x05\x98M\x02\u19CA\u19CF\x05\u0198\xCD\x02\u19CB" +
        "\u19CF\x05\u023A\u011E\x02\u19CC\u19CF\x05\u0464\u0233\x02\u19CD\u19CF" +
        "\x05\u04B0\u0259\x02\u19CE\u19C7\x03\x02\x02\x02\u19CE\u19C8\x03\x02\x02" +
        "\x02";
    EDIF300Parser._serializedATNSegment12 = "\u19CE\u19C9\x03\x02\x02\x02\u19CE\u19CA\x03\x02\x02\x02\u19CE\u19CB\x03" +
        "\x02\x02\x02\u19CE\u19CC\x03\x02\x02\x02\u19CE\u19CD\x03\x02\x02\x02\u19CF" +
        "\u19D2\x03\x02\x02\x02\u19D0\u19CE\x03\x02\x02\x02\u19D0\u19D1\x03\x02" +
        "\x02\x02\u19D1\u19D3\x03\x02\x02\x02\u19D2\u19D0\x03\x02\x02\x02\u19D3" +
        "\u19D4\x07\x04\x02\x02\u19D4\u050F\x03\x02\x02\x02\u19D5\u19D6\x07\u020D" +
        "\x02\x02\u19D6\u19D8\x05\u031C\u018F\x02\u19D7\u19D9\x05\u031E\u0190\x02" +
        "\u19D8\u19D7\x03\x02\x02\x02\u19D8\u19D9\x03\x02\x02\x02\u19D9\u19DA\x03" +
        "\x02\x02\x02\u19DA\u19DB\x07\x04\x02\x02\u19DB\u0511\x03\x02\x02\x02\u19DC" +
        "\u19DD\x07\u020E\x02\x02\u19DD\u19DE\x05\u0516\u028C\x02\u19DE\u19E3\x05" +
        "\u060C\u0307\x02\u19DF\u19E2\x05\u0466\u0234\x02\u19E0\u19E2\x05\u0472" +
        "\u023A\x02\u19E1\u19DF\x03\x02\x02\x02\u19E1\u19E0\x03\x02\x02\x02\u19E2" +
        "\u19E5\x03\x02\x02\x02\u19E3\u19E1\x03\x02\x02\x02\u19E3\u19E4\x03\x02" +
        "\x02\x02\u19E4\u19E6\x03\x02\x02\x02\u19E5\u19E3\x03\x02\x02\x02\u19E6" +
        "\u19E7\x07\x04\x02\x02\u19E7\u0513\x03\x02\x02\x02\u19E8\u19E9\x07\u020F" +
        "\x02\x02\u19E9\u19EA\x05\u031A\u018E\x02\u19EA\u19EB\x05\u0566\u02B4\x02" +
        "\u19EB\u19F3\x05\u0636\u031C\x02\u19EC\u19F2\x05\x16\f\x02\u19ED\u19F2" +
        "\x05\x98M\x02\u19EE\u19F2\x05\u0198\xCD\x02\u19EF\u19F2\x05\u0464\u0233" +
        "\x02\u19F0\u19F2\x05\u04B0\u0259\x02\u19F1\u19EC\x03\x02\x02\x02\u19F1" +
        "\u19ED\x03\x02\x02\x02\u19F1\u19EE\x03\x02\x02\x02\u19F1\u19EF\x03\x02" +
        "\x02\x02\u19F1\u19F0\x03\x02\x02\x02\u19F2\u19F5\x03\x02\x02\x02\u19F3" +
        "\u19F1\x03\x02\x02\x02\u19F3\u19F4\x03\x02\x02\x02\u19F4\u19F6\x03\x02" +
        "\x02\x02\u19F5\u19F3\x03\x02\x02\x02\u19F6\u19F7\x07\x04\x02\x02\u19F7" +
        "\u0515\x03\x02\x02\x02\u19F8\u19F9\x07\u0210\x02\x02\u19F9\u19FB\x05\u031C" +
        "\u018F\x02\u19FA\u19FC\x05\u031E\u0190\x02\u19FB\u19FA\x03\x02\x02\x02" +
        "\u19FB\u19FC\x03\x02\x02\x02\u19FC\u19FD\x03\x02\x02\x02\u19FD\u19FE\x07" +
        "\x04\x02\x02\u19FE\u0517\x03\x02\x02\x02\u19FF\u1A00\x07\u0211\x02\x02" +
        "\u1A00\u1A01\x05\u0238\u011D\x02\u1A01\u1A02\x05\u03BA\u01DE\x02\u1A02" +
        "\u1A03\x05\u051A\u028E\x02\u1A03\u1A04\x05\u04C0\u0261\x02\u1A04\u1A05" +
        "\x07\x04\x02\x02\u1A05\u0519\x03\x02\x02\x02\u1A06\u1A08\x07\u0212\x02" +
        "\x02\u1A07\u1A09\x05\u0512\u028A\x02\u1A08\u1A07\x03\x02\x02\x02\u1A08" +
        "\u1A09\x03\x02\x02\x02\u1A09\u1A0A\x03\x02\x02\x02\u1A0A\u1A0B\x07\x04" +
        "\x02\x02\u1A0B\u051B\x03\x02\x02\x02\u1A0C\u1A11\x07\u0213\x02\x02\u1A0D" +
        "\u1A10\x05\u051E\u0290\x02\u1A0E\u1A10\x05\u0520\u0291\x02\u1A0F\u1A0D" +
        "\x03\x02\x02\x02\u1A0F\u1A0E\x03\x02\x02\x02\u1A10\u1A13\x03\x02\x02\x02" +
        "\u1A11\u1A0F\x03\x02\x02\x02\u1A11\u1A12\x03\x02\x02\x02\u1A12\u1A14\x03" +
        "\x02\x02\x02\u1A13\u1A11\x03\x02\x02\x02\u1A14\u1A15\x07\x04\x02\x02\u1A15" +
        "\u051D\x03\x02\x02\x02\u1A16\u1A17\x07\u0214\x02\x02\u1A17\u1A18\x05\u01E2" +
        "\xF2\x02\u1A18\u1A19\x07\x04\x02\x02\u1A19\u051F\x03\x02\x02\x02\u1A1A" +
        "\u1A1B\x07\u0215\x02\x02\u1A1B\u1A1C\x05\u0660\u0331\x02\u1A1C\u1A1D\x07" +
        "\x04\x02\x02\u1A1D\u0521\x03\x02\x02\x02\u1A1E\u1A1F\x07\u0216\x02\x02" +
        "\u1A1F\u1A20\x07\x04\x02\x02\u1A20\u0523\x03\x02\x02\x02\u1A21\u1A31\x07" +
        "\u0217\x02\x02\u1A22\u1A30\x05\u022A\u0116\x02\u1A23\u1A30\x05\u051C\u028F" +
        "\x02\u1A24\u1A30\x05\u0522\u0292\x02\u1A25\u1A30\x05\u0526\u0294\x02\u1A26" +
        "\u1A30\x05\u0528\u0295\x02\u1A27\u1A30\x05\u052A\u0296\x02\u1A28\u1A30" +
        "\x05\u052E\u0298\x02\u1A29\u1A30\x05\u0530\u0299\x02\u1A2A\u1A30\x05\u0532" +
        "\u029A\x02\u1A2B\u1A30\x05\u0534\u029B\x02\u1A2C\u1A30\x05\u0536\u029C" +
        "\x02\u1A2D\u1A30\x05\u0538\u029D\x02\u1A2E\u1A30\x05\u053C\u029F\x02\u1A2F" +
        "\u1A22\x03\x02\x02\x02\u1A2F\u1A23\x03\x02\x02\x02\u1A2F\u1A24\x03\x02" +
        "\x02\x02\u1A2F\u1A25\x03\x02\x02\x02\u1A2F\u1A26\x03\x02\x02\x02\u1A2F" +
        "\u1A27\x03\x02\x02\x02\u1A2F\u1A28\x03\x02\x02\x02\u1A2F\u1A29\x03\x02" +
        "\x02\x02\u1A2F\u1A2A\x03\x02\x02\x02\u1A2F\u1A2B\x03\x02\x02\x02\u1A2F" +
        "\u1A2C\x03\x02\x02\x02\u1A2F\u1A2D\x03\x02\x02\x02\u1A2F\u1A2E\x03\x02" +
        "\x02\x02\u1A30\u1A33\x03\x02\x02\x02\u1A31\u1A2F\x03\x02\x02\x02\u1A31" +
        "\u1A32\x03\x02\x02\x02\u1A32\u1A34\x03\x02\x02\x02\u1A33\u1A31\x03\x02" +
        "\x02\x02\u1A34\u1A35\x07\x04\x02\x02\u1A35\u0525\x03\x02\x02\x02\u1A36" +
        "\u1A38\x07\u0218\x02\x02\u1A37\u1A39\x05\u0522\u0292\x02\u1A38\u1A37\x03" +
        "\x02\x02\x02\u1A38\u1A39\x03\x02\x02\x02\u1A39\u1A3A\x03\x02\x02\x02\u1A3A" +
        "\u1A3B\x07\x04\x02\x02\u1A3B\u0527\x03\x02\x02\x02\u1A3C\u1A3E\x07\u0219" +
        "\x02\x02\u1A3D\u1A3F\x05\u022A\u0116\x02\u1A3E\u1A3D\x03\x02\x02\x02\u1A3E" +
        "\u1A3F\x03\x02\x02\x02\u1A3F\u1A40\x03\x02\x02\x02\u1A40\u1A41\x07\x04" +
        "\x02\x02\u1A41\u0529\x03\x02\x02\x02\u1A42\u1A47\x07\u021A\x02\x02\u1A43" +
        "\u1A46\x05\u0522\u0292\x02\u1A44\u1A46\x05\u052C\u0297\x02\u1A45\u1A43" +
        "\x03\x02\x02\x02\u1A45\u1A44\x03\x02\x02\x02\u1A46\u1A49\x03\x02\x02\x02" +
        "\u1A47\u1A45\x03\x02\x02\x02\u1A47\u1A48\x03\x02\x02\x02\u1A48\u1A4A\x03" +
        "\x02\x02\x02\u1A49\u1A47\x03\x02\x02\x02\u1A4A\u1A4B\x07\x04\x02\x02\u1A4B" +
        "\u052B\x03\x02\x02\x02\u1A4C\u1A4D\x07\u021B\x02\x02\u1A4D\u1A4E\x05\u0660" +
        "\u0331\x02\u1A4E\u1A4F\x07\x04\x02\x02\u1A4F\u052D\x03\x02\x02\x02\u1A50" +
        "\u1A52\x07\u021C\x02\x02\u1A51\u1A53\x05\u0522\u0292\x02\u1A52\u1A51\x03" +
        "\x02\x02\x02\u1A52\u1A53\x03\x02\x02\x02\u1A53\u1A54\x03\x02\x02\x02\u1A54" +
        "\u1A55\x07\x04\x02\x02\u1A55\u052F\x03\x02\x02\x02\u1A56\u1A58\x07\u021D" +
        "\x02\x02\u1A57\u1A59\x05\u0522\u0292\x02\u1A58\u1A57\x03\x02\x02\x02\u1A58" +
        "\u1A59\x03\x02\x02\x02\u1A59\u1A5A\x03\x02\x02\x02\u1A5A\u1A5B\x07\x04" +
        "\x02\x02\u1A5B\u0531\x03\x02\x02\x02\u1A5C\u1A5D\x07\u021E\x02\x02\u1A5D" +
        "\u1A5E\x07\x04\x02\x02\u1A5E\u0533\x03\x02\x02\x02\u1A5F\u1A60\x07\u021F" +
        "\x02\x02\u1A60\u1A61\x07\x04\x02\x02\u1A61\u0535\x03\x02\x02\x02\u1A62" +
        "\u1A63\x07\u0220\x02\x02\u1A63\u1A64\x07\x04\x02\x02\u1A64\u0537\x03\x02" +
        "\x02\x02\u1A65\u1A66\x07\u0221\x02\x02\u1A66\u1A67\x07\x04\x02\x02\u1A67" +
        "\u0539\x03\x02\x02\x02\u1A68\u1A6B\x07\u0222\x02\x02\u1A69\u1A6C\x05\u037E" +
        "\u01C0\x02\u1A6A\u1A6C\x05\u066A\u0336\x02\u1A6B\u1A69\x03\x02\x02\x02" +
        "\u1A6B\u1A6A\x03\x02\x02\x02\u1A6C\u1A6D\x03\x02\x02\x02\u1A6D\u1A6E\x07" +
        "\x04\x02\x02\u1A6E\u053B\x03\x02\x02\x02\u1A6F\u1A70\x07\u0223\x02\x02" +
        "\u1A70\u1A71\x07\x04\x02\x02\u1A71\u053D\x03\x02\x02\x02\u1A72\u1A73\x07" +
        "\u0224\x02\x02\u1A73\u1A74\x05\u04F8\u027D\x02\u1A74\u1A75\x05\u01C0\xE1" +
        "\x02\u1A75\u1A76\x05\u05EE\u02F8\x02\u1A76\u1A77\x07\x04\x02\x02\u1A77" +
        "\u053F\x03\x02\x02\x02\u1A78\u1A79\x07\u0225\x02\x02\u1A79\u1A7A\x05\u0238" +
        "\u011D\x02\u1A7A\u1A7B\x05\u0546\u02A4\x02\u1A7B\u1A84\x05\u060C\u0307" +
        "\x02\u1A7C\u1A83\x05\u023A\u011E\x02\u1A7D\u1A83\x05\u0376\u01BC\x02\u1A7E" +
        "\u1A83\x05\u0462\u0232\x02\u1A7F\u1A83\x05\u0464\u0233\x02\u1A80\u1A83" +
        "\x05\u0466\u0234\x02\u1A81\u1A83\x05\u0472\u023A\x02\u1A82\u1A7C\x03\x02" +
        "\x02\x02\u1A82\u1A7D\x03\x02\x02\x02\u1A82\u1A7E\x03\x02\x02\x02\u1A82" +
        "\u1A7F\x03\x02\x02\x02\u1A82\u1A80\x03\x02\x02\x02\u1A82\u1A81\x03\x02" +
        "\x02\x02\u1A83\u1A86\x03\x02\x02\x02\u1A84\u1A82\x03\x02\x02\x02\u1A84" +
        "\u1A85\x03\x02\x02\x02\u1A85\u1A87\x03\x02\x02\x02\u1A86\u1A84\x03\x02" +
        "\x02\x02\u1A87\u1A88\x07\x04\x02\x02\u1A88\u0541\x03\x02\x02\x02\u1A89" +
        "\u1A8A\x07\u0226\x02\x02\u1A8A\u1A8B\x05\u023C\u011F\x02\u1A8B\u1A8C\x07" +
        "\x04\x02\x02\u1A8C\u0543\x03\x02\x02\x02\u1A8D\u1A8E\x07\u0227\x02\x02" +
        "\u1A8E\u1A8F\x05\u031A\u018E\x02\u1A8F\u1A99\x05\u0566\u02B4\x02\u1A90" +
        "\u1A98\x05\x16\f\x02\u1A91\u1A98\x05\x98M\x02\u1A92\u1A98\x05\u0198\xCD" +
        "\x02\u1A93\u1A98\x05\u023A\u011E\x02\u1A94\u1A98\x05\u0464\u0233\x02\u1A95" +
        "\u1A98\x05\u0496\u024C\x02\u1A96\u1A98\x05\u04B0\u0259\x02\u1A97\u1A90" +
        "\x03\x02\x02\x02\u1A97\u1A91\x03\x02\x02\x02\u1A97\u1A92\x03\x02\x02\x02" +
        "\u1A97\u1A93\x03\x02\x02\x02\u1A97\u1A94\x03\x02\x02\x02\u1A97\u1A95\x03" +
        "\x02\x02\x02\u1A97\u1A96\x03\x02\x02\x02\u1A98\u1A9B\x03\x02\x02\x02\u1A99" +
        "\u1A97\x03\x02\x02\x02\u1A99\u1A9A\x03\x02\x02\x02\u1A9A\u1A9C\x03\x02" +
        "\x02\x02\u1A9B\u1A99\x03\x02\x02\x02\u1A9C\u1A9D\x07\x04\x02\x02\u1A9D" +
        "\u0545\x03\x02\x02\x02\u1A9E\u1A9F\x07\u0228\x02\x02\u1A9F\u1AA1\x05\u031C" +
        "\u018F\x02\u1AA0\u1AA2\x05\u031E\u0190\x02\u1AA1\u1AA0\x03\x02\x02\x02" +
        "\u1AA1\u1AA2\x03\x02\x02\x02\u1AA2\u1AA3\x03\x02\x02\x02\u1AA3\u1AA4\x07" +
        "\x04\x02\x02\u1AA4\u0547\x03\x02\x02\x02\u1AA5\u1AA6\x07\u0229\x02\x02" +
        "\u1AA6\u1AA7\x05\u02A4\u0153\x02\u1AA7\u1AA8\x05\u054C\u02A7\x02\u1AA8" +
        "\u1AB0\x05\u04AC\u0257\x02\u1AA9\u1AAF\x05\x96L\x02\u1AAA\u1AAF\x05\u04A8" +
        "\u0255\x02\u1AAB\u1AAF\x05\u04AE\u0258\x02\u1AAC\u1AAF\x05\u04DC\u026F" +
        "\x02\u1AAD\u1AAF\x05\u0638\u031D\x02\u1AAE\u1AA9\x03\x02\x02\x02\u1AAE" +
        "\u1AAA\x03\x02\x02\x02\u1AAE\u1AAB\x03\x02\x02\x02\u1AAE\u1AAC\x03\x02" +
        "\x02\x02\u1AAE\u1AAD\x03\x02\x02\x02\u1AAF\u1AB2\x03\x02\x02\x02\u1AB0" +
        "\u1AAE\x03\x02\x02\x02\u1AB0\u1AB1\x03\x02\x02\x02\u1AB1\u1AB3\x03\x02" +
        "\x02\x02\u1AB2\u1AB0\x03\x02\x02\x02\u1AB3\u1AB4\x07\x04\x02\x02\u1AB4" +
        "\u0549\x03\x02\x02\x02\u1AB5\u1AB9\x07\u022A\x02\x02\u1AB6\u1AB8\x05\u0548" +
        "\u02A5\x02\u1AB7\u1AB6\x03\x02\x02\x02\u1AB8\u1ABB\x03\x02\x02\x02\u1AB9" +
        "\u1AB7\x03\x02\x02\x02\u1AB9\u1ABA\x03\x02\x02\x02\u1ABA\u1ABC\x03\x02" +
        "\x02\x02\u1ABB\u1AB9\x03\x02\x02\x02\u1ABC\u1ABD\x07\x04\x02\x02\u1ABD" +
        "\u054B\x03\x02\x02\x02\u1ABE\u1AC6\x07\u022B\x02\x02\u1ABF\u1AC5\x05\xE8" +
        "u\x02\u1AC0\u1AC5\x05\u0142\xA2\x02\u1AC1\u1AC5\x05\u0298\u014D\x02\u1AC2" +
        "\u1AC5\x05\u0376\u01BC\x02\u1AC3\u1AC5\x05\u0462\u0232\x02\u1AC4\u1ABF" +
        "\x03\x02\x02\x02\u1AC4\u1AC0\x03\x02\x02\x02\u1AC4\u1AC1\x03\x02\x02\x02" +
        "\u1AC4\u1AC2\x03\x02\x02\x02\u1AC4\u1AC3\x03\x02\x02\x02\u1AC5\u1AC8\x03" +
        "\x02\x02\x02\u1AC6\u1AC4\x03\x02\x02\x02\u1AC6\u1AC7\x03\x02\x02\x02\u1AC7" +
        "\u1AC9\x03\x02\x02\x02\u1AC8\u1AC6\x03\x02\x02\x02\u1AC9\u1ACA\x07\x04" +
        "\x02\x02\u1ACA\u054D\x03\x02\x02\x02\u1ACB\u1ACC\x07\u022C\x02\x02\u1ACC" +
        "\u1ACD\x05\u02A4\u0153\x02\u1ACD\u1ACE\x05\u054C\u02A7\x02\u1ACE\u1AD5" +
        "\x05\u0500\u0281\x02\u1ACF\u1AD4\x05\x96L\x02\u1AD0\u1AD4\x05\u04DC\u026F" +
        "\x02\u1AD1\u1AD4\x05\u04FC\u027F\x02\u1AD2\u1AD4\x05\u0638\u031D\x02\u1AD3" +
        "\u1ACF\x03\x02\x02\x02\u1AD3\u1AD0\x03\x02\x02\x02\u1AD3\u1AD1\x03\x02" +
        "\x02\x02\u1AD3\u1AD2\x03\x02\x02\x02\u1AD4\u1AD7\x03\x02\x02\x02\u1AD5" +
        "\u1AD3\x03\x02\x02\x02\u1AD5\u1AD6\x03\x02\x02\x02\u1AD6\u1AD8\x03\x02" +
        "\x02\x02\u1AD7\u1AD5\x03\x02\x02\x02\u1AD8\u1AD9\x07\x04\x02\x02\u1AD9" +
        "\u054F\x03\x02\x02\x02\u1ADA\u1ADE\x07\u022D\x02\x02\u1ADB\u1ADD\x05\u054E" +
        "\u02A8\x02\u1ADC\u1ADB\x03\x02\x02\x02\u1ADD\u1AE0\x03\x02\x02\x02\u1ADE" +
        "\u1ADC\x03\x02\x02\x02\u1ADE\u1ADF\x03\x02\x02\x02\u1ADF\u1AE1\x03\x02" +
        "\x02\x02\u1AE0\u1ADE\x03\x02\x02\x02\u1AE1\u1AE2\x07\x04\x02\x02\u1AE2" +
        "\u0551\x03\x02\x02\x02\u1AE3\u1AE4\x07\u022E\x02\x02\u1AE4\u1AE5\x05\u064E" +
        "\u0328\x02\u1AE5\u1AFA\x05\u055A\u02AE\x02\u1AE6\u1AF9\x05\x16\f\x02\u1AE7" +
        "\u1AF9\x05b2\x02\u1AE8\u1AF9\x05d3\x02\u1AE9\u1AF9\x05\x8CG\x02\u1AEA" +
        "\u1AF9\x05\x96L\x02\u1AEB\u1AF9\x05\x98M\x02\u1AEC\u1AF9\x05\u011C\x8F" +
        "\x02\u1AED\u1AF9\x05\u0198\xCD\x02\u1AEE\u1AF9\x05\u023A\u011E\x02\u1AEF" +
        "\u1AF9\x05\u0262\u0132\x02\u1AF0\u1AF9\x05\u0266\u0134\x02\u1AF1\u1AF9" +
        "\x05\u0276\u013C\x02\u1AF2\u1AF9\x05\u03F0\u01F9\x02\u1AF3\u1AF9\x05\u0464" +
        "\u0233\x02\u1AF4\u1AF9\x05\u04B0\u0259\x02\u1AF5\u1AF9\x05\u055C\u02AF" +
        "\x02\u1AF6\u1AF9\x05\u0638\u031D\x02\u1AF7\u1AF9\x05\u0650\u0329\x02\u1AF8" +
        "\u1AE6\x03\x02\x02\x02\u1AF8\u1AE7\x03\x02\x02\x02\u1AF8\u1AE8\x03\x02" +
        "\x02\x02\u1AF8\u1AE9\x03\x02\x02\x02\u1AF8\u1AEA\x03\x02\x02\x02\u1AF8" +
        "\u1AEB\x03\x02\x02\x02\u1AF8\u1AEC\x03\x02\x02\x02\u1AF8\u1AED\x03\x02" +
        "\x02\x02\u1AF8\u1AEE\x03\x02\x02\x02\u1AF8\u1AEF\x03\x02\x02\x02\u1AF8" +
        "\u1AF0\x03\x02\x02\x02\u1AF8\u1AF1\x03\x02\x02\x02\u1AF8\u1AF2\x03\x02" +
        "\x02\x02\u1AF8\u1AF3\x03\x02\x02\x02\u1AF8\u1AF4\x03\x02\x02\x02\u1AF8" +
        "\u1AF5\x03\x02\x02\x02\u1AF8\u1AF6\x03\x02\x02\x02\u1AF8\u1AF7\x03\x02" +
        "\x02\x02\u1AF9\u1AFC\x03\x02\x02\x02\u1AFA\u1AF8\x03\x02\x02\x02\u1AFA" +
        "\u1AFB\x03\x02\x02\x02\u1AFB\u1AFD\x03\x02\x02\x02\u1AFC\u1AFA\x03\x02" +
        "\x02\x02\u1AFD\u1AFE\x07\x04\x02\x02\u1AFE\u0553\x03\x02\x02\x02\u1AFF" +
        "\u1B00\x07\u022F\x02\x02\u1B00\u1B01\x05\u0558\u02AD\x02\u1B01\u1B06\x05" +
        "\u060C\u0307\x02\u1B02\u1B05\x05\u0466\u0234\x02\u1B03\u1B05\x05\u0472" +
        "\u023A\x02\u1B04\u1B02\x03\x02\x02\x02\u1B04\u1B03\x03\x02\x02\x02\u1B05" +
        "\u1B08\x03\x02\x02\x02\u1B06\u1B04\x03\x02\x02\x02\u1B06\u1B07\x03\x02" +
        "\x02\x02\u1B07\u1B09\x03\x02\x02\x02\u1B08\u1B06\x03\x02\x02\x02\u1B09" +
        "\u1B0A\x07\x04\x02\x02\u1B0A\u0555\x03\x02\x02\x02\u1B0B\u1B0C\x07\u0230" +
        "\x02\x02\u1B0C\u1B0D\x05\u031A\u018E\x02\u1B0D\u1B0E\x05\u0566\u02B4\x02" +
        "\u1B0E\u1B16\x05\u0636\u031C\x02\u1B0F\u1B15\x05\x16\f\x02\u1B10\u1B15" +
        "\x05\x98M\x02\u1B11\u1B15\x05\u0198\xCD\x02\u1B12\u1B15\x05\u0464\u0233" +
        "\x02\u1B13\u1B15\x05\u04B0\u0259\x02\u1B14\u1B0F\x03\x02\x02\x02\u1B14" +
        "\u1B10\x03\x02\x02\x02\u1B14\u1B11\x03\x02\x02\x02\u1B14\u1B12\x03\x02" +
        "\x02\x02\u1B14\u1B13\x03\x02\x02\x02\u1B15\u1B18\x03\x02\x02\x02\u1B16" +
        "\u1B14\x03\x02\x02\x02\u1B16\u1B17\x03\x02\x02\x02\u1B17\u1B19\x03\x02" +
        "\x02\x02\u1B18\u1B16\x03\x02\x02\x02\u1B19\u1B1A\x07\x04\x02\x02\u1B1A" +
        "\u0557\x03\x02\x02\x02\u1B1B\u1B1C\x07\u0231\x02\x02\u1B1C\u1B1E\x05\u031C" +
        "\u018F\x02\u1B1D\u1B1F\x05\u031E\u0190\x02\u1B1E\u1B1D\x03\x02\x02\x02" +
        "\u1B1E\u1B1F\x03\x02\x02\x02\u1B1F\u1B20\x03\x02\x02\x02\u1B20\u1B21\x07" +
        "\x04\x02\x02\u1B21\u0559\x03\x02\x02\x02\u1B22\u1B23\x07\u0232\x02\x02" +
        "\u1B23\u1B30\x05\u0568\u02B5\x02\u1B24\u1B2F\x05&\x14\x02\u1B25\u1B2F" +
        "\x05\u0116\x8C\x02\u1B26\u1B2F\x05\u0142\xA2\x02\u1B27\u1B2F\x05\u0376" +
        "\u01BC\x02\u1B28\u1B2F\x05\u03AE\u01D8\x02\u1B29\u1B2F\x05\u03E0\u01F1" +
        "\x02\u1B2A\u1B2F\x05\u045C\u022F\x02\u1B2B\u1B2F\x05\u0462\u0232\x02\u1B2C" +
        "\u1B2F\x05\u0554\u02AB\x02\u1B2D\u1B2F\x05\u05BA\u02DE\x02\u1B2E\u1B24" +
        "\x03\x02\x02\x02\u1B2E\u1B25\x03\x02\x02\x02\u1B2E\u1B26\x03\x02\x02\x02" +
        "\u1B2E\u1B27\x03\x02\x02\x02\u1B2E\u1B28\x03\x02\x02\x02\u1B2E\u1B29\x03" +
        "\x02\x02\x02\u1B2E\u1B2A\x03\x02\x02\x02\u1B2E\u1B2B\x03\x02\x02\x02\u1B2E" +
        "\u1B2C\x03\x02\x02\x02\u1B2E\u1B2D\x03\x02\x02\x02\u1B2F\u1B32\x03\x02" +
        "\x02\x02\u1B30\u1B2E\x03\x02\x02\x02\u1B30\u1B31\x03\x02\x02\x02\u1B31" +
        "\u1B33\x03\x02\x02\x02\u1B32\u1B30\x03\x02\x02\x02\u1B33\u1B34\x07\x04" +
        "\x02\x02\u1B34\u055B\x03\x02\x02\x02\u1B35\u1B36\x07\u0233\x02\x02\u1B36" +
        "\u1B37\x05\u05E8\u02F5\x02\u1B37\u1B38\x05\u0452\u022A\x02\u1B38\u1B39" +
        "\x05\u0562\u02B2\x02\u1B39\u1B3F\x05\u060C\u0307\x02\u1B3A\u1B3E\x05\u041A" +
        "\u020E\x02\u1B3B\u1B3E\x05\u0466\u0234\x02\u1B3C\u1B3E\x05\u0472\u023A" +
        "\x02\u1B3D\u1B3A\x03\x02\x02\x02\u1B3D\u1B3B\x03\x02\x02\x02\u1B3D\u1B3C" +
        "\x03\x02\x02\x02\u1B3E\u1B41\x03\x02\x02\x02\u1B3F\u1B3D\x03\x02\x02\x02" +
        "\u1B3F\u1B40\x03\x02\x02\x02\u1B40\u1B42\x03\x02\x02\x02\u1B41\u1B3F\x03" +
        "\x02\x02\x02\u1B42\u1B43\x07\x04\x02\x02\u1B43\u055D\x03\x02\x02\x02\u1B44" +
        "\u1B45\x07\u0234\x02\x02\u1B45\u1B46\x05\u05EA\u02F6\x02\u1B46\u1B47\x05" +
        "\u04DA\u026E\x02\u1B47\u1B48\x07\x04\x02\x02\u1B48\u055F\x03\x02\x02\x02" +
        "\u1B49\u1B4A\x07\u0235\x02\x02\u1B4A\u1B4B\x05\u031A\u018E\x02\u1B4B\u1B4C" +
        "\x05\u0566\u02B4\x02\u1B4C\u1B4D\x05\u0216\u010C\x02\u1B4D\u1B59\x05\u042A" +
        "\u0216\x02\u1B4E\u1B58\x05\x16\f\x02\u1B4F\u1B58\x05\x98M\x02\u1B50\u1B58" +
        "\x05\u0198\xCD\x02\u1B51\u1B58\x05\u023A\u011E\x02\u1B52\u1B58\x05\u041A" +
        "\u020E\x02\u1B53\u1B58\x05\u0464\u0233\x02\u1B54\u1B58\x05\u04B0\u0259" +
        "\x02\u1B55\u1B58\x05\u0524\u0293\x02\u1B56\u1B58\x05\u053A\u029E\x02\u1B57" +
        "\u1B4E\x03\x02\x02\x02\u1B57\u1B4F\x03\x02\x02\x02\u1B57\u1B50\x03\x02" +
        "\x02\x02\u1B57\u1B51\x03\x02\x02\x02\u1B57\u1B52\x03\x02\x02\x02\u1B57" +
        "\u1B53\x03\x02\x02\x02\u1B57\u1B54\x03\x02\x02\x02\u1B57\u1B55\x03\x02" +
        "\x02\x02\u1B57\u1B56\x03\x02\x02\x02\u1B58\u1B5B\x03\x02\x02\x02\u1B59" +
        "\u1B57\x03\x02\x02\x02\u1B59\u1B5A\x03\x02\x02\x02\u1B5A\u1B5C\x03\x02" +
        "\x02\x02\u1B5B\u1B59\x03\x02\x02\x02\u1B5C\u1B5D\x07\x04\x02\x02\u1B5D" +
        "\u0561\x03\x02\x02\x02\u1B5E\u1B5F\x07\u0236\x02\x02\u1B5F\u1B61\x05\u031C" +
        "\u018F\x02\u1B60\u1B62\x05\u031E\u0190\x02\u1B61\u1B60\x03\x02\x02\x02" +
        "\u1B61\u1B62\x03\x02\x02\x02\u1B62\u1B63\x03\x02\x02\x02\u1B63\u1B64\x07" +
        "\x04\x02\x02\u1B64\u0563\x03\x02\x02\x02\u1B65\u1B66\x07\u0237\x02\x02" +
        "\u1B66\u1B67\x05\u0652\u032A\x02\u1B67\u1B68\x07\x04\x02\x02\u1B68\u0565" +
        "\x03\x02\x02\x02\u1B69\u1B6A\x07\u0238\x02\x02\u1B6A\u1B73\x05\u0568\u02B5" +
        "\x02\u1B6B\u1B72\x05&\x14\x02\u1B6C\u1B72\x05\u0142\xA2\x02\u1B6D\u1B72" +
        "\x05\u0376\u01BC\x02\u1B6E\u1B72\x05\u03AE\u01D8\x02\u1B6F\u1B72\x05\u0462" +
        "\u0232\x02\u1B70\u1B72\x05\u05BA\u02DE\x02\u1B71\u1B6B\x03\x02\x02\x02" +
        "\u1B71\u1B6C\x03\x02\x02\x02\u1B71\u1B6D\x03\x02\x02\x02\u1B71\u1B6E\x03" +
        "\x02\x02\x02\u1B71\u1B6F\x03\x02\x02\x02\u1B71\u1B70\x03\x02\x02\x02\u1B72" +
        "\u1B75\x03\x02\x02\x02\u1B73\u1B71\x03\x02\x02\x02\u1B73\u1B74\x03\x02" +
        "\x02\x02\u1B74\u1B76\x03\x02\x02\x02\u1B75\u1B73\x03\x02\x02\x02\u1B76" +
        "\u1B77\x07\x04\x02\x02\u1B77\u0567\x03\x02\x02\x02\u1B78\u1B81\x07\u0239" +
        "\x02\x02\u1B79\u1B80\x05\u04F8\u027D\x02\u1B7A\u1B80\x05\u0582\u02C2\x02" +
        "\u1B7B\u1B80\x05\u0584\u02C3\x02\u1B7C\u1B80\x05\u058A\u02C6\x02\u1B7D" +
        "\u1B80\x05\u058C\u02C7\x02\u1B7E\u1B80\x05\u058E\u02C8\x02\u1B7F\u1B79" +
        "\x03\x02\x02\x02\u1B7F\u1B7A\x03\x02\x02\x02\u1B7F\u1B7B\x03\x02\x02\x02" +
        "\u1B7F\u1B7C\x03\x02\x02\x02\u1B7F\u1B7D\x03\x02\x02\x02\u1B7F\u1B7E\x03" +
        "\x02\x02\x02\u1B80\u1B83\x03\x02\x02\x02\u1B81\u1B7F\x03\x02\x02\x02\u1B81" +
        "\u1B82\x03\x02\x02\x02\u1B82\u1B84\x03\x02\x02\x02\u1B83\u1B81\x03\x02" +
        "\x02\x02\u1B84\u1B85\x07\x04\x02\x02\u1B85\u0569\x03\x02\x02\x02\u1B86" +
        "\u1B87\x07\u023A\x02\x02\u1B87\u1B88\x05\u064E\u0328\x02\u1B88\u1B89\x05" +
        "\u056C\u02B7\x02\u1B89\u1B8A\x05\u032C\u0197\x02\u1B8A\u1B8F\x05\u04D6" +
        "\u026C\x02\u1B8B\u1B8E\x05\x96L\x02\u1B8C\u1B8E\x05\u0638\u031D\x02\u1B8D" +
        "\u1B8B\x03\x02\x02\x02\u1B8D\u1B8C\x03\x02\x02\x02\u1B8E\u1B91\x03\x02" +
        "\x02\x02\u1B8F\u1B8D\x03\x02\x02\x02\u1B8F\u1B90\x03\x02\x02\x02\u1B90" +
        "\u1B92\x03\x02\x02\x02\u1B91\u1B8F\x03\x02\x02\x02\u1B92\u1B93\x07\x04" +
        "\x02\x02\u1B93\u056B\x03\x02\x02\x02\u1B94\u1B95\x07\u023B\x02\x02\u1B95" +
        "\u1B9E\x05\u0568\u02B5\x02\u1B96\u1B9D\x05\u0116\x8C\x02\u1B97\u1B9D\x05" +
        "\u0142\xA2\x02\u1B98\u1B9D\x05\u0376\u01BC\x02\u1B99\u1B9D\x05\u045C\u022F" +
        "\x02\u1B9A\u1B9D\x05\u0462\u0232\x02\u1B9B\u1B9D\x05\u05BA\u02DE\x02\u1B9C" +
        "\u1B96\x03\x02\x02\x02\u1B9C\u1B97\x03\x02\x02\x02\u1B9C\u1B98\x03\x02" +
        "\x02\x02\u1B9C\u1B99\x03\x02\x02\x02\u1B9C\u1B9A\x03\x02\x02\x02\u1B9C" +
        "\u1B9B\x03\x02\x02\x02\u1B9D\u1BA0\x03\x02\x02\x02\u1B9E\u1B9C\x03\x02" +
        "\x02\x02\u1B9E\u1B9F\x03\x02\x02\x02\u1B9F\u1BA1\x03\x02\x02\x02\u1BA0" +
        "\u1B9E\x03\x02\x02\x02\u1BA1\u1BA2\x07\x04\x02\x02\u1BA2\u056D\x03\x02" +
        "\x02\x02\u1BA3\u1BA7\x07\u023C\x02\x02\u1BA4\u1BA8\x05\u0380\u01C1\x02" +
        "\u1BA5\u1BA8\x05\u066C\u0337\x02\u1BA6\u1BA8\x05\u062C\u0317\x02\u1BA7" +
        "\u1BA4\x03\x02\x02\x02\u1BA7\u1BA5\x03\x02\x02\x02\u1BA7\u1BA6\x03\x02" +
        "\x02\x02\u1BA8\u1BA9\x03\x02\x02\x02\u1BA9\u1BAA\x07\x04\x02\x02\u1BAA" +
        "\u056F\x03\x02\x02\x02\u1BAB\u1BAE\x07\u023D\x02\x02\u1BAC\u1BAF\x05\u0380" +
        "\u01C1\x02\u1BAD\u1BAF\x05\u066C\u0337\x02\u1BAE\u1BAC\x03\x02\x02\x02" +
        "\u1BAE\u1BAD\x03\x02\x02\x02\u1BAF\u1BB0\x03\x02\x02\x02\u1BB0\u1BB1\x07" +
        "\x04\x02\x02\u1BB1\u0571\x03\x02\x02\x02\u1BB2\u1BB3\x07\u023E\x02\x02" +
        "\u1BB3\u1BB4\x05\u0624\u0313\x02\u1BB4\u1BB5\x07\x04\x02\x02\u1BB5\u0573" +
        "\x03\x02\x02\x02\u1BB6\u1BB7\x05\u0280\u0141\x02\u1BB7\u0575\x03\x02\x02" +
        "\x02\u1BB8\u1BB9\x05\u067E\u0340\x02\u1BB9\u0577\x03\x02\x02\x02\u1BBA" +
        "\u1BBB\x05\u05C8\u02E5\x02\u1BBB\u0579\x03\x02\x02\x02\u1BBC\u1BBD\x07" +
        "\u023F\x02\x02\u1BBD\u1BBE\x05\u057C\u02BF\x02\u1BBE\u1BC4\x05\u057E\u02C0" +
        "\x02\u1BBF\u1BC3\x05\u012E\x98\x02\u1BC0\u1BC3\x05\u057A\u02BE\x02\u1BC1" +
        "\u1BC3\x05\u05D6\u02EC\x02\u1BC2\u1BBF\x03\x02\x02\x02\u1BC2\u1BC0\x03" +
        "\x02\x02\x02\u1BC2\u1BC1\x03\x02\x02\x02\u1BC3\u1BC6\x03\x02\x02\x02\u1BC4" +
        "\u1BC2\x03\x02\x02\x02\u1BC4\u1BC5\x03\x02\x02\x02\u1BC5\u1BC7\x03\x02" +
        "\x02\x02\u1BC6\u1BC4\x03\x02\x02\x02\u1BC7\u1BC8\x07\x04\x02\x02\u1BC8" +
        "\u057B\x03\x02\x02\x02\u1BC9\u1BCA\x05\u0370\u01B9\x02\u1BCA\u057D\x03" +
        "\x02\x02\x02\u1BCB\u1BCC\x07\u0240\x02\x02\u1BCC\u1BCD\x05\u0680\u0341" +
        "\x02\u1BCD\u1BCE\x07\x04\x02\x02\u1BCE\u057F\x03\x02\x02\x02\u1BCF\u1BD0" +
        "\x07\u0241\x02\x02\u1BD0\u1BD1\x05\u01E6\xF4\x02\u1BD1\u1BD3\x05\u0604" +
        "\u0303\x02\u1BD2\u1BD4\x05\u05BC\u02DF\x02\u1BD3\u1BD2\x03\x02\x02\x02" +
        "\u1BD3\u1BD4\x03\x02\x02\x02\u1BD4\u1BD5\x03\x02\x02\x02\u1BD5\u1BD6\x07" +
        "\x04\x02\x02\u1BD6\u0581\x03\x02\x02\x02\u1BD7\u1BD8\x07\u0242\x02\x02" +
        "\u1BD8\u1BD9\x05\u062A\u0316\x02\u1BD9\u1BDA\x07\x04\x02\x02\u1BDA\u0583" +
        "\x03\x02\x02\x02\u1BDB\u1BDC\x07\u0243\x02\x02\u1BDC\u1BDD\x05\u062A\u0316" +
        "\x02\u1BDD\u1BDE\x07\x04\x02\x02\u1BDE\u0585\x03\x02\x02\x02\u1BDF\u1BE0" +
        "\x07\u0244\x02\x02\u1BE0\u1BE1\x05\u062A\u0316\x02\u1BE1\u1BE2\x07\x04" +
        "\x02\x02\u1BE2\u0587\x03\x02\x02\x02\u1BE3\u1BE4\x07\u0245\x02\x02\u1BE4" +
        "\u1BE5\x05\u062A\u0316\x02\u1BE5\u1BE6\x07\x04\x02\x02\u1BE6\u0589\x03" +
        "\x02\x02\x02\u1BE7\u1BE8\x07\u0246\x02\x02\u1BE8\u1BE9\x05\u062A\u0316" +
        "\x02\u1BE9\u1BEA\x07\x04\x02\x02\u1BEA\u058B\x03\x02\x02\x02\u1BEB\u1BEC" +
        "\x07\u0247\x02\x02\u1BEC\u1BED\x05\u062A\u0316\x02\u1BED\u1BEE\x07\x04" +
        "\x02\x02\u1BEE\u058D\x03\x02\x02\x02\u1BEF\u1BF0\x07\u0248\x02\x02\u1BF0" +
        "\u1BF1\x05\u062A\u0316\x02\u1BF1\u1BF2\x07\x04\x02\x02\u1BF2\u058F\x03" +
        "\x02\x02\x02\u1BF3\u1BF4\x07\u0249\x02\x02\u1BF4\u1BF5\x05\xF0y\x02\u1BF5" +
        "\u1BF6\x07\x04\x02\x02\u1BF6\u0591\x03\x02\x02\x02\u1BF7\u1BF8\x07\u024A" +
        "\x02\x02\u1BF8\u1BF9\x05\u0624\u0313\x02\u1BF9\u1BFA\x07\x04\x02\x02\u1BFA" +
        "\u0593\x03\x02\x02\x02\u1BFB\u1BFC\x07\u024B\x02\x02\u1BFC\u1BFD\x05\u05AE" +
        "\u02D8\x02\u1BFD\u1C04\x05\u05A6\u02D4\x02\u1BFE\u1C03\x05\xCCg\x02\u1BFF" +
        "\u1C03\x05\u0376\u01BC\x02\u1C00\u1C03\x05\u0462\u0232\x02\u1C01\u1C03" +
        "\x05\u05B4\u02DB\x02\u1C02\u1BFE\x03\x02\x02\x02\u1C02\u1BFF\x03\x02\x02" +
        "\x02\u1C02\u1C00\x03\x02\x02\x02\u1C02\u1C01\x03\x02\x02\x02\u1C03\u1C06" +
        "\x03\x02\x02\x02\u1C04\u1C02\x03\x02\x02\x02\u1C04\u1C05\x03\x02\x02\x02" +
        "\u1C05\u1C07\x03\x02\x02\x02\u1C06\u1C04\x03\x02\x02\x02\u1C07\u1C08\x07" +
        "\x04\x02\x02\u1C08\u0595\x03\x02\x02\x02\u1C09\u1C0C\x07\u024C\x02\x02" +
        "\u1C0A\u1C0D\x05\u018A\xC6\x02\u1C0B\u1C0D\x05\u018E\xC8\x02\u1C0C\u1C0A" +
        "\x03\x02\x02\x02\u1C0C\u1C0B\x03\x02\x02\x02\u1C0D\u1C13\x03\x02\x02\x02" +
        "\u1C0E\u1C12\x05\x96L\x02\u1C0F\u1C12\x05\u0462\u0232\x02\u1C10\u1C12" +
        "\x05\u0472\u023A\x02\u1C11\u1C0E\x03\x02\x02\x02\u1C11\u1C0F\x03\x02\x02" +
        "\x02\u1C11\u1C10\x03\x02\x02\x02\u1C12\u1C15\x03\x02\x02\x02\u1C13\u1C11" +
        "\x03\x02\x02\x02\u1C13\u1C14\x03\x02\x02\x02\u1C14\u1C16\x03\x02\x02\x02" +
        "\u1C15\u1C13\x03\x02\x02\x02\u1C16\u1C17\x07\x04\x02\x02\u1C17\u0597\x03" +
        "\x02\x02\x02\u1C18\u1C19\x07\u024D\x02\x02\u1C19\u1C1A\x05\u059E\u02D0" +
        "\x02\u1C1A\u1C1F\x05\u05A8\u02D5\x02\u1C1B\u1C1E\x05\u0462\u0232\x02\u1C1C" +
        "\u1C1E\x05\u0376\u01BC\x02\u1C1D\u1C1B\x03\x02\x02\x02\u1C1D\u1C1C\x03" +
        "\x02\x02\x02\u1C1E\u1C21\x03\x02\x02\x02\u1C1F\u1C1D\x03\x02\x02\x02\u1C1F" +
        "\u1C20\x03\x02\x02\x02\u1C20\u1C22\x03\x02\x02\x02\u1C21\u1C1F\x03\x02" +
        "\x02\x02\u1C22\u1C23\x07\x04\x02\x02\u1C23\u0599\x03\x02\x02\x02\u1C24" +
        "\u1C25\x07\u024E\x02\x02\u1C25\u1C2B\x05\u018C\xC7\x02\u1C26\u1C2A\x05" +
        "\x96L\x02\u1C27\u1C2A\x05\u0462\u0232\x02\u1C28\u1C2A\x05\u0472\u023A" +
        "\x02\u1C29\u1C26\x03\x02\x02\x02\u1C29\u1C27\x03\x02\x02\x02\u1C29\u1C28" +
        "\x03\x02\x02\x02\u1C2A\u1C2D\x03\x02\x02\x02\u1C2B\u1C29\x03\x02\x02\x02" +
        "\u1C2B\u1C2C\x03\x02\x02\x02\u1C2C\u1C2E\x03\x02\x02\x02\u1C2D\u1C2B\x03" +
        "\x02\x02\x02\u1C2E\u1C2F\x07\x04\x02\x02\u1C2F\u059B\x03\x02\x02\x02\u1C30" +
        "\u1C31\x07\u024F\x02\x02\u1C31\u1C32\x05J&\x02\u1C32\u1C33\x07\x04\x02" +
        "\x02\u1C33\u059D\x03\x02\x02\x02\u1C34\u1C35\x05\u0370\u01B9\x02\u1C35" +
        "\u059F\x03\x02\x02\x02\u1C36\u1C37\x05\u037A\u01BE\x02\u1C37\u05A1\x03" +
        "\x02\x02\x02\u1C38\u1C39\x07\u0250\x02\x02\u1C39\u1C3A\x05\u05A0\u02D1" +
        "\x02\u1C3A\u1C3B\x07\x04\x02\x02\u1C3B\u05A3\x03\x02\x02\x02\u1C3C\u1C3D" +
        "\x07\u0251\x02\x02\u1C3D\u1C3E\x07\x04\x02\x02\u1C3E\u05A5\x03\x02\x02" +
        "\x02\u1C3F\u1C46\x07\u0252\x02\x02\u1C40\u1C45\x05\u020A\u0106\x02\u1C41" +
        "\u1C45\x05\u042E\u0218\x02\u1C42\u1C45\x05\u043E\u0220\x02\u1C43\u1C45" +
        "\x05\u0452\u022A\x02\u1C44\u1C40\x03\x02\x02\x02\u1C44\u1C41\x03\x02\x02" +
        "\x02\u1C44\u1C42\x03\x02\x02\x02\u1C44\u1C43\x03\x02\x02\x02\u1C45\u1C48" +
        "\x03\x02\x02\x02\u1C46\u1C44\x03\x02\x02\x02\u1C46\u1C47\x03\x02\x02\x02" +
        "\u1C47\u1C49\x03\x02\x02\x02\u1C48\u1C46\x03\x02\x02\x02\u1C49\u1C4A\x07" +
        "\x04\x02\x02\u1C4A\u05A7\x03\x02\x02\x02\u1C4B\u1C50\x07\u0253\x02\x02" +
        "\u1C4C\u1C4F\x05\u05A2\u02D2\x02\u1C4D\u1C4F\x05\u05B2\u02DA\x02\u1C4E" +
        "\u1C4C\x03\x02\x02\x02\u1C4E\u1C4D\x03\x02\x02\x02\u1C4F\u1C52\x03\x02" +
        "\x02\x02\u1C50\u1C4E\x03\x02\x02\x02\u1C50\u1C51\x03\x02\x02\x02\u1C51" +
        "\u1C53\x03\x02\x02\x02\u1C52\u1C50\x03\x02\x02\x02\u1C53\u1C54\x07\x04" +
        "\x02\x02\u1C54\u05A9\x03\x02\x02\x02\u1C55\u1C56\x07\u0254\x02\x02\u1C56" +
        "\u1C57\x05\u05B0\u02D9\x02\u1C57\u1C58\x05\u024E\u0128\x02\u1C58\u1C59" +
        "\x07\x04\x02\x02\u1C59\u05AB\x03\x02\x02\x02\u1C5A\u1C5B\x07\u0255\x02" +
        "\x02\u1C5B\u1C5C\x05J&\x02\u1C5C\u1C5D\x07\x04\x02\x02\u1C5D\u05AD\x03" +
        "\x02\x02\x02\u1C5E\u1C5F\x05\u0370\u01B9\x02\u1C5F\u05AF\x03\x02\x02\x02" +
        "\u1C60\u1C61\x05\u037A\u01BE\x02\u1C61\u05B1\x03\x02\x02\x02\u1C62\u1C63" +
        "\x07\u0256\x02\x02\u1C63\u1C64\x05\u05B0\u02D9\x02\u1C64\u1C65\x07\x04" +
        "\x02\x02\u1C65\u05B3\x03\x02\x02\x02\u1C66\u1C67\x07\u0257\x02\x02\u1C67" +
        "\u1C68\x05\u0280\u0141\x02\u1C68\u1C69\x07\x04\x02\x02\u1C69\u05B5\x03" +
        "\x02\x02\x02\u1C6A\u1C6B\x05\u0680\u0341\x02\u1C6B\u05B7\x03\x02\x02\x02" +
        "\u1C6C\u1C6D\x05\u0412\u020A\x02\u1C6D\u05B9";
    EDIF300Parser._serializedATNSegment13 = "\x03\x02\x02\x02\u1C6E\u1C75\x07\u0258\x02\x02\u1C6F\u1C74\x05\x96L\x02" +
        "\u1C70\u1C74\x05\xE0q\x02\u1C71\u1C74\x05\u0638\u031D\x02\u1C72\u1C74" +
        "\x05\u066E\u0338\x02\u1C73\u1C6F\x03\x02\x02\x02\u1C73\u1C70\x03\x02\x02" +
        "\x02\u1C73\u1C71\x03\x02\x02\x02\u1C73\u1C72\x03\x02\x02\x02\u1C74\u1C77" +
        "\x03\x02\x02\x02\u1C75\u1C73\x03\x02\x02\x02\u1C75\u1C76\x03\x02\x02\x02" +
        "\u1C76\u1C78\x03\x02\x02\x02\u1C77\u1C75\x03\x02\x02\x02\u1C78\u1C79\x07" +
        "\x04\x02\x02\u1C79\u05BB\x03\x02\x02\x02\u1C7A\u1C7B\x07\u0259\x02\x02" +
        "\u1C7B\u1C7C\x05\u0292\u014A\x02\u1C7C\u1C7D\x07\x04\x02\x02\u1C7D\u05BD" +
        "\x03\x02\x02\x02\u1C7E\u1C7F\x07\u025A\x02\x02\u1C7F\u1C80\x05\u05C8\u02E5" +
        "\x02\u1C80\u1C81\x07\x04\x02\x02\u1C81\u05BF\x03\x02\x02\x02\u1C82\u1C86" +
        "\x07\u025B\x02\x02\u1C83\u1C85\x05\u05C8\u02E5\x02\u1C84\u1C83\x03\x02" +
        "\x02\x02\u1C85\u1C88\x03\x02\x02\x02\u1C86\u1C84\x03\x02\x02\x02\u1C86" +
        "\u1C87\x03\x02\x02\x02\u1C87\u1C89\x03\x02\x02\x02\u1C88\u1C86\x03\x02" +
        "\x02\x02\u1C89\u1C8A\x07\x04\x02\x02\u1C8A\u05C1\x03\x02\x02\x02\u1C8B" +
        "\u1C8C\x07\u025C\x02\x02\u1C8C\u1C8D\x05\xD6l\x02\u1C8D\u1C8E\x05\u0680" +
        "\u0341\x02\u1C8E\u1C8F\x07\x04\x02\x02\u1C8F\u05C3\x03\x02\x02\x02\u1C90" +
        "\u1C91\x07\u025D\x02\x02\u1C91\u1C92\x05\xD8m\x02\u1C92\u1C93\x07\x04" +
        "\x02\x02\u1C93\u05C5\x03\x02\x02\x02\u1C94\u1C95\x07\u025E\x02\x02\u1C95" +
        "\u1C96\x05\u01AA\xD6\x02\u1C96\u1C97\x05\u0578\u02BD\x02\u1C97\u1C98\x07" +
        "\x04\x02\x02\u1C98\u05C7\x03\x02\x02\x02\u1C99\u1CA2\x05\u05D0\u02E9\x02" +
        "\u1C9A\u1CA2\x05\u0680\u0341\x02\u1C9B\u1CA2\x05\u05C4\u02E3\x02\u1C9C" +
        "\u1CA2\x05\u05C0\u02E1\x02\u1C9D\u1CA2\x05\u05DC\u02EF\x02\u1C9E\u1CA2" +
        "\x05\u0108\x85\x02\u1C9F\u1CA2\x05\u05D2\u02EA\x02\u1CA0\u1CA2\x05\u05D4" +
        "\u02EB\x02\u1CA1\u1C99\x03\x02\x02\x02\u1CA1\u1C9A\x03\x02\x02\x02\u1CA1" +
        "\u1C9B\x03\x02\x02\x02\u1CA1\u1C9C\x03\x02\x02\x02\u1CA1\u1C9D\x03\x02" +
        "\x02\x02\u1CA1\u1C9E\x03\x02\x02\x02\u1CA1\u1C9F\x03\x02\x02\x02\u1CA1" +
        "\u1CA0\x03\x02\x02\x02\u1CA2\u05C9\x03\x02\x02\x02\u1CA3\u1CA4\x07\u025F" +
        "\x02\x02\u1CA4\u1CA5\x05\u05C8\u02E5\x02\u1CA5\u1CA6\x07\x04\x02\x02\u1CA6" +
        "\u05CB\x03\x02\x02\x02\u1CA7\u1CA8\x07\u0260\x02\x02\u1CA8\u1CAD\x05\u03F4" +
        "\u01FB\x02\u1CA9\u1CAC\x05\u0376\u01BC\x02\u1CAA\u1CAC\x05\u05BE\u02E0" +
        "\x02\u1CAB\u1CA9\x03\x02\x02\x02\u1CAB\u1CAA\x03\x02\x02\x02\u1CAC\u1CAF" +
        "\x03\x02\x02\x02\u1CAD\u1CAB\x03\x02\x02\x02\u1CAD\u1CAE\x03\x02\x02\x02" +
        "\u1CAE\u1CB0\x03\x02\x02\x02\u1CAF\u1CAD\x03\x02\x02\x02\u1CB0\u1CB1\x07" +
        "\x04\x02\x02\u1CB1\u05CD\x03\x02\x02\x02\u1CB2\u1CB3\x07\u0261\x02\x02" +
        "\u1CB3\u1CB4\x05\u03F8\u01FD\x02\u1CB4\u1CB5\x05\u05C8\u02E5\x02\u1CB5" +
        "\u1CB6\x07\x04\x02\x02\u1CB6\u05CF\x03\x02\x02\x02\u1CB7\u1CB8\x07\u0262" +
        "\x02\x02\u1CB8\u1CB9\x05\u03F8\u01FD\x02\u1CB9\u1CBA\x07\x04\x02\x02\u1CBA" +
        "\u05D1\x03\x02\x02\x02\u1CBB\u1CBC\x07\u0263\x02\x02\u1CBC\u1CBD\x05\u05C8" +
        "\u02E5\x02\u1CBD\u1CBE\x05\u05DE\u02F0\x02\u1CBE\u1CBF\x07\x04\x02\x02" +
        "\u1CBF\u05D3\x03\x02\x02\x02\u1CC0\u1CC1\x07\u0264\x02\x02\u1CC1\u1CC2" +
        "\x05\u05C8\u02E5\x02\u1CC2\u1CC3\x05\u05E0\u02F1\x02\u1CC3\u1CC4\x07\x04" +
        "\x02\x02\u1CC4\u05D5\x03\x02\x02\x02\u1CC5\u1CC6\x05\u0680\u0341\x02\u1CC6" +
        "\u05D7\x03\x02\x02\x02\u1CC7\u1CC8\x07\u0265\x02\x02\u1CC8\u1CC9\x05\u033C" +
        "\u019F\x02\u1CC9\u1CCA\x07\x04\x02\x02\u1CCA\u05D9\x03\x02\x02\x02\u1CCB" +
        "\u1CCC\x05\u067E\u0340\x02\u1CCC\u05DB\x03\x02\x02\x02\u1CCD\u1CCE\x07" +
        "\u0266\x02\x02\u1CCE\u1CCF\x05\u05C8\u02E5\x02\u1CCF\u1CD0\x05\u05DE\u02F0" +
        "\x02\u1CD0\u1CD1\x05\u05E0\u02F1\x02\u1CD1\u1CD2\x07\x04\x02\x02\u1CD2" +
        "\u05DD\x03\x02\x02\x02\u1CD3\u1CD4\x05\u0280\u0141\x02\u1CD4\u05DF\x03" +
        "\x02\x02\x02\u1CD5\u1CD6\x05\u0280\u0141\x02\u1CD6\u05E1\x03\x02\x02\x02" +
        "\u1CD7\u1CD8\x05\u0280\u0141\x02\u1CD8\u05E3\x03\x02\x02\x02\u1CD9\u1CE0" +
        "\x07\u0267\x02\x02\u1CDA\u1CDF\x05\u0582\u02C2\x02\u1CDB\u1CDF\x05\u0584" +
        "\u02C3\x02\u1CDC\u1CDF\x05\u0588\u02C5\x02\u1CDD\u1CDF\x05\u058C\u02C7" +
        "\x02\u1CDE\u1CDA\x03\x02\x02\x02\u1CDE\u1CDB\x03\x02\x02\x02\u1CDE\u1CDC" +
        "\x03\x02\x02\x02\u1CDE\u1CDD\x03\x02\x02\x02\u1CDF\u1CE2\x03\x02\x02\x02" +
        "\u1CE0\u1CDE\x03\x02\x02\x02\u1CE0\u1CE1\x03\x02\x02\x02\u1CE1\u1CE3\x03" +
        "\x02\x02\x02\u1CE2\u1CE0\x03\x02\x02\x02\u1CE3\u1CE4\x07\x04\x02\x02\u1CE4" +
        "\u05E5\x03\x02\x02\x02\u1CE5\u1CE6\x07\u0268\x02\x02\u1CE6\u1CEB\x05\u064E" +
        "\u0328\x02\u1CE7\u1CEA\x05\x96L\x02\u1CE8\u1CEA\x05\u0638\u031D\x02\u1CE9" +
        "\u1CE7\x03\x02\x02\x02\u1CE9\u1CE8\x03\x02\x02\x02\u1CEA\u1CED\x03\x02" +
        "\x02\x02\u1CEB\u1CE9\x03\x02\x02\x02\u1CEB\u1CEC\x03\x02\x02\x02\u1CEC" +
        "\u1CEF\x03\x02\x02\x02\u1CED\u1CEB\x03\x02\x02\x02\u1CEE\u1CF0\x05\u0376" +
        "\u01BC\x02\u1CEF\u1CEE\x03\x02\x02\x02\u1CEF\u1CF0\x03\x02\x02\x02\u1CF0" +
        "\u1CF5\x03\x02\x02\x02\u1CF1\u1CF4\x05\x96L\x02\u1CF2\u1CF4\x05\u0638" +
        "\u031D\x02\u1CF3\u1CF1\x03\x02\x02\x02\u1CF3\u1CF2\x03\x02\x02\x02\u1CF4" +
        "\u1CF7\x03\x02\x02\x02\u1CF5\u1CF3\x03\x02\x02\x02\u1CF5\u1CF6\x03\x02" +
        "\x02\x02\u1CF6\u1CF8\x03\x02\x02\x02\u1CF7\u1CF5\x03\x02\x02\x02\u1CF8" +
        "\u1CF9\x07\x04\x02\x02\u1CF9\u05E7\x03\x02\x02\x02\u1CFA\u1CFB\x05\u0370" +
        "\u01B9\x02\u1CFB\u05E9\x03\x02\x02\x02\u1CFC\u1CFD\x05\u037A\u01BE\x02" +
        "\u1CFD\u05EB\x03\x02\x02\x02\u1CFE\u1CFF\x07\u0269\x02\x02\u1CFF\u1D06" +
        "\x05\u0408\u0205\x02\u1D00\u1D05\x05\x96L\x02\u1D01\u1D05\x05\u019A\xCE" +
        "\x02\u1D02\u1D05\x05\u032E\u0198\x02\u1D03\u1D05\x05\u0638\u031D\x02\u1D04" +
        "\u1D00\x03\x02\x02\x02\u1D04\u1D01\x03\x02\x02\x02\u1D04\u1D02\x03\x02" +
        "\x02\x02\u1D04\u1D03\x03\x02\x02\x02\u1D05\u1D08\x03\x02\x02\x02\u1D06" +
        "\u1D04\x03\x02\x02\x02\u1D06\u1D07\x03\x02\x02\x02\u1D07\u1D09\x03\x02" +
        "\x02\x02\u1D08\u1D06\x03\x02\x02\x02\u1D09\u1D0A\x07\x04\x02\x02\u1D0A" +
        "\u05ED\x03\x02\x02\x02\u1D0B\u1D0C\x07\u026A\x02\x02\u1D0C\u1D0D\x05\u0308" +
        "\u0185\x02\u1D0D\u1D0E\x07\x04\x02\x02\u1D0E\u05EF\x03\x02\x02\x02\u1D0F" +
        "\u1D10\x05\u039A\u01CE\x02\u1D10\u05F1\x03\x02\x02\x02\u1D11\u1D12\x07" +
        "\u026B\x02\x02\u1D12\u1D13\x05\u0224\u0113\x02\u1D13\u1D14\x05\u035E\u01B0" +
        "\x02\u1D14\u1D15\x05\u0576\u02BC\x02\u1D15\u1D16\x07\x04\x02\x02\u1D16" +
        "\u05F3\x03\x02\x02\x02\u1D17\u1D18\x05\u05FA\u02FE\x02\u1D18\u05F5\x03" +
        "\x02\x02\x02\u1D19\u1D1C\x07\u026C\x02\x02\u1D1A\u1D1D\x05\u0174\xBB\x02" +
        "\u1D1B\u1D1D\x05\u03A4\u01D3\x02\u1D1C\u1D1A\x03\x02\x02\x02\u1D1C\u1D1B" +
        "\x03\x02\x02\x02\u1D1D\u1D21\x03\x02\x02\x02\u1D1E\u1D22\x05\u0174\xBB" +
        "\x02\u1D1F\u1D22\x05\u03A4\u01D3\x02\u1D20\u1D22\x05\u015C\xAF\x02\u1D21" +
        "\u1D1E\x03\x02\x02\x02\u1D21\u1D1F\x03\x02\x02\x02\u1D21\u1D20\x03\x02" +
        "\x02\x02\u1D22\u1D23\x03\x02\x02\x02\u1D23\u1D24\x07\x04\x02\x02\u1D24" +
        "\u05F7\x03\x02\x02\x02\u1D25\u1D26\x07\u026D\x02\x02\u1D26\u1D27\x05\xF4" +
        "{\x02\u1D27\u1D28\x05\u05F2\u02FA\x02\u1D28\u1D29\x07\x04\x02\x02\u1D29" +
        "\u05F9\x03\x02\x02\x02\u1D2A\u1D2B\x05\u035A\u01AE\x02\u1D2B\u05FB\x03" +
        "\x02\x02\x02\u1D2C\u1D2D\x07\u026E\x02\x02\u1D2D\u1D2E\x05\u0600\u0301" +
        "\x02\u1D2E\u1D36\x05\u0114\x8B\x02\u1D2F\u1D35\x05\x96L\x02\u1D30\u1D35" +
        "\x05\u01C6\xE4\x02\u1D31\u1D35\x05\u03FC\u01FF\x02\u1D32\u1D35\x05\u0462" +
        "\u0232\x02\u1D33\u1D35\x05\u0638\u031D\x02\u1D34\u1D2F\x03\x02\x02\x02" +
        "\u1D34\u1D30\x03\x02\x02\x02\u1D34\u1D31\x03\x02\x02\x02\u1D34\u1D32\x03" +
        "\x02\x02\x02\u1D34\u1D33\x03\x02\x02\x02\u1D35\u1D38\x03\x02\x02\x02\u1D36" +
        "\u1D34\x03\x02\x02\x02\u1D36\u1D37\x03\x02\x02\x02\u1D37\u1D39\x03\x02" +
        "\x02\x02\u1D38\u1D36\x03\x02\x02\x02\u1D39\u1D3A\x07\x04\x02\x02\u1D3A" +
        "\u05FD\x03\x02\x02\x02\u1D3B\u1D3C\x07\u026F\x02\x02\u1D3C\u1D40\x05\u0602" +
        "\u0302\x02\u1D3D\u1D3F\x05\u0134\x9B\x02\u1D3E\u1D3D\x03\x02\x02\x02\u1D3F" +
        "\u1D42\x03\x02\x02\x02\u1D40\u1D3E\x03\x02\x02\x02\u1D40\u1D41\x03\x02" +
        "\x02\x02\u1D41\u1D43\x03\x02\x02\x02\u1D42\u1D40\x03\x02\x02\x02\u1D43" +
        "\u1D44\x07\x04\x02\x02\u1D44\u05FF\x03\x02\x02\x02\u1D45\u1D46\x05\u0370" +
        "\u01B9\x02\u1D46\u0601\x03\x02\x02\x02\u1D47\u1D48\x05\u037A\u01BE\x02" +
        "\u1D48\u0603\x03\x02\x02\x02\u1D49\u1D4A\x05\u067E\u0340\x02\u1D4A\u0605" +
        "\x03\x02\x02\x02\u1D4B\u1D4C\x07\u0270\x02\x02\u1D4C\u1D4D\x07\x04\x02" +
        "\x02\u1D4D\u0607\x03\x02\x02\x02\u1D4E\u1D4F\x07\u0271\x02\x02\u1D4F\u1D50" +
        "\x05\u067E\u0340\x02\u1D50\u1D51\x07\x04\x02\x02\u1D51\u0609\x03\x02\x02" +
        "\x02\u1D52\u1D56\x07\u0272\x02\x02\u1D53\u1D57\x05\x0E\b\x02\u1D54\u1D57" +
        "\x05\u048A\u0246\x02\u1D55\u1D57\x05\u0484\u0243\x02\u1D56\u1D53\x03\x02" +
        "\x02\x02\u1D56\u1D54\x03\x02\x02\x02\u1D56\u1D55\x03\x02\x02\x02\u1D57" +
        "\u1D58\x03\x02\x02\x02\u1D58\u1D59\x07\x04\x02\x02\u1D59\u060B\x03\x02" +
        "\x02\x02\u1D5A\u1D61\x07\u0273\x02\x02\u1D5B\u1D60\x05\u03AC\u01D7\x02" +
        "\u1D5C\u1D60\x05\u049A\u024E\x02\u1D5D\u1D60\x05\u04A2\u0252\x02\u1D5E" +
        "\u1D60\x05\u04A4\u0253\x02\u1D5F\u1D5B\x03\x02\x02\x02\u1D5F\u1D5C\x03" +
        "\x02\x02\x02\u1D5F\u1D5D\x03\x02\x02\x02\u1D5F\u1D5E\x03\x02\x02\x02\u1D60" +
        "\u1D63\x03\x02\x02\x02\u1D61\u1D5F\x03\x02\x02\x02\u1D61\u1D62\x03\x02" +
        "\x02\x02\u1D62\u1D64\x03\x02\x02\x02\u1D63\u1D61\x03\x02\x02\x02\u1D64" +
        "\u1D65\x07\x04\x02\x02\u1D65\u060D\x03\x02\x02\x02\u1D66\u1D67\x07\u0274" +
        "\x02\x02\u1D67\u1D68\x05\u045A\u022E\x02\u1D68\u1D69\x05\u0458\u022D\x02" +
        "\u1D69\u1D6A\x07\x04\x02\x02\u1D6A\u060F\x03\x02\x02\x02\u1D6B\u1D6C\x07" +
        "\u0275\x02\x02\u1D6C\u1D6D\x07\x04\x02\x02\u1D6D\u0611\x03\x02\x02\x02" +
        "\u1D6E\u1D6F\x07\u0276\x02\x02\u1D6F\u1D70\x07\x04\x02\x02\u1D70\u0613" +
        "\x03\x02\x02\x02\u1D71\u1D78\x05:\x1E\x02\u1D72\u1D78\x05\u0278\u013D" +
        "\x02\u1D73\u1D78\x05\u0358\u01AD\x02\u1D74\u1D78\x05\u038C\u01C7\x02\u1D75" +
        "\u1D78\x05\u040E\u0208\x02\u1D76\u1D78\x05\u05BE\u02E0\x02\u1D77\u1D71" +
        "\x03\x02\x02\x02\u1D77\u1D72\x03\x02\x02\x02\u1D77\u1D73\x03\x02\x02\x02" +
        "\u1D77\u1D74\x03\x02\x02\x02\u1D77\u1D75\x03\x02\x02\x02\u1D77\u1D76\x03" +
        "\x02\x02\x02\u1D78\u0615\x03\x02\x02\x02\u1D79\u1D7A\x07\u0277\x02\x02" +
        "\u1D7A\u1D7C\x05\u01B6\xDC\x02\u1D7B\u1D7D\x05\u0618\u030D\x02\u1D7C\u1D7B" +
        "\x03\x02\x02\x02\u1D7C\u1D7D\x03\x02\x02\x02\u1D7D\u1D7E\x03\x02\x02\x02" +
        "\u1D7E\u1D7F\x07\x04\x02\x02\u1D7F\u0617\x03\x02\x02\x02\u1D80\u1D81\x07" +
        "\u0278\x02\x02\u1D81\u1D82\x05\u0680\u0341\x02\u1D82\u1D83\x07\x04\x02" +
        "\x02\u1D83\u0619\x03\x02\x02\x02\u1D84\u1D85\x07\u0279\x02\x02\u1D85\u1D86" +
        "\x07\x04\x02\x02\u1D86\u061B\x03\x02\x02\x02\u1D87\u1D88\x07\u027A\x02" +
        "\x02\u1D88\u1D89\x07\x04\x02\x02\u1D89\u061D\x03\x02\x02\x02\u1D8A\u1D8B" +
        "\x07\u027B\x02\x02\u1D8B\u1D8C\x07\x04\x02\x02\u1D8C\u061F\x03\x02\x02" +
        "\x02\u1D8D\u1D8E\x07\u027C\x02\x02\u1D8E\u1D8F\x05\u0626\u0314\x02\u1D8F" +
        "\u1D90\x05\u0392\u01CA\x02\u1D90\u1DA8\x05\u0390\u01C9\x02\u1D91\u1DA7" +
        "\x05\x10\t\x02\u1D92\u1DA7\x05X-\x02\u1D93\u1DA7\x05l7\x02\u1D94\u1DA7" +
        "\x05\xE6t\x02\u1D95\u1DA7\x05\u010E\x88\x02\u1D96\u1DA7\x05\u0192\xCA" +
        "\x02\u1D97\u1DA7\x05\u0196\xCC\x02\u1D98\u1DA7\x05\u0210\u0109\x02\u1D99" +
        "\u1DA7\x05\u0212\u010A\x02\u1D9A\u1DA7\x05\u02C6\u0164\x02\u1D9B\u1DA7" +
        "\x05\u02FC\u017F\x02\u1D9C\u1DA7\x05\u0300\u0181\x02\u1D9D\u1DA7\x05\u0350" +
        "\u01A9\x02\u1D9E\u1DA7\x05\u0364\u01B3\x02\u1D9F\u1DA7\x05\u03A6\u01D4" +
        "\x02\u1DA0\u1DA7\x05\u047C\u023F\x02\u1DA1\u1DA7\x05\u0572\u02BA\x02\u1DA2" +
        "\u1DA7\x05\u0592\u02CA\x02\u1DA3\u1DA7\x05\u065C\u032F\x02\u1DA4\u1DA7" +
        "\x05\u0662\u0332\x02\u1DA5\u1DA7\x05\u0668\u0335\x02\u1DA6\u1D91\x03\x02" +
        "\x02\x02\u1DA6\u1D92\x03\x02\x02\x02\u1DA6\u1D93\x03\x02\x02\x02\u1DA6" +
        "\u1D94\x03\x02\x02\x02\u1DA6\u1D95\x03\x02\x02\x02\u1DA6\u1D96\x03\x02" +
        "\x02\x02\u1DA6\u1D97\x03\x02\x02\x02\u1DA6\u1D98\x03\x02\x02\x02\u1DA6" +
        "\u1D99\x03\x02\x02\x02\u1DA6\u1D9A\x03\x02\x02\x02\u1DA6\u1D9B\x03\x02" +
        "\x02\x02\u1DA6\u1D9C\x03\x02\x02\x02\u1DA6\u1D9D\x03\x02\x02\x02\u1DA6" +
        "\u1D9E\x03\x02\x02\x02\u1DA6\u1D9F\x03\x02\x02\x02\u1DA6\u1DA0\x03\x02" +
        "\x02\x02\u1DA6\u1DA1\x03\x02\x02\x02\u1DA6\u1DA2\x03\x02\x02\x02\u1DA6" +
        "\u1DA3\x03\x02\x02\x02\u1DA6\u1DA4\x03\x02\x02\x02\u1DA6\u1DA5\x03\x02" +
        "\x02\x02\u1DA7\u1DAA\x03\x02\x02\x02\u1DA8\u1DA6\x03\x02\x02\x02\u1DA8" +
        "\u1DA9\x03\x02\x02\x02\u1DA9\u1DAB\x03\x02\x02\x02\u1DAA\u1DA8\x03\x02" +
        "\x02\x02\u1DAB\u1DAC\x07\x04\x02\x02\u1DAC\u0621\x03\x02\x02\x02\u1DAD" +
        "\u1DB1\x07\u027D\x02\x02\u1DAE\u1DB0\x05\u0620\u0311\x02\u1DAF\u1DAE\x03" +
        "\x02\x02\x02\u1DB0\u1DB3\x03\x02\x02\x02\u1DB1\u1DAF\x03\x02\x02\x02\u1DB1" +
        "\u1DB2\x03\x02\x02\x02\u1DB2\u1DB4\x03\x02\x02\x02\u1DB3\u1DB1\x03\x02" +
        "\x02\x02\u1DB4\u1DB5\x07\x04\x02\x02\u1DB5\u0623\x03\x02\x02\x02\u1DB6" +
        "\u1DB7\x05\u04A0\u0251\x02\u1DB7\u0625\x03\x02\x02\x02\u1DB8\u1DB9\x05" +
        "\u0370\u01B9\x02\u1DB9\u0627\x03\x02\x02\x02\u1DBA\u1DBB\x05\u037A\u01BE" +
        "\x02\u1DBB\u0629\x03\x02\x02\x02\u1DBC\u1DBD\x07\u027E\x02\x02\u1DBD\u1DBE" +
        "\x05\u0628\u0315\x02\u1DBE\u1DBF\x07\x04\x02\x02\u1DBF\u062B\x03\x02\x02" +
        "\x02\u1DC0\u1DC1\x07\u027F\x02\x02\u1DC1\u1DC2\x07\x04\x02\x02\u1DC2\u062D" +
        "\x03\x02\x02\x02\u1DC3\u1DC4\x07\u0280\x02\x02\u1DC4\u1DC5\x07\x04\x02" +
        "\x02\u1DC5\u062F\x03\x02\x02\x02\u1DC6\u1DC7\x07\u0281\x02\x02\u1DC7\u1DC8" +
        "\x07\x04\x02\x02\u1DC8\u0631\x03\x02\x02\x02\u1DC9\u1DCA\x07\u0282\x02" +
        "\x02\u1DCA\u1DCB\x07\x04\x02\x02\u1DCB\u0633\x03\x02\x02\x02\u1DCC\u1DCD" +
        "\x07\u0283\x02\x02\u1DCD\u1DCE\x07\x04\x02\x02\u1DCE\u0635\x03\x02\x02" +
        "\x02\u1DCF\u1DD3\x07\u0284\x02\x02\u1DD0\u1DD2\x05\u0480\u0241\x02\u1DD1" +
        "\u1DD0\x03\x02\x02\x02\u1DD2\u1DD5\x03\x02\x02\x02\u1DD3\u1DD1\x03\x02" +
        "\x02\x02\u1DD3\u1DD4\x03\x02\x02\x02\u1DD4\u1DD6\x03\x02\x02\x02\u1DD5" +
        "\u1DD3\x03\x02\x02\x02\u1DD6\u1DD7\x07\x04\x02\x02\u1DD7\u0637\x03\x02" +
        "\x02\x02\u1DD8\u1DD9\x07\u0285\x02\x02\u1DD9\u1DE0\x05\u063A\u031E\x02" +
        "\u1DDA\u1DDF\x07\u029D\x02\x02\u1DDB\u1DDF\x05\u067E\u0340\x02\u1DDC\u1DDF" +
        "\x05\u0680\u0341\x02\u1DDD\u1DDF\x05\u0638\u031D\x02\u1DDE\u1DDA\x03\x02" +
        "\x02\x02\u1DDE\u1DDB\x03\x02\x02\x02\u1DDE\u1DDC\x03\x02\x02\x02\u1DDE" +
        "\u1DDD\x03\x02\x02\x02\u1DDF\u1DE2\x03\x02\x02\x02\u1DE0\u1DDE\x03\x02" +
        "\x02\x02\u1DE0\u1DE1\x03\x02\x02\x02\u1DE1\u1DE3\x03\x02\x02\x02\u1DE2" +
        "\u1DE0\x03\x02\x02\x02\u1DE3\u1DE4\x07\x04\x02\x02\u1DE4\u0639\x03\x02" +
        "\x02\x02\u1DE5\u1DE6\x07\u029D\x02\x02\u1DE6\u063B\x03\x02\x02\x02\u1DE7" +
        "\u1DE8\x07\u0286\x02\x02\u1DE8\u1DE9\x05\u05D6\u02EC\x02\u1DE9\u1DEA\x07" +
        "\x04\x02\x02\u1DEA\u063D\x03\x02\x02\x02\u1DEB\u1DF1\x07\u0287\x02\x02" +
        "\u1DEC\u1DF2\x05T+\x02\u1DED\u1DF2\x05(\x15\x02\u1DEE\u1DF2\x05\u0352" +
        "\u01AA\x02\u1DEF\u1DF2\x05\\/\x02\u1DF0\u1DF2\x05\u0606\u0304\x02\u1DF1" +
        "\u1DEC\x03\x02\x02\x02\u1DF1\u1DED\x03\x02\x02\x02\u1DF1\u1DEE\x03\x02" +
        "\x02\x02\u1DF1\u1DEF\x03\x02\x02\x02\u1DF1\u1DF0\x03\x02\x02\x02\u1DF2" +
        "\u1DF3\x03\x02\x02\x02\u1DF3\u1DF4\x07\x04\x02\x02\u1DF4\u063F\x03\x02" +
        "\x02\x02\u1DF5\u1DF6\x07\u0288\x02\x02\u1DF6\u1DF7\x05\u0646\u0324\x02" +
        "\u1DF7\u1DFE\x05\u0642\u0322\x02\u1DF8\u1DFD\x05\x96L\x02\u1DF9\u1DFD" +
        "\x05\u0638\u031D\x02\u1DFA\u1DFD\x05\u064A\u0326\x02\u1DFB\u1DFD\x05\u0658" +
        "\u032D\x02\u1DFC\u1DF8\x03\x02\x02\x02\u1DFC\u1DF9\x03\x02\x02\x02\u1DFC" +
        "\u1DFA\x03\x02\x02\x02\u1DFC\u1DFB\x03\x02\x02\x02\u1DFD\u1E00\x03\x02" +
        "\x02\x02\u1DFE\u1DFC\x03\x02\x02\x02\u1DFE\u1DFF\x03\x02\x02\x02\u1DFF" +
        "\u1E01\x03\x02\x02\x02\u1E00\u1DFE\x03\x02\x02\x02\u1E01\u1E02\x07\x04" +
        "\x02\x02\u1E02\u0641\x03\x02\x02\x02\u1E03\u1E0A\x07\u0289\x02\x02\u1E04" +
        "\u1E09\x05\u0142\xA2\x02\u1E05\u1E09\x05\u0376\u01BC\x02\u1E06\u1E09\x05" +
        "\u0462\u0232\x02\u1E07\u1E09\x05\u047E\u0240\x02\u1E08\u1E04\x03\x02\x02" +
        "\x02\u1E08\u1E05\x03\x02\x02\x02\u1E08\u1E06\x03\x02\x02\x02\u1E08\u1E07" +
        "\x03\x02\x02\x02\u1E09\u1E0C\x03\x02\x02\x02\u1E0A\u1E08\x03\x02\x02\x02" +
        "\u1E0A\u1E0B\x03\x02\x02\x02\u1E0B\u1E0D\x03\x02\x02\x02\u1E0C\u1E0A\x03" +
        "\x02\x02\x02\u1E0D\u1E0E\x07\x04\x02\x02\u1E0E\u0643\x03\x02\x02\x02\u1E0F" +
        "\u1E10\x07\u028A\x02\x02\u1E10\u1E11\x05J&\x02\u1E11\u1E12\x07\x04\x02" +
        "\x02\u1E12\u0645\x03\x02\x02\x02\u1E13\u1E14\x05\u0370\u01B9\x02\u1E14" +
        "\u0647\x03\x02\x02\x02\u1E15\u1E16\x05\u037A\u01BE\x02\u1E16\u0649\x03" +
        "\x02\x02\x02\u1E17\u1E18\x07\u028B\x02\x02\u1E18\u1E19\x05\u0648\u0325" +
        "\x02\u1E19\u1E1A\x07\x04\x02\x02\u1E1A\u064B\x03\x02\x02\x02\u1E1B\u1E1C" +
        "\x07\u028C\x02\x02\u1E1C\u1E1D\x05J&\x02\u1E1D\u1E1E\x07\x04\x02\x02\u1E1E" +
        "\u064D\x03\x02\x02\x02\u1E1F\u1E20\x05\u0370\u01B9\x02\u1E20\u064F\x03" +
        "\x02\x02\x02\u1E21\u1E26\x07\u028D\x02\x02\u1E22\u1E25\x05\u0134\x9B\x02" +
        "\u1E23\u1E25\x05\u013A\x9E\x02\u1E24\u1E22\x03\x02\x02\x02\u1E24\u1E23" +
        "\x03\x02\x02\x02\u1E25\u1E28\x03\x02\x02\x02\u1E26\u1E24\x03\x02\x02\x02" +
        "\u1E26\u1E27\x03\x02\x02\x02\u1E27\u1E29\x03\x02\x02\x02\u1E28\u1E26\x03" +
        "\x02\x02\x02\u1E29\u1E2A\x07\x04\x02\x02\u1E2A\u0651\x03\x02\x02\x02\u1E2B" +
        "\u1E2C\x05\u037A\u01BE\x02\u1E2C\u0653\x03\x02\x02\x02\u1E2D\u1E2E\x07" +
        "\u028E\x02\x02\u1E2E\u1E33\x05\u0470\u0239\x02\u1E2F\u1E32\x05\u0134\x9B" +
        "\x02\u1E30\u1E32\x05\u046E\u0238\x02\u1E31\u1E2F\x03\x02\x02\x02\u1E31" +
        "\u1E30\x03\x02\x02\x02\u1E32\u1E35\x03\x02\x02\x02\u1E33\u1E31\x03\x02" +
        "\x02\x02\u1E33\u1E34\x03\x02\x02\x02\u1E34\u1E36\x03\x02\x02\x02\u1E35" +
        "\u1E33\x03\x02\x02\x02\u1E36\u1E37\x07\x04\x02\x02\u1E37\u0655\x03\x02" +
        "\x02\x02\u1E38\u1E39\x07\u028F\x02\x02\u1E39\u1E3C\x05\u0470\u0239\x02" +
        "\u1E3A\u1E3D\x05\u0614\u030B\x02\u1E3B\u1E3D\x05\u0632\u031A\x02\u1E3C" +
        "\u1E3A\x03\x02\x02\x02\u1E3C\u1E3B\x03\x02\x02\x02\u1E3D\u1E43\x03\x02" +
        "\x02\x02\u1E3E\u1E42\x05\x96L\x02\u1E3F\u1E42\x05\u01AC\xD7\x02\u1E40" +
        "\u1E42\x05\u0472\u023A\x02\u1E41\u1E3E\x03\x02\x02\x02\u1E41\u1E3F\x03" +
        "\x02\x02\x02\u1E41\u1E40\x03\x02\x02\x02\u1E42\u1E45\x03\x02\x02\x02\u1E43" +
        "\u1E41\x03\x02\x02\x02\u1E43\u1E44\x03\x02\x02\x02\u1E44\u1E46\x03\x02" +
        "\x02\x02\u1E45\u1E43\x03\x02\x02\x02\u1E46\u1E47\x07\x04\x02\x02\u1E47" +
        "\u0657\x03\x02\x02\x02\u1E48\u1E49\x07\u0290\x02\x02\u1E49\u1E4B\x05\u0652" +
        "\u032A\x02\u1E4A\u1E4C\x05\x92J\x02\u1E4B\u1E4A\x03\x02\x02\x02\u1E4B" +
        "\u1E4C\x03\x02\x02\x02\u1E4C\u1E4D\x03\x02\x02\x02\u1E4D\u1E4E\x07\x04" +
        "\x02\x02\u1E4E\u0659\x03\x02\x02\x02\u1E4F\u1E50\x07\u0291\x02\x02\u1E50" +
        "\u1E51\x05L\'\x02\u1E51\u1E52\x07\x04\x02\x02\u1E52\u065B\x03\x02\x02" +
        "\x02\u1E53\u1E54\x07\u0292\x02\x02\u1E54\u1E55\x05\u0624\u0313\x02\u1E55" +
        "\u1E56\x07\x04\x02\x02\u1E56\u065D\x03\x02\x02\x02\u1E57\u1E58\x07\u0293" +
        "\x02\x02\u1E58\u1E59\x05\u0660\u0331\x02\u1E59\u1E5A\x07\x04\x02\x02\u1E5A" +
        "\u065F\x03\x02\x02\x02\u1E5B\u1E5C\x05\u035A\u01AE\x02\u1E5C\u0661\x03" +
        "\x02\x02\x02\u1E5D\u1E5E\x07\u0294\x02\x02\u1E5E\u1E5F\x05\u0624\u0313" +
        "\x02\u1E5F\u1E60\x07\x04\x02\x02\u1E60\u0663\x03\x02\x02\x02\u1E61\u1E62" +
        "\x07\u0295\x02\x02\u1E62\u1E63\x05\u033C\u019F\x02\u1E63\u1E64\x07\x04" +
        "\x02\x02\u1E64\u0665\x03\x02\x02\x02\u1E65\u1E6A\x07\u0296\x02\x02\u1E66" +
        "\u1E69\x05\u02B2\u015A\x02\u1E67\u1E69\x05\u0452\u022A\x02\u1E68\u1E66" +
        "\x03\x02\x02\x02\u1E68\u1E67\x03\x02\x02\x02\u1E69\u1E6C\x03\x02\x02\x02" +
        "\u1E6A\u1E68\x03\x02\x02\x02\u1E6A\u1E6B\x03\x02\x02\x02\u1E6B\u1E6D\x03" +
        "\x02\x02\x02\u1E6C\u1E6A\x03\x02\x02\x02\u1E6D\u1E6E\x07\x04\x02\x02\u1E6E" +
        "\u0667\x03\x02\x02\x02\u1E6F\u1E70\x07\u0297\x02\x02\u1E70\u1E71\x05\u0624" +
        "\u0313\x02\u1E71\u1E72\x07\x04\x02\x02\u1E72\u0669\x03\x02\x02\x02\u1E73" +
        "\u1E74\x07\u0298\x02\x02\u1E74\u1E75\x07\x04\x02\x02\u1E75\u066B\x03\x02" +
        "\x02\x02\u1E76\u1E77\x07\u0299\x02\x02\u1E77\u1E78\x07\x04\x02\x02\u1E78" +
        "\u066D\x03\x02\x02\x02\u1E79\u1E7A\x07\u029A\x02\x02\u1E7A\u1E82\x05\u05F8" +
        "\u02FD\x02\u1E7B\u1E81\x05$\x13\x02\u1E7C\u1E81\x05\x96L\x02\u1E7D\u1E81" +
        "\x05\xF2z\x02\u1E7E\u1E81\x05\u0460\u0231\x02\u1E7F\u1E81\x05\u0638\u031D" +
        "\x02\u1E80\u1E7B\x03\x02\x02\x02\u1E80\u1E7C\x03\x02\x02\x02\u1E80\u1E7D" +
        "\x03\x02\x02\x02\u1E80\u1E7E\x03\x02\x02\x02\u1E80\u1E7F\x03\x02\x02\x02" +
        "\u1E81\u1E84\x03\x02\x02\x02\u1E82\u1E80\x03\x02\x02\x02\u1E82\u1E83\x03" +
        "\x02\x02\x02\u1E83\u1E85\x03\x02\x02\x02\u1E84\u1E82\x03\x02\x02\x02\u1E85" +
        "\u1E86\x07\x04\x02\x02\u1E86\u066F\x03\x02\x02\x02\u1E87\u1E88\x05\u0292" +
        "\u014A\x02\u1E88\u0671\x03\x02\x02\x02\u1E89\u1E8A\x05\u039C\u01CF\x02" +
        "\u1E8A\u0673\x03\x02\x02\x02\u1E8B\u1E8F\x07\u029B\x02\x02\u1E8C\u1E8E" +
        "\x05@!\x02\u1E8D\u1E8C\x03\x02\x02\x02\u1E8E\u1E91\x03\x02\x02\x02\u1E8F" +
        "\u1E8D\x03\x02\x02\x02\u1E8F\u1E90\x03\x02\x02\x02\u1E90\u1E92\x03\x02" +
        "\x02\x02\u1E91\u1E8F\x03\x02\x02\x02\u1E92\u1E93\x07\x04\x02\x02\u1E93" +
        "\u0675\x03\x02\x02\x02\u1E94\u1E95\x05\u0292\u014A\x02\u1E95\u0677\x03" +
        "\x02\x02\x02\u1E96\u1E9A\x07\u029C\x02\x02\u1E97\u1E99\x05\u067A\u033E" +
        "\x02\u1E98\u1E97\x03\x02\x02\x02\u1E99\u1E9C\x03\x02\x02\x02\u1E9A\u1E98" +
        "\x03\x02\x02\x02\u1E9A\u1E9B\x03\x02\x02\x02\u1E9B\u1E9D\x03\x02\x02\x02" +
        "\u1E9C\u1E9A\x03\x02\x02\x02\u1E9D\u1E9E\x07\x04\x02\x02\u1E9E\u0679\x03" +
        "\x02\x02\x02\u1E9F\u1EA0\x05\u067E\u0340\x02\u1EA0\u067B\x03\x02\x02\x02" +
        "\u1EA1\u1EA2\x05\u039C\u01CF\x02\u1EA2\u067D\x03\x02\x02\x02\u1EA3\u1EA4" +
        "\x07\u029F\x02\x02\u1EA4\u067F\x03\x02\x02\x02\u1EA5\u1EA6\x07\u029E\x02" +
        "\x02\u1EA6\u0681\x03\x02\x02\x02\u0288\u0690\u069C\u06A9\u06B5\u06C2\u06D3" +
        "\u06E8\u06F1\u06F3\u06FD\u0706\u0708\u0710\u0731\u073B\u073D\u074D\u075C" +
        "\u0776\u0778\u0782\u0784\u078C\u078E\u0797\u0799\u07A3\u07A6\u07AE\u07B3" +
        "\u07B5\u07BD\u07CD\u07D9\u07F2\u07F4\u07FE\u0807\u0809\u081F\u0821\u0832" +
        "\u0834\u083E\u0841\u0849\u084E\u0850\u0858\u0866\u0872\u0874\u0881\u088A" +
        "\u088C\u0895\u0897\u08A6\u08A8\u08B1\u08BE\u08CA\u08D7\u08D9\u08E3\u08F1" +
        "\u08F3\u0902\u0904\u0913\u0915\u091D\u0922\u093C\u093E\u094B\u094D\u0959" +
        "\u095B\u0968\u0970\u097B\u097D\u098A\u098C\u0999\u099B\u09A8\u09B1\u09BA" +
        "\u09C2\u09D2\u09E0\u09E2\u09EA\u09FE\u0A0A\u0A16\u0A22\u0A29\u0A42\u0A47" +
        "\u0A52\u0A54\u0A61\u0A6B\u0A6D\u0A78\u0A83\u0A85\u0A99\u0A9B\u0AA6\u0AA8" +
        "\u0AB3\u0ABA\u0ABC\u0ACE\u0AD0\u0ADE\u0AEE\u0AF8\u0AFA\u0B08\u0B0A\u0B13" +
        "\u0B24\u0B30\u0B3C\u0B52\u0B54\u0B68\u0B6A\u0B83\u0B8F\u0B99\u0B9D\u0B9F" +
        "\u0BD5\u0BD7\u0BEA\u0BF6\u0BF8\u0C07\u0C09\u0C1E\u0C20\u0C3D\u0C3F\u0C4A" +
        "\u0C6C\u0C7A\u0C89\u0C8B\u0C99\u0C9B\u0CA5\u0CA7\u0CB1\u0CB3\u0CCD\u0CCF" +
        "\u0D00\u0D02\u0D0F\u0D11\u0D19\u0D1F\u0D2A\u0D2C\u0D38\u0D3A\u0D42\u0D44" +
        "\u0D4D\u0D5B\u0D5D\u0D68\u0D6A\u0D85\u0D8F\u0D91\u0D9B\u0D9D\u0DAF\u0DB1" +
        "\u0DC0\u0DCA\u0DCC\u0DDA\u0DDC\u0DEB\u0DED\u0DFA\u0E0B\u0E0D\u0E18\u0E22" +
        "\u0E30\u0E3C\u0E49\u0E50\u0E52\u0E69\u0E6B\u0E86\u0E88\u0E95\u0EA0\u0EA2" +
        "\u0EB5\u0EB7\u0EC1\u0EC5\u0ECA\u0ED3\u0ED8\u0EDA\u0EEB\u0F0F\u0F15\u0F17" +
        "\u0F29\u0F41\u0F50\u0F52\u0F5F\u0F61\u0F6C\u0F6E\u0F78\u0F87\u0F89\u0F97" +
        "\u0F99\u0FA5\u0FA9\u0FAE\u0FB6\u0FBE\u0FD1\u0FD3\u0FDC\u0FE4\u0FE6\u1012" +
        "\u1025\u1027\u1030\u103D\u103F\u104D\u104F\u1058\u1061\u1063\u106C\u107A" +
        "\u107C\u1087\u108E\u1090\u109A\u10A2\u10AD\u10AF\u10BD\u10BF\u10C8\u10D6" +
        "\u10DB\u10EA\u10F3\u10F5\u1103\u110C\u1127\u1129\u1137\u1139\u115E\u1160" +
        "\u117A\u117C\u1186\u1188\u1191\u1193\u119C\u11A5\u11AD\u11AF\u11B9\u11BB" +
        "\u11C7\u11C9\u11D1\u11E5\u11E7\u11F8\u11FA\u1204\u1206\u1222\u122F\u1234" +
        "\u1239\u124A\u124C\u1256\u1258\u1276\u1278\u1282\u128C\u128E\u1298\u12A7" +
        "\u12BB\u12BD\u12CF\u12D9\u12DB\u12F5\u1309\u130B\u1320\u1322\u1338\u134D" +
        "\u135C\u135E\u136D\u136F\u137D\u1384\u1386\u13A6\u13A8\u13B2\u13BC\u13BE" +
        "\u13CC\u13CE\u13D6\u13E0\u13E2\u13F0\u13F2\u13FF\u140F\u1411\u142E\u1430" +
        "\u1444\u1446\u1458\u145A\u1469\u146B\u1473\u147B\u1484\u1487\u1495\u14A4" +
        "\u14AC\u14B5\u14B7\u14C1\u14C3\u14CC\u14CE\u14D5\u14E4\u14E6\u14F0\u14F9" +
        "\u1506\u1513\u1516\u1525\u1527\u152F\u153B\u153D\u154F\u1551\u155E\u1560" +
        "\u156B\u156D\u1577\u1586\u1588\u1591\u1599\u15A1\u15A5\u15AE\u15B0\u15B9" +
        "\u15C4\u15C6\u15D0\u15DF\u15E1\u15F4\u15F6\u1603\u160D\u160F\u1619\u161C" +
        "\u1624\u1629\u162B\u1638\u1644\u1649\u164E\u1657\u1659\u1661\u1669\u1671" +
        "\u1673\u167C\u167E\u1688\u168B\u1692\u169F\u16A1\u16AC\u16B1\u16B3\u16DE" +
        "\u16E6\u16F2\u16FF\u171B\u1731\u1733\u173B\u1744\u1746\u1755\u1757\u1766" +
        "\u1768\u1772\u1774\u1783\u1785\u178D\u1798\u179A\u17AA\u17AC\u17B4\u17C1" +
        "\u17D8\u17DA\u17ED\u17EF\u17FF\u1801\u180E\u1818\u181A\u181E\u1825\u182F" +
        "\u1831\u1840\u1842\u184A\u1857\u185E\u1860\u187B\u187D\u188D\u188F\u189D" +
        "\u189F\u18AC\u18AE\u18C0\u18C2\u18CA\u18D6\u18D8\u18EA\u18EC\u18F4\u18FD" +
        "\u1905\u1907\u191D\u191F\u1927\u192F\u1932\u193F\u1941\u1949\u1952\u1954" +
        "\u195C\u1966\u1968\u196D\u1977\u1979\u1989\u198B\u199F\u19A1\u19A9\u19B8" +
        "\u19BA\u19CE\u19D0\u19D8\u19E1\u19E3\u19F1\u19F3\u19FB\u1A08\u1A0F\u1A11" +
        "\u1A2F\u1A31\u1A38\u1A3E\u1A45\u1A47\u1A52\u1A58\u1A6B\u1A82\u1A84\u1A97" +
        "\u1A99\u1AA1\u1AAE\u1AB0\u1AB9\u1AC4\u1AC6\u1AD3\u1AD5\u1ADE\u1AF8\u1AFA" +
        "\u1B04\u1B06\u1B14\u1B16\u1B1E\u1B2E\u1B30\u1B3D\u1B3F\u1B57\u1B59\u1B61" +
        "\u1B71\u1B73\u1B7F\u1B81\u1B8D\u1B8F\u1B9C\u1B9E\u1BA7\u1BAE\u1BC2\u1BC4" +
        "\u1BD3\u1C02\u1C04\u1C0C\u1C11\u1C13\u1C1D\u1C1F\u1C29\u1C2B\u1C44\u1C46" +
        "\u1C4E\u1C50\u1C73\u1C75\u1C86\u1CA1\u1CAB\u1CAD\u1CDE\u1CE0\u1CE9\u1CEB" +
        "\u1CEF\u1CF3\u1CF5\u1D04\u1D06\u1D1C\u1D21\u1D34\u1D36\u1D40\u1D56\u1D5F" +
        "\u1D61\u1D77\u1D7C\u1DA6\u1DA8\u1DB1\u1DD3\u1DDE\u1DE0\u1DF1\u1DFC\u1DFE" +
        "\u1E08\u1E0A\u1E24\u1E26\u1E31\u1E33\u1E3C\u1E41\u1E43\u1E4B\u1E68\u1E6A" +
        "\u1E80\u1E82\u1E8F\u1E9A";
    EDIF300Parser._serializedATN = Utils.join([
        EDIF300Parser._serializedATNSegment0,
        EDIF300Parser._serializedATNSegment1,
        EDIF300Parser._serializedATNSegment2,
        EDIF300Parser._serializedATNSegment3,
        EDIF300Parser._serializedATNSegment4,
        EDIF300Parser._serializedATNSegment5,
        EDIF300Parser._serializedATNSegment6,
        EDIF300Parser._serializedATNSegment7,
        EDIF300Parser._serializedATNSegment8,
        EDIF300Parser._serializedATNSegment9,
        EDIF300Parser._serializedATNSegment10,
        EDIF300Parser._serializedATNSegment11,
        EDIF300Parser._serializedATNSegment12,
        EDIF300Parser._serializedATNSegment13,
    ], "");
    return EDIF300Parser;
}(Parser_1.Parser));
exports.EDIF300Parser = EDIF300Parser;
var GoalContext = /** @class */ (function (_super) {
    __extends(GoalContext, _super);
    function GoalContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GoalContext.prototype.edif = function () {
        return this.getRuleContext(0, EdifContext);
    };
    Object.defineProperty(GoalContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_goal; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GoalContext.prototype.enterRule = function (listener) {
        if (listener.enterGoal) {
            listener.enterGoal(this);
        }
    };
    // @Override
    GoalContext.prototype.exitRule = function (listener) {
        if (listener.exitGoal) {
            listener.exitGoal(this);
        }
    };
    // @Override
    GoalContext.prototype.accept = function (visitor) {
        if (visitor.visitGoal) {
            return visitor.visitGoal(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GoalContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GoalContext = GoalContext;
var AbsoluteContext = /** @class */ (function (_super) {
    __extends(AbsoluteContext, _super);
    function AbsoluteContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AbsoluteContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(AbsoluteContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_absolute; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AbsoluteContext.prototype.enterRule = function (listener) {
        if (listener.enterAbsolute) {
            listener.enterAbsolute(this);
        }
    };
    // @Override
    AbsoluteContext.prototype.exitRule = function (listener) {
        if (listener.exitAbsolute) {
            listener.exitAbsolute(this);
        }
    };
    // @Override
    AbsoluteContext.prototype.accept = function (visitor) {
        if (visitor.visitAbsolute) {
            return visitor.visitAbsolute(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AbsoluteContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AbsoluteContext = AbsoluteContext;
var AcLoadContext = /** @class */ (function (_super) {
    __extends(AcLoadContext, _super);
    function AcLoadContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AcLoadContext.prototype.capacitanceValue = function () {
        return this.getRuleContext(0, CapacitanceValueContext);
    };
    Object.defineProperty(AcLoadContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_acLoad; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AcLoadContext.prototype.enterRule = function (listener) {
        if (listener.enterAcLoad) {
            listener.enterAcLoad(this);
        }
    };
    // @Override
    AcLoadContext.prototype.exitRule = function (listener) {
        if (listener.exitAcLoad) {
            listener.exitAcLoad(this);
        }
    };
    // @Override
    AcLoadContext.prototype.accept = function (visitor) {
        if (visitor.visitAcLoad) {
            return visitor.visitAcLoad(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AcLoadContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AcLoadContext = AcLoadContext;
var AcLoadDisplayContext = /** @class */ (function (_super) {
    __extends(AcLoadDisplayContext, _super);
    function AcLoadDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AcLoadDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    AcLoadDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    AcLoadDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(AcLoadDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_acLoadDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AcLoadDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterAcLoadDisplay) {
            listener.enterAcLoadDisplay(this);
        }
    };
    // @Override
    AcLoadDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitAcLoadDisplay) {
            listener.exitAcLoadDisplay(this);
        }
    };
    // @Override
    AcLoadDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitAcLoadDisplay) {
            return visitor.visitAcLoadDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AcLoadDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AcLoadDisplayContext = AcLoadDisplayContext;
var AcLoadFactorCapacitanceContext = /** @class */ (function (_super) {
    __extends(AcLoadFactorCapacitanceContext, _super);
    function AcLoadFactorCapacitanceContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AcLoadFactorCapacitanceContext.prototype.capacitanceValue = function () {
        return this.getRuleContext(0, CapacitanceValueContext);
    };
    Object.defineProperty(AcLoadFactorCapacitanceContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_acLoadFactorCapacitance; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AcLoadFactorCapacitanceContext.prototype.enterRule = function (listener) {
        if (listener.enterAcLoadFactorCapacitance) {
            listener.enterAcLoadFactorCapacitance(this);
        }
    };
    // @Override
    AcLoadFactorCapacitanceContext.prototype.exitRule = function (listener) {
        if (listener.exitAcLoadFactorCapacitance) {
            listener.exitAcLoadFactorCapacitance(this);
        }
    };
    // @Override
    AcLoadFactorCapacitanceContext.prototype.accept = function (visitor) {
        if (visitor.visitAcLoadFactorCapacitance) {
            return visitor.visitAcLoadFactorCapacitance(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AcLoadFactorCapacitanceContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AcLoadFactorCapacitanceContext = AcLoadFactorCapacitanceContext;
var AcLoadFactorTimeContext = /** @class */ (function (_super) {
    __extends(AcLoadFactorTimeContext, _super);
    function AcLoadFactorTimeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AcLoadFactorTimeContext.prototype.timeValue = function () {
        return this.getRuleContext(0, TimeValueContext);
    };
    Object.defineProperty(AcLoadFactorTimeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_acLoadFactorTime; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AcLoadFactorTimeContext.prototype.enterRule = function (listener) {
        if (listener.enterAcLoadFactorTime) {
            listener.enterAcLoadFactorTime(this);
        }
    };
    // @Override
    AcLoadFactorTimeContext.prototype.exitRule = function (listener) {
        if (listener.exitAcLoadFactorTime) {
            listener.exitAcLoadFactorTime(this);
        }
    };
    // @Override
    AcLoadFactorTimeContext.prototype.accept = function (visitor) {
        if (visitor.visitAcLoadFactorTime) {
            return visitor.visitAcLoadFactorTime(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AcLoadFactorTimeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AcLoadFactorTimeContext = AcLoadFactorTimeContext;
var AddDisplayContext = /** @class */ (function (_super) {
    __extends(AddDisplayContext, _super);
    function AddDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AddDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    Object.defineProperty(AddDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_addDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AddDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterAddDisplay) {
            listener.enterAddDisplay(this);
        }
    };
    // @Override
    AddDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitAddDisplay) {
            listener.exitAddDisplay(this);
        }
    };
    // @Override
    AddDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitAddDisplay) {
            return visitor.visitAddDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AddDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AddDisplayContext = AddDisplayContext;
var AmpereContext = /** @class */ (function (_super) {
    __extends(AmpereContext, _super);
    function AmpereContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AmpereContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(AmpereContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ampere; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AmpereContext.prototype.enterRule = function (listener) {
        if (listener.enterAmpere) {
            listener.enterAmpere(this);
        }
    };
    // @Override
    AmpereContext.prototype.exitRule = function (listener) {
        if (listener.exitAmpere) {
            listener.exitAmpere(this);
        }
    };
    // @Override
    AmpereContext.prototype.accept = function (visitor) {
        if (visitor.visitAmpere) {
            return visitor.visitAmpere(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AmpereContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AmpereContext = AmpereContext;
var And_Context = /** @class */ (function (_super) {
    __extends(And_Context, _super);
    function And_Context(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    And_Context.prototype.booleanExpression = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BooleanExpressionContext);
        }
        else {
            return this.getRuleContext(i, BooleanExpressionContext);
        }
    };
    Object.defineProperty(And_Context.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_and_; },
        enumerable: true,
        configurable: true
    });
    // @Override
    And_Context.prototype.enterRule = function (listener) {
        if (listener.enterAnd_) {
            listener.enterAnd_(this);
        }
    };
    // @Override
    And_Context.prototype.exitRule = function (listener) {
        if (listener.exitAnd_) {
            listener.exitAnd_(this);
        }
    };
    // @Override
    And_Context.prototype.accept = function (visitor) {
        if (visitor.visitAnd_) {
            return visitor.visitAnd_(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return And_Context;
}(ParserRuleContext_1.ParserRuleContext));
exports.And_Context = And_Context;
var AngleValueContext = /** @class */ (function (_super) {
    __extends(AngleValueContext, _super);
    function AngleValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AngleValueContext.prototype.numberValue = function () {
        return this.getRuleContext(0, NumberValueContext);
    };
    Object.defineProperty(AngleValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_angleValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AngleValueContext.prototype.enterRule = function (listener) {
        if (listener.enterAngleValue) {
            listener.enterAngleValue(this);
        }
    };
    // @Override
    AngleValueContext.prototype.exitRule = function (listener) {
        if (listener.exitAngleValue) {
            listener.exitAngleValue(this);
        }
    };
    // @Override
    AngleValueContext.prototype.accept = function (visitor) {
        if (visitor.visitAngleValue) {
            return visitor.visitAngleValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AngleValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AngleValueContext = AngleValueContext;
var AnnotateContext = /** @class */ (function (_super) {
    __extends(AnnotateContext, _super);
    function AnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AnnotateContext.prototype.stringValue = function () {
        return this.getRuleContext(0, StringValueContext);
    };
    AnnotateContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    Object.defineProperty(AnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_annotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterAnnotate) {
            listener.enterAnnotate(this);
        }
    };
    // @Override
    AnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitAnnotate) {
            listener.exitAnnotate(this);
        }
    };
    // @Override
    AnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitAnnotate) {
            return visitor.visitAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AnnotateContext = AnnotateContext;
var ApprovedDateContext = /** @class */ (function (_super) {
    __extends(ApprovedDateContext, _super);
    function ApprovedDateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ApprovedDateContext.prototype.date = function () {
        return this.getRuleContext(0, DateContext);
    };
    Object.defineProperty(ApprovedDateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_approvedDate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ApprovedDateContext.prototype.enterRule = function (listener) {
        if (listener.enterApprovedDate) {
            listener.enterApprovedDate(this);
        }
    };
    // @Override
    ApprovedDateContext.prototype.exitRule = function (listener) {
        if (listener.exitApprovedDate) {
            listener.exitApprovedDate(this);
        }
    };
    // @Override
    ApprovedDateContext.prototype.accept = function (visitor) {
        if (visitor.visitApprovedDate) {
            return visitor.visitApprovedDate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ApprovedDateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ApprovedDateContext = ApprovedDateContext;
var ApprovedDateDisplayContext = /** @class */ (function (_super) {
    __extends(ApprovedDateDisplayContext, _super);
    function ApprovedDateDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ApprovedDateDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    ApprovedDateDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    ApprovedDateDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(ApprovedDateDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_approvedDateDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ApprovedDateDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterApprovedDateDisplay) {
            listener.enterApprovedDateDisplay(this);
        }
    };
    // @Override
    ApprovedDateDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitApprovedDateDisplay) {
            listener.exitApprovedDateDisplay(this);
        }
    };
    // @Override
    ApprovedDateDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitApprovedDateDisplay) {
            return visitor.visitApprovedDateDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ApprovedDateDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ApprovedDateDisplayContext = ApprovedDateDisplayContext;
var ArcContext = /** @class */ (function (_super) {
    __extends(ArcContext, _super);
    function ArcContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ArcContext.prototype.startPoint = function () {
        return this.getRuleContext(0, StartPointContext);
    };
    ArcContext.prototype.throughPoint = function () {
        return this.getRuleContext(0, ThroughPointContext);
    };
    ArcContext.prototype.endPoint = function () {
        return this.getRuleContext(0, EndPointContext);
    };
    Object.defineProperty(ArcContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_arc; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ArcContext.prototype.enterRule = function (listener) {
        if (listener.enterArc) {
            listener.enterArc(this);
        }
    };
    // @Override
    ArcContext.prototype.exitRule = function (listener) {
        if (listener.exitArc) {
            listener.exitArc(this);
        }
    };
    // @Override
    ArcContext.prototype.accept = function (visitor) {
        if (visitor.visitArc) {
            return visitor.visitArc(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ArcContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ArcContext = ArcContext;
var AsciiContext = /** @class */ (function (_super) {
    __extends(AsciiContext, _super);
    function AsciiContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(AsciiContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ascii; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AsciiContext.prototype.enterRule = function (listener) {
        if (listener.enterAscii) {
            listener.enterAscii(this);
        }
    };
    // @Override
    AsciiContext.prototype.exitRule = function (listener) {
        if (listener.exitAscii) {
            listener.exitAscii(this);
        }
    };
    // @Override
    AsciiContext.prototype.accept = function (visitor) {
        if (visitor.visitAscii) {
            return visitor.visitAscii(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AsciiContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AsciiContext = AsciiContext;
var AssociatedInterconnectNameDisplayContext = /** @class */ (function (_super) {
    __extends(AssociatedInterconnectNameDisplayContext, _super);
    function AssociatedInterconnectNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AssociatedInterconnectNameDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    AssociatedInterconnectNameDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    AssociatedInterconnectNameDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(AssociatedInterconnectNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_associatedInterconnectNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AssociatedInterconnectNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterAssociatedInterconnectNameDisplay) {
            listener.enterAssociatedInterconnectNameDisplay(this);
        }
    };
    // @Override
    AssociatedInterconnectNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitAssociatedInterconnectNameDisplay) {
            listener.exitAssociatedInterconnectNameDisplay(this);
        }
    };
    // @Override
    AssociatedInterconnectNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitAssociatedInterconnectNameDisplay) {
            return visitor.visitAssociatedInterconnectNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AssociatedInterconnectNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AssociatedInterconnectNameDisplayContext = AssociatedInterconnectNameDisplayContext;
var AttachmentPointContext = /** @class */ (function (_super) {
    __extends(AttachmentPointContext, _super);
    function AttachmentPointContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AttachmentPointContext.prototype.pointValue = function () {
        return this.getRuleContext(0, PointValueContext);
    };
    Object.defineProperty(AttachmentPointContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_attachmentPoint; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AttachmentPointContext.prototype.enterRule = function (listener) {
        if (listener.enterAttachmentPoint) {
            listener.enterAttachmentPoint(this);
        }
    };
    // @Override
    AttachmentPointContext.prototype.exitRule = function (listener) {
        if (listener.exitAttachmentPoint) {
            listener.exitAttachmentPoint(this);
        }
    };
    // @Override
    AttachmentPointContext.prototype.accept = function (visitor) {
        if (visitor.visitAttachmentPoint) {
            return visitor.visitAttachmentPoint(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AttachmentPointContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AttachmentPointContext = AttachmentPointContext;
var AuthorContext = /** @class */ (function (_super) {
    __extends(AuthorContext, _super);
    function AuthorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    AuthorContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(AuthorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_author; },
        enumerable: true,
        configurable: true
    });
    // @Override
    AuthorContext.prototype.enterRule = function (listener) {
        if (listener.enterAuthor) {
            listener.enterAuthor(this);
        }
    };
    // @Override
    AuthorContext.prototype.exitRule = function (listener) {
        if (listener.exitAuthor) {
            listener.exitAuthor(this);
        }
    };
    // @Override
    AuthorContext.prototype.accept = function (visitor) {
        if (visitor.visitAuthor) {
            return visitor.visitAuthor(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return AuthorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.AuthorContext = AuthorContext;
var BackgroundColorContext = /** @class */ (function (_super) {
    __extends(BackgroundColorContext, _super);
    function BackgroundColorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BackgroundColorContext.prototype.color = function () {
        return this.getRuleContext(0, ColorContext);
    };
    Object.defineProperty(BackgroundColorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_backgroundColor; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BackgroundColorContext.prototype.enterRule = function (listener) {
        if (listener.enterBackgroundColor) {
            listener.enterBackgroundColor(this);
        }
    };
    // @Override
    BackgroundColorContext.prototype.exitRule = function (listener) {
        if (listener.exitBackgroundColor) {
            listener.exitBackgroundColor(this);
        }
    };
    // @Override
    BackgroundColorContext.prototype.accept = function (visitor) {
        if (visitor.visitBackgroundColor) {
            return visitor.visitBackgroundColor(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BackgroundColorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BackgroundColorContext = BackgroundColorContext;
var BaselineJustifyContext = /** @class */ (function (_super) {
    __extends(BaselineJustifyContext, _super);
    function BaselineJustifyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(BaselineJustifyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_baselineJustify; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BaselineJustifyContext.prototype.enterRule = function (listener) {
        if (listener.enterBaselineJustify) {
            listener.enterBaselineJustify(this);
        }
    };
    // @Override
    BaselineJustifyContext.prototype.exitRule = function (listener) {
        if (listener.exitBaselineJustify) {
            listener.exitBaselineJustify(this);
        }
    };
    // @Override
    BaselineJustifyContext.prototype.accept = function (visitor) {
        if (visitor.visitBaselineJustify) {
            return visitor.visitBaselineJustify(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BaselineJustifyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BaselineJustifyContext = BaselineJustifyContext;
var BecomesContext = /** @class */ (function (_super) {
    __extends(BecomesContext, _super);
    function BecomesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BecomesContext.prototype.logicNameRef = function () {
        return this.tryGetRuleContext(0, LogicNameRefContext);
    };
    BecomesContext.prototype.logicList = function () {
        return this.tryGetRuleContext(0, LogicListContext);
    };
    BecomesContext.prototype.logicOneOf = function () {
        return this.tryGetRuleContext(0, LogicOneOfContext);
    };
    Object.defineProperty(BecomesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_becomes; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BecomesContext.prototype.enterRule = function (listener) {
        if (listener.enterBecomes) {
            listener.enterBecomes(this);
        }
    };
    // @Override
    BecomesContext.prototype.exitRule = function (listener) {
        if (listener.exitBecomes) {
            listener.exitBecomes(this);
        }
    };
    // @Override
    BecomesContext.prototype.accept = function (visitor) {
        if (visitor.visitBecomes) {
            return visitor.visitBecomes(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BecomesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BecomesContext = BecomesContext;
var BehaviorViewContext = /** @class */ (function (_super) {
    __extends(BehaviorViewContext, _super);
    function BehaviorViewContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BehaviorViewContext.prototype.viewNameDef = function () {
        return this.getRuleContext(0, ViewNameDefContext);
    };
    BehaviorViewContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    BehaviorViewContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    BehaviorViewContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(BehaviorViewContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_behaviorView; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BehaviorViewContext.prototype.enterRule = function (listener) {
        if (listener.enterBehaviorView) {
            listener.enterBehaviorView(this);
        }
    };
    // @Override
    BehaviorViewContext.prototype.exitRule = function (listener) {
        if (listener.exitBehaviorView) {
            listener.exitBehaviorView(this);
        }
    };
    // @Override
    BehaviorViewContext.prototype.accept = function (visitor) {
        if (visitor.visitBehaviorView) {
            return visitor.visitBehaviorView(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BehaviorViewContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BehaviorViewContext = BehaviorViewContext;
var BidirectionalContext = /** @class */ (function (_super) {
    __extends(BidirectionalContext, _super);
    function BidirectionalContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(BidirectionalContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_bidirectional; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BidirectionalContext.prototype.enterRule = function (listener) {
        if (listener.enterBidirectional) {
            listener.enterBidirectional(this);
        }
    };
    // @Override
    BidirectionalContext.prototype.exitRule = function (listener) {
        if (listener.exitBidirectional) {
            listener.exitBidirectional(this);
        }
    };
    // @Override
    BidirectionalContext.prototype.accept = function (visitor) {
        if (visitor.visitBidirectional) {
            return visitor.visitBidirectional(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BidirectionalContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BidirectionalContext = BidirectionalContext;
var BidirectionalPortContext = /** @class */ (function (_super) {
    __extends(BidirectionalPortContext, _super);
    function BidirectionalPortContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BidirectionalPortContext.prototype.bidirectionalPortAttributes = function () {
        return this.tryGetRuleContext(0, BidirectionalPortAttributesContext);
    };
    Object.defineProperty(BidirectionalPortContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_bidirectionalPort; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BidirectionalPortContext.prototype.enterRule = function (listener) {
        if (listener.enterBidirectionalPort) {
            listener.enterBidirectionalPort(this);
        }
    };
    // @Override
    BidirectionalPortContext.prototype.exitRule = function (listener) {
        if (listener.exitBidirectionalPort) {
            listener.exitBidirectionalPort(this);
        }
    };
    // @Override
    BidirectionalPortContext.prototype.accept = function (visitor) {
        if (visitor.visitBidirectionalPort) {
            return visitor.visitBidirectionalPort(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BidirectionalPortContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BidirectionalPortContext = BidirectionalPortContext;
var BidirectionalPortAttributesContext = /** @class */ (function (_super) {
    __extends(BidirectionalPortAttributesContext, _super);
    function BidirectionalPortAttributesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BidirectionalPortAttributesContext.prototype.dcFanInLoad = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcFanInLoadContext);
        }
        else {
            return this.getRuleContext(i, DcFanInLoadContext);
        }
    };
    BidirectionalPortAttributesContext.prototype.dcFanOutLoad = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcFanOutLoadContext);
        }
        else {
            return this.getRuleContext(i, DcFanOutLoadContext);
        }
    };
    BidirectionalPortAttributesContext.prototype.dcMaxFanIn = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcMaxFanInContext);
        }
        else {
            return this.getRuleContext(i, DcMaxFanInContext);
        }
    };
    BidirectionalPortAttributesContext.prototype.dcMaxFanOut = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcMaxFanOutContext);
        }
        else {
            return this.getRuleContext(i, DcMaxFanOutContext);
        }
    };
    Object.defineProperty(BidirectionalPortAttributesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_bidirectionalPortAttributes; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BidirectionalPortAttributesContext.prototype.enterRule = function (listener) {
        if (listener.enterBidirectionalPortAttributes) {
            listener.enterBidirectionalPortAttributes(this);
        }
    };
    // @Override
    BidirectionalPortAttributesContext.prototype.exitRule = function (listener) {
        if (listener.exitBidirectionalPortAttributes) {
            listener.exitBidirectionalPortAttributes(this);
        }
    };
    // @Override
    BidirectionalPortAttributesContext.prototype.accept = function (visitor) {
        if (visitor.visitBidirectionalPortAttributes) {
            return visitor.visitBidirectionalPortAttributes(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BidirectionalPortAttributesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BidirectionalPortAttributesContext = BidirectionalPortAttributesContext;
var BitOrderContext = /** @class */ (function (_super) {
    __extends(BitOrderContext, _super);
    function BitOrderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BitOrderContext.prototype.lsbToMsb = function () {
        return this.tryGetRuleContext(0, LsbToMsbContext);
    };
    BitOrderContext.prototype.msbToLsb = function () {
        return this.tryGetRuleContext(0, MsbToLsbContext);
    };
    Object.defineProperty(BitOrderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_bitOrder; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BitOrderContext.prototype.enterRule = function (listener) {
        if (listener.enterBitOrder) {
            listener.enterBitOrder(this);
        }
    };
    // @Override
    BitOrderContext.prototype.exitRule = function (listener) {
        if (listener.exitBitOrder) {
            listener.exitBitOrder(this);
        }
    };
    // @Override
    BitOrderContext.prototype.accept = function (visitor) {
        if (visitor.visitBitOrder) {
            return visitor.visitBitOrder(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BitOrderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BitOrderContext = BitOrderContext;
var BlueContext = /** @class */ (function (_super) {
    __extends(BlueContext, _super);
    function BlueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BlueContext.prototype.scaledInteger = function () {
        return this.getRuleContext(0, ScaledIntegerContext);
    };
    Object.defineProperty(BlueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_blue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BlueContext.prototype.enterRule = function (listener) {
        if (listener.enterBlue) {
            listener.enterBlue(this);
        }
    };
    // @Override
    BlueContext.prototype.exitRule = function (listener) {
        if (listener.exitBlue) {
            listener.exitBlue(this);
        }
    };
    // @Override
    BlueContext.prototype.accept = function (visitor) {
        if (visitor.visitBlue) {
            return visitor.visitBlue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BlueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BlueContext = BlueContext;
var BoldStyleContext = /** @class */ (function (_super) {
    __extends(BoldStyleContext, _super);
    function BoldStyleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(BoldStyleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_boldStyle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BoldStyleContext.prototype.enterRule = function (listener) {
        if (listener.enterBoldStyle) {
            listener.enterBoldStyle(this);
        }
    };
    // @Override
    BoldStyleContext.prototype.exitRule = function (listener) {
        if (listener.exitBoldStyle) {
            listener.exitBoldStyle(this);
        }
    };
    // @Override
    BoldStyleContext.prototype.accept = function (visitor) {
        if (visitor.visitBoldStyle) {
            return visitor.visitBoldStyle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BoldStyleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BoldStyleContext = BoldStyleContext;
var EbooleanContext = /** @class */ (function (_super) {
    __extends(EbooleanContext, _super);
    function EbooleanContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EbooleanContext.prototype.booleanExpression = function () {
        return this.getRuleContext(0, BooleanExpressionContext);
    };
    Object.defineProperty(EbooleanContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_eboolean; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EbooleanContext.prototype.enterRule = function (listener) {
        if (listener.enterEboolean) {
            listener.enterEboolean(this);
        }
    };
    // @Override
    EbooleanContext.prototype.exitRule = function (listener) {
        if (listener.exitEboolean) {
            listener.exitEboolean(this);
        }
    };
    // @Override
    EbooleanContext.prototype.accept = function (visitor) {
        if (visitor.visitEboolean) {
            return visitor.visitEboolean(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EbooleanContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EbooleanContext = EbooleanContext;
var BooleanConstantContext = /** @class */ (function (_super) {
    __extends(BooleanConstantContext, _super);
    function BooleanConstantContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BooleanConstantContext.prototype.constantNameDef = function () {
        return this.getRuleContext(0, ConstantNameDefContext);
    };
    BooleanConstantContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(BooleanConstantContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_booleanConstant; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BooleanConstantContext.prototype.enterRule = function (listener) {
        if (listener.enterBooleanConstant) {
            listener.enterBooleanConstant(this);
        }
    };
    // @Override
    BooleanConstantContext.prototype.exitRule = function (listener) {
        if (listener.exitBooleanConstant) {
            listener.exitBooleanConstant(this);
        }
    };
    // @Override
    BooleanConstantContext.prototype.accept = function (visitor) {
        if (visitor.visitBooleanConstant) {
            return visitor.visitBooleanConstant(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BooleanConstantContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BooleanConstantContext = BooleanConstantContext;
var BooleanConstantRefContext = /** @class */ (function (_super) {
    __extends(BooleanConstantRefContext, _super);
    function BooleanConstantRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BooleanConstantRefContext.prototype.constantNameRef = function () {
        return this.getRuleContext(0, ConstantNameRefContext);
    };
    Object.defineProperty(BooleanConstantRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_booleanConstantRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BooleanConstantRefContext.prototype.enterRule = function (listener) {
        if (listener.enterBooleanConstantRef) {
            listener.enterBooleanConstantRef(this);
        }
    };
    // @Override
    BooleanConstantRefContext.prototype.exitRule = function (listener) {
        if (listener.exitBooleanConstantRef) {
            listener.exitBooleanConstantRef(this);
        }
    };
    // @Override
    BooleanConstantRefContext.prototype.accept = function (visitor) {
        if (visitor.visitBooleanConstantRef) {
            return visitor.visitBooleanConstantRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BooleanConstantRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BooleanConstantRefContext = BooleanConstantRefContext;
var BooleanExpressionContext = /** @class */ (function (_super) {
    __extends(BooleanExpressionContext, _super);
    function BooleanExpressionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BooleanExpressionContext.prototype.and_ = function () {
        return this.tryGetRuleContext(0, And_Context);
    };
    BooleanExpressionContext.prototype.booleanParameterRef = function () {
        return this.tryGetRuleContext(0, BooleanParameterRefContext);
    };
    BooleanExpressionContext.prototype.booleanToken = function () {
        return this.tryGetRuleContext(0, BooleanTokenContext);
    };
    BooleanExpressionContext.prototype.stringEqual = function () {
        return this.tryGetRuleContext(0, StringEqualContext);
    };
    BooleanExpressionContext.prototype.integerEqual = function () {
        return this.tryGetRuleContext(0, IntegerEqualContext);
    };
    BooleanExpressionContext.prototype.lessThan = function () {
        return this.tryGetRuleContext(0, LessThanContext);
    };
    BooleanExpressionContext.prototype.lessThanOrEqual = function () {
        return this.tryGetRuleContext(0, LessThanOrEqualContext);
    };
    BooleanExpressionContext.prototype.not_ = function () {
        return this.tryGetRuleContext(0, Not_Context);
    };
    BooleanExpressionContext.prototype.or_ = function () {
        return this.tryGetRuleContext(0, Or_Context);
    };
    BooleanExpressionContext.prototype.xor_ = function () {
        return this.tryGetRuleContext(0, Xor_Context);
    };
    BooleanExpressionContext.prototype.booleanConstantRef = function () {
        return this.tryGetRuleContext(0, BooleanConstantRefContext);
    };
    Object.defineProperty(BooleanExpressionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_booleanExpression; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BooleanExpressionContext.prototype.enterRule = function (listener) {
        if (listener.enterBooleanExpression) {
            listener.enterBooleanExpression(this);
        }
    };
    // @Override
    BooleanExpressionContext.prototype.exitRule = function (listener) {
        if (listener.exitBooleanExpression) {
            listener.exitBooleanExpression(this);
        }
    };
    // @Override
    BooleanExpressionContext.prototype.accept = function (visitor) {
        if (visitor.visitBooleanExpression) {
            return visitor.visitBooleanExpression(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BooleanExpressionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BooleanExpressionContext = BooleanExpressionContext;
var BooleanMapContext = /** @class */ (function (_super) {
    __extends(BooleanMapContext, _super);
    function BooleanMapContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BooleanMapContext.prototype.booleanValue = function () {
        return this.getRuleContext(0, BooleanValueContext);
    };
    Object.defineProperty(BooleanMapContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_booleanMap; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BooleanMapContext.prototype.enterRule = function (listener) {
        if (listener.enterBooleanMap) {
            listener.enterBooleanMap(this);
        }
    };
    // @Override
    BooleanMapContext.prototype.exitRule = function (listener) {
        if (listener.exitBooleanMap) {
            listener.exitBooleanMap(this);
        }
    };
    // @Override
    BooleanMapContext.prototype.accept = function (visitor) {
        if (visitor.visitBooleanMap) {
            return visitor.visitBooleanMap(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BooleanMapContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BooleanMapContext = BooleanMapContext;
var BooleanParameterContext = /** @class */ (function (_super) {
    __extends(BooleanParameterContext, _super);
    function BooleanParameterContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BooleanParameterContext.prototype.parameterNameDef = function () {
        return this.getRuleContext(0, ParameterNameDefContext);
    };
    BooleanParameterContext.prototype.eboolean = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(EbooleanContext);
        }
        else {
            return this.getRuleContext(i, EbooleanContext);
        }
    };
    BooleanParameterContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    Object.defineProperty(BooleanParameterContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_booleanParameter; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BooleanParameterContext.prototype.enterRule = function (listener) {
        if (listener.enterBooleanParameter) {
            listener.enterBooleanParameter(this);
        }
    };
    // @Override
    BooleanParameterContext.prototype.exitRule = function (listener) {
        if (listener.exitBooleanParameter) {
            listener.exitBooleanParameter(this);
        }
    };
    // @Override
    BooleanParameterContext.prototype.accept = function (visitor) {
        if (visitor.visitBooleanParameter) {
            return visitor.visitBooleanParameter(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BooleanParameterContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BooleanParameterContext = BooleanParameterContext;
var BooleanParameterAssignContext = /** @class */ (function (_super) {
    __extends(BooleanParameterAssignContext, _super);
    function BooleanParameterAssignContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BooleanParameterAssignContext.prototype.parameterNameRef = function () {
        return this.getRuleContext(0, ParameterNameRefContext);
    };
    BooleanParameterAssignContext.prototype.booleanExpression = function () {
        return this.getRuleContext(0, BooleanExpressionContext);
    };
    Object.defineProperty(BooleanParameterAssignContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_booleanParameterAssign; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BooleanParameterAssignContext.prototype.enterRule = function (listener) {
        if (listener.enterBooleanParameterAssign) {
            listener.enterBooleanParameterAssign(this);
        }
    };
    // @Override
    BooleanParameterAssignContext.prototype.exitRule = function (listener) {
        if (listener.exitBooleanParameterAssign) {
            listener.exitBooleanParameterAssign(this);
        }
    };
    // @Override
    BooleanParameterAssignContext.prototype.accept = function (visitor) {
        if (visitor.visitBooleanParameterAssign) {
            return visitor.visitBooleanParameterAssign(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BooleanParameterAssignContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BooleanParameterAssignContext = BooleanParameterAssignContext;
var BooleanParameterRefContext = /** @class */ (function (_super) {
    __extends(BooleanParameterRefContext, _super);
    function BooleanParameterRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BooleanParameterRefContext.prototype.parameterNameRef = function () {
        return this.getRuleContext(0, ParameterNameRefContext);
    };
    Object.defineProperty(BooleanParameterRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_booleanParameterRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BooleanParameterRefContext.prototype.enterRule = function (listener) {
        if (listener.enterBooleanParameterRef) {
            listener.enterBooleanParameterRef(this);
        }
    };
    // @Override
    BooleanParameterRefContext.prototype.exitRule = function (listener) {
        if (listener.exitBooleanParameterRef) {
            listener.exitBooleanParameterRef(this);
        }
    };
    // @Override
    BooleanParameterRefContext.prototype.accept = function (visitor) {
        if (visitor.visitBooleanParameterRef) {
            return visitor.visitBooleanParameterRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BooleanParameterRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BooleanParameterRefContext = BooleanParameterRefContext;
var BooleanTokenContext = /** @class */ (function (_super) {
    __extends(BooleanTokenContext, _super);
    function BooleanTokenContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BooleanTokenContext.prototype.efalse = function () {
        return this.tryGetRuleContext(0, EfalseContext);
    };
    BooleanTokenContext.prototype.etrue = function () {
        return this.tryGetRuleContext(0, EtrueContext);
    };
    Object.defineProperty(BooleanTokenContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_booleanToken; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BooleanTokenContext.prototype.enterRule = function (listener) {
        if (listener.enterBooleanToken) {
            listener.enterBooleanToken(this);
        }
    };
    // @Override
    BooleanTokenContext.prototype.exitRule = function (listener) {
        if (listener.exitBooleanToken) {
            listener.exitBooleanToken(this);
        }
    };
    // @Override
    BooleanTokenContext.prototype.accept = function (visitor) {
        if (visitor.visitBooleanToken) {
            return visitor.visitBooleanToken(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BooleanTokenContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BooleanTokenContext = BooleanTokenContext;
var BooleanValueContext = /** @class */ (function (_super) {
    __extends(BooleanValueContext, _super);
    function BooleanValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BooleanValueContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(BooleanValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_booleanValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BooleanValueContext.prototype.enterRule = function (listener) {
        if (listener.enterBooleanValue) {
            listener.enterBooleanValue(this);
        }
    };
    // @Override
    BooleanValueContext.prototype.exitRule = function (listener) {
        if (listener.exitBooleanValue) {
            listener.exitBooleanValue(this);
        }
    };
    // @Override
    BooleanValueContext.prototype.accept = function (visitor) {
        if (visitor.visitBooleanValue) {
            return visitor.visitBooleanValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BooleanValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BooleanValueContext = BooleanValueContext;
var BorderPatternContext = /** @class */ (function (_super) {
    __extends(BorderPatternContext, _super);
    function BorderPatternContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BorderPatternContext.prototype.pixelPattern = function () {
        return this.getRuleContext(0, PixelPatternContext);
    };
    Object.defineProperty(BorderPatternContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_borderPattern; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BorderPatternContext.prototype.enterRule = function (listener) {
        if (listener.enterBorderPattern) {
            listener.enterBorderPattern(this);
        }
    };
    // @Override
    BorderPatternContext.prototype.exitRule = function (listener) {
        if (listener.exitBorderPattern) {
            listener.exitBorderPattern(this);
        }
    };
    // @Override
    BorderPatternContext.prototype.accept = function (visitor) {
        if (visitor.visitBorderPattern) {
            return visitor.visitBorderPattern(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BorderPatternContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BorderPatternContext = BorderPatternContext;
var BorderPatternVisibleContext = /** @class */ (function (_super) {
    __extends(BorderPatternVisibleContext, _super);
    function BorderPatternVisibleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BorderPatternVisibleContext.prototype.booleanValue = function () {
        return this.getRuleContext(0, BooleanValueContext);
    };
    Object.defineProperty(BorderPatternVisibleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_borderPatternVisible; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BorderPatternVisibleContext.prototype.enterRule = function (listener) {
        if (listener.enterBorderPatternVisible) {
            listener.enterBorderPatternVisible(this);
        }
    };
    // @Override
    BorderPatternVisibleContext.prototype.exitRule = function (listener) {
        if (listener.exitBorderPatternVisible) {
            listener.exitBorderPatternVisible(this);
        }
    };
    // @Override
    BorderPatternVisibleContext.prototype.accept = function (visitor) {
        if (visitor.visitBorderPatternVisible) {
            return visitor.visitBorderPatternVisible(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BorderPatternVisibleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BorderPatternVisibleContext = BorderPatternVisibleContext;
var BorderWidthContext = /** @class */ (function (_super) {
    __extends(BorderWidthContext, _super);
    function BorderWidthContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    BorderWidthContext.prototype.lengthValue = function () {
        return this.tryGetRuleContext(0, LengthValueContext);
    };
    BorderWidthContext.prototype.minimalWidth = function () {
        return this.tryGetRuleContext(0, MinimalWidthContext);
    };
    Object.defineProperty(BorderWidthContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_borderWidth; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BorderWidthContext.prototype.enterRule = function (listener) {
        if (listener.enterBorderWidth) {
            listener.enterBorderWidth(this);
        }
    };
    // @Override
    BorderWidthContext.prototype.exitRule = function (listener) {
        if (listener.exitBorderWidth) {
            listener.exitBorderWidth(this);
        }
    };
    // @Override
    BorderWidthContext.prototype.accept = function (visitor) {
        if (visitor.visitBorderWidth) {
            return visitor.visitBorderWidth(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BorderWidthContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BorderWidthContext = BorderWidthContext;
var BottomJustifyContext = /** @class */ (function (_super) {
    __extends(BottomJustifyContext, _super);
    function BottomJustifyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(BottomJustifyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_bottomJustify; },
        enumerable: true,
        configurable: true
    });
    // @Override
    BottomJustifyContext.prototype.enterRule = function (listener) {
        if (listener.enterBottomJustify) {
            listener.enterBottomJustify(this);
        }
    };
    // @Override
    BottomJustifyContext.prototype.exitRule = function (listener) {
        if (listener.exitBottomJustify) {
            listener.exitBottomJustify(this);
        }
    };
    // @Override
    BottomJustifyContext.prototype.accept = function (visitor) {
        if (visitor.visitBottomJustify) {
            return visitor.visitBottomJustify(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return BottomJustifyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.BottomJustifyContext = BottomJustifyContext;
var CalculatedContext = /** @class */ (function (_super) {
    __extends(CalculatedContext, _super);
    function CalculatedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(CalculatedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_calculated; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CalculatedContext.prototype.enterRule = function (listener) {
        if (listener.enterCalculated) {
            listener.enterCalculated(this);
        }
    };
    // @Override
    CalculatedContext.prototype.exitRule = function (listener) {
        if (listener.exitCalculated) {
            listener.exitCalculated(this);
        }
    };
    // @Override
    CalculatedContext.prototype.accept = function (visitor) {
        if (visitor.visitCalculated) {
            return visitor.visitCalculated(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CalculatedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CalculatedContext = CalculatedContext;
var CandelaContext = /** @class */ (function (_super) {
    __extends(CandelaContext, _super);
    function CandelaContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CandelaContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(CandelaContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_candela; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CandelaContext.prototype.enterRule = function (listener) {
        if (listener.enterCandela) {
            listener.enterCandela(this);
        }
    };
    // @Override
    CandelaContext.prototype.exitRule = function (listener) {
        if (listener.exitCandela) {
            listener.exitCandela(this);
        }
    };
    // @Override
    CandelaContext.prototype.accept = function (visitor) {
        if (visitor.visitCandela) {
            return visitor.visitCandela(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CandelaContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CandelaContext = CandelaContext;
var CapacitanceValueContext = /** @class */ (function (_super) {
    __extends(CapacitanceValueContext, _super);
    function CapacitanceValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CapacitanceValueContext.prototype.miNoMaxValue = function () {
        return this.getRuleContext(0, MiNoMaxValueContext);
    };
    Object.defineProperty(CapacitanceValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_capacitanceValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CapacitanceValueContext.prototype.enterRule = function (listener) {
        if (listener.enterCapacitanceValue) {
            listener.enterCapacitanceValue(this);
        }
    };
    // @Override
    CapacitanceValueContext.prototype.exitRule = function (listener) {
        if (listener.exitCapacitanceValue) {
            listener.exitCapacitanceValue(this);
        }
    };
    // @Override
    CapacitanceValueContext.prototype.accept = function (visitor) {
        if (visitor.visitCapacitanceValue) {
            return visitor.visitCapacitanceValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CapacitanceValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CapacitanceValueContext = CapacitanceValueContext;
var CaplineJustifyContext = /** @class */ (function (_super) {
    __extends(CaplineJustifyContext, _super);
    function CaplineJustifyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(CaplineJustifyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_caplineJustify; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CaplineJustifyContext.prototype.enterRule = function (listener) {
        if (listener.enterCaplineJustify) {
            listener.enterCaplineJustify(this);
        }
    };
    // @Override
    CaplineJustifyContext.prototype.exitRule = function (listener) {
        if (listener.exitCaplineJustify) {
            listener.exitCaplineJustify(this);
        }
    };
    // @Override
    CaplineJustifyContext.prototype.accept = function (visitor) {
        if (visitor.visitCaplineJustify) {
            return visitor.visitCaplineJustify(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CaplineJustifyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CaplineJustifyContext = CaplineJustifyContext;
var CellContext = /** @class */ (function (_super) {
    __extends(CellContext, _super);
    function CellContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CellContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    CellContext.prototype.cellHeader = function () {
        return this.getRuleContext(0, CellHeaderContext);
    };
    CellContext.prototype.cluster = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterContext);
        }
        else {
            return this.getRuleContext(i, ClusterContext);
        }
    };
    CellContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    CellContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    CellContext.prototype.viewGroup = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewGroupContext);
        }
        else {
            return this.getRuleContext(i, ViewGroupContext);
        }
    };
    Object.defineProperty(CellContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_cell; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CellContext.prototype.enterRule = function (listener) {
        if (listener.enterCell) {
            listener.enterCell(this);
        }
    };
    // @Override
    CellContext.prototype.exitRule = function (listener) {
        if (listener.exitCell) {
            listener.exitCell(this);
        }
    };
    // @Override
    CellContext.prototype.accept = function (visitor) {
        if (visitor.visitCell) {
            return visitor.visitCell(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CellContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CellContext = CellContext;
var CellHeaderContext = /** @class */ (function (_super) {
    __extends(CellHeaderContext, _super);
    function CellHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CellHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    CellHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    CellHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    CellHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(CellHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_cellHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CellHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterCellHeader) {
            listener.enterCellHeader(this);
        }
    };
    // @Override
    CellHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitCellHeader) {
            listener.exitCellHeader(this);
        }
    };
    // @Override
    CellHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitCellHeader) {
            return visitor.visitCellHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CellHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CellHeaderContext = CellHeaderContext;
var CellNameDisplayContext = /** @class */ (function (_super) {
    __extends(CellNameDisplayContext, _super);
    function CellNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CellNameDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    CellNameDisplayContext.prototype.displayNameOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameOverrideContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameOverrideContext);
        }
    };
    Object.defineProperty(CellNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_cellNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CellNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterCellNameDisplay) {
            listener.enterCellNameDisplay(this);
        }
    };
    // @Override
    CellNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitCellNameDisplay) {
            listener.exitCellNameDisplay(this);
        }
    };
    // @Override
    CellNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitCellNameDisplay) {
            return visitor.visitCellNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CellNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CellNameDisplayContext = CellNameDisplayContext;
var CellPropertyDisplayContext = /** @class */ (function (_super) {
    __extends(CellPropertyDisplayContext, _super);
    function CellPropertyDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CellPropertyDisplayContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    CellPropertyDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    CellPropertyDisplayContext.prototype.propertyNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyNameDisplayContext);
        }
    };
    Object.defineProperty(CellPropertyDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_cellPropertyDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CellPropertyDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterCellPropertyDisplay) {
            listener.enterCellPropertyDisplay(this);
        }
    };
    // @Override
    CellPropertyDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitCellPropertyDisplay) {
            listener.exitCellPropertyDisplay(this);
        }
    };
    // @Override
    CellPropertyDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitCellPropertyDisplay) {
            return visitor.visitCellPropertyDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CellPropertyDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CellPropertyDisplayContext = CellPropertyDisplayContext;
var CellPropertyDisplayOverrideContext = /** @class */ (function (_super) {
    __extends(CellPropertyDisplayOverrideContext, _super);
    function CellPropertyDisplayOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CellPropertyDisplayOverrideContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    CellPropertyDisplayOverrideContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    CellPropertyDisplayOverrideContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    CellPropertyDisplayOverrideContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    CellPropertyDisplayOverrideContext.prototype.propertyNameDisplay = function () {
        return this.tryGetRuleContext(0, PropertyNameDisplayContext);
    };
    Object.defineProperty(CellPropertyDisplayOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_cellPropertyDisplayOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CellPropertyDisplayOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterCellPropertyDisplayOverride) {
            listener.enterCellPropertyDisplayOverride(this);
        }
    };
    // @Override
    CellPropertyDisplayOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitCellPropertyDisplayOverride) {
            listener.exitCellPropertyDisplayOverride(this);
        }
    };
    // @Override
    CellPropertyDisplayOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitCellPropertyDisplayOverride) {
            return visitor.visitCellPropertyDisplayOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CellPropertyDisplayOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CellPropertyDisplayOverrideContext = CellPropertyDisplayOverrideContext;
var CellPropertyOverrideContext = /** @class */ (function (_super) {
    __extends(CellPropertyOverrideContext, _super);
    function CellPropertyOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CellPropertyOverrideContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    CellPropertyOverrideContext.prototype.typedValue = function () {
        return this.tryGetRuleContext(0, TypedValueContext);
    };
    CellPropertyOverrideContext.prototype.untyped = function () {
        return this.tryGetRuleContext(0, UntypedContext);
    };
    CellPropertyOverrideContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    CellPropertyOverrideContext.prototype.fixed = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FixedContext);
        }
        else {
            return this.getRuleContext(i, FixedContext);
        }
    };
    CellPropertyOverrideContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(CellPropertyOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_cellPropertyOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CellPropertyOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterCellPropertyOverride) {
            listener.enterCellPropertyOverride(this);
        }
    };
    // @Override
    CellPropertyOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitCellPropertyOverride) {
            listener.exitCellPropertyOverride(this);
        }
    };
    // @Override
    CellPropertyOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitCellPropertyOverride) {
            return visitor.visitCellPropertyOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CellPropertyOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CellPropertyOverrideContext = CellPropertyOverrideContext;
var CellRefContext = /** @class */ (function (_super) {
    __extends(CellRefContext, _super);
    function CellRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CellRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    CellRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(CellRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_cellRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CellRefContext.prototype.enterRule = function (listener) {
        if (listener.enterCellRef) {
            listener.enterCellRef(this);
        }
    };
    // @Override
    CellRefContext.prototype.exitRule = function (listener) {
        if (listener.exitCellRef) {
            listener.exitCellRef(this);
        }
    };
    // @Override
    CellRefContext.prototype.accept = function (visitor) {
        if (visitor.visitCellRef) {
            return visitor.visitCellRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CellRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CellRefContext = CellRefContext;
var CelsiusContext = /** @class */ (function (_super) {
    __extends(CelsiusContext, _super);
    function CelsiusContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CelsiusContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(CelsiusContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_celsius; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CelsiusContext.prototype.enterRule = function (listener) {
        if (listener.enterCelsius) {
            listener.enterCelsius(this);
        }
    };
    // @Override
    CelsiusContext.prototype.exitRule = function (listener) {
        if (listener.exitCelsius) {
            listener.exitCelsius(this);
        }
    };
    // @Override
    CelsiusContext.prototype.accept = function (visitor) {
        if (visitor.visitCelsius) {
            return visitor.visitCelsius(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CelsiusContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CelsiusContext = CelsiusContext;
var CenterJustifyContext = /** @class */ (function (_super) {
    __extends(CenterJustifyContext, _super);
    function CenterJustifyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(CenterJustifyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_centerJustify; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CenterJustifyContext.prototype.enterRule = function (listener) {
        if (listener.enterCenterJustify) {
            listener.enterCenterJustify(this);
        }
    };
    // @Override
    CenterJustifyContext.prototype.exitRule = function (listener) {
        if (listener.exitCenterJustify) {
            listener.exitCenterJustify(this);
        }
    };
    // @Override
    CenterJustifyContext.prototype.accept = function (visitor) {
        if (visitor.visitCenterJustify) {
            return visitor.visitCenterJustify(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CenterJustifyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CenterJustifyContext = CenterJustifyContext;
var CharacterEncodingContext = /** @class */ (function (_super) {
    __extends(CharacterEncodingContext, _super);
    function CharacterEncodingContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CharacterEncodingContext.prototype.ascii = function () {
        return this.tryGetRuleContext(0, AsciiContext);
    };
    CharacterEncodingContext.prototype.iso8859 = function () {
        return this.tryGetRuleContext(0, Iso8859Context);
    };
    CharacterEncodingContext.prototype.jisx0201 = function () {
        return this.tryGetRuleContext(0, Jisx0201Context);
    };
    CharacterEncodingContext.prototype.jisx0208 = function () {
        return this.tryGetRuleContext(0, Jisx0208Context);
    };
    Object.defineProperty(CharacterEncodingContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_characterEncoding; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CharacterEncodingContext.prototype.enterRule = function (listener) {
        if (listener.enterCharacterEncoding) {
            listener.enterCharacterEncoding(this);
        }
    };
    // @Override
    CharacterEncodingContext.prototype.exitRule = function (listener) {
        if (listener.exitCharacterEncoding) {
            listener.exitCharacterEncoding(this);
        }
    };
    // @Override
    CharacterEncodingContext.prototype.accept = function (visitor) {
        if (visitor.visitCharacterEncoding) {
            return visitor.visitCharacterEncoding(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CharacterEncodingContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CharacterEncodingContext = CharacterEncodingContext;
var CheckDateContext = /** @class */ (function (_super) {
    __extends(CheckDateContext, _super);
    function CheckDateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CheckDateContext.prototype.date = function () {
        return this.getRuleContext(0, DateContext);
    };
    Object.defineProperty(CheckDateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_checkDate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CheckDateContext.prototype.enterRule = function (listener) {
        if (listener.enterCheckDate) {
            listener.enterCheckDate(this);
        }
    };
    // @Override
    CheckDateContext.prototype.exitRule = function (listener) {
        if (listener.exitCheckDate) {
            listener.exitCheckDate(this);
        }
    };
    // @Override
    CheckDateContext.prototype.accept = function (visitor) {
        if (visitor.visitCheckDate) {
            return visitor.visitCheckDate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CheckDateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CheckDateContext = CheckDateContext;
var CheckDateDisplayContext = /** @class */ (function (_super) {
    __extends(CheckDateDisplayContext, _super);
    function CheckDateDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CheckDateDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    CheckDateDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    CheckDateDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(CheckDateDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_checkDateDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CheckDateDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterCheckDateDisplay) {
            listener.enterCheckDateDisplay(this);
        }
    };
    // @Override
    CheckDateDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitCheckDateDisplay) {
            listener.exitCheckDateDisplay(this);
        }
    };
    // @Override
    CheckDateDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitCheckDateDisplay) {
            return visitor.visitCheckDateDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CheckDateDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CheckDateDisplayContext = CheckDateDisplayContext;
var CircleContext = /** @class */ (function (_super) {
    __extends(CircleContext, _super);
    function CircleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CircleContext.prototype.pt1 = function () {
        return this.getRuleContext(0, Pt1Context);
    };
    CircleContext.prototype.pt2 = function () {
        return this.getRuleContext(0, Pt2Context);
    };
    Object.defineProperty(CircleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_circle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CircleContext.prototype.enterRule = function (listener) {
        if (listener.enterCircle) {
            listener.enterCircle(this);
        }
    };
    // @Override
    CircleContext.prototype.exitRule = function (listener) {
        if (listener.exitCircle) {
            listener.exitCircle(this);
        }
    };
    // @Override
    CircleContext.prototype.accept = function (visitor) {
        if (visitor.visitCircle) {
            return visitor.visitCircle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CircleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CircleContext = CircleContext;
var ClusterContext = /** @class */ (function (_super) {
    __extends(ClusterContext, _super);
    function ClusterContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterContext.prototype.clusterNameDef = function () {
        return this.getRuleContext(0, ClusterNameDefContext);
    };
    ClusterContext.prototype.einterface = function () {
        return this.getRuleContext(0, EinterfaceContext);
    };
    ClusterContext.prototype.clusterHeader = function () {
        return this.getRuleContext(0, ClusterHeaderContext);
    };
    ClusterContext.prototype.schematicSymbol = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSymbolContext);
        }
        else {
            return this.getRuleContext(i, SchematicSymbolContext);
        }
    };
    ClusterContext.prototype.schematicView = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicViewContext);
        }
        else {
            return this.getRuleContext(i, SchematicViewContext);
        }
    };
    ClusterContext.prototype.behaviorView = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BehaviorViewContext);
        }
        else {
            return this.getRuleContext(i, BehaviorViewContext);
        }
    };
    ClusterContext.prototype.clusterConfiguration = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterConfigurationContext);
        }
        else {
            return this.getRuleContext(i, ClusterConfigurationContext);
        }
    };
    ClusterContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ClusterContext.prototype.connectivityView = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityViewContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityViewContext);
        }
    };
    ClusterContext.prototype.defaultClusterConfiguration = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DefaultClusterConfigurationContext);
        }
        else {
            return this.getRuleContext(i, DefaultClusterConfigurationContext);
        }
    };
    ClusterContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    ClusterContext.prototype.logicModelView = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicModelViewContext);
        }
        else {
            return this.getRuleContext(i, LogicModelViewContext);
        }
    };
    ClusterContext.prototype.maskLayoutView = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(MaskLayoutViewContext);
        }
        else {
            return this.getRuleContext(i, MaskLayoutViewContext);
        }
    };
    ClusterContext.prototype.pcbLayoutView = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PcbLayoutViewContext);
        }
        else {
            return this.getRuleContext(i, PcbLayoutViewContext);
        }
    };
    ClusterContext.prototype.symbolicLayoutView = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SymbolicLayoutViewContext);
        }
        else {
            return this.getRuleContext(i, SymbolicLayoutViewContext);
        }
    };
    Object.defineProperty(ClusterContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_cluster; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterContext.prototype.enterRule = function (listener) {
        if (listener.enterCluster) {
            listener.enterCluster(this);
        }
    };
    // @Override
    ClusterContext.prototype.exitRule = function (listener) {
        if (listener.exitCluster) {
            listener.exitCluster(this);
        }
    };
    // @Override
    ClusterContext.prototype.accept = function (visitor) {
        if (visitor.visitCluster) {
            return visitor.visitCluster(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterContext = ClusterContext;
var ClusterConfigurationContext = /** @class */ (function (_super) {
    __extends(ClusterConfigurationContext, _super);
    function ClusterConfigurationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterConfigurationContext.prototype.clusterConfigurationNameDef = function () {
        return this.getRuleContext(0, ClusterConfigurationNameDefContext);
    };
    ClusterConfigurationContext.prototype.viewRef = function () {
        return this.tryGetRuleContext(0, ViewRefContext);
    };
    ClusterConfigurationContext.prototype.leaf = function () {
        return this.tryGetRuleContext(0, LeafContext);
    };
    ClusterConfigurationContext.prototype.unconfigured = function () {
        return this.tryGetRuleContext(0, UnconfiguredContext);
    };
    ClusterConfigurationContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ClusterConfigurationContext.prototype.frameConfiguration = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FrameConfigurationContext);
        }
        else {
            return this.getRuleContext(i, FrameConfigurationContext);
        }
    };
    ClusterConfigurationContext.prototype.globalPortScope = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortScopeContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortScopeContext);
        }
    };
    ClusterConfigurationContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    ClusterConfigurationContext.prototype.instanceConfiguration = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceConfigurationContext);
        }
        else {
            return this.getRuleContext(i, InstanceConfigurationContext);
        }
    };
    ClusterConfigurationContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    ClusterConfigurationContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ClusterConfigurationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterConfiguration; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterConfigurationContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterConfiguration) {
            listener.enterClusterConfiguration(this);
        }
    };
    // @Override
    ClusterConfigurationContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterConfiguration) {
            listener.exitClusterConfiguration(this);
        }
    };
    // @Override
    ClusterConfigurationContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterConfiguration) {
            return visitor.visitClusterConfiguration(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterConfigurationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterConfigurationContext = ClusterConfigurationContext;
var ClusterConfigurationNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(ClusterConfigurationNameCaseSensitiveContext, _super);
    function ClusterConfigurationNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterConfigurationNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(ClusterConfigurationNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterConfigurationNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterConfigurationNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterConfigurationNameCaseSensitive) {
            listener.enterClusterConfigurationNameCaseSensitive(this);
        }
    };
    // @Override
    ClusterConfigurationNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterConfigurationNameCaseSensitive) {
            listener.exitClusterConfigurationNameCaseSensitive(this);
        }
    };
    // @Override
    ClusterConfigurationNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterConfigurationNameCaseSensitive) {
            return visitor.visitClusterConfigurationNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterConfigurationNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterConfigurationNameCaseSensitiveContext = ClusterConfigurationNameCaseSensitiveContext;
var ClusterConfigurationNameDefContext = /** @class */ (function (_super) {
    __extends(ClusterConfigurationNameDefContext, _super);
    function ClusterConfigurationNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterConfigurationNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(ClusterConfigurationNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterConfigurationNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterConfigurationNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterConfigurationNameDef) {
            listener.enterClusterConfigurationNameDef(this);
        }
    };
    // @Override
    ClusterConfigurationNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterConfigurationNameDef) {
            listener.exitClusterConfigurationNameDef(this);
        }
    };
    // @Override
    ClusterConfigurationNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterConfigurationNameDef) {
            return visitor.visitClusterConfigurationNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterConfigurationNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterConfigurationNameDefContext = ClusterConfigurationNameDefContext;
var ClusterConfigurationNameRefContext = /** @class */ (function (_super) {
    __extends(ClusterConfigurationNameRefContext, _super);
    function ClusterConfigurationNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterConfigurationNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(ClusterConfigurationNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterConfigurationNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterConfigurationNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterConfigurationNameRef) {
            listener.enterClusterConfigurationNameRef(this);
        }
    };
    // @Override
    ClusterConfigurationNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterConfigurationNameRef) {
            listener.exitClusterConfigurationNameRef(this);
        }
    };
    // @Override
    ClusterConfigurationNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterConfigurationNameRef) {
            return visitor.visitClusterConfigurationNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterConfigurationNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterConfigurationNameRefContext = ClusterConfigurationNameRefContext;
var ClusterConfigurationRefContext = /** @class */ (function (_super) {
    __extends(ClusterConfigurationRefContext, _super);
    function ClusterConfigurationRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterConfigurationRefContext.prototype.clusterConfigurationNameRef = function () {
        return this.getRuleContext(0, ClusterConfigurationNameRefContext);
    };
    Object.defineProperty(ClusterConfigurationRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterConfigurationRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterConfigurationRefContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterConfigurationRef) {
            listener.enterClusterConfigurationRef(this);
        }
    };
    // @Override
    ClusterConfigurationRefContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterConfigurationRef) {
            listener.exitClusterConfigurationRef(this);
        }
    };
    // @Override
    ClusterConfigurationRefContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterConfigurationRef) {
            return visitor.visitClusterConfigurationRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterConfigurationRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterConfigurationRefContext = ClusterConfigurationRefContext;
var ClusterHeaderContext = /** @class */ (function (_super) {
    __extends(ClusterHeaderContext, _super);
    function ClusterHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    ClusterHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    ClusterHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    ClusterHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(ClusterHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterHeader) {
            listener.enterClusterHeader(this);
        }
    };
    // @Override
    ClusterHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterHeader) {
            listener.exitClusterHeader(this);
        }
    };
    // @Override
    ClusterHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterHeader) {
            return visitor.visitClusterHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterHeaderContext = ClusterHeaderContext;
var ClusterNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(ClusterNameCaseSensitiveContext, _super);
    function ClusterNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(ClusterNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterNameCaseSensitive) {
            listener.enterClusterNameCaseSensitive(this);
        }
    };
    // @Override
    ClusterNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterNameCaseSensitive) {
            listener.exitClusterNameCaseSensitive(this);
        }
    };
    // @Override
    ClusterNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterNameCaseSensitive) {
            return visitor.visitClusterNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterNameCaseSensitiveContext = ClusterNameCaseSensitiveContext;
var ClusterNameDefContext = /** @class */ (function (_super) {
    __extends(ClusterNameDefContext, _super);
    function ClusterNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(ClusterNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterNameDef) {
            listener.enterClusterNameDef(this);
        }
    };
    // @Override
    ClusterNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterNameDef) {
            listener.exitClusterNameDef(this);
        }
    };
    // @Override
    ClusterNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterNameDef) {
            return visitor.visitClusterNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterNameDefContext = ClusterNameDefContext;
var ClusterNameRefContext = /** @class */ (function (_super) {
    __extends(ClusterNameRefContext, _super);
    function ClusterNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(ClusterNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterNameRef) {
            listener.enterClusterNameRef(this);
        }
    };
    // @Override
    ClusterNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterNameRef) {
            listener.exitClusterNameRef(this);
        }
    };
    // @Override
    ClusterNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterNameRef) {
            return visitor.visitClusterNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterNameRefContext = ClusterNameRefContext;
var ClusterPropertyDisplayContext = /** @class */ (function (_super) {
    __extends(ClusterPropertyDisplayContext, _super);
    function ClusterPropertyDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterPropertyDisplayContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    ClusterPropertyDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    ClusterPropertyDisplayContext.prototype.propertyNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyNameDisplayContext);
        }
    };
    Object.defineProperty(ClusterPropertyDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterPropertyDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterPropertyDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterPropertyDisplay) {
            listener.enterClusterPropertyDisplay(this);
        }
    };
    // @Override
    ClusterPropertyDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterPropertyDisplay) {
            listener.exitClusterPropertyDisplay(this);
        }
    };
    // @Override
    ClusterPropertyDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterPropertyDisplay) {
            return visitor.visitClusterPropertyDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterPropertyDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterPropertyDisplayContext = ClusterPropertyDisplayContext;
var ClusterPropertyDisplayOverrideContext = /** @class */ (function (_super) {
    __extends(ClusterPropertyDisplayOverrideContext, _super);
    function ClusterPropertyDisplayOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterPropertyDisplayOverrideContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    ClusterPropertyDisplayOverrideContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    ClusterPropertyDisplayOverrideContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    ClusterPropertyDisplayOverrideContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    ClusterPropertyDisplayOverrideContext.prototype.propertyNameDisplay = function () {
        return this.tryGetRuleContext(0, PropertyNameDisplayContext);
    };
    Object.defineProperty(ClusterPropertyDisplayOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterPropertyDisplayOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterPropertyDisplayOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterPropertyDisplayOverride) {
            listener.enterClusterPropertyDisplayOverride(this);
        }
    };
    // @Override
    ClusterPropertyDisplayOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterPropertyDisplayOverride) {
            listener.exitClusterPropertyDisplayOverride(this);
        }
    };
    // @Override
    ClusterPropertyDisplayOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterPropertyDisplayOverride) {
            return visitor.visitClusterPropertyDisplayOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterPropertyDisplayOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterPropertyDisplayOverrideContext = ClusterPropertyDisplayOverrideContext;
var ClusterPropertyOverrideContext = /** @class */ (function (_super) {
    __extends(ClusterPropertyOverrideContext, _super);
    function ClusterPropertyOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterPropertyOverrideContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    ClusterPropertyOverrideContext.prototype.typedValue = function () {
        return this.tryGetRuleContext(0, TypedValueContext);
    };
    ClusterPropertyOverrideContext.prototype.untyped = function () {
        return this.tryGetRuleContext(0, UntypedContext);
    };
    ClusterPropertyOverrideContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ClusterPropertyOverrideContext.prototype.fixed = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FixedContext);
        }
        else {
            return this.getRuleContext(i, FixedContext);
        }
    };
    ClusterPropertyOverrideContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(ClusterPropertyOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterPropertyOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterPropertyOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterPropertyOverride) {
            listener.enterClusterPropertyOverride(this);
        }
    };
    // @Override
    ClusterPropertyOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterPropertyOverride) {
            listener.exitClusterPropertyOverride(this);
        }
    };
    // @Override
    ClusterPropertyOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterPropertyOverride) {
            return visitor.visitClusterPropertyOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterPropertyOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterPropertyOverrideContext = ClusterPropertyOverrideContext;
var ClusterRefContext = /** @class */ (function (_super) {
    __extends(ClusterRefContext, _super);
    function ClusterRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ClusterRefContext.prototype.clusterNameRef = function () {
        return this.getRuleContext(0, ClusterNameRefContext);
    };
    ClusterRefContext.prototype.cellRef = function () {
        return this.tryGetRuleContext(0, CellRefContext);
    };
    Object.defineProperty(ClusterRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_clusterRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ClusterRefContext.prototype.enterRule = function (listener) {
        if (listener.enterClusterRef) {
            listener.enterClusterRef(this);
        }
    };
    // @Override
    ClusterRefContext.prototype.exitRule = function (listener) {
        if (listener.exitClusterRef) {
            listener.exitClusterRef(this);
        }
    };
    // @Override
    ClusterRefContext.prototype.accept = function (visitor) {
        if (visitor.visitClusterRef) {
            return visitor.visitClusterRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ClusterRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ClusterRefContext = ClusterRefContext;
var ColorContext = /** @class */ (function (_super) {
    __extends(ColorContext, _super);
    function ColorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ColorContext.prototype.red = function () {
        return this.getRuleContext(0, RedContext);
    };
    ColorContext.prototype.green = function () {
        return this.getRuleContext(0, GreenContext);
    };
    ColorContext.prototype.blue = function () {
        return this.getRuleContext(0, BlueContext);
    };
    Object.defineProperty(ColorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_color; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ColorContext.prototype.enterRule = function (listener) {
        if (listener.enterColor) {
            listener.enterColor(this);
        }
    };
    // @Override
    ColorContext.prototype.exitRule = function (listener) {
        if (listener.exitColor) {
            listener.exitColor(this);
        }
    };
    // @Override
    ColorContext.prototype.accept = function (visitor) {
        if (visitor.visitColor) {
            return visitor.visitColor(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ColorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ColorContext = ColorContext;
var CommentContext = /** @class */ (function (_super) {
    __extends(CommentContext, _super);
    function CommentContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CommentContext.prototype.stringToken = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringTokenContext);
        }
        else {
            return this.getRuleContext(i, StringTokenContext);
        }
    };
    Object.defineProperty(CommentContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_comment; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CommentContext.prototype.enterRule = function (listener) {
        if (listener.enterComment) {
            listener.enterComment(this);
        }
    };
    // @Override
    CommentContext.prototype.exitRule = function (listener) {
        if (listener.exitComment) {
            listener.exitComment(this);
        }
    };
    // @Override
    CommentContext.prototype.accept = function (visitor) {
        if (visitor.visitComment) {
            return visitor.visitComment(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CommentContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CommentContext = CommentContext;
var CommentGraphicsContext = /** @class */ (function (_super) {
    __extends(CommentGraphicsContext, _super);
    function CommentGraphicsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CommentGraphicsContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    CommentGraphicsContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    CommentGraphicsContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    CommentGraphicsContext.prototype.originalBoundingBox = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OriginalBoundingBoxContext);
        }
        else {
            return this.getRuleContext(i, OriginalBoundingBoxContext);
        }
    };
    CommentGraphicsContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    CommentGraphicsContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(CommentGraphicsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_commentGraphics; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CommentGraphicsContext.prototype.enterRule = function (listener) {
        if (listener.enterCommentGraphics) {
            listener.enterCommentGraphics(this);
        }
    };
    // @Override
    CommentGraphicsContext.prototype.exitRule = function (listener) {
        if (listener.exitCommentGraphics) {
            listener.exitCommentGraphics(this);
        }
    };
    // @Override
    CommentGraphicsContext.prototype.accept = function (visitor) {
        if (visitor.visitCommentGraphics) {
            return visitor.visitCommentGraphics(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CommentGraphicsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CommentGraphicsContext = CommentGraphicsContext;
var CompanyNameContext = /** @class */ (function (_super) {
    __extends(CompanyNameContext, _super);
    function CompanyNameContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CompanyNameContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(CompanyNameContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_companyName; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CompanyNameContext.prototype.enterRule = function (listener) {
        if (listener.enterCompanyName) {
            listener.enterCompanyName(this);
        }
    };
    // @Override
    CompanyNameContext.prototype.exitRule = function (listener) {
        if (listener.exitCompanyName) {
            listener.exitCompanyName(this);
        }
    };
    // @Override
    CompanyNameContext.prototype.accept = function (visitor) {
        if (visitor.visitCompanyName) {
            return visitor.visitCompanyName(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CompanyNameContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CompanyNameContext = CompanyNameContext;
var CompanyNameDisplayContext = /** @class */ (function (_super) {
    __extends(CompanyNameDisplayContext, _super);
    function CompanyNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CompanyNameDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    CompanyNameDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    CompanyNameDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(CompanyNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_companyNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CompanyNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterCompanyNameDisplay) {
            listener.enterCompanyNameDisplay(this);
        }
    };
    // @Override
    CompanyNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitCompanyNameDisplay) {
            listener.exitCompanyNameDisplay(this);
        }
    };
    // @Override
    CompanyNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitCompanyNameDisplay) {
            return visitor.visitCompanyNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CompanyNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CompanyNameDisplayContext = CompanyNameDisplayContext;
var ComplementedNameContext = /** @class */ (function (_super) {
    __extends(ComplementedNameContext, _super);
    function ComplementedNameContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ComplementedNameContext.prototype.complementedNamePart = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ComplementedNamePartContext);
        }
        else {
            return this.getRuleContext(i, ComplementedNamePartContext);
        }
    };
    ComplementedNameContext.prototype.nameDimension = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameDimensionContext);
        }
        else {
            return this.getRuleContext(i, NameDimensionContext);
        }
    };
    ComplementedNameContext.prototype.namePartSeparator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NamePartSeparatorContext);
        }
        else {
            return this.getRuleContext(i, NamePartSeparatorContext);
        }
    };
    ComplementedNameContext.prototype.simpleName = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SimpleNameContext);
        }
        else {
            return this.getRuleContext(i, SimpleNameContext);
        }
    };
    Object.defineProperty(ComplementedNameContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_complementedName; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ComplementedNameContext.prototype.enterRule = function (listener) {
        if (listener.enterComplementedName) {
            listener.enterComplementedName(this);
        }
    };
    // @Override
    ComplementedNameContext.prototype.exitRule = function (listener) {
        if (listener.exitComplementedName) {
            listener.exitComplementedName(this);
        }
    };
    // @Override
    ComplementedNameContext.prototype.accept = function (visitor) {
        if (visitor.visitComplementedName) {
            return visitor.visitComplementedName(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ComplementedNameContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ComplementedNameContext = ComplementedNameContext;
var ComplementedNamePartContext = /** @class */ (function (_super) {
    __extends(ComplementedNamePartContext, _super);
    function ComplementedNamePartContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ComplementedNamePartContext.prototype.complementedNamePart = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ComplementedNamePartContext);
        }
        else {
            return this.getRuleContext(i, ComplementedNamePartContext);
        }
    };
    ComplementedNamePartContext.prototype.namePartSeparator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NamePartSeparatorContext);
        }
        else {
            return this.getRuleContext(i, NamePartSeparatorContext);
        }
    };
    ComplementedNamePartContext.prototype.simpleName = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SimpleNameContext);
        }
        else {
            return this.getRuleContext(i, SimpleNameContext);
        }
    };
    Object.defineProperty(ComplementedNamePartContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_complementedNamePart; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ComplementedNamePartContext.prototype.enterRule = function (listener) {
        if (listener.enterComplementedNamePart) {
            listener.enterComplementedNamePart(this);
        }
    };
    // @Override
    ComplementedNamePartContext.prototype.exitRule = function (listener) {
        if (listener.exitComplementedNamePart) {
            listener.exitComplementedNamePart(this);
        }
    };
    // @Override
    ComplementedNamePartContext.prototype.accept = function (visitor) {
        if (visitor.visitComplementedNamePart) {
            return visitor.visitComplementedNamePart(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ComplementedNamePartContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ComplementedNamePartContext = ComplementedNamePartContext;
var ComplexGeometryContext = /** @class */ (function (_super) {
    __extends(ComplexGeometryContext, _super);
    function ComplexGeometryContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ComplexGeometryContext.prototype.geometryMacroRef = function () {
        return this.getRuleContext(0, GeometryMacroRefContext);
    };
    ComplexGeometryContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    Object.defineProperty(ComplexGeometryContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_complexGeometry; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ComplexGeometryContext.prototype.enterRule = function (listener) {
        if (listener.enterComplexGeometry) {
            listener.enterComplexGeometry(this);
        }
    };
    // @Override
    ComplexGeometryContext.prototype.exitRule = function (listener) {
        if (listener.exitComplexGeometry) {
            listener.exitComplexGeometry(this);
        }
    };
    // @Override
    ComplexGeometryContext.prototype.accept = function (visitor) {
        if (visitor.visitComplexGeometry) {
            return visitor.visitComplexGeometry(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ComplexGeometryContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ComplexGeometryContext = ComplexGeometryContext;
var ComplexNameContext = /** @class */ (function (_super) {
    __extends(ComplexNameContext, _super);
    function ComplexNameContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ComplexNameContext.prototype.complementedNamePart = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ComplementedNamePartContext);
        }
        else {
            return this.getRuleContext(i, ComplementedNamePartContext);
        }
    };
    ComplexNameContext.prototype.nameDimension = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameDimensionContext);
        }
        else {
            return this.getRuleContext(i, NameDimensionContext);
        }
    };
    ComplexNameContext.prototype.namePartSeparator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NamePartSeparatorContext);
        }
        else {
            return this.getRuleContext(i, NamePartSeparatorContext);
        }
    };
    ComplexNameContext.prototype.simpleName = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SimpleNameContext);
        }
        else {
            return this.getRuleContext(i, SimpleNameContext);
        }
    };
    Object.defineProperty(ComplexNameContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_complexName; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ComplexNameContext.prototype.enterRule = function (listener) {
        if (listener.enterComplexName) {
            listener.enterComplexName(this);
        }
    };
    // @Override
    ComplexNameContext.prototype.exitRule = function (listener) {
        if (listener.exitComplexName) {
            listener.exitComplexName(this);
        }
    };
    // @Override
    ComplexNameContext.prototype.accept = function (visitor) {
        if (visitor.visitComplexName) {
            return visitor.visitComplexName(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ComplexNameContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ComplexNameContext = ComplexNameContext;
var CompoundContext = /** @class */ (function (_super) {
    __extends(CompoundContext, _super);
    function CompoundContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CompoundContext.prototype.logicNameRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicNameRefContext);
        }
        else {
            return this.getRuleContext(i, LogicNameRefContext);
        }
    };
    Object.defineProperty(CompoundContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_compound; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CompoundContext.prototype.enterRule = function (listener) {
        if (listener.enterCompound) {
            listener.enterCompound(this);
        }
    };
    // @Override
    CompoundContext.prototype.exitRule = function (listener) {
        if (listener.exitCompound) {
            listener.exitCompound(this);
        }
    };
    // @Override
    CompoundContext.prototype.accept = function (visitor) {
        if (visitor.visitCompound) {
            return visitor.visitCompound(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CompoundContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CompoundContext = CompoundContext;
var ConditionContext = /** @class */ (function (_super) {
    __extends(ConditionContext, _super);
    function ConditionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConditionContext.prototype.booleanExpression = function () {
        return this.getRuleContext(0, BooleanExpressionContext);
    };
    Object.defineProperty(ConditionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_condition; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConditionContext.prototype.enterRule = function (listener) {
        if (listener.enterCondition) {
            listener.enterCondition(this);
        }
    };
    // @Override
    ConditionContext.prototype.exitRule = function (listener) {
        if (listener.exitCondition) {
            listener.exitCondition(this);
        }
    };
    // @Override
    ConditionContext.prototype.accept = function (visitor) {
        if (visitor.visitCondition) {
            return visitor.visitCondition(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConditionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConditionContext = ConditionContext;
var ConditionDisplayContext = /** @class */ (function (_super) {
    __extends(ConditionDisplayContext, _super);
    function ConditionDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConditionDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    ConditionDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    ConditionDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(ConditionDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_conditionDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConditionDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterConditionDisplay) {
            listener.enterConditionDisplay(this);
        }
    };
    // @Override
    ConditionDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitConditionDisplay) {
            listener.exitConditionDisplay(this);
        }
    };
    // @Override
    ConditionDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitConditionDisplay) {
            return visitor.visitConditionDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConditionDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConditionDisplayContext = ConditionDisplayContext;
var ConnectedSignalIndexGeneratorContext = /** @class */ (function (_super) {
    __extends(ConnectedSignalIndexGeneratorContext, _super);
    function ConnectedSignalIndexGeneratorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectedSignalIndexGeneratorContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(ConnectedSignalIndexGeneratorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectedSignalIndexGenerator; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectedSignalIndexGeneratorContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectedSignalIndexGenerator) {
            listener.enterConnectedSignalIndexGenerator(this);
        }
    };
    // @Override
    ConnectedSignalIndexGeneratorContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectedSignalIndexGenerator) {
            listener.exitConnectedSignalIndexGenerator(this);
        }
    };
    // @Override
    ConnectedSignalIndexGeneratorContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectedSignalIndexGenerator) {
            return visitor.visitConnectedSignalIndexGenerator(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectedSignalIndexGeneratorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectedSignalIndexGeneratorContext = ConnectedSignalIndexGeneratorContext;
var ConnectedSignalIndexGeneratorDisplayContext = /** @class */ (function (_super) {
    __extends(ConnectedSignalIndexGeneratorDisplayContext, _super);
    function ConnectedSignalIndexGeneratorDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectedSignalIndexGeneratorDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    ConnectedSignalIndexGeneratorDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    ConnectedSignalIndexGeneratorDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(ConnectedSignalIndexGeneratorDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectedSignalIndexGeneratorDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectedSignalIndexGeneratorDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectedSignalIndexGeneratorDisplay) {
            listener.enterConnectedSignalIndexGeneratorDisplay(this);
        }
    };
    // @Override
    ConnectedSignalIndexGeneratorDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectedSignalIndexGeneratorDisplay) {
            listener.exitConnectedSignalIndexGeneratorDisplay(this);
        }
    };
    // @Override
    ConnectedSignalIndexGeneratorDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectedSignalIndexGeneratorDisplay) {
            return visitor.visitConnectedSignalIndexGeneratorDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectedSignalIndexGeneratorDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectedSignalIndexGeneratorDisplayContext = ConnectedSignalIndexGeneratorDisplayContext;
var ConnectivityBusContext = /** @class */ (function (_super) {
    __extends(ConnectivityBusContext, _super);
    function ConnectivityBusContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityBusContext.prototype.interconnectNameDef = function () {
        return this.getRuleContext(0, InterconnectNameDefContext);
    };
    ConnectivityBusContext.prototype.signalGroupRef = function () {
        return this.getRuleContext(0, SignalGroupRefContext);
    };
    ConnectivityBusContext.prototype.interconnectHeader = function () {
        return this.getRuleContext(0, InterconnectHeaderContext);
    };
    ConnectivityBusContext.prototype.connectivityBusJoined = function () {
        return this.getRuleContext(0, ConnectivityBusJoinedContext);
    };
    ConnectivityBusContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ConnectivityBusContext.prototype.connectivityBusSlice = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityBusSliceContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityBusSliceContext);
        }
    };
    ConnectivityBusContext.prototype.connectivitySubBus = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivitySubBusContext);
        }
        else {
            return this.getRuleContext(i, ConnectivitySubBusContext);
        }
    };
    ConnectivityBusContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ConnectivityBusContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityBus; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityBusContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityBus) {
            listener.enterConnectivityBus(this);
        }
    };
    // @Override
    ConnectivityBusContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityBus) {
            listener.exitConnectivityBus(this);
        }
    };
    // @Override
    ConnectivityBusContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityBus) {
            return visitor.visitConnectivityBus(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityBusContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityBusContext = ConnectivityBusContext;
var ConnectivityBusJoinedContext = /** @class */ (function (_super) {
    __extends(ConnectivityBusJoinedContext, _super);
    function ConnectivityBusJoinedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityBusJoinedContext.prototype.portJoined = function () {
        return this.getRuleContext(0, PortJoinedContext);
    };
    ConnectivityBusJoinedContext.prototype.connectivityRipperRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityRipperRefContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityRipperRefContext);
        }
    };
    Object.defineProperty(ConnectivityBusJoinedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityBusJoined; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityBusJoinedContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityBusJoined) {
            listener.enterConnectivityBusJoined(this);
        }
    };
    // @Override
    ConnectivityBusJoinedContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityBusJoined) {
            listener.exitConnectivityBusJoined(this);
        }
    };
    // @Override
    ConnectivityBusJoinedContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityBusJoined) {
            return visitor.visitConnectivityBusJoined(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityBusJoinedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityBusJoinedContext = ConnectivityBusJoinedContext;
var ConnectivityBusSliceContext = /** @class */ (function (_super) {
    __extends(ConnectivityBusSliceContext, _super);
    function ConnectivityBusSliceContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityBusSliceContext.prototype.interconnectNameDef = function () {
        return this.getRuleContext(0, InterconnectNameDefContext);
    };
    ConnectivityBusSliceContext.prototype.signalGroupRef = function () {
        return this.getRuleContext(0, SignalGroupRefContext);
    };
    ConnectivityBusSliceContext.prototype.interconnectHeader = function () {
        return this.getRuleContext(0, InterconnectHeaderContext);
    };
    ConnectivityBusSliceContext.prototype.connectivityBusJoined = function () {
        return this.getRuleContext(0, ConnectivityBusJoinedContext);
    };
    ConnectivityBusSliceContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ConnectivityBusSliceContext.prototype.connectivityBusSlice = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityBusSliceContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityBusSliceContext);
        }
    };
    ConnectivityBusSliceContext.prototype.connectivitySubBus = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivitySubBusContext);
        }
        else {
            return this.getRuleContext(i, ConnectivitySubBusContext);
        }
    };
    ConnectivityBusSliceContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ConnectivityBusSliceContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityBusSlice; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityBusSliceContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityBusSlice) {
            listener.enterConnectivityBusSlice(this);
        }
    };
    // @Override
    ConnectivityBusSliceContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityBusSlice) {
            listener.exitConnectivityBusSlice(this);
        }
    };
    // @Override
    ConnectivityBusSliceContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityBusSlice) {
            return visitor.visitConnectivityBusSlice(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityBusSliceContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityBusSliceContext = ConnectivityBusSliceContext;
var ConnectivityFrameStructureContext = /** @class */ (function (_super) {
    __extends(ConnectivityFrameStructureContext, _super);
    function ConnectivityFrameStructureContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityFrameStructureContext.prototype.connectivityFrameStructureNameDef = function () {
        return this.getRuleContext(0, ConnectivityFrameStructureNameDefContext);
    };
    ConnectivityFrameStructureContext.prototype.frameRef = function () {
        return this.getRuleContext(0, FrameRefContext);
    };
    ConnectivityFrameStructureContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ConnectivityFrameStructureContext.prototype.connectivityBus = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityBusContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityBusContext);
        }
    };
    ConnectivityFrameStructureContext.prototype.connectivityFrameStructure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityFrameStructureContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityFrameStructureContext);
        }
    };
    ConnectivityFrameStructureContext.prototype.connectivityNet = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityNetContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityNetContext);
        }
    };
    ConnectivityFrameStructureContext.prototype.connectivityRipper = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityRipperContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityRipperContext);
        }
    };
    ConnectivityFrameStructureContext.prototype.timing = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TimingContext);
        }
        else {
            return this.getRuleContext(i, TimingContext);
        }
    };
    ConnectivityFrameStructureContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ConnectivityFrameStructureContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityFrameStructure; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityFrameStructureContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityFrameStructure) {
            listener.enterConnectivityFrameStructure(this);
        }
    };
    // @Override
    ConnectivityFrameStructureContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityFrameStructure) {
            listener.exitConnectivityFrameStructure(this);
        }
    };
    // @Override
    ConnectivityFrameStructureContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityFrameStructure) {
            return visitor.visitConnectivityFrameStructure(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityFrameStructureContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityFrameStructureContext = ConnectivityFrameStructureContext;
var ConnectivityFrameStructureNameDefContext = /** @class */ (function (_super) {
    __extends(ConnectivityFrameStructureNameDefContext, _super);
    function ConnectivityFrameStructureNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityFrameStructureNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(ConnectivityFrameStructureNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityFrameStructureNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityFrameStructureNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityFrameStructureNameDef) {
            listener.enterConnectivityFrameStructureNameDef(this);
        }
    };
    // @Override
    ConnectivityFrameStructureNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityFrameStructureNameDef) {
            listener.exitConnectivityFrameStructureNameDef(this);
        }
    };
    // @Override
    ConnectivityFrameStructureNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityFrameStructureNameDef) {
            return visitor.visitConnectivityFrameStructureNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityFrameStructureNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityFrameStructureNameDefContext = ConnectivityFrameStructureNameDefContext;
var ConnectivityNetContext = /** @class */ (function (_super) {
    __extends(ConnectivityNetContext, _super);
    function ConnectivityNetContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityNetContext.prototype.interconnectNameDef = function () {
        return this.getRuleContext(0, InterconnectNameDefContext);
    };
    ConnectivityNetContext.prototype.signalRef = function () {
        return this.getRuleContext(0, SignalRefContext);
    };
    ConnectivityNetContext.prototype.interconnectHeader = function () {
        return this.getRuleContext(0, InterconnectHeaderContext);
    };
    ConnectivityNetContext.prototype.connectivityNetJoined = function () {
        return this.getRuleContext(0, ConnectivityNetJoinedContext);
    };
    ConnectivityNetContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ConnectivityNetContext.prototype.connectivitySubNet = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivitySubNetContext);
        }
        else {
            return this.getRuleContext(i, ConnectivitySubNetContext);
        }
    };
    ConnectivityNetContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ConnectivityNetContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityNet; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityNetContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityNet) {
            listener.enterConnectivityNet(this);
        }
    };
    // @Override
    ConnectivityNetContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityNet) {
            listener.exitConnectivityNet(this);
        }
    };
    // @Override
    ConnectivityNetContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityNet) {
            return visitor.visitConnectivityNet(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityNetContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityNetContext = ConnectivityNetContext;
var ConnectivityNetJoinedContext = /** @class */ (function (_super) {
    __extends(ConnectivityNetJoinedContext, _super);
    function ConnectivityNetJoinedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityNetJoinedContext.prototype.portJoined = function () {
        return this.tryGetRuleContext(0, PortJoinedContext);
    };
    ConnectivityNetJoinedContext.prototype.joinedAsSignal = function () {
        return this.tryGetRuleContext(0, JoinedAsSignalContext);
    };
    ConnectivityNetJoinedContext.prototype.connectivityRipperRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityRipperRefContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityRipperRefContext);
        }
    };
    Object.defineProperty(ConnectivityNetJoinedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityNetJoined; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityNetJoinedContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityNetJoined) {
            listener.enterConnectivityNetJoined(this);
        }
    };
    // @Override
    ConnectivityNetJoinedContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityNetJoined) {
            listener.exitConnectivityNetJoined(this);
        }
    };
    // @Override
    ConnectivityNetJoinedContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityNetJoined) {
            return visitor.visitConnectivityNetJoined(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityNetJoinedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityNetJoinedContext = ConnectivityNetJoinedContext;
var ConnectivityRipperContext = /** @class */ (function (_super) {
    __extends(ConnectivityRipperContext, _super);
    function ConnectivityRipperContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityRipperContext.prototype.connectivityRipperNameDef = function () {
        return this.getRuleContext(0, ConnectivityRipperNameDefContext);
    };
    Object.defineProperty(ConnectivityRipperContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityRipper; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityRipperContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityRipper) {
            listener.enterConnectivityRipper(this);
        }
    };
    // @Override
    ConnectivityRipperContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityRipper) {
            listener.exitConnectivityRipper(this);
        }
    };
    // @Override
    ConnectivityRipperContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityRipper) {
            return visitor.visitConnectivityRipper(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityRipperContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityRipperContext = ConnectivityRipperContext;
var ConnectivityRipperNameDefContext = /** @class */ (function (_super) {
    __extends(ConnectivityRipperNameDefContext, _super);
    function ConnectivityRipperNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityRipperNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(ConnectivityRipperNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityRipperNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityRipperNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityRipperNameDef) {
            listener.enterConnectivityRipperNameDef(this);
        }
    };
    // @Override
    ConnectivityRipperNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityRipperNameDef) {
            listener.exitConnectivityRipperNameDef(this);
        }
    };
    // @Override
    ConnectivityRipperNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityRipperNameDef) {
            return visitor.visitConnectivityRipperNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityRipperNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityRipperNameDefContext = ConnectivityRipperNameDefContext;
var ConnectivityRipperNameRefContext = /** @class */ (function (_super) {
    __extends(ConnectivityRipperNameRefContext, _super);
    function ConnectivityRipperNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityRipperNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(ConnectivityRipperNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityRipperNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityRipperNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityRipperNameRef) {
            listener.enterConnectivityRipperNameRef(this);
        }
    };
    // @Override
    ConnectivityRipperNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityRipperNameRef) {
            listener.exitConnectivityRipperNameRef(this);
        }
    };
    // @Override
    ConnectivityRipperNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityRipperNameRef) {
            return visitor.visitConnectivityRipperNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityRipperNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityRipperNameRefContext = ConnectivityRipperNameRefContext;
var ConnectivityRipperRefContext = /** @class */ (function (_super) {
    __extends(ConnectivityRipperRefContext, _super);
    function ConnectivityRipperRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityRipperRefContext.prototype.connectivityRipperNameRef = function () {
        return this.getRuleContext(0, ConnectivityRipperNameRefContext);
    };
    Object.defineProperty(ConnectivityRipperRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityRipperRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityRipperRefContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityRipperRef) {
            listener.enterConnectivityRipperRef(this);
        }
    };
    // @Override
    ConnectivityRipperRefContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityRipperRef) {
            listener.exitConnectivityRipperRef(this);
        }
    };
    // @Override
    ConnectivityRipperRefContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityRipperRef) {
            return visitor.visitConnectivityRipperRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityRipperRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityRipperRefContext = ConnectivityRipperRefContext;
var ConnectivityStructureContext = /** @class */ (function (_super) {
    __extends(ConnectivityStructureContext, _super);
    function ConnectivityStructureContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityStructureContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ConnectivityStructureContext.prototype.connectivityBus = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityBusContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityBusContext);
        }
    };
    ConnectivityStructureContext.prototype.connectivityFrameStructure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityFrameStructureContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityFrameStructureContext);
        }
    };
    ConnectivityStructureContext.prototype.connectivityNet = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityNetContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityNetContext);
        }
    };
    ConnectivityStructureContext.prototype.connectivityRipper = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityRipperContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityRipperContext);
        }
    };
    ConnectivityStructureContext.prototype.localPortGroup = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LocalPortGroupContext);
        }
        else {
            return this.getRuleContext(i, LocalPortGroupContext);
        }
    };
    ConnectivityStructureContext.prototype.timing = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TimingContext);
        }
        else {
            return this.getRuleContext(i, TimingContext);
        }
    };
    ConnectivityStructureContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ConnectivityStructureContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityStructure; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityStructureContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityStructure) {
            listener.enterConnectivityStructure(this);
        }
    };
    // @Override
    ConnectivityStructureContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityStructure) {
            listener.exitConnectivityStructure(this);
        }
    };
    // @Override
    ConnectivityStructureContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityStructure) {
            return visitor.visitConnectivityStructure(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityStructureContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityStructureContext = ConnectivityStructureContext;
var ConnectivitySubBusContext = /** @class */ (function (_super) {
    __extends(ConnectivitySubBusContext, _super);
    function ConnectivitySubBusContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivitySubBusContext.prototype.interconnectNameDef = function () {
        return this.getRuleContext(0, InterconnectNameDefContext);
    };
    ConnectivitySubBusContext.prototype.interconnectHeader = function () {
        return this.getRuleContext(0, InterconnectHeaderContext);
    };
    ConnectivitySubBusContext.prototype.connectivityBusJoined = function () {
        return this.getRuleContext(0, ConnectivityBusJoinedContext);
    };
    ConnectivitySubBusContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ConnectivitySubBusContext.prototype.connectivityBusSlice = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityBusSliceContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityBusSliceContext);
        }
    };
    ConnectivitySubBusContext.prototype.connectivitySubBus = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivitySubBusContext);
        }
        else {
            return this.getRuleContext(i, ConnectivitySubBusContext);
        }
    };
    ConnectivitySubBusContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ConnectivitySubBusContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivitySubBus; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivitySubBusContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivitySubBus) {
            listener.enterConnectivitySubBus(this);
        }
    };
    // @Override
    ConnectivitySubBusContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivitySubBus) {
            listener.exitConnectivitySubBus(this);
        }
    };
    // @Override
    ConnectivitySubBusContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivitySubBus) {
            return visitor.visitConnectivitySubBus(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivitySubBusContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivitySubBusContext = ConnectivitySubBusContext;
var ConnectivitySubNetContext = /** @class */ (function (_super) {
    __extends(ConnectivitySubNetContext, _super);
    function ConnectivitySubNetContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivitySubNetContext.prototype.interconnectNameDef = function () {
        return this.getRuleContext(0, InterconnectNameDefContext);
    };
    ConnectivitySubNetContext.prototype.interconnectHeader = function () {
        return this.getRuleContext(0, InterconnectHeaderContext);
    };
    ConnectivitySubNetContext.prototype.connectivityNetJoined = function () {
        return this.getRuleContext(0, ConnectivityNetJoinedContext);
    };
    ConnectivitySubNetContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ConnectivitySubNetContext.prototype.connectivitySubNet = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivitySubNetContext);
        }
        else {
            return this.getRuleContext(i, ConnectivitySubNetContext);
        }
    };
    ConnectivitySubNetContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ConnectivitySubNetContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivitySubNet; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivitySubNetContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivitySubNet) {
            listener.enterConnectivitySubNet(this);
        }
    };
    // @Override
    ConnectivitySubNetContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivitySubNet) {
            listener.exitConnectivitySubNet(this);
        }
    };
    // @Override
    ConnectivitySubNetContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivitySubNet) {
            return visitor.visitConnectivitySubNet(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivitySubNetContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivitySubNetContext = ConnectivitySubNetContext;
var ConnectivityTagGeneratorContext = /** @class */ (function (_super) {
    __extends(ConnectivityTagGeneratorContext, _super);
    function ConnectivityTagGeneratorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityTagGeneratorContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    Object.defineProperty(ConnectivityTagGeneratorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityTagGenerator; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityTagGeneratorContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityTagGenerator) {
            listener.enterConnectivityTagGenerator(this);
        }
    };
    // @Override
    ConnectivityTagGeneratorContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityTagGenerator) {
            listener.exitConnectivityTagGenerator(this);
        }
    };
    // @Override
    ConnectivityTagGeneratorContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityTagGenerator) {
            return visitor.visitConnectivityTagGenerator(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityTagGeneratorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityTagGeneratorContext = ConnectivityTagGeneratorContext;
var ConnectivityTagGeneratorDisplayContext = /** @class */ (function (_super) {
    __extends(ConnectivityTagGeneratorDisplayContext, _super);
    function ConnectivityTagGeneratorDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityTagGeneratorDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    Object.defineProperty(ConnectivityTagGeneratorDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityTagGeneratorDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityTagGeneratorDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityTagGeneratorDisplay) {
            listener.enterConnectivityTagGeneratorDisplay(this);
        }
    };
    // @Override
    ConnectivityTagGeneratorDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityTagGeneratorDisplay) {
            listener.exitConnectivityTagGeneratorDisplay(this);
        }
    };
    // @Override
    ConnectivityTagGeneratorDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityTagGeneratorDisplay) {
            return visitor.visitConnectivityTagGeneratorDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityTagGeneratorDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityTagGeneratorDisplayContext = ConnectivityTagGeneratorDisplayContext;
var ConnectivityUnitsContext = /** @class */ (function (_super) {
    __extends(ConnectivityUnitsContext, _super);
    function ConnectivityUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityUnitsContext.prototype.setCapacitance = function () {
        return this.tryGetRuleContext(0, SetCapacitanceContext);
    };
    ConnectivityUnitsContext.prototype.setTime = function () {
        return this.tryGetRuleContext(0, SetTimeContext);
    };
    Object.defineProperty(ConnectivityUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityUnits) {
            listener.enterConnectivityUnits(this);
        }
    };
    // @Override
    ConnectivityUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityUnits) {
            listener.exitConnectivityUnits(this);
        }
    };
    // @Override
    ConnectivityUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityUnits) {
            return visitor.visitConnectivityUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityUnitsContext = ConnectivityUnitsContext;
var ConnectivityViewContext = /** @class */ (function (_super) {
    __extends(ConnectivityViewContext, _super);
    function ConnectivityViewContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityViewContext.prototype.viewNameDef = function () {
        return this.getRuleContext(0, ViewNameDefContext);
    };
    ConnectivityViewContext.prototype.connectivityViewHeader = function () {
        return this.getRuleContext(0, ConnectivityViewHeaderContext);
    };
    ConnectivityViewContext.prototype.logicalConnectivity = function () {
        return this.getRuleContext(0, LogicalConnectivityContext);
    };
    ConnectivityViewContext.prototype.connectivityStructure = function () {
        return this.getRuleContext(0, ConnectivityStructureContext);
    };
    ConnectivityViewContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ConnectivityViewContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ConnectivityViewContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityView; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityViewContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityView) {
            listener.enterConnectivityView(this);
        }
    };
    // @Override
    ConnectivityViewContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityView) {
            listener.exitConnectivityView(this);
        }
    };
    // @Override
    ConnectivityViewContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityView) {
            return visitor.visitConnectivityView(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityViewContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityViewContext = ConnectivityViewContext;
var ConnectivityViewHeaderContext = /** @class */ (function (_super) {
    __extends(ConnectivityViewHeaderContext, _super);
    function ConnectivityViewHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConnectivityViewHeaderContext.prototype.connectivityUnits = function () {
        return this.getRuleContext(0, ConnectivityUnitsContext);
    };
    ConnectivityViewHeaderContext.prototype.derivedFrom = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DerivedFromContext);
        }
        else {
            return this.getRuleContext(i, DerivedFromContext);
        }
    };
    ConnectivityViewHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    ConnectivityViewHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    ConnectivityViewHeaderContext.prototype.previousVersion = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PreviousVersionContext);
        }
        else {
            return this.getRuleContext(i, PreviousVersionContext);
        }
    };
    ConnectivityViewHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    ConnectivityViewHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(ConnectivityViewHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_connectivityViewHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConnectivityViewHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterConnectivityViewHeader) {
            listener.enterConnectivityViewHeader(this);
        }
    };
    // @Override
    ConnectivityViewHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitConnectivityViewHeader) {
            listener.exitConnectivityViewHeader(this);
        }
    };
    // @Override
    ConnectivityViewHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitConnectivityViewHeader) {
            return visitor.visitConnectivityViewHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConnectivityViewHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConnectivityViewHeaderContext = ConnectivityViewHeaderContext;
var ConstantNameDefContext = /** @class */ (function (_super) {
    __extends(ConstantNameDefContext, _super);
    function ConstantNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConstantNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(ConstantNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_constantNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConstantNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterConstantNameDef) {
            listener.enterConstantNameDef(this);
        }
    };
    // @Override
    ConstantNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitConstantNameDef) {
            listener.exitConstantNameDef(this);
        }
    };
    // @Override
    ConstantNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitConstantNameDef) {
            return visitor.visitConstantNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConstantNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConstantNameDefContext = ConstantNameDefContext;
var ConstantNameRefContext = /** @class */ (function (_super) {
    __extends(ConstantNameRefContext, _super);
    function ConstantNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConstantNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(ConstantNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_constantNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConstantNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterConstantNameRef) {
            listener.enterConstantNameRef(this);
        }
    };
    // @Override
    ConstantNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitConstantNameRef) {
            listener.exitConstantNameRef(this);
        }
    };
    // @Override
    ConstantNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitConstantNameRef) {
            return visitor.visitConstantNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConstantNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConstantNameRefContext = ConstantNameRefContext;
var ConstantValuesContext = /** @class */ (function (_super) {
    __extends(ConstantValuesContext, _super);
    function ConstantValuesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ConstantValuesContext.prototype.booleanConstant = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BooleanConstantContext);
        }
        else {
            return this.getRuleContext(i, BooleanConstantContext);
        }
    };
    ConstantValuesContext.prototype.integerConstant = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerConstantContext);
        }
        else {
            return this.getRuleContext(i, IntegerConstantContext);
        }
    };
    ConstantValuesContext.prototype.stringConstant = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringConstantContext);
        }
        else {
            return this.getRuleContext(i, StringConstantContext);
        }
    };
    Object.defineProperty(ConstantValuesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_constantValues; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ConstantValuesContext.prototype.enterRule = function (listener) {
        if (listener.enterConstantValues) {
            listener.enterConstantValues(this);
        }
    };
    // @Override
    ConstantValuesContext.prototype.exitRule = function (listener) {
        if (listener.exitConstantValues) {
            listener.exitConstantValues(this);
        }
    };
    // @Override
    ConstantValuesContext.prototype.accept = function (visitor) {
        if (visitor.visitConstantValues) {
            return visitor.visitConstantValues(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ConstantValuesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ConstantValuesContext = ConstantValuesContext;
var ContractContext = /** @class */ (function (_super) {
    __extends(ContractContext, _super);
    function ContractContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ContractContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(ContractContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_contract; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ContractContext.prototype.enterRule = function (listener) {
        if (listener.enterContract) {
            listener.enterContract(this);
        }
    };
    // @Override
    ContractContext.prototype.exitRule = function (listener) {
        if (listener.exitContract) {
            listener.exitContract(this);
        }
    };
    // @Override
    ContractContext.prototype.accept = function (visitor) {
        if (visitor.visitContract) {
            return visitor.visitContract(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ContractContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ContractContext = ContractContext;
var ContractDisplayContext = /** @class */ (function (_super) {
    __extends(ContractDisplayContext, _super);
    function ContractDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ContractDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    ContractDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    ContractDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(ContractDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_contractDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ContractDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterContractDisplay) {
            listener.enterContractDisplay(this);
        }
    };
    // @Override
    ContractDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitContractDisplay) {
            listener.exitContractDisplay(this);
        }
    };
    // @Override
    ContractDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitContractDisplay) {
            return visitor.visitContractDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ContractDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ContractDisplayContext = ContractDisplayContext;
var CopyrightContext = /** @class */ (function (_super) {
    __extends(CopyrightContext, _super);
    function CopyrightContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CopyrightContext.prototype.year = function () {
        return this.getRuleContext(0, YearContext);
    };
    CopyrightContext.prototype.stringToken = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringTokenContext);
        }
        else {
            return this.getRuleContext(i, StringTokenContext);
        }
    };
    Object.defineProperty(CopyrightContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_copyright; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CopyrightContext.prototype.enterRule = function (listener) {
        if (listener.enterCopyright) {
            listener.enterCopyright(this);
        }
    };
    // @Override
    CopyrightContext.prototype.exitRule = function (listener) {
        if (listener.exitCopyright) {
            listener.exitCopyright(this);
        }
    };
    // @Override
    CopyrightContext.prototype.accept = function (visitor) {
        if (visitor.visitCopyright) {
            return visitor.visitCopyright(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CopyrightContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CopyrightContext = CopyrightContext;
var CopyrightDisplayContext = /** @class */ (function (_super) {
    __extends(CopyrightDisplayContext, _super);
    function CopyrightDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CopyrightDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    CopyrightDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    CopyrightDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(CopyrightDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_copyrightDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CopyrightDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterCopyrightDisplay) {
            listener.enterCopyrightDisplay(this);
        }
    };
    // @Override
    CopyrightDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitCopyrightDisplay) {
            listener.exitCopyrightDisplay(this);
        }
    };
    // @Override
    CopyrightDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitCopyrightDisplay) {
            return visitor.visitCopyrightDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CopyrightDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CopyrightDisplayContext = CopyrightDisplayContext;
var CornerTypeContext = /** @class */ (function (_super) {
    __extends(CornerTypeContext, _super);
    function CornerTypeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CornerTypeContext.prototype.truncate = function () {
        return this.tryGetRuleContext(0, TruncateContext);
    };
    CornerTypeContext.prototype.round = function () {
        return this.tryGetRuleContext(0, RoundContext);
    };
    CornerTypeContext.prototype.extend = function () {
        return this.tryGetRuleContext(0, ExtendContext);
    };
    Object.defineProperty(CornerTypeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_cornerType; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CornerTypeContext.prototype.enterRule = function (listener) {
        if (listener.enterCornerType) {
            listener.enterCornerType(this);
        }
    };
    // @Override
    CornerTypeContext.prototype.exitRule = function (listener) {
        if (listener.exitCornerType) {
            listener.exitCornerType(this);
        }
    };
    // @Override
    CornerTypeContext.prototype.accept = function (visitor) {
        if (visitor.visitCornerType) {
            return visitor.visitCornerType(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CornerTypeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CornerTypeContext = CornerTypeContext;
var CoulombContext = /** @class */ (function (_super) {
    __extends(CoulombContext, _super);
    function CoulombContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CoulombContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(CoulombContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_coulomb; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CoulombContext.prototype.enterRule = function (listener) {
        if (listener.enterCoulomb) {
            listener.enterCoulomb(this);
        }
    };
    // @Override
    CoulombContext.prototype.exitRule = function (listener) {
        if (listener.exitCoulomb) {
            listener.exitCoulomb(this);
        }
    };
    // @Override
    CoulombContext.prototype.accept = function (visitor) {
        if (visitor.visitCoulomb) {
            return visitor.visitCoulomb(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CoulombContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CoulombContext = CoulombContext;
var CriticalityContext = /** @class */ (function (_super) {
    __extends(CriticalityContext, _super);
    function CriticalityContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CriticalityContext.prototype.integerValue = function () {
        return this.getRuleContext(0, IntegerValueContext);
    };
    Object.defineProperty(CriticalityContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_criticality; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CriticalityContext.prototype.enterRule = function (listener) {
        if (listener.enterCriticality) {
            listener.enterCriticality(this);
        }
    };
    // @Override
    CriticalityContext.prototype.exitRule = function (listener) {
        if (listener.exitCriticality) {
            listener.exitCriticality(this);
        }
    };
    // @Override
    CriticalityContext.prototype.accept = function (visitor) {
        if (visitor.visitCriticality) {
            return visitor.visitCriticality(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CriticalityContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CriticalityContext = CriticalityContext;
var CriticalityDisplayContext = /** @class */ (function (_super) {
    __extends(CriticalityDisplayContext, _super);
    function CriticalityDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CriticalityDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    Object.defineProperty(CriticalityDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_criticalityDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CriticalityDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterCriticalityDisplay) {
            listener.enterCriticalityDisplay(this);
        }
    };
    // @Override
    CriticalityDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitCriticalityDisplay) {
            listener.exitCriticalityDisplay(this);
        }
    };
    // @Override
    CriticalityDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitCriticalityDisplay) {
            return visitor.visitCriticalityDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CriticalityDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CriticalityDisplayContext = CriticalityDisplayContext;
var CurrentMapContext = /** @class */ (function (_super) {
    __extends(CurrentMapContext, _super);
    function CurrentMapContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CurrentMapContext.prototype.currentValue = function () {
        return this.getRuleContext(0, CurrentValueContext);
    };
    Object.defineProperty(CurrentMapContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_currentMap; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CurrentMapContext.prototype.enterRule = function (listener) {
        if (listener.enterCurrentMap) {
            listener.enterCurrentMap(this);
        }
    };
    // @Override
    CurrentMapContext.prototype.exitRule = function (listener) {
        if (listener.exitCurrentMap) {
            listener.exitCurrentMap(this);
        }
    };
    // @Override
    CurrentMapContext.prototype.accept = function (visitor) {
        if (visitor.visitCurrentMap) {
            return visitor.visitCurrentMap(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CurrentMapContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CurrentMapContext = CurrentMapContext;
var CurrentValueContext = /** @class */ (function (_super) {
    __extends(CurrentValueContext, _super);
    function CurrentValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CurrentValueContext.prototype.miNoMaxValue = function () {
        return this.getRuleContext(0, MiNoMaxValueContext);
    };
    Object.defineProperty(CurrentValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_currentValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CurrentValueContext.prototype.enterRule = function (listener) {
        if (listener.enterCurrentValue) {
            listener.enterCurrentValue(this);
        }
    };
    // @Override
    CurrentValueContext.prototype.exitRule = function (listener) {
        if (listener.exitCurrentValue) {
            listener.exitCurrentValue(this);
        }
    };
    // @Override
    CurrentValueContext.prototype.accept = function (visitor) {
        if (visitor.visitCurrentValue) {
            return visitor.visitCurrentValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CurrentValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CurrentValueContext = CurrentValueContext;
var CurveContext = /** @class */ (function (_super) {
    __extends(CurveContext, _super);
    function CurveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    CurveContext.prototype.arc = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ArcContext);
        }
        else {
            return this.getRuleContext(i, ArcContext);
        }
    };
    CurveContext.prototype.pointValue = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PointValueContext);
        }
        else {
            return this.getRuleContext(i, PointValueContext);
        }
    };
    Object.defineProperty(CurveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_curve; },
        enumerable: true,
        configurable: true
    });
    // @Override
    CurveContext.prototype.enterRule = function (listener) {
        if (listener.enterCurve) {
            listener.enterCurve(this);
        }
    };
    // @Override
    CurveContext.prototype.exitRule = function (listener) {
        if (listener.exitCurve) {
            listener.exitCurve(this);
        }
    };
    // @Override
    CurveContext.prototype.accept = function (visitor) {
        if (visitor.visitCurve) {
            return visitor.visitCurve(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return CurveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.CurveContext = CurveContext;
var DataOriginContext = /** @class */ (function (_super) {
    __extends(DataOriginContext, _super);
    function DataOriginContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DataOriginContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    DataOriginContext.prototype.version = function () {
        return this.tryGetRuleContext(0, VersionContext);
    };
    Object.defineProperty(DataOriginContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dataOrigin; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DataOriginContext.prototype.enterRule = function (listener) {
        if (listener.enterDataOrigin) {
            listener.enterDataOrigin(this);
        }
    };
    // @Override
    DataOriginContext.prototype.exitRule = function (listener) {
        if (listener.exitDataOrigin) {
            listener.exitDataOrigin(this);
        }
    };
    // @Override
    DataOriginContext.prototype.accept = function (visitor) {
        if (visitor.visitDataOrigin) {
            return visitor.visitDataOrigin(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DataOriginContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DataOriginContext = DataOriginContext;
var DateContext = /** @class */ (function (_super) {
    __extends(DateContext, _super);
    function DateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DateContext.prototype.yearNumber = function () {
        return this.getRuleContext(0, YearNumberContext);
    };
    DateContext.prototype.monthNumber = function () {
        return this.getRuleContext(0, MonthNumberContext);
    };
    DateContext.prototype.dayNumber = function () {
        return this.getRuleContext(0, DayNumberContext);
    };
    Object.defineProperty(DateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_date; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DateContext.prototype.enterRule = function (listener) {
        if (listener.enterDate) {
            listener.enterDate(this);
        }
    };
    // @Override
    DateContext.prototype.exitRule = function (listener) {
        if (listener.exitDate) {
            listener.exitDate(this);
        }
    };
    // @Override
    DateContext.prototype.accept = function (visitor) {
        if (visitor.visitDate) {
            return visitor.visitDate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DateContext = DateContext;
var DayNumberContext = /** @class */ (function (_super) {
    __extends(DayNumberContext, _super);
    function DayNumberContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DayNumberContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(DayNumberContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dayNumber; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DayNumberContext.prototype.enterRule = function (listener) {
        if (listener.enterDayNumber) {
            listener.enterDayNumber(this);
        }
    };
    // @Override
    DayNumberContext.prototype.exitRule = function (listener) {
        if (listener.exitDayNumber) {
            listener.exitDayNumber(this);
        }
    };
    // @Override
    DayNumberContext.prototype.accept = function (visitor) {
        if (visitor.visitDayNumber) {
            return visitor.visitDayNumber(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DayNumberContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DayNumberContext = DayNumberContext;
var DcFanInLoadContext = /** @class */ (function (_super) {
    __extends(DcFanInLoadContext, _super);
    function DcFanInLoadContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DcFanInLoadContext.prototype.numberValue = function () {
        return this.getRuleContext(0, NumberValueContext);
    };
    Object.defineProperty(DcFanInLoadContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dcFanInLoad; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DcFanInLoadContext.prototype.enterRule = function (listener) {
        if (listener.enterDcFanInLoad) {
            listener.enterDcFanInLoad(this);
        }
    };
    // @Override
    DcFanInLoadContext.prototype.exitRule = function (listener) {
        if (listener.exitDcFanInLoad) {
            listener.exitDcFanInLoad(this);
        }
    };
    // @Override
    DcFanInLoadContext.prototype.accept = function (visitor) {
        if (visitor.visitDcFanInLoad) {
            return visitor.visitDcFanInLoad(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DcFanInLoadContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DcFanInLoadContext = DcFanInLoadContext;
var DcFanInLoadDisplayContext = /** @class */ (function (_super) {
    __extends(DcFanInLoadDisplayContext, _super);
    function DcFanInLoadDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DcFanInLoadDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    DcFanInLoadDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    DcFanInLoadDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(DcFanInLoadDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dcFanInLoadDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DcFanInLoadDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterDcFanInLoadDisplay) {
            listener.enterDcFanInLoadDisplay(this);
        }
    };
    // @Override
    DcFanInLoadDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitDcFanInLoadDisplay) {
            listener.exitDcFanInLoadDisplay(this);
        }
    };
    // @Override
    DcFanInLoadDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitDcFanInLoadDisplay) {
            return visitor.visitDcFanInLoadDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DcFanInLoadDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DcFanInLoadDisplayContext = DcFanInLoadDisplayContext;
var DcFanOutLoadContext = /** @class */ (function (_super) {
    __extends(DcFanOutLoadContext, _super);
    function DcFanOutLoadContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DcFanOutLoadContext.prototype.numberValue = function () {
        return this.getRuleContext(0, NumberValueContext);
    };
    Object.defineProperty(DcFanOutLoadContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dcFanOutLoad; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DcFanOutLoadContext.prototype.enterRule = function (listener) {
        if (listener.enterDcFanOutLoad) {
            listener.enterDcFanOutLoad(this);
        }
    };
    // @Override
    DcFanOutLoadContext.prototype.exitRule = function (listener) {
        if (listener.exitDcFanOutLoad) {
            listener.exitDcFanOutLoad(this);
        }
    };
    // @Override
    DcFanOutLoadContext.prototype.accept = function (visitor) {
        if (visitor.visitDcFanOutLoad) {
            return visitor.visitDcFanOutLoad(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DcFanOutLoadContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DcFanOutLoadContext = DcFanOutLoadContext;
var DcFanOutLoadDisplayContext = /** @class */ (function (_super) {
    __extends(DcFanOutLoadDisplayContext, _super);
    function DcFanOutLoadDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DcFanOutLoadDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    DcFanOutLoadDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    DcFanOutLoadDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(DcFanOutLoadDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dcFanOutLoadDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DcFanOutLoadDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterDcFanOutLoadDisplay) {
            listener.enterDcFanOutLoadDisplay(this);
        }
    };
    // @Override
    DcFanOutLoadDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitDcFanOutLoadDisplay) {
            listener.exitDcFanOutLoadDisplay(this);
        }
    };
    // @Override
    DcFanOutLoadDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitDcFanOutLoadDisplay) {
            return visitor.visitDcFanOutLoadDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DcFanOutLoadDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DcFanOutLoadDisplayContext = DcFanOutLoadDisplayContext;
var DcMaxFanInContext = /** @class */ (function (_super) {
    __extends(DcMaxFanInContext, _super);
    function DcMaxFanInContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DcMaxFanInContext.prototype.numberValue = function () {
        return this.getRuleContext(0, NumberValueContext);
    };
    Object.defineProperty(DcMaxFanInContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dcMaxFanIn; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DcMaxFanInContext.prototype.enterRule = function (listener) {
        if (listener.enterDcMaxFanIn) {
            listener.enterDcMaxFanIn(this);
        }
    };
    // @Override
    DcMaxFanInContext.prototype.exitRule = function (listener) {
        if (listener.exitDcMaxFanIn) {
            listener.exitDcMaxFanIn(this);
        }
    };
    // @Override
    DcMaxFanInContext.prototype.accept = function (visitor) {
        if (visitor.visitDcMaxFanIn) {
            return visitor.visitDcMaxFanIn(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DcMaxFanInContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DcMaxFanInContext = DcMaxFanInContext;
var DcMaxFanInDisplayContext = /** @class */ (function (_super) {
    __extends(DcMaxFanInDisplayContext, _super);
    function DcMaxFanInDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DcMaxFanInDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    DcMaxFanInDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    DcMaxFanInDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(DcMaxFanInDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dcMaxFanInDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DcMaxFanInDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterDcMaxFanInDisplay) {
            listener.enterDcMaxFanInDisplay(this);
        }
    };
    // @Override
    DcMaxFanInDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitDcMaxFanInDisplay) {
            listener.exitDcMaxFanInDisplay(this);
        }
    };
    // @Override
    DcMaxFanInDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitDcMaxFanInDisplay) {
            return visitor.visitDcMaxFanInDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DcMaxFanInDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DcMaxFanInDisplayContext = DcMaxFanInDisplayContext;
var DcMaxFanOutContext = /** @class */ (function (_super) {
    __extends(DcMaxFanOutContext, _super);
    function DcMaxFanOutContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DcMaxFanOutContext.prototype.numberValue = function () {
        return this.getRuleContext(0, NumberValueContext);
    };
    Object.defineProperty(DcMaxFanOutContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dcMaxFanOut; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DcMaxFanOutContext.prototype.enterRule = function (listener) {
        if (listener.enterDcMaxFanOut) {
            listener.enterDcMaxFanOut(this);
        }
    };
    // @Override
    DcMaxFanOutContext.prototype.exitRule = function (listener) {
        if (listener.exitDcMaxFanOut) {
            listener.exitDcMaxFanOut(this);
        }
    };
    // @Override
    DcMaxFanOutContext.prototype.accept = function (visitor) {
        if (visitor.visitDcMaxFanOut) {
            return visitor.visitDcMaxFanOut(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DcMaxFanOutContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DcMaxFanOutContext = DcMaxFanOutContext;
var DcMaxFanOutDisplayContext = /** @class */ (function (_super) {
    __extends(DcMaxFanOutDisplayContext, _super);
    function DcMaxFanOutDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DcMaxFanOutDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    DcMaxFanOutDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    DcMaxFanOutDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(DcMaxFanOutDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dcMaxFanOutDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DcMaxFanOutDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterDcMaxFanOutDisplay) {
            listener.enterDcMaxFanOutDisplay(this);
        }
    };
    // @Override
    DcMaxFanOutDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitDcMaxFanOutDisplay) {
            listener.exitDcMaxFanOutDisplay(this);
        }
    };
    // @Override
    DcMaxFanOutDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitDcMaxFanOutDisplay) {
            return visitor.visitDcMaxFanOutDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DcMaxFanOutDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DcMaxFanOutDisplayContext = DcMaxFanOutDisplayContext;
var DecimalToStringContext = /** @class */ (function (_super) {
    __extends(DecimalToStringContext, _super);
    function DecimalToStringContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DecimalToStringContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    DecimalToStringContext.prototype.minimumStringLength = function () {
        return this.tryGetRuleContext(0, MinimumStringLengthContext);
    };
    Object.defineProperty(DecimalToStringContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_decimalToString; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DecimalToStringContext.prototype.enterRule = function (listener) {
        if (listener.enterDecimalToString) {
            listener.enterDecimalToString(this);
        }
    };
    // @Override
    DecimalToStringContext.prototype.exitRule = function (listener) {
        if (listener.exitDecimalToString) {
            listener.exitDecimalToString(this);
        }
    };
    // @Override
    DecimalToStringContext.prototype.accept = function (visitor) {
        if (visitor.visitDecimalToString) {
            return visitor.visitDecimalToString(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DecimalToStringContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DecimalToStringContext = DecimalToStringContext;
var DefaultClusterConfigurationContext = /** @class */ (function (_super) {
    __extends(DefaultClusterConfigurationContext, _super);
    function DefaultClusterConfigurationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DefaultClusterConfigurationContext.prototype.clusterConfigurationNameRef = function () {
        return this.getRuleContext(0, ClusterConfigurationNameRefContext);
    };
    Object.defineProperty(DefaultClusterConfigurationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_defaultClusterConfiguration; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DefaultClusterConfigurationContext.prototype.enterRule = function (listener) {
        if (listener.enterDefaultClusterConfiguration) {
            listener.enterDefaultClusterConfiguration(this);
        }
    };
    // @Override
    DefaultClusterConfigurationContext.prototype.exitRule = function (listener) {
        if (listener.exitDefaultClusterConfiguration) {
            listener.exitDefaultClusterConfiguration(this);
        }
    };
    // @Override
    DefaultClusterConfigurationContext.prototype.accept = function (visitor) {
        if (visitor.visitDefaultClusterConfiguration) {
            return visitor.visitDefaultClusterConfiguration(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DefaultClusterConfigurationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DefaultClusterConfigurationContext = DefaultClusterConfigurationContext;
var DefaultConnectionContext = /** @class */ (function (_super) {
    __extends(DefaultConnectionContext, _super);
    function DefaultConnectionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DefaultConnectionContext.prototype.globalPortRef = function () {
        return this.getRuleContext(0, GlobalPortRefContext);
    };
    Object.defineProperty(DefaultConnectionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_defaultConnection; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DefaultConnectionContext.prototype.enterRule = function (listener) {
        if (listener.enterDefaultConnection) {
            listener.enterDefaultConnection(this);
        }
    };
    // @Override
    DefaultConnectionContext.prototype.exitRule = function (listener) {
        if (listener.exitDefaultConnection) {
            listener.exitDefaultConnection(this);
        }
    };
    // @Override
    DefaultConnectionContext.prototype.accept = function (visitor) {
        if (visitor.visitDefaultConnection) {
            return visitor.visitDefaultConnection(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DefaultConnectionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DefaultConnectionContext = DefaultConnectionContext;
var DegreeContext = /** @class */ (function (_super) {
    __extends(DegreeContext, _super);
    function DegreeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DegreeContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(DegreeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_degree; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DegreeContext.prototype.enterRule = function (listener) {
        if (listener.enterDegree) {
            listener.enterDegree(this);
        }
    };
    // @Override
    DegreeContext.prototype.exitRule = function (listener) {
        if (listener.exitDegree) {
            listener.exitDegree(this);
        }
    };
    // @Override
    DegreeContext.prototype.accept = function (visitor) {
        if (visitor.visitDegree) {
            return visitor.visitDegree(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DegreeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DegreeContext = DegreeContext;
var DelayContext = /** @class */ (function (_super) {
    __extends(DelayContext, _super);
    function DelayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DelayContext.prototype.timeDelay = function () {
        return this.getRuleContext(0, TimeDelayContext);
    };
    Object.defineProperty(DelayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_delay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DelayContext.prototype.enterRule = function (listener) {
        if (listener.enterDelay) {
            listener.enterDelay(this);
        }
    };
    // @Override
    DelayContext.prototype.exitRule = function (listener) {
        if (listener.exitDelay) {
            listener.exitDelay(this);
        }
    };
    // @Override
    DelayContext.prototype.accept = function (visitor) {
        if (visitor.visitDelay) {
            return visitor.visitDelay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DelayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DelayContext = DelayContext;
var DenominatorContext = /** @class */ (function (_super) {
    __extends(DenominatorContext, _super);
    function DenominatorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DenominatorContext.prototype.integerValue = function () {
        return this.getRuleContext(0, IntegerValueContext);
    };
    Object.defineProperty(DenominatorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_denominator; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DenominatorContext.prototype.enterRule = function (listener) {
        if (listener.enterDenominator) {
            listener.enterDenominator(this);
        }
    };
    // @Override
    DenominatorContext.prototype.exitRule = function (listener) {
        if (listener.exitDenominator) {
            listener.exitDenominator(this);
        }
    };
    // @Override
    DenominatorContext.prototype.accept = function (visitor) {
        if (visitor.visitDenominator) {
            return visitor.visitDenominator(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DenominatorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DenominatorContext = DenominatorContext;
var DerivationContext = /** @class */ (function (_super) {
    __extends(DerivationContext, _super);
    function DerivationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DerivationContext.prototype.calculated = function () {
        return this.tryGetRuleContext(0, CalculatedContext);
    };
    DerivationContext.prototype.measured = function () {
        return this.tryGetRuleContext(0, MeasuredContext);
    };
    DerivationContext.prototype.required = function () {
        return this.tryGetRuleContext(0, RequiredContext);
    };
    Object.defineProperty(DerivationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_derivation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DerivationContext.prototype.enterRule = function (listener) {
        if (listener.enterDerivation) {
            listener.enterDerivation(this);
        }
    };
    // @Override
    DerivationContext.prototype.exitRule = function (listener) {
        if (listener.exitDerivation) {
            listener.exitDerivation(this);
        }
    };
    // @Override
    DerivationContext.prototype.accept = function (visitor) {
        if (visitor.visitDerivation) {
            return visitor.visitDerivation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DerivationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DerivationContext = DerivationContext;
var DerivedFromContext = /** @class */ (function (_super) {
    __extends(DerivedFromContext, _super);
    function DerivedFromContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DerivedFromContext.prototype.viewRef = function () {
        return this.getRuleContext(0, ViewRefContext);
    };
    DerivedFromContext.prototype.reason = function () {
        return this.tryGetRuleContext(0, ReasonContext);
    };
    Object.defineProperty(DerivedFromContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_derivedFrom; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DerivedFromContext.prototype.enterRule = function (listener) {
        if (listener.enterDerivedFrom) {
            listener.enterDerivedFrom(this);
        }
    };
    // @Override
    DerivedFromContext.prototype.exitRule = function (listener) {
        if (listener.exitDerivedFrom) {
            listener.exitDerivedFrom(this);
        }
    };
    // @Override
    DerivedFromContext.prototype.accept = function (visitor) {
        if (visitor.visitDerivedFrom) {
            return visitor.visitDerivedFrom(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DerivedFromContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DerivedFromContext = DerivedFromContext;
var DesignContext = /** @class */ (function (_super) {
    __extends(DesignContext, _super);
    function DesignContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignContext.prototype.designNameDef = function () {
        return this.getRuleContext(0, DesignNameDefContext);
    };
    DesignContext.prototype.cellRef = function () {
        return this.getRuleContext(0, CellRefContext);
    };
    DesignContext.prototype.designHeader = function () {
        return this.getRuleContext(0, DesignHeaderContext);
    };
    DesignContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    DesignContext.prototype.designHierarchy = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignHierarchyContext);
        }
        else {
            return this.getRuleContext(i, DesignHierarchyContext);
        }
    };
    DesignContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(DesignContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_design; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignContext.prototype.enterRule = function (listener) {
        if (listener.enterDesign) {
            listener.enterDesign(this);
        }
    };
    // @Override
    DesignContext.prototype.exitRule = function (listener) {
        if (listener.exitDesign) {
            listener.exitDesign(this);
        }
    };
    // @Override
    DesignContext.prototype.accept = function (visitor) {
        if (visitor.visitDesign) {
            return visitor.visitDesign(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignContext = DesignContext;
var DesignatorContext = /** @class */ (function (_super) {
    __extends(DesignatorContext, _super);
    function DesignatorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignatorContext.prototype.stringValue = function () {
        return this.getRuleContext(0, StringValueContext);
    };
    Object.defineProperty(DesignatorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_designator; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignatorContext.prototype.enterRule = function (listener) {
        if (listener.enterDesignator) {
            listener.enterDesignator(this);
        }
    };
    // @Override
    DesignatorContext.prototype.exitRule = function (listener) {
        if (listener.exitDesignator) {
            listener.exitDesignator(this);
        }
    };
    // @Override
    DesignatorContext.prototype.accept = function (visitor) {
        if (visitor.visitDesignator) {
            return visitor.visitDesignator(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignatorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignatorContext = DesignatorContext;
var DesignatorDisplayContext = /** @class */ (function (_super) {
    __extends(DesignatorDisplayContext, _super);
    function DesignatorDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignatorDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    DesignatorDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    DesignatorDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(DesignatorDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_designatorDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignatorDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterDesignatorDisplay) {
            listener.enterDesignatorDisplay(this);
        }
    };
    // @Override
    DesignatorDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitDesignatorDisplay) {
            listener.exitDesignatorDisplay(this);
        }
    };
    // @Override
    DesignatorDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitDesignatorDisplay) {
            return visitor.visitDesignatorDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignatorDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignatorDisplayContext = DesignatorDisplayContext;
var DesignHeaderContext = /** @class */ (function (_super) {
    __extends(DesignHeaderContext, _super);
    function DesignHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignHeaderContext.prototype.designUnits = function () {
        return this.getRuleContext(0, DesignUnitsContext);
    };
    DesignHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    DesignHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    DesignHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    DesignHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(DesignHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_designHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterDesignHeader) {
            listener.enterDesignHeader(this);
        }
    };
    // @Override
    DesignHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitDesignHeader) {
            listener.exitDesignHeader(this);
        }
    };
    // @Override
    DesignHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitDesignHeader) {
            return visitor.visitDesignHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignHeaderContext = DesignHeaderContext;
var DesignHierarchyContext = /** @class */ (function (_super) {
    __extends(DesignHierarchyContext, _super);
    function DesignHierarchyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignHierarchyContext.prototype.designHierarchyNameDef = function () {
        return this.getRuleContext(0, DesignHierarchyNameDefContext);
    };
    DesignHierarchyContext.prototype.clusterRef = function () {
        return this.getRuleContext(0, ClusterRefContext);
    };
    DesignHierarchyContext.prototype.clusterConfigurationRef = function () {
        return this.getRuleContext(0, ClusterConfigurationRefContext);
    };
    DesignHierarchyContext.prototype.designHierarchyHeader = function () {
        return this.getRuleContext(0, DesignHierarchyHeaderContext);
    };
    DesignHierarchyContext.prototype.occurrenceHierarchyAnnotate = function () {
        return this.tryGetRuleContext(0, OccurrenceHierarchyAnnotateContext);
    };
    Object.defineProperty(DesignHierarchyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_designHierarchy; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignHierarchyContext.prototype.enterRule = function (listener) {
        if (listener.enterDesignHierarchy) {
            listener.enterDesignHierarchy(this);
        }
    };
    // @Override
    DesignHierarchyContext.prototype.exitRule = function (listener) {
        if (listener.exitDesignHierarchy) {
            listener.exitDesignHierarchy(this);
        }
    };
    // @Override
    DesignHierarchyContext.prototype.accept = function (visitor) {
        if (visitor.visitDesignHierarchy) {
            return visitor.visitDesignHierarchy(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignHierarchyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignHierarchyContext = DesignHierarchyContext;
var DesignHierarchyHeaderContext = /** @class */ (function (_super) {
    __extends(DesignHierarchyHeaderContext, _super);
    function DesignHierarchyHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignHierarchyHeaderContext.prototype.booleanParameterAssign = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BooleanParameterAssignContext);
        }
        else {
            return this.getRuleContext(i, BooleanParameterAssignContext);
        }
    };
    DesignHierarchyHeaderContext.prototype.integerParameterAssign = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerParameterAssignContext);
        }
        else {
            return this.getRuleContext(i, IntegerParameterAssignContext);
        }
    };
    DesignHierarchyHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    DesignHierarchyHeaderContext.prototype.numberParameterAssign = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NumberParameterAssignContext);
        }
        else {
            return this.getRuleContext(i, NumberParameterAssignContext);
        }
    };
    DesignHierarchyHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    DesignHierarchyHeaderContext.prototype.stringParameterAssign = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringParameterAssignContext);
        }
        else {
            return this.getRuleContext(i, StringParameterAssignContext);
        }
    };
    Object.defineProperty(DesignHierarchyHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_designHierarchyHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignHierarchyHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterDesignHierarchyHeader) {
            listener.enterDesignHierarchyHeader(this);
        }
    };
    // @Override
    DesignHierarchyHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitDesignHierarchyHeader) {
            listener.exitDesignHierarchyHeader(this);
        }
    };
    // @Override
    DesignHierarchyHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitDesignHierarchyHeader) {
            return visitor.visitDesignHierarchyHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignHierarchyHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignHierarchyHeaderContext = DesignHierarchyHeaderContext;
var DesignHierarchyNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(DesignHierarchyNameCaseSensitiveContext, _super);
    function DesignHierarchyNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignHierarchyNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(DesignHierarchyNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_designHierarchyNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignHierarchyNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterDesignHierarchyNameCaseSensitive) {
            listener.enterDesignHierarchyNameCaseSensitive(this);
        }
    };
    // @Override
    DesignHierarchyNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitDesignHierarchyNameCaseSensitive) {
            listener.exitDesignHierarchyNameCaseSensitive(this);
        }
    };
    // @Override
    DesignHierarchyNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitDesignHierarchyNameCaseSensitive) {
            return visitor.visitDesignHierarchyNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignHierarchyNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignHierarchyNameCaseSensitiveContext = DesignHierarchyNameCaseSensitiveContext;
var DesignHierarchyNameDefContext = /** @class */ (function (_super) {
    __extends(DesignHierarchyNameDefContext, _super);
    function DesignHierarchyNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignHierarchyNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(DesignHierarchyNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_designHierarchyNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignHierarchyNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterDesignHierarchyNameDef) {
            listener.enterDesignHierarchyNameDef(this);
        }
    };
    // @Override
    DesignHierarchyNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitDesignHierarchyNameDef) {
            listener.exitDesignHierarchyNameDef(this);
        }
    };
    // @Override
    DesignHierarchyNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitDesignHierarchyNameDef) {
            return visitor.visitDesignHierarchyNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignHierarchyNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignHierarchyNameDefContext = DesignHierarchyNameDefContext;
var DesignNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(DesignNameCaseSensitiveContext, _super);
    function DesignNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(DesignNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_designNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterDesignNameCaseSensitive) {
            listener.enterDesignNameCaseSensitive(this);
        }
    };
    // @Override
    DesignNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitDesignNameCaseSensitive) {
            listener.exitDesignNameCaseSensitive(this);
        }
    };
    // @Override
    DesignNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitDesignNameCaseSensitive) {
            return visitor.visitDesignNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignNameCaseSensitiveContext = DesignNameCaseSensitiveContext;
var DesignNameDefContext = /** @class */ (function (_super) {
    __extends(DesignNameDefContext, _super);
    function DesignNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(DesignNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_designNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterDesignNameDef) {
            listener.enterDesignNameDef(this);
        }
    };
    // @Override
    DesignNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitDesignNameDef) {
            listener.exitDesignNameDef(this);
        }
    };
    // @Override
    DesignNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitDesignNameDef) {
            return visitor.visitDesignNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignNameDefContext = DesignNameDefContext;
var DesignUnitsContext = /** @class */ (function (_super) {
    __extends(DesignUnitsContext, _super);
    function DesignUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DesignUnitsContext.prototype.setCapacitance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetCapacitanceContext);
        }
        else {
            return this.getRuleContext(i, SetCapacitanceContext);
        }
    };
    DesignUnitsContext.prototype.setTime = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetTimeContext);
        }
        else {
            return this.getRuleContext(i, SetTimeContext);
        }
    };
    Object.defineProperty(DesignUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_designUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DesignUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterDesignUnits) {
            listener.enterDesignUnits(this);
        }
    };
    // @Override
    DesignUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitDesignUnits) {
            listener.exitDesignUnits(this);
        }
    };
    // @Override
    DesignUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitDesignUnits) {
            return visitor.visitDesignUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DesignUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DesignUnitsContext = DesignUnitsContext;
var DiagramContext = /** @class */ (function (_super) {
    __extends(DiagramContext, _super);
    function DiagramContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DiagramContext.prototype.diagramNameDef = function () {
        return this.getRuleContext(0, DiagramNameDefContext);
    };
    DiagramContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    DiagramContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    DiagramContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    DiagramContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(DiagramContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_diagram; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DiagramContext.prototype.enterRule = function (listener) {
        if (listener.enterDiagram) {
            listener.enterDiagram(this);
        }
    };
    // @Override
    DiagramContext.prototype.exitRule = function (listener) {
        if (listener.exitDiagram) {
            listener.exitDiagram(this);
        }
    };
    // @Override
    DiagramContext.prototype.accept = function (visitor) {
        if (visitor.visitDiagram) {
            return visitor.visitDiagram(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DiagramContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DiagramContext = DiagramContext;
var DiagramNameDefContext = /** @class */ (function (_super) {
    __extends(DiagramNameDefContext, _super);
    function DiagramNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DiagramNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(DiagramNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_diagramNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DiagramNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterDiagramNameDef) {
            listener.enterDiagramNameDef(this);
        }
    };
    // @Override
    DiagramNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitDiagramNameDef) {
            listener.exitDiagramNameDef(this);
        }
    };
    // @Override
    DiagramNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitDiagramNameDef) {
            return visitor.visitDiagramNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DiagramNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DiagramNameDefContext = DiagramNameDefContext;
var DirectionalPortAttributeOverrideContext = /** @class */ (function (_super) {
    __extends(DirectionalPortAttributeOverrideContext, _super);
    function DirectionalPortAttributeOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DirectionalPortAttributeOverrideContext.prototype.inputPortAttributes = function () {
        return this.tryGetRuleContext(0, InputPortAttributesContext);
    };
    DirectionalPortAttributeOverrideContext.prototype.outputPortAttributes = function () {
        return this.tryGetRuleContext(0, OutputPortAttributesContext);
    };
    DirectionalPortAttributeOverrideContext.prototype.bidirectionalPortAttributes = function () {
        return this.tryGetRuleContext(0, BidirectionalPortAttributesContext);
    };
    Object.defineProperty(DirectionalPortAttributeOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_directionalPortAttributeOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DirectionalPortAttributeOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterDirectionalPortAttributeOverride) {
            listener.enterDirectionalPortAttributeOverride(this);
        }
    };
    // @Override
    DirectionalPortAttributeOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitDirectionalPortAttributeOverride) {
            listener.exitDirectionalPortAttributeOverride(this);
        }
    };
    // @Override
    DirectionalPortAttributeOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitDirectionalPortAttributeOverride) {
            return visitor.visitDirectionalPortAttributeOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DirectionalPortAttributeOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DirectionalPortAttributeOverrideContext = DirectionalPortAttributeOverrideContext;
var DisplayContext = /** @class */ (function (_super) {
    __extends(DisplayContext, _super);
    function DisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DisplayContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    DisplayContext.prototype.figureGroupNameRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureGroupNameRefContext);
        }
        else {
            return this.getRuleContext(i, FigureGroupNameRefContext);
        }
    };
    DisplayContext.prototype.figureGroupOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureGroupOverrideContext);
        }
        else {
            return this.getRuleContext(i, FigureGroupOverrideContext);
        }
    };
    Object.defineProperty(DisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_display; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterDisplay) {
            listener.enterDisplay(this);
        }
    };
    // @Override
    DisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitDisplay) {
            listener.exitDisplay(this);
        }
    };
    // @Override
    DisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitDisplay) {
            return visitor.visitDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DisplayContext = DisplayContext;
var DisplayAttributesContext = /** @class */ (function (_super) {
    __extends(DisplayAttributesContext, _super);
    function DisplayAttributesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DisplayAttributesContext.prototype.borderPattern = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BorderPatternContext);
        }
        else {
            return this.getRuleContext(i, BorderPatternContext);
        }
    };
    DisplayAttributesContext.prototype.borderPatternVisible = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BorderPatternVisibleContext);
        }
        else {
            return this.getRuleContext(i, BorderPatternVisibleContext);
        }
    };
    DisplayAttributesContext.prototype.borderWidth = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BorderWidthContext);
        }
        else {
            return this.getRuleContext(i, BorderWidthContext);
        }
    };
    DisplayAttributesContext.prototype.color = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ColorContext);
        }
        else {
            return this.getRuleContext(i, ColorContext);
        }
    };
    DisplayAttributesContext.prototype.fillPattern = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FillPatternContext);
        }
        else {
            return this.getRuleContext(i, FillPatternContext);
        }
    };
    DisplayAttributesContext.prototype.fillPatternVisible = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FillPatternVisibleContext);
        }
        else {
            return this.getRuleContext(i, FillPatternVisibleContext);
        }
    };
    DisplayAttributesContext.prototype.fontRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FontRefContext);
        }
        else {
            return this.getRuleContext(i, FontRefContext);
        }
    };
    DisplayAttributesContext.prototype.horizontalJustification = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(HorizontalJustificationContext);
        }
        else {
            return this.getRuleContext(i, HorizontalJustificationContext);
        }
    };
    DisplayAttributesContext.prototype.textHeight = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TextHeightContext);
        }
        else {
            return this.getRuleContext(i, TextHeightContext);
        }
    };
    DisplayAttributesContext.prototype.verticalJustification = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(VerticalJustificationContext);
        }
        else {
            return this.getRuleContext(i, VerticalJustificationContext);
        }
    };
    DisplayAttributesContext.prototype.visible = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(VisibleContext);
        }
        else {
            return this.getRuleContext(i, VisibleContext);
        }
    };
    Object.defineProperty(DisplayAttributesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_displayAttributes; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DisplayAttributesContext.prototype.enterRule = function (listener) {
        if (listener.enterDisplayAttributes) {
            listener.enterDisplayAttributes(this);
        }
    };
    // @Override
    DisplayAttributesContext.prototype.exitRule = function (listener) {
        if (listener.exitDisplayAttributes) {
            listener.exitDisplayAttributes(this);
        }
    };
    // @Override
    DisplayAttributesContext.prototype.accept = function (visitor) {
        if (visitor.visitDisplayAttributes) {
            return visitor.visitDisplayAttributes(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DisplayAttributesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DisplayAttributesContext = DisplayAttributesContext;
var DisplayNameContext = /** @class */ (function (_super) {
    __extends(DisplayNameContext, _super);
    function DisplayNameContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DisplayNameContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(DisplayNameContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_displayName; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DisplayNameContext.prototype.enterRule = function (listener) {
        if (listener.enterDisplayName) {
            listener.enterDisplayName(this);
        }
    };
    // @Override
    DisplayNameContext.prototype.exitRule = function (listener) {
        if (listener.exitDisplayName) {
            listener.exitDisplayName(this);
        }
    };
    // @Override
    DisplayNameContext.prototype.accept = function (visitor) {
        if (visitor.visitDisplayName) {
            return visitor.visitDisplayName(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DisplayNameContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DisplayNameContext = DisplayNameContext;
var DisplayNameOverrideContext = /** @class */ (function (_super) {
    __extends(DisplayNameOverrideContext, _super);
    function DisplayNameOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DisplayNameOverrideContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    DisplayNameOverrideContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    DisplayNameOverrideContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    DisplayNameOverrideContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(DisplayNameOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_displayNameOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DisplayNameOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterDisplayNameOverride) {
            listener.enterDisplayNameOverride(this);
        }
    };
    // @Override
    DisplayNameOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitDisplayNameOverride) {
            listener.exitDisplayNameOverride(this);
        }
    };
    // @Override
    DisplayNameOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitDisplayNameOverride) {
            return visitor.visitDisplayNameOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DisplayNameOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DisplayNameOverrideContext = DisplayNameOverrideContext;
var DistanceValueContext = /** @class */ (function (_super) {
    __extends(DistanceValueContext, _super);
    function DistanceValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DistanceValueContext.prototype.integerValue = function () {
        return this.getRuleContext(0, IntegerValueContext);
    };
    Object.defineProperty(DistanceValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_distanceValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DistanceValueContext.prototype.enterRule = function (listener) {
        if (listener.enterDistanceValue) {
            listener.enterDistanceValue(this);
        }
    };
    // @Override
    DistanceValueContext.prototype.exitRule = function (listener) {
        if (listener.exitDistanceValue) {
            listener.exitDistanceValue(this);
        }
    };
    // @Override
    DistanceValueContext.prototype.accept = function (visitor) {
        if (visitor.visitDistanceValue) {
            return visitor.visitDistanceValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DistanceValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DistanceValueContext = DistanceValueContext;
var DividendContext = /** @class */ (function (_super) {
    __extends(DividendContext, _super);
    function DividendContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DividendContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(DividendContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dividend; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DividendContext.prototype.enterRule = function (listener) {
        if (listener.enterDividend) {
            listener.enterDividend(this);
        }
    };
    // @Override
    DividendContext.prototype.exitRule = function (listener) {
        if (listener.exitDividend) {
            listener.exitDividend(this);
        }
    };
    // @Override
    DividendContext.prototype.accept = function (visitor) {
        if (visitor.visitDividend) {
            return visitor.visitDividend(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DividendContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DividendContext = DividendContext;
var DivisorContext = /** @class */ (function (_super) {
    __extends(DivisorContext, _super);
    function DivisorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DivisorContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(DivisorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_divisor; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DivisorContext.prototype.enterRule = function (listener) {
        if (listener.enterDivisor) {
            listener.enterDivisor(this);
        }
    };
    // @Override
    DivisorContext.prototype.exitRule = function (listener) {
        if (listener.exitDivisor) {
            listener.exitDivisor(this);
        }
    };
    // @Override
    DivisorContext.prototype.accept = function (visitor) {
        if (visitor.visitDivisor) {
            return visitor.visitDivisor(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DivisorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DivisorContext = DivisorContext;
var DocumentationContext = /** @class */ (function (_super) {
    __extends(DocumentationContext, _super);
    function DocumentationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DocumentationContext.prototype.documentationNameDef = function () {
        return this.getRuleContext(0, DocumentationNameDefContext);
    };
    DocumentationContext.prototype.documentationHeader = function () {
        return this.getRuleContext(0, DocumentationHeaderContext);
    };
    DocumentationContext.prototype.section = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SectionContext);
        }
        else {
            return this.getRuleContext(i, SectionContext);
        }
    };
    Object.defineProperty(DocumentationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_documentation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DocumentationContext.prototype.enterRule = function (listener) {
        if (listener.enterDocumentation) {
            listener.enterDocumentation(this);
        }
    };
    // @Override
    DocumentationContext.prototype.exitRule = function (listener) {
        if (listener.exitDocumentation) {
            listener.exitDocumentation(this);
        }
    };
    // @Override
    DocumentationContext.prototype.accept = function (visitor) {
        if (visitor.visitDocumentation) {
            return visitor.visitDocumentation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DocumentationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DocumentationContext = DocumentationContext;
var DocumentationHeaderContext = /** @class */ (function (_super) {
    __extends(DocumentationHeaderContext, _super);
    function DocumentationHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DocumentationHeaderContext.prototype.documentationUnits = function () {
        return this.getRuleContext(0, DocumentationUnitsContext);
    };
    DocumentationHeaderContext.prototype.backgroundColor = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BackgroundColorContext);
        }
        else {
            return this.getRuleContext(i, BackgroundColorContext);
        }
    };
    DocumentationHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    DocumentationHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(DocumentationHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_documentationHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DocumentationHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterDocumentationHeader) {
            listener.enterDocumentationHeader(this);
        }
    };
    // @Override
    DocumentationHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitDocumentationHeader) {
            listener.exitDocumentationHeader(this);
        }
    };
    // @Override
    DocumentationHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitDocumentationHeader) {
            return visitor.visitDocumentationHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DocumentationHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DocumentationHeaderContext = DocumentationHeaderContext;
var DocumentationNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(DocumentationNameCaseSensitiveContext, _super);
    function DocumentationNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DocumentationNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(DocumentationNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_documentationNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DocumentationNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterDocumentationNameCaseSensitive) {
            listener.enterDocumentationNameCaseSensitive(this);
        }
    };
    // @Override
    DocumentationNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitDocumentationNameCaseSensitive) {
            listener.exitDocumentationNameCaseSensitive(this);
        }
    };
    // @Override
    DocumentationNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitDocumentationNameCaseSensitive) {
            return visitor.visitDocumentationNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DocumentationNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DocumentationNameCaseSensitiveContext = DocumentationNameCaseSensitiveContext;
var DocumentationNameDefContext = /** @class */ (function (_super) {
    __extends(DocumentationNameDefContext, _super);
    function DocumentationNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DocumentationNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(DocumentationNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_documentationNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DocumentationNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterDocumentationNameDef) {
            listener.enterDocumentationNameDef(this);
        }
    };
    // @Override
    DocumentationNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitDocumentationNameDef) {
            listener.exitDocumentationNameDef(this);
        }
    };
    // @Override
    DocumentationNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitDocumentationNameDef) {
            return visitor.visitDocumentationNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DocumentationNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DocumentationNameDefContext = DocumentationNameDefContext;
var DocumentationUnitsContext = /** @class */ (function (_super) {
    __extends(DocumentationUnitsContext, _super);
    function DocumentationUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DocumentationUnitsContext.prototype.setAngle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetAngleContext);
        }
        else {
            return this.getRuleContext(i, SetAngleContext);
        }
    };
    DocumentationUnitsContext.prototype.setDistance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetDistanceContext);
        }
        else {
            return this.getRuleContext(i, SetDistanceContext);
        }
    };
    Object.defineProperty(DocumentationUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_documentationUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DocumentationUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterDocumentationUnits) {
            listener.enterDocumentationUnits(this);
        }
    };
    // @Override
    DocumentationUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitDocumentationUnits) {
            listener.exitDocumentationUnits(this);
        }
    };
    // @Override
    DocumentationUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitDocumentationUnits) {
            return visitor.visitDocumentationUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DocumentationUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DocumentationUnitsContext = DocumentationUnitsContext;
var DominatesContext = /** @class */ (function (_super) {
    __extends(DominatesContext, _super);
    function DominatesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DominatesContext.prototype.logicNameRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicNameRefContext);
        }
        else {
            return this.getRuleContext(i, LogicNameRefContext);
        }
    };
    Object.defineProperty(DominatesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dominates; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DominatesContext.prototype.enterRule = function (listener) {
        if (listener.enterDominates) {
            listener.enterDominates(this);
        }
    };
    // @Override
    DominatesContext.prototype.exitRule = function (listener) {
        if (listener.exitDominates) {
            listener.exitDominates(this);
        }
    };
    // @Override
    DominatesContext.prototype.accept = function (visitor) {
        if (visitor.visitDominates) {
            return visitor.visitDominates(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DominatesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DominatesContext = DominatesContext;
var DotContext = /** @class */ (function (_super) {
    __extends(DotContext, _super);
    function DotContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DotContext.prototype.pointValue = function () {
        return this.getRuleContext(0, PointValueContext);
    };
    Object.defineProperty(DotContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_dot; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DotContext.prototype.enterRule = function (listener) {
        if (listener.enterDot) {
            listener.enterDot(this);
        }
    };
    // @Override
    DotContext.prototype.exitRule = function (listener) {
        if (listener.exitDot) {
            listener.exitDot(this);
        }
    };
    // @Override
    DotContext.prototype.accept = function (visitor) {
        if (visitor.visitDot) {
            return visitor.visitDot(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DotContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DotContext = DotContext;
var DrawingDescriptionContext = /** @class */ (function (_super) {
    __extends(DrawingDescriptionContext, _super);
    function DrawingDescriptionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DrawingDescriptionContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(DrawingDescriptionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_drawingDescription; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DrawingDescriptionContext.prototype.enterRule = function (listener) {
        if (listener.enterDrawingDescription) {
            listener.enterDrawingDescription(this);
        }
    };
    // @Override
    DrawingDescriptionContext.prototype.exitRule = function (listener) {
        if (listener.exitDrawingDescription) {
            listener.exitDrawingDescription(this);
        }
    };
    // @Override
    DrawingDescriptionContext.prototype.accept = function (visitor) {
        if (visitor.visitDrawingDescription) {
            return visitor.visitDrawingDescription(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DrawingDescriptionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DrawingDescriptionContext = DrawingDescriptionContext;
var DrawingDescriptionDisplayContext = /** @class */ (function (_super) {
    __extends(DrawingDescriptionDisplayContext, _super);
    function DrawingDescriptionDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DrawingDescriptionDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    DrawingDescriptionDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    DrawingDescriptionDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(DrawingDescriptionDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_drawingDescriptionDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DrawingDescriptionDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterDrawingDescriptionDisplay) {
            listener.enterDrawingDescriptionDisplay(this);
        }
    };
    // @Override
    DrawingDescriptionDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitDrawingDescriptionDisplay) {
            listener.exitDrawingDescriptionDisplay(this);
        }
    };
    // @Override
    DrawingDescriptionDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitDrawingDescriptionDisplay) {
            return visitor.visitDrawingDescriptionDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DrawingDescriptionDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DrawingDescriptionDisplayContext = DrawingDescriptionDisplayContext;
var DrawingIdentificationContext = /** @class */ (function (_super) {
    __extends(DrawingIdentificationContext, _super);
    function DrawingIdentificationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DrawingIdentificationContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(DrawingIdentificationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_drawingIdentification; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DrawingIdentificationContext.prototype.enterRule = function (listener) {
        if (listener.enterDrawingIdentification) {
            listener.enterDrawingIdentification(this);
        }
    };
    // @Override
    DrawingIdentificationContext.prototype.exitRule = function (listener) {
        if (listener.exitDrawingIdentification) {
            listener.exitDrawingIdentification(this);
        }
    };
    // @Override
    DrawingIdentificationContext.prototype.accept = function (visitor) {
        if (visitor.visitDrawingIdentification) {
            return visitor.visitDrawingIdentification(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DrawingIdentificationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DrawingIdentificationContext = DrawingIdentificationContext;
var DrawingIdentificationDisplayContext = /** @class */ (function (_super) {
    __extends(DrawingIdentificationDisplayContext, _super);
    function DrawingIdentificationDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DrawingIdentificationDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    DrawingIdentificationDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    DrawingIdentificationDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(DrawingIdentificationDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_drawingIdentificationDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DrawingIdentificationDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterDrawingIdentificationDisplay) {
            listener.enterDrawingIdentificationDisplay(this);
        }
    };
    // @Override
    DrawingIdentificationDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitDrawingIdentificationDisplay) {
            listener.exitDrawingIdentificationDisplay(this);
        }
    };
    // @Override
    DrawingIdentificationDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitDrawingIdentificationDisplay) {
            return visitor.visitDrawingIdentificationDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DrawingIdentificationDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DrawingIdentificationDisplayContext = DrawingIdentificationDisplayContext;
var DrawingSizeContext = /** @class */ (function (_super) {
    __extends(DrawingSizeContext, _super);
    function DrawingSizeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DrawingSizeContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(DrawingSizeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_drawingSize; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DrawingSizeContext.prototype.enterRule = function (listener) {
        if (listener.enterDrawingSize) {
            listener.enterDrawingSize(this);
        }
    };
    // @Override
    DrawingSizeContext.prototype.exitRule = function (listener) {
        if (listener.exitDrawingSize) {
            listener.exitDrawingSize(this);
        }
    };
    // @Override
    DrawingSizeContext.prototype.accept = function (visitor) {
        if (visitor.visitDrawingSize) {
            return visitor.visitDrawingSize(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DrawingSizeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DrawingSizeContext = DrawingSizeContext;
var DrawingSizeDisplayContext = /** @class */ (function (_super) {
    __extends(DrawingSizeDisplayContext, _super);
    function DrawingSizeDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DrawingSizeDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    DrawingSizeDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    DrawingSizeDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(DrawingSizeDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_drawingSizeDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DrawingSizeDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterDrawingSizeDisplay) {
            listener.enterDrawingSizeDisplay(this);
        }
    };
    // @Override
    DrawingSizeDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitDrawingSizeDisplay) {
            listener.exitDrawingSizeDisplay(this);
        }
    };
    // @Override
    DrawingSizeDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitDrawingSizeDisplay) {
            return visitor.visitDrawingSizeDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DrawingSizeDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DrawingSizeDisplayContext = DrawingSizeDisplayContext;
var DurationContext = /** @class */ (function (_super) {
    __extends(DurationContext, _super);
    function DurationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    DurationContext.prototype.timeValue = function () {
        return this.getRuleContext(0, TimeValueContext);
    };
    Object.defineProperty(DurationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_duration; },
        enumerable: true,
        configurable: true
    });
    // @Override
    DurationContext.prototype.enterRule = function (listener) {
        if (listener.enterDuration) {
            listener.enterDuration(this);
        }
    };
    // @Override
    DurationContext.prototype.exitRule = function (listener) {
        if (listener.exitDuration) {
            listener.exitDuration(this);
        }
    };
    // @Override
    DurationContext.prototype.accept = function (visitor) {
        if (visitor.visitDuration) {
            return visitor.visitDuration(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return DurationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.DurationContext = DurationContext;
var EContext = /** @class */ (function (_super) {
    __extends(EContext, _super);
    function EContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EContext.prototype.mantissa = function () {
        return this.getRuleContext(0, MantissaContext);
    };
    EContext.prototype.exponent = function () {
        return this.getRuleContext(0, ExponentContext);
    };
    Object.defineProperty(EContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_e; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EContext.prototype.enterRule = function (listener) {
        if (listener.enterE) {
            listener.enterE(this);
        }
    };
    // @Override
    EContext.prototype.exitRule = function (listener) {
        if (listener.exitE) {
            listener.exitE(this);
        }
    };
    // @Override
    EContext.prototype.accept = function (visitor) {
        if (visitor.visitE) {
            return visitor.visitE(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EContext = EContext;
var EdifContext = /** @class */ (function (_super) {
    __extends(EdifContext, _super);
    function EdifContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EdifContext.prototype.edifNameDef = function () {
        return this.getRuleContext(0, EdifNameDefContext);
    };
    EdifContext.prototype.edifVersion = function () {
        return this.getRuleContext(0, EdifVersionContext);
    };
    EdifContext.prototype.edifHeader = function () {
        return this.getRuleContext(0, EdifHeaderContext);
    };
    EdifContext.prototype.library = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LibraryContext);
        }
        else {
            return this.getRuleContext(i, LibraryContext);
        }
    };
    EdifContext.prototype.design = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignContext);
        }
        else {
            return this.getRuleContext(i, DesignContext);
        }
    };
    EdifContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    EdifContext.prototype.external = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ExternalContext);
        }
        else {
            return this.getRuleContext(i, ExternalContext);
        }
    };
    EdifContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(EdifContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_edif; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EdifContext.prototype.enterRule = function (listener) {
        if (listener.enterEdif) {
            listener.enterEdif(this);
        }
    };
    // @Override
    EdifContext.prototype.exitRule = function (listener) {
        if (listener.exitEdif) {
            listener.exitEdif(this);
        }
    };
    // @Override
    EdifContext.prototype.accept = function (visitor) {
        if (visitor.visitEdif) {
            return visitor.visitEdif(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EdifContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EdifContext = EdifContext;
var EdifHeaderContext = /** @class */ (function (_super) {
    __extends(EdifHeaderContext, _super);
    function EdifHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EdifHeaderContext.prototype.edifLevel = function () {
        return this.getRuleContext(0, EdifLevelContext);
    };
    EdifHeaderContext.prototype.keywordMap = function () {
        return this.getRuleContext(0, KeywordMapContext);
    };
    EdifHeaderContext.prototype.unitDefinitions = function () {
        return this.getRuleContext(0, UnitDefinitionsContext);
    };
    EdifHeaderContext.prototype.fontDefinitions = function () {
        return this.getRuleContext(0, FontDefinitionsContext);
    };
    EdifHeaderContext.prototype.physicalDefaults = function () {
        return this.getRuleContext(0, PhysicalDefaultsContext);
    };
    EdifHeaderContext.prototype.characterEncoding = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CharacterEncodingContext);
        }
        else {
            return this.getRuleContext(i, CharacterEncodingContext);
        }
    };
    EdifHeaderContext.prototype.constantValues = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConstantValuesContext);
        }
        else {
            return this.getRuleContext(i, ConstantValuesContext);
        }
    };
    EdifHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    EdifHeaderContext.prototype.globalPortDefinitions = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortDefinitionsContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortDefinitionsContext);
        }
    };
    EdifHeaderContext.prototype.nameCaseSensitivity = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameCaseSensitivityContext);
        }
        else {
            return this.getRuleContext(i, NameCaseSensitivityContext);
        }
    };
    EdifHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    EdifHeaderContext.prototype.physicalScaling = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PhysicalScalingContext);
        }
        else {
            return this.getRuleContext(i, PhysicalScalingContext);
        }
    };
    EdifHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    EdifHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(EdifHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_edifHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EdifHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterEdifHeader) {
            listener.enterEdifHeader(this);
        }
    };
    // @Override
    EdifHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitEdifHeader) {
            listener.exitEdifHeader(this);
        }
    };
    // @Override
    EdifHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitEdifHeader) {
            return visitor.visitEdifHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EdifHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EdifHeaderContext = EdifHeaderContext;
var EdifLevelContext = /** @class */ (function (_super) {
    __extends(EdifLevelContext, _super);
    function EdifLevelContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EdifLevelContext.prototype.edifLevelValue = function () {
        return this.getRuleContext(0, EdifLevelValueContext);
    };
    Object.defineProperty(EdifLevelContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_edifLevel; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EdifLevelContext.prototype.enterRule = function (listener) {
        if (listener.enterEdifLevel) {
            listener.enterEdifLevel(this);
        }
    };
    // @Override
    EdifLevelContext.prototype.exitRule = function (listener) {
        if (listener.exitEdifLevel) {
            listener.exitEdifLevel(this);
        }
    };
    // @Override
    EdifLevelContext.prototype.accept = function (visitor) {
        if (visitor.visitEdifLevel) {
            return visitor.visitEdifLevel(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EdifLevelContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EdifLevelContext = EdifLevelContext;
var EdifLevelValueContext = /** @class */ (function (_super) {
    __extends(EdifLevelValueContext, _super);
    function EdifLevelValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EdifLevelValueContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(EdifLevelValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_edifLevelValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EdifLevelValueContext.prototype.enterRule = function (listener) {
        if (listener.enterEdifLevelValue) {
            listener.enterEdifLevelValue(this);
        }
    };
    // @Override
    EdifLevelValueContext.prototype.exitRule = function (listener) {
        if (listener.exitEdifLevelValue) {
            listener.exitEdifLevelValue(this);
        }
    };
    // @Override
    EdifLevelValueContext.prototype.accept = function (visitor) {
        if (visitor.visitEdifLevelValue) {
            return visitor.visitEdifLevelValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EdifLevelValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EdifLevelValueContext = EdifLevelValueContext;
var EdifNameDefContext = /** @class */ (function (_super) {
    __extends(EdifNameDefContext, _super);
    function EdifNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EdifNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(EdifNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_edifNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EdifNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterEdifNameDef) {
            listener.enterEdifNameDef(this);
        }
    };
    // @Override
    EdifNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitEdifNameDef) {
            listener.exitEdifNameDef(this);
        }
    };
    // @Override
    EdifNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitEdifNameDef) {
            return visitor.visitEdifNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EdifNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EdifNameDefContext = EdifNameDefContext;
var EdifVersionContext = /** @class */ (function (_super) {
    __extends(EdifVersionContext, _super);
    function EdifVersionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EdifVersionContext.prototype.mark = function () {
        return this.getRuleContext(0, MarkContext);
    };
    EdifVersionContext.prototype.issue = function () {
        return this.getRuleContext(0, IssueContext);
    };
    EdifVersionContext.prototype.subIssue = function () {
        return this.getRuleContext(0, SubIssueContext);
    };
    Object.defineProperty(EdifVersionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_edifVersion; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EdifVersionContext.prototype.enterRule = function (listener) {
        if (listener.enterEdifVersion) {
            listener.enterEdifVersion(this);
        }
    };
    // @Override
    EdifVersionContext.prototype.exitRule = function (listener) {
        if (listener.exitEdifVersion) {
            listener.exitEdifVersion(this);
        }
    };
    // @Override
    EdifVersionContext.prototype.accept = function (visitor) {
        if (visitor.visitEdifVersion) {
            return visitor.visitEdifVersion(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EdifVersionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EdifVersionContext = EdifVersionContext;
var EndPointContext = /** @class */ (function (_super) {
    __extends(EndPointContext, _super);
    function EndPointContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EndPointContext.prototype.pointValue = function () {
        return this.getRuleContext(0, PointValueContext);
    };
    Object.defineProperty(EndPointContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_endPoint; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EndPointContext.prototype.enterRule = function (listener) {
        if (listener.enterEndPoint) {
            listener.enterEndPoint(this);
        }
    };
    // @Override
    EndPointContext.prototype.exitRule = function (listener) {
        if (listener.exitEndPoint) {
            listener.exitEndPoint(this);
        }
    };
    // @Override
    EndPointContext.prototype.accept = function (visitor) {
        if (visitor.visitEndPoint) {
            return visitor.visitEndPoint(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EndPointContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EndPointContext = EndPointContext;
var EndTypeContext = /** @class */ (function (_super) {
    __extends(EndTypeContext, _super);
    function EndTypeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EndTypeContext.prototype.truncate = function () {
        return this.tryGetRuleContext(0, TruncateContext);
    };
    EndTypeContext.prototype.round = function () {
        return this.tryGetRuleContext(0, RoundContext);
    };
    EndTypeContext.prototype.extend = function () {
        return this.tryGetRuleContext(0, ExtendContext);
    };
    Object.defineProperty(EndTypeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_endType; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EndTypeContext.prototype.enterRule = function (listener) {
        if (listener.enterEndType) {
            listener.enterEndType(this);
        }
    };
    // @Override
    EndTypeContext.prototype.exitRule = function (listener) {
        if (listener.exitEndType) {
            listener.exitEndType(this);
        }
    };
    // @Override
    EndTypeContext.prototype.accept = function (visitor) {
        if (visitor.visitEndType) {
            return visitor.visitEndType(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EndTypeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EndTypeContext = EndTypeContext;
var EngineeringDateContext = /** @class */ (function (_super) {
    __extends(EngineeringDateContext, _super);
    function EngineeringDateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EngineeringDateContext.prototype.date = function () {
        return this.getRuleContext(0, DateContext);
    };
    Object.defineProperty(EngineeringDateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_engineeringDate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EngineeringDateContext.prototype.enterRule = function (listener) {
        if (listener.enterEngineeringDate) {
            listener.enterEngineeringDate(this);
        }
    };
    // @Override
    EngineeringDateContext.prototype.exitRule = function (listener) {
        if (listener.exitEngineeringDate) {
            listener.exitEngineeringDate(this);
        }
    };
    // @Override
    EngineeringDateContext.prototype.accept = function (visitor) {
        if (visitor.visitEngineeringDate) {
            return visitor.visitEngineeringDate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EngineeringDateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EngineeringDateContext = EngineeringDateContext;
var EngineeringDateDisplayContext = /** @class */ (function (_super) {
    __extends(EngineeringDateDisplayContext, _super);
    function EngineeringDateDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EngineeringDateDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    EngineeringDateDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    EngineeringDateDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(EngineeringDateDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_engineeringDateDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EngineeringDateDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterEngineeringDateDisplay) {
            listener.enterEngineeringDateDisplay(this);
        }
    };
    // @Override
    EngineeringDateDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitEngineeringDateDisplay) {
            listener.exitEngineeringDateDisplay(this);
        }
    };
    // @Override
    EngineeringDateDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitEngineeringDateDisplay) {
            return visitor.visitEngineeringDateDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EngineeringDateDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EngineeringDateDisplayContext = EngineeringDateDisplayContext;
var EventContext = /** @class */ (function (_super) {
    __extends(EventContext, _super);
    function EventContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EventContext.prototype.portRef = function () {
        return this.tryGetRuleContext(0, PortRefContext);
    };
    EventContext.prototype.portList = function () {
        return this.tryGetRuleContext(0, PortListContext);
    };
    EventContext.prototype.portSet = function () {
        return this.tryGetRuleContext(0, PortSetContext);
    };
    EventContext.prototype.interconnectRef = function () {
        return this.tryGetRuleContext(0, InterconnectRefContext);
    };
    EventContext.prototype.interconnectSet = function () {
        return this.tryGetRuleContext(0, InterconnectSetContext);
    };
    EventContext.prototype.becomes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BecomesContext);
        }
        else {
            return this.getRuleContext(i, BecomesContext);
        }
    };
    EventContext.prototype.transition = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TransitionContext);
        }
        else {
            return this.getRuleContext(i, TransitionContext);
        }
    };
    Object.defineProperty(EventContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_event; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EventContext.prototype.enterRule = function (listener) {
        if (listener.enterEvent) {
            listener.enterEvent(this);
        }
    };
    // @Override
    EventContext.prototype.exitRule = function (listener) {
        if (listener.exitEvent) {
            listener.exitEvent(this);
        }
    };
    // @Override
    EventContext.prototype.accept = function (visitor) {
        if (visitor.visitEvent) {
            return visitor.visitEvent(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EventContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EventContext = EventContext;
var ExponentContext = /** @class */ (function (_super) {
    __extends(ExponentContext, _super);
    function ExponentContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExponentContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(ExponentContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_exponent; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExponentContext.prototype.enterRule = function (listener) {
        if (listener.enterExponent) {
            listener.enterExponent(this);
        }
    };
    // @Override
    ExponentContext.prototype.exitRule = function (listener) {
        if (listener.exitExponent) {
            listener.exitExponent(this);
        }
    };
    // @Override
    ExponentContext.prototype.accept = function (visitor) {
        if (visitor.visitExponent) {
            return visitor.visitExponent(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExponentContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExponentContext = ExponentContext;
var ExtendContext = /** @class */ (function (_super) {
    __extends(ExtendContext, _super);
    function ExtendContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(ExtendContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extend; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendContext.prototype.enterRule = function (listener) {
        if (listener.enterExtend) {
            listener.enterExtend(this);
        }
    };
    // @Override
    ExtendContext.prototype.exitRule = function (listener) {
        if (listener.exitExtend) {
            listener.exitExtend(this);
        }
    };
    // @Override
    ExtendContext.prototype.accept = function (visitor) {
        if (visitor.visitExtend) {
            return visitor.visitExtend(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendContext = ExtendContext;
var ExtendForFrameMemberDefContext = /** @class */ (function (_super) {
    __extends(ExtendForFrameMemberDefContext, _super);
    function ExtendForFrameMemberDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendForFrameMemberDefContext.prototype.forFrameMemberRef = function () {
        return this.getRuleContext(0, ForFrameMemberRefContext);
    };
    Object.defineProperty(ExtendForFrameMemberDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendForFrameMemberDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendForFrameMemberDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendForFrameMemberDef) {
            listener.enterExtendForFrameMemberDef(this);
        }
    };
    // @Override
    ExtendForFrameMemberDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendForFrameMemberDef) {
            listener.exitExtendForFrameMemberDef(this);
        }
    };
    // @Override
    ExtendForFrameMemberDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendForFrameMemberDef) {
            return visitor.visitExtendForFrameMemberDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendForFrameMemberDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendForFrameMemberDefContext = ExtendForFrameMemberDefContext;
var ExtendFrameDefContext = /** @class */ (function (_super) {
    __extends(ExtendFrameDefContext, _super);
    function ExtendFrameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendFrameDefContext.prototype.frameNameRef = function () {
        return this.getRuleContext(0, FrameNameRefContext);
    };
    Object.defineProperty(ExtendFrameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendFrameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendFrameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendFrameDef) {
            listener.enterExtendFrameDef(this);
        }
    };
    // @Override
    ExtendFrameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendFrameDef) {
            listener.exitExtendFrameDef(this);
        }
    };
    // @Override
    ExtendFrameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendFrameDef) {
            return visitor.visitExtendFrameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendFrameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendFrameDefContext = ExtendFrameDefContext;
var ExtendInstanceDefContext = /** @class */ (function (_super) {
    __extends(ExtendInstanceDefContext, _super);
    function ExtendInstanceDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendInstanceDefContext.prototype.instanceNameRef = function () {
        return this.getRuleContext(0, InstanceNameRefContext);
    };
    Object.defineProperty(ExtendInstanceDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendInstanceDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendInstanceDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendInstanceDef) {
            listener.enterExtendInstanceDef(this);
        }
    };
    // @Override
    ExtendInstanceDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendInstanceDef) {
            listener.exitExtendInstanceDef(this);
        }
    };
    // @Override
    ExtendInstanceDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendInstanceDef) {
            return visitor.visitExtendInstanceDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendInstanceDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendInstanceDefContext = ExtendInstanceDefContext;
var ExtendInstanceMemberDefContext = /** @class */ (function (_super) {
    __extends(ExtendInstanceMemberDefContext, _super);
    function ExtendInstanceMemberDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendInstanceMemberDefContext.prototype.instanceMemberRef = function () {
        return this.getRuleContext(0, InstanceMemberRefContext);
    };
    Object.defineProperty(ExtendInstanceMemberDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendInstanceMemberDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendInstanceMemberDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendInstanceMemberDef) {
            listener.enterExtendInstanceMemberDef(this);
        }
    };
    // @Override
    ExtendInstanceMemberDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendInstanceMemberDef) {
            listener.exitExtendInstanceMemberDef(this);
        }
    };
    // @Override
    ExtendInstanceMemberDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendInstanceMemberDef) {
            return visitor.visitExtendInstanceMemberDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendInstanceMemberDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendInstanceMemberDefContext = ExtendInstanceMemberDefContext;
var ExtendInterconnectDefContext = /** @class */ (function (_super) {
    __extends(ExtendInterconnectDefContext, _super);
    function ExtendInterconnectDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendInterconnectDefContext.prototype.interconnectNameRef = function () {
        return this.getRuleContext(0, InterconnectNameRefContext);
    };
    Object.defineProperty(ExtendInterconnectDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendInterconnectDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendInterconnectDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendInterconnectDef) {
            listener.enterExtendInterconnectDef(this);
        }
    };
    // @Override
    ExtendInterconnectDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendInterconnectDef) {
            listener.exitExtendInterconnectDef(this);
        }
    };
    // @Override
    ExtendInterconnectDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendInterconnectDef) {
            return visitor.visitExtendInterconnectDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendInterconnectDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendInterconnectDefContext = ExtendInterconnectDefContext;
var ExtendPageDefContext = /** @class */ (function (_super) {
    __extends(ExtendPageDefContext, _super);
    function ExtendPageDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendPageDefContext.prototype.pageNameRef = function () {
        return this.getRuleContext(0, PageNameRefContext);
    };
    Object.defineProperty(ExtendPageDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendPageDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendPageDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendPageDef) {
            listener.enterExtendPageDef(this);
        }
    };
    // @Override
    ExtendPageDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendPageDef) {
            listener.exitExtendPageDef(this);
        }
    };
    // @Override
    ExtendPageDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendPageDef) {
            return visitor.visitExtendPageDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendPageDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendPageDefContext = ExtendPageDefContext;
var ExtendPortDefContext = /** @class */ (function (_super) {
    __extends(ExtendPortDefContext, _super);
    function ExtendPortDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendPortDefContext.prototype.portNameRef = function () {
        return this.getRuleContext(0, PortNameRefContext);
    };
    Object.defineProperty(ExtendPortDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendPortDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendPortDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendPortDef) {
            listener.enterExtendPortDef(this);
        }
    };
    // @Override
    ExtendPortDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendPortDef) {
            listener.exitExtendPortDef(this);
        }
    };
    // @Override
    ExtendPortDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendPortDef) {
            return visitor.visitExtendPortDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendPortDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendPortDefContext = ExtendPortDefContext;
var ExtendPortMemberDefContext = /** @class */ (function (_super) {
    __extends(ExtendPortMemberDefContext, _super);
    function ExtendPortMemberDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendPortMemberDefContext.prototype.portMemberRef = function () {
        return this.getRuleContext(0, PortMemberRefContext);
    };
    Object.defineProperty(ExtendPortMemberDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendPortMemberDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendPortMemberDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendPortMemberDef) {
            listener.enterExtendPortMemberDef(this);
        }
    };
    // @Override
    ExtendPortMemberDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendPortMemberDef) {
            listener.exitExtendPortMemberDef(this);
        }
    };
    // @Override
    ExtendPortMemberDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendPortMemberDef) {
            return visitor.visitExtendPortMemberDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendPortMemberDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendPortMemberDefContext = ExtendPortMemberDefContext;
var ExtendSignalDefContext = /** @class */ (function (_super) {
    __extends(ExtendSignalDefContext, _super);
    function ExtendSignalDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendSignalDefContext.prototype.signalNameRef = function () {
        return this.getRuleContext(0, SignalNameRefContext);
    };
    Object.defineProperty(ExtendSignalDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendSignalDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendSignalDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendSignalDef) {
            listener.enterExtendSignalDef(this);
        }
    };
    // @Override
    ExtendSignalDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendSignalDef) {
            listener.exitExtendSignalDef(this);
        }
    };
    // @Override
    ExtendSignalDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendSignalDef) {
            return visitor.visitExtendSignalDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendSignalDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendSignalDefContext = ExtendSignalDefContext;
var ExtendSignalGroupDefContext = /** @class */ (function (_super) {
    __extends(ExtendSignalGroupDefContext, _super);
    function ExtendSignalGroupDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendSignalGroupDefContext.prototype.signalGroupNameRef = function () {
        return this.getRuleContext(0, SignalGroupNameRefContext);
    };
    Object.defineProperty(ExtendSignalGroupDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendSignalGroupDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendSignalGroupDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendSignalGroupDef) {
            listener.enterExtendSignalGroupDef(this);
        }
    };
    // @Override
    ExtendSignalGroupDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendSignalGroupDef) {
            listener.exitExtendSignalGroupDef(this);
        }
    };
    // @Override
    ExtendSignalGroupDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendSignalGroupDef) {
            return visitor.visitExtendSignalGroupDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendSignalGroupDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendSignalGroupDefContext = ExtendSignalGroupDefContext;
var ExtendSignalMemberDefContext = /** @class */ (function (_super) {
    __extends(ExtendSignalMemberDefContext, _super);
    function ExtendSignalMemberDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExtendSignalMemberDefContext.prototype.signalMemberRef = function () {
        return this.getRuleContext(0, SignalMemberRefContext);
    };
    Object.defineProperty(ExtendSignalMemberDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_extendSignalMemberDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExtendSignalMemberDefContext.prototype.enterRule = function (listener) {
        if (listener.enterExtendSignalMemberDef) {
            listener.enterExtendSignalMemberDef(this);
        }
    };
    // @Override
    ExtendSignalMemberDefContext.prototype.exitRule = function (listener) {
        if (listener.exitExtendSignalMemberDef) {
            listener.exitExtendSignalMemberDef(this);
        }
    };
    // @Override
    ExtendSignalMemberDefContext.prototype.accept = function (visitor) {
        if (visitor.visitExtendSignalMemberDef) {
            return visitor.visitExtendSignalMemberDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExtendSignalMemberDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExtendSignalMemberDefContext = ExtendSignalMemberDefContext;
var ExternalContext = /** @class */ (function (_super) {
    __extends(ExternalContext, _super);
    function ExternalContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ExternalContext.prototype.libraryNameDef = function () {
        return this.getRuleContext(0, LibraryNameDefContext);
    };
    ExternalContext.prototype.libraryHeader = function () {
        return this.getRuleContext(0, LibraryHeaderContext);
    };
    ExternalContext.prototype.cell = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellContext);
        }
        else {
            return this.getRuleContext(i, CellContext);
        }
    };
    ExternalContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ExternalContext.prototype.geometryMacro = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GeometryMacroContext);
        }
        else {
            return this.getRuleContext(i, GeometryMacroContext);
        }
    };
    ExternalContext.prototype.pageBorderTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageBorderTemplateContext);
        }
        else {
            return this.getRuleContext(i, PageBorderTemplateContext);
        }
    };
    ExternalContext.prototype.pageTitleBlockTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageTitleBlockTemplateContext);
        }
        else {
            return this.getRuleContext(i, PageTitleBlockTemplateContext);
        }
    };
    ExternalContext.prototype.schematicFigureMacro = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicFigureMacroContext);
        }
        else {
            return this.getRuleContext(i, SchematicFigureMacroContext);
        }
    };
    ExternalContext.prototype.schematicForFrameBorderTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicForFrameBorderTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicForFrameBorderTemplateContext);
        }
    };
    ExternalContext.prototype.schematicGlobalPortTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicGlobalPortTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicGlobalPortTemplateContext);
        }
    };
    ExternalContext.prototype.schematicIfFrameBorderTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicIfFrameBorderTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicIfFrameBorderTemplateContext);
        }
    };
    ExternalContext.prototype.schematicInterconnectTerminatorTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInterconnectTerminatorTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicInterconnectTerminatorTemplateContext);
        }
    };
    ExternalContext.prototype.schematicJunctionTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicJunctionTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicJunctionTemplateContext);
        }
    };
    ExternalContext.prototype.schematicMasterPortTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicMasterPortTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicMasterPortTemplateContext);
        }
    };
    ExternalContext.prototype.schematicOffPageConnectorTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOffPageConnectorTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicOffPageConnectorTemplateContext);
        }
    };
    ExternalContext.prototype.schematicOnPageConnectorTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOnPageConnectorTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicOnPageConnectorTemplateContext);
        }
    };
    ExternalContext.prototype.schematicOtherwiseFrameBorderTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOtherwiseFrameBorderTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicOtherwiseFrameBorderTemplateContext);
        }
    };
    ExternalContext.prototype.schematicRipperTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicRipperTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicRipperTemplateContext);
        }
    };
    ExternalContext.prototype.schematicSymbolBorderTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSymbolBorderTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicSymbolBorderTemplateContext);
        }
    };
    ExternalContext.prototype.schematicSymbolPortTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSymbolPortTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicSymbolPortTemplateContext);
        }
    };
    ExternalContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ExternalContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_external; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ExternalContext.prototype.enterRule = function (listener) {
        if (listener.enterExternal) {
            listener.enterExternal(this);
        }
    };
    // @Override
    ExternalContext.prototype.exitRule = function (listener) {
        if (listener.exitExternal) {
            listener.exitExternal(this);
        }
    };
    // @Override
    ExternalContext.prototype.accept = function (visitor) {
        if (visitor.visitExternal) {
            return visitor.visitExternal(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ExternalContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ExternalContext = ExternalContext;
var FahrenheitContext = /** @class */ (function (_super) {
    __extends(FahrenheitContext, _super);
    function FahrenheitContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FahrenheitContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(FahrenheitContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fahrenheit; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FahrenheitContext.prototype.enterRule = function (listener) {
        if (listener.enterFahrenheit) {
            listener.enterFahrenheit(this);
        }
    };
    // @Override
    FahrenheitContext.prototype.exitRule = function (listener) {
        if (listener.exitFahrenheit) {
            listener.exitFahrenheit(this);
        }
    };
    // @Override
    FahrenheitContext.prototype.accept = function (visitor) {
        if (visitor.visitFahrenheit) {
            return visitor.visitFahrenheit(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FahrenheitContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FahrenheitContext = FahrenheitContext;
var EfalseContext = /** @class */ (function (_super) {
    __extends(EfalseContext, _super);
    function EfalseContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(EfalseContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_efalse; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EfalseContext.prototype.enterRule = function (listener) {
        if (listener.enterEfalse) {
            listener.enterEfalse(this);
        }
    };
    // @Override
    EfalseContext.prototype.exitRule = function (listener) {
        if (listener.exitEfalse) {
            listener.exitEfalse(this);
        }
    };
    // @Override
    EfalseContext.prototype.accept = function (visitor) {
        if (visitor.visitEfalse) {
            return visitor.visitEfalse(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EfalseContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EfalseContext = EfalseContext;
var FaradContext = /** @class */ (function (_super) {
    __extends(FaradContext, _super);
    function FaradContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FaradContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(FaradContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_farad; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FaradContext.prototype.enterRule = function (listener) {
        if (listener.enterFarad) {
            listener.enterFarad(this);
        }
    };
    // @Override
    FaradContext.prototype.exitRule = function (listener) {
        if (listener.exitFarad) {
            listener.exitFarad(this);
        }
    };
    // @Override
    FaradContext.prototype.accept = function (visitor) {
        if (visitor.visitFarad) {
            return visitor.visitFarad(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FaradContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FaradContext = FaradContext;
var FigureContext = /** @class */ (function (_super) {
    __extends(FigureContext, _super);
    function FigureContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FigureContext.prototype.figureGroupNameRef = function () {
        return this.tryGetRuleContext(0, FigureGroupNameRefContext);
    };
    FigureContext.prototype.figureGroupOverride = function () {
        return this.tryGetRuleContext(0, FigureGroupOverrideContext);
    };
    FigureContext.prototype.circle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CircleContext);
        }
        else {
            return this.getRuleContext(i, CircleContext);
        }
    };
    FigureContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    FigureContext.prototype.complexGeometry = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ComplexGeometryContext);
        }
        else {
            return this.getRuleContext(i, ComplexGeometryContext);
        }
    };
    FigureContext.prototype.dot = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DotContext);
        }
        else {
            return this.getRuleContext(i, DotContext);
        }
    };
    FigureContext.prototype.openShape = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OpenShapeContext);
        }
        else {
            return this.getRuleContext(i, OpenShapeContext);
        }
    };
    FigureContext.prototype.path = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PathContext);
        }
        else {
            return this.getRuleContext(i, PathContext);
        }
    };
    FigureContext.prototype.polygon = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PolygonContext);
        }
        else {
            return this.getRuleContext(i, PolygonContext);
        }
    };
    FigureContext.prototype.rectangle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RectangleContext);
        }
        else {
            return this.getRuleContext(i, RectangleContext);
        }
    };
    FigureContext.prototype.shape = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ShapeContext);
        }
        else {
            return this.getRuleContext(i, ShapeContext);
        }
    };
    FigureContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(FigureContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_figure; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FigureContext.prototype.enterRule = function (listener) {
        if (listener.enterFigure) {
            listener.enterFigure(this);
        }
    };
    // @Override
    FigureContext.prototype.exitRule = function (listener) {
        if (listener.exitFigure) {
            listener.exitFigure(this);
        }
    };
    // @Override
    FigureContext.prototype.accept = function (visitor) {
        if (visitor.visitFigure) {
            return visitor.visitFigure(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FigureContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FigureContext = FigureContext;
var FigureGroupContext = /** @class */ (function (_super) {
    __extends(FigureGroupContext, _super);
    function FigureGroupContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FigureGroupContext.prototype.figureGroupNameDef = function () {
        return this.getRuleContext(0, FigureGroupNameDefContext);
    };
    FigureGroupContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    FigureGroupContext.prototype.cornerType = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CornerTypeContext);
        }
        else {
            return this.getRuleContext(i, CornerTypeContext);
        }
    };
    FigureGroupContext.prototype.displayAttributes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayAttributesContext);
        }
        else {
            return this.getRuleContext(i, DisplayAttributesContext);
        }
    };
    FigureGroupContext.prototype.endType = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(EndTypeContext);
        }
        else {
            return this.getRuleContext(i, EndTypeContext);
        }
    };
    FigureGroupContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    FigureGroupContext.prototype.pathWidth = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PathWidthContext);
        }
        else {
            return this.getRuleContext(i, PathWidthContext);
        }
    };
    FigureGroupContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    FigureGroupContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(FigureGroupContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_figureGroup; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FigureGroupContext.prototype.enterRule = function (listener) {
        if (listener.enterFigureGroup) {
            listener.enterFigureGroup(this);
        }
    };
    // @Override
    FigureGroupContext.prototype.exitRule = function (listener) {
        if (listener.exitFigureGroup) {
            listener.exitFigureGroup(this);
        }
    };
    // @Override
    FigureGroupContext.prototype.accept = function (visitor) {
        if (visitor.visitFigureGroup) {
            return visitor.visitFigureGroup(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FigureGroupContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FigureGroupContext = FigureGroupContext;
var FigureGroupNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(FigureGroupNameCaseSensitiveContext, _super);
    function FigureGroupNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FigureGroupNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(FigureGroupNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_figureGroupNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FigureGroupNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterFigureGroupNameCaseSensitive) {
            listener.enterFigureGroupNameCaseSensitive(this);
        }
    };
    // @Override
    FigureGroupNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitFigureGroupNameCaseSensitive) {
            listener.exitFigureGroupNameCaseSensitive(this);
        }
    };
    // @Override
    FigureGroupNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitFigureGroupNameCaseSensitive) {
            return visitor.visitFigureGroupNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FigureGroupNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FigureGroupNameCaseSensitiveContext = FigureGroupNameCaseSensitiveContext;
var FigureGroupNameDefContext = /** @class */ (function (_super) {
    __extends(FigureGroupNameDefContext, _super);
    function FigureGroupNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FigureGroupNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(FigureGroupNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_figureGroupNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FigureGroupNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterFigureGroupNameDef) {
            listener.enterFigureGroupNameDef(this);
        }
    };
    // @Override
    FigureGroupNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitFigureGroupNameDef) {
            listener.exitFigureGroupNameDef(this);
        }
    };
    // @Override
    FigureGroupNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitFigureGroupNameDef) {
            return visitor.visitFigureGroupNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FigureGroupNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FigureGroupNameDefContext = FigureGroupNameDefContext;
var FigureGroupNameRefContext = /** @class */ (function (_super) {
    __extends(FigureGroupNameRefContext, _super);
    function FigureGroupNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FigureGroupNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(FigureGroupNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_figureGroupNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FigureGroupNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterFigureGroupNameRef) {
            listener.enterFigureGroupNameRef(this);
        }
    };
    // @Override
    FigureGroupNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitFigureGroupNameRef) {
            listener.exitFigureGroupNameRef(this);
        }
    };
    // @Override
    FigureGroupNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitFigureGroupNameRef) {
            return visitor.visitFigureGroupNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FigureGroupNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FigureGroupNameRefContext = FigureGroupNameRefContext;
var FigureGroupOverrideContext = /** @class */ (function (_super) {
    __extends(FigureGroupOverrideContext, _super);
    function FigureGroupOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FigureGroupOverrideContext.prototype.figureGroupNameRef = function () {
        return this.getRuleContext(0, FigureGroupNameRefContext);
    };
    FigureGroupOverrideContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    FigureGroupOverrideContext.prototype.cornerType = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CornerTypeContext);
        }
        else {
            return this.getRuleContext(i, CornerTypeContext);
        }
    };
    FigureGroupOverrideContext.prototype.displayAttributes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayAttributesContext);
        }
        else {
            return this.getRuleContext(i, DisplayAttributesContext);
        }
    };
    FigureGroupOverrideContext.prototype.endType = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(EndTypeContext);
        }
        else {
            return this.getRuleContext(i, EndTypeContext);
        }
    };
    FigureGroupOverrideContext.prototype.pathWidth = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PathWidthContext);
        }
        else {
            return this.getRuleContext(i, PathWidthContext);
        }
    };
    FigureGroupOverrideContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(FigureGroupOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_figureGroupOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FigureGroupOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterFigureGroupOverride) {
            listener.enterFigureGroupOverride(this);
        }
    };
    // @Override
    FigureGroupOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitFigureGroupOverride) {
            listener.exitFigureGroupOverride(this);
        }
    };
    // @Override
    FigureGroupOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitFigureGroupOverride) {
            return visitor.visitFigureGroupOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FigureGroupOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FigureGroupOverrideContext = FigureGroupOverrideContext;
var FillPatternContext = /** @class */ (function (_super) {
    __extends(FillPatternContext, _super);
    function FillPatternContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FillPatternContext.prototype.pixelPattern = function () {
        return this.getRuleContext(0, PixelPatternContext);
    };
    Object.defineProperty(FillPatternContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fillPattern; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FillPatternContext.prototype.enterRule = function (listener) {
        if (listener.enterFillPattern) {
            listener.enterFillPattern(this);
        }
    };
    // @Override
    FillPatternContext.prototype.exitRule = function (listener) {
        if (listener.exitFillPattern) {
            listener.exitFillPattern(this);
        }
    };
    // @Override
    FillPatternContext.prototype.accept = function (visitor) {
        if (visitor.visitFillPattern) {
            return visitor.visitFillPattern(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FillPatternContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FillPatternContext = FillPatternContext;
var FillPatternVisibleContext = /** @class */ (function (_super) {
    __extends(FillPatternVisibleContext, _super);
    function FillPatternVisibleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FillPatternVisibleContext.prototype.booleanValue = function () {
        return this.getRuleContext(0, BooleanValueContext);
    };
    Object.defineProperty(FillPatternVisibleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fillPatternVisible; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FillPatternVisibleContext.prototype.enterRule = function (listener) {
        if (listener.enterFillPatternVisible) {
            listener.enterFillPatternVisible(this);
        }
    };
    // @Override
    FillPatternVisibleContext.prototype.exitRule = function (listener) {
        if (listener.exitFillPatternVisible) {
            listener.exitFillPatternVisible(this);
        }
    };
    // @Override
    FillPatternVisibleContext.prototype.accept = function (visitor) {
        if (visitor.visitFillPatternVisible) {
            return visitor.visitFillPatternVisible(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FillPatternVisibleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FillPatternVisibleContext = FillPatternVisibleContext;
var FirstIntegerExpressionContext = /** @class */ (function (_super) {
    __extends(FirstIntegerExpressionContext, _super);
    function FirstIntegerExpressionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FirstIntegerExpressionContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(FirstIntegerExpressionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_firstIntegerExpression; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FirstIntegerExpressionContext.prototype.enterRule = function (listener) {
        if (listener.enterFirstIntegerExpression) {
            listener.enterFirstIntegerExpression(this);
        }
    };
    // @Override
    FirstIntegerExpressionContext.prototype.exitRule = function (listener) {
        if (listener.exitFirstIntegerExpression) {
            listener.exitFirstIntegerExpression(this);
        }
    };
    // @Override
    FirstIntegerExpressionContext.prototype.accept = function (visitor) {
        if (visitor.visitFirstIntegerExpression) {
            return visitor.visitFirstIntegerExpression(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FirstIntegerExpressionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FirstIntegerExpressionContext = FirstIntegerExpressionContext;
var FirstStringExpressionContext = /** @class */ (function (_super) {
    __extends(FirstStringExpressionContext, _super);
    function FirstStringExpressionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FirstStringExpressionContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    Object.defineProperty(FirstStringExpressionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_firstStringExpression; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FirstStringExpressionContext.prototype.enterRule = function (listener) {
        if (listener.enterFirstStringExpression) {
            listener.enterFirstStringExpression(this);
        }
    };
    // @Override
    FirstStringExpressionContext.prototype.exitRule = function (listener) {
        if (listener.exitFirstStringExpression) {
            listener.exitFirstStringExpression(this);
        }
    };
    // @Override
    FirstStringExpressionContext.prototype.accept = function (visitor) {
        if (visitor.visitFirstStringExpression) {
            return visitor.visitFirstStringExpression(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FirstStringExpressionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FirstStringExpressionContext = FirstStringExpressionContext;
var FixedContext = /** @class */ (function (_super) {
    __extends(FixedContext, _super);
    function FixedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(FixedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fixed; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FixedContext.prototype.enterRule = function (listener) {
        if (listener.enterFixed) {
            listener.enterFixed(this);
        }
    };
    // @Override
    FixedContext.prototype.exitRule = function (listener) {
        if (listener.exitFixed) {
            listener.exitFixed(this);
        }
    };
    // @Override
    FixedContext.prototype.accept = function (visitor) {
        if (visitor.visitFixed) {
            return visitor.visitFixed(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FixedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FixedContext = FixedContext;
var FontContext = /** @class */ (function (_super) {
    __extends(FontContext, _super);
    function FontContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontContext.prototype.fontNameDef = function () {
        return this.getRuleContext(0, FontNameDefContext);
    };
    FontContext.prototype.typeface = function () {
        return this.getRuleContext(0, TypefaceContext);
    };
    FontContext.prototype.fontProportions = function () {
        return this.getRuleContext(0, FontProportionsContext);
    };
    FontContext.prototype.boldStyle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BoldStyleContext);
        }
        else {
            return this.getRuleContext(i, BoldStyleContext);
        }
    };
    FontContext.prototype.italicStyle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ItalicStyleContext);
        }
        else {
            return this.getRuleContext(i, ItalicStyleContext);
        }
    };
    FontContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    FontContext.prototype.proportionalFont = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ProportionalFontContext);
        }
        else {
            return this.getRuleContext(i, ProportionalFontContext);
        }
    };
    FontContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(FontContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_font; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontContext.prototype.enterRule = function (listener) {
        if (listener.enterFont) {
            listener.enterFont(this);
        }
    };
    // @Override
    FontContext.prototype.exitRule = function (listener) {
        if (listener.exitFont) {
            listener.exitFont(this);
        }
    };
    // @Override
    FontContext.prototype.accept = function (visitor) {
        if (visitor.visitFont) {
            return visitor.visitFont(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontContext = FontContext;
var FontCapitalHeightContext = /** @class */ (function (_super) {
    __extends(FontCapitalHeightContext, _super);
    function FontCapitalHeightContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontCapitalHeightContext.prototype.lengthValue = function () {
        return this.getRuleContext(0, LengthValueContext);
    };
    Object.defineProperty(FontCapitalHeightContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fontCapitalHeight; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontCapitalHeightContext.prototype.enterRule = function (listener) {
        if (listener.enterFontCapitalHeight) {
            listener.enterFontCapitalHeight(this);
        }
    };
    // @Override
    FontCapitalHeightContext.prototype.exitRule = function (listener) {
        if (listener.exitFontCapitalHeight) {
            listener.exitFontCapitalHeight(this);
        }
    };
    // @Override
    FontCapitalHeightContext.prototype.accept = function (visitor) {
        if (visitor.visitFontCapitalHeight) {
            return visitor.visitFontCapitalHeight(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontCapitalHeightContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontCapitalHeightContext = FontCapitalHeightContext;
var FontDefinitionsContext = /** @class */ (function (_super) {
    __extends(FontDefinitionsContext, _super);
    function FontDefinitionsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontDefinitionsContext.prototype.fonts = function () {
        return this.tryGetRuleContext(0, FontsContext);
    };
    Object.defineProperty(FontDefinitionsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fontDefinitions; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontDefinitionsContext.prototype.enterRule = function (listener) {
        if (listener.enterFontDefinitions) {
            listener.enterFontDefinitions(this);
        }
    };
    // @Override
    FontDefinitionsContext.prototype.exitRule = function (listener) {
        if (listener.exitFontDefinitions) {
            listener.exitFontDefinitions(this);
        }
    };
    // @Override
    FontDefinitionsContext.prototype.accept = function (visitor) {
        if (visitor.visitFontDefinitions) {
            return visitor.visitFontDefinitions(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontDefinitionsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontDefinitionsContext = FontDefinitionsContext;
var FontDescentContext = /** @class */ (function (_super) {
    __extends(FontDescentContext, _super);
    function FontDescentContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontDescentContext.prototype.lengthValue = function () {
        return this.getRuleContext(0, LengthValueContext);
    };
    Object.defineProperty(FontDescentContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fontDescent; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontDescentContext.prototype.enterRule = function (listener) {
        if (listener.enterFontDescent) {
            listener.enterFontDescent(this);
        }
    };
    // @Override
    FontDescentContext.prototype.exitRule = function (listener) {
        if (listener.exitFontDescent) {
            listener.exitFontDescent(this);
        }
    };
    // @Override
    FontDescentContext.prototype.accept = function (visitor) {
        if (visitor.visitFontDescent) {
            return visitor.visitFontDescent(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontDescentContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontDescentContext = FontDescentContext;
var FontFamilyContext = /** @class */ (function (_super) {
    __extends(FontFamilyContext, _super);
    function FontFamilyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontFamilyContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(FontFamilyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fontFamily; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontFamilyContext.prototype.enterRule = function (listener) {
        if (listener.enterFontFamily) {
            listener.enterFontFamily(this);
        }
    };
    // @Override
    FontFamilyContext.prototype.exitRule = function (listener) {
        if (listener.exitFontFamily) {
            listener.exitFontFamily(this);
        }
    };
    // @Override
    FontFamilyContext.prototype.accept = function (visitor) {
        if (visitor.visitFontFamily) {
            return visitor.visitFontFamily(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontFamilyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontFamilyContext = FontFamilyContext;
var FontHeightContext = /** @class */ (function (_super) {
    __extends(FontHeightContext, _super);
    function FontHeightContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontHeightContext.prototype.lengthValue = function () {
        return this.getRuleContext(0, LengthValueContext);
    };
    Object.defineProperty(FontHeightContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fontHeight; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontHeightContext.prototype.enterRule = function (listener) {
        if (listener.enterFontHeight) {
            listener.enterFontHeight(this);
        }
    };
    // @Override
    FontHeightContext.prototype.exitRule = function (listener) {
        if (listener.exitFontHeight) {
            listener.exitFontHeight(this);
        }
    };
    // @Override
    FontHeightContext.prototype.accept = function (visitor) {
        if (visitor.visitFontHeight) {
            return visitor.visitFontHeight(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontHeightContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontHeightContext = FontHeightContext;
var FontNameDefContext = /** @class */ (function (_super) {
    __extends(FontNameDefContext, _super);
    function FontNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(FontNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fontNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterFontNameDef) {
            listener.enterFontNameDef(this);
        }
    };
    // @Override
    FontNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitFontNameDef) {
            listener.exitFontNameDef(this);
        }
    };
    // @Override
    FontNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitFontNameDef) {
            return visitor.visitFontNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontNameDefContext = FontNameDefContext;
var FontNameRefContext = /** @class */ (function (_super) {
    __extends(FontNameRefContext, _super);
    function FontNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(FontNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fontNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterFontNameRef) {
            listener.enterFontNameRef(this);
        }
    };
    // @Override
    FontNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitFontNameRef) {
            listener.exitFontNameRef(this);
        }
    };
    // @Override
    FontNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitFontNameRef) {
            return visitor.visitFontNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontNameRefContext = FontNameRefContext;
var FontProportionsContext = /** @class */ (function (_super) {
    __extends(FontProportionsContext, _super);
    function FontProportionsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontProportionsContext.prototype.fontHeight = function () {
        return this.getRuleContext(0, FontHeightContext);
    };
    FontProportionsContext.prototype.fontDescent = function () {
        return this.getRuleContext(0, FontDescentContext);
    };
    FontProportionsContext.prototype.fontCapitalHeight = function () {
        return this.getRuleContext(0, FontCapitalHeightContext);
    };
    FontProportionsContext.prototype.fontWidth = function () {
        return this.getRuleContext(0, FontWidthContext);
    };
    Object.defineProperty(FontProportionsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fontProportions; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontProportionsContext.prototype.enterRule = function (listener) {
        if (listener.enterFontProportions) {
            listener.enterFontProportions(this);
        }
    };
    // @Override
    FontProportionsContext.prototype.exitRule = function (listener) {
        if (listener.exitFontProportions) {
            listener.exitFontProportions(this);
        }
    };
    // @Override
    FontProportionsContext.prototype.accept = function (visitor) {
        if (visitor.visitFontProportions) {
            return visitor.visitFontProportions(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontProportionsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontProportionsContext = FontProportionsContext;
var FontRefContext = /** @class */ (function (_super) {
    __extends(FontRefContext, _super);
    function FontRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontRefContext.prototype.fontNameRef = function () {
        return this.getRuleContext(0, FontNameRefContext);
    };
    Object.defineProperty(FontRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fontRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontRefContext.prototype.enterRule = function (listener) {
        if (listener.enterFontRef) {
            listener.enterFontRef(this);
        }
    };
    // @Override
    FontRefContext.prototype.exitRule = function (listener) {
        if (listener.exitFontRef) {
            listener.exitFontRef(this);
        }
    };
    // @Override
    FontRefContext.prototype.accept = function (visitor) {
        if (visitor.visitFontRef) {
            return visitor.visitFontRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontRefContext = FontRefContext;
var FontsContext = /** @class */ (function (_super) {
    __extends(FontsContext, _super);
    function FontsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontsContext.prototype.setDistance = function () {
        return this.getRuleContext(0, SetDistanceContext);
    };
    FontsContext.prototype.font = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FontContext);
        }
        else {
            return this.getRuleContext(i, FontContext);
        }
    };
    Object.defineProperty(FontsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fonts; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontsContext.prototype.enterRule = function (listener) {
        if (listener.enterFonts) {
            listener.enterFonts(this);
        }
    };
    // @Override
    FontsContext.prototype.exitRule = function (listener) {
        if (listener.exitFonts) {
            listener.exitFonts(this);
        }
    };
    // @Override
    FontsContext.prototype.accept = function (visitor) {
        if (visitor.visitFonts) {
            return visitor.visitFonts(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontsContext = FontsContext;
var FontWidthContext = /** @class */ (function (_super) {
    __extends(FontWidthContext, _super);
    function FontWidthContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FontWidthContext.prototype.lengthValue = function () {
        return this.getRuleContext(0, LengthValueContext);
    };
    Object.defineProperty(FontWidthContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fontWidth; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FontWidthContext.prototype.enterRule = function (listener) {
        if (listener.enterFontWidth) {
            listener.enterFontWidth(this);
        }
    };
    // @Override
    FontWidthContext.prototype.exitRule = function (listener) {
        if (listener.exitFontWidth) {
            listener.exitFontWidth(this);
        }
    };
    // @Override
    FontWidthContext.prototype.accept = function (visitor) {
        if (visitor.visitFontWidth) {
            return visitor.visitFontWidth(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FontWidthContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FontWidthContext = FontWidthContext;
var ForbiddenEventContext = /** @class */ (function (_super) {
    __extends(ForbiddenEventContext, _super);
    function ForbiddenEventContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ForbiddenEventContext.prototype.timeInterval = function () {
        return this.getRuleContext(0, TimeIntervalContext);
    };
    ForbiddenEventContext.prototype.event = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(EventContext);
        }
        else {
            return this.getRuleContext(i, EventContext);
        }
    };
    Object.defineProperty(ForbiddenEventContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_forbiddenEvent; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ForbiddenEventContext.prototype.enterRule = function (listener) {
        if (listener.enterForbiddenEvent) {
            listener.enterForbiddenEvent(this);
        }
    };
    // @Override
    ForbiddenEventContext.prototype.exitRule = function (listener) {
        if (listener.exitForbiddenEvent) {
            listener.exitForbiddenEvent(this);
        }
    };
    // @Override
    ForbiddenEventContext.prototype.accept = function (visitor) {
        if (visitor.visitForbiddenEvent) {
            return visitor.visitForbiddenEvent(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ForbiddenEventContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ForbiddenEventContext = ForbiddenEventContext;
var ForFrameContext = /** @class */ (function (_super) {
    __extends(ForFrameContext, _super);
    function ForFrameContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ForFrameContext.prototype.frameNameDef = function () {
        return this.getRuleContext(0, FrameNameDefContext);
    };
    ForFrameContext.prototype.repetitionCount = function () {
        return this.getRuleContext(0, RepetitionCountContext);
    };
    ForFrameContext.prototype.forFrameIndex = function () {
        return this.getRuleContext(0, ForFrameIndexContext);
    };
    ForFrameContext.prototype.logicalConnectivity = function () {
        return this.getRuleContext(0, LogicalConnectivityContext);
    };
    ForFrameContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ForFrameContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    ForFrameContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    ForFrameContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    ForFrameContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(ForFrameContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_forFrame; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ForFrameContext.prototype.enterRule = function (listener) {
        if (listener.enterForFrame) {
            listener.enterForFrame(this);
        }
    };
    // @Override
    ForFrameContext.prototype.exitRule = function (listener) {
        if (listener.exitForFrame) {
            listener.exitForFrame(this);
        }
    };
    // @Override
    ForFrameContext.prototype.accept = function (visitor) {
        if (visitor.visitForFrame) {
            return visitor.visitForFrame(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ForFrameContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ForFrameContext = ForFrameContext;
var ForFrameAnnotateContext = /** @class */ (function (_super) {
    __extends(ForFrameAnnotateContext, _super);
    function ForFrameAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ForFrameAnnotateContext.prototype.extendForFrameMemberDef = function () {
        return this.getRuleContext(0, ExtendForFrameMemberDefContext);
    };
    ForFrameAnnotateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ForFrameAnnotateContext.prototype.forFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ForFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, ForFrameAnnotateContext);
        }
    };
    ForFrameAnnotateContext.prototype.ifFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IfFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, IfFrameAnnotateContext);
        }
    };
    ForFrameAnnotateContext.prototype.interconnectAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectAnnotateContext);
        }
        else {
            return this.getRuleContext(i, InterconnectAnnotateContext);
        }
    };
    ForFrameAnnotateContext.prototype.leafOccurrenceAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LeafOccurrenceAnnotateContext);
        }
        else {
            return this.getRuleContext(i, LeafOccurrenceAnnotateContext);
        }
    };
    ForFrameAnnotateContext.prototype.occurrenceAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OccurrenceAnnotateContext);
        }
        else {
            return this.getRuleContext(i, OccurrenceAnnotateContext);
        }
    };
    ForFrameAnnotateContext.prototype.otherwiseFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OtherwiseFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, OtherwiseFrameAnnotateContext);
        }
    };
    Object.defineProperty(ForFrameAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_forFrameAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ForFrameAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterForFrameAnnotate) {
            listener.enterForFrameAnnotate(this);
        }
    };
    // @Override
    ForFrameAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitForFrameAnnotate) {
            listener.exitForFrameAnnotate(this);
        }
    };
    // @Override
    ForFrameAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitForFrameAnnotate) {
            return visitor.visitForFrameAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ForFrameAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ForFrameAnnotateContext = ForFrameAnnotateContext;
var ForFrameIndexContext = /** @class */ (function (_super) {
    __extends(ForFrameIndexContext, _super);
    function ForFrameIndexContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ForFrameIndexContext.prototype.indexNameDef = function () {
        return this.getRuleContext(0, IndexNameDefContext);
    };
    ForFrameIndexContext.prototype.indexStart = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IndexStartContext);
        }
        else {
            return this.getRuleContext(i, IndexStartContext);
        }
    };
    ForFrameIndexContext.prototype.indexStep = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IndexStepContext);
        }
        else {
            return this.getRuleContext(i, IndexStepContext);
        }
    };
    ForFrameIndexContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    Object.defineProperty(ForFrameIndexContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_forFrameIndex; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ForFrameIndexContext.prototype.enterRule = function (listener) {
        if (listener.enterForFrameIndex) {
            listener.enterForFrameIndex(this);
        }
    };
    // @Override
    ForFrameIndexContext.prototype.exitRule = function (listener) {
        if (listener.exitForFrameIndex) {
            listener.exitForFrameIndex(this);
        }
    };
    // @Override
    ForFrameIndexContext.prototype.accept = function (visitor) {
        if (visitor.visitForFrameIndex) {
            return visitor.visitForFrameIndex(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ForFrameIndexContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ForFrameIndexContext = ForFrameIndexContext;
var ForFrameIndexDisplayContext = /** @class */ (function (_super) {
    __extends(ForFrameIndexDisplayContext, _super);
    function ForFrameIndexDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ForFrameIndexDisplayContext.prototype.indexEndDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IndexEndDisplayContext);
        }
        else {
            return this.getRuleContext(i, IndexEndDisplayContext);
        }
    };
    ForFrameIndexDisplayContext.prototype.indexNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IndexNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, IndexNameDisplayContext);
        }
    };
    ForFrameIndexDisplayContext.prototype.indexStartDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IndexStartDisplayContext);
        }
        else {
            return this.getRuleContext(i, IndexStartDisplayContext);
        }
    };
    ForFrameIndexDisplayContext.prototype.indexStepDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IndexStepDisplayContext);
        }
        else {
            return this.getRuleContext(i, IndexStepDisplayContext);
        }
    };
    Object.defineProperty(ForFrameIndexDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_forFrameIndexDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ForFrameIndexDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterForFrameIndexDisplay) {
            listener.enterForFrameIndexDisplay(this);
        }
    };
    // @Override
    ForFrameIndexDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitForFrameIndexDisplay) {
            listener.exitForFrameIndexDisplay(this);
        }
    };
    // @Override
    ForFrameIndexDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitForFrameIndexDisplay) {
            return visitor.visitForFrameIndexDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ForFrameIndexDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ForFrameIndexDisplayContext = ForFrameIndexDisplayContext;
var ForFrameIndexNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(ForFrameIndexNameCaseSensitiveContext, _super);
    function ForFrameIndexNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ForFrameIndexNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(ForFrameIndexNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_forFrameIndexNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ForFrameIndexNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterForFrameIndexNameCaseSensitive) {
            listener.enterForFrameIndexNameCaseSensitive(this);
        }
    };
    // @Override
    ForFrameIndexNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitForFrameIndexNameCaseSensitive) {
            listener.exitForFrameIndexNameCaseSensitive(this);
        }
    };
    // @Override
    ForFrameIndexNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitForFrameIndexNameCaseSensitive) {
            return visitor.visitForFrameIndexNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ForFrameIndexNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ForFrameIndexNameCaseSensitiveContext = ForFrameIndexNameCaseSensitiveContext;
var ForFrameIndexRefContext = /** @class */ (function (_super) {
    __extends(ForFrameIndexRefContext, _super);
    function ForFrameIndexRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ForFrameIndexRefContext.prototype.indexNameRef = function () {
        return this.getRuleContext(0, IndexNameRefContext);
    };
    Object.defineProperty(ForFrameIndexRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_forFrameIndexRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ForFrameIndexRefContext.prototype.enterRule = function (listener) {
        if (listener.enterForFrameIndexRef) {
            listener.enterForFrameIndexRef(this);
        }
    };
    // @Override
    ForFrameIndexRefContext.prototype.exitRule = function (listener) {
        if (listener.exitForFrameIndexRef) {
            listener.exitForFrameIndexRef(this);
        }
    };
    // @Override
    ForFrameIndexRefContext.prototype.accept = function (visitor) {
        if (visitor.visitForFrameIndexRef) {
            return visitor.visitForFrameIndexRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ForFrameIndexRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ForFrameIndexRefContext = ForFrameIndexRefContext;
var ForFrameMemberRefContext = /** @class */ (function (_super) {
    __extends(ForFrameMemberRefContext, _super);
    function ForFrameMemberRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ForFrameMemberRefContext.prototype.frameNameRef = function () {
        return this.getRuleContext(0, FrameNameRefContext);
    };
    ForFrameMemberRefContext.prototype.indexValue = function () {
        return this.getRuleContext(0, IndexValueContext);
    };
    Object.defineProperty(ForFrameMemberRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_forFrameMemberRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ForFrameMemberRefContext.prototype.enterRule = function (listener) {
        if (listener.enterForFrameMemberRef) {
            listener.enterForFrameMemberRef(this);
        }
    };
    // @Override
    ForFrameMemberRefContext.prototype.exitRule = function (listener) {
        if (listener.exitForFrameMemberRef) {
            listener.exitForFrameMemberRef(this);
        }
    };
    // @Override
    ForFrameMemberRefContext.prototype.accept = function (visitor) {
        if (visitor.visitForFrameMemberRef) {
            return visitor.visitForFrameMemberRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ForFrameMemberRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ForFrameMemberRefContext = ForFrameMemberRefContext;
var ForFrameRefContext = /** @class */ (function (_super) {
    __extends(ForFrameRefContext, _super);
    function ForFrameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ForFrameRefContext.prototype.frameNameRef = function () {
        return this.getRuleContext(0, FrameNameRefContext);
    };
    Object.defineProperty(ForFrameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_forFrameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ForFrameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterForFrameRef) {
            listener.enterForFrameRef(this);
        }
    };
    // @Override
    ForFrameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitForFrameRef) {
            listener.exitForFrameRef(this);
        }
    };
    // @Override
    ForFrameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitForFrameRef) {
            return visitor.visitForFrameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ForFrameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ForFrameRefContext = ForFrameRefContext;
var FrameConfigurationContext = /** @class */ (function (_super) {
    __extends(FrameConfigurationContext, _super);
    function FrameConfigurationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FrameConfigurationContext.prototype.frameNameRef = function () {
        return this.getRuleContext(0, FrameNameRefContext);
    };
    FrameConfigurationContext.prototype.frameConfiguration = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FrameConfigurationContext);
        }
        else {
            return this.getRuleContext(i, FrameConfigurationContext);
        }
    };
    FrameConfigurationContext.prototype.instanceConfiguration = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceConfigurationContext);
        }
        else {
            return this.getRuleContext(i, InstanceConfigurationContext);
        }
    };
    Object.defineProperty(FrameConfigurationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_frameConfiguration; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FrameConfigurationContext.prototype.enterRule = function (listener) {
        if (listener.enterFrameConfiguration) {
            listener.enterFrameConfiguration(this);
        }
    };
    // @Override
    FrameConfigurationContext.prototype.exitRule = function (listener) {
        if (listener.exitFrameConfiguration) {
            listener.exitFrameConfiguration(this);
        }
    };
    // @Override
    FrameConfigurationContext.prototype.accept = function (visitor) {
        if (visitor.visitFrameConfiguration) {
            return visitor.visitFrameConfiguration(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FrameConfigurationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FrameConfigurationContext = FrameConfigurationContext;
var FrameNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(FrameNameCaseSensitiveContext, _super);
    function FrameNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FrameNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(FrameNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_frameNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FrameNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterFrameNameCaseSensitive) {
            listener.enterFrameNameCaseSensitive(this);
        }
    };
    // @Override
    FrameNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitFrameNameCaseSensitive) {
            listener.exitFrameNameCaseSensitive(this);
        }
    };
    // @Override
    FrameNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitFrameNameCaseSensitive) {
            return visitor.visitFrameNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FrameNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FrameNameCaseSensitiveContext = FrameNameCaseSensitiveContext;
var FrameNameDefContext = /** @class */ (function (_super) {
    __extends(FrameNameDefContext, _super);
    function FrameNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FrameNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(FrameNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_frameNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FrameNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterFrameNameDef) {
            listener.enterFrameNameDef(this);
        }
    };
    // @Override
    FrameNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitFrameNameDef) {
            listener.exitFrameNameDef(this);
        }
    };
    // @Override
    FrameNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitFrameNameDef) {
            return visitor.visitFrameNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FrameNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FrameNameDefContext = FrameNameDefContext;
var FrameNameRefContext = /** @class */ (function (_super) {
    __extends(FrameNameRefContext, _super);
    function FrameNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FrameNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(FrameNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_frameNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FrameNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterFrameNameRef) {
            listener.enterFrameNameRef(this);
        }
    };
    // @Override
    FrameNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitFrameNameRef) {
            listener.exitFrameNameRef(this);
        }
    };
    // @Override
    FrameNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitFrameNameRef) {
            return visitor.visitFrameNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FrameNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FrameNameRefContext = FrameNameRefContext;
var FrameRefContext = /** @class */ (function (_super) {
    __extends(FrameRefContext, _super);
    function FrameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FrameRefContext.prototype.frameNameRef = function () {
        return this.getRuleContext(0, FrameNameRefContext);
    };
    Object.defineProperty(FrameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_frameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FrameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterFrameRef) {
            listener.enterFrameRef(this);
        }
    };
    // @Override
    FrameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitFrameRef) {
            listener.exitFrameRef(this);
        }
    };
    // @Override
    FrameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitFrameRef) {
            return visitor.visitFrameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FrameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FrameRefContext = FrameRefContext;
var FrequencyValueContext = /** @class */ (function (_super) {
    __extends(FrequencyValueContext, _super);
    function FrequencyValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FrequencyValueContext.prototype.miNoMaxValue = function () {
        return this.getRuleContext(0, MiNoMaxValueContext);
    };
    Object.defineProperty(FrequencyValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_frequencyValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FrequencyValueContext.prototype.enterRule = function (listener) {
        if (listener.enterFrequencyValue) {
            listener.enterFrequencyValue(this);
        }
    };
    // @Override
    FrequencyValueContext.prototype.exitRule = function (listener) {
        if (listener.exitFrequencyValue) {
            listener.exitFrequencyValue(this);
        }
    };
    // @Override
    FrequencyValueContext.prototype.accept = function (visitor) {
        if (visitor.visitFrequencyValue) {
            return visitor.visitFrequencyValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FrequencyValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FrequencyValueContext = FrequencyValueContext;
var FromBottomContext = /** @class */ (function (_super) {
    __extends(FromBottomContext, _super);
    function FromBottomContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(FromBottomContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fromBottom; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FromBottomContext.prototype.enterRule = function (listener) {
        if (listener.enterFromBottom) {
            listener.enterFromBottom(this);
        }
    };
    // @Override
    FromBottomContext.prototype.exitRule = function (listener) {
        if (listener.exitFromBottom) {
            listener.exitFromBottom(this);
        }
    };
    // @Override
    FromBottomContext.prototype.accept = function (visitor) {
        if (visitor.visitFromBottom) {
            return visitor.visitFromBottom(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FromBottomContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FromBottomContext = FromBottomContext;
var FromIntegerContext = /** @class */ (function (_super) {
    __extends(FromIntegerContext, _super);
    function FromIntegerContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    FromIntegerContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(FromIntegerContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fromInteger; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FromIntegerContext.prototype.enterRule = function (listener) {
        if (listener.enterFromInteger) {
            listener.enterFromInteger(this);
        }
    };
    // @Override
    FromIntegerContext.prototype.exitRule = function (listener) {
        if (listener.exitFromInteger) {
            listener.exitFromInteger(this);
        }
    };
    // @Override
    FromIntegerContext.prototype.accept = function (visitor) {
        if (visitor.visitFromInteger) {
            return visitor.visitFromInteger(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FromIntegerContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FromIntegerContext = FromIntegerContext;
var FromLeftContext = /** @class */ (function (_super) {
    __extends(FromLeftContext, _super);
    function FromLeftContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(FromLeftContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fromLeft; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FromLeftContext.prototype.enterRule = function (listener) {
        if (listener.enterFromLeft) {
            listener.enterFromLeft(this);
        }
    };
    // @Override
    FromLeftContext.prototype.exitRule = function (listener) {
        if (listener.exitFromLeft) {
            listener.exitFromLeft(this);
        }
    };
    // @Override
    FromLeftContext.prototype.accept = function (visitor) {
        if (visitor.visitFromLeft) {
            return visitor.visitFromLeft(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FromLeftContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FromLeftContext = FromLeftContext;
var FromRightContext = /** @class */ (function (_super) {
    __extends(FromRightContext, _super);
    function FromRightContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(FromRightContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fromRight; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FromRightContext.prototype.enterRule = function (listener) {
        if (listener.enterFromRight) {
            listener.enterFromRight(this);
        }
    };
    // @Override
    FromRightContext.prototype.exitRule = function (listener) {
        if (listener.exitFromRight) {
            listener.exitFromRight(this);
        }
    };
    // @Override
    FromRightContext.prototype.accept = function (visitor) {
        if (visitor.visitFromRight) {
            return visitor.visitFromRight(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FromRightContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FromRightContext = FromRightContext;
var FromTopContext = /** @class */ (function (_super) {
    __extends(FromTopContext, _super);
    function FromTopContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(FromTopContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_fromTop; },
        enumerable: true,
        configurable: true
    });
    // @Override
    FromTopContext.prototype.enterRule = function (listener) {
        if (listener.enterFromTop) {
            listener.enterFromTop(this);
        }
    };
    // @Override
    FromTopContext.prototype.exitRule = function (listener) {
        if (listener.exitFromTop) {
            listener.exitFromTop(this);
        }
    };
    // @Override
    FromTopContext.prototype.accept = function (visitor) {
        if (visitor.visitFromTop) {
            return visitor.visitFromTop(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return FromTopContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.FromTopContext = FromTopContext;
var GeneratedContext = /** @class */ (function (_super) {
    __extends(GeneratedContext, _super);
    function GeneratedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(GeneratedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_generated; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GeneratedContext.prototype.enterRule = function (listener) {
        if (listener.enterGenerated) {
            listener.enterGenerated(this);
        }
    };
    // @Override
    GeneratedContext.prototype.exitRule = function (listener) {
        if (listener.exitGenerated) {
            listener.exitGenerated(this);
        }
    };
    // @Override
    GeneratedContext.prototype.accept = function (visitor) {
        if (visitor.visitGenerated) {
            return visitor.visitGenerated(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GeneratedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GeneratedContext = GeneratedContext;
var GeometryMacroContext = /** @class */ (function (_super) {
    __extends(GeometryMacroContext, _super);
    function GeometryMacroContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GeometryMacroContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    GeometryMacroContext.prototype.geometryMacroHeader = function () {
        return this.getRuleContext(0, GeometryMacroHeaderContext);
    };
    GeometryMacroContext.prototype.circle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CircleContext);
        }
        else {
            return this.getRuleContext(i, CircleContext);
        }
    };
    GeometryMacroContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    GeometryMacroContext.prototype.complexGeometry = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ComplexGeometryContext);
        }
        else {
            return this.getRuleContext(i, ComplexGeometryContext);
        }
    };
    GeometryMacroContext.prototype.dot = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DotContext);
        }
        else {
            return this.getRuleContext(i, DotContext);
        }
    };
    GeometryMacroContext.prototype.openShape = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OpenShapeContext);
        }
        else {
            return this.getRuleContext(i, OpenShapeContext);
        }
    };
    GeometryMacroContext.prototype.path = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PathContext);
        }
        else {
            return this.getRuleContext(i, PathContext);
        }
    };
    GeometryMacroContext.prototype.polygon = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PolygonContext);
        }
        else {
            return this.getRuleContext(i, PolygonContext);
        }
    };
    GeometryMacroContext.prototype.rectangle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RectangleContext);
        }
        else {
            return this.getRuleContext(i, RectangleContext);
        }
    };
    GeometryMacroContext.prototype.shape = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ShapeContext);
        }
        else {
            return this.getRuleContext(i, ShapeContext);
        }
    };
    GeometryMacroContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(GeometryMacroContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_geometryMacro; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GeometryMacroContext.prototype.enterRule = function (listener) {
        if (listener.enterGeometryMacro) {
            listener.enterGeometryMacro(this);
        }
    };
    // @Override
    GeometryMacroContext.prototype.exitRule = function (listener) {
        if (listener.exitGeometryMacro) {
            listener.exitGeometryMacro(this);
        }
    };
    // @Override
    GeometryMacroContext.prototype.accept = function (visitor) {
        if (visitor.visitGeometryMacro) {
            return visitor.visitGeometryMacro(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GeometryMacroContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GeometryMacroContext = GeometryMacroContext;
var GeometryMacroHeaderContext = /** @class */ (function (_super) {
    __extends(GeometryMacroHeaderContext, _super);
    function GeometryMacroHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GeometryMacroHeaderContext.prototype.geometryMacroUnits = function () {
        return this.getRuleContext(0, GeometryMacroUnitsContext);
    };
    GeometryMacroHeaderContext.prototype.backgroundColor = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BackgroundColorContext);
        }
        else {
            return this.getRuleContext(i, BackgroundColorContext);
        }
    };
    GeometryMacroHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    GeometryMacroHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    GeometryMacroHeaderContext.prototype.originalBoundingBox = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OriginalBoundingBoxContext);
        }
        else {
            return this.getRuleContext(i, OriginalBoundingBoxContext);
        }
    };
    GeometryMacroHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    GeometryMacroHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(GeometryMacroHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_geometryMacroHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GeometryMacroHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterGeometryMacroHeader) {
            listener.enterGeometryMacroHeader(this);
        }
    };
    // @Override
    GeometryMacroHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitGeometryMacroHeader) {
            listener.exitGeometryMacroHeader(this);
        }
    };
    // @Override
    GeometryMacroHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitGeometryMacroHeader) {
            return visitor.visitGeometryMacroHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GeometryMacroHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GeometryMacroHeaderContext = GeometryMacroHeaderContext;
var GeometryMacroRefContext = /** @class */ (function (_super) {
    __extends(GeometryMacroRefContext, _super);
    function GeometryMacroRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GeometryMacroRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    GeometryMacroRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(GeometryMacroRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_geometryMacroRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GeometryMacroRefContext.prototype.enterRule = function (listener) {
        if (listener.enterGeometryMacroRef) {
            listener.enterGeometryMacroRef(this);
        }
    };
    // @Override
    GeometryMacroRefContext.prototype.exitRule = function (listener) {
        if (listener.exitGeometryMacroRef) {
            listener.exitGeometryMacroRef(this);
        }
    };
    // @Override
    GeometryMacroRefContext.prototype.accept = function (visitor) {
        if (visitor.visitGeometryMacroRef) {
            return visitor.visitGeometryMacroRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GeometryMacroRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GeometryMacroRefContext = GeometryMacroRefContext;
var GeometryMacroUnitsContext = /** @class */ (function (_super) {
    __extends(GeometryMacroUnitsContext, _super);
    function GeometryMacroUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GeometryMacroUnitsContext.prototype.setAngle = function () {
        return this.tryGetRuleContext(0, SetAngleContext);
    };
    Object.defineProperty(GeometryMacroUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_geometryMacroUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GeometryMacroUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterGeometryMacroUnits) {
            listener.enterGeometryMacroUnits(this);
        }
    };
    // @Override
    GeometryMacroUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitGeometryMacroUnits) {
            listener.exitGeometryMacroUnits(this);
        }
    };
    // @Override
    GeometryMacroUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitGeometryMacroUnits) {
            return visitor.visitGeometryMacroUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GeometryMacroUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GeometryMacroUnitsContext = GeometryMacroUnitsContext;
var GlobalPortContext = /** @class */ (function (_super) {
    __extends(GlobalPortContext, _super);
    function GlobalPortContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortContext.prototype.globalPortNameDef = function () {
        return this.getRuleContext(0, GlobalPortNameDefContext);
    };
    GlobalPortContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    GlobalPortContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    GlobalPortContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    GlobalPortContext.prototype.schematicGlobalPortAttributes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicGlobalPortAttributesContext);
        }
        else {
            return this.getRuleContext(i, SchematicGlobalPortAttributesContext);
        }
    };
    GlobalPortContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(GlobalPortContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPort; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPort) {
            listener.enterGlobalPort(this);
        }
    };
    // @Override
    GlobalPortContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPort) {
            listener.exitGlobalPort(this);
        }
    };
    // @Override
    GlobalPortContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPort) {
            return visitor.visitGlobalPort(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortContext = GlobalPortContext;
var GlobalPortBundleContext = /** @class */ (function (_super) {
    __extends(GlobalPortBundleContext, _super);
    function GlobalPortBundleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortBundleContext.prototype.globalPortNameDef = function () {
        return this.getRuleContext(0, GlobalPortNameDefContext);
    };
    GlobalPortBundleContext.prototype.globalPortList = function () {
        return this.getRuleContext(0, GlobalPortListContext);
    };
    GlobalPortBundleContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    GlobalPortBundleContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    GlobalPortBundleContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    GlobalPortBundleContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(GlobalPortBundleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPortBundle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortBundleContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPortBundle) {
            listener.enterGlobalPortBundle(this);
        }
    };
    // @Override
    GlobalPortBundleContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPortBundle) {
            listener.exitGlobalPortBundle(this);
        }
    };
    // @Override
    GlobalPortBundleContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPortBundle) {
            return visitor.visitGlobalPortBundle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortBundleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortBundleContext = GlobalPortBundleContext;
var GlobalPortDefinitionsContext = /** @class */ (function (_super) {
    __extends(GlobalPortDefinitionsContext, _super);
    function GlobalPortDefinitionsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortDefinitionsContext.prototype.globalPort = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortContext);
        }
    };
    GlobalPortDefinitionsContext.prototype.globalPortBundle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortBundleContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortBundleContext);
        }
    };
    Object.defineProperty(GlobalPortDefinitionsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPortDefinitions; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortDefinitionsContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPortDefinitions) {
            listener.enterGlobalPortDefinitions(this);
        }
    };
    // @Override
    GlobalPortDefinitionsContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPortDefinitions) {
            listener.exitGlobalPortDefinitions(this);
        }
    };
    // @Override
    GlobalPortDefinitionsContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPortDefinitions) {
            return visitor.visitGlobalPortDefinitions(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortDefinitionsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortDefinitionsContext = GlobalPortDefinitionsContext;
var GlobalPortListContext = /** @class */ (function (_super) {
    __extends(GlobalPortListContext, _super);
    function GlobalPortListContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortListContext.prototype.globalPortRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortRefContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortRefContext);
        }
    };
    Object.defineProperty(GlobalPortListContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPortList; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortListContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPortList) {
            listener.enterGlobalPortList(this);
        }
    };
    // @Override
    GlobalPortListContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPortList) {
            listener.exitGlobalPortList(this);
        }
    };
    // @Override
    GlobalPortListContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPortList) {
            return visitor.visitGlobalPortList(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortListContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortListContext = GlobalPortListContext;
var GlobalPortNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(GlobalPortNameCaseSensitiveContext, _super);
    function GlobalPortNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(GlobalPortNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPortNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPortNameCaseSensitive) {
            listener.enterGlobalPortNameCaseSensitive(this);
        }
    };
    // @Override
    GlobalPortNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPortNameCaseSensitive) {
            listener.exitGlobalPortNameCaseSensitive(this);
        }
    };
    // @Override
    GlobalPortNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPortNameCaseSensitive) {
            return visitor.visitGlobalPortNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortNameCaseSensitiveContext = GlobalPortNameCaseSensitiveContext;
var GlobalPortNameDefContext = /** @class */ (function (_super) {
    __extends(GlobalPortNameDefContext, _super);
    function GlobalPortNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(GlobalPortNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPortNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPortNameDef) {
            listener.enterGlobalPortNameDef(this);
        }
    };
    // @Override
    GlobalPortNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPortNameDef) {
            listener.exitGlobalPortNameDef(this);
        }
    };
    // @Override
    GlobalPortNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPortNameDef) {
            return visitor.visitGlobalPortNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortNameDefContext = GlobalPortNameDefContext;
var GlobalPortNameDisplayContext = /** @class */ (function (_super) {
    __extends(GlobalPortNameDisplayContext, _super);
    function GlobalPortNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortNameDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    GlobalPortNameDisplayContext.prototype.displayNameOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameOverrideContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameOverrideContext);
        }
    };
    Object.defineProperty(GlobalPortNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPortNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPortNameDisplay) {
            listener.enterGlobalPortNameDisplay(this);
        }
    };
    // @Override
    GlobalPortNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPortNameDisplay) {
            listener.exitGlobalPortNameDisplay(this);
        }
    };
    // @Override
    GlobalPortNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPortNameDisplay) {
            return visitor.visitGlobalPortNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortNameDisplayContext = GlobalPortNameDisplayContext;
var GlobalPortNameRefContext = /** @class */ (function (_super) {
    __extends(GlobalPortNameRefContext, _super);
    function GlobalPortNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(GlobalPortNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPortNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPortNameRef) {
            listener.enterGlobalPortNameRef(this);
        }
    };
    // @Override
    GlobalPortNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPortNameRef) {
            listener.exitGlobalPortNameRef(this);
        }
    };
    // @Override
    GlobalPortNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPortNameRef) {
            return visitor.visitGlobalPortNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortNameRefContext = GlobalPortNameRefContext;
var GlobalPortPropertyDisplayContext = /** @class */ (function (_super) {
    __extends(GlobalPortPropertyDisplayContext, _super);
    function GlobalPortPropertyDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortPropertyDisplayContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    GlobalPortPropertyDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    GlobalPortPropertyDisplayContext.prototype.propertyNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyNameDisplayContext);
        }
    };
    Object.defineProperty(GlobalPortPropertyDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPortPropertyDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortPropertyDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPortPropertyDisplay) {
            listener.enterGlobalPortPropertyDisplay(this);
        }
    };
    // @Override
    GlobalPortPropertyDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPortPropertyDisplay) {
            listener.exitGlobalPortPropertyDisplay(this);
        }
    };
    // @Override
    GlobalPortPropertyDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPortPropertyDisplay) {
            return visitor.visitGlobalPortPropertyDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortPropertyDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortPropertyDisplayContext = GlobalPortPropertyDisplayContext;
var GlobalPortRefContext = /** @class */ (function (_super) {
    __extends(GlobalPortRefContext, _super);
    function GlobalPortRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortRefContext.prototype.globalPortNameRef = function () {
        return this.getRuleContext(0, GlobalPortNameRefContext);
    };
    Object.defineProperty(GlobalPortRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPortRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortRefContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPortRef) {
            listener.enterGlobalPortRef(this);
        }
    };
    // @Override
    GlobalPortRefContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPortRef) {
            listener.exitGlobalPortRef(this);
        }
    };
    // @Override
    GlobalPortRefContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPortRef) {
            return visitor.visitGlobalPortRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortRefContext = GlobalPortRefContext;
var GlobalPortScopeContext = /** @class */ (function (_super) {
    __extends(GlobalPortScopeContext, _super);
    function GlobalPortScopeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GlobalPortScopeContext.prototype.globalPortNameRef = function () {
        return this.getRuleContext(0, GlobalPortNameRefContext);
    };
    Object.defineProperty(GlobalPortScopeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_globalPortScope; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GlobalPortScopeContext.prototype.enterRule = function (listener) {
        if (listener.enterGlobalPortScope) {
            listener.enterGlobalPortScope(this);
        }
    };
    // @Override
    GlobalPortScopeContext.prototype.exitRule = function (listener) {
        if (listener.exitGlobalPortScope) {
            listener.exitGlobalPortScope(this);
        }
    };
    // @Override
    GlobalPortScopeContext.prototype.accept = function (visitor) {
        if (visitor.visitGlobalPortScope) {
            return visitor.visitGlobalPortScope(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GlobalPortScopeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GlobalPortScopeContext = GlobalPortScopeContext;
var GreenContext = /** @class */ (function (_super) {
    __extends(GreenContext, _super);
    function GreenContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    GreenContext.prototype.scaledInteger = function () {
        return this.getRuleContext(0, ScaledIntegerContext);
    };
    Object.defineProperty(GreenContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_green; },
        enumerable: true,
        configurable: true
    });
    // @Override
    GreenContext.prototype.enterRule = function (listener) {
        if (listener.enterGreen) {
            listener.enterGreen(this);
        }
    };
    // @Override
    GreenContext.prototype.exitRule = function (listener) {
        if (listener.exitGreen) {
            listener.exitGreen(this);
        }
    };
    // @Override
    GreenContext.prototype.accept = function (visitor) {
        if (visitor.visitGreen) {
            return visitor.visitGreen(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return GreenContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.GreenContext = GreenContext;
var HenryContext = /** @class */ (function (_super) {
    __extends(HenryContext, _super);
    function HenryContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HenryContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(HenryContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_henry; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HenryContext.prototype.enterRule = function (listener) {
        if (listener.enterHenry) {
            listener.enterHenry(this);
        }
    };
    // @Override
    HenryContext.prototype.exitRule = function (listener) {
        if (listener.exitHenry) {
            listener.exitHenry(this);
        }
    };
    // @Override
    HenryContext.prototype.accept = function (visitor) {
        if (visitor.visitHenry) {
            return visitor.visitHenry(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HenryContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HenryContext = HenryContext;
var HertzContext = /** @class */ (function (_super) {
    __extends(HertzContext, _super);
    function HertzContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HertzContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(HertzContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_hertz; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HertzContext.prototype.enterRule = function (listener) {
        if (listener.enterHertz) {
            listener.enterHertz(this);
        }
    };
    // @Override
    HertzContext.prototype.exitRule = function (listener) {
        if (listener.exitHertz) {
            listener.exitHertz(this);
        }
    };
    // @Override
    HertzContext.prototype.accept = function (visitor) {
        if (visitor.visitHertz) {
            return visitor.visitHertz(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HertzContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HertzContext = HertzContext;
var HorizontalJustificationContext = /** @class */ (function (_super) {
    __extends(HorizontalJustificationContext, _super);
    function HorizontalJustificationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HorizontalJustificationContext.prototype.leftJustify = function () {
        return this.tryGetRuleContext(0, LeftJustifyContext);
    };
    HorizontalJustificationContext.prototype.centerJustify = function () {
        return this.tryGetRuleContext(0, CenterJustifyContext);
    };
    HorizontalJustificationContext.prototype.rightJustify = function () {
        return this.tryGetRuleContext(0, RightJustifyContext);
    };
    Object.defineProperty(HorizontalJustificationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_horizontalJustification; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HorizontalJustificationContext.prototype.enterRule = function (listener) {
        if (listener.enterHorizontalJustification) {
            listener.enterHorizontalJustification(this);
        }
    };
    // @Override
    HorizontalJustificationContext.prototype.exitRule = function (listener) {
        if (listener.exitHorizontalJustification) {
            listener.exitHorizontalJustification(this);
        }
    };
    // @Override
    HorizontalJustificationContext.prototype.accept = function (visitor) {
        if (visitor.visitHorizontalJustification) {
            return visitor.visitHorizontalJustification(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HorizontalJustificationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HorizontalJustificationContext = HorizontalJustificationContext;
var HotspotContext = /** @class */ (function (_super) {
    __extends(HotspotContext, _super);
    function HotspotContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HotspotContext.prototype.pointValue = function () {
        return this.getRuleContext(0, PointValueContext);
    };
    HotspotContext.prototype.hotspotConnectDirection = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(HotspotConnectDirectionContext);
        }
        else {
            return this.getRuleContext(i, HotspotConnectDirectionContext);
        }
    };
    HotspotContext.prototype.hotspotNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(HotspotNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, HotspotNameDisplayContext);
        }
    };
    HotspotContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    HotspotContext.prototype.schematicWireAffinity = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicWireAffinityContext);
        }
        else {
            return this.getRuleContext(i, SchematicWireAffinityContext);
        }
    };
    Object.defineProperty(HotspotContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_hotspot; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HotspotContext.prototype.enterRule = function (listener) {
        if (listener.enterHotspot) {
            listener.enterHotspot(this);
        }
    };
    // @Override
    HotspotContext.prototype.exitRule = function (listener) {
        if (listener.exitHotspot) {
            listener.exitHotspot(this);
        }
    };
    // @Override
    HotspotContext.prototype.accept = function (visitor) {
        if (visitor.visitHotspot) {
            return visitor.visitHotspot(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HotspotContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HotspotContext = HotspotContext;
var HotspotConnectDirectionContext = /** @class */ (function (_super) {
    __extends(HotspotConnectDirectionContext, _super);
    function HotspotConnectDirectionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HotspotConnectDirectionContext.prototype.fromBottom = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FromBottomContext);
        }
        else {
            return this.getRuleContext(i, FromBottomContext);
        }
    };
    HotspotConnectDirectionContext.prototype.fromLeft = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FromLeftContext);
        }
        else {
            return this.getRuleContext(i, FromLeftContext);
        }
    };
    HotspotConnectDirectionContext.prototype.fromRight = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FromRightContext);
        }
        else {
            return this.getRuleContext(i, FromRightContext);
        }
    };
    HotspotConnectDirectionContext.prototype.fromTop = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FromTopContext);
        }
        else {
            return this.getRuleContext(i, FromTopContext);
        }
    };
    Object.defineProperty(HotspotConnectDirectionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_hotspotConnectDirection; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HotspotConnectDirectionContext.prototype.enterRule = function (listener) {
        if (listener.enterHotspotConnectDirection) {
            listener.enterHotspotConnectDirection(this);
        }
    };
    // @Override
    HotspotConnectDirectionContext.prototype.exitRule = function (listener) {
        if (listener.exitHotspotConnectDirection) {
            listener.exitHotspotConnectDirection(this);
        }
    };
    // @Override
    HotspotConnectDirectionContext.prototype.accept = function (visitor) {
        if (visitor.visitHotspotConnectDirection) {
            return visitor.visitHotspotConnectDirection(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HotspotConnectDirectionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HotspotConnectDirectionContext = HotspotConnectDirectionContext;
var HotspotGridContext = /** @class */ (function (_super) {
    __extends(HotspotGridContext, _super);
    function HotspotGridContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HotspotGridContext.prototype.lengthValue = function () {
        return this.getRuleContext(0, LengthValueContext);
    };
    Object.defineProperty(HotspotGridContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_hotspotGrid; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HotspotGridContext.prototype.enterRule = function (listener) {
        if (listener.enterHotspotGrid) {
            listener.enterHotspotGrid(this);
        }
    };
    // @Override
    HotspotGridContext.prototype.exitRule = function (listener) {
        if (listener.exitHotspotGrid) {
            listener.exitHotspotGrid(this);
        }
    };
    // @Override
    HotspotGridContext.prototype.accept = function (visitor) {
        if (visitor.visitHotspotGrid) {
            return visitor.visitHotspotGrid(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HotspotGridContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HotspotGridContext = HotspotGridContext;
var HotspotNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(HotspotNameCaseSensitiveContext, _super);
    function HotspotNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HotspotNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(HotspotNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_hotspotNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HotspotNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterHotspotNameCaseSensitive) {
            listener.enterHotspotNameCaseSensitive(this);
        }
    };
    // @Override
    HotspotNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitHotspotNameCaseSensitive) {
            listener.exitHotspotNameCaseSensitive(this);
        }
    };
    // @Override
    HotspotNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitHotspotNameCaseSensitive) {
            return visitor.visitHotspotNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HotspotNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HotspotNameCaseSensitiveContext = HotspotNameCaseSensitiveContext;
var HotspotNameDefContext = /** @class */ (function (_super) {
    __extends(HotspotNameDefContext, _super);
    function HotspotNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HotspotNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(HotspotNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_hotspotNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HotspotNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterHotspotNameDef) {
            listener.enterHotspotNameDef(this);
        }
    };
    // @Override
    HotspotNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitHotspotNameDef) {
            listener.exitHotspotNameDef(this);
        }
    };
    // @Override
    HotspotNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitHotspotNameDef) {
            return visitor.visitHotspotNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HotspotNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HotspotNameDefContext = HotspotNameDefContext;
var HotspotNameDisplayContext = /** @class */ (function (_super) {
    __extends(HotspotNameDisplayContext, _super);
    function HotspotNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HotspotNameDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    HotspotNameDisplayContext.prototype.displayNameOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameOverrideContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameOverrideContext);
        }
    };
    Object.defineProperty(HotspotNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_hotspotNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HotspotNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterHotspotNameDisplay) {
            listener.enterHotspotNameDisplay(this);
        }
    };
    // @Override
    HotspotNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitHotspotNameDisplay) {
            listener.exitHotspotNameDisplay(this);
        }
    };
    // @Override
    HotspotNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitHotspotNameDisplay) {
            return visitor.visitHotspotNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HotspotNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HotspotNameDisplayContext = HotspotNameDisplayContext;
var HotspotNameRefContext = /** @class */ (function (_super) {
    __extends(HotspotNameRefContext, _super);
    function HotspotNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HotspotNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(HotspotNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_hotspotNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HotspotNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterHotspotNameRef) {
            listener.enterHotspotNameRef(this);
        }
    };
    // @Override
    HotspotNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitHotspotNameRef) {
            listener.exitHotspotNameRef(this);
        }
    };
    // @Override
    HotspotNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitHotspotNameRef) {
            return visitor.visitHotspotNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HotspotNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HotspotNameRefContext = HotspotNameRefContext;
var HourNumberContext = /** @class */ (function (_super) {
    __extends(HourNumberContext, _super);
    function HourNumberContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    HourNumberContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(HourNumberContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_hourNumber; },
        enumerable: true,
        configurable: true
    });
    // @Override
    HourNumberContext.prototype.enterRule = function (listener) {
        if (listener.enterHourNumber) {
            listener.enterHourNumber(this);
        }
    };
    // @Override
    HourNumberContext.prototype.exitRule = function (listener) {
        if (listener.exitHourNumber) {
            listener.exitHourNumber(this);
        }
    };
    // @Override
    HourNumberContext.prototype.accept = function (visitor) {
        if (visitor.visitHourNumber) {
            return visitor.visitHourNumber(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return HourNumberContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.HourNumberContext = HourNumberContext;
var IeeeDesignationContext = /** @class */ (function (_super) {
    __extends(IeeeDesignationContext, _super);
    function IeeeDesignationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IeeeDesignationContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(IeeeDesignationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ieeeDesignation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IeeeDesignationContext.prototype.enterRule = function (listener) {
        if (listener.enterIeeeDesignation) {
            listener.enterIeeeDesignation(this);
        }
    };
    // @Override
    IeeeDesignationContext.prototype.exitRule = function (listener) {
        if (listener.exitIeeeDesignation) {
            listener.exitIeeeDesignation(this);
        }
    };
    // @Override
    IeeeDesignationContext.prototype.accept = function (visitor) {
        if (visitor.visitIeeeDesignation) {
            return visitor.visitIeeeDesignation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IeeeDesignationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IeeeDesignationContext = IeeeDesignationContext;
var IeeeSectionContext = /** @class */ (function (_super) {
    __extends(IeeeSectionContext, _super);
    function IeeeSectionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IeeeSectionContext.prototype.integerToken = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerTokenContext);
        }
        else {
            return this.getRuleContext(i, IntegerTokenContext);
        }
    };
    Object.defineProperty(IeeeSectionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ieeeSection; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IeeeSectionContext.prototype.enterRule = function (listener) {
        if (listener.enterIeeeSection) {
            listener.enterIeeeSection(this);
        }
    };
    // @Override
    IeeeSectionContext.prototype.exitRule = function (listener) {
        if (listener.exitIeeeSection) {
            listener.exitIeeeSection(this);
        }
    };
    // @Override
    IeeeSectionContext.prototype.accept = function (visitor) {
        if (visitor.visitIeeeSection) {
            return visitor.visitIeeeSection(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IeeeSectionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IeeeSectionContext = IeeeSectionContext;
var IeeeStandardContext = /** @class */ (function (_super) {
    __extends(IeeeStandardContext, _super);
    function IeeeStandardContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IeeeStandardContext.prototype.ieeeDesignation = function () {
        return this.getRuleContext(0, IeeeDesignationContext);
    };
    IeeeStandardContext.prototype.year = function () {
        return this.getRuleContext(0, YearContext);
    };
    IeeeStandardContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    IeeeStandardContext.prototype.ieeeSection = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IeeeSectionContext);
        }
        else {
            return this.getRuleContext(i, IeeeSectionContext);
        }
    };
    Object.defineProperty(IeeeStandardContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ieeeStandard; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IeeeStandardContext.prototype.enterRule = function (listener) {
        if (listener.enterIeeeStandard) {
            listener.enterIeeeStandard(this);
        }
    };
    // @Override
    IeeeStandardContext.prototype.exitRule = function (listener) {
        if (listener.exitIeeeStandard) {
            listener.exitIeeeStandard(this);
        }
    };
    // @Override
    IeeeStandardContext.prototype.accept = function (visitor) {
        if (visitor.visitIeeeStandard) {
            return visitor.visitIeeeStandard(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IeeeStandardContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IeeeStandardContext = IeeeStandardContext;
var IfFrameContext = /** @class */ (function (_super) {
    __extends(IfFrameContext, _super);
    function IfFrameContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IfFrameContext.prototype.frameNameDef = function () {
        return this.getRuleContext(0, FrameNameDefContext);
    };
    IfFrameContext.prototype.condition = function () {
        return this.getRuleContext(0, ConditionContext);
    };
    IfFrameContext.prototype.logicalConnectivity = function () {
        return this.getRuleContext(0, LogicalConnectivityContext);
    };
    IfFrameContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    IfFrameContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    IfFrameContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    IfFrameContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    IfFrameContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(IfFrameContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ifFrame; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IfFrameContext.prototype.enterRule = function (listener) {
        if (listener.enterIfFrame) {
            listener.enterIfFrame(this);
        }
    };
    // @Override
    IfFrameContext.prototype.exitRule = function (listener) {
        if (listener.exitIfFrame) {
            listener.exitIfFrame(this);
        }
    };
    // @Override
    IfFrameContext.prototype.accept = function (visitor) {
        if (visitor.visitIfFrame) {
            return visitor.visitIfFrame(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IfFrameContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IfFrameContext = IfFrameContext;
var IfFrameAnnotateContext = /** @class */ (function (_super) {
    __extends(IfFrameAnnotateContext, _super);
    function IfFrameAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IfFrameAnnotateContext.prototype.extendFrameDef = function () {
        return this.getRuleContext(0, ExtendFrameDefContext);
    };
    IfFrameAnnotateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    IfFrameAnnotateContext.prototype.forFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ForFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, ForFrameAnnotateContext);
        }
    };
    IfFrameAnnotateContext.prototype.ifFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IfFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, IfFrameAnnotateContext);
        }
    };
    IfFrameAnnotateContext.prototype.interconnectAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectAnnotateContext);
        }
        else {
            return this.getRuleContext(i, InterconnectAnnotateContext);
        }
    };
    IfFrameAnnotateContext.prototype.leafOccurrenceAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LeafOccurrenceAnnotateContext);
        }
        else {
            return this.getRuleContext(i, LeafOccurrenceAnnotateContext);
        }
    };
    IfFrameAnnotateContext.prototype.occurrenceAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OccurrenceAnnotateContext);
        }
        else {
            return this.getRuleContext(i, OccurrenceAnnotateContext);
        }
    };
    IfFrameAnnotateContext.prototype.otherwiseFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OtherwiseFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, OtherwiseFrameAnnotateContext);
        }
    };
    IfFrameAnnotateContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(IfFrameAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ifFrameAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IfFrameAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterIfFrameAnnotate) {
            listener.enterIfFrameAnnotate(this);
        }
    };
    // @Override
    IfFrameAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitIfFrameAnnotate) {
            listener.exitIfFrameAnnotate(this);
        }
    };
    // @Override
    IfFrameAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitIfFrameAnnotate) {
            return visitor.visitIfFrameAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IfFrameAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IfFrameAnnotateContext = IfFrameAnnotateContext;
var IfFrameRefContext = /** @class */ (function (_super) {
    __extends(IfFrameRefContext, _super);
    function IfFrameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IfFrameRefContext.prototype.frameNameRef = function () {
        return this.getRuleContext(0, FrameNameRefContext);
    };
    Object.defineProperty(IfFrameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ifFrameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IfFrameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterIfFrameRef) {
            listener.enterIfFrameRef(this);
        }
    };
    // @Override
    IfFrameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitIfFrameRef) {
            listener.exitIfFrameRef(this);
        }
    };
    // @Override
    IfFrameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitIfFrameRef) {
            return visitor.visitIfFrameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IfFrameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IfFrameRefContext = IfFrameRefContext;
var IfFrameSetContext = /** @class */ (function (_super) {
    __extends(IfFrameSetContext, _super);
    function IfFrameSetContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IfFrameSetContext.prototype.ifFrameRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IfFrameRefContext);
        }
        else {
            return this.getRuleContext(i, IfFrameRefContext);
        }
    };
    Object.defineProperty(IfFrameSetContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ifFrameSet; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IfFrameSetContext.prototype.enterRule = function (listener) {
        if (listener.enterIfFrameSet) {
            listener.enterIfFrameSet(this);
        }
    };
    // @Override
    IfFrameSetContext.prototype.exitRule = function (listener) {
        if (listener.exitIfFrameSet) {
            listener.exitIfFrameSet(this);
        }
    };
    // @Override
    IfFrameSetContext.prototype.accept = function (visitor) {
        if (visitor.visitIfFrameSet) {
            return visitor.visitIfFrameSet(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IfFrameSetContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IfFrameSetContext = IfFrameSetContext;
var IgnoreContext = /** @class */ (function (_super) {
    __extends(IgnoreContext, _super);
    function IgnoreContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(IgnoreContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ignore; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IgnoreContext.prototype.enterRule = function (listener) {
        if (listener.enterIgnore) {
            listener.enterIgnore(this);
        }
    };
    // @Override
    IgnoreContext.prototype.exitRule = function (listener) {
        if (listener.exitIgnore) {
            listener.exitIgnore(this);
        }
    };
    // @Override
    IgnoreContext.prototype.accept = function (visitor) {
        if (visitor.visitIgnore) {
            return visitor.visitIgnore(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IgnoreContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IgnoreContext = IgnoreContext;
var ImplementationNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(ImplementationNameCaseSensitiveContext, _super);
    function ImplementationNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ImplementationNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(ImplementationNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_implementationNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ImplementationNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterImplementationNameCaseSensitive) {
            listener.enterImplementationNameCaseSensitive(this);
        }
    };
    // @Override
    ImplementationNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitImplementationNameCaseSensitive) {
            listener.exitImplementationNameCaseSensitive(this);
        }
    };
    // @Override
    ImplementationNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitImplementationNameCaseSensitive) {
            return visitor.visitImplementationNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ImplementationNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ImplementationNameCaseSensitiveContext = ImplementationNameCaseSensitiveContext;
var ImplementationNameDefContext = /** @class */ (function (_super) {
    __extends(ImplementationNameDefContext, _super);
    function ImplementationNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ImplementationNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(ImplementationNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_implementationNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ImplementationNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterImplementationNameDef) {
            listener.enterImplementationNameDef(this);
        }
    };
    // @Override
    ImplementationNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitImplementationNameDef) {
            listener.exitImplementationNameDef(this);
        }
    };
    // @Override
    ImplementationNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitImplementationNameDef) {
            return visitor.visitImplementationNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ImplementationNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ImplementationNameDefContext = ImplementationNameDefContext;
var ImplementationNameDisplayContext = /** @class */ (function (_super) {
    __extends(ImplementationNameDisplayContext, _super);
    function ImplementationNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ImplementationNameDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    ImplementationNameDisplayContext.prototype.displayNameOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameOverrideContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameOverrideContext);
        }
    };
    Object.defineProperty(ImplementationNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_implementationNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ImplementationNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterImplementationNameDisplay) {
            listener.enterImplementationNameDisplay(this);
        }
    };
    // @Override
    ImplementationNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitImplementationNameDisplay) {
            listener.exitImplementationNameDisplay(this);
        }
    };
    // @Override
    ImplementationNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitImplementationNameDisplay) {
            return visitor.visitImplementationNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ImplementationNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ImplementationNameDisplayContext = ImplementationNameDisplayContext;
var ImplementationNameRefContext = /** @class */ (function (_super) {
    __extends(ImplementationNameRefContext, _super);
    function ImplementationNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ImplementationNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(ImplementationNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_implementationNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ImplementationNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterImplementationNameRef) {
            listener.enterImplementationNameRef(this);
        }
    };
    // @Override
    ImplementationNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitImplementationNameRef) {
            listener.exitImplementationNameRef(this);
        }
    };
    // @Override
    ImplementationNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitImplementationNameRef) {
            return visitor.visitImplementationNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ImplementationNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ImplementationNameRefContext = ImplementationNameRefContext;
var IndexEndDisplayContext = /** @class */ (function (_super) {
    __extends(IndexEndDisplayContext, _super);
    function IndexEndDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IndexEndDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    IndexEndDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    IndexEndDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(IndexEndDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_indexEndDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IndexEndDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterIndexEndDisplay) {
            listener.enterIndexEndDisplay(this);
        }
    };
    // @Override
    IndexEndDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitIndexEndDisplay) {
            listener.exitIndexEndDisplay(this);
        }
    };
    // @Override
    IndexEndDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitIndexEndDisplay) {
            return visitor.visitIndexEndDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IndexEndDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IndexEndDisplayContext = IndexEndDisplayContext;
var IndexNameDefContext = /** @class */ (function (_super) {
    __extends(IndexNameDefContext, _super);
    function IndexNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IndexNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(IndexNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_indexNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IndexNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterIndexNameDef) {
            listener.enterIndexNameDef(this);
        }
    };
    // @Override
    IndexNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitIndexNameDef) {
            listener.exitIndexNameDef(this);
        }
    };
    // @Override
    IndexNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitIndexNameDef) {
            return visitor.visitIndexNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IndexNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IndexNameDefContext = IndexNameDefContext;
var IndexNameDisplayContext = /** @class */ (function (_super) {
    __extends(IndexNameDisplayContext, _super);
    function IndexNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IndexNameDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    IndexNameDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    IndexNameDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(IndexNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_indexNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IndexNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterIndexNameDisplay) {
            listener.enterIndexNameDisplay(this);
        }
    };
    // @Override
    IndexNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitIndexNameDisplay) {
            listener.exitIndexNameDisplay(this);
        }
    };
    // @Override
    IndexNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitIndexNameDisplay) {
            return visitor.visitIndexNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IndexNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IndexNameDisplayContext = IndexNameDisplayContext;
var IndexNameRefContext = /** @class */ (function (_super) {
    __extends(IndexNameRefContext, _super);
    function IndexNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IndexNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(IndexNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_indexNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IndexNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterIndexNameRef) {
            listener.enterIndexNameRef(this);
        }
    };
    // @Override
    IndexNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitIndexNameRef) {
            listener.exitIndexNameRef(this);
        }
    };
    // @Override
    IndexNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitIndexNameRef) {
            return visitor.visitIndexNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IndexNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IndexNameRefContext = IndexNameRefContext;
var IndexStartContext = /** @class */ (function (_super) {
    __extends(IndexStartContext, _super);
    function IndexStartContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IndexStartContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(IndexStartContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_indexStart; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IndexStartContext.prototype.enterRule = function (listener) {
        if (listener.enterIndexStart) {
            listener.enterIndexStart(this);
        }
    };
    // @Override
    IndexStartContext.prototype.exitRule = function (listener) {
        if (listener.exitIndexStart) {
            listener.exitIndexStart(this);
        }
    };
    // @Override
    IndexStartContext.prototype.accept = function (visitor) {
        if (visitor.visitIndexStart) {
            return visitor.visitIndexStart(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IndexStartContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IndexStartContext = IndexStartContext;
var IndexStartDisplayContext = /** @class */ (function (_super) {
    __extends(IndexStartDisplayContext, _super);
    function IndexStartDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IndexStartDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    IndexStartDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    IndexStartDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(IndexStartDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_indexStartDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IndexStartDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterIndexStartDisplay) {
            listener.enterIndexStartDisplay(this);
        }
    };
    // @Override
    IndexStartDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitIndexStartDisplay) {
            listener.exitIndexStartDisplay(this);
        }
    };
    // @Override
    IndexStartDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitIndexStartDisplay) {
            return visitor.visitIndexStartDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IndexStartDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IndexStartDisplayContext = IndexStartDisplayContext;
var IndexStepContext = /** @class */ (function (_super) {
    __extends(IndexStepContext, _super);
    function IndexStepContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IndexStepContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(IndexStepContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_indexStep; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IndexStepContext.prototype.enterRule = function (listener) {
        if (listener.enterIndexStep) {
            listener.enterIndexStep(this);
        }
    };
    // @Override
    IndexStepContext.prototype.exitRule = function (listener) {
        if (listener.exitIndexStep) {
            listener.exitIndexStep(this);
        }
    };
    // @Override
    IndexStepContext.prototype.accept = function (visitor) {
        if (visitor.visitIndexStep) {
            return visitor.visitIndexStep(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IndexStepContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IndexStepContext = IndexStepContext;
var IndexStepDisplayContext = /** @class */ (function (_super) {
    __extends(IndexStepDisplayContext, _super);
    function IndexStepDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IndexStepDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    IndexStepDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    IndexStepDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(IndexStepDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_indexStepDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IndexStepDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterIndexStepDisplay) {
            listener.enterIndexStepDisplay(this);
        }
    };
    // @Override
    IndexStepDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitIndexStepDisplay) {
            listener.exitIndexStepDisplay(this);
        }
    };
    // @Override
    IndexStepDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitIndexStepDisplay) {
            return visitor.visitIndexStepDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IndexStepDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IndexStepDisplayContext = IndexStepDisplayContext;
var IndexValueContext = /** @class */ (function (_super) {
    __extends(IndexValueContext, _super);
    function IndexValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IndexValueContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(IndexValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_indexValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IndexValueContext.prototype.enterRule = function (listener) {
        if (listener.enterIndexValue) {
            listener.enterIndexValue(this);
        }
    };
    // @Override
    IndexValueContext.prototype.exitRule = function (listener) {
        if (listener.exitIndexValue) {
            listener.exitIndexValue(this);
        }
    };
    // @Override
    IndexValueContext.prototype.accept = function (visitor) {
        if (visitor.visitIndexValue) {
            return visitor.visitIndexValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IndexValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IndexValueContext = IndexValueContext;
var InputContext = /** @class */ (function (_super) {
    __extends(InputContext, _super);
    function InputContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(InputContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_input; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InputContext.prototype.enterRule = function (listener) {
        if (listener.enterInput) {
            listener.enterInput(this);
        }
    };
    // @Override
    InputContext.prototype.exitRule = function (listener) {
        if (listener.exitInput) {
            listener.exitInput(this);
        }
    };
    // @Override
    InputContext.prototype.accept = function (visitor) {
        if (visitor.visitInput) {
            return visitor.visitInput(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InputContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InputContext = InputContext;
var InputPortContext = /** @class */ (function (_super) {
    __extends(InputPortContext, _super);
    function InputPortContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InputPortContext.prototype.inputPortAttributes = function () {
        return this.tryGetRuleContext(0, InputPortAttributesContext);
    };
    Object.defineProperty(InputPortContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_inputPort; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InputPortContext.prototype.enterRule = function (listener) {
        if (listener.enterInputPort) {
            listener.enterInputPort(this);
        }
    };
    // @Override
    InputPortContext.prototype.exitRule = function (listener) {
        if (listener.exitInputPort) {
            listener.exitInputPort(this);
        }
    };
    // @Override
    InputPortContext.prototype.accept = function (visitor) {
        if (visitor.visitInputPort) {
            return visitor.visitInputPort(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InputPortContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InputPortContext = InputPortContext;
var InputPortAttributesContext = /** @class */ (function (_super) {
    __extends(InputPortAttributesContext, _super);
    function InputPortAttributesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InputPortAttributesContext.prototype.dcFanOutLoad = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcFanOutLoadContext);
        }
        else {
            return this.getRuleContext(i, DcFanOutLoadContext);
        }
    };
    InputPortAttributesContext.prototype.dcMaxFanIn = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcMaxFanInContext);
        }
        else {
            return this.getRuleContext(i, DcMaxFanInContext);
        }
    };
    Object.defineProperty(InputPortAttributesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_inputPortAttributes; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InputPortAttributesContext.prototype.enterRule = function (listener) {
        if (listener.enterInputPortAttributes) {
            listener.enterInputPortAttributes(this);
        }
    };
    // @Override
    InputPortAttributesContext.prototype.exitRule = function (listener) {
        if (listener.exitInputPortAttributes) {
            listener.exitInputPortAttributes(this);
        }
    };
    // @Override
    InputPortAttributesContext.prototype.accept = function (visitor) {
        if (visitor.visitInputPortAttributes) {
            return visitor.visitInputPortAttributes(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InputPortAttributesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InputPortAttributesContext = InputPortAttributesContext;
var InstanceContext = /** @class */ (function (_super) {
    __extends(InstanceContext, _super);
    function InstanceContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceContext.prototype.instanceNameDef = function () {
        return this.getRuleContext(0, InstanceNameDefContext);
    };
    InstanceContext.prototype.clusterRef = function () {
        return this.getRuleContext(0, ClusterRefContext);
    };
    InstanceContext.prototype.booleanParameterAssign = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BooleanParameterAssignContext);
        }
        else {
            return this.getRuleContext(i, BooleanParameterAssignContext);
        }
    };
    InstanceContext.prototype.cellPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, CellPropertyOverrideContext);
        }
    };
    InstanceContext.prototype.clusterPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, ClusterPropertyOverrideContext);
        }
    };
    InstanceContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    InstanceContext.prototype.designator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorContext);
        }
        else {
            return this.getRuleContext(i, DesignatorContext);
        }
    };
    InstanceContext.prototype.instanceNameGenerator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceNameGeneratorContext);
        }
        else {
            return this.getRuleContext(i, InstanceNameGeneratorContext);
        }
    };
    InstanceContext.prototype.instancePortAttributes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstancePortAttributesContext);
        }
        else {
            return this.getRuleContext(i, InstancePortAttributesContext);
        }
    };
    InstanceContext.prototype.instanceWidth = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceWidthContext);
        }
        else {
            return this.getRuleContext(i, InstanceWidthContext);
        }
    };
    InstanceContext.prototype.integerParameterAssign = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerParameterAssignContext);
        }
        else {
            return this.getRuleContext(i, IntegerParameterAssignContext);
        }
    };
    InstanceContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    InstanceContext.prototype.numberParameterAssign = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NumberParameterAssignContext);
        }
        else {
            return this.getRuleContext(i, NumberParameterAssignContext);
        }
    };
    InstanceContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    InstanceContext.prototype.stringParameterAssign = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringParameterAssignContext);
        }
        else {
            return this.getRuleContext(i, StringParameterAssignContext);
        }
    };
    InstanceContext.prototype.timing = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TimingContext);
        }
        else {
            return this.getRuleContext(i, TimingContext);
        }
    };
    InstanceContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(InstanceContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instance; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceContext.prototype.enterRule = function (listener) {
        if (listener.enterInstance) {
            listener.enterInstance(this);
        }
    };
    // @Override
    InstanceContext.prototype.exitRule = function (listener) {
        if (listener.exitInstance) {
            listener.exitInstance(this);
        }
    };
    // @Override
    InstanceContext.prototype.accept = function (visitor) {
        if (visitor.visitInstance) {
            return visitor.visitInstance(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceContext = InstanceContext;
var InstanceConfigurationContext = /** @class */ (function (_super) {
    __extends(InstanceConfigurationContext, _super);
    function InstanceConfigurationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceConfigurationContext.prototype.instanceNameRef = function () {
        return this.getRuleContext(0, InstanceNameRefContext);
    };
    InstanceConfigurationContext.prototype.clusterConfigurationRef = function () {
        return this.getRuleContext(0, ClusterConfigurationRefContext);
    };
    Object.defineProperty(InstanceConfigurationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceConfiguration; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceConfigurationContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceConfiguration) {
            listener.enterInstanceConfiguration(this);
        }
    };
    // @Override
    InstanceConfigurationContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceConfiguration) {
            listener.exitInstanceConfiguration(this);
        }
    };
    // @Override
    InstanceConfigurationContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceConfiguration) {
            return visitor.visitInstanceConfiguration(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceConfigurationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceConfigurationContext = InstanceConfigurationContext;
var InstanceIndexValueContext = /** @class */ (function (_super) {
    __extends(InstanceIndexValueContext, _super);
    function InstanceIndexValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(InstanceIndexValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceIndexValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceIndexValueContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceIndexValue) {
            listener.enterInstanceIndexValue(this);
        }
    };
    // @Override
    InstanceIndexValueContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceIndexValue) {
            listener.exitInstanceIndexValue(this);
        }
    };
    // @Override
    InstanceIndexValueContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceIndexValue) {
            return visitor.visitInstanceIndexValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceIndexValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceIndexValueContext = InstanceIndexValueContext;
var InstanceMemberRefContext = /** @class */ (function (_super) {
    __extends(InstanceMemberRefContext, _super);
    function InstanceMemberRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceMemberRefContext.prototype.instanceNameRef = function () {
        return this.getRuleContext(0, InstanceNameRefContext);
    };
    InstanceMemberRefContext.prototype.indexValue = function () {
        return this.getRuleContext(0, IndexValueContext);
    };
    Object.defineProperty(InstanceMemberRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceMemberRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceMemberRefContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceMemberRef) {
            listener.enterInstanceMemberRef(this);
        }
    };
    // @Override
    InstanceMemberRefContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceMemberRef) {
            listener.exitInstanceMemberRef(this);
        }
    };
    // @Override
    InstanceMemberRefContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceMemberRef) {
            return visitor.visitInstanceMemberRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceMemberRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceMemberRefContext = InstanceMemberRefContext;
var InstanceNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(InstanceNameCaseSensitiveContext, _super);
    function InstanceNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(InstanceNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceNameCaseSensitive) {
            listener.enterInstanceNameCaseSensitive(this);
        }
    };
    // @Override
    InstanceNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceNameCaseSensitive) {
            listener.exitInstanceNameCaseSensitive(this);
        }
    };
    // @Override
    InstanceNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceNameCaseSensitive) {
            return visitor.visitInstanceNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceNameCaseSensitiveContext = InstanceNameCaseSensitiveContext;
var InstanceNameDefContext = /** @class */ (function (_super) {
    __extends(InstanceNameDefContext, _super);
    function InstanceNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(InstanceNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceNameDef) {
            listener.enterInstanceNameDef(this);
        }
    };
    // @Override
    InstanceNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceNameDef) {
            listener.exitInstanceNameDef(this);
        }
    };
    // @Override
    InstanceNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceNameDef) {
            return visitor.visitInstanceNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceNameDefContext = InstanceNameDefContext;
var InstanceNameDisplayContext = /** @class */ (function (_super) {
    __extends(InstanceNameDisplayContext, _super);
    function InstanceNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceNameDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    InstanceNameDisplayContext.prototype.displayNameOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameOverrideContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameOverrideContext);
        }
    };
    Object.defineProperty(InstanceNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceNameDisplay) {
            listener.enterInstanceNameDisplay(this);
        }
    };
    // @Override
    InstanceNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceNameDisplay) {
            listener.exitInstanceNameDisplay(this);
        }
    };
    // @Override
    InstanceNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceNameDisplay) {
            return visitor.visitInstanceNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceNameDisplayContext = InstanceNameDisplayContext;
var InstanceNameGeneratorContext = /** @class */ (function (_super) {
    __extends(InstanceNameGeneratorContext, _super);
    function InstanceNameGeneratorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceNameGeneratorContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    Object.defineProperty(InstanceNameGeneratorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceNameGenerator; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceNameGeneratorContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceNameGenerator) {
            listener.enterInstanceNameGenerator(this);
        }
    };
    // @Override
    InstanceNameGeneratorContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceNameGenerator) {
            listener.exitInstanceNameGenerator(this);
        }
    };
    // @Override
    InstanceNameGeneratorContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceNameGenerator) {
            return visitor.visitInstanceNameGenerator(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceNameGeneratorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceNameGeneratorContext = InstanceNameGeneratorContext;
var InstanceNameGeneratorDisplayContext = /** @class */ (function (_super) {
    __extends(InstanceNameGeneratorDisplayContext, _super);
    function InstanceNameGeneratorDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceNameGeneratorDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    InstanceNameGeneratorDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    InstanceNameGeneratorDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(InstanceNameGeneratorDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceNameGeneratorDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceNameGeneratorDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceNameGeneratorDisplay) {
            listener.enterInstanceNameGeneratorDisplay(this);
        }
    };
    // @Override
    InstanceNameGeneratorDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceNameGeneratorDisplay) {
            listener.exitInstanceNameGeneratorDisplay(this);
        }
    };
    // @Override
    InstanceNameGeneratorDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceNameGeneratorDisplay) {
            return visitor.visitInstanceNameGeneratorDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceNameGeneratorDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceNameGeneratorDisplayContext = InstanceNameGeneratorDisplayContext;
var InstanceNameRefContext = /** @class */ (function (_super) {
    __extends(InstanceNameRefContext, _super);
    function InstanceNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(InstanceNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceNameRef) {
            listener.enterInstanceNameRef(this);
        }
    };
    // @Override
    InstanceNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceNameRef) {
            listener.exitInstanceNameRef(this);
        }
    };
    // @Override
    InstanceNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceNameRef) {
            return visitor.visitInstanceNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceNameRefContext = InstanceNameRefContext;
var InstancePortAttributeDisplayContext = /** @class */ (function (_super) {
    __extends(InstancePortAttributeDisplayContext, _super);
    function InstancePortAttributeDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstancePortAttributeDisplayContext.prototype.symbolPortImplementationNameRef = function () {
        return this.getRuleContext(0, SymbolPortImplementationNameRefContext);
    };
    InstancePortAttributeDisplayContext.prototype.portRef = function () {
        return this.getRuleContext(0, PortRefContext);
    };
    InstancePortAttributeDisplayContext.prototype.portPropertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortPropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PortPropertyDisplayOverrideContext);
        }
    };
    InstancePortAttributeDisplayContext.prototype.portAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, PortAttributeDisplayContext);
        }
    };
    Object.defineProperty(InstancePortAttributeDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instancePortAttributeDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstancePortAttributeDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterInstancePortAttributeDisplay) {
            listener.enterInstancePortAttributeDisplay(this);
        }
    };
    // @Override
    InstancePortAttributeDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitInstancePortAttributeDisplay) {
            listener.exitInstancePortAttributeDisplay(this);
        }
    };
    // @Override
    InstancePortAttributeDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitInstancePortAttributeDisplay) {
            return visitor.visitInstancePortAttributeDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstancePortAttributeDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstancePortAttributeDisplayContext = InstancePortAttributeDisplayContext;
var InstancePortAttributesContext = /** @class */ (function (_super) {
    __extends(InstancePortAttributesContext, _super);
    function InstancePortAttributesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstancePortAttributesContext.prototype.extendPortDef = function () {
        return this.getRuleContext(0, ExtendPortDefContext);
    };
    InstancePortAttributesContext.prototype.acLoad = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AcLoadContext);
        }
        else {
            return this.getRuleContext(i, AcLoadContext);
        }
    };
    InstancePortAttributesContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    InstancePortAttributesContext.prototype.connectedSignalIndexGenerator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectedSignalIndexGeneratorContext);
        }
        else {
            return this.getRuleContext(i, ConnectedSignalIndexGeneratorContext);
        }
    };
    InstancePortAttributesContext.prototype.designator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorContext);
        }
        else {
            return this.getRuleContext(i, DesignatorContext);
        }
    };
    InstancePortAttributesContext.prototype.directionalPortAttributeOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DirectionalPortAttributeOverrideContext);
        }
        else {
            return this.getRuleContext(i, DirectionalPortAttributeOverrideContext);
        }
    };
    InstancePortAttributesContext.prototype.portDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortDelayContext);
        }
        else {
            return this.getRuleContext(i, PortDelayContext);
        }
    };
    InstancePortAttributesContext.prototype.portDelayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortDelayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PortDelayOverrideContext);
        }
    };
    InstancePortAttributesContext.prototype.portLoadDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortLoadDelayContext);
        }
        else {
            return this.getRuleContext(i, PortLoadDelayContext);
        }
    };
    InstancePortAttributesContext.prototype.portLoadDelayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortLoadDelayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PortLoadDelayOverrideContext);
        }
    };
    InstancePortAttributesContext.prototype.portPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PortPropertyOverrideContext);
        }
    };
    InstancePortAttributesContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    InstancePortAttributesContext.prototype.unused = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UnusedContext);
        }
        else {
            return this.getRuleContext(i, UnusedContext);
        }
    };
    Object.defineProperty(InstancePortAttributesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instancePortAttributes; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstancePortAttributesContext.prototype.enterRule = function (listener) {
        if (listener.enterInstancePortAttributes) {
            listener.enterInstancePortAttributes(this);
        }
    };
    // @Override
    InstancePortAttributesContext.prototype.exitRule = function (listener) {
        if (listener.exitInstancePortAttributes) {
            listener.exitInstancePortAttributes(this);
        }
    };
    // @Override
    InstancePortAttributesContext.prototype.accept = function (visitor) {
        if (visitor.visitInstancePortAttributes) {
            return visitor.visitInstancePortAttributes(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstancePortAttributesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstancePortAttributesContext = InstancePortAttributesContext;
var InstancePropertyDisplayContext = /** @class */ (function (_super) {
    __extends(InstancePropertyDisplayContext, _super);
    function InstancePropertyDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstancePropertyDisplayContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    InstancePropertyDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    InstancePropertyDisplayContext.prototype.propertyNameDisplay = function () {
        return this.tryGetRuleContext(0, PropertyNameDisplayContext);
    };
    Object.defineProperty(InstancePropertyDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instancePropertyDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstancePropertyDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterInstancePropertyDisplay) {
            listener.enterInstancePropertyDisplay(this);
        }
    };
    // @Override
    InstancePropertyDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitInstancePropertyDisplay) {
            listener.exitInstancePropertyDisplay(this);
        }
    };
    // @Override
    InstancePropertyDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitInstancePropertyDisplay) {
            return visitor.visitInstancePropertyDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstancePropertyDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstancePropertyDisplayContext = InstancePropertyDisplayContext;
var InstancePropertyOverrideContext = /** @class */ (function (_super) {
    __extends(InstancePropertyOverrideContext, _super);
    function InstancePropertyOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstancePropertyOverrideContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    InstancePropertyOverrideContext.prototype.typedValue = function () {
        return this.tryGetRuleContext(0, TypedValueContext);
    };
    InstancePropertyOverrideContext.prototype.untyped = function () {
        return this.tryGetRuleContext(0, UntypedContext);
    };
    InstancePropertyOverrideContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    InstancePropertyOverrideContext.prototype.fixed = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FixedContext);
        }
        else {
            return this.getRuleContext(i, FixedContext);
        }
    };
    InstancePropertyOverrideContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(InstancePropertyOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instancePropertyOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstancePropertyOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterInstancePropertyOverride) {
            listener.enterInstancePropertyOverride(this);
        }
    };
    // @Override
    InstancePropertyOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitInstancePropertyOverride) {
            listener.exitInstancePropertyOverride(this);
        }
    };
    // @Override
    InstancePropertyOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitInstancePropertyOverride) {
            return visitor.visitInstancePropertyOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstancePropertyOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstancePropertyOverrideContext = InstancePropertyOverrideContext;
var InstanceRefContext = /** @class */ (function (_super) {
    __extends(InstanceRefContext, _super);
    function InstanceRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceRefContext.prototype.instanceNameRef = function () {
        return this.getRuleContext(0, InstanceNameRefContext);
    };
    Object.defineProperty(InstanceRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceRefContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceRef) {
            listener.enterInstanceRef(this);
        }
    };
    // @Override
    InstanceRefContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceRef) {
            listener.exitInstanceRef(this);
        }
    };
    // @Override
    InstanceRefContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceRef) {
            return visitor.visitInstanceRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceRefContext = InstanceRefContext;
var InstanceWidthContext = /** @class */ (function (_super) {
    __extends(InstanceWidthContext, _super);
    function InstanceWidthContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceWidthContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(InstanceWidthContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceWidth; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceWidthContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceWidth) {
            listener.enterInstanceWidth(this);
        }
    };
    // @Override
    InstanceWidthContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceWidth) {
            listener.exitInstanceWidth(this);
        }
    };
    // @Override
    InstanceWidthContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceWidth) {
            return visitor.visitInstanceWidth(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceWidthContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceWidthContext = InstanceWidthContext;
var InstanceWidthDisplayContext = /** @class */ (function (_super) {
    __extends(InstanceWidthDisplayContext, _super);
    function InstanceWidthDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InstanceWidthDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    InstanceWidthDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    InstanceWidthDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(InstanceWidthDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_instanceWidthDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InstanceWidthDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterInstanceWidthDisplay) {
            listener.enterInstanceWidthDisplay(this);
        }
    };
    // @Override
    InstanceWidthDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitInstanceWidthDisplay) {
            listener.exitInstanceWidthDisplay(this);
        }
    };
    // @Override
    InstanceWidthDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitInstanceWidthDisplay) {
            return visitor.visitInstanceWidthDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InstanceWidthDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InstanceWidthDisplayContext = InstanceWidthDisplayContext;
var IntegerContext = /** @class */ (function (_super) {
    __extends(IntegerContext, _super);
    function IntegerContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(IntegerContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integer; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerContext.prototype.enterRule = function (listener) {
        if (listener.enterInteger) {
            listener.enterInteger(this);
        }
    };
    // @Override
    IntegerContext.prototype.exitRule = function (listener) {
        if (listener.exitInteger) {
            listener.exitInteger(this);
        }
    };
    // @Override
    IntegerContext.prototype.accept = function (visitor) {
        if (visitor.visitInteger) {
            return visitor.visitInteger(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerContext = IntegerContext;
var IntegerConstantContext = /** @class */ (function (_super) {
    __extends(IntegerConstantContext, _super);
    function IntegerConstantContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerConstantContext.prototype.constantNameDef = function () {
        return this.getRuleContext(0, ConstantNameDefContext);
    };
    IntegerConstantContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(IntegerConstantContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerConstant; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerConstantContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerConstant) {
            listener.enterIntegerConstant(this);
        }
    };
    // @Override
    IntegerConstantContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerConstant) {
            listener.exitIntegerConstant(this);
        }
    };
    // @Override
    IntegerConstantContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerConstant) {
            return visitor.visitIntegerConstant(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerConstantContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerConstantContext = IntegerConstantContext;
var IntegerConstantRefContext = /** @class */ (function (_super) {
    __extends(IntegerConstantRefContext, _super);
    function IntegerConstantRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerConstantRefContext.prototype.constantNameRef = function () {
        return this.getRuleContext(0, ConstantNameRefContext);
    };
    Object.defineProperty(IntegerConstantRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerConstantRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerConstantRefContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerConstantRef) {
            listener.enterIntegerConstantRef(this);
        }
    };
    // @Override
    IntegerConstantRefContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerConstantRef) {
            listener.exitIntegerConstantRef(this);
        }
    };
    // @Override
    IntegerConstantRefContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerConstantRef) {
            return visitor.visitIntegerConstantRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerConstantRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerConstantRefContext = IntegerConstantRefContext;
var IntegerEqualContext = /** @class */ (function (_super) {
    __extends(IntegerEqualContext, _super);
    function IntegerEqualContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerEqualContext.prototype.firstIntegerExpression = function () {
        return this.getRuleContext(0, FirstIntegerExpressionContext);
    };
    IntegerEqualContext.prototype.secondIntegerExpression = function () {
        return this.getRuleContext(0, SecondIntegerExpressionContext);
    };
    Object.defineProperty(IntegerEqualContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerEqual; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerEqualContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerEqual) {
            listener.enterIntegerEqual(this);
        }
    };
    // @Override
    IntegerEqualContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerEqual) {
            listener.exitIntegerEqual(this);
        }
    };
    // @Override
    IntegerEqualContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerEqual) {
            return visitor.visitIntegerEqual(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerEqualContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerEqualContext = IntegerEqualContext;
var IntegerExpressionContext = /** @class */ (function (_super) {
    __extends(IntegerExpressionContext, _super);
    function IntegerExpressionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerExpressionContext.prototype.integerParameterRef = function () {
        return this.tryGetRuleContext(0, IntegerParameterRefContext);
    };
    IntegerExpressionContext.prototype.integerToken = function () {
        return this.tryGetRuleContext(0, IntegerTokenContext);
    };
    IntegerExpressionContext.prototype.integerProduct = function () {
        return this.tryGetRuleContext(0, IntegerProductContext);
    };
    IntegerExpressionContext.prototype.integerSubtract = function () {
        return this.tryGetRuleContext(0, IntegerSubtractContext);
    };
    IntegerExpressionContext.prototype.integerSum = function () {
        return this.tryGetRuleContext(0, IntegerSumContext);
    };
    IntegerExpressionContext.prototype.integerRemainder = function () {
        return this.tryGetRuleContext(0, IntegerRemainderContext);
    };
    IntegerExpressionContext.prototype.integerQuotient = function () {
        return this.tryGetRuleContext(0, IntegerQuotientContext);
    };
    IntegerExpressionContext.prototype.stringLength = function () {
        return this.tryGetRuleContext(0, StringLengthContext);
    };
    IntegerExpressionContext.prototype.integerConstantRef = function () {
        return this.tryGetRuleContext(0, IntegerConstantRefContext);
    };
    IntegerExpressionContext.prototype.forFrameIndexRef = function () {
        return this.tryGetRuleContext(0, ForFrameIndexRefContext);
    };
    IntegerExpressionContext.prototype.portIndexValue = function () {
        return this.tryGetRuleContext(0, PortIndexValueContext);
    };
    IntegerExpressionContext.prototype.signalIndexValue = function () {
        return this.tryGetRuleContext(0, SignalIndexValueContext);
    };
    IntegerExpressionContext.prototype.absolute = function () {
        return this.tryGetRuleContext(0, AbsoluteContext);
    };
    IntegerExpressionContext.prototype.instanceIndexValue = function () {
        return this.tryGetRuleContext(0, InstanceIndexValueContext);
    };
    Object.defineProperty(IntegerExpressionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerExpression; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerExpressionContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerExpression) {
            listener.enterIntegerExpression(this);
        }
    };
    // @Override
    IntegerExpressionContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerExpression) {
            listener.exitIntegerExpression(this);
        }
    };
    // @Override
    IntegerExpressionContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerExpression) {
            return visitor.visitIntegerExpression(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerExpressionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerExpressionContext = IntegerExpressionContext;
var IntegerParameterContext = /** @class */ (function (_super) {
    __extends(IntegerParameterContext, _super);
    function IntegerParameterContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerParameterContext.prototype.parameterNameDef = function () {
        return this.getRuleContext(0, ParameterNameDefContext);
    };
    IntegerParameterContext.prototype.integer = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerContext);
        }
        else {
            return this.getRuleContext(i, IntegerContext);
        }
    };
    IntegerParameterContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    Object.defineProperty(IntegerParameterContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerParameter; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerParameterContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerParameter) {
            listener.enterIntegerParameter(this);
        }
    };
    // @Override
    IntegerParameterContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerParameter) {
            listener.exitIntegerParameter(this);
        }
    };
    // @Override
    IntegerParameterContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerParameter) {
            return visitor.visitIntegerParameter(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerParameterContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerParameterContext = IntegerParameterContext;
var IntegerParameterAssignContext = /** @class */ (function (_super) {
    __extends(IntegerParameterAssignContext, _super);
    function IntegerParameterAssignContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerParameterAssignContext.prototype.parameterNameRef = function () {
        return this.getRuleContext(0, ParameterNameRefContext);
    };
    IntegerParameterAssignContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(IntegerParameterAssignContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerParameterAssign; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerParameterAssignContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerParameterAssign) {
            listener.enterIntegerParameterAssign(this);
        }
    };
    // @Override
    IntegerParameterAssignContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerParameterAssign) {
            listener.exitIntegerParameterAssign(this);
        }
    };
    // @Override
    IntegerParameterAssignContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerParameterAssign) {
            return visitor.visitIntegerParameterAssign(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerParameterAssignContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerParameterAssignContext = IntegerParameterAssignContext;
var IntegerParameterRefContext = /** @class */ (function (_super) {
    __extends(IntegerParameterRefContext, _super);
    function IntegerParameterRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerParameterRefContext.prototype.parameterNameRef = function () {
        return this.getRuleContext(0, ParameterNameRefContext);
    };
    Object.defineProperty(IntegerParameterRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerParameterRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerParameterRefContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerParameterRef) {
            listener.enterIntegerParameterRef(this);
        }
    };
    // @Override
    IntegerParameterRefContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerParameterRef) {
            listener.exitIntegerParameterRef(this);
        }
    };
    // @Override
    IntegerParameterRefContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerParameterRef) {
            return visitor.visitIntegerParameterRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerParameterRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerParameterRefContext = IntegerParameterRefContext;
var IntegerProductContext = /** @class */ (function (_super) {
    __extends(IntegerProductContext, _super);
    function IntegerProductContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerProductContext.prototype.integerExpression = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerExpressionContext);
        }
        else {
            return this.getRuleContext(i, IntegerExpressionContext);
        }
    };
    Object.defineProperty(IntegerProductContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerProduct; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerProductContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerProduct) {
            listener.enterIntegerProduct(this);
        }
    };
    // @Override
    IntegerProductContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerProduct) {
            listener.exitIntegerProduct(this);
        }
    };
    // @Override
    IntegerProductContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerProduct) {
            return visitor.visitIntegerProduct(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerProductContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerProductContext = IntegerProductContext;
var IntegerQuotientContext = /** @class */ (function (_super) {
    __extends(IntegerQuotientContext, _super);
    function IntegerQuotientContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerQuotientContext.prototype.dividend = function () {
        return this.getRuleContext(0, DividendContext);
    };
    IntegerQuotientContext.prototype.divisor = function () {
        return this.getRuleContext(0, DivisorContext);
    };
    Object.defineProperty(IntegerQuotientContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerQuotient; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerQuotientContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerQuotient) {
            listener.enterIntegerQuotient(this);
        }
    };
    // @Override
    IntegerQuotientContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerQuotient) {
            listener.exitIntegerQuotient(this);
        }
    };
    // @Override
    IntegerQuotientContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerQuotient) {
            return visitor.visitIntegerQuotient(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerQuotientContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerQuotientContext = IntegerQuotientContext;
var IntegerRemainderContext = /** @class */ (function (_super) {
    __extends(IntegerRemainderContext, _super);
    function IntegerRemainderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerRemainderContext.prototype.dividend = function () {
        return this.getRuleContext(0, DividendContext);
    };
    IntegerRemainderContext.prototype.divisor = function () {
        return this.getRuleContext(0, DivisorContext);
    };
    Object.defineProperty(IntegerRemainderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerRemainder; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerRemainderContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerRemainder) {
            listener.enterIntegerRemainder(this);
        }
    };
    // @Override
    IntegerRemainderContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerRemainder) {
            listener.exitIntegerRemainder(this);
        }
    };
    // @Override
    IntegerRemainderContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerRemainder) {
            return visitor.visitIntegerRemainder(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerRemainderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerRemainderContext = IntegerRemainderContext;
var IntegerSubtractContext = /** @class */ (function (_super) {
    __extends(IntegerSubtractContext, _super);
    function IntegerSubtractContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerSubtractContext.prototype.minuend = function () {
        return this.getRuleContext(0, MinuendContext);
    };
    IntegerSubtractContext.prototype.subtrahend = function () {
        return this.getRuleContext(0, SubtrahendContext);
    };
    Object.defineProperty(IntegerSubtractContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerSubtract; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerSubtractContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerSubtract) {
            listener.enterIntegerSubtract(this);
        }
    };
    // @Override
    IntegerSubtractContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerSubtract) {
            listener.exitIntegerSubtract(this);
        }
    };
    // @Override
    IntegerSubtractContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerSubtract) {
            return visitor.visitIntegerSubtract(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerSubtractContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerSubtractContext = IntegerSubtractContext;
var IntegerSumContext = /** @class */ (function (_super) {
    __extends(IntegerSumContext, _super);
    function IntegerSumContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerSumContext.prototype.integerExpression = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerExpressionContext);
        }
        else {
            return this.getRuleContext(i, IntegerExpressionContext);
        }
    };
    Object.defineProperty(IntegerSumContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerSum; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerSumContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerSum) {
            listener.enterIntegerSum(this);
        }
    };
    // @Override
    IntegerSumContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerSum) {
            listener.exitIntegerSum(this);
        }
    };
    // @Override
    IntegerSumContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerSum) {
            return visitor.visitIntegerSum(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerSumContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerSumContext = IntegerSumContext;
var IntegerValueContext = /** @class */ (function (_super) {
    __extends(IntegerValueContext, _super);
    function IntegerValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerValueContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(IntegerValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerValueContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerValue) {
            listener.enterIntegerValue(this);
        }
    };
    // @Override
    IntegerValueContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerValue) {
            listener.exitIntegerValue(this);
        }
    };
    // @Override
    IntegerValueContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerValue) {
            return visitor.visitIntegerValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerValueContext = IntegerValueContext;
var InterconnectAnnotateContext = /** @class */ (function (_super) {
    __extends(InterconnectAnnotateContext, _super);
    function InterconnectAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectAnnotateContext.prototype.extendInterconnectDef = function () {
        return this.getRuleContext(0, ExtendInterconnectDefContext);
    };
    InterconnectAnnotateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    InterconnectAnnotateContext.prototype.interconnectAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectAnnotateContext);
        }
        else {
            return this.getRuleContext(i, InterconnectAnnotateContext);
        }
    };
    InterconnectAnnotateContext.prototype.criticality = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CriticalityContext);
        }
        else {
            return this.getRuleContext(i, CriticalityContext);
        }
    };
    InterconnectAnnotateContext.prototype.interconnectDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectDelayContext);
        }
        else {
            return this.getRuleContext(i, InterconnectDelayContext);
        }
    };
    InterconnectAnnotateContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    InterconnectAnnotateContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(InterconnectAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectAnnotate) {
            listener.enterInterconnectAnnotate(this);
        }
    };
    // @Override
    InterconnectAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectAnnotate) {
            listener.exitInterconnectAnnotate(this);
        }
    };
    // @Override
    InterconnectAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectAnnotate) {
            return visitor.visitInterconnectAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectAnnotateContext = InterconnectAnnotateContext;
var InterconnectAttachedTextContext = /** @class */ (function (_super) {
    __extends(InterconnectAttachedTextContext, _super);
    function InterconnectAttachedTextContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectAttachedTextContext.prototype.attachmentPoint = function () {
        return this.getRuleContext(0, AttachmentPointContext);
    };
    InterconnectAttachedTextContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    InterconnectAttachedTextContext.prototype.connectivityTagGeneratorDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityTagGeneratorDisplayContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityTagGeneratorDisplayContext);
        }
    };
    InterconnectAttachedTextContext.prototype.criticalityDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CriticalityDisplayContext);
        }
        else {
            return this.getRuleContext(i, CriticalityDisplayContext);
        }
    };
    InterconnectAttachedTextContext.prototype.interconnectDelayDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectDelayDisplayContext);
        }
        else {
            return this.getRuleContext(i, InterconnectDelayDisplayContext);
        }
    };
    InterconnectAttachedTextContext.prototype.interconnectNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, InterconnectNameDisplayContext);
        }
    };
    InterconnectAttachedTextContext.prototype.interconnectPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, InterconnectPropertyDisplayContext);
        }
    };
    Object.defineProperty(InterconnectAttachedTextContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectAttachedText; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectAttachedTextContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectAttachedText) {
            listener.enterInterconnectAttachedText(this);
        }
    };
    // @Override
    InterconnectAttachedTextContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectAttachedText) {
            listener.exitInterconnectAttachedText(this);
        }
    };
    // @Override
    InterconnectAttachedTextContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectAttachedText) {
            return visitor.visitInterconnectAttachedText(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectAttachedTextContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectAttachedTextContext = InterconnectAttachedTextContext;
var InterconnectDelayContext = /** @class */ (function (_super) {
    __extends(InterconnectDelayContext, _super);
    function InterconnectDelayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectDelayContext.prototype.interconnectDelayNameDef = function () {
        return this.getRuleContext(0, InterconnectDelayNameDefContext);
    };
    InterconnectDelayContext.prototype.derivation = function () {
        return this.getRuleContext(0, DerivationContext);
    };
    InterconnectDelayContext.prototype.delay = function () {
        return this.getRuleContext(0, DelayContext);
    };
    InterconnectDelayContext.prototype.becomes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BecomesContext);
        }
        else {
            return this.getRuleContext(i, BecomesContext);
        }
    };
    InterconnectDelayContext.prototype.transition = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TransitionContext);
        }
        else {
            return this.getRuleContext(i, TransitionContext);
        }
    };
    Object.defineProperty(InterconnectDelayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectDelay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectDelayContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectDelay) {
            listener.enterInterconnectDelay(this);
        }
    };
    // @Override
    InterconnectDelayContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectDelay) {
            listener.exitInterconnectDelay(this);
        }
    };
    // @Override
    InterconnectDelayContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectDelay) {
            return visitor.visitInterconnectDelay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectDelayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectDelayContext = InterconnectDelayContext;
var InterconnectDelayDisplayContext = /** @class */ (function (_super) {
    __extends(InterconnectDelayDisplayContext, _super);
    function InterconnectDelayDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectDelayDisplayContext.prototype.interconnectDelayNameRef = function () {
        return this.getRuleContext(0, InterconnectDelayNameRefContext);
    };
    InterconnectDelayDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    Object.defineProperty(InterconnectDelayDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectDelayDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectDelayDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectDelayDisplay) {
            listener.enterInterconnectDelayDisplay(this);
        }
    };
    // @Override
    InterconnectDelayDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectDelayDisplay) {
            listener.exitInterconnectDelayDisplay(this);
        }
    };
    // @Override
    InterconnectDelayDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectDelayDisplay) {
            return visitor.visitInterconnectDelayDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectDelayDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectDelayDisplayContext = InterconnectDelayDisplayContext;
var InterconnectDelayNameDefContext = /** @class */ (function (_super) {
    __extends(InterconnectDelayNameDefContext, _super);
    function InterconnectDelayNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectDelayNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(InterconnectDelayNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectDelayNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectDelayNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectDelayNameDef) {
            listener.enterInterconnectDelayNameDef(this);
        }
    };
    // @Override
    InterconnectDelayNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectDelayNameDef) {
            listener.exitInterconnectDelayNameDef(this);
        }
    };
    // @Override
    InterconnectDelayNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectDelayNameDef) {
            return visitor.visitInterconnectDelayNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectDelayNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectDelayNameDefContext = InterconnectDelayNameDefContext;
var InterconnectDelayNameRefContext = /** @class */ (function (_super) {
    __extends(InterconnectDelayNameRefContext, _super);
    function InterconnectDelayNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectDelayNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(InterconnectDelayNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectDelayNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectDelayNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectDelayNameRef) {
            listener.enterInterconnectDelayNameRef(this);
        }
    };
    // @Override
    InterconnectDelayNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectDelayNameRef) {
            listener.exitInterconnectDelayNameRef(this);
        }
    };
    // @Override
    InterconnectDelayNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectDelayNameRef) {
            return visitor.visitInterconnectDelayNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectDelayNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectDelayNameRefContext = InterconnectDelayNameRefContext;
var InterconnectHeaderContext = /** @class */ (function (_super) {
    __extends(InterconnectHeaderContext, _super);
    function InterconnectHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectHeaderContext.prototype.criticality = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CriticalityContext);
        }
        else {
            return this.getRuleContext(i, CriticalityContext);
        }
    };
    InterconnectHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    InterconnectHeaderContext.prototype.interconnectDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectDelayContext);
        }
        else {
            return this.getRuleContext(i, InterconnectDelayContext);
        }
    };
    InterconnectHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    InterconnectHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    Object.defineProperty(InterconnectHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectHeader) {
            listener.enterInterconnectHeader(this);
        }
    };
    // @Override
    InterconnectHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectHeader) {
            listener.exitInterconnectHeader(this);
        }
    };
    // @Override
    InterconnectHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectHeader) {
            return visitor.visitInterconnectHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectHeaderContext = InterconnectHeaderContext;
var InterconnectNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(InterconnectNameCaseSensitiveContext, _super);
    function InterconnectNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(InterconnectNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectNameCaseSensitive) {
            listener.enterInterconnectNameCaseSensitive(this);
        }
    };
    // @Override
    InterconnectNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectNameCaseSensitive) {
            listener.exitInterconnectNameCaseSensitive(this);
        }
    };
    // @Override
    InterconnectNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectNameCaseSensitive) {
            return visitor.visitInterconnectNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectNameCaseSensitiveContext = InterconnectNameCaseSensitiveContext;
var InterconnectNameDefContext = /** @class */ (function (_super) {
    __extends(InterconnectNameDefContext, _super);
    function InterconnectNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(InterconnectNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectNameDef) {
            listener.enterInterconnectNameDef(this);
        }
    };
    // @Override
    InterconnectNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectNameDef) {
            listener.exitInterconnectNameDef(this);
        }
    };
    // @Override
    InterconnectNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectNameDef) {
            return visitor.visitInterconnectNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectNameDefContext = InterconnectNameDefContext;
var InterconnectNameDisplayContext = /** @class */ (function (_super) {
    __extends(InterconnectNameDisplayContext, _super);
    function InterconnectNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectNameDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    InterconnectNameDisplayContext.prototype.displayNameOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameOverrideContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameOverrideContext);
        }
    };
    Object.defineProperty(InterconnectNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectNameDisplay) {
            listener.enterInterconnectNameDisplay(this);
        }
    };
    // @Override
    InterconnectNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectNameDisplay) {
            listener.exitInterconnectNameDisplay(this);
        }
    };
    // @Override
    InterconnectNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectNameDisplay) {
            return visitor.visitInterconnectNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectNameDisplayContext = InterconnectNameDisplayContext;
var InterconnectNameRefContext = /** @class */ (function (_super) {
    __extends(InterconnectNameRefContext, _super);
    function InterconnectNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(InterconnectNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectNameRef) {
            listener.enterInterconnectNameRef(this);
        }
    };
    // @Override
    InterconnectNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectNameRef) {
            listener.exitInterconnectNameRef(this);
        }
    };
    // @Override
    InterconnectNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectNameRef) {
            return visitor.visitInterconnectNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectNameRefContext = InterconnectNameRefContext;
var InterconnectPropertyDisplayContext = /** @class */ (function (_super) {
    __extends(InterconnectPropertyDisplayContext, _super);
    function InterconnectPropertyDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectPropertyDisplayContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    InterconnectPropertyDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    InterconnectPropertyDisplayContext.prototype.propertyNameDisplay = function () {
        return this.tryGetRuleContext(0, PropertyNameDisplayContext);
    };
    Object.defineProperty(InterconnectPropertyDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectPropertyDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectPropertyDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectPropertyDisplay) {
            listener.enterInterconnectPropertyDisplay(this);
        }
    };
    // @Override
    InterconnectPropertyDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectPropertyDisplay) {
            listener.exitInterconnectPropertyDisplay(this);
        }
    };
    // @Override
    InterconnectPropertyDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectPropertyDisplay) {
            return visitor.visitInterconnectPropertyDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectPropertyDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectPropertyDisplayContext = InterconnectPropertyDisplayContext;
var InterconnectRefContext = /** @class */ (function (_super) {
    __extends(InterconnectRefContext, _super);
    function InterconnectRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectRefContext.prototype.interconnectNameRef = function () {
        return this.getRuleContext(0, InterconnectNameRefContext);
    };
    InterconnectRefContext.prototype.pageRef = function () {
        return this.tryGetRuleContext(0, PageRefContext);
    };
    Object.defineProperty(InterconnectRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectRefContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectRef) {
            listener.enterInterconnectRef(this);
        }
    };
    // @Override
    InterconnectRefContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectRef) {
            listener.exitInterconnectRef(this);
        }
    };
    // @Override
    InterconnectRefContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectRef) {
            return visitor.visitInterconnectRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectRefContext = InterconnectRefContext;
var InterconnectSetContext = /** @class */ (function (_super) {
    __extends(InterconnectSetContext, _super);
    function InterconnectSetContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterconnectSetContext.prototype.interconnectRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectRefContext);
        }
        else {
            return this.getRuleContext(i, InterconnectRefContext);
        }
    };
    Object.defineProperty(InterconnectSetContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interconnectSet; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterconnectSetContext.prototype.enterRule = function (listener) {
        if (listener.enterInterconnectSet) {
            listener.enterInterconnectSet(this);
        }
    };
    // @Override
    InterconnectSetContext.prototype.exitRule = function (listener) {
        if (listener.exitInterconnectSet) {
            listener.exitInterconnectSet(this);
        }
    };
    // @Override
    InterconnectSetContext.prototype.accept = function (visitor) {
        if (visitor.visitInterconnectSet) {
            return visitor.visitInterconnectSet(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterconnectSetContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterconnectSetContext = InterconnectSetContext;
var EinterfaceContext = /** @class */ (function (_super) {
    __extends(EinterfaceContext, _super);
    function EinterfaceContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    EinterfaceContext.prototype.interfaceUnits = function () {
        return this.getRuleContext(0, InterfaceUnitsContext);
    };
    EinterfaceContext.prototype.designator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorContext);
        }
        else {
            return this.getRuleContext(i, DesignatorContext);
        }
    };
    EinterfaceContext.prototype.booleanParameter = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BooleanParameterContext);
        }
        else {
            return this.getRuleContext(i, BooleanParameterContext);
        }
    };
    EinterfaceContext.prototype.integerParameter = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerParameterContext);
        }
        else {
            return this.getRuleContext(i, IntegerParameterContext);
        }
    };
    EinterfaceContext.prototype.interfaceJoined = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterfaceJoinedContext);
        }
        else {
            return this.getRuleContext(i, InterfaceJoinedContext);
        }
    };
    EinterfaceContext.prototype.mustJoin = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(MustJoinContext);
        }
        else {
            return this.getRuleContext(i, MustJoinContext);
        }
    };
    EinterfaceContext.prototype.numberParameter = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NumberParameterContext);
        }
        else {
            return this.getRuleContext(i, NumberParameterContext);
        }
    };
    EinterfaceContext.prototype.permutable = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PermutableContext);
        }
        else {
            return this.getRuleContext(i, PermutableContext);
        }
    };
    EinterfaceContext.prototype.port = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortContext);
        }
        else {
            return this.getRuleContext(i, PortContext);
        }
    };
    EinterfaceContext.prototype.portBundle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortBundleContext);
        }
        else {
            return this.getRuleContext(i, PortBundleContext);
        }
    };
    EinterfaceContext.prototype.stringParameter = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringParameterContext);
        }
        else {
            return this.getRuleContext(i, StringParameterContext);
        }
    };
    EinterfaceContext.prototype.timing = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TimingContext);
        }
        else {
            return this.getRuleContext(i, TimingContext);
        }
    };
    EinterfaceContext.prototype.weakJoined = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(WeakJoinedContext);
        }
        else {
            return this.getRuleContext(i, WeakJoinedContext);
        }
    };
    Object.defineProperty(EinterfaceContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_einterface; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EinterfaceContext.prototype.enterRule = function (listener) {
        if (listener.enterEinterface) {
            listener.enterEinterface(this);
        }
    };
    // @Override
    EinterfaceContext.prototype.exitRule = function (listener) {
        if (listener.exitEinterface) {
            listener.exitEinterface(this);
        }
    };
    // @Override
    EinterfaceContext.prototype.accept = function (visitor) {
        if (visitor.visitEinterface) {
            return visitor.visitEinterface(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EinterfaceContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EinterfaceContext = EinterfaceContext;
var InterfaceJoinedContext = /** @class */ (function (_super) {
    __extends(InterfaceJoinedContext, _super);
    function InterfaceJoinedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterfaceJoinedContext.prototype.portRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortRefContext);
        }
        else {
            return this.getRuleContext(i, PortRefContext);
        }
    };
    Object.defineProperty(InterfaceJoinedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interfaceJoined; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterfaceJoinedContext.prototype.enterRule = function (listener) {
        if (listener.enterInterfaceJoined) {
            listener.enterInterfaceJoined(this);
        }
    };
    // @Override
    InterfaceJoinedContext.prototype.exitRule = function (listener) {
        if (listener.exitInterfaceJoined) {
            listener.exitInterfaceJoined(this);
        }
    };
    // @Override
    InterfaceJoinedContext.prototype.accept = function (visitor) {
        if (visitor.visitInterfaceJoined) {
            return visitor.visitInterfaceJoined(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterfaceJoinedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterfaceJoinedContext = InterfaceJoinedContext;
var InterfaceUnitsContext = /** @class */ (function (_super) {
    __extends(InterfaceUnitsContext, _super);
    function InterfaceUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    InterfaceUnitsContext.prototype.setCapacitance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetCapacitanceContext);
        }
        else {
            return this.getRuleContext(i, SetCapacitanceContext);
        }
    };
    InterfaceUnitsContext.prototype.setTime = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetTimeContext);
        }
        else {
            return this.getRuleContext(i, SetTimeContext);
        }
    };
    Object.defineProperty(InterfaceUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_interfaceUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    InterfaceUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterInterfaceUnits) {
            listener.enterInterfaceUnits(this);
        }
    };
    // @Override
    InterfaceUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitInterfaceUnits) {
            listener.exitInterfaceUnits(this);
        }
    };
    // @Override
    InterfaceUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitInterfaceUnits) {
            return visitor.visitInterfaceUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return InterfaceUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.InterfaceUnitsContext = InterfaceUnitsContext;
var Iso8859Context = /** @class */ (function (_super) {
    __extends(Iso8859Context, _super);
    function Iso8859Context(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Iso8859Context.prototype.iso8859Part = function () {
        return this.getRuleContext(0, Iso8859PartContext);
    };
    Object.defineProperty(Iso8859Context.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_iso8859; },
        enumerable: true,
        configurable: true
    });
    // @Override
    Iso8859Context.prototype.enterRule = function (listener) {
        if (listener.enterIso8859) {
            listener.enterIso8859(this);
        }
    };
    // @Override
    Iso8859Context.prototype.exitRule = function (listener) {
        if (listener.exitIso8859) {
            listener.exitIso8859(this);
        }
    };
    // @Override
    Iso8859Context.prototype.accept = function (visitor) {
        if (visitor.visitIso8859) {
            return visitor.visitIso8859(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return Iso8859Context;
}(ParserRuleContext_1.ParserRuleContext));
exports.Iso8859Context = Iso8859Context;
var Iso8859PartContext = /** @class */ (function (_super) {
    __extends(Iso8859PartContext, _super);
    function Iso8859PartContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Iso8859PartContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(Iso8859PartContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_iso8859Part; },
        enumerable: true,
        configurable: true
    });
    // @Override
    Iso8859PartContext.prototype.enterRule = function (listener) {
        if (listener.enterIso8859Part) {
            listener.enterIso8859Part(this);
        }
    };
    // @Override
    Iso8859PartContext.prototype.exitRule = function (listener) {
        if (listener.exitIso8859Part) {
            listener.exitIso8859Part(this);
        }
    };
    // @Override
    Iso8859PartContext.prototype.accept = function (visitor) {
        if (visitor.visitIso8859Part) {
            return visitor.visitIso8859Part(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return Iso8859PartContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.Iso8859PartContext = Iso8859PartContext;
var IsolatedContext = /** @class */ (function (_super) {
    __extends(IsolatedContext, _super);
    function IsolatedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(IsolatedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_isolated; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IsolatedContext.prototype.enterRule = function (listener) {
        if (listener.enterIsolated) {
            listener.enterIsolated(this);
        }
    };
    // @Override
    IsolatedContext.prototype.exitRule = function (listener) {
        if (listener.exitIsolated) {
            listener.exitIsolated(this);
        }
    };
    // @Override
    IsolatedContext.prototype.accept = function (visitor) {
        if (visitor.visitIsolated) {
            return visitor.visitIsolated(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IsolatedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IsolatedContext = IsolatedContext;
var IssueContext = /** @class */ (function (_super) {
    __extends(IssueContext, _super);
    function IssueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IssueContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(IssueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_issue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IssueContext.prototype.enterRule = function (listener) {
        if (listener.enterIssue) {
            listener.enterIssue(this);
        }
    };
    // @Override
    IssueContext.prototype.exitRule = function (listener) {
        if (listener.exitIssue) {
            listener.exitIssue(this);
        }
    };
    // @Override
    IssueContext.prototype.accept = function (visitor) {
        if (visitor.visitIssue) {
            return visitor.visitIssue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IssueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IssueContext = IssueContext;
var ItalicStyleContext = /** @class */ (function (_super) {
    __extends(ItalicStyleContext, _super);
    function ItalicStyleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(ItalicStyleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_italicStyle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ItalicStyleContext.prototype.enterRule = function (listener) {
        if (listener.enterItalicStyle) {
            listener.enterItalicStyle(this);
        }
    };
    // @Override
    ItalicStyleContext.prototype.exitRule = function (listener) {
        if (listener.exitItalicStyle) {
            listener.exitItalicStyle(this);
        }
    };
    // @Override
    ItalicStyleContext.prototype.accept = function (visitor) {
        if (visitor.visitItalicStyle) {
            return visitor.visitItalicStyle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ItalicStyleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ItalicStyleContext = ItalicStyleContext;
var Jisx0201Context = /** @class */ (function (_super) {
    __extends(Jisx0201Context, _super);
    function Jisx0201Context(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(Jisx0201Context.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_jisx0201; },
        enumerable: true,
        configurable: true
    });
    // @Override
    Jisx0201Context.prototype.enterRule = function (listener) {
        if (listener.enterJisx0201) {
            listener.enterJisx0201(this);
        }
    };
    // @Override
    Jisx0201Context.prototype.exitRule = function (listener) {
        if (listener.exitJisx0201) {
            listener.exitJisx0201(this);
        }
    };
    // @Override
    Jisx0201Context.prototype.accept = function (visitor) {
        if (visitor.visitJisx0201) {
            return visitor.visitJisx0201(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return Jisx0201Context;
}(ParserRuleContext_1.ParserRuleContext));
exports.Jisx0201Context = Jisx0201Context;
var Jisx0208Context = /** @class */ (function (_super) {
    __extends(Jisx0208Context, _super);
    function Jisx0208Context(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(Jisx0208Context.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_jisx0208; },
        enumerable: true,
        configurable: true
    });
    // @Override
    Jisx0208Context.prototype.enterRule = function (listener) {
        if (listener.enterJisx0208) {
            listener.enterJisx0208(this);
        }
    };
    // @Override
    Jisx0208Context.prototype.exitRule = function (listener) {
        if (listener.exitJisx0208) {
            listener.exitJisx0208(this);
        }
    };
    // @Override
    Jisx0208Context.prototype.accept = function (visitor) {
        if (visitor.visitJisx0208) {
            return visitor.visitJisx0208(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return Jisx0208Context;
}(ParserRuleContext_1.ParserRuleContext));
exports.Jisx0208Context = Jisx0208Context;
var JoinedAsSignalContext = /** @class */ (function (_super) {
    __extends(JoinedAsSignalContext, _super);
    function JoinedAsSignalContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(JoinedAsSignalContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_joinedAsSignal; },
        enumerable: true,
        configurable: true
    });
    // @Override
    JoinedAsSignalContext.prototype.enterRule = function (listener) {
        if (listener.enterJoinedAsSignal) {
            listener.enterJoinedAsSignal(this);
        }
    };
    // @Override
    JoinedAsSignalContext.prototype.exitRule = function (listener) {
        if (listener.exitJoinedAsSignal) {
            listener.exitJoinedAsSignal(this);
        }
    };
    // @Override
    JoinedAsSignalContext.prototype.accept = function (visitor) {
        if (visitor.visitJoinedAsSignal) {
            return visitor.visitJoinedAsSignal(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return JoinedAsSignalContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.JoinedAsSignalContext = JoinedAsSignalContext;
var JouleContext = /** @class */ (function (_super) {
    __extends(JouleContext, _super);
    function JouleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    JouleContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(JouleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_joule; },
        enumerable: true,
        configurable: true
    });
    // @Override
    JouleContext.prototype.enterRule = function (listener) {
        if (listener.enterJoule) {
            listener.enterJoule(this);
        }
    };
    // @Override
    JouleContext.prototype.exitRule = function (listener) {
        if (listener.exitJoule) {
            listener.exitJoule(this);
        }
    };
    // @Override
    JouleContext.prototype.accept = function (visitor) {
        if (visitor.visitJoule) {
            return visitor.visitJoule(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return JouleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.JouleContext = JouleContext;
var K0KeywordLevelContext = /** @class */ (function (_super) {
    __extends(K0KeywordLevelContext, _super);
    function K0KeywordLevelContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(K0KeywordLevelContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k0KeywordLevel; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K0KeywordLevelContext.prototype.enterRule = function (listener) {
        if (listener.enterK0KeywordLevel) {
            listener.enterK0KeywordLevel(this);
        }
    };
    // @Override
    K0KeywordLevelContext.prototype.exitRule = function (listener) {
        if (listener.exitK0KeywordLevel) {
            listener.exitK0KeywordLevel(this);
        }
    };
    // @Override
    K0KeywordLevelContext.prototype.accept = function (visitor) {
        if (visitor.visitK0KeywordLevel) {
            return visitor.visitK0KeywordLevel(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K0KeywordLevelContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K0KeywordLevelContext = K0KeywordLevelContext;
var K1KeywordAliasContext = /** @class */ (function (_super) {
    __extends(K1KeywordAliasContext, _super);
    function K1KeywordAliasContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K1KeywordAliasContext.prototype.k1KeywordNameDef = function () {
        return this.getRuleContext(0, K1KeywordNameDefContext);
    };
    K1KeywordAliasContext.prototype.k1KeywordNameRef = function () {
        return this.getRuleContext(0, K1KeywordNameRefContext);
    };
    Object.defineProperty(K1KeywordAliasContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k1KeywordAlias; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K1KeywordAliasContext.prototype.enterRule = function (listener) {
        if (listener.enterK1KeywordAlias) {
            listener.enterK1KeywordAlias(this);
        }
    };
    // @Override
    K1KeywordAliasContext.prototype.exitRule = function (listener) {
        if (listener.exitK1KeywordAlias) {
            listener.exitK1KeywordAlias(this);
        }
    };
    // @Override
    K1KeywordAliasContext.prototype.accept = function (visitor) {
        if (visitor.visitK1KeywordAlias) {
            return visitor.visitK1KeywordAlias(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K1KeywordAliasContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K1KeywordAliasContext = K1KeywordAliasContext;
var K1KeywordLevelContext = /** @class */ (function (_super) {
    __extends(K1KeywordLevelContext, _super);
    function K1KeywordLevelContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K1KeywordLevelContext.prototype.k1KeywordAlias = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K1KeywordAliasContext);
        }
        else {
            return this.getRuleContext(i, K1KeywordAliasContext);
        }
    };
    Object.defineProperty(K1KeywordLevelContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k1KeywordLevel; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K1KeywordLevelContext.prototype.enterRule = function (listener) {
        if (listener.enterK1KeywordLevel) {
            listener.enterK1KeywordLevel(this);
        }
    };
    // @Override
    K1KeywordLevelContext.prototype.exitRule = function (listener) {
        if (listener.exitK1KeywordLevel) {
            listener.exitK1KeywordLevel(this);
        }
    };
    // @Override
    K1KeywordLevelContext.prototype.accept = function (visitor) {
        if (visitor.visitK1KeywordLevel) {
            return visitor.visitK1KeywordLevel(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K1KeywordLevelContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K1KeywordLevelContext = K1KeywordLevelContext;
var K1KeywordNameDefContext = /** @class */ (function (_super) {
    __extends(K1KeywordNameDefContext, _super);
    function K1KeywordNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K1KeywordNameDefContext.prototype.IDENTIFIER = function () { return this.getToken(EDIF300Parser.IDENTIFIER, 0); };
    Object.defineProperty(K1KeywordNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k1KeywordNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K1KeywordNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterK1KeywordNameDef) {
            listener.enterK1KeywordNameDef(this);
        }
    };
    // @Override
    K1KeywordNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitK1KeywordNameDef) {
            listener.exitK1KeywordNameDef(this);
        }
    };
    // @Override
    K1KeywordNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitK1KeywordNameDef) {
            return visitor.visitK1KeywordNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K1KeywordNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K1KeywordNameDefContext = K1KeywordNameDefContext;
var K1KeywordNameRefContext = /** @class */ (function (_super) {
    __extends(K1KeywordNameRefContext, _super);
    function K1KeywordNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K1KeywordNameRefContext.prototype.IDENTIFIER = function () { return this.getToken(EDIF300Parser.IDENTIFIER, 0); };
    Object.defineProperty(K1KeywordNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k1KeywordNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K1KeywordNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterK1KeywordNameRef) {
            listener.enterK1KeywordNameRef(this);
        }
    };
    // @Override
    K1KeywordNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitK1KeywordNameRef) {
            listener.exitK1KeywordNameRef(this);
        }
    };
    // @Override
    K1KeywordNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitK1KeywordNameRef) {
            return visitor.visitK1KeywordNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K1KeywordNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K1KeywordNameRefContext = K1KeywordNameRefContext;
var K2ActualContext = /** @class */ (function (_super) {
    __extends(K2ActualContext, _super);
    function K2ActualContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2ActualContext.prototype.k2FormalNameRef = function () {
        return this.getRuleContext(0, K2FormalNameRefContext);
    };
    Object.defineProperty(K2ActualContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2Actual; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2ActualContext.prototype.enterRule = function (listener) {
        if (listener.enterK2Actual) {
            listener.enterK2Actual(this);
        }
    };
    // @Override
    K2ActualContext.prototype.exitRule = function (listener) {
        if (listener.exitK2Actual) {
            listener.exitK2Actual(this);
        }
    };
    // @Override
    K2ActualContext.prototype.accept = function (visitor) {
        if (visitor.visitK2Actual) {
            return visitor.visitK2Actual(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2ActualContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2ActualContext = K2ActualContext;
var K2BuildContext = /** @class */ (function (_super) {
    __extends(K2BuildContext, _super);
    function K2BuildContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2BuildContext.prototype.k1KeywordNameRef = function () {
        return this.getRuleContext(0, K1KeywordNameRefContext);
    };
    K2BuildContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    K2BuildContext.prototype.k2Actual = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2ActualContext);
        }
        else {
            return this.getRuleContext(i, K2ActualContext);
        }
    };
    K2BuildContext.prototype.k2Build = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2BuildContext);
        }
        else {
            return this.getRuleContext(i, K2BuildContext);
        }
    };
    K2BuildContext.prototype.k2Literal = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2LiteralContext);
        }
        else {
            return this.getRuleContext(i, K2LiteralContext);
        }
    };
    Object.defineProperty(K2BuildContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2Build; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2BuildContext.prototype.enterRule = function (listener) {
        if (listener.enterK2Build) {
            listener.enterK2Build(this);
        }
    };
    // @Override
    K2BuildContext.prototype.exitRule = function (listener) {
        if (listener.exitK2Build) {
            listener.exitK2Build(this);
        }
    };
    // @Override
    K2BuildContext.prototype.accept = function (visitor) {
        if (visitor.visitK2Build) {
            return visitor.visitK2Build(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2BuildContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2BuildContext = K2BuildContext;
var K2FormalContext = /** @class */ (function (_super) {
    __extends(K2FormalContext, _super);
    function K2FormalContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2FormalContext.prototype.k2FormalNameDef = function () {
        return this.getRuleContext(0, K2FormalNameDefContext);
    };
    K2FormalContext.prototype.k2Optional = function () {
        return this.tryGetRuleContext(0, K2OptionalContext);
    };
    K2FormalContext.prototype.k2Required = function () {
        return this.tryGetRuleContext(0, K2RequiredContext);
    };
    Object.defineProperty(K2FormalContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2Formal; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2FormalContext.prototype.enterRule = function (listener) {
        if (listener.enterK2Formal) {
            listener.enterK2Formal(this);
        }
    };
    // @Override
    K2FormalContext.prototype.exitRule = function (listener) {
        if (listener.exitK2Formal) {
            listener.exitK2Formal(this);
        }
    };
    // @Override
    K2FormalContext.prototype.accept = function (visitor) {
        if (visitor.visitK2Formal) {
            return visitor.visitK2Formal(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2FormalContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2FormalContext = K2FormalContext;
var K2FormalNameDefContext = /** @class */ (function (_super) {
    __extends(K2FormalNameDefContext, _super);
    function K2FormalNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2FormalNameDefContext.prototype.IDENTIFIER = function () { return this.getToken(EDIF300Parser.IDENTIFIER, 0); };
    Object.defineProperty(K2FormalNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2FormalNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2FormalNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterK2FormalNameDef) {
            listener.enterK2FormalNameDef(this);
        }
    };
    // @Override
    K2FormalNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitK2FormalNameDef) {
            listener.exitK2FormalNameDef(this);
        }
    };
    // @Override
    K2FormalNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitK2FormalNameDef) {
            return visitor.visitK2FormalNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2FormalNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2FormalNameDefContext = K2FormalNameDefContext;
var K2FormalNameRefContext = /** @class */ (function (_super) {
    __extends(K2FormalNameRefContext, _super);
    function K2FormalNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2FormalNameRefContext.prototype.IDENTIFIER = function () { return this.getToken(EDIF300Parser.IDENTIFIER, 0); };
    Object.defineProperty(K2FormalNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2FormalNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2FormalNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterK2FormalNameRef) {
            listener.enterK2FormalNameRef(this);
        }
    };
    // @Override
    K2FormalNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitK2FormalNameRef) {
            listener.exitK2FormalNameRef(this);
        }
    };
    // @Override
    K2FormalNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitK2FormalNameRef) {
            return visitor.visitK2FormalNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2FormalNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2FormalNameRefContext = K2FormalNameRefContext;
var K2GenerateContext = /** @class */ (function (_super) {
    __extends(K2GenerateContext, _super);
    function K2GenerateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2GenerateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    K2GenerateContext.prototype.k2Actual = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2ActualContext);
        }
        else {
            return this.getRuleContext(i, K2ActualContext);
        }
    };
    K2GenerateContext.prototype.k2Build = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2BuildContext);
        }
        else {
            return this.getRuleContext(i, K2BuildContext);
        }
    };
    K2GenerateContext.prototype.k2Literal = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2LiteralContext);
        }
        else {
            return this.getRuleContext(i, K2LiteralContext);
        }
    };
    Object.defineProperty(K2GenerateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2Generate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2GenerateContext.prototype.enterRule = function (listener) {
        if (listener.enterK2Generate) {
            listener.enterK2Generate(this);
        }
    };
    // @Override
    K2GenerateContext.prototype.exitRule = function (listener) {
        if (listener.exitK2Generate) {
            listener.exitK2Generate(this);
        }
    };
    // @Override
    K2GenerateContext.prototype.accept = function (visitor) {
        if (visitor.visitK2Generate) {
            return visitor.visitK2Generate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2GenerateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2GenerateContext = K2GenerateContext;
var K2KeywordDefineContext = /** @class */ (function (_super) {
    __extends(K2KeywordDefineContext, _super);
    function K2KeywordDefineContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2KeywordDefineContext.prototype.k1KeywordNameDef = function () {
        return this.getRuleContext(0, K1KeywordNameDefContext);
    };
    K2KeywordDefineContext.prototype.k2KeywordParameters = function () {
        return this.getRuleContext(0, K2KeywordParametersContext);
    };
    K2KeywordDefineContext.prototype.k2Generate = function () {
        return this.getRuleContext(0, K2GenerateContext);
    };
    Object.defineProperty(K2KeywordDefineContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2KeywordDefine; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2KeywordDefineContext.prototype.enterRule = function (listener) {
        if (listener.enterK2KeywordDefine) {
            listener.enterK2KeywordDefine(this);
        }
    };
    // @Override
    K2KeywordDefineContext.prototype.exitRule = function (listener) {
        if (listener.exitK2KeywordDefine) {
            listener.exitK2KeywordDefine(this);
        }
    };
    // @Override
    K2KeywordDefineContext.prototype.accept = function (visitor) {
        if (visitor.visitK2KeywordDefine) {
            return visitor.visitK2KeywordDefine(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2KeywordDefineContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2KeywordDefineContext = K2KeywordDefineContext;
var K2KeywordLevelContext = /** @class */ (function (_super) {
    __extends(K2KeywordLevelContext, _super);
    function K2KeywordLevelContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2KeywordLevelContext.prototype.k1KeywordAlias = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K1KeywordAliasContext);
        }
        else {
            return this.getRuleContext(i, K1KeywordAliasContext);
        }
    };
    K2KeywordLevelContext.prototype.k2KeywordDefine = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2KeywordDefineContext);
        }
        else {
            return this.getRuleContext(i, K2KeywordDefineContext);
        }
    };
    Object.defineProperty(K2KeywordLevelContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2KeywordLevel; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2KeywordLevelContext.prototype.enterRule = function (listener) {
        if (listener.enterK2KeywordLevel) {
            listener.enterK2KeywordLevel(this);
        }
    };
    // @Override
    K2KeywordLevelContext.prototype.exitRule = function (listener) {
        if (listener.exitK2KeywordLevel) {
            listener.exitK2KeywordLevel(this);
        }
    };
    // @Override
    K2KeywordLevelContext.prototype.accept = function (visitor) {
        if (visitor.visitK2KeywordLevel) {
            return visitor.visitK2KeywordLevel(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2KeywordLevelContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2KeywordLevelContext = K2KeywordLevelContext;
var K2KeywordParametersContext = /** @class */ (function (_super) {
    __extends(K2KeywordParametersContext, _super);
    function K2KeywordParametersContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2KeywordParametersContext.prototype.k2Formal = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2FormalContext);
        }
        else {
            return this.getRuleContext(i, K2FormalContext);
        }
    };
    Object.defineProperty(K2KeywordParametersContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2KeywordParameters; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2KeywordParametersContext.prototype.enterRule = function (listener) {
        if (listener.enterK2KeywordParameters) {
            listener.enterK2KeywordParameters(this);
        }
    };
    // @Override
    K2KeywordParametersContext.prototype.exitRule = function (listener) {
        if (listener.exitK2KeywordParameters) {
            listener.exitK2KeywordParameters(this);
        }
    };
    // @Override
    K2KeywordParametersContext.prototype.accept = function (visitor) {
        if (visitor.visitK2KeywordParameters) {
            return visitor.visitK2KeywordParameters(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2KeywordParametersContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2KeywordParametersContext = K2KeywordParametersContext;
var K2LiteralContext = /** @class */ (function (_super) {
    __extends(K2LiteralContext, _super);
    function K2LiteralContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2LiteralContext.prototype.IDENTIFIER = function (i) {
        if (i === undefined) {
            return this.getTokens(EDIF300Parser.IDENTIFIER);
        }
        else {
            return this.getToken(EDIF300Parser.IDENTIFIER, i);
        }
    };
    K2LiteralContext.prototype.integerToken = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerTokenContext);
        }
        else {
            return this.getRuleContext(i, IntegerTokenContext);
        }
    };
    K2LiteralContext.prototype.stringToken = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringTokenContext);
        }
        else {
            return this.getRuleContext(i, StringTokenContext);
        }
    };
    Object.defineProperty(K2LiteralContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2Literal; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2LiteralContext.prototype.enterRule = function (listener) {
        if (listener.enterK2Literal) {
            listener.enterK2Literal(this);
        }
    };
    // @Override
    K2LiteralContext.prototype.exitRule = function (listener) {
        if (listener.exitK2Literal) {
            listener.exitK2Literal(this);
        }
    };
    // @Override
    K2LiteralContext.prototype.accept = function (visitor) {
        if (visitor.visitK2Literal) {
            return visitor.visitK2Literal(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2LiteralContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2LiteralContext = K2LiteralContext;
var K2OptionalContext = /** @class */ (function (_super) {
    __extends(K2OptionalContext, _super);
    function K2OptionalContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K2OptionalContext.prototype.k2Literal = function () {
        return this.tryGetRuleContext(0, K2LiteralContext);
    };
    K2OptionalContext.prototype.k2Actual = function () {
        return this.tryGetRuleContext(0, K2ActualContext);
    };
    K2OptionalContext.prototype.k2Build = function () {
        return this.tryGetRuleContext(0, K2BuildContext);
    };
    Object.defineProperty(K2OptionalContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2Optional; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2OptionalContext.prototype.enterRule = function (listener) {
        if (listener.enterK2Optional) {
            listener.enterK2Optional(this);
        }
    };
    // @Override
    K2OptionalContext.prototype.exitRule = function (listener) {
        if (listener.exitK2Optional) {
            listener.exitK2Optional(this);
        }
    };
    // @Override
    K2OptionalContext.prototype.accept = function (visitor) {
        if (visitor.visitK2Optional) {
            return visitor.visitK2Optional(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2OptionalContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2OptionalContext = K2OptionalContext;
var K2RequiredContext = /** @class */ (function (_super) {
    __extends(K2RequiredContext, _super);
    function K2RequiredContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(K2RequiredContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k2Required; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K2RequiredContext.prototype.enterRule = function (listener) {
        if (listener.enterK2Required) {
            listener.enterK2Required(this);
        }
    };
    // @Override
    K2RequiredContext.prototype.exitRule = function (listener) {
        if (listener.exitK2Required) {
            listener.exitK2Required(this);
        }
    };
    // @Override
    K2RequiredContext.prototype.accept = function (visitor) {
        if (visitor.visitK2Required) {
            return visitor.visitK2Required(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K2RequiredContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K2RequiredContext = K2RequiredContext;
var K3BuildContext = /** @class */ (function (_super) {
    __extends(K3BuildContext, _super);
    function K3BuildContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K3BuildContext.prototype.k1KeywordNameRef = function () {
        return this.getRuleContext(0, K1KeywordNameRefContext);
    };
    K3BuildContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    K3BuildContext.prototype.k2Actual = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2ActualContext);
        }
        else {
            return this.getRuleContext(i, K2ActualContext);
        }
    };
    K3BuildContext.prototype.k2Literal = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2LiteralContext);
        }
        else {
            return this.getRuleContext(i, K2LiteralContext);
        }
    };
    K3BuildContext.prototype.k3Build = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K3BuildContext);
        }
        else {
            return this.getRuleContext(i, K3BuildContext);
        }
    };
    K3BuildContext.prototype.k3ForEach = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K3ForEachContext);
        }
        else {
            return this.getRuleContext(i, K3ForEachContext);
        }
    };
    Object.defineProperty(K3BuildContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k3Build; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K3BuildContext.prototype.enterRule = function (listener) {
        if (listener.enterK3Build) {
            listener.enterK3Build(this);
        }
    };
    // @Override
    K3BuildContext.prototype.exitRule = function (listener) {
        if (listener.exitK3Build) {
            listener.exitK3Build(this);
        }
    };
    // @Override
    K3BuildContext.prototype.accept = function (visitor) {
        if (visitor.visitK3Build) {
            return visitor.visitK3Build(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K3BuildContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K3BuildContext = K3BuildContext;
var K3CollectorContext = /** @class */ (function (_super) {
    __extends(K3CollectorContext, _super);
    function K3CollectorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(K3CollectorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k3Collector; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K3CollectorContext.prototype.enterRule = function (listener) {
        if (listener.enterK3Collector) {
            listener.enterK3Collector(this);
        }
    };
    // @Override
    K3CollectorContext.prototype.exitRule = function (listener) {
        if (listener.exitK3Collector) {
            listener.exitK3Collector(this);
        }
    };
    // @Override
    K3CollectorContext.prototype.accept = function (visitor) {
        if (visitor.visitK3Collector) {
            return visitor.visitK3Collector(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K3CollectorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K3CollectorContext = K3CollectorContext;
var K3ForEachContext = /** @class */ (function (_super) {
    __extends(K3ForEachContext, _super);
    function K3ForEachContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K3ForEachContext.prototype.k2FormalNameRef = function () {
        return this.tryGetRuleContext(0, K2FormalNameRefContext);
    };
    K3ForEachContext.prototype.k3FormalList = function () {
        return this.tryGetRuleContext(0, K3FormalListContext);
    };
    K3ForEachContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    K3ForEachContext.prototype.k2Actual = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2ActualContext);
        }
        else {
            return this.getRuleContext(i, K2ActualContext);
        }
    };
    K3ForEachContext.prototype.k2Literal = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2LiteralContext);
        }
        else {
            return this.getRuleContext(i, K2LiteralContext);
        }
    };
    K3ForEachContext.prototype.k3Build = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K3BuildContext);
        }
        else {
            return this.getRuleContext(i, K3BuildContext);
        }
    };
    K3ForEachContext.prototype.k3ForEach = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K3ForEachContext);
        }
        else {
            return this.getRuleContext(i, K3ForEachContext);
        }
    };
    Object.defineProperty(K3ForEachContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k3ForEach; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K3ForEachContext.prototype.enterRule = function (listener) {
        if (listener.enterK3ForEach) {
            listener.enterK3ForEach(this);
        }
    };
    // @Override
    K3ForEachContext.prototype.exitRule = function (listener) {
        if (listener.exitK3ForEach) {
            listener.exitK3ForEach(this);
        }
    };
    // @Override
    K3ForEachContext.prototype.accept = function (visitor) {
        if (visitor.visitK3ForEach) {
            return visitor.visitK3ForEach(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K3ForEachContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K3ForEachContext = K3ForEachContext;
var K3FormalContext = /** @class */ (function (_super) {
    __extends(K3FormalContext, _super);
    function K3FormalContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K3FormalContext.prototype.k2FormalNameDef = function () {
        return this.getRuleContext(0, K2FormalNameDefContext);
    };
    K3FormalContext.prototype.k2Optional = function () {
        return this.tryGetRuleContext(0, K2OptionalContext);
    };
    K3FormalContext.prototype.k2Required = function () {
        return this.tryGetRuleContext(0, K2RequiredContext);
    };
    K3FormalContext.prototype.k3Collector = function () {
        return this.tryGetRuleContext(0, K3CollectorContext);
    };
    Object.defineProperty(K3FormalContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k3Formal; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K3FormalContext.prototype.enterRule = function (listener) {
        if (listener.enterK3Formal) {
            listener.enterK3Formal(this);
        }
    };
    // @Override
    K3FormalContext.prototype.exitRule = function (listener) {
        if (listener.exitK3Formal) {
            listener.exitK3Formal(this);
        }
    };
    // @Override
    K3FormalContext.prototype.accept = function (visitor) {
        if (visitor.visitK3Formal) {
            return visitor.visitK3Formal(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K3FormalContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K3FormalContext = K3FormalContext;
var K3FormalListContext = /** @class */ (function (_super) {
    __extends(K3FormalListContext, _super);
    function K3FormalListContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K3FormalListContext.prototype.k2FormalNameRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2FormalNameRefContext);
        }
        else {
            return this.getRuleContext(i, K2FormalNameRefContext);
        }
    };
    Object.defineProperty(K3FormalListContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k3FormalList; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K3FormalListContext.prototype.enterRule = function (listener) {
        if (listener.enterK3FormalList) {
            listener.enterK3FormalList(this);
        }
    };
    // @Override
    K3FormalListContext.prototype.exitRule = function (listener) {
        if (listener.exitK3FormalList) {
            listener.exitK3FormalList(this);
        }
    };
    // @Override
    K3FormalListContext.prototype.accept = function (visitor) {
        if (visitor.visitK3FormalList) {
            return visitor.visitK3FormalList(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K3FormalListContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K3FormalListContext = K3FormalListContext;
var K3GenerateContext = /** @class */ (function (_super) {
    __extends(K3GenerateContext, _super);
    function K3GenerateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K3GenerateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    K3GenerateContext.prototype.k2Actual = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2ActualContext);
        }
        else {
            return this.getRuleContext(i, K2ActualContext);
        }
    };
    K3GenerateContext.prototype.k2Build = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2BuildContext);
        }
        else {
            return this.getRuleContext(i, K2BuildContext);
        }
    };
    K3GenerateContext.prototype.k2Literal = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K2LiteralContext);
        }
        else {
            return this.getRuleContext(i, K2LiteralContext);
        }
    };
    K3GenerateContext.prototype.k3ForEach = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K3ForEachContext);
        }
        else {
            return this.getRuleContext(i, K3ForEachContext);
        }
    };
    Object.defineProperty(K3GenerateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k3Generate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K3GenerateContext.prototype.enterRule = function (listener) {
        if (listener.enterK3Generate) {
            listener.enterK3Generate(this);
        }
    };
    // @Override
    K3GenerateContext.prototype.exitRule = function (listener) {
        if (listener.exitK3Generate) {
            listener.exitK3Generate(this);
        }
    };
    // @Override
    K3GenerateContext.prototype.accept = function (visitor) {
        if (visitor.visitK3Generate) {
            return visitor.visitK3Generate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K3GenerateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K3GenerateContext = K3GenerateContext;
var K3KeywordDefineContext = /** @class */ (function (_super) {
    __extends(K3KeywordDefineContext, _super);
    function K3KeywordDefineContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K3KeywordDefineContext.prototype.k1KeywordNameDef = function () {
        return this.getRuleContext(0, K1KeywordNameDefContext);
    };
    K3KeywordDefineContext.prototype.k3KeywordParameters = function () {
        return this.getRuleContext(0, K3KeywordParametersContext);
    };
    K3KeywordDefineContext.prototype.k3Generate = function () {
        return this.getRuleContext(0, K3GenerateContext);
    };
    Object.defineProperty(K3KeywordDefineContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k3KeywordDefine; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K3KeywordDefineContext.prototype.enterRule = function (listener) {
        if (listener.enterK3KeywordDefine) {
            listener.enterK3KeywordDefine(this);
        }
    };
    // @Override
    K3KeywordDefineContext.prototype.exitRule = function (listener) {
        if (listener.exitK3KeywordDefine) {
            listener.exitK3KeywordDefine(this);
        }
    };
    // @Override
    K3KeywordDefineContext.prototype.accept = function (visitor) {
        if (visitor.visitK3KeywordDefine) {
            return visitor.visitK3KeywordDefine(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K3KeywordDefineContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K3KeywordDefineContext = K3KeywordDefineContext;
var K3KeywordLevelContext = /** @class */ (function (_super) {
    __extends(K3KeywordLevelContext, _super);
    function K3KeywordLevelContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K3KeywordLevelContext.prototype.k1KeywordAlias = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K1KeywordAliasContext);
        }
        else {
            return this.getRuleContext(i, K1KeywordAliasContext);
        }
    };
    K3KeywordLevelContext.prototype.k3KeywordDefine = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K3KeywordDefineContext);
        }
        else {
            return this.getRuleContext(i, K3KeywordDefineContext);
        }
    };
    Object.defineProperty(K3KeywordLevelContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k3KeywordLevel; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K3KeywordLevelContext.prototype.enterRule = function (listener) {
        if (listener.enterK3KeywordLevel) {
            listener.enterK3KeywordLevel(this);
        }
    };
    // @Override
    K3KeywordLevelContext.prototype.exitRule = function (listener) {
        if (listener.exitK3KeywordLevel) {
            listener.exitK3KeywordLevel(this);
        }
    };
    // @Override
    K3KeywordLevelContext.prototype.accept = function (visitor) {
        if (visitor.visitK3KeywordLevel) {
            return visitor.visitK3KeywordLevel(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K3KeywordLevelContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K3KeywordLevelContext = K3KeywordLevelContext;
var K3KeywordParametersContext = /** @class */ (function (_super) {
    __extends(K3KeywordParametersContext, _super);
    function K3KeywordParametersContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    K3KeywordParametersContext.prototype.k3Formal = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(K3FormalContext);
        }
        else {
            return this.getRuleContext(i, K3FormalContext);
        }
    };
    Object.defineProperty(K3KeywordParametersContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_k3KeywordParameters; },
        enumerable: true,
        configurable: true
    });
    // @Override
    K3KeywordParametersContext.prototype.enterRule = function (listener) {
        if (listener.enterK3KeywordParameters) {
            listener.enterK3KeywordParameters(this);
        }
    };
    // @Override
    K3KeywordParametersContext.prototype.exitRule = function (listener) {
        if (listener.exitK3KeywordParameters) {
            listener.exitK3KeywordParameters(this);
        }
    };
    // @Override
    K3KeywordParametersContext.prototype.accept = function (visitor) {
        if (visitor.visitK3KeywordParameters) {
            return visitor.visitK3KeywordParameters(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return K3KeywordParametersContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.K3KeywordParametersContext = K3KeywordParametersContext;
var KelvinContext = /** @class */ (function (_super) {
    __extends(KelvinContext, _super);
    function KelvinContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    KelvinContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(KelvinContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_kelvin; },
        enumerable: true,
        configurable: true
    });
    // @Override
    KelvinContext.prototype.enterRule = function (listener) {
        if (listener.enterKelvin) {
            listener.enterKelvin(this);
        }
    };
    // @Override
    KelvinContext.prototype.exitRule = function (listener) {
        if (listener.exitKelvin) {
            listener.exitKelvin(this);
        }
    };
    // @Override
    KelvinContext.prototype.accept = function (visitor) {
        if (visitor.visitKelvin) {
            return visitor.visitKelvin(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return KelvinContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.KelvinContext = KelvinContext;
var KeywordMapContext = /** @class */ (function (_super) {
    __extends(KeywordMapContext, _super);
    function KeywordMapContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    KeywordMapContext.prototype.k0KeywordLevel = function () {
        return this.tryGetRuleContext(0, K0KeywordLevelContext);
    };
    KeywordMapContext.prototype.k1KeywordLevel = function () {
        return this.tryGetRuleContext(0, K1KeywordLevelContext);
    };
    KeywordMapContext.prototype.k2KeywordLevel = function () {
        return this.tryGetRuleContext(0, K2KeywordLevelContext);
    };
    KeywordMapContext.prototype.k3KeywordLevel = function () {
        return this.tryGetRuleContext(0, K3KeywordLevelContext);
    };
    KeywordMapContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    Object.defineProperty(KeywordMapContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_keywordMap; },
        enumerable: true,
        configurable: true
    });
    // @Override
    KeywordMapContext.prototype.enterRule = function (listener) {
        if (listener.enterKeywordMap) {
            listener.enterKeywordMap(this);
        }
    };
    // @Override
    KeywordMapContext.prototype.exitRule = function (listener) {
        if (listener.exitKeywordMap) {
            listener.exitKeywordMap(this);
        }
    };
    // @Override
    KeywordMapContext.prototype.accept = function (visitor) {
        if (visitor.visitKeywordMap) {
            return visitor.visitKeywordMap(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return KeywordMapContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.KeywordMapContext = KeywordMapContext;
var KilogramContext = /** @class */ (function (_super) {
    __extends(KilogramContext, _super);
    function KilogramContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    KilogramContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(KilogramContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_kilogram; },
        enumerable: true,
        configurable: true
    });
    // @Override
    KilogramContext.prototype.enterRule = function (listener) {
        if (listener.enterKilogram) {
            listener.enterKilogram(this);
        }
    };
    // @Override
    KilogramContext.prototype.exitRule = function (listener) {
        if (listener.exitKilogram) {
            listener.exitKilogram(this);
        }
    };
    // @Override
    KilogramContext.prototype.accept = function (visitor) {
        if (visitor.visitKilogram) {
            return visitor.visitKilogram(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return KilogramContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.KilogramContext = KilogramContext;
var LeafContext = /** @class */ (function (_super) {
    __extends(LeafContext, _super);
    function LeafContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(LeafContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_leaf; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LeafContext.prototype.enterRule = function (listener) {
        if (listener.enterLeaf) {
            listener.enterLeaf(this);
        }
    };
    // @Override
    LeafContext.prototype.exitRule = function (listener) {
        if (listener.exitLeaf) {
            listener.exitLeaf(this);
        }
    };
    // @Override
    LeafContext.prototype.accept = function (visitor) {
        if (visitor.visitLeaf) {
            return visitor.visitLeaf(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LeafContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LeafContext = LeafContext;
var LeafOccurrenceAnnotateContext = /** @class */ (function (_super) {
    __extends(LeafOccurrenceAnnotateContext, _super);
    function LeafOccurrenceAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LeafOccurrenceAnnotateContext.prototype.extendInstanceDef = function () {
        return this.tryGetRuleContext(0, ExtendInstanceDefContext);
    };
    LeafOccurrenceAnnotateContext.prototype.extendInstanceMemberDef = function () {
        return this.tryGetRuleContext(0, ExtendInstanceMemberDefContext);
    };
    LeafOccurrenceAnnotateContext.prototype.cellPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, CellPropertyOverrideContext);
        }
    };
    LeafOccurrenceAnnotateContext.prototype.clusterPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, ClusterPropertyOverrideContext);
        }
    };
    LeafOccurrenceAnnotateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    LeafOccurrenceAnnotateContext.prototype.designator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorContext);
        }
        else {
            return this.getRuleContext(i, DesignatorContext);
        }
    };
    LeafOccurrenceAnnotateContext.prototype.instancePropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstancePropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, InstancePropertyOverrideContext);
        }
    };
    LeafOccurrenceAnnotateContext.prototype.portAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortAnnotateContext);
        }
        else {
            return this.getRuleContext(i, PortAnnotateContext);
        }
    };
    LeafOccurrenceAnnotateContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    Object.defineProperty(LeafOccurrenceAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_leafOccurrenceAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LeafOccurrenceAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterLeafOccurrenceAnnotate) {
            listener.enterLeafOccurrenceAnnotate(this);
        }
    };
    // @Override
    LeafOccurrenceAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitLeafOccurrenceAnnotate) {
            listener.exitLeafOccurrenceAnnotate(this);
        }
    };
    // @Override
    LeafOccurrenceAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitLeafOccurrenceAnnotate) {
            return visitor.visitLeafOccurrenceAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LeafOccurrenceAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LeafOccurrenceAnnotateContext = LeafOccurrenceAnnotateContext;
var LeftJustifyContext = /** @class */ (function (_super) {
    __extends(LeftJustifyContext, _super);
    function LeftJustifyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(LeftJustifyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_leftJustify; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LeftJustifyContext.prototype.enterRule = function (listener) {
        if (listener.enterLeftJustify) {
            listener.enterLeftJustify(this);
        }
    };
    // @Override
    LeftJustifyContext.prototype.exitRule = function (listener) {
        if (listener.exitLeftJustify) {
            listener.exitLeftJustify(this);
        }
    };
    // @Override
    LeftJustifyContext.prototype.accept = function (visitor) {
        if (visitor.visitLeftJustify) {
            return visitor.visitLeftJustify(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LeftJustifyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LeftJustifyContext = LeftJustifyContext;
var LengthValueContext = /** @class */ (function (_super) {
    __extends(LengthValueContext, _super);
    function LengthValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LengthValueContext.prototype.distanceValue = function () {
        return this.getRuleContext(0, DistanceValueContext);
    };
    Object.defineProperty(LengthValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_lengthValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LengthValueContext.prototype.enterRule = function (listener) {
        if (listener.enterLengthValue) {
            listener.enterLengthValue(this);
        }
    };
    // @Override
    LengthValueContext.prototype.exitRule = function (listener) {
        if (listener.exitLengthValue) {
            listener.exitLengthValue(this);
        }
    };
    // @Override
    LengthValueContext.prototype.accept = function (visitor) {
        if (visitor.visitLengthValue) {
            return visitor.visitLengthValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LengthValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LengthValueContext = LengthValueContext;
var LessThanContext = /** @class */ (function (_super) {
    __extends(LessThanContext, _super);
    function LessThanContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LessThanContext.prototype.integerExpression = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerExpressionContext);
        }
        else {
            return this.getRuleContext(i, IntegerExpressionContext);
        }
    };
    Object.defineProperty(LessThanContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_lessThan; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LessThanContext.prototype.enterRule = function (listener) {
        if (listener.enterLessThan) {
            listener.enterLessThan(this);
        }
    };
    // @Override
    LessThanContext.prototype.exitRule = function (listener) {
        if (listener.exitLessThan) {
            listener.exitLessThan(this);
        }
    };
    // @Override
    LessThanContext.prototype.accept = function (visitor) {
        if (visitor.visitLessThan) {
            return visitor.visitLessThan(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LessThanContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LessThanContext = LessThanContext;
var LessThanOrEqualContext = /** @class */ (function (_super) {
    __extends(LessThanOrEqualContext, _super);
    function LessThanOrEqualContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LessThanOrEqualContext.prototype.integerExpression = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerExpressionContext);
        }
        else {
            return this.getRuleContext(i, IntegerExpressionContext);
        }
    };
    Object.defineProperty(LessThanOrEqualContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_lessThanOrEqual; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LessThanOrEqualContext.prototype.enterRule = function (listener) {
        if (listener.enterLessThanOrEqual) {
            listener.enterLessThanOrEqual(this);
        }
    };
    // @Override
    LessThanOrEqualContext.prototype.exitRule = function (listener) {
        if (listener.exitLessThanOrEqual) {
            listener.exitLessThanOrEqual(this);
        }
    };
    // @Override
    LessThanOrEqualContext.prototype.accept = function (visitor) {
        if (visitor.visitLessThanOrEqual) {
            return visitor.visitLessThanOrEqual(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LessThanOrEqualContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LessThanOrEqualContext = LessThanOrEqualContext;
var LibraryContext = /** @class */ (function (_super) {
    __extends(LibraryContext, _super);
    function LibraryContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LibraryContext.prototype.libraryNameDef = function () {
        return this.getRuleContext(0, LibraryNameDefContext);
    };
    LibraryContext.prototype.libraryHeader = function () {
        return this.getRuleContext(0, LibraryHeaderContext);
    };
    LibraryContext.prototype.cell = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellContext);
        }
        else {
            return this.getRuleContext(i, CellContext);
        }
    };
    LibraryContext.prototype.schematicInterconnectTerminatorTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInterconnectTerminatorTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicInterconnectTerminatorTemplateContext);
        }
    };
    LibraryContext.prototype.schematicJunctionTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicJunctionTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicJunctionTemplateContext);
        }
    };
    LibraryContext.prototype.schematicGlobalPortTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicGlobalPortTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicGlobalPortTemplateContext);
        }
    };
    LibraryContext.prototype.schematicMasterPortTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicMasterPortTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicMasterPortTemplateContext);
        }
    };
    LibraryContext.prototype.schematicOffPageConnectorTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOffPageConnectorTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicOffPageConnectorTemplateContext);
        }
    };
    LibraryContext.prototype.schematicOnPageConnectorTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOnPageConnectorTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicOnPageConnectorTemplateContext);
        }
    };
    LibraryContext.prototype.schematicRipperTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicRipperTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicRipperTemplateContext);
        }
    };
    LibraryContext.prototype.schematicSymbolBorderTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSymbolBorderTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicSymbolBorderTemplateContext);
        }
    };
    LibraryContext.prototype.schematicSymbolPortTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSymbolPortTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicSymbolPortTemplateContext);
        }
    };
    LibraryContext.prototype.pageBorderTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageBorderTemplateContext);
        }
        else {
            return this.getRuleContext(i, PageBorderTemplateContext);
        }
    };
    LibraryContext.prototype.pageTitleBlockTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageTitleBlockTemplateContext);
        }
        else {
            return this.getRuleContext(i, PageTitleBlockTemplateContext);
        }
    };
    LibraryContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    LibraryContext.prototype.geometryMacro = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GeometryMacroContext);
        }
        else {
            return this.getRuleContext(i, GeometryMacroContext);
        }
    };
    LibraryContext.prototype.schematicFigureMacro = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicFigureMacroContext);
        }
        else {
            return this.getRuleContext(i, SchematicFigureMacroContext);
        }
    };
    LibraryContext.prototype.schematicForFrameBorderTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicForFrameBorderTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicForFrameBorderTemplateContext);
        }
    };
    LibraryContext.prototype.schematicIfFrameBorderTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicIfFrameBorderTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicIfFrameBorderTemplateContext);
        }
    };
    LibraryContext.prototype.schematicOtherwiseFrameBorderTemplate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOtherwiseFrameBorderTemplateContext);
        }
        else {
            return this.getRuleContext(i, SchematicOtherwiseFrameBorderTemplateContext);
        }
    };
    LibraryContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(LibraryContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_library; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LibraryContext.prototype.enterRule = function (listener) {
        if (listener.enterLibrary) {
            listener.enterLibrary(this);
        }
    };
    // @Override
    LibraryContext.prototype.exitRule = function (listener) {
        if (listener.exitLibrary) {
            listener.exitLibrary(this);
        }
    };
    // @Override
    LibraryContext.prototype.accept = function (visitor) {
        if (visitor.visitLibrary) {
            return visitor.visitLibrary(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LibraryContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LibraryContext = LibraryContext;
var LibraryHeaderContext = /** @class */ (function (_super) {
    __extends(LibraryHeaderContext, _super);
    function LibraryHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LibraryHeaderContext.prototype.edifLevel = function () {
        return this.getRuleContext(0, EdifLevelContext);
    };
    LibraryHeaderContext.prototype.nameCaseSensitivity = function () {
        return this.getRuleContext(0, NameCaseSensitivityContext);
    };
    LibraryHeaderContext.prototype.technology = function () {
        return this.getRuleContext(0, TechnologyContext);
    };
    LibraryHeaderContext.prototype.backgroundColor = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BackgroundColorContext);
        }
        else {
            return this.getRuleContext(i, BackgroundColorContext);
        }
    };
    LibraryHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    LibraryHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    LibraryHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    LibraryHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(LibraryHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_libraryHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LibraryHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterLibraryHeader) {
            listener.enterLibraryHeader(this);
        }
    };
    // @Override
    LibraryHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitLibraryHeader) {
            listener.exitLibraryHeader(this);
        }
    };
    // @Override
    LibraryHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitLibraryHeader) {
            return visitor.visitLibraryHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LibraryHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LibraryHeaderContext = LibraryHeaderContext;
var LibraryNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(LibraryNameCaseSensitiveContext, _super);
    function LibraryNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LibraryNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(LibraryNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_libraryNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LibraryNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterLibraryNameCaseSensitive) {
            listener.enterLibraryNameCaseSensitive(this);
        }
    };
    // @Override
    LibraryNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitLibraryNameCaseSensitive) {
            listener.exitLibraryNameCaseSensitive(this);
        }
    };
    // @Override
    LibraryNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitLibraryNameCaseSensitive) {
            return visitor.visitLibraryNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LibraryNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LibraryNameCaseSensitiveContext = LibraryNameCaseSensitiveContext;
var LibraryNameDefContext = /** @class */ (function (_super) {
    __extends(LibraryNameDefContext, _super);
    function LibraryNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LibraryNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(LibraryNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_libraryNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LibraryNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterLibraryNameDef) {
            listener.enterLibraryNameDef(this);
        }
    };
    // @Override
    LibraryNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitLibraryNameDef) {
            listener.exitLibraryNameDef(this);
        }
    };
    // @Override
    LibraryNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitLibraryNameDef) {
            return visitor.visitLibraryNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LibraryNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LibraryNameDefContext = LibraryNameDefContext;
var LibraryNameRefContext = /** @class */ (function (_super) {
    __extends(LibraryNameRefContext, _super);
    function LibraryNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LibraryNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(LibraryNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_libraryNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LibraryNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterLibraryNameRef) {
            listener.enterLibraryNameRef(this);
        }
    };
    // @Override
    LibraryNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitLibraryNameRef) {
            listener.exitLibraryNameRef(this);
        }
    };
    // @Override
    LibraryNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitLibraryNameRef) {
            return visitor.visitLibraryNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LibraryNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LibraryNameRefContext = LibraryNameRefContext;
var LibraryObjectNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(LibraryObjectNameCaseSensitiveContext, _super);
    function LibraryObjectNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LibraryObjectNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(LibraryObjectNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_libraryObjectNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LibraryObjectNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterLibraryObjectNameCaseSensitive) {
            listener.enterLibraryObjectNameCaseSensitive(this);
        }
    };
    // @Override
    LibraryObjectNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitLibraryObjectNameCaseSensitive) {
            listener.exitLibraryObjectNameCaseSensitive(this);
        }
    };
    // @Override
    LibraryObjectNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitLibraryObjectNameCaseSensitive) {
            return visitor.visitLibraryObjectNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LibraryObjectNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LibraryObjectNameCaseSensitiveContext = LibraryObjectNameCaseSensitiveContext;
var LibraryObjectNameDefContext = /** @class */ (function (_super) {
    __extends(LibraryObjectNameDefContext, _super);
    function LibraryObjectNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LibraryObjectNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(LibraryObjectNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_libraryObjectNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LibraryObjectNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterLibraryObjectNameDef) {
            listener.enterLibraryObjectNameDef(this);
        }
    };
    // @Override
    LibraryObjectNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitLibraryObjectNameDef) {
            listener.exitLibraryObjectNameDef(this);
        }
    };
    // @Override
    LibraryObjectNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitLibraryObjectNameDef) {
            return visitor.visitLibraryObjectNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LibraryObjectNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LibraryObjectNameDefContext = LibraryObjectNameDefContext;
var LibraryObjectNameRefContext = /** @class */ (function (_super) {
    __extends(LibraryObjectNameRefContext, _super);
    function LibraryObjectNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LibraryObjectNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(LibraryObjectNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_libraryObjectNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LibraryObjectNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterLibraryObjectNameRef) {
            listener.enterLibraryObjectNameRef(this);
        }
    };
    // @Override
    LibraryObjectNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitLibraryObjectNameRef) {
            listener.exitLibraryObjectNameRef(this);
        }
    };
    // @Override
    LibraryObjectNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitLibraryObjectNameRef) {
            return visitor.visitLibraryObjectNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LibraryObjectNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LibraryObjectNameRefContext = LibraryObjectNameRefContext;
var LibraryRefContext = /** @class */ (function (_super) {
    __extends(LibraryRefContext, _super);
    function LibraryRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LibraryRefContext.prototype.libraryNameRef = function () {
        return this.getRuleContext(0, LibraryNameRefContext);
    };
    Object.defineProperty(LibraryRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_libraryRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LibraryRefContext.prototype.enterRule = function (listener) {
        if (listener.enterLibraryRef) {
            listener.enterLibraryRef(this);
        }
    };
    // @Override
    LibraryRefContext.prototype.exitRule = function (listener) {
        if (listener.exitLibraryRef) {
            listener.exitLibraryRef(this);
        }
    };
    // @Override
    LibraryRefContext.prototype.accept = function (visitor) {
        if (visitor.visitLibraryRef) {
            return visitor.visitLibraryRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LibraryRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LibraryRefContext = LibraryRefContext;
var LoadDelayContext = /** @class */ (function (_super) {
    __extends(LoadDelayContext, _super);
    function LoadDelayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LoadDelayContext.prototype.acLoadFactorTime = function () {
        return this.getRuleContext(0, AcLoadFactorTimeContext);
    };
    LoadDelayContext.prototype.acLoadFactorCapacitance = function () {
        return this.getRuleContext(0, AcLoadFactorCapacitanceContext);
    };
    Object.defineProperty(LoadDelayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_loadDelay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LoadDelayContext.prototype.enterRule = function (listener) {
        if (listener.enterLoadDelay) {
            listener.enterLoadDelay(this);
        }
    };
    // @Override
    LoadDelayContext.prototype.exitRule = function (listener) {
        if (listener.exitLoadDelay) {
            listener.exitLoadDelay(this);
        }
    };
    // @Override
    LoadDelayContext.prototype.accept = function (visitor) {
        if (visitor.visitLoadDelay) {
            return visitor.visitLoadDelay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LoadDelayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LoadDelayContext = LoadDelayContext;
var LocalPortGroupContext = /** @class */ (function (_super) {
    __extends(LocalPortGroupContext, _super);
    function LocalPortGroupContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LocalPortGroupContext.prototype.localPortGroupNameDef = function () {
        return this.getRuleContext(0, LocalPortGroupNameDefContext);
    };
    LocalPortGroupContext.prototype.portList = function () {
        return this.getRuleContext(0, PortListContext);
    };
    LocalPortGroupContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    LocalPortGroupContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    LocalPortGroupContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    LocalPortGroupContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(LocalPortGroupContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_localPortGroup; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LocalPortGroupContext.prototype.enterRule = function (listener) {
        if (listener.enterLocalPortGroup) {
            listener.enterLocalPortGroup(this);
        }
    };
    // @Override
    LocalPortGroupContext.prototype.exitRule = function (listener) {
        if (listener.exitLocalPortGroup) {
            listener.exitLocalPortGroup(this);
        }
    };
    // @Override
    LocalPortGroupContext.prototype.accept = function (visitor) {
        if (visitor.visitLocalPortGroup) {
            return visitor.visitLocalPortGroup(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LocalPortGroupContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LocalPortGroupContext = LocalPortGroupContext;
var LocalPortGroupNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(LocalPortGroupNameCaseSensitiveContext, _super);
    function LocalPortGroupNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LocalPortGroupNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(LocalPortGroupNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_localPortGroupNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LocalPortGroupNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterLocalPortGroupNameCaseSensitive) {
            listener.enterLocalPortGroupNameCaseSensitive(this);
        }
    };
    // @Override
    LocalPortGroupNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitLocalPortGroupNameCaseSensitive) {
            listener.exitLocalPortGroupNameCaseSensitive(this);
        }
    };
    // @Override
    LocalPortGroupNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitLocalPortGroupNameCaseSensitive) {
            return visitor.visitLocalPortGroupNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LocalPortGroupNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LocalPortGroupNameCaseSensitiveContext = LocalPortGroupNameCaseSensitiveContext;
var LocalPortGroupNameDefContext = /** @class */ (function (_super) {
    __extends(LocalPortGroupNameDefContext, _super);
    function LocalPortGroupNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LocalPortGroupNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(LocalPortGroupNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_localPortGroupNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LocalPortGroupNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterLocalPortGroupNameDef) {
            listener.enterLocalPortGroupNameDef(this);
        }
    };
    // @Override
    LocalPortGroupNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitLocalPortGroupNameDef) {
            listener.exitLocalPortGroupNameDef(this);
        }
    };
    // @Override
    LocalPortGroupNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitLocalPortGroupNameDef) {
            return visitor.visitLocalPortGroupNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LocalPortGroupNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LocalPortGroupNameDefContext = LocalPortGroupNameDefContext;
var LocalPortGroupNameRefContext = /** @class */ (function (_super) {
    __extends(LocalPortGroupNameRefContext, _super);
    function LocalPortGroupNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LocalPortGroupNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(LocalPortGroupNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_localPortGroupNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LocalPortGroupNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterLocalPortGroupNameRef) {
            listener.enterLocalPortGroupNameRef(this);
        }
    };
    // @Override
    LocalPortGroupNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitLocalPortGroupNameRef) {
            listener.exitLocalPortGroupNameRef(this);
        }
    };
    // @Override
    LocalPortGroupNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitLocalPortGroupNameRef) {
            return visitor.visitLocalPortGroupNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LocalPortGroupNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LocalPortGroupNameRefContext = LocalPortGroupNameRefContext;
var LocalPortGroupRefContext = /** @class */ (function (_super) {
    __extends(LocalPortGroupRefContext, _super);
    function LocalPortGroupRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LocalPortGroupRefContext.prototype.localPortGroupNameRef = function () {
        return this.getRuleContext(0, LocalPortGroupNameRefContext);
    };
    Object.defineProperty(LocalPortGroupRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_localPortGroupRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LocalPortGroupRefContext.prototype.enterRule = function (listener) {
        if (listener.enterLocalPortGroupRef) {
            listener.enterLocalPortGroupRef(this);
        }
    };
    // @Override
    LocalPortGroupRefContext.prototype.exitRule = function (listener) {
        if (listener.exitLocalPortGroupRef) {
            listener.exitLocalPortGroupRef(this);
        }
    };
    // @Override
    LocalPortGroupRefContext.prototype.accept = function (visitor) {
        if (visitor.visitLocalPortGroupRef) {
            return visitor.visitLocalPortGroupRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LocalPortGroupRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LocalPortGroupRefContext = LocalPortGroupRefContext;
var LogicalConnectivityContext = /** @class */ (function (_super) {
    __extends(LogicalConnectivityContext, _super);
    function LogicalConnectivityContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicalConnectivityContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    LogicalConnectivityContext.prototype.forFrame = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ForFrameContext);
        }
        else {
            return this.getRuleContext(i, ForFrameContext);
        }
    };
    LogicalConnectivityContext.prototype.ifFrame = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IfFrameContext);
        }
        else {
            return this.getRuleContext(i, IfFrameContext);
        }
    };
    LogicalConnectivityContext.prototype.instance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceContext);
        }
        else {
            return this.getRuleContext(i, InstanceContext);
        }
    };
    LogicalConnectivityContext.prototype.otherwiseFrame = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OtherwiseFrameContext);
        }
        else {
            return this.getRuleContext(i, OtherwiseFrameContext);
        }
    };
    LogicalConnectivityContext.prototype.signal = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalContext);
        }
        else {
            return this.getRuleContext(i, SignalContext);
        }
    };
    LogicalConnectivityContext.prototype.signalGroup = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalGroupContext);
        }
        else {
            return this.getRuleContext(i, SignalGroupContext);
        }
    };
    LogicalConnectivityContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(LogicalConnectivityContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicalConnectivity; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicalConnectivityContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicalConnectivity) {
            listener.enterLogicalConnectivity(this);
        }
    };
    // @Override
    LogicalConnectivityContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicalConnectivity) {
            listener.exitLogicalConnectivity(this);
        }
    };
    // @Override
    LogicalConnectivityContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicalConnectivity) {
            return visitor.visitLogicalConnectivity(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicalConnectivityContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicalConnectivityContext = LogicalConnectivityContext;
var LogicDefinitionsContext = /** @class */ (function (_super) {
    __extends(LogicDefinitionsContext, _super);
    function LogicDefinitionsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicDefinitionsContext.prototype.setVoltage = function () {
        return this.getRuleContext(0, SetVoltageContext);
    };
    LogicDefinitionsContext.prototype.setCurrent = function () {
        return this.getRuleContext(0, SetCurrentContext);
    };
    LogicDefinitionsContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    LogicDefinitionsContext.prototype.logicValue = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicValueContext);
        }
        else {
            return this.getRuleContext(i, LogicValueContext);
        }
    };
    Object.defineProperty(LogicDefinitionsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicDefinitions; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicDefinitionsContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicDefinitions) {
            listener.enterLogicDefinitions(this);
        }
    };
    // @Override
    LogicDefinitionsContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicDefinitions) {
            listener.exitLogicDefinitions(this);
        }
    };
    // @Override
    LogicDefinitionsContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicDefinitions) {
            return visitor.visitLogicDefinitions(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicDefinitionsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicDefinitionsContext = LogicDefinitionsContext;
var LogicListContext = /** @class */ (function (_super) {
    __extends(LogicListContext, _super);
    function LogicListContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicListContext.prototype.ignore = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IgnoreContext);
        }
        else {
            return this.getRuleContext(i, IgnoreContext);
        }
    };
    LogicListContext.prototype.logicNameRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicNameRefContext);
        }
        else {
            return this.getRuleContext(i, LogicNameRefContext);
        }
    };
    LogicListContext.prototype.logicOneOf = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicOneOfContext);
        }
        else {
            return this.getRuleContext(i, LogicOneOfContext);
        }
    };
    Object.defineProperty(LogicListContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicList; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicListContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicList) {
            listener.enterLogicList(this);
        }
    };
    // @Override
    LogicListContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicList) {
            listener.exitLogicList(this);
        }
    };
    // @Override
    LogicListContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicList) {
            return visitor.visitLogicList(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicListContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicListContext = LogicListContext;
var LogicMapInputContext = /** @class */ (function (_super) {
    __extends(LogicMapInputContext, _super);
    function LogicMapInputContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicMapInputContext.prototype.logicRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicRefContext);
        }
        else {
            return this.getRuleContext(i, LogicRefContext);
        }
    };
    Object.defineProperty(LogicMapInputContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicMapInput; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicMapInputContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicMapInput) {
            listener.enterLogicMapInput(this);
        }
    };
    // @Override
    LogicMapInputContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicMapInput) {
            listener.exitLogicMapInput(this);
        }
    };
    // @Override
    LogicMapInputContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicMapInput) {
            return visitor.visitLogicMapInput(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicMapInputContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicMapInputContext = LogicMapInputContext;
var LogicMapOutputContext = /** @class */ (function (_super) {
    __extends(LogicMapOutputContext, _super);
    function LogicMapOutputContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicMapOutputContext.prototype.logicRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicRefContext);
        }
        else {
            return this.getRuleContext(i, LogicRefContext);
        }
    };
    Object.defineProperty(LogicMapOutputContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicMapOutput; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicMapOutputContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicMapOutput) {
            listener.enterLogicMapOutput(this);
        }
    };
    // @Override
    LogicMapOutputContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicMapOutput) {
            listener.exitLogicMapOutput(this);
        }
    };
    // @Override
    LogicMapOutputContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicMapOutput) {
            return visitor.visitLogicMapOutput(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicMapOutputContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicMapOutputContext = LogicMapOutputContext;
var LogicModelUnitsContext = /** @class */ (function (_super) {
    __extends(LogicModelUnitsContext, _super);
    function LogicModelUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicModelUnitsContext.prototype.setCapacitance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetCapacitanceContext);
        }
        else {
            return this.getRuleContext(i, SetCapacitanceContext);
        }
    };
    LogicModelUnitsContext.prototype.setTime = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetTimeContext);
        }
        else {
            return this.getRuleContext(i, SetTimeContext);
        }
    };
    Object.defineProperty(LogicModelUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicModelUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicModelUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicModelUnits) {
            listener.enterLogicModelUnits(this);
        }
    };
    // @Override
    LogicModelUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicModelUnits) {
            listener.exitLogicModelUnits(this);
        }
    };
    // @Override
    LogicModelUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicModelUnits) {
            return visitor.visitLogicModelUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicModelUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicModelUnitsContext = LogicModelUnitsContext;
var LogicModelViewContext = /** @class */ (function (_super) {
    __extends(LogicModelViewContext, _super);
    function LogicModelViewContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicModelViewContext.prototype.viewNameDef = function () {
        return this.getRuleContext(0, ViewNameDefContext);
    };
    LogicModelViewContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    LogicModelViewContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    LogicModelViewContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(LogicModelViewContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicModelView; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicModelViewContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicModelView) {
            listener.enterLogicModelView(this);
        }
    };
    // @Override
    LogicModelViewContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicModelView) {
            listener.exitLogicModelView(this);
        }
    };
    // @Override
    LogicModelViewContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicModelView) {
            return visitor.visitLogicModelView(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicModelViewContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicModelViewContext = LogicModelViewContext;
var LogicNameDefContext = /** @class */ (function (_super) {
    __extends(LogicNameDefContext, _super);
    function LogicNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(LogicNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicNameDef) {
            listener.enterLogicNameDef(this);
        }
    };
    // @Override
    LogicNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicNameDef) {
            listener.exitLogicNameDef(this);
        }
    };
    // @Override
    LogicNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicNameDef) {
            return visitor.visitLogicNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicNameDefContext = LogicNameDefContext;
var LogicNameRefContext = /** @class */ (function (_super) {
    __extends(LogicNameRefContext, _super);
    function LogicNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(LogicNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicNameRef) {
            listener.enterLogicNameRef(this);
        }
    };
    // @Override
    LogicNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicNameRef) {
            listener.exitLogicNameRef(this);
        }
    };
    // @Override
    LogicNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicNameRef) {
            return visitor.visitLogicNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicNameRefContext = LogicNameRefContext;
var LogicOneOfContext = /** @class */ (function (_super) {
    __extends(LogicOneOfContext, _super);
    function LogicOneOfContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicOneOfContext.prototype.logicList = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicListContext);
        }
        else {
            return this.getRuleContext(i, LogicListContext);
        }
    };
    LogicOneOfContext.prototype.logicNameRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicNameRefContext);
        }
        else {
            return this.getRuleContext(i, LogicNameRefContext);
        }
    };
    Object.defineProperty(LogicOneOfContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicOneOf; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicOneOfContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicOneOf) {
            listener.enterLogicOneOf(this);
        }
    };
    // @Override
    LogicOneOfContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicOneOf) {
            listener.exitLogicOneOf(this);
        }
    };
    // @Override
    LogicOneOfContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicOneOf) {
            return visitor.visitLogicOneOf(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicOneOfContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicOneOfContext = LogicOneOfContext;
var LogicRefContext = /** @class */ (function (_super) {
    __extends(LogicRefContext, _super);
    function LogicRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicRefContext.prototype.logicNameRef = function () {
        return this.getRuleContext(0, LogicNameRefContext);
    };
    LogicRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(LogicRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicRefContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicRef) {
            listener.enterLogicRef(this);
        }
    };
    // @Override
    LogicRefContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicRef) {
            listener.exitLogicRef(this);
        }
    };
    // @Override
    LogicRefContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicRef) {
            return visitor.visitLogicRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicRefContext = LogicRefContext;
var LogicValueContext = /** @class */ (function (_super) {
    __extends(LogicValueContext, _super);
    function LogicValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    LogicValueContext.prototype.logicNameDef = function () {
        return this.getRuleContext(0, LogicNameDefContext);
    };
    LogicValueContext.prototype.booleanMap = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BooleanMapContext);
        }
        else {
            return this.getRuleContext(i, BooleanMapContext);
        }
    };
    LogicValueContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    LogicValueContext.prototype.compound = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CompoundContext);
        }
        else {
            return this.getRuleContext(i, CompoundContext);
        }
    };
    LogicValueContext.prototype.currentMap = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CurrentMapContext);
        }
        else {
            return this.getRuleContext(i, CurrentMapContext);
        }
    };
    LogicValueContext.prototype.dominates = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DominatesContext);
        }
        else {
            return this.getRuleContext(i, DominatesContext);
        }
    };
    LogicValueContext.prototype.isolated = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IsolatedContext);
        }
        else {
            return this.getRuleContext(i, IsolatedContext);
        }
    };
    LogicValueContext.prototype.logicMapInput = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicMapInputContext);
        }
        else {
            return this.getRuleContext(i, LogicMapInputContext);
        }
    };
    LogicValueContext.prototype.logicMapOutput = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicMapOutputContext);
        }
        else {
            return this.getRuleContext(i, LogicMapOutputContext);
        }
    };
    LogicValueContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    LogicValueContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    LogicValueContext.prototype.resolves = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ResolvesContext);
        }
        else {
            return this.getRuleContext(i, ResolvesContext);
        }
    };
    LogicValueContext.prototype.strong = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StrongContext);
        }
        else {
            return this.getRuleContext(i, StrongContext);
        }
    };
    LogicValueContext.prototype.voltageMap = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(VoltageMapContext);
        }
        else {
            return this.getRuleContext(i, VoltageMapContext);
        }
    };
    LogicValueContext.prototype.weak = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(WeakContext);
        }
        else {
            return this.getRuleContext(i, WeakContext);
        }
    };
    Object.defineProperty(LogicValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_logicValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LogicValueContext.prototype.enterRule = function (listener) {
        if (listener.enterLogicValue) {
            listener.enterLogicValue(this);
        }
    };
    // @Override
    LogicValueContext.prototype.exitRule = function (listener) {
        if (listener.exitLogicValue) {
            listener.exitLogicValue(this);
        }
    };
    // @Override
    LogicValueContext.prototype.accept = function (visitor) {
        if (visitor.visitLogicValue) {
            return visitor.visitLogicValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LogicValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LogicValueContext = LogicValueContext;
var LsbToMsbContext = /** @class */ (function (_super) {
    __extends(LsbToMsbContext, _super);
    function LsbToMsbContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(LsbToMsbContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_lsbToMsb; },
        enumerable: true,
        configurable: true
    });
    // @Override
    LsbToMsbContext.prototype.enterRule = function (listener) {
        if (listener.enterLsbToMsb) {
            listener.enterLsbToMsb(this);
        }
    };
    // @Override
    LsbToMsbContext.prototype.exitRule = function (listener) {
        if (listener.exitLsbToMsb) {
            listener.exitLsbToMsb(this);
        }
    };
    // @Override
    LsbToMsbContext.prototype.accept = function (visitor) {
        if (visitor.visitLsbToMsb) {
            return visitor.visitLsbToMsb(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return LsbToMsbContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.LsbToMsbContext = LsbToMsbContext;
var MantissaContext = /** @class */ (function (_super) {
    __extends(MantissaContext, _super);
    function MantissaContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MantissaContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(MantissaContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_mantissa; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MantissaContext.prototype.enterRule = function (listener) {
        if (listener.enterMantissa) {
            listener.enterMantissa(this);
        }
    };
    // @Override
    MantissaContext.prototype.exitRule = function (listener) {
        if (listener.exitMantissa) {
            listener.exitMantissa(this);
        }
    };
    // @Override
    MantissaContext.prototype.accept = function (visitor) {
        if (visitor.visitMantissa) {
            return visitor.visitMantissa(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MantissaContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MantissaContext = MantissaContext;
var MarkContext = /** @class */ (function (_super) {
    __extends(MarkContext, _super);
    function MarkContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MarkContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(MarkContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_mark; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MarkContext.prototype.enterRule = function (listener) {
        if (listener.enterMark) {
            listener.enterMark(this);
        }
    };
    // @Override
    MarkContext.prototype.exitRule = function (listener) {
        if (listener.exitMark) {
            listener.exitMark(this);
        }
    };
    // @Override
    MarkContext.prototype.accept = function (visitor) {
        if (visitor.visitMark) {
            return visitor.visitMark(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MarkContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MarkContext = MarkContext;
var MaskLayoutUnitsContext = /** @class */ (function (_super) {
    __extends(MaskLayoutUnitsContext, _super);
    function MaskLayoutUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MaskLayoutUnitsContext.prototype.setAngle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetAngleContext);
        }
        else {
            return this.getRuleContext(i, SetAngleContext);
        }
    };
    MaskLayoutUnitsContext.prototype.setCapacitance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetCapacitanceContext);
        }
        else {
            return this.getRuleContext(i, SetCapacitanceContext);
        }
    };
    MaskLayoutUnitsContext.prototype.setDistance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetDistanceContext);
        }
        else {
            return this.getRuleContext(i, SetDistanceContext);
        }
    };
    MaskLayoutUnitsContext.prototype.setTime = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetTimeContext);
        }
        else {
            return this.getRuleContext(i, SetTimeContext);
        }
    };
    Object.defineProperty(MaskLayoutUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_maskLayoutUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MaskLayoutUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterMaskLayoutUnits) {
            listener.enterMaskLayoutUnits(this);
        }
    };
    // @Override
    MaskLayoutUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitMaskLayoutUnits) {
            listener.exitMaskLayoutUnits(this);
        }
    };
    // @Override
    MaskLayoutUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitMaskLayoutUnits) {
            return visitor.visitMaskLayoutUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MaskLayoutUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MaskLayoutUnitsContext = MaskLayoutUnitsContext;
var MaskLayoutViewContext = /** @class */ (function (_super) {
    __extends(MaskLayoutViewContext, _super);
    function MaskLayoutViewContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MaskLayoutViewContext.prototype.viewNameDef = function () {
        return this.getRuleContext(0, ViewNameDefContext);
    };
    MaskLayoutViewContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    MaskLayoutViewContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    MaskLayoutViewContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(MaskLayoutViewContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_maskLayoutView; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MaskLayoutViewContext.prototype.enterRule = function (listener) {
        if (listener.enterMaskLayoutView) {
            listener.enterMaskLayoutView(this);
        }
    };
    // @Override
    MaskLayoutViewContext.prototype.exitRule = function (listener) {
        if (listener.exitMaskLayoutView) {
            listener.exitMaskLayoutView(this);
        }
    };
    // @Override
    MaskLayoutViewContext.prototype.accept = function (visitor) {
        if (visitor.visitMaskLayoutView) {
            return visitor.visitMaskLayoutView(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MaskLayoutViewContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MaskLayoutViewContext = MaskLayoutViewContext;
var MeasuredContext = /** @class */ (function (_super) {
    __extends(MeasuredContext, _super);
    function MeasuredContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(MeasuredContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_measured; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MeasuredContext.prototype.enterRule = function (listener) {
        if (listener.enterMeasured) {
            listener.enterMeasured(this);
        }
    };
    // @Override
    MeasuredContext.prototype.exitRule = function (listener) {
        if (listener.exitMeasured) {
            listener.exitMeasured(this);
        }
    };
    // @Override
    MeasuredContext.prototype.accept = function (visitor) {
        if (visitor.visitMeasured) {
            return visitor.visitMeasured(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MeasuredContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MeasuredContext = MeasuredContext;
var MeterContext = /** @class */ (function (_super) {
    __extends(MeterContext, _super);
    function MeterContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MeterContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(MeterContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_meter; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MeterContext.prototype.enterRule = function (listener) {
        if (listener.enterMeter) {
            listener.enterMeter(this);
        }
    };
    // @Override
    MeterContext.prototype.exitRule = function (listener) {
        if (listener.exitMeter) {
            listener.exitMeter(this);
        }
    };
    // @Override
    MeterContext.prototype.accept = function (visitor) {
        if (visitor.visitMeter) {
            return visitor.visitMeter(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MeterContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MeterContext = MeterContext;
var MiddleJustifyContext = /** @class */ (function (_super) {
    __extends(MiddleJustifyContext, _super);
    function MiddleJustifyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(MiddleJustifyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_middleJustify; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MiddleJustifyContext.prototype.enterRule = function (listener) {
        if (listener.enterMiddleJustify) {
            listener.enterMiddleJustify(this);
        }
    };
    // @Override
    MiddleJustifyContext.prototype.exitRule = function (listener) {
        if (listener.exitMiddleJustify) {
            listener.exitMiddleJustify(this);
        }
    };
    // @Override
    MiddleJustifyContext.prototype.accept = function (visitor) {
        if (visitor.visitMiddleJustify) {
            return visitor.visitMiddleJustify(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MiddleJustifyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MiddleJustifyContext = MiddleJustifyContext;
var MinimalWidthContext = /** @class */ (function (_super) {
    __extends(MinimalWidthContext, _super);
    function MinimalWidthContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(MinimalWidthContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_minimalWidth; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MinimalWidthContext.prototype.enterRule = function (listener) {
        if (listener.enterMinimalWidth) {
            listener.enterMinimalWidth(this);
        }
    };
    // @Override
    MinimalWidthContext.prototype.exitRule = function (listener) {
        if (listener.exitMinimalWidth) {
            listener.exitMinimalWidth(this);
        }
    };
    // @Override
    MinimalWidthContext.prototype.accept = function (visitor) {
        if (visitor.visitMinimalWidth) {
            return visitor.visitMinimalWidth(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MinimalWidthContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MinimalWidthContext = MinimalWidthContext;
var MinimumStringLengthContext = /** @class */ (function (_super) {
    __extends(MinimumStringLengthContext, _super);
    function MinimumStringLengthContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MinimumStringLengthContext.prototype.substringLength = function () {
        return this.getRuleContext(0, SubstringLengthContext);
    };
    Object.defineProperty(MinimumStringLengthContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_minimumStringLength; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MinimumStringLengthContext.prototype.enterRule = function (listener) {
        if (listener.enterMinimumStringLength) {
            listener.enterMinimumStringLength(this);
        }
    };
    // @Override
    MinimumStringLengthContext.prototype.exitRule = function (listener) {
        if (listener.exitMinimumStringLength) {
            listener.exitMinimumStringLength(this);
        }
    };
    // @Override
    MinimumStringLengthContext.prototype.accept = function (visitor) {
        if (visitor.visitMinimumStringLength) {
            return visitor.visitMinimumStringLength(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MinimumStringLengthContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MinimumStringLengthContext = MinimumStringLengthContext;
var MiNoMaxContext = /** @class */ (function (_super) {
    __extends(MiNoMaxContext, _super);
    function MiNoMaxContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MiNoMaxContext.prototype.miNoMaxValue = function () {
        return this.getRuleContext(0, MiNoMaxValueContext);
    };
    Object.defineProperty(MiNoMaxContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_miNoMax; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MiNoMaxContext.prototype.enterRule = function (listener) {
        if (listener.enterMiNoMax) {
            listener.enterMiNoMax(this);
        }
    };
    // @Override
    MiNoMaxContext.prototype.exitRule = function (listener) {
        if (listener.exitMiNoMax) {
            listener.exitMiNoMax(this);
        }
    };
    // @Override
    MiNoMaxContext.prototype.accept = function (visitor) {
        if (visitor.visitMiNoMax) {
            return visitor.visitMiNoMax(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MiNoMaxContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MiNoMaxContext = MiNoMaxContext;
var MiNoMaxValueContext = /** @class */ (function (_super) {
    __extends(MiNoMaxValueContext, _super);
    function MiNoMaxValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MiNoMaxValueContext.prototype.numberValue = function () {
        return this.tryGetRuleContext(0, NumberValueContext);
    };
    MiNoMaxValueContext.prototype.mnm = function () {
        return this.tryGetRuleContext(0, MnmContext);
    };
    Object.defineProperty(MiNoMaxValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_miNoMaxValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MiNoMaxValueContext.prototype.enterRule = function (listener) {
        if (listener.enterMiNoMaxValue) {
            listener.enterMiNoMaxValue(this);
        }
    };
    // @Override
    MiNoMaxValueContext.prototype.exitRule = function (listener) {
        if (listener.exitMiNoMaxValue) {
            listener.exitMiNoMaxValue(this);
        }
    };
    // @Override
    MiNoMaxValueContext.prototype.accept = function (visitor) {
        if (visitor.visitMiNoMaxValue) {
            return visitor.visitMiNoMaxValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MiNoMaxValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MiNoMaxValueContext = MiNoMaxValueContext;
var MinuendContext = /** @class */ (function (_super) {
    __extends(MinuendContext, _super);
    function MinuendContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MinuendContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(MinuendContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_minuend; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MinuendContext.prototype.enterRule = function (listener) {
        if (listener.enterMinuend) {
            listener.enterMinuend(this);
        }
    };
    // @Override
    MinuendContext.prototype.exitRule = function (listener) {
        if (listener.exitMinuend) {
            listener.exitMinuend(this);
        }
    };
    // @Override
    MinuendContext.prototype.accept = function (visitor) {
        if (visitor.visitMinuend) {
            return visitor.visitMinuend(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MinuendContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MinuendContext = MinuendContext;
var MinuteNumberContext = /** @class */ (function (_super) {
    __extends(MinuteNumberContext, _super);
    function MinuteNumberContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MinuteNumberContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(MinuteNumberContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_minuteNumber; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MinuteNumberContext.prototype.enterRule = function (listener) {
        if (listener.enterMinuteNumber) {
            listener.enterMinuteNumber(this);
        }
    };
    // @Override
    MinuteNumberContext.prototype.exitRule = function (listener) {
        if (listener.exitMinuteNumber) {
            listener.exitMinuteNumber(this);
        }
    };
    // @Override
    MinuteNumberContext.prototype.accept = function (visitor) {
        if (visitor.visitMinuteNumber) {
            return visitor.visitMinuteNumber(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MinuteNumberContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MinuteNumberContext = MinuteNumberContext;
var MixedDirectionContext = /** @class */ (function (_super) {
    __extends(MixedDirectionContext, _super);
    function MixedDirectionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(MixedDirectionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_mixedDirection; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MixedDirectionContext.prototype.enterRule = function (listener) {
        if (listener.enterMixedDirection) {
            listener.enterMixedDirection(this);
        }
    };
    // @Override
    MixedDirectionContext.prototype.exitRule = function (listener) {
        if (listener.exitMixedDirection) {
            listener.exitMixedDirection(this);
        }
    };
    // @Override
    MixedDirectionContext.prototype.accept = function (visitor) {
        if (visitor.visitMixedDirection) {
            return visitor.visitMixedDirection(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MixedDirectionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MixedDirectionContext = MixedDirectionContext;
var MnmContext = /** @class */ (function (_super) {
    __extends(MnmContext, _super);
    function MnmContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MnmContext.prototype.numberValue = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NumberValueContext);
        }
        else {
            return this.getRuleContext(i, NumberValueContext);
        }
    };
    MnmContext.prototype.undefined = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UndefinedContext);
        }
        else {
            return this.getRuleContext(i, UndefinedContext);
        }
    };
    MnmContext.prototype.unconstrained = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UnconstrainedContext);
        }
        else {
            return this.getRuleContext(i, UnconstrainedContext);
        }
    };
    Object.defineProperty(MnmContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_mnm; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MnmContext.prototype.enterRule = function (listener) {
        if (listener.enterMnm) {
            listener.enterMnm(this);
        }
    };
    // @Override
    MnmContext.prototype.exitRule = function (listener) {
        if (listener.exitMnm) {
            listener.exitMnm(this);
        }
    };
    // @Override
    MnmContext.prototype.accept = function (visitor) {
        if (visitor.visitMnm) {
            return visitor.visitMnm(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MnmContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MnmContext = MnmContext;
var MoleContext = /** @class */ (function (_super) {
    __extends(MoleContext, _super);
    function MoleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MoleContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(MoleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_mole; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MoleContext.prototype.enterRule = function (listener) {
        if (listener.enterMole) {
            listener.enterMole(this);
        }
    };
    // @Override
    MoleContext.prototype.exitRule = function (listener) {
        if (listener.exitMole) {
            listener.exitMole(this);
        }
    };
    // @Override
    MoleContext.prototype.accept = function (visitor) {
        if (visitor.visitMole) {
            return visitor.visitMole(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MoleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MoleContext = MoleContext;
var MonthNumberContext = /** @class */ (function (_super) {
    __extends(MonthNumberContext, _super);
    function MonthNumberContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MonthNumberContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(MonthNumberContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_monthNumber; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MonthNumberContext.prototype.enterRule = function (listener) {
        if (listener.enterMonthNumber) {
            listener.enterMonthNumber(this);
        }
    };
    // @Override
    MonthNumberContext.prototype.exitRule = function (listener) {
        if (listener.exitMonthNumber) {
            listener.exitMonthNumber(this);
        }
    };
    // @Override
    MonthNumberContext.prototype.accept = function (visitor) {
        if (visitor.visitMonthNumber) {
            return visitor.visitMonthNumber(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MonthNumberContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MonthNumberContext = MonthNumberContext;
var MsbToLsbContext = /** @class */ (function (_super) {
    __extends(MsbToLsbContext, _super);
    function MsbToLsbContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(MsbToLsbContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_msbToLsb; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MsbToLsbContext.prototype.enterRule = function (listener) {
        if (listener.enterMsbToLsb) {
            listener.enterMsbToLsb(this);
        }
    };
    // @Override
    MsbToLsbContext.prototype.exitRule = function (listener) {
        if (listener.exitMsbToLsb) {
            listener.exitMsbToLsb(this);
        }
    };
    // @Override
    MsbToLsbContext.prototype.accept = function (visitor) {
        if (visitor.visitMsbToLsb) {
            return visitor.visitMsbToLsb(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MsbToLsbContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MsbToLsbContext = MsbToLsbContext;
var MustJoinContext = /** @class */ (function (_super) {
    __extends(MustJoinContext, _super);
    function MustJoinContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    MustJoinContext.prototype.interfaceJoined = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterfaceJoinedContext);
        }
        else {
            return this.getRuleContext(i, InterfaceJoinedContext);
        }
    };
    MustJoinContext.prototype.portRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortRefContext);
        }
        else {
            return this.getRuleContext(i, PortRefContext);
        }
    };
    MustJoinContext.prototype.weakJoined = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(WeakJoinedContext);
        }
        else {
            return this.getRuleContext(i, WeakJoinedContext);
        }
    };
    Object.defineProperty(MustJoinContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_mustJoin; },
        enumerable: true,
        configurable: true
    });
    // @Override
    MustJoinContext.prototype.enterRule = function (listener) {
        if (listener.enterMustJoin) {
            listener.enterMustJoin(this);
        }
    };
    // @Override
    MustJoinContext.prototype.exitRule = function (listener) {
        if (listener.exitMustJoin) {
            listener.exitMustJoin(this);
        }
    };
    // @Override
    MustJoinContext.prototype.accept = function (visitor) {
        if (visitor.visitMustJoin) {
            return visitor.visitMustJoin(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return MustJoinContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.MustJoinContext = MustJoinContext;
var NameAliasContext = /** @class */ (function (_super) {
    __extends(NameAliasContext, _super);
    function NameAliasContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NameAliasContext.prototype.originalName = function () {
        return this.getRuleContext(0, OriginalNameContext);
    };
    NameAliasContext.prototype.displayName = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameContext);
        }
    };
    NameAliasContext.prototype.generated = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GeneratedContext);
        }
        else {
            return this.getRuleContext(i, GeneratedContext);
        }
    };
    NameAliasContext.prototype.nameStructure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameStructureContext);
        }
        else {
            return this.getRuleContext(i, NameStructureContext);
        }
    };
    Object.defineProperty(NameAliasContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_nameAlias; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NameAliasContext.prototype.enterRule = function (listener) {
        if (listener.enterNameAlias) {
            listener.enterNameAlias(this);
        }
    };
    // @Override
    NameAliasContext.prototype.exitRule = function (listener) {
        if (listener.exitNameAlias) {
            listener.exitNameAlias(this);
        }
    };
    // @Override
    NameAliasContext.prototype.accept = function (visitor) {
        if (visitor.visitNameAlias) {
            return visitor.visitNameAlias(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NameAliasContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NameAliasContext = NameAliasContext;
var NameCaseSensitivityContext = /** @class */ (function (_super) {
    __extends(NameCaseSensitivityContext, _super);
    function NameCaseSensitivityContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NameCaseSensitivityContext.prototype.clusterConfigurationNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterConfigurationNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, ClusterConfigurationNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.clusterNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, ClusterNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.designHierarchyNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignHierarchyNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, DesignHierarchyNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.designNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, DesignNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.documentationNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, DocumentationNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.figureGroupNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureGroupNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, FigureGroupNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.forFrameIndexNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ForFrameIndexNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, ForFrameIndexNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.frameNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FrameNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, FrameNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.globalPortNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.hotspotNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(HotspotNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, HotspotNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.implementationNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.instanceNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, InstanceNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.interconnectNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, InterconnectNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.libraryNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LibraryNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, LibraryNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.libraryObjectNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LibraryObjectNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, LibraryObjectNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.localPortGroupNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LocalPortGroupNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, LocalPortGroupNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.pageNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, PageNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.parameterNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ParameterNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, ParameterNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.portNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, PortNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.propertyNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, PropertyNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.signalGroupNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalGroupNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, SignalGroupNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.signalNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, SignalNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.viewGroupNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewGroupNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, ViewGroupNameCaseSensitiveContext);
        }
    };
    NameCaseSensitivityContext.prototype.viewNameCaseSensitive = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewNameCaseSensitiveContext);
        }
        else {
            return this.getRuleContext(i, ViewNameCaseSensitiveContext);
        }
    };
    Object.defineProperty(NameCaseSensitivityContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_nameCaseSensitivity; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NameCaseSensitivityContext.prototype.enterRule = function (listener) {
        if (listener.enterNameCaseSensitivity) {
            listener.enterNameCaseSensitivity(this);
        }
    };
    // @Override
    NameCaseSensitivityContext.prototype.exitRule = function (listener) {
        if (listener.exitNameCaseSensitivity) {
            listener.exitNameCaseSensitivity(this);
        }
    };
    // @Override
    NameCaseSensitivityContext.prototype.accept = function (visitor) {
        if (visitor.visitNameCaseSensitivity) {
            return visitor.visitNameCaseSensitivity(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NameCaseSensitivityContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NameCaseSensitivityContext = NameCaseSensitivityContext;
var NameDefContext = /** @class */ (function (_super) {
    __extends(NameDefContext, _super);
    function NameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NameDefContext.prototype.IDENTIFIER = function () { return this.getToken(EDIF300Parser.IDENTIFIER, 0); };
    Object.defineProperty(NameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_nameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterNameDef) {
            listener.enterNameDef(this);
        }
    };
    // @Override
    NameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitNameDef) {
            listener.exitNameDef(this);
        }
    };
    // @Override
    NameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitNameDef) {
            return visitor.visitNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NameDefContext = NameDefContext;
var NameDimensionContext = /** @class */ (function (_super) {
    __extends(NameDimensionContext, _super);
    function NameDimensionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NameDimensionContext.prototype.nameDimensionStructure = function () {
        return this.getRuleContext(0, NameDimensionStructureContext);
    };
    NameDimensionContext.prototype.bitOrder = function () {
        return this.tryGetRuleContext(0, BitOrderContext);
    };
    Object.defineProperty(NameDimensionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_nameDimension; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NameDimensionContext.prototype.enterRule = function (listener) {
        if (listener.enterNameDimension) {
            listener.enterNameDimension(this);
        }
    };
    // @Override
    NameDimensionContext.prototype.exitRule = function (listener) {
        if (listener.exitNameDimension) {
            listener.exitNameDimension(this);
        }
    };
    // @Override
    NameDimensionContext.prototype.accept = function (visitor) {
        if (visitor.visitNameDimension) {
            return visitor.visitNameDimension(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NameDimensionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NameDimensionContext = NameDimensionContext;
var NameDimensionStructureContext = /** @class */ (function (_super) {
    __extends(NameDimensionStructureContext, _super);
    function NameDimensionStructureContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NameDimensionStructureContext.prototype.complementedName = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ComplementedNameContext);
        }
        else {
            return this.getRuleContext(i, ComplementedNameContext);
        }
    };
    NameDimensionStructureContext.prototype.complexName = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ComplexNameContext);
        }
        else {
            return this.getRuleContext(i, ComplexNameContext);
        }
    };
    NameDimensionStructureContext.prototype.integerValue = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerValueContext);
        }
        else {
            return this.getRuleContext(i, IntegerValueContext);
        }
    };
    NameDimensionStructureContext.prototype.sequence = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SequenceContext);
        }
        else {
            return this.getRuleContext(i, SequenceContext);
        }
    };
    NameDimensionStructureContext.prototype.simpleName = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SimpleNameContext);
        }
        else {
            return this.getRuleContext(i, SimpleNameContext);
        }
    };
    Object.defineProperty(NameDimensionStructureContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_nameDimensionStructure; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NameDimensionStructureContext.prototype.enterRule = function (listener) {
        if (listener.enterNameDimensionStructure) {
            listener.enterNameDimensionStructure(this);
        }
    };
    // @Override
    NameDimensionStructureContext.prototype.exitRule = function (listener) {
        if (listener.exitNameDimensionStructure) {
            listener.exitNameDimensionStructure(this);
        }
    };
    // @Override
    NameDimensionStructureContext.prototype.accept = function (visitor) {
        if (visitor.visitNameDimensionStructure) {
            return visitor.visitNameDimensionStructure(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NameDimensionStructureContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NameDimensionStructureContext = NameDimensionStructureContext;
var NameInformationContext = /** @class */ (function (_super) {
    __extends(NameInformationContext, _super);
    function NameInformationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NameInformationContext.prototype.primaryName = function () {
        return this.getRuleContext(0, PrimaryNameContext);
    };
    NameInformationContext.prototype.nameAlias = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameAliasContext);
        }
        else {
            return this.getRuleContext(i, NameAliasContext);
        }
    };
    Object.defineProperty(NameInformationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_nameInformation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NameInformationContext.prototype.enterRule = function (listener) {
        if (listener.enterNameInformation) {
            listener.enterNameInformation(this);
        }
    };
    // @Override
    NameInformationContext.prototype.exitRule = function (listener) {
        if (listener.exitNameInformation) {
            listener.exitNameInformation(this);
        }
    };
    // @Override
    NameInformationContext.prototype.accept = function (visitor) {
        if (visitor.visitNameInformation) {
            return visitor.visitNameInformation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NameInformationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NameInformationContext = NameInformationContext;
var NamePartSeparatorContext = /** @class */ (function (_super) {
    __extends(NamePartSeparatorContext, _super);
    function NamePartSeparatorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NamePartSeparatorContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(NamePartSeparatorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_namePartSeparator; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NamePartSeparatorContext.prototype.enterRule = function (listener) {
        if (listener.enterNamePartSeparator) {
            listener.enterNamePartSeparator(this);
        }
    };
    // @Override
    NamePartSeparatorContext.prototype.exitRule = function (listener) {
        if (listener.exitNamePartSeparator) {
            listener.exitNamePartSeparator(this);
        }
    };
    // @Override
    NamePartSeparatorContext.prototype.accept = function (visitor) {
        if (visitor.visitNamePartSeparator) {
            return visitor.visitNamePartSeparator(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NamePartSeparatorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NamePartSeparatorContext = NamePartSeparatorContext;
var NameRefContext = /** @class */ (function (_super) {
    __extends(NameRefContext, _super);
    function NameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NameRefContext.prototype.IDENTIFIER = function () { return this.getToken(EDIF300Parser.IDENTIFIER, 0); };
    Object.defineProperty(NameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_nameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterNameRef) {
            listener.enterNameRef(this);
        }
    };
    // @Override
    NameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitNameRef) {
            listener.exitNameRef(this);
        }
    };
    // @Override
    NameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitNameRef) {
            return visitor.visitNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NameRefContext = NameRefContext;
var NameStructureContext = /** @class */ (function (_super) {
    __extends(NameStructureContext, _super);
    function NameStructureContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NameStructureContext.prototype.simpleName = function () {
        return this.tryGetRuleContext(0, SimpleNameContext);
    };
    NameStructureContext.prototype.complexName = function () {
        return this.tryGetRuleContext(0, ComplexNameContext);
    };
    NameStructureContext.prototype.complementedName = function () {
        return this.tryGetRuleContext(0, ComplementedNameContext);
    };
    Object.defineProperty(NameStructureContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_nameStructure; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NameStructureContext.prototype.enterRule = function (listener) {
        if (listener.enterNameStructure) {
            listener.enterNameStructure(this);
        }
    };
    // @Override
    NameStructureContext.prototype.exitRule = function (listener) {
        if (listener.exitNameStructure) {
            listener.exitNameStructure(this);
        }
    };
    // @Override
    NameStructureContext.prototype.accept = function (visitor) {
        if (visitor.visitNameStructure) {
            return visitor.visitNameStructure(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NameStructureContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NameStructureContext = NameStructureContext;
var NarrowPortContext = /** @class */ (function (_super) {
    __extends(NarrowPortContext, _super);
    function NarrowPortContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(NarrowPortContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_narrowPort; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NarrowPortContext.prototype.enterRule = function (listener) {
        if (listener.enterNarrowPort) {
            listener.enterNarrowPort(this);
        }
    };
    // @Override
    NarrowPortContext.prototype.exitRule = function (listener) {
        if (listener.exitNarrowPort) {
            listener.exitNarrowPort(this);
        }
    };
    // @Override
    NarrowPortContext.prototype.accept = function (visitor) {
        if (visitor.visitNarrowPort) {
            return visitor.visitNarrowPort(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NarrowPortContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NarrowPortContext = NarrowPortContext;
var NarrowWireContext = /** @class */ (function (_super) {
    __extends(NarrowWireContext, _super);
    function NarrowWireContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(NarrowWireContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_narrowWire; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NarrowWireContext.prototype.enterRule = function (listener) {
        if (listener.enterNarrowWire) {
            listener.enterNarrowWire(this);
        }
    };
    // @Override
    NarrowWireContext.prototype.exitRule = function (listener) {
        if (listener.exitNarrowWire) {
            listener.exitNarrowWire(this);
        }
    };
    // @Override
    NarrowWireContext.prototype.accept = function (visitor) {
        if (visitor.visitNarrowWire) {
            return visitor.visitNarrowWire(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NarrowWireContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NarrowWireContext = NarrowWireContext;
var NoHotspotGridContext = /** @class */ (function (_super) {
    __extends(NoHotspotGridContext, _super);
    function NoHotspotGridContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(NoHotspotGridContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_noHotspotGrid; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NoHotspotGridContext.prototype.enterRule = function (listener) {
        if (listener.enterNoHotspotGrid) {
            listener.enterNoHotspotGrid(this);
        }
    };
    // @Override
    NoHotspotGridContext.prototype.exitRule = function (listener) {
        if (listener.exitNoHotspotGrid) {
            listener.exitNoHotspotGrid(this);
        }
    };
    // @Override
    NoHotspotGridContext.prototype.accept = function (visitor) {
        if (visitor.visitNoHotspotGrid) {
            return visitor.visitNoHotspotGrid(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NoHotspotGridContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NoHotspotGridContext = NoHotspotGridContext;
var NominalHotspotGridContext = /** @class */ (function (_super) {
    __extends(NominalHotspotGridContext, _super);
    function NominalHotspotGridContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NominalHotspotGridContext.prototype.lengthValue = function () {
        return this.getRuleContext(0, LengthValueContext);
    };
    Object.defineProperty(NominalHotspotGridContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_nominalHotspotGrid; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NominalHotspotGridContext.prototype.enterRule = function (listener) {
        if (listener.enterNominalHotspotGrid) {
            listener.enterNominalHotspotGrid(this);
        }
    };
    // @Override
    NominalHotspotGridContext.prototype.exitRule = function (listener) {
        if (listener.exitNominalHotspotGrid) {
            listener.exitNominalHotspotGrid(this);
        }
    };
    // @Override
    NominalHotspotGridContext.prototype.accept = function (visitor) {
        if (visitor.visitNominalHotspotGrid) {
            return visitor.visitNominalHotspotGrid(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NominalHotspotGridContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NominalHotspotGridContext = NominalHotspotGridContext;
var NonPermutableContext = /** @class */ (function (_super) {
    __extends(NonPermutableContext, _super);
    function NonPermutableContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NonPermutableContext.prototype.permutable = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PermutableContext);
        }
        else {
            return this.getRuleContext(i, PermutableContext);
        }
    };
    NonPermutableContext.prototype.portRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortRefContext);
        }
        else {
            return this.getRuleContext(i, PortRefContext);
        }
    };
    Object.defineProperty(NonPermutableContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_nonPermutable; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NonPermutableContext.prototype.enterRule = function (listener) {
        if (listener.enterNonPermutable) {
            listener.enterNonPermutable(this);
        }
    };
    // @Override
    NonPermutableContext.prototype.exitRule = function (listener) {
        if (listener.exitNonPermutable) {
            listener.exitNonPermutable(this);
        }
    };
    // @Override
    NonPermutableContext.prototype.accept = function (visitor) {
        if (visitor.visitNonPermutable) {
            return visitor.visitNonPermutable(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NonPermutableContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NonPermutableContext = NonPermutableContext;
var Not_Context = /** @class */ (function (_super) {
    __extends(Not_Context, _super);
    function Not_Context(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Not_Context.prototype.booleanExpression = function () {
        return this.getRuleContext(0, BooleanExpressionContext);
    };
    Object.defineProperty(Not_Context.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_not_; },
        enumerable: true,
        configurable: true
    });
    // @Override
    Not_Context.prototype.enterRule = function (listener) {
        if (listener.enterNot_) {
            listener.enterNot_(this);
        }
    };
    // @Override
    Not_Context.prototype.exitRule = function (listener) {
        if (listener.exitNot_) {
            listener.exitNot_(this);
        }
    };
    // @Override
    Not_Context.prototype.accept = function (visitor) {
        if (visitor.visitNot_) {
            return visitor.visitNot_(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return Not_Context;
}(ParserRuleContext_1.ParserRuleContext));
exports.Not_Context = Not_Context;
var NotInheritedContext = /** @class */ (function (_super) {
    __extends(NotInheritedContext, _super);
    function NotInheritedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(NotInheritedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_notInherited; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NotInheritedContext.prototype.enterRule = function (listener) {
        if (listener.enterNotInherited) {
            listener.enterNotInherited(this);
        }
    };
    // @Override
    NotInheritedContext.prototype.exitRule = function (listener) {
        if (listener.exitNotInherited) {
            listener.exitNotInherited(this);
        }
    };
    // @Override
    NotInheritedContext.prototype.accept = function (visitor) {
        if (visitor.visitNotInherited) {
            return visitor.visitNotInherited(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NotInheritedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NotInheritedContext = NotInheritedContext;
var NumberContext = /** @class */ (function (_super) {
    __extends(NumberContext, _super);
    function NumberContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NumberContext.prototype.numberExpression = function () {
        return this.getRuleContext(0, NumberExpressionContext);
    };
    Object.defineProperty(NumberContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_number; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NumberContext.prototype.enterRule = function (listener) {
        if (listener.enterNumber) {
            listener.enterNumber(this);
        }
    };
    // @Override
    NumberContext.prototype.exitRule = function (listener) {
        if (listener.exitNumber) {
            listener.exitNumber(this);
        }
    };
    // @Override
    NumberContext.prototype.accept = function (visitor) {
        if (visitor.visitNumber) {
            return visitor.visitNumber(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NumberContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NumberContext = NumberContext;
var NumberExpressionContext = /** @class */ (function (_super) {
    __extends(NumberExpressionContext, _super);
    function NumberExpressionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NumberExpressionContext.prototype.numberValue = function () {
        return this.tryGetRuleContext(0, NumberValueContext);
    };
    NumberExpressionContext.prototype.numberParameterRef = function () {
        return this.tryGetRuleContext(0, NumberParameterRefContext);
    };
    Object.defineProperty(NumberExpressionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_numberExpression; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NumberExpressionContext.prototype.enterRule = function (listener) {
        if (listener.enterNumberExpression) {
            listener.enterNumberExpression(this);
        }
    };
    // @Override
    NumberExpressionContext.prototype.exitRule = function (listener) {
        if (listener.exitNumberExpression) {
            listener.exitNumberExpression(this);
        }
    };
    // @Override
    NumberExpressionContext.prototype.accept = function (visitor) {
        if (visitor.visitNumberExpression) {
            return visitor.visitNumberExpression(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NumberExpressionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NumberExpressionContext = NumberExpressionContext;
var NumberOfBasicUnitsContext = /** @class */ (function (_super) {
    __extends(NumberOfBasicUnitsContext, _super);
    function NumberOfBasicUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NumberOfBasicUnitsContext.prototype.scaledInteger = function () {
        return this.getRuleContext(0, ScaledIntegerContext);
    };
    Object.defineProperty(NumberOfBasicUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_numberOfBasicUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NumberOfBasicUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterNumberOfBasicUnits) {
            listener.enterNumberOfBasicUnits(this);
        }
    };
    // @Override
    NumberOfBasicUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitNumberOfBasicUnits) {
            listener.exitNumberOfBasicUnits(this);
        }
    };
    // @Override
    NumberOfBasicUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitNumberOfBasicUnits) {
            return visitor.visitNumberOfBasicUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NumberOfBasicUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NumberOfBasicUnitsContext = NumberOfBasicUnitsContext;
var NumberOfNewUnitsContext = /** @class */ (function (_super) {
    __extends(NumberOfNewUnitsContext, _super);
    function NumberOfNewUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NumberOfNewUnitsContext.prototype.scaledInteger = function () {
        return this.getRuleContext(0, ScaledIntegerContext);
    };
    Object.defineProperty(NumberOfNewUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_numberOfNewUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NumberOfNewUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterNumberOfNewUnits) {
            listener.enterNumberOfNewUnits(this);
        }
    };
    // @Override
    NumberOfNewUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitNumberOfNewUnits) {
            listener.exitNumberOfNewUnits(this);
        }
    };
    // @Override
    NumberOfNewUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitNumberOfNewUnits) {
            return visitor.visitNumberOfNewUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NumberOfNewUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NumberOfNewUnitsContext = NumberOfNewUnitsContext;
var NumberParameterContext = /** @class */ (function (_super) {
    __extends(NumberParameterContext, _super);
    function NumberParameterContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NumberParameterContext.prototype.parameterNameDef = function () {
        return this.getRuleContext(0, ParameterNameDefContext);
    };
    NumberParameterContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    NumberParameterContext.prototype.number = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NumberContext);
        }
        else {
            return this.getRuleContext(i, NumberContext);
        }
    };
    Object.defineProperty(NumberParameterContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_numberParameter; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NumberParameterContext.prototype.enterRule = function (listener) {
        if (listener.enterNumberParameter) {
            listener.enterNumberParameter(this);
        }
    };
    // @Override
    NumberParameterContext.prototype.exitRule = function (listener) {
        if (listener.exitNumberParameter) {
            listener.exitNumberParameter(this);
        }
    };
    // @Override
    NumberParameterContext.prototype.accept = function (visitor) {
        if (visitor.visitNumberParameter) {
            return visitor.visitNumberParameter(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NumberParameterContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NumberParameterContext = NumberParameterContext;
var NumberParameterAssignContext = /** @class */ (function (_super) {
    __extends(NumberParameterAssignContext, _super);
    function NumberParameterAssignContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NumberParameterAssignContext.prototype.parameterNameRef = function () {
        return this.getRuleContext(0, ParameterNameRefContext);
    };
    NumberParameterAssignContext.prototype.numberExpression = function () {
        return this.getRuleContext(0, NumberExpressionContext);
    };
    Object.defineProperty(NumberParameterAssignContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_numberParameterAssign; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NumberParameterAssignContext.prototype.enterRule = function (listener) {
        if (listener.enterNumberParameterAssign) {
            listener.enterNumberParameterAssign(this);
        }
    };
    // @Override
    NumberParameterAssignContext.prototype.exitRule = function (listener) {
        if (listener.exitNumberParameterAssign) {
            listener.exitNumberParameterAssign(this);
        }
    };
    // @Override
    NumberParameterAssignContext.prototype.accept = function (visitor) {
        if (visitor.visitNumberParameterAssign) {
            return visitor.visitNumberParameterAssign(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NumberParameterAssignContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NumberParameterAssignContext = NumberParameterAssignContext;
var NumberParameterRefContext = /** @class */ (function (_super) {
    __extends(NumberParameterRefContext, _super);
    function NumberParameterRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NumberParameterRefContext.prototype.parameterNameRef = function () {
        return this.getRuleContext(0, ParameterNameRefContext);
    };
    Object.defineProperty(NumberParameterRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_numberParameterRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NumberParameterRefContext.prototype.enterRule = function (listener) {
        if (listener.enterNumberParameterRef) {
            listener.enterNumberParameterRef(this);
        }
    };
    // @Override
    NumberParameterRefContext.prototype.exitRule = function (listener) {
        if (listener.exitNumberParameterRef) {
            listener.exitNumberParameterRef(this);
        }
    };
    // @Override
    NumberParameterRefContext.prototype.accept = function (visitor) {
        if (visitor.visitNumberParameterRef) {
            return visitor.visitNumberParameterRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NumberParameterRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NumberParameterRefContext = NumberParameterRefContext;
var NumberPointContext = /** @class */ (function (_super) {
    __extends(NumberPointContext, _super);
    function NumberPointContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NumberPointContext.prototype.xNumberValue = function () {
        return this.getRuleContext(0, XNumberValueContext);
    };
    NumberPointContext.prototype.yNumberValue = function () {
        return this.getRuleContext(0, YNumberValueContext);
    };
    Object.defineProperty(NumberPointContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_numberPoint; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NumberPointContext.prototype.enterRule = function (listener) {
        if (listener.enterNumberPoint) {
            listener.enterNumberPoint(this);
        }
    };
    // @Override
    NumberPointContext.prototype.exitRule = function (listener) {
        if (listener.exitNumberPoint) {
            listener.exitNumberPoint(this);
        }
    };
    // @Override
    NumberPointContext.prototype.accept = function (visitor) {
        if (visitor.visitNumberPoint) {
            return visitor.visitNumberPoint(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NumberPointContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NumberPointContext = NumberPointContext;
var NumberValueContext = /** @class */ (function (_super) {
    __extends(NumberValueContext, _super);
    function NumberValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NumberValueContext.prototype.scaledInteger = function () {
        return this.getRuleContext(0, ScaledIntegerContext);
    };
    Object.defineProperty(NumberValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_numberValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NumberValueContext.prototype.enterRule = function (listener) {
        if (listener.enterNumberValue) {
            listener.enterNumberValue(this);
        }
    };
    // @Override
    NumberValueContext.prototype.exitRule = function (listener) {
        if (listener.exitNumberValue) {
            listener.exitNumberValue(this);
        }
    };
    // @Override
    NumberValueContext.prototype.accept = function (visitor) {
        if (visitor.visitNumberValue) {
            return visitor.visitNumberValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NumberValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NumberValueContext = NumberValueContext;
var NumeratorContext = /** @class */ (function (_super) {
    __extends(NumeratorContext, _super);
    function NumeratorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    NumeratorContext.prototype.integerValue = function () {
        return this.getRuleContext(0, IntegerValueContext);
    };
    Object.defineProperty(NumeratorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_numerator; },
        enumerable: true,
        configurable: true
    });
    // @Override
    NumeratorContext.prototype.enterRule = function (listener) {
        if (listener.enterNumerator) {
            listener.enterNumerator(this);
        }
    };
    // @Override
    NumeratorContext.prototype.exitRule = function (listener) {
        if (listener.exitNumerator) {
            listener.exitNumerator(this);
        }
    };
    // @Override
    NumeratorContext.prototype.accept = function (visitor) {
        if (visitor.visitNumerator) {
            return visitor.visitNumerator(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return NumeratorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.NumeratorContext = NumeratorContext;
var OccurrenceAnnotateContext = /** @class */ (function (_super) {
    __extends(OccurrenceAnnotateContext, _super);
    function OccurrenceAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OccurrenceAnnotateContext.prototype.extendInstanceDef = function () {
        return this.tryGetRuleContext(0, ExtendInstanceDefContext);
    };
    OccurrenceAnnotateContext.prototype.extendInstanceMemberDef = function () {
        return this.tryGetRuleContext(0, ExtendInstanceMemberDefContext);
    };
    OccurrenceAnnotateContext.prototype.cellPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, CellPropertyOverrideContext);
        }
    };
    OccurrenceAnnotateContext.prototype.clusterPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, ClusterPropertyOverrideContext);
        }
    };
    OccurrenceAnnotateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    OccurrenceAnnotateContext.prototype.designator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorContext);
        }
        else {
            return this.getRuleContext(i, DesignatorContext);
        }
    };
    OccurrenceAnnotateContext.prototype.forFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ForFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, ForFrameAnnotateContext);
        }
    };
    OccurrenceAnnotateContext.prototype.ifFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IfFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, IfFrameAnnotateContext);
        }
    };
    OccurrenceAnnotateContext.prototype.instancePropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstancePropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, InstancePropertyOverrideContext);
        }
    };
    OccurrenceAnnotateContext.prototype.interconnectAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectAnnotateContext);
        }
        else {
            return this.getRuleContext(i, InterconnectAnnotateContext);
        }
    };
    OccurrenceAnnotateContext.prototype.leafOccurrenceAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LeafOccurrenceAnnotateContext);
        }
        else {
            return this.getRuleContext(i, LeafOccurrenceAnnotateContext);
        }
    };
    OccurrenceAnnotateContext.prototype.occurrenceAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OccurrenceAnnotateContext);
        }
        else {
            return this.getRuleContext(i, OccurrenceAnnotateContext);
        }
    };
    OccurrenceAnnotateContext.prototype.otherwiseFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OtherwiseFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, OtherwiseFrameAnnotateContext);
        }
    };
    OccurrenceAnnotateContext.prototype.pageAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageAnnotateContext);
        }
        else {
            return this.getRuleContext(i, PageAnnotateContext);
        }
    };
    OccurrenceAnnotateContext.prototype.portAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortAnnotateContext);
        }
        else {
            return this.getRuleContext(i, PortAnnotateContext);
        }
    };
    OccurrenceAnnotateContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    OccurrenceAnnotateContext.prototype.signalAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalAnnotateContext);
        }
        else {
            return this.getRuleContext(i, SignalAnnotateContext);
        }
    };
    OccurrenceAnnotateContext.prototype.signalGroupAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalGroupAnnotateContext);
        }
        else {
            return this.getRuleContext(i, SignalGroupAnnotateContext);
        }
    };
    OccurrenceAnnotateContext.prototype.timing = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TimingContext);
        }
        else {
            return this.getRuleContext(i, TimingContext);
        }
    };
    OccurrenceAnnotateContext.prototype.viewPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, ViewPropertyOverrideContext);
        }
    };
    Object.defineProperty(OccurrenceAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_occurrenceAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OccurrenceAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterOccurrenceAnnotate) {
            listener.enterOccurrenceAnnotate(this);
        }
    };
    // @Override
    OccurrenceAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitOccurrenceAnnotate) {
            listener.exitOccurrenceAnnotate(this);
        }
    };
    // @Override
    OccurrenceAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitOccurrenceAnnotate) {
            return visitor.visitOccurrenceAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OccurrenceAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OccurrenceAnnotateContext = OccurrenceAnnotateContext;
var OccurrenceHierarchyAnnotateContext = /** @class */ (function (_super) {
    __extends(OccurrenceHierarchyAnnotateContext, _super);
    function OccurrenceHierarchyAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OccurrenceHierarchyAnnotateContext.prototype.cellPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, CellPropertyOverrideContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.clusterPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, ClusterPropertyOverrideContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.forFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ForFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, ForFrameAnnotateContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.ifFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IfFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, IfFrameAnnotateContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.interconnectAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectAnnotateContext);
        }
        else {
            return this.getRuleContext(i, InterconnectAnnotateContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.leafOccurrenceAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LeafOccurrenceAnnotateContext);
        }
        else {
            return this.getRuleContext(i, LeafOccurrenceAnnotateContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.occurrenceAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OccurrenceAnnotateContext);
        }
        else {
            return this.getRuleContext(i, OccurrenceAnnotateContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.otherwiseFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OtherwiseFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, OtherwiseFrameAnnotateContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.pageAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageAnnotateContext);
        }
        else {
            return this.getRuleContext(i, PageAnnotateContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.portAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortAnnotateContext);
        }
        else {
            return this.getRuleContext(i, PortAnnotateContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.signalAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalAnnotateContext);
        }
        else {
            return this.getRuleContext(i, SignalAnnotateContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.signalGroupAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalGroupAnnotateContext);
        }
        else {
            return this.getRuleContext(i, SignalGroupAnnotateContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.timing = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TimingContext);
        }
        else {
            return this.getRuleContext(i, TimingContext);
        }
    };
    OccurrenceHierarchyAnnotateContext.prototype.viewPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, ViewPropertyOverrideContext);
        }
    };
    Object.defineProperty(OccurrenceHierarchyAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_occurrenceHierarchyAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OccurrenceHierarchyAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterOccurrenceHierarchyAnnotate) {
            listener.enterOccurrenceHierarchyAnnotate(this);
        }
    };
    // @Override
    OccurrenceHierarchyAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitOccurrenceHierarchyAnnotate) {
            listener.exitOccurrenceHierarchyAnnotate(this);
        }
    };
    // @Override
    OccurrenceHierarchyAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitOccurrenceHierarchyAnnotate) {
            return visitor.visitOccurrenceHierarchyAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OccurrenceHierarchyAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OccurrenceHierarchyAnnotateContext = OccurrenceHierarchyAnnotateContext;
var OffsetEventContext = /** @class */ (function (_super) {
    __extends(OffsetEventContext, _super);
    function OffsetEventContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OffsetEventContext.prototype.event = function () {
        return this.getRuleContext(0, EventContext);
    };
    OffsetEventContext.prototype.numberValue = function () {
        return this.getRuleContext(0, NumberValueContext);
    };
    Object.defineProperty(OffsetEventContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_offsetEvent; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OffsetEventContext.prototype.enterRule = function (listener) {
        if (listener.enterOffsetEvent) {
            listener.enterOffsetEvent(this);
        }
    };
    // @Override
    OffsetEventContext.prototype.exitRule = function (listener) {
        if (listener.exitOffsetEvent) {
            listener.exitOffsetEvent(this);
        }
    };
    // @Override
    OffsetEventContext.prototype.accept = function (visitor) {
        if (visitor.visitOffsetEvent) {
            return visitor.visitOffsetEvent(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OffsetEventContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OffsetEventContext = OffsetEventContext;
var OhmContext = /** @class */ (function (_super) {
    __extends(OhmContext, _super);
    function OhmContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OhmContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(OhmContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ohm; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OhmContext.prototype.enterRule = function (listener) {
        if (listener.enterOhm) {
            listener.enterOhm(this);
        }
    };
    // @Override
    OhmContext.prototype.exitRule = function (listener) {
        if (listener.exitOhm) {
            listener.exitOhm(this);
        }
    };
    // @Override
    OhmContext.prototype.accept = function (visitor) {
        if (visitor.visitOhm) {
            return visitor.visitOhm(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OhmContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OhmContext = OhmContext;
var OpenShapeContext = /** @class */ (function (_super) {
    __extends(OpenShapeContext, _super);
    function OpenShapeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OpenShapeContext.prototype.curve = function () {
        return this.getRuleContext(0, CurveContext);
    };
    Object.defineProperty(OpenShapeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_openShape; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OpenShapeContext.prototype.enterRule = function (listener) {
        if (listener.enterOpenShape) {
            listener.enterOpenShape(this);
        }
    };
    // @Override
    OpenShapeContext.prototype.exitRule = function (listener) {
        if (listener.exitOpenShape) {
            listener.exitOpenShape(this);
        }
    };
    // @Override
    OpenShapeContext.prototype.accept = function (visitor) {
        if (visitor.visitOpenShape) {
            return visitor.visitOpenShape(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OpenShapeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OpenShapeContext = OpenShapeContext;
var Or_Context = /** @class */ (function (_super) {
    __extends(Or_Context, _super);
    function Or_Context(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Or_Context.prototype.booleanExpression = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BooleanExpressionContext);
        }
        else {
            return this.getRuleContext(i, BooleanExpressionContext);
        }
    };
    Object.defineProperty(Or_Context.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_or_; },
        enumerable: true,
        configurable: true
    });
    // @Override
    Or_Context.prototype.enterRule = function (listener) {
        if (listener.enterOr_) {
            listener.enterOr_(this);
        }
    };
    // @Override
    Or_Context.prototype.exitRule = function (listener) {
        if (listener.exitOr_) {
            listener.exitOr_(this);
        }
    };
    // @Override
    Or_Context.prototype.accept = function (visitor) {
        if (visitor.visitOr_) {
            return visitor.visitOr_(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return Or_Context;
}(ParserRuleContext_1.ParserRuleContext));
exports.Or_Context = Or_Context;
var OriginContext = /** @class */ (function (_super) {
    __extends(OriginContext, _super);
    function OriginContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OriginContext.prototype.pointValue = function () {
        return this.getRuleContext(0, PointValueContext);
    };
    Object.defineProperty(OriginContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_origin; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OriginContext.prototype.enterRule = function (listener) {
        if (listener.enterOrigin) {
            listener.enterOrigin(this);
        }
    };
    // @Override
    OriginContext.prototype.exitRule = function (listener) {
        if (listener.exitOrigin) {
            listener.exitOrigin(this);
        }
    };
    // @Override
    OriginContext.prototype.accept = function (visitor) {
        if (visitor.visitOrigin) {
            return visitor.visitOrigin(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OriginContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OriginContext = OriginContext;
var OriginalBoundingBoxContext = /** @class */ (function (_super) {
    __extends(OriginalBoundingBoxContext, _super);
    function OriginalBoundingBoxContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OriginalBoundingBoxContext.prototype.rectangle = function () {
        return this.getRuleContext(0, RectangleContext);
    };
    Object.defineProperty(OriginalBoundingBoxContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_originalBoundingBox; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OriginalBoundingBoxContext.prototype.enterRule = function (listener) {
        if (listener.enterOriginalBoundingBox) {
            listener.enterOriginalBoundingBox(this);
        }
    };
    // @Override
    OriginalBoundingBoxContext.prototype.exitRule = function (listener) {
        if (listener.exitOriginalBoundingBox) {
            listener.exitOriginalBoundingBox(this);
        }
    };
    // @Override
    OriginalBoundingBoxContext.prototype.accept = function (visitor) {
        if (visitor.visitOriginalBoundingBox) {
            return visitor.visitOriginalBoundingBox(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OriginalBoundingBoxContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OriginalBoundingBoxContext = OriginalBoundingBoxContext;
var OriginalDrawingDateContext = /** @class */ (function (_super) {
    __extends(OriginalDrawingDateContext, _super);
    function OriginalDrawingDateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OriginalDrawingDateContext.prototype.date = function () {
        return this.getRuleContext(0, DateContext);
    };
    Object.defineProperty(OriginalDrawingDateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_originalDrawingDate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OriginalDrawingDateContext.prototype.enterRule = function (listener) {
        if (listener.enterOriginalDrawingDate) {
            listener.enterOriginalDrawingDate(this);
        }
    };
    // @Override
    OriginalDrawingDateContext.prototype.exitRule = function (listener) {
        if (listener.exitOriginalDrawingDate) {
            listener.exitOriginalDrawingDate(this);
        }
    };
    // @Override
    OriginalDrawingDateContext.prototype.accept = function (visitor) {
        if (visitor.visitOriginalDrawingDate) {
            return visitor.visitOriginalDrawingDate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OriginalDrawingDateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OriginalDrawingDateContext = OriginalDrawingDateContext;
var OriginalDrawingDateDisplayContext = /** @class */ (function (_super) {
    __extends(OriginalDrawingDateDisplayContext, _super);
    function OriginalDrawingDateDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OriginalDrawingDateDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    OriginalDrawingDateDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    OriginalDrawingDateDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(OriginalDrawingDateDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_originalDrawingDateDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OriginalDrawingDateDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterOriginalDrawingDateDisplay) {
            listener.enterOriginalDrawingDateDisplay(this);
        }
    };
    // @Override
    OriginalDrawingDateDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitOriginalDrawingDateDisplay) {
            listener.exitOriginalDrawingDateDisplay(this);
        }
    };
    // @Override
    OriginalDrawingDateDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitOriginalDrawingDateDisplay) {
            return visitor.visitOriginalDrawingDateDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OriginalDrawingDateDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OriginalDrawingDateDisplayContext = OriginalDrawingDateDisplayContext;
var OriginalNameContext = /** @class */ (function (_super) {
    __extends(OriginalNameContext, _super);
    function OriginalNameContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OriginalNameContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(OriginalNameContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_originalName; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OriginalNameContext.prototype.enterRule = function (listener) {
        if (listener.enterOriginalName) {
            listener.enterOriginalName(this);
        }
    };
    // @Override
    OriginalNameContext.prototype.exitRule = function (listener) {
        if (listener.exitOriginalName) {
            listener.exitOriginalName(this);
        }
    };
    // @Override
    OriginalNameContext.prototype.accept = function (visitor) {
        if (visitor.visitOriginalName) {
            return visitor.visitOriginalName(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OriginalNameContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OriginalNameContext = OriginalNameContext;
var OtherwiseFrameContext = /** @class */ (function (_super) {
    __extends(OtherwiseFrameContext, _super);
    function OtherwiseFrameContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OtherwiseFrameContext.prototype.frameNameDef = function () {
        return this.getRuleContext(0, FrameNameDefContext);
    };
    OtherwiseFrameContext.prototype.ifFrameSet = function () {
        return this.getRuleContext(0, IfFrameSetContext);
    };
    OtherwiseFrameContext.prototype.logicalConnectivity = function () {
        return this.getRuleContext(0, LogicalConnectivityContext);
    };
    OtherwiseFrameContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    OtherwiseFrameContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    OtherwiseFrameContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    OtherwiseFrameContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    OtherwiseFrameContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(OtherwiseFrameContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_otherwiseFrame; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OtherwiseFrameContext.prototype.enterRule = function (listener) {
        if (listener.enterOtherwiseFrame) {
            listener.enterOtherwiseFrame(this);
        }
    };
    // @Override
    OtherwiseFrameContext.prototype.exitRule = function (listener) {
        if (listener.exitOtherwiseFrame) {
            listener.exitOtherwiseFrame(this);
        }
    };
    // @Override
    OtherwiseFrameContext.prototype.accept = function (visitor) {
        if (visitor.visitOtherwiseFrame) {
            return visitor.visitOtherwiseFrame(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OtherwiseFrameContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OtherwiseFrameContext = OtherwiseFrameContext;
var OtherwiseFrameAnnotateContext = /** @class */ (function (_super) {
    __extends(OtherwiseFrameAnnotateContext, _super);
    function OtherwiseFrameAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OtherwiseFrameAnnotateContext.prototype.extendFrameDef = function () {
        return this.getRuleContext(0, ExtendFrameDefContext);
    };
    OtherwiseFrameAnnotateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    OtherwiseFrameAnnotateContext.prototype.forFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ForFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, ForFrameAnnotateContext);
        }
    };
    OtherwiseFrameAnnotateContext.prototype.ifFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IfFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, IfFrameAnnotateContext);
        }
    };
    OtherwiseFrameAnnotateContext.prototype.interconnectAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectAnnotateContext);
        }
        else {
            return this.getRuleContext(i, InterconnectAnnotateContext);
        }
    };
    OtherwiseFrameAnnotateContext.prototype.leafOccurrenceAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LeafOccurrenceAnnotateContext);
        }
        else {
            return this.getRuleContext(i, LeafOccurrenceAnnotateContext);
        }
    };
    OtherwiseFrameAnnotateContext.prototype.occurrenceAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OccurrenceAnnotateContext);
        }
        else {
            return this.getRuleContext(i, OccurrenceAnnotateContext);
        }
    };
    OtherwiseFrameAnnotateContext.prototype.otherwiseFrameAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OtherwiseFrameAnnotateContext);
        }
        else {
            return this.getRuleContext(i, OtherwiseFrameAnnotateContext);
        }
    };
    OtherwiseFrameAnnotateContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(OtherwiseFrameAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_otherwiseFrameAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OtherwiseFrameAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterOtherwiseFrameAnnotate) {
            listener.enterOtherwiseFrameAnnotate(this);
        }
    };
    // @Override
    OtherwiseFrameAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitOtherwiseFrameAnnotate) {
            listener.exitOtherwiseFrameAnnotate(this);
        }
    };
    // @Override
    OtherwiseFrameAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitOtherwiseFrameAnnotate) {
            return visitor.visitOtherwiseFrameAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OtherwiseFrameAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OtherwiseFrameAnnotateContext = OtherwiseFrameAnnotateContext;
var OtherwiseFrameRefContext = /** @class */ (function (_super) {
    __extends(OtherwiseFrameRefContext, _super);
    function OtherwiseFrameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OtherwiseFrameRefContext.prototype.frameNameRef = function () {
        return this.getRuleContext(0, FrameNameRefContext);
    };
    Object.defineProperty(OtherwiseFrameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_otherwiseFrameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OtherwiseFrameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterOtherwiseFrameRef) {
            listener.enterOtherwiseFrameRef(this);
        }
    };
    // @Override
    OtherwiseFrameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitOtherwiseFrameRef) {
            listener.exitOtherwiseFrameRef(this);
        }
    };
    // @Override
    OtherwiseFrameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitOtherwiseFrameRef) {
            return visitor.visitOtherwiseFrameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OtherwiseFrameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OtherwiseFrameRefContext = OtherwiseFrameRefContext;
var OutputContext = /** @class */ (function (_super) {
    __extends(OutputContext, _super);
    function OutputContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(OutputContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_output; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OutputContext.prototype.enterRule = function (listener) {
        if (listener.enterOutput) {
            listener.enterOutput(this);
        }
    };
    // @Override
    OutputContext.prototype.exitRule = function (listener) {
        if (listener.exitOutput) {
            listener.exitOutput(this);
        }
    };
    // @Override
    OutputContext.prototype.accept = function (visitor) {
        if (visitor.visitOutput) {
            return visitor.visitOutput(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OutputContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OutputContext = OutputContext;
var OutputPortContext = /** @class */ (function (_super) {
    __extends(OutputPortContext, _super);
    function OutputPortContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OutputPortContext.prototype.outputPortAttributes = function () {
        return this.tryGetRuleContext(0, OutputPortAttributesContext);
    };
    Object.defineProperty(OutputPortContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_outputPort; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OutputPortContext.prototype.enterRule = function (listener) {
        if (listener.enterOutputPort) {
            listener.enterOutputPort(this);
        }
    };
    // @Override
    OutputPortContext.prototype.exitRule = function (listener) {
        if (listener.exitOutputPort) {
            listener.exitOutputPort(this);
        }
    };
    // @Override
    OutputPortContext.prototype.accept = function (visitor) {
        if (visitor.visitOutputPort) {
            return visitor.visitOutputPort(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OutputPortContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OutputPortContext = OutputPortContext;
var OutputPortAttributesContext = /** @class */ (function (_super) {
    __extends(OutputPortAttributesContext, _super);
    function OutputPortAttributesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OutputPortAttributesContext.prototype.dcFanInLoad = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcFanInLoadContext);
        }
        else {
            return this.getRuleContext(i, DcFanInLoadContext);
        }
    };
    OutputPortAttributesContext.prototype.dcMaxFanOut = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcMaxFanOutContext);
        }
        else {
            return this.getRuleContext(i, DcMaxFanOutContext);
        }
    };
    Object.defineProperty(OutputPortAttributesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_outputPortAttributes; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OutputPortAttributesContext.prototype.enterRule = function (listener) {
        if (listener.enterOutputPortAttributes) {
            listener.enterOutputPortAttributes(this);
        }
    };
    // @Override
    OutputPortAttributesContext.prototype.exitRule = function (listener) {
        if (listener.exitOutputPortAttributes) {
            listener.exitOutputPortAttributes(this);
        }
    };
    // @Override
    OutputPortAttributesContext.prototype.accept = function (visitor) {
        if (visitor.visitOutputPortAttributes) {
            return visitor.visitOutputPortAttributes(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OutputPortAttributesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OutputPortAttributesContext = OutputPortAttributesContext;
var OwnerContext = /** @class */ (function (_super) {
    __extends(OwnerContext, _super);
    function OwnerContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    OwnerContext.prototype.stringValue = function () {
        return this.getRuleContext(0, StringValueContext);
    };
    Object.defineProperty(OwnerContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_owner; },
        enumerable: true,
        configurable: true
    });
    // @Override
    OwnerContext.prototype.enterRule = function (listener) {
        if (listener.enterOwner) {
            listener.enterOwner(this);
        }
    };
    // @Override
    OwnerContext.prototype.exitRule = function (listener) {
        if (listener.exitOwner) {
            listener.exitOwner(this);
        }
    };
    // @Override
    OwnerContext.prototype.accept = function (visitor) {
        if (visitor.visitOwner) {
            return visitor.visitOwner(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return OwnerContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.OwnerContext = OwnerContext;
var PageContext = /** @class */ (function (_super) {
    __extends(PageContext, _super);
    function PageContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageContext.prototype.pageNameDef = function () {
        return this.getRuleContext(0, PageNameDefContext);
    };
    PageContext.prototype.pageHeader = function () {
        return this.getRuleContext(0, PageHeaderContext);
    };
    PageContext.prototype.cellPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, CellPropertyDisplayContext);
        }
    };
    PageContext.prototype.clusterPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, ClusterPropertyDisplayContext);
        }
    };
    PageContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    PageContext.prototype.localPortGroup = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LocalPortGroupContext);
        }
        else {
            return this.getRuleContext(i, LocalPortGroupContext);
        }
    };
    PageContext.prototype.pageCommentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageCommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, PageCommentGraphicsContext);
        }
    };
    PageContext.prototype.pageTitleBlock = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageTitleBlockContext);
        }
        else {
            return this.getRuleContext(i, PageTitleBlockContext);
        }
    };
    PageContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    PageContext.prototype.schematicBus = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicBusContext);
        }
        else {
            return this.getRuleContext(i, SchematicBusContext);
        }
    };
    PageContext.prototype.schematicForFrameImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicForFrameImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicForFrameImplementationContext);
        }
    };
    PageContext.prototype.schematicGlobalPortImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicGlobalPortImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicGlobalPortImplementationContext);
        }
    };
    PageContext.prototype.schematicIfFrameImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicIfFrameImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicIfFrameImplementationContext);
        }
    };
    PageContext.prototype.schematicInstanceImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInstanceImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicInstanceImplementationContext);
        }
    };
    PageContext.prototype.schematicMasterPortImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicMasterPortImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicMasterPortImplementationContext);
        }
    };
    PageContext.prototype.schematicNet = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicNetContext);
        }
        else {
            return this.getRuleContext(i, SchematicNetContext);
        }
    };
    PageContext.prototype.schematicOffPageConnectorImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOffPageConnectorImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicOffPageConnectorImplementationContext);
        }
    };
    PageContext.prototype.schematicOnPageConnectorImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOnPageConnectorImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicOnPageConnectorImplementationContext);
        }
    };
    PageContext.prototype.schematicOtherwiseFrameImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOtherwiseFrameImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicOtherwiseFrameImplementationContext);
        }
    };
    PageContext.prototype.schematicRipperImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicRipperImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicRipperImplementationContext);
        }
    };
    PageContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    PageContext.prototype.viewPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, ViewPropertyDisplayContext);
        }
    };
    Object.defineProperty(PageContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_page; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageContext.prototype.enterRule = function (listener) {
        if (listener.enterPage) {
            listener.enterPage(this);
        }
    };
    // @Override
    PageContext.prototype.exitRule = function (listener) {
        if (listener.exitPage) {
            listener.exitPage(this);
        }
    };
    // @Override
    PageContext.prototype.accept = function (visitor) {
        if (visitor.visitPage) {
            return visitor.visitPage(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageContext = PageContext;
var PageAnnotateContext = /** @class */ (function (_super) {
    __extends(PageAnnotateContext, _super);
    function PageAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageAnnotateContext.prototype.extendPageDef = function () {
        return this.getRuleContext(0, ExtendPageDefContext);
    };
    PageAnnotateContext.prototype.interconnectAnnotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectAnnotateContext);
        }
        else {
            return this.getRuleContext(i, InterconnectAnnotateContext);
        }
    };
    Object.defineProperty(PageAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterPageAnnotate) {
            listener.enterPageAnnotate(this);
        }
    };
    // @Override
    PageAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitPageAnnotate) {
            listener.exitPageAnnotate(this);
        }
    };
    // @Override
    PageAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitPageAnnotate) {
            return visitor.visitPageAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageAnnotateContext = PageAnnotateContext;
var PageBorderContext = /** @class */ (function (_super) {
    __extends(PageBorderContext, _super);
    function PageBorderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageBorderContext.prototype.pageBorderTemplateRef = function () {
        return this.getRuleContext(0, PageBorderTemplateRefContext);
    };
    PageBorderContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    PageBorderContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    PageBorderContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(PageBorderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageBorder; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageBorderContext.prototype.enterRule = function (listener) {
        if (listener.enterPageBorder) {
            listener.enterPageBorder(this);
        }
    };
    // @Override
    PageBorderContext.prototype.exitRule = function (listener) {
        if (listener.exitPageBorder) {
            listener.exitPageBorder(this);
        }
    };
    // @Override
    PageBorderContext.prototype.accept = function (visitor) {
        if (visitor.visitPageBorder) {
            return visitor.visitPageBorder(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageBorderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageBorderContext = PageBorderContext;
var PageBorderTemplateContext = /** @class */ (function (_super) {
    __extends(PageBorderTemplateContext, _super);
    function PageBorderTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageBorderTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    PageBorderTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    PageBorderTemplateContext.prototype.usableArea = function () {
        return this.getRuleContext(0, UsableAreaContext);
    };
    PageBorderTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    PageBorderTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    PageBorderTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    PageBorderTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    PageBorderTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(PageBorderTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageBorderTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageBorderTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterPageBorderTemplate) {
            listener.enterPageBorderTemplate(this);
        }
    };
    // @Override
    PageBorderTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitPageBorderTemplate) {
            listener.exitPageBorderTemplate(this);
        }
    };
    // @Override
    PageBorderTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitPageBorderTemplate) {
            return visitor.visitPageBorderTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageBorderTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageBorderTemplateContext = PageBorderTemplateContext;
var PageBorderTemplateRefContext = /** @class */ (function (_super) {
    __extends(PageBorderTemplateRefContext, _super);
    function PageBorderTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageBorderTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    PageBorderTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(PageBorderTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageBorderTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageBorderTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPageBorderTemplateRef) {
            listener.enterPageBorderTemplateRef(this);
        }
    };
    // @Override
    PageBorderTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPageBorderTemplateRef) {
            listener.exitPageBorderTemplateRef(this);
        }
    };
    // @Override
    PageBorderTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPageBorderTemplateRef) {
            return visitor.visitPageBorderTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageBorderTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageBorderTemplateRefContext = PageBorderTemplateRefContext;
var PageCommentGraphicsContext = /** @class */ (function (_super) {
    __extends(PageCommentGraphicsContext, _super);
    function PageCommentGraphicsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageCommentGraphicsContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    PageCommentGraphicsContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    PageCommentGraphicsContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    PageCommentGraphicsContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    PageCommentGraphicsContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(PageCommentGraphicsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageCommentGraphics; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageCommentGraphicsContext.prototype.enterRule = function (listener) {
        if (listener.enterPageCommentGraphics) {
            listener.enterPageCommentGraphics(this);
        }
    };
    // @Override
    PageCommentGraphicsContext.prototype.exitRule = function (listener) {
        if (listener.exitPageCommentGraphics) {
            listener.exitPageCommentGraphics(this);
        }
    };
    // @Override
    PageCommentGraphicsContext.prototype.accept = function (visitor) {
        if (visitor.visitPageCommentGraphics) {
            return visitor.visitPageCommentGraphics(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageCommentGraphicsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageCommentGraphicsContext = PageCommentGraphicsContext;
var PageHeaderContext = /** @class */ (function (_super) {
    __extends(PageHeaderContext, _super);
    function PageHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageHeaderContext.prototype.backgroundColor = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BackgroundColorContext);
        }
        else {
            return this.getRuleContext(i, BackgroundColorContext);
        }
    };
    PageHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    PageHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    PageHeaderContext.prototype.originalBoundingBox = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OriginalBoundingBoxContext);
        }
        else {
            return this.getRuleContext(i, OriginalBoundingBoxContext);
        }
    };
    PageHeaderContext.prototype.pageBorder = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageBorderContext);
        }
        else {
            return this.getRuleContext(i, PageBorderContext);
        }
    };
    PageHeaderContext.prototype.pageSize = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageSizeContext);
        }
        else {
            return this.getRuleContext(i, PageSizeContext);
        }
    };
    PageHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    PageHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(PageHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterPageHeader) {
            listener.enterPageHeader(this);
        }
    };
    // @Override
    PageHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitPageHeader) {
            listener.exitPageHeader(this);
        }
    };
    // @Override
    PageHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitPageHeader) {
            return visitor.visitPageHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageHeaderContext = PageHeaderContext;
var PageIdentificationContext = /** @class */ (function (_super) {
    __extends(PageIdentificationContext, _super);
    function PageIdentificationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageIdentificationContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(PageIdentificationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageIdentification; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageIdentificationContext.prototype.enterRule = function (listener) {
        if (listener.enterPageIdentification) {
            listener.enterPageIdentification(this);
        }
    };
    // @Override
    PageIdentificationContext.prototype.exitRule = function (listener) {
        if (listener.exitPageIdentification) {
            listener.exitPageIdentification(this);
        }
    };
    // @Override
    PageIdentificationContext.prototype.accept = function (visitor) {
        if (visitor.visitPageIdentification) {
            return visitor.visitPageIdentification(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageIdentificationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageIdentificationContext = PageIdentificationContext;
var PageIdentificationDisplayContext = /** @class */ (function (_super) {
    __extends(PageIdentificationDisplayContext, _super);
    function PageIdentificationDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageIdentificationDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    PageIdentificationDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    PageIdentificationDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(PageIdentificationDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageIdentificationDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageIdentificationDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPageIdentificationDisplay) {
            listener.enterPageIdentificationDisplay(this);
        }
    };
    // @Override
    PageIdentificationDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPageIdentificationDisplay) {
            listener.exitPageIdentificationDisplay(this);
        }
    };
    // @Override
    PageIdentificationDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPageIdentificationDisplay) {
            return visitor.visitPageIdentificationDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageIdentificationDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageIdentificationDisplayContext = PageIdentificationDisplayContext;
var PageNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(PageNameCaseSensitiveContext, _super);
    function PageNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(PageNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterPageNameCaseSensitive) {
            listener.enterPageNameCaseSensitive(this);
        }
    };
    // @Override
    PageNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitPageNameCaseSensitive) {
            listener.exitPageNameCaseSensitive(this);
        }
    };
    // @Override
    PageNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitPageNameCaseSensitive) {
            return visitor.visitPageNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageNameCaseSensitiveContext = PageNameCaseSensitiveContext;
var PageNameDefContext = /** @class */ (function (_super) {
    __extends(PageNameDefContext, _super);
    function PageNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(PageNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterPageNameDef) {
            listener.enterPageNameDef(this);
        }
    };
    // @Override
    PageNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitPageNameDef) {
            listener.exitPageNameDef(this);
        }
    };
    // @Override
    PageNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitPageNameDef) {
            return visitor.visitPageNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageNameDefContext = PageNameDefContext;
var PageNameRefContext = /** @class */ (function (_super) {
    __extends(PageNameRefContext, _super);
    function PageNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(PageNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPageNameRef) {
            listener.enterPageNameRef(this);
        }
    };
    // @Override
    PageNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPageNameRef) {
            listener.exitPageNameRef(this);
        }
    };
    // @Override
    PageNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPageNameRef) {
            return visitor.visitPageNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageNameRefContext = PageNameRefContext;
var PagePropertyDisplayContext = /** @class */ (function (_super) {
    __extends(PagePropertyDisplayContext, _super);
    function PagePropertyDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PagePropertyDisplayContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    PagePropertyDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    PagePropertyDisplayContext.prototype.propertyNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyNameDisplayContext);
        }
    };
    Object.defineProperty(PagePropertyDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pagePropertyDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PagePropertyDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPagePropertyDisplay) {
            listener.enterPagePropertyDisplay(this);
        }
    };
    // @Override
    PagePropertyDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPagePropertyDisplay) {
            listener.exitPagePropertyDisplay(this);
        }
    };
    // @Override
    PagePropertyDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPagePropertyDisplay) {
            return visitor.visitPagePropertyDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PagePropertyDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PagePropertyDisplayContext = PagePropertyDisplayContext;
var PageRefContext = /** @class */ (function (_super) {
    __extends(PageRefContext, _super);
    function PageRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageRefContext.prototype.pageNameRef = function () {
        return this.getRuleContext(0, PageNameRefContext);
    };
    Object.defineProperty(PageRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPageRef) {
            listener.enterPageRef(this);
        }
    };
    // @Override
    PageRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPageRef) {
            listener.exitPageRef(this);
        }
    };
    // @Override
    PageRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPageRef) {
            return visitor.visitPageRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageRefContext = PageRefContext;
var PageSizeContext = /** @class */ (function (_super) {
    __extends(PageSizeContext, _super);
    function PageSizeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageSizeContext.prototype.rectangle = function () {
        return this.getRuleContext(0, RectangleContext);
    };
    Object.defineProperty(PageSizeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageSize; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageSizeContext.prototype.enterRule = function (listener) {
        if (listener.enterPageSize) {
            listener.enterPageSize(this);
        }
    };
    // @Override
    PageSizeContext.prototype.exitRule = function (listener) {
        if (listener.exitPageSize) {
            listener.exitPageSize(this);
        }
    };
    // @Override
    PageSizeContext.prototype.accept = function (visitor) {
        if (visitor.visitPageSize) {
            return visitor.visitPageSize(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageSizeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageSizeContext = PageSizeContext;
var PageTitleContext = /** @class */ (function (_super) {
    __extends(PageTitleContext, _super);
    function PageTitleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageTitleContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(PageTitleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageTitle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageTitleContext.prototype.enterRule = function (listener) {
        if (listener.enterPageTitle) {
            listener.enterPageTitle(this);
        }
    };
    // @Override
    PageTitleContext.prototype.exitRule = function (listener) {
        if (listener.exitPageTitle) {
            listener.exitPageTitle(this);
        }
    };
    // @Override
    PageTitleContext.prototype.accept = function (visitor) {
        if (visitor.visitPageTitle) {
            return visitor.visitPageTitle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageTitleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageTitleContext = PageTitleContext;
var PageTitleBlockContext = /** @class */ (function (_super) {
    __extends(PageTitleBlockContext, _super);
    function PageTitleBlockContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageTitleBlockContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    PageTitleBlockContext.prototype.pageTitleBlockTemplateRef = function () {
        return this.getRuleContext(0, PageTitleBlockTemplateRefContext);
    };
    PageTitleBlockContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    PageTitleBlockContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    PageTitleBlockContext.prototype.pagePropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PagePropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PagePropertyDisplayContext);
        }
    };
    PageTitleBlockContext.prototype.pageTitleBlockAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageTitleBlockAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, PageTitleBlockAttributeDisplayContext);
        }
    };
    PageTitleBlockContext.prototype.pageTitleBlockAttributes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageTitleBlockAttributesContext);
        }
        else {
            return this.getRuleContext(i, PageTitleBlockAttributesContext);
        }
    };
    PageTitleBlockContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    PageTitleBlockContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    PageTitleBlockContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    PageTitleBlockContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(PageTitleBlockContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageTitleBlock; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageTitleBlockContext.prototype.enterRule = function (listener) {
        if (listener.enterPageTitleBlock) {
            listener.enterPageTitleBlock(this);
        }
    };
    // @Override
    PageTitleBlockContext.prototype.exitRule = function (listener) {
        if (listener.exitPageTitleBlock) {
            listener.exitPageTitleBlock(this);
        }
    };
    // @Override
    PageTitleBlockContext.prototype.accept = function (visitor) {
        if (visitor.visitPageTitleBlock) {
            return visitor.visitPageTitleBlock(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageTitleBlockContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageTitleBlockContext = PageTitleBlockContext;
var PageTitleBlockAttributeDisplayContext = /** @class */ (function (_super) {
    __extends(PageTitleBlockAttributeDisplayContext, _super);
    function PageTitleBlockAttributeDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageTitleBlockAttributeDisplayContext.prototype.approvedDateDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ApprovedDateDisplayContext);
        }
        else {
            return this.getRuleContext(i, ApprovedDateDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.checkDateDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CheckDateDisplayContext);
        }
        else {
            return this.getRuleContext(i, CheckDateDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.companyNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CompanyNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, CompanyNameDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.contractDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ContractDisplayContext);
        }
        else {
            return this.getRuleContext(i, ContractDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.copyrightDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CopyrightDisplayContext);
        }
        else {
            return this.getRuleContext(i, CopyrightDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.drawingDescriptionDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DrawingDescriptionDisplayContext);
        }
        else {
            return this.getRuleContext(i, DrawingDescriptionDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.drawingIdentificationDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DrawingIdentificationDisplayContext);
        }
        else {
            return this.getRuleContext(i, DrawingIdentificationDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.drawingSizeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DrawingSizeDisplayContext);
        }
        else {
            return this.getRuleContext(i, DrawingSizeDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.engineeringDateDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(EngineeringDateDisplayContext);
        }
        else {
            return this.getRuleContext(i, EngineeringDateDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.originalDrawingDateDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OriginalDrawingDateDisplayContext);
        }
        else {
            return this.getRuleContext(i, OriginalDrawingDateDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.pageIdentificationDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageIdentificationDisplayContext);
        }
        else {
            return this.getRuleContext(i, PageIdentificationDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.pageTitleDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageTitleDisplayContext);
        }
        else {
            return this.getRuleContext(i, PageTitleDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.revisionDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RevisionDisplayContext);
        }
        else {
            return this.getRuleContext(i, RevisionDisplayContext);
        }
    };
    PageTitleBlockAttributeDisplayContext.prototype.totalPagesDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TotalPagesDisplayContext);
        }
        else {
            return this.getRuleContext(i, TotalPagesDisplayContext);
        }
    };
    Object.defineProperty(PageTitleBlockAttributeDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageTitleBlockAttributeDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageTitleBlockAttributeDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPageTitleBlockAttributeDisplay) {
            listener.enterPageTitleBlockAttributeDisplay(this);
        }
    };
    // @Override
    PageTitleBlockAttributeDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPageTitleBlockAttributeDisplay) {
            listener.exitPageTitleBlockAttributeDisplay(this);
        }
    };
    // @Override
    PageTitleBlockAttributeDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPageTitleBlockAttributeDisplay) {
            return visitor.visitPageTitleBlockAttributeDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageTitleBlockAttributeDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageTitleBlockAttributeDisplayContext = PageTitleBlockAttributeDisplayContext;
var PageTitleBlockAttributesContext = /** @class */ (function (_super) {
    __extends(PageTitleBlockAttributesContext, _super);
    function PageTitleBlockAttributesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageTitleBlockAttributesContext.prototype.approvedDate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ApprovedDateContext);
        }
        else {
            return this.getRuleContext(i, ApprovedDateContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.checkDate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CheckDateContext);
        }
        else {
            return this.getRuleContext(i, CheckDateContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.companyName = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CompanyNameContext);
        }
        else {
            return this.getRuleContext(i, CompanyNameContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.contract = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ContractContext);
        }
        else {
            return this.getRuleContext(i, ContractContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.drawingDescription = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DrawingDescriptionContext);
        }
        else {
            return this.getRuleContext(i, DrawingDescriptionContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.drawingIdentification = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DrawingIdentificationContext);
        }
        else {
            return this.getRuleContext(i, DrawingIdentificationContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.drawingSize = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DrawingSizeContext);
        }
        else {
            return this.getRuleContext(i, DrawingSizeContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.engineeringDate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(EngineeringDateContext);
        }
        else {
            return this.getRuleContext(i, EngineeringDateContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.originalDrawingDate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OriginalDrawingDateContext);
        }
        else {
            return this.getRuleContext(i, OriginalDrawingDateContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.pageIdentification = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageIdentificationContext);
        }
        else {
            return this.getRuleContext(i, PageIdentificationContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.pageTitle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageTitleContext);
        }
        else {
            return this.getRuleContext(i, PageTitleContext);
        }
    };
    PageTitleBlockAttributesContext.prototype.revision = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RevisionContext);
        }
        else {
            return this.getRuleContext(i, RevisionContext);
        }
    };
    Object.defineProperty(PageTitleBlockAttributesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageTitleBlockAttributes; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageTitleBlockAttributesContext.prototype.enterRule = function (listener) {
        if (listener.enterPageTitleBlockAttributes) {
            listener.enterPageTitleBlockAttributes(this);
        }
    };
    // @Override
    PageTitleBlockAttributesContext.prototype.exitRule = function (listener) {
        if (listener.exitPageTitleBlockAttributes) {
            listener.exitPageTitleBlockAttributes(this);
        }
    };
    // @Override
    PageTitleBlockAttributesContext.prototype.accept = function (visitor) {
        if (visitor.visitPageTitleBlockAttributes) {
            return visitor.visitPageTitleBlockAttributes(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageTitleBlockAttributesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageTitleBlockAttributesContext = PageTitleBlockAttributesContext;
var PageTitleBlockTemplateContext = /** @class */ (function (_super) {
    __extends(PageTitleBlockTemplateContext, _super);
    function PageTitleBlockTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageTitleBlockTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    PageTitleBlockTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    PageTitleBlockTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    PageTitleBlockTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    PageTitleBlockTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    PageTitleBlockTemplateContext.prototype.pageTitleBlockAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageTitleBlockAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, PageTitleBlockAttributeDisplayContext);
        }
    };
    PageTitleBlockTemplateContext.prototype.pageTitleBlockAttributes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageTitleBlockAttributesContext);
        }
        else {
            return this.getRuleContext(i, PageTitleBlockAttributesContext);
        }
    };
    PageTitleBlockTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    PageTitleBlockTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(PageTitleBlockTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageTitleBlockTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageTitleBlockTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterPageTitleBlockTemplate) {
            listener.enterPageTitleBlockTemplate(this);
        }
    };
    // @Override
    PageTitleBlockTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitPageTitleBlockTemplate) {
            listener.exitPageTitleBlockTemplate(this);
        }
    };
    // @Override
    PageTitleBlockTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitPageTitleBlockTemplate) {
            return visitor.visitPageTitleBlockTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageTitleBlockTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageTitleBlockTemplateContext = PageTitleBlockTemplateContext;
var PageTitleBlockTemplateRefContext = /** @class */ (function (_super) {
    __extends(PageTitleBlockTemplateRefContext, _super);
    function PageTitleBlockTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageTitleBlockTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    PageTitleBlockTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(PageTitleBlockTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageTitleBlockTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageTitleBlockTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPageTitleBlockTemplateRef) {
            listener.enterPageTitleBlockTemplateRef(this);
        }
    };
    // @Override
    PageTitleBlockTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPageTitleBlockTemplateRef) {
            listener.exitPageTitleBlockTemplateRef(this);
        }
    };
    // @Override
    PageTitleBlockTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPageTitleBlockTemplateRef) {
            return visitor.visitPageTitleBlockTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageTitleBlockTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageTitleBlockTemplateRefContext = PageTitleBlockTemplateRefContext;
var PageTitleDisplayContext = /** @class */ (function (_super) {
    __extends(PageTitleDisplayContext, _super);
    function PageTitleDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PageTitleDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    PageTitleDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    PageTitleDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(PageTitleDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pageTitleDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PageTitleDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPageTitleDisplay) {
            listener.enterPageTitleDisplay(this);
        }
    };
    // @Override
    PageTitleDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPageTitleDisplay) {
            listener.exitPageTitleDisplay(this);
        }
    };
    // @Override
    PageTitleDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPageTitleDisplay) {
            return visitor.visitPageTitleDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PageTitleDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PageTitleDisplayContext = PageTitleDisplayContext;
var ParameterDisplayContext = /** @class */ (function (_super) {
    __extends(ParameterDisplayContext, _super);
    function ParameterDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ParameterDisplayContext.prototype.parameterNameRef = function () {
        return this.getRuleContext(0, ParameterNameRefContext);
    };
    ParameterDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    ParameterDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    ParameterDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    ParameterDisplayContext.prototype.parameterNameDisplay = function () {
        return this.tryGetRuleContext(0, ParameterNameDisplayContext);
    };
    Object.defineProperty(ParameterDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_parameterDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ParameterDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterParameterDisplay) {
            listener.enterParameterDisplay(this);
        }
    };
    // @Override
    ParameterDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitParameterDisplay) {
            listener.exitParameterDisplay(this);
        }
    };
    // @Override
    ParameterDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitParameterDisplay) {
            return visitor.visitParameterDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ParameterDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ParameterDisplayContext = ParameterDisplayContext;
var ParameterNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(ParameterNameCaseSensitiveContext, _super);
    function ParameterNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ParameterNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(ParameterNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_parameterNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ParameterNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterParameterNameCaseSensitive) {
            listener.enterParameterNameCaseSensitive(this);
        }
    };
    // @Override
    ParameterNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitParameterNameCaseSensitive) {
            listener.exitParameterNameCaseSensitive(this);
        }
    };
    // @Override
    ParameterNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitParameterNameCaseSensitive) {
            return visitor.visitParameterNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ParameterNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ParameterNameCaseSensitiveContext = ParameterNameCaseSensitiveContext;
var ParameterNameDefContext = /** @class */ (function (_super) {
    __extends(ParameterNameDefContext, _super);
    function ParameterNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ParameterNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(ParameterNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_parameterNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ParameterNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterParameterNameDef) {
            listener.enterParameterNameDef(this);
        }
    };
    // @Override
    ParameterNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitParameterNameDef) {
            listener.exitParameterNameDef(this);
        }
    };
    // @Override
    ParameterNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitParameterNameDef) {
            return visitor.visitParameterNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ParameterNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ParameterNameDefContext = ParameterNameDefContext;
var ParameterNameDisplayContext = /** @class */ (function (_super) {
    __extends(ParameterNameDisplayContext, _super);
    function ParameterNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ParameterNameDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    ParameterNameDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    ParameterNameDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(ParameterNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_parameterNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ParameterNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterParameterNameDisplay) {
            listener.enterParameterNameDisplay(this);
        }
    };
    // @Override
    ParameterNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitParameterNameDisplay) {
            listener.exitParameterNameDisplay(this);
        }
    };
    // @Override
    ParameterNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitParameterNameDisplay) {
            return visitor.visitParameterNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ParameterNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ParameterNameDisplayContext = ParameterNameDisplayContext;
var ParameterNameRefContext = /** @class */ (function (_super) {
    __extends(ParameterNameRefContext, _super);
    function ParameterNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ParameterNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(ParameterNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_parameterNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ParameterNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterParameterNameRef) {
            listener.enterParameterNameRef(this);
        }
    };
    // @Override
    ParameterNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitParameterNameRef) {
            listener.exitParameterNameRef(this);
        }
    };
    // @Override
    ParameterNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitParameterNameRef) {
            return visitor.visitParameterNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ParameterNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ParameterNameRefContext = ParameterNameRefContext;
var PathContext = /** @class */ (function (_super) {
    __extends(PathContext, _super);
    function PathContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PathContext.prototype.pointList = function () {
        return this.getRuleContext(0, PointListContext);
    };
    Object.defineProperty(PathContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_path; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PathContext.prototype.enterRule = function (listener) {
        if (listener.enterPath) {
            listener.enterPath(this);
        }
    };
    // @Override
    PathContext.prototype.exitRule = function (listener) {
        if (listener.exitPath) {
            listener.exitPath(this);
        }
    };
    // @Override
    PathContext.prototype.accept = function (visitor) {
        if (visitor.visitPath) {
            return visitor.visitPath(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PathContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PathContext = PathContext;
var PathDelayContext = /** @class */ (function (_super) {
    __extends(PathDelayContext, _super);
    function PathDelayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PathDelayContext.prototype.delay = function () {
        return this.getRuleContext(0, DelayContext);
    };
    PathDelayContext.prototype.event = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(EventContext);
        }
        else {
            return this.getRuleContext(i, EventContext);
        }
    };
    Object.defineProperty(PathDelayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pathDelay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PathDelayContext.prototype.enterRule = function (listener) {
        if (listener.enterPathDelay) {
            listener.enterPathDelay(this);
        }
    };
    // @Override
    PathDelayContext.prototype.exitRule = function (listener) {
        if (listener.exitPathDelay) {
            listener.exitPathDelay(this);
        }
    };
    // @Override
    PathDelayContext.prototype.accept = function (visitor) {
        if (visitor.visitPathDelay) {
            return visitor.visitPathDelay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PathDelayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PathDelayContext = PathDelayContext;
var PathWidthContext = /** @class */ (function (_super) {
    __extends(PathWidthContext, _super);
    function PathWidthContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PathWidthContext.prototype.lengthValue = function () {
        return this.tryGetRuleContext(0, LengthValueContext);
    };
    PathWidthContext.prototype.minimalWidth = function () {
        return this.tryGetRuleContext(0, MinimalWidthContext);
    };
    Object.defineProperty(PathWidthContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pathWidth; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PathWidthContext.prototype.enterRule = function (listener) {
        if (listener.enterPathWidth) {
            listener.enterPathWidth(this);
        }
    };
    // @Override
    PathWidthContext.prototype.exitRule = function (listener) {
        if (listener.exitPathWidth) {
            listener.exitPathWidth(this);
        }
    };
    // @Override
    PathWidthContext.prototype.accept = function (visitor) {
        if (visitor.visitPathWidth) {
            return visitor.visitPathWidth(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PathWidthContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PathWidthContext = PathWidthContext;
var PcbLayoutUnitsContext = /** @class */ (function (_super) {
    __extends(PcbLayoutUnitsContext, _super);
    function PcbLayoutUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PcbLayoutUnitsContext.prototype.setAngle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetAngleContext);
        }
        else {
            return this.getRuleContext(i, SetAngleContext);
        }
    };
    PcbLayoutUnitsContext.prototype.setCapacitance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetCapacitanceContext);
        }
        else {
            return this.getRuleContext(i, SetCapacitanceContext);
        }
    };
    PcbLayoutUnitsContext.prototype.setDistance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetDistanceContext);
        }
        else {
            return this.getRuleContext(i, SetDistanceContext);
        }
    };
    PcbLayoutUnitsContext.prototype.setTime = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetTimeContext);
        }
        else {
            return this.getRuleContext(i, SetTimeContext);
        }
    };
    Object.defineProperty(PcbLayoutUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pcbLayoutUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PcbLayoutUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterPcbLayoutUnits) {
            listener.enterPcbLayoutUnits(this);
        }
    };
    // @Override
    PcbLayoutUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitPcbLayoutUnits) {
            listener.exitPcbLayoutUnits(this);
        }
    };
    // @Override
    PcbLayoutUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitPcbLayoutUnits) {
            return visitor.visitPcbLayoutUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PcbLayoutUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PcbLayoutUnitsContext = PcbLayoutUnitsContext;
var PcbLayoutViewContext = /** @class */ (function (_super) {
    __extends(PcbLayoutViewContext, _super);
    function PcbLayoutViewContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PcbLayoutViewContext.prototype.viewNameDef = function () {
        return this.getRuleContext(0, ViewNameDefContext);
    };
    PcbLayoutViewContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    PcbLayoutViewContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    PcbLayoutViewContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(PcbLayoutViewContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pcbLayoutView; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PcbLayoutViewContext.prototype.enterRule = function (listener) {
        if (listener.enterPcbLayoutView) {
            listener.enterPcbLayoutView(this);
        }
    };
    // @Override
    PcbLayoutViewContext.prototype.exitRule = function (listener) {
        if (listener.exitPcbLayoutView) {
            listener.exitPcbLayoutView(this);
        }
    };
    // @Override
    PcbLayoutViewContext.prototype.accept = function (visitor) {
        if (visitor.visitPcbLayoutView) {
            return visitor.visitPcbLayoutView(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PcbLayoutViewContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PcbLayoutViewContext = PcbLayoutViewContext;
var PermutableContext = /** @class */ (function (_super) {
    __extends(PermutableContext, _super);
    function PermutableContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PermutableContext.prototype.nonPermutable = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NonPermutableContext);
        }
        else {
            return this.getRuleContext(i, NonPermutableContext);
        }
    };
    PermutableContext.prototype.permutable = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PermutableContext);
        }
        else {
            return this.getRuleContext(i, PermutableContext);
        }
    };
    PermutableContext.prototype.portRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortRefContext);
        }
        else {
            return this.getRuleContext(i, PortRefContext);
        }
    };
    Object.defineProperty(PermutableContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_permutable; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PermutableContext.prototype.enterRule = function (listener) {
        if (listener.enterPermutable) {
            listener.enterPermutable(this);
        }
    };
    // @Override
    PermutableContext.prototype.exitRule = function (listener) {
        if (listener.exitPermutable) {
            listener.exitPermutable(this);
        }
    };
    // @Override
    PermutableContext.prototype.accept = function (visitor) {
        if (visitor.visitPermutable) {
            return visitor.visitPermutable(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PermutableContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PermutableContext = PermutableContext;
var PhysicalDefaultsContext = /** @class */ (function (_super) {
    __extends(PhysicalDefaultsContext, _super);
    function PhysicalDefaultsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PhysicalDefaultsContext.prototype.schematicRequiredDefaults = function () {
        return this.tryGetRuleContext(0, SchematicRequiredDefaultsContext);
    };
    Object.defineProperty(PhysicalDefaultsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_physicalDefaults; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PhysicalDefaultsContext.prototype.enterRule = function (listener) {
        if (listener.enterPhysicalDefaults) {
            listener.enterPhysicalDefaults(this);
        }
    };
    // @Override
    PhysicalDefaultsContext.prototype.exitRule = function (listener) {
        if (listener.exitPhysicalDefaults) {
            listener.exitPhysicalDefaults(this);
        }
    };
    // @Override
    PhysicalDefaultsContext.prototype.accept = function (visitor) {
        if (visitor.visitPhysicalDefaults) {
            return visitor.visitPhysicalDefaults(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PhysicalDefaultsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PhysicalDefaultsContext = PhysicalDefaultsContext;
var PhysicalScalingContext = /** @class */ (function (_super) {
    __extends(PhysicalScalingContext, _super);
    function PhysicalScalingContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PhysicalScalingContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    PhysicalScalingContext.prototype.connectivityUnits = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityUnitsContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityUnitsContext);
        }
    };
    PhysicalScalingContext.prototype.documentationUnits = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationUnitsContext);
        }
        else {
            return this.getRuleContext(i, DocumentationUnitsContext);
        }
    };
    PhysicalScalingContext.prototype.geometryMacroUnits = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GeometryMacroUnitsContext);
        }
        else {
            return this.getRuleContext(i, GeometryMacroUnitsContext);
        }
    };
    PhysicalScalingContext.prototype.interfaceUnits = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterfaceUnitsContext);
        }
        else {
            return this.getRuleContext(i, InterfaceUnitsContext);
        }
    };
    PhysicalScalingContext.prototype.logicModelUnits = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicModelUnitsContext);
        }
        else {
            return this.getRuleContext(i, LogicModelUnitsContext);
        }
    };
    PhysicalScalingContext.prototype.maskLayoutUnits = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(MaskLayoutUnitsContext);
        }
        else {
            return this.getRuleContext(i, MaskLayoutUnitsContext);
        }
    };
    PhysicalScalingContext.prototype.pcbLayoutUnits = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PcbLayoutUnitsContext);
        }
        else {
            return this.getRuleContext(i, PcbLayoutUnitsContext);
        }
    };
    PhysicalScalingContext.prototype.schematicUnits = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicUnitsContext);
        }
        else {
            return this.getRuleContext(i, SchematicUnitsContext);
        }
    };
    PhysicalScalingContext.prototype.symbolicLayoutUnits = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SymbolicLayoutUnitsContext);
        }
        else {
            return this.getRuleContext(i, SymbolicLayoutUnitsContext);
        }
    };
    Object.defineProperty(PhysicalScalingContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_physicalScaling; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PhysicalScalingContext.prototype.enterRule = function (listener) {
        if (listener.enterPhysicalScaling) {
            listener.enterPhysicalScaling(this);
        }
    };
    // @Override
    PhysicalScalingContext.prototype.exitRule = function (listener) {
        if (listener.exitPhysicalScaling) {
            listener.exitPhysicalScaling(this);
        }
    };
    // @Override
    PhysicalScalingContext.prototype.accept = function (visitor) {
        if (visitor.visitPhysicalScaling) {
            return visitor.visitPhysicalScaling(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PhysicalScalingContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PhysicalScalingContext = PhysicalScalingContext;
var PixelPatternContext = /** @class */ (function (_super) {
    __extends(PixelPatternContext, _super);
    function PixelPatternContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PixelPatternContext.prototype.rowSize = function () {
        return this.getRuleContext(0, RowSizeContext);
    };
    PixelPatternContext.prototype.pixelRow = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PixelRowContext);
        }
        else {
            return this.getRuleContext(i, PixelRowContext);
        }
    };
    Object.defineProperty(PixelPatternContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pixelPattern; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PixelPatternContext.prototype.enterRule = function (listener) {
        if (listener.enterPixelPattern) {
            listener.enterPixelPattern(this);
        }
    };
    // @Override
    PixelPatternContext.prototype.exitRule = function (listener) {
        if (listener.exitPixelPattern) {
            listener.exitPixelPattern(this);
        }
    };
    // @Override
    PixelPatternContext.prototype.accept = function (visitor) {
        if (visitor.visitPixelPattern) {
            return visitor.visitPixelPattern(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PixelPatternContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PixelPatternContext = PixelPatternContext;
var PixelRowContext = /** @class */ (function (_super) {
    __extends(PixelRowContext, _super);
    function PixelRowContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PixelRowContext.prototype.booleanToken = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BooleanTokenContext);
        }
        else {
            return this.getRuleContext(i, BooleanTokenContext);
        }
    };
    Object.defineProperty(PixelRowContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pixelRow; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PixelRowContext.prototype.enterRule = function (listener) {
        if (listener.enterPixelRow) {
            listener.enterPixelRow(this);
        }
    };
    // @Override
    PixelRowContext.prototype.exitRule = function (listener) {
        if (listener.exitPixelRow) {
            listener.exitPixelRow(this);
        }
    };
    // @Override
    PixelRowContext.prototype.accept = function (visitor) {
        if (visitor.visitPixelRow) {
            return visitor.visitPixelRow(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PixelRowContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PixelRowContext = PixelRowContext;
var PointContext = /** @class */ (function (_super) {
    __extends(PointContext, _super);
    function PointContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PointContext.prototype.pointValue = function () {
        return this.getRuleContext(0, PointValueContext);
    };
    Object.defineProperty(PointContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_point; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PointContext.prototype.enterRule = function (listener) {
        if (listener.enterPoint) {
            listener.enterPoint(this);
        }
    };
    // @Override
    PointContext.prototype.exitRule = function (listener) {
        if (listener.exitPoint) {
            listener.exitPoint(this);
        }
    };
    // @Override
    PointContext.prototype.accept = function (visitor) {
        if (visitor.visitPoint) {
            return visitor.visitPoint(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PointContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PointContext = PointContext;
var PointListContext = /** @class */ (function (_super) {
    __extends(PointListContext, _super);
    function PointListContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PointListContext.prototype.pointValue = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PointValueContext);
        }
        else {
            return this.getRuleContext(i, PointValueContext);
        }
    };
    Object.defineProperty(PointListContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pointList; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PointListContext.prototype.enterRule = function (listener) {
        if (listener.enterPointList) {
            listener.enterPointList(this);
        }
    };
    // @Override
    PointListContext.prototype.exitRule = function (listener) {
        if (listener.exitPointList) {
            listener.exitPointList(this);
        }
    };
    // @Override
    PointListContext.prototype.accept = function (visitor) {
        if (visitor.visitPointList) {
            return visitor.visitPointList(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PointListContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PointListContext = PointListContext;
var PointValueContext = /** @class */ (function (_super) {
    __extends(PointValueContext, _super);
    function PointValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PointValueContext.prototype.pt = function () {
        return this.getRuleContext(0, PtContext);
    };
    Object.defineProperty(PointValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pointValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PointValueContext.prototype.enterRule = function (listener) {
        if (listener.enterPointValue) {
            listener.enterPointValue(this);
        }
    };
    // @Override
    PointValueContext.prototype.exitRule = function (listener) {
        if (listener.exitPointValue) {
            listener.exitPointValue(this);
        }
    };
    // @Override
    PointValueContext.prototype.accept = function (visitor) {
        if (visitor.visitPointValue) {
            return visitor.visitPointValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PointValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PointValueContext = PointValueContext;
var PolygonContext = /** @class */ (function (_super) {
    __extends(PolygonContext, _super);
    function PolygonContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PolygonContext.prototype.pointList = function () {
        return this.getRuleContext(0, PointListContext);
    };
    Object.defineProperty(PolygonContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_polygon; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PolygonContext.prototype.enterRule = function (listener) {
        if (listener.enterPolygon) {
            listener.enterPolygon(this);
        }
    };
    // @Override
    PolygonContext.prototype.exitRule = function (listener) {
        if (listener.exitPolygon) {
            listener.exitPolygon(this);
        }
    };
    // @Override
    PolygonContext.prototype.accept = function (visitor) {
        if (visitor.visitPolygon) {
            return visitor.visitPolygon(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PolygonContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PolygonContext = PolygonContext;
var PortContext = /** @class */ (function (_super) {
    __extends(PortContext, _super);
    function PortContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortContext.prototype.portNameDef = function () {
        return this.tryGetRuleContext(0, PortNameDefContext);
    };
    PortContext.prototype.portDirection = function () {
        return this.tryGetRuleContext(0, PortDirectionContext);
    };
    PortContext.prototype.acLoad = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AcLoadContext);
        }
        else {
            return this.getRuleContext(i, AcLoadContext);
        }
    };
    PortContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    PortContext.prototype.defaultConnection = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DefaultConnectionContext);
        }
        else {
            return this.getRuleContext(i, DefaultConnectionContext);
        }
    };
    PortContext.prototype.designator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorContext);
        }
        else {
            return this.getRuleContext(i, DesignatorContext);
        }
    };
    PortContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    PortContext.prototype.portDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortDelayContext);
        }
        else {
            return this.getRuleContext(i, PortDelayContext);
        }
    };
    PortContext.prototype.portLoadDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortLoadDelayContext);
        }
        else {
            return this.getRuleContext(i, PortLoadDelayContext);
        }
    };
    PortContext.prototype.portNameGenerator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortNameGeneratorContext);
        }
        else {
            return this.getRuleContext(i, PortNameGeneratorContext);
        }
    };
    PortContext.prototype.portWidth = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortWidthContext);
        }
        else {
            return this.getRuleContext(i, PortWidthContext);
        }
    };
    PortContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    PortContext.prototype.schematicPortAttributes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortAttributesContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortAttributesContext);
        }
    };
    PortContext.prototype.unused = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UnusedContext);
        }
        else {
            return this.getRuleContext(i, UnusedContext);
        }
    };
    PortContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(PortContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_port; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortContext.prototype.enterRule = function (listener) {
        if (listener.enterPort) {
            listener.enterPort(this);
        }
    };
    // @Override
    PortContext.prototype.exitRule = function (listener) {
        if (listener.exitPort) {
            listener.exitPort(this);
        }
    };
    // @Override
    PortContext.prototype.accept = function (visitor) {
        if (visitor.visitPort) {
            return visitor.visitPort(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortContext = PortContext;
var PortAnnotateContext = /** @class */ (function (_super) {
    __extends(PortAnnotateContext, _super);
    function PortAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortAnnotateContext.prototype.extendPortDef = function () {
        return this.tryGetRuleContext(0, ExtendPortDefContext);
    };
    PortAnnotateContext.prototype.extendPortMemberDef = function () {
        return this.tryGetRuleContext(0, ExtendPortMemberDefContext);
    };
    PortAnnotateContext.prototype.acLoad = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AcLoadContext);
        }
        else {
            return this.getRuleContext(i, AcLoadContext);
        }
    };
    PortAnnotateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    PortAnnotateContext.prototype.designator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorContext);
        }
        else {
            return this.getRuleContext(i, DesignatorContext);
        }
    };
    PortAnnotateContext.prototype.directionalPortAttributeOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DirectionalPortAttributeOverrideContext);
        }
        else {
            return this.getRuleContext(i, DirectionalPortAttributeOverrideContext);
        }
    };
    PortAnnotateContext.prototype.portDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortDelayContext);
        }
        else {
            return this.getRuleContext(i, PortDelayContext);
        }
    };
    PortAnnotateContext.prototype.portDelayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortDelayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PortDelayOverrideContext);
        }
    };
    PortAnnotateContext.prototype.portLoadDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortLoadDelayContext);
        }
        else {
            return this.getRuleContext(i, PortLoadDelayContext);
        }
    };
    PortAnnotateContext.prototype.portLoadDelayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortLoadDelayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PortLoadDelayOverrideContext);
        }
    };
    PortAnnotateContext.prototype.portPropertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortPropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PortPropertyOverrideContext);
        }
    };
    PortAnnotateContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    Object.defineProperty(PortAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterPortAnnotate) {
            listener.enterPortAnnotate(this);
        }
    };
    // @Override
    PortAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitPortAnnotate) {
            listener.exitPortAnnotate(this);
        }
    };
    // @Override
    PortAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitPortAnnotate) {
            return visitor.visitPortAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortAnnotateContext = PortAnnotateContext;
var PortAttributeDisplayContext = /** @class */ (function (_super) {
    __extends(PortAttributeDisplayContext, _super);
    function PortAttributeDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortAttributeDisplayContext.prototype.acLoadDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AcLoadDisplayContext);
        }
        else {
            return this.getRuleContext(i, AcLoadDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.connectedSignalIndexGeneratorDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectedSignalIndexGeneratorDisplayContext);
        }
        else {
            return this.getRuleContext(i, ConnectedSignalIndexGeneratorDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.dcFanInLoadDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcFanInLoadDisplayContext);
        }
        else {
            return this.getRuleContext(i, DcFanInLoadDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.dcFanOutLoadDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcFanOutLoadDisplayContext);
        }
        else {
            return this.getRuleContext(i, DcFanOutLoadDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.dcMaxFanInDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcMaxFanInDisplayContext);
        }
        else {
            return this.getRuleContext(i, DcMaxFanInDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.dcMaxFanOutDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DcMaxFanOutDisplayContext);
        }
        else {
            return this.getRuleContext(i, DcMaxFanOutDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.designatorDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorDisplayContext);
        }
        else {
            return this.getRuleContext(i, DesignatorDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.portDelayDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortDelayDisplayContext);
        }
        else {
            return this.getRuleContext(i, PortDelayDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.portLoadDelayDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortLoadDelayDisplayContext);
        }
        else {
            return this.getRuleContext(i, PortLoadDelayDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.portNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, PortNameDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.portNameGeneratorDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortNameGeneratorDisplayContext);
        }
        else {
            return this.getRuleContext(i, PortNameGeneratorDisplayContext);
        }
    };
    PortAttributeDisplayContext.prototype.portPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PortPropertyDisplayContext);
        }
    };
    Object.defineProperty(PortAttributeDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portAttributeDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortAttributeDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPortAttributeDisplay) {
            listener.enterPortAttributeDisplay(this);
        }
    };
    // @Override
    PortAttributeDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPortAttributeDisplay) {
            listener.exitPortAttributeDisplay(this);
        }
    };
    // @Override
    PortAttributeDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPortAttributeDisplay) {
            return visitor.visitPortAttributeDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortAttributeDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortAttributeDisplayContext = PortAttributeDisplayContext;
var PortBundleContext = /** @class */ (function (_super) {
    __extends(PortBundleContext, _super);
    function PortBundleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortBundleContext.prototype.portNameDef = function () {
        return this.getRuleContext(0, PortNameDefContext);
    };
    PortBundleContext.prototype.portList = function () {
        return this.getRuleContext(0, PortListContext);
    };
    PortBundleContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    PortBundleContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    PortBundleContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    PortBundleContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    PortBundleContext.prototype.designator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorContext);
        }
        else {
            return this.getRuleContext(i, DesignatorContext);
        }
    };
    Object.defineProperty(PortBundleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portBundle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortBundleContext.prototype.enterRule = function (listener) {
        if (listener.enterPortBundle) {
            listener.enterPortBundle(this);
        }
    };
    // @Override
    PortBundleContext.prototype.exitRule = function (listener) {
        if (listener.exitPortBundle) {
            listener.exitPortBundle(this);
        }
    };
    // @Override
    PortBundleContext.prototype.accept = function (visitor) {
        if (visitor.visitPortBundle) {
            return visitor.visitPortBundle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortBundleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortBundleContext = PortBundleContext;
var PortDelayContext = /** @class */ (function (_super) {
    __extends(PortDelayContext, _super);
    function PortDelayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortDelayContext.prototype.portDelayNameDef = function () {
        return this.getRuleContext(0, PortDelayNameDefContext);
    };
    PortDelayContext.prototype.derivation = function () {
        return this.getRuleContext(0, DerivationContext);
    };
    PortDelayContext.prototype.delay = function () {
        return this.getRuleContext(0, DelayContext);
    };
    PortDelayContext.prototype.becomes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BecomesContext);
        }
        else {
            return this.getRuleContext(i, BecomesContext);
        }
    };
    PortDelayContext.prototype.transition = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TransitionContext);
        }
        else {
            return this.getRuleContext(i, TransitionContext);
        }
    };
    Object.defineProperty(PortDelayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portDelay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortDelayContext.prototype.enterRule = function (listener) {
        if (listener.enterPortDelay) {
            listener.enterPortDelay(this);
        }
    };
    // @Override
    PortDelayContext.prototype.exitRule = function (listener) {
        if (listener.exitPortDelay) {
            listener.exitPortDelay(this);
        }
    };
    // @Override
    PortDelayContext.prototype.accept = function (visitor) {
        if (visitor.visitPortDelay) {
            return visitor.visitPortDelay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortDelayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortDelayContext = PortDelayContext;
var PortDelayDisplayContext = /** @class */ (function (_super) {
    __extends(PortDelayDisplayContext, _super);
    function PortDelayDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortDelayDisplayContext.prototype.portDelayNameRef = function () {
        return this.getRuleContext(0, PortDelayNameRefContext);
    };
    PortDelayDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    Object.defineProperty(PortDelayDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portDelayDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortDelayDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPortDelayDisplay) {
            listener.enterPortDelayDisplay(this);
        }
    };
    // @Override
    PortDelayDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPortDelayDisplay) {
            listener.exitPortDelayDisplay(this);
        }
    };
    // @Override
    PortDelayDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPortDelayDisplay) {
            return visitor.visitPortDelayDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortDelayDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortDelayDisplayContext = PortDelayDisplayContext;
var PortDelayNameDefContext = /** @class */ (function (_super) {
    __extends(PortDelayNameDefContext, _super);
    function PortDelayNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortDelayNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(PortDelayNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portDelayNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortDelayNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterPortDelayNameDef) {
            listener.enterPortDelayNameDef(this);
        }
    };
    // @Override
    PortDelayNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitPortDelayNameDef) {
            listener.exitPortDelayNameDef(this);
        }
    };
    // @Override
    PortDelayNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitPortDelayNameDef) {
            return visitor.visitPortDelayNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortDelayNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortDelayNameDefContext = PortDelayNameDefContext;
var PortDelayNameRefContext = /** @class */ (function (_super) {
    __extends(PortDelayNameRefContext, _super);
    function PortDelayNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortDelayNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(PortDelayNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portDelayNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortDelayNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPortDelayNameRef) {
            listener.enterPortDelayNameRef(this);
        }
    };
    // @Override
    PortDelayNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPortDelayNameRef) {
            listener.exitPortDelayNameRef(this);
        }
    };
    // @Override
    PortDelayNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPortDelayNameRef) {
            return visitor.visitPortDelayNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortDelayNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortDelayNameRefContext = PortDelayNameRefContext;
var PortDelayOverrideContext = /** @class */ (function (_super) {
    __extends(PortDelayOverrideContext, _super);
    function PortDelayOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortDelayOverrideContext.prototype.portDelayNameRef = function () {
        return this.getRuleContext(0, PortDelayNameRefContext);
    };
    PortDelayOverrideContext.prototype.derivation = function () {
        return this.getRuleContext(0, DerivationContext);
    };
    PortDelayOverrideContext.prototype.delay = function () {
        return this.getRuleContext(0, DelayContext);
    };
    PortDelayOverrideContext.prototype.becomes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BecomesContext);
        }
        else {
            return this.getRuleContext(i, BecomesContext);
        }
    };
    PortDelayOverrideContext.prototype.transition = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TransitionContext);
        }
        else {
            return this.getRuleContext(i, TransitionContext);
        }
    };
    Object.defineProperty(PortDelayOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portDelayOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortDelayOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterPortDelayOverride) {
            listener.enterPortDelayOverride(this);
        }
    };
    // @Override
    PortDelayOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitPortDelayOverride) {
            listener.exitPortDelayOverride(this);
        }
    };
    // @Override
    PortDelayOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitPortDelayOverride) {
            return visitor.visitPortDelayOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortDelayOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortDelayOverrideContext = PortDelayOverrideContext;
var PortDirectionContext = /** @class */ (function (_super) {
    __extends(PortDirectionContext, _super);
    function PortDirectionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortDirectionContext.prototype.inputPort = function () {
        return this.tryGetRuleContext(0, InputPortContext);
    };
    PortDirectionContext.prototype.outputPort = function () {
        return this.tryGetRuleContext(0, OutputPortContext);
    };
    PortDirectionContext.prototype.bidirectionalPort = function () {
        return this.tryGetRuleContext(0, BidirectionalPortContext);
    };
    PortDirectionContext.prototype.unspecifiedDirectionPort = function () {
        return this.tryGetRuleContext(0, UnspecifiedDirectionPortContext);
    };
    Object.defineProperty(PortDirectionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portDirection; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortDirectionContext.prototype.enterRule = function (listener) {
        if (listener.enterPortDirection) {
            listener.enterPortDirection(this);
        }
    };
    // @Override
    PortDirectionContext.prototype.exitRule = function (listener) {
        if (listener.exitPortDirection) {
            listener.exitPortDirection(this);
        }
    };
    // @Override
    PortDirectionContext.prototype.accept = function (visitor) {
        if (visitor.visitPortDirection) {
            return visitor.visitPortDirection(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortDirectionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortDirectionContext = PortDirectionContext;
var PortDirectionIndicatorContext = /** @class */ (function (_super) {
    __extends(PortDirectionIndicatorContext, _super);
    function PortDirectionIndicatorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortDirectionIndicatorContext.prototype.input = function () {
        return this.tryGetRuleContext(0, InputContext);
    };
    PortDirectionIndicatorContext.prototype.output = function () {
        return this.tryGetRuleContext(0, OutputContext);
    };
    PortDirectionIndicatorContext.prototype.bidirectional = function () {
        return this.tryGetRuleContext(0, BidirectionalContext);
    };
    PortDirectionIndicatorContext.prototype.unspecified = function () {
        return this.tryGetRuleContext(0, UnspecifiedContext);
    };
    PortDirectionIndicatorContext.prototype.unrestricted = function () {
        return this.tryGetRuleContext(0, UnrestrictedContext);
    };
    PortDirectionIndicatorContext.prototype.mixedDirection = function () {
        return this.tryGetRuleContext(0, MixedDirectionContext);
    };
    Object.defineProperty(PortDirectionIndicatorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portDirectionIndicator; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortDirectionIndicatorContext.prototype.enterRule = function (listener) {
        if (listener.enterPortDirectionIndicator) {
            listener.enterPortDirectionIndicator(this);
        }
    };
    // @Override
    PortDirectionIndicatorContext.prototype.exitRule = function (listener) {
        if (listener.exitPortDirectionIndicator) {
            listener.exitPortDirectionIndicator(this);
        }
    };
    // @Override
    PortDirectionIndicatorContext.prototype.accept = function (visitor) {
        if (visitor.visitPortDirectionIndicator) {
            return visitor.visitPortDirectionIndicator(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortDirectionIndicatorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortDirectionIndicatorContext = PortDirectionIndicatorContext;
var PortIndexValueContext = /** @class */ (function (_super) {
    __extends(PortIndexValueContext, _super);
    function PortIndexValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(PortIndexValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portIndexValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortIndexValueContext.prototype.enterRule = function (listener) {
        if (listener.enterPortIndexValue) {
            listener.enterPortIndexValue(this);
        }
    };
    // @Override
    PortIndexValueContext.prototype.exitRule = function (listener) {
        if (listener.exitPortIndexValue) {
            listener.exitPortIndexValue(this);
        }
    };
    // @Override
    PortIndexValueContext.prototype.accept = function (visitor) {
        if (visitor.visitPortIndexValue) {
            return visitor.visitPortIndexValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortIndexValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortIndexValueContext = PortIndexValueContext;
var PortInstanceRefContext = /** @class */ (function (_super) {
    __extends(PortInstanceRefContext, _super);
    function PortInstanceRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortInstanceRefContext.prototype.portNameRef = function () {
        return this.tryGetRuleContext(0, PortNameRefContext);
    };
    PortInstanceRefContext.prototype.portMemberRef = function () {
        return this.tryGetRuleContext(0, PortMemberRefContext);
    };
    PortInstanceRefContext.prototype.instanceRef = function () {
        return this.tryGetRuleContext(0, InstanceRefContext);
    };
    PortInstanceRefContext.prototype.instanceMemberRef = function () {
        return this.tryGetRuleContext(0, InstanceMemberRefContext);
    };
    Object.defineProperty(PortInstanceRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portInstanceRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortInstanceRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPortInstanceRef) {
            listener.enterPortInstanceRef(this);
        }
    };
    // @Override
    PortInstanceRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPortInstanceRef) {
            listener.exitPortInstanceRef(this);
        }
    };
    // @Override
    PortInstanceRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPortInstanceRef) {
            return visitor.visitPortInstanceRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortInstanceRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortInstanceRefContext = PortInstanceRefContext;
var PortJoinedContext = /** @class */ (function (_super) {
    __extends(PortJoinedContext, _super);
    function PortJoinedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortJoinedContext.prototype.globalPortRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortRefContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortRefContext);
        }
    };
    PortJoinedContext.prototype.localPortGroupRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LocalPortGroupRefContext);
        }
        else {
            return this.getRuleContext(i, LocalPortGroupRefContext);
        }
    };
    PortJoinedContext.prototype.portInstanceRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortInstanceRefContext);
        }
        else {
            return this.getRuleContext(i, PortInstanceRefContext);
        }
    };
    PortJoinedContext.prototype.portRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortRefContext);
        }
        else {
            return this.getRuleContext(i, PortRefContext);
        }
    };
    Object.defineProperty(PortJoinedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portJoined; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortJoinedContext.prototype.enterRule = function (listener) {
        if (listener.enterPortJoined) {
            listener.enterPortJoined(this);
        }
    };
    // @Override
    PortJoinedContext.prototype.exitRule = function (listener) {
        if (listener.exitPortJoined) {
            listener.exitPortJoined(this);
        }
    };
    // @Override
    PortJoinedContext.prototype.accept = function (visitor) {
        if (visitor.visitPortJoined) {
            return visitor.visitPortJoined(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortJoinedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortJoinedContext = PortJoinedContext;
var PortListContext = /** @class */ (function (_super) {
    __extends(PortListContext, _super);
    function PortListContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortListContext.prototype.portRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortRefContext);
        }
        else {
            return this.getRuleContext(i, PortRefContext);
        }
    };
    Object.defineProperty(PortListContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portList; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortListContext.prototype.enterRule = function (listener) {
        if (listener.enterPortList) {
            listener.enterPortList(this);
        }
    };
    // @Override
    PortListContext.prototype.exitRule = function (listener) {
        if (listener.exitPortList) {
            listener.exitPortList(this);
        }
    };
    // @Override
    PortListContext.prototype.accept = function (visitor) {
        if (visitor.visitPortList) {
            return visitor.visitPortList(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortListContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortListContext = PortListContext;
var PortLoadDelayContext = /** @class */ (function (_super) {
    __extends(PortLoadDelayContext, _super);
    function PortLoadDelayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortLoadDelayContext.prototype.portLoadDelayNameDef = function () {
        return this.getRuleContext(0, PortLoadDelayNameDefContext);
    };
    PortLoadDelayContext.prototype.derivation = function () {
        return this.getRuleContext(0, DerivationContext);
    };
    PortLoadDelayContext.prototype.loadDelay = function () {
        return this.getRuleContext(0, LoadDelayContext);
    };
    PortLoadDelayContext.prototype.becomes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BecomesContext);
        }
        else {
            return this.getRuleContext(i, BecomesContext);
        }
    };
    PortLoadDelayContext.prototype.transition = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TransitionContext);
        }
        else {
            return this.getRuleContext(i, TransitionContext);
        }
    };
    Object.defineProperty(PortLoadDelayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portLoadDelay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortLoadDelayContext.prototype.enterRule = function (listener) {
        if (listener.enterPortLoadDelay) {
            listener.enterPortLoadDelay(this);
        }
    };
    // @Override
    PortLoadDelayContext.prototype.exitRule = function (listener) {
        if (listener.exitPortLoadDelay) {
            listener.exitPortLoadDelay(this);
        }
    };
    // @Override
    PortLoadDelayContext.prototype.accept = function (visitor) {
        if (visitor.visitPortLoadDelay) {
            return visitor.visitPortLoadDelay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortLoadDelayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortLoadDelayContext = PortLoadDelayContext;
var PortLoadDelayDisplayContext = /** @class */ (function (_super) {
    __extends(PortLoadDelayDisplayContext, _super);
    function PortLoadDelayDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortLoadDelayDisplayContext.prototype.portLoadDelayNameRef = function () {
        return this.getRuleContext(0, PortLoadDelayNameRefContext);
    };
    PortLoadDelayDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    Object.defineProperty(PortLoadDelayDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portLoadDelayDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortLoadDelayDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPortLoadDelayDisplay) {
            listener.enterPortLoadDelayDisplay(this);
        }
    };
    // @Override
    PortLoadDelayDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPortLoadDelayDisplay) {
            listener.exitPortLoadDelayDisplay(this);
        }
    };
    // @Override
    PortLoadDelayDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPortLoadDelayDisplay) {
            return visitor.visitPortLoadDelayDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortLoadDelayDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortLoadDelayDisplayContext = PortLoadDelayDisplayContext;
var PortLoadDelayNameDefContext = /** @class */ (function (_super) {
    __extends(PortLoadDelayNameDefContext, _super);
    function PortLoadDelayNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortLoadDelayNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(PortLoadDelayNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portLoadDelayNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortLoadDelayNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterPortLoadDelayNameDef) {
            listener.enterPortLoadDelayNameDef(this);
        }
    };
    // @Override
    PortLoadDelayNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitPortLoadDelayNameDef) {
            listener.exitPortLoadDelayNameDef(this);
        }
    };
    // @Override
    PortLoadDelayNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitPortLoadDelayNameDef) {
            return visitor.visitPortLoadDelayNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortLoadDelayNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortLoadDelayNameDefContext = PortLoadDelayNameDefContext;
var PortLoadDelayNameRefContext = /** @class */ (function (_super) {
    __extends(PortLoadDelayNameRefContext, _super);
    function PortLoadDelayNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortLoadDelayNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(PortLoadDelayNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portLoadDelayNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortLoadDelayNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPortLoadDelayNameRef) {
            listener.enterPortLoadDelayNameRef(this);
        }
    };
    // @Override
    PortLoadDelayNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPortLoadDelayNameRef) {
            listener.exitPortLoadDelayNameRef(this);
        }
    };
    // @Override
    PortLoadDelayNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPortLoadDelayNameRef) {
            return visitor.visitPortLoadDelayNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortLoadDelayNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortLoadDelayNameRefContext = PortLoadDelayNameRefContext;
var PortLoadDelayOverrideContext = /** @class */ (function (_super) {
    __extends(PortLoadDelayOverrideContext, _super);
    function PortLoadDelayOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortLoadDelayOverrideContext.prototype.portLoadDelayNameRef = function () {
        return this.getRuleContext(0, PortLoadDelayNameRefContext);
    };
    PortLoadDelayOverrideContext.prototype.derivation = function () {
        return this.getRuleContext(0, DerivationContext);
    };
    PortLoadDelayOverrideContext.prototype.loadDelay = function () {
        return this.getRuleContext(0, LoadDelayContext);
    };
    PortLoadDelayOverrideContext.prototype.becomes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BecomesContext);
        }
        else {
            return this.getRuleContext(i, BecomesContext);
        }
    };
    PortLoadDelayOverrideContext.prototype.transition = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TransitionContext);
        }
        else {
            return this.getRuleContext(i, TransitionContext);
        }
    };
    Object.defineProperty(PortLoadDelayOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portLoadDelayOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortLoadDelayOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterPortLoadDelayOverride) {
            listener.enterPortLoadDelayOverride(this);
        }
    };
    // @Override
    PortLoadDelayOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitPortLoadDelayOverride) {
            listener.exitPortLoadDelayOverride(this);
        }
    };
    // @Override
    PortLoadDelayOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitPortLoadDelayOverride) {
            return visitor.visitPortLoadDelayOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortLoadDelayOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortLoadDelayOverrideContext = PortLoadDelayOverrideContext;
var PortMemberRefContext = /** @class */ (function (_super) {
    __extends(PortMemberRefContext, _super);
    function PortMemberRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortMemberRefContext.prototype.portNameRef = function () {
        return this.getRuleContext(0, PortNameRefContext);
    };
    PortMemberRefContext.prototype.indexValue = function () {
        return this.getRuleContext(0, IndexValueContext);
    };
    Object.defineProperty(PortMemberRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portMemberRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortMemberRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPortMemberRef) {
            listener.enterPortMemberRef(this);
        }
    };
    // @Override
    PortMemberRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPortMemberRef) {
            listener.exitPortMemberRef(this);
        }
    };
    // @Override
    PortMemberRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPortMemberRef) {
            return visitor.visitPortMemberRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortMemberRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortMemberRefContext = PortMemberRefContext;
var PortNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(PortNameCaseSensitiveContext, _super);
    function PortNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(PortNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterPortNameCaseSensitive) {
            listener.enterPortNameCaseSensitive(this);
        }
    };
    // @Override
    PortNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitPortNameCaseSensitive) {
            listener.exitPortNameCaseSensitive(this);
        }
    };
    // @Override
    PortNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitPortNameCaseSensitive) {
            return visitor.visitPortNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortNameCaseSensitiveContext = PortNameCaseSensitiveContext;
var PortNameDefContext = /** @class */ (function (_super) {
    __extends(PortNameDefContext, _super);
    function PortNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(PortNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterPortNameDef) {
            listener.enterPortNameDef(this);
        }
    };
    // @Override
    PortNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitPortNameDef) {
            listener.exitPortNameDef(this);
        }
    };
    // @Override
    PortNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitPortNameDef) {
            return visitor.visitPortNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortNameDefContext = PortNameDefContext;
var PortNameDisplayContext = /** @class */ (function (_super) {
    __extends(PortNameDisplayContext, _super);
    function PortNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortNameDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    PortNameDisplayContext.prototype.displayNameOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameOverrideContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameOverrideContext);
        }
    };
    Object.defineProperty(PortNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPortNameDisplay) {
            listener.enterPortNameDisplay(this);
        }
    };
    // @Override
    PortNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPortNameDisplay) {
            listener.exitPortNameDisplay(this);
        }
    };
    // @Override
    PortNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPortNameDisplay) {
            return visitor.visitPortNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortNameDisplayContext = PortNameDisplayContext;
var PortNameGeneratorContext = /** @class */ (function (_super) {
    __extends(PortNameGeneratorContext, _super);
    function PortNameGeneratorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortNameGeneratorContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    Object.defineProperty(PortNameGeneratorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portNameGenerator; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortNameGeneratorContext.prototype.enterRule = function (listener) {
        if (listener.enterPortNameGenerator) {
            listener.enterPortNameGenerator(this);
        }
    };
    // @Override
    PortNameGeneratorContext.prototype.exitRule = function (listener) {
        if (listener.exitPortNameGenerator) {
            listener.exitPortNameGenerator(this);
        }
    };
    // @Override
    PortNameGeneratorContext.prototype.accept = function (visitor) {
        if (visitor.visitPortNameGenerator) {
            return visitor.visitPortNameGenerator(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortNameGeneratorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortNameGeneratorContext = PortNameGeneratorContext;
var PortNameGeneratorDisplayContext = /** @class */ (function (_super) {
    __extends(PortNameGeneratorDisplayContext, _super);
    function PortNameGeneratorDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortNameGeneratorDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    PortNameGeneratorDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    PortNameGeneratorDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(PortNameGeneratorDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portNameGeneratorDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortNameGeneratorDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPortNameGeneratorDisplay) {
            listener.enterPortNameGeneratorDisplay(this);
        }
    };
    // @Override
    PortNameGeneratorDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPortNameGeneratorDisplay) {
            listener.exitPortNameGeneratorDisplay(this);
        }
    };
    // @Override
    PortNameGeneratorDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPortNameGeneratorDisplay) {
            return visitor.visitPortNameGeneratorDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortNameGeneratorDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortNameGeneratorDisplayContext = PortNameGeneratorDisplayContext;
var PortNameRefContext = /** @class */ (function (_super) {
    __extends(PortNameRefContext, _super);
    function PortNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(PortNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPortNameRef) {
            listener.enterPortNameRef(this);
        }
    };
    // @Override
    PortNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPortNameRef) {
            listener.exitPortNameRef(this);
        }
    };
    // @Override
    PortNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPortNameRef) {
            return visitor.visitPortNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortNameRefContext = PortNameRefContext;
var PortPropertyDisplayContext = /** @class */ (function (_super) {
    __extends(PortPropertyDisplayContext, _super);
    function PortPropertyDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortPropertyDisplayContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    PortPropertyDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    PortPropertyDisplayContext.prototype.propertyNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyNameDisplayContext);
        }
    };
    Object.defineProperty(PortPropertyDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portPropertyDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortPropertyDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPortPropertyDisplay) {
            listener.enterPortPropertyDisplay(this);
        }
    };
    // @Override
    PortPropertyDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPortPropertyDisplay) {
            listener.exitPortPropertyDisplay(this);
        }
    };
    // @Override
    PortPropertyDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPortPropertyDisplay) {
            return visitor.visitPortPropertyDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortPropertyDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortPropertyDisplayContext = PortPropertyDisplayContext;
var PortPropertyDisplayOverrideContext = /** @class */ (function (_super) {
    __extends(PortPropertyDisplayOverrideContext, _super);
    function PortPropertyDisplayOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortPropertyDisplayOverrideContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    PortPropertyDisplayOverrideContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    PortPropertyDisplayOverrideContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    PortPropertyDisplayOverrideContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    PortPropertyDisplayOverrideContext.prototype.propertyNameDisplay = function () {
        return this.tryGetRuleContext(0, PropertyNameDisplayContext);
    };
    Object.defineProperty(PortPropertyDisplayOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portPropertyDisplayOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortPropertyDisplayOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterPortPropertyDisplayOverride) {
            listener.enterPortPropertyDisplayOverride(this);
        }
    };
    // @Override
    PortPropertyDisplayOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitPortPropertyDisplayOverride) {
            listener.exitPortPropertyDisplayOverride(this);
        }
    };
    // @Override
    PortPropertyDisplayOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitPortPropertyDisplayOverride) {
            return visitor.visitPortPropertyDisplayOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortPropertyDisplayOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortPropertyDisplayOverrideContext = PortPropertyDisplayOverrideContext;
var PortPropertyOverrideContext = /** @class */ (function (_super) {
    __extends(PortPropertyOverrideContext, _super);
    function PortPropertyOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortPropertyOverrideContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    PortPropertyOverrideContext.prototype.typedValue = function () {
        return this.tryGetRuleContext(0, TypedValueContext);
    };
    PortPropertyOverrideContext.prototype.untyped = function () {
        return this.tryGetRuleContext(0, UntypedContext);
    };
    PortPropertyOverrideContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    PortPropertyOverrideContext.prototype.fixed = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FixedContext);
        }
        else {
            return this.getRuleContext(i, FixedContext);
        }
    };
    PortPropertyOverrideContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(PortPropertyOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portPropertyOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortPropertyOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterPortPropertyOverride) {
            listener.enterPortPropertyOverride(this);
        }
    };
    // @Override
    PortPropertyOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitPortPropertyOverride) {
            listener.exitPortPropertyOverride(this);
        }
    };
    // @Override
    PortPropertyOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitPortPropertyOverride) {
            return visitor.visitPortPropertyOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortPropertyOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortPropertyOverrideContext = PortPropertyOverrideContext;
var PortRefContext = /** @class */ (function (_super) {
    __extends(PortRefContext, _super);
    function PortRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortRefContext.prototype.portNameRef = function () {
        return this.getRuleContext(0, PortNameRefContext);
    };
    Object.defineProperty(PortRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPortRef) {
            listener.enterPortRef(this);
        }
    };
    // @Override
    PortRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPortRef) {
            listener.exitPortRef(this);
        }
    };
    // @Override
    PortRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPortRef) {
            return visitor.visitPortRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortRefContext = PortRefContext;
var PortSetContext = /** @class */ (function (_super) {
    __extends(PortSetContext, _super);
    function PortSetContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortSetContext.prototype.portRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortRefContext);
        }
        else {
            return this.getRuleContext(i, PortRefContext);
        }
    };
    Object.defineProperty(PortSetContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portSet; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortSetContext.prototype.enterRule = function (listener) {
        if (listener.enterPortSet) {
            listener.enterPortSet(this);
        }
    };
    // @Override
    PortSetContext.prototype.exitRule = function (listener) {
        if (listener.exitPortSet) {
            listener.exitPortSet(this);
        }
    };
    // @Override
    PortSetContext.prototype.accept = function (visitor) {
        if (visitor.visitPortSet) {
            return visitor.visitPortSet(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortSetContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortSetContext = PortSetContext;
var PortWidthContext = /** @class */ (function (_super) {
    __extends(PortWidthContext, _super);
    function PortWidthContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PortWidthContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(PortWidthContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_portWidth; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PortWidthContext.prototype.enterRule = function (listener) {
        if (listener.enterPortWidth) {
            listener.enterPortWidth(this);
        }
    };
    // @Override
    PortWidthContext.prototype.exitRule = function (listener) {
        if (listener.exitPortWidth) {
            listener.exitPortWidth(this);
        }
    };
    // @Override
    PortWidthContext.prototype.accept = function (visitor) {
        if (visitor.visitPortWidth) {
            return visitor.visitPortWidth(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PortWidthContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PortWidthContext = PortWidthContext;
var PresentLogicValueContext = /** @class */ (function (_super) {
    __extends(PresentLogicValueContext, _super);
    function PresentLogicValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PresentLogicValueContext.prototype.logicNameRef = function () {
        return this.tryGetRuleContext(0, LogicNameRefContext);
    };
    PresentLogicValueContext.prototype.logicList = function () {
        return this.tryGetRuleContext(0, LogicListContext);
    };
    PresentLogicValueContext.prototype.logicOneOf = function () {
        return this.tryGetRuleContext(0, LogicOneOfContext);
    };
    Object.defineProperty(PresentLogicValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_presentLogicValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PresentLogicValueContext.prototype.enterRule = function (listener) {
        if (listener.enterPresentLogicValue) {
            listener.enterPresentLogicValue(this);
        }
    };
    // @Override
    PresentLogicValueContext.prototype.exitRule = function (listener) {
        if (listener.exitPresentLogicValue) {
            listener.exitPresentLogicValue(this);
        }
    };
    // @Override
    PresentLogicValueContext.prototype.accept = function (visitor) {
        if (visitor.visitPresentLogicValue) {
            return visitor.visitPresentLogicValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PresentLogicValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PresentLogicValueContext = PresentLogicValueContext;
var PreviousLogicValueContext = /** @class */ (function (_super) {
    __extends(PreviousLogicValueContext, _super);
    function PreviousLogicValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PreviousLogicValueContext.prototype.logicNameRef = function () {
        return this.tryGetRuleContext(0, LogicNameRefContext);
    };
    PreviousLogicValueContext.prototype.logicList = function () {
        return this.tryGetRuleContext(0, LogicListContext);
    };
    PreviousLogicValueContext.prototype.logicOneOf = function () {
        return this.tryGetRuleContext(0, LogicOneOfContext);
    };
    Object.defineProperty(PreviousLogicValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_previousLogicValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PreviousLogicValueContext.prototype.enterRule = function (listener) {
        if (listener.enterPreviousLogicValue) {
            listener.enterPreviousLogicValue(this);
        }
    };
    // @Override
    PreviousLogicValueContext.prototype.exitRule = function (listener) {
        if (listener.exitPreviousLogicValue) {
            listener.exitPreviousLogicValue(this);
        }
    };
    // @Override
    PreviousLogicValueContext.prototype.accept = function (visitor) {
        if (visitor.visitPreviousLogicValue) {
            return visitor.visitPreviousLogicValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PreviousLogicValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PreviousLogicValueContext = PreviousLogicValueContext;
var PreviousVersionContext = /** @class */ (function (_super) {
    __extends(PreviousVersionContext, _super);
    function PreviousVersionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PreviousVersionContext.prototype.viewRef = function () {
        return this.getRuleContext(0, ViewRefContext);
    };
    PreviousVersionContext.prototype.reason = function () {
        return this.tryGetRuleContext(0, ReasonContext);
    };
    Object.defineProperty(PreviousVersionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_previousVersion; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PreviousVersionContext.prototype.enterRule = function (listener) {
        if (listener.enterPreviousVersion) {
            listener.enterPreviousVersion(this);
        }
    };
    // @Override
    PreviousVersionContext.prototype.exitRule = function (listener) {
        if (listener.exitPreviousVersion) {
            listener.exitPreviousVersion(this);
        }
    };
    // @Override
    PreviousVersionContext.prototype.accept = function (visitor) {
        if (visitor.visitPreviousVersion) {
            return visitor.visitPreviousVersion(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PreviousVersionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PreviousVersionContext = PreviousVersionContext;
var PrimaryNameContext = /** @class */ (function (_super) {
    __extends(PrimaryNameContext, _super);
    function PrimaryNameContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PrimaryNameContext.prototype.originalName = function () {
        return this.getRuleContext(0, OriginalNameContext);
    };
    PrimaryNameContext.prototype.displayName = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameContext);
        }
    };
    PrimaryNameContext.prototype.generated = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GeneratedContext);
        }
        else {
            return this.getRuleContext(i, GeneratedContext);
        }
    };
    PrimaryNameContext.prototype.nameStructure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameStructureContext);
        }
        else {
            return this.getRuleContext(i, NameStructureContext);
        }
    };
    Object.defineProperty(PrimaryNameContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_primaryName; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PrimaryNameContext.prototype.enterRule = function (listener) {
        if (listener.enterPrimaryName) {
            listener.enterPrimaryName(this);
        }
    };
    // @Override
    PrimaryNameContext.prototype.exitRule = function (listener) {
        if (listener.exitPrimaryName) {
            listener.exitPrimaryName(this);
        }
    };
    // @Override
    PrimaryNameContext.prototype.accept = function (visitor) {
        if (visitor.visitPrimaryName) {
            return visitor.visitPrimaryName(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PrimaryNameContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PrimaryNameContext = PrimaryNameContext;
var ProgramContext = /** @class */ (function (_super) {
    __extends(ProgramContext, _super);
    function ProgramContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ProgramContext.prototype.stringValue = function () {
        return this.getRuleContext(0, StringValueContext);
    };
    ProgramContext.prototype.version = function () {
        return this.tryGetRuleContext(0, VersionContext);
    };
    Object.defineProperty(ProgramContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_program; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ProgramContext.prototype.enterRule = function (listener) {
        if (listener.enterProgram) {
            listener.enterProgram(this);
        }
    };
    // @Override
    ProgramContext.prototype.exitRule = function (listener) {
        if (listener.exitProgram) {
            listener.exitProgram(this);
        }
    };
    // @Override
    ProgramContext.prototype.accept = function (visitor) {
        if (visitor.visitProgram) {
            return visitor.visitProgram(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ProgramContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ProgramContext = ProgramContext;
var PropertyContext = /** @class */ (function (_super) {
    __extends(PropertyContext, _super);
    function PropertyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PropertyContext.prototype.propertyNameDef = function () {
        return this.getRuleContext(0, PropertyNameDefContext);
    };
    PropertyContext.prototype.typedValue = function () {
        return this.tryGetRuleContext(0, TypedValueContext);
    };
    PropertyContext.prototype.untyped = function () {
        return this.tryGetRuleContext(0, UntypedContext);
    };
    PropertyContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    PropertyContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    PropertyContext.prototype.owner = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OwnerContext);
        }
        else {
            return this.getRuleContext(i, OwnerContext);
        }
    };
    PropertyContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    PropertyContext.prototype.propertyInheritanceControl = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyInheritanceControlContext);
        }
        else {
            return this.getRuleContext(i, PropertyInheritanceControlContext);
        }
    };
    PropertyContext.prototype.unitRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UnitRefContext);
        }
        else {
            return this.getRuleContext(i, UnitRefContext);
        }
    };
    Object.defineProperty(PropertyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_property; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PropertyContext.prototype.enterRule = function (listener) {
        if (listener.enterProperty) {
            listener.enterProperty(this);
        }
    };
    // @Override
    PropertyContext.prototype.exitRule = function (listener) {
        if (listener.exitProperty) {
            listener.exitProperty(this);
        }
    };
    // @Override
    PropertyContext.prototype.accept = function (visitor) {
        if (visitor.visitProperty) {
            return visitor.visitProperty(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PropertyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PropertyContext = PropertyContext;
var PropertyDisplayContext = /** @class */ (function (_super) {
    __extends(PropertyDisplayContext, _super);
    function PropertyDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PropertyDisplayContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    PropertyDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    PropertyDisplayContext.prototype.propertyNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyNameDisplayContext);
        }
    };
    Object.defineProperty(PropertyDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_propertyDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PropertyDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPropertyDisplay) {
            listener.enterPropertyDisplay(this);
        }
    };
    // @Override
    PropertyDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPropertyDisplay) {
            listener.exitPropertyDisplay(this);
        }
    };
    // @Override
    PropertyDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPropertyDisplay) {
            return visitor.visitPropertyDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PropertyDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PropertyDisplayContext = PropertyDisplayContext;
var PropertyDisplayOverrideContext = /** @class */ (function (_super) {
    __extends(PropertyDisplayOverrideContext, _super);
    function PropertyDisplayOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PropertyDisplayOverrideContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    PropertyDisplayOverrideContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    PropertyDisplayOverrideContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    PropertyDisplayOverrideContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    PropertyDisplayOverrideContext.prototype.propertyNameDisplay = function () {
        return this.tryGetRuleContext(0, PropertyNameDisplayContext);
    };
    Object.defineProperty(PropertyDisplayOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_propertyDisplayOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PropertyDisplayOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterPropertyDisplayOverride) {
            listener.enterPropertyDisplayOverride(this);
        }
    };
    // @Override
    PropertyDisplayOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitPropertyDisplayOverride) {
            listener.exitPropertyDisplayOverride(this);
        }
    };
    // @Override
    PropertyDisplayOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitPropertyDisplayOverride) {
            return visitor.visitPropertyDisplayOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PropertyDisplayOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PropertyDisplayOverrideContext = PropertyDisplayOverrideContext;
var PropertyInheritanceControlContext = /** @class */ (function (_super) {
    __extends(PropertyInheritanceControlContext, _super);
    function PropertyInheritanceControlContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PropertyInheritanceControlContext.prototype.fixed = function () {
        return this.tryGetRuleContext(0, FixedContext);
    };
    PropertyInheritanceControlContext.prototype.notInherited = function () {
        return this.tryGetRuleContext(0, NotInheritedContext);
    };
    Object.defineProperty(PropertyInheritanceControlContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_propertyInheritanceControl; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PropertyInheritanceControlContext.prototype.enterRule = function (listener) {
        if (listener.enterPropertyInheritanceControl) {
            listener.enterPropertyInheritanceControl(this);
        }
    };
    // @Override
    PropertyInheritanceControlContext.prototype.exitRule = function (listener) {
        if (listener.exitPropertyInheritanceControl) {
            listener.exitPropertyInheritanceControl(this);
        }
    };
    // @Override
    PropertyInheritanceControlContext.prototype.accept = function (visitor) {
        if (visitor.visitPropertyInheritanceControl) {
            return visitor.visitPropertyInheritanceControl(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PropertyInheritanceControlContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PropertyInheritanceControlContext = PropertyInheritanceControlContext;
var PropertyNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(PropertyNameCaseSensitiveContext, _super);
    function PropertyNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PropertyNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(PropertyNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_propertyNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PropertyNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterPropertyNameCaseSensitive) {
            listener.enterPropertyNameCaseSensitive(this);
        }
    };
    // @Override
    PropertyNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitPropertyNameCaseSensitive) {
            listener.exitPropertyNameCaseSensitive(this);
        }
    };
    // @Override
    PropertyNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitPropertyNameCaseSensitive) {
            return visitor.visitPropertyNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PropertyNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PropertyNameCaseSensitiveContext = PropertyNameCaseSensitiveContext;
var PropertyNameDefContext = /** @class */ (function (_super) {
    __extends(PropertyNameDefContext, _super);
    function PropertyNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PropertyNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(PropertyNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_propertyNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PropertyNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterPropertyNameDef) {
            listener.enterPropertyNameDef(this);
        }
    };
    // @Override
    PropertyNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitPropertyNameDef) {
            listener.exitPropertyNameDef(this);
        }
    };
    // @Override
    PropertyNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitPropertyNameDef) {
            return visitor.visitPropertyNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PropertyNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PropertyNameDefContext = PropertyNameDefContext;
var PropertyNameDisplayContext = /** @class */ (function (_super) {
    __extends(PropertyNameDisplayContext, _super);
    function PropertyNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PropertyNameDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    PropertyNameDisplayContext.prototype.displayNameOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameOverrideContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameOverrideContext);
        }
    };
    Object.defineProperty(PropertyNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_propertyNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PropertyNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterPropertyNameDisplay) {
            listener.enterPropertyNameDisplay(this);
        }
    };
    // @Override
    PropertyNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitPropertyNameDisplay) {
            listener.exitPropertyNameDisplay(this);
        }
    };
    // @Override
    PropertyNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitPropertyNameDisplay) {
            return visitor.visitPropertyNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PropertyNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PropertyNameDisplayContext = PropertyNameDisplayContext;
var PropertyNameRefContext = /** @class */ (function (_super) {
    __extends(PropertyNameRefContext, _super);
    function PropertyNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PropertyNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(PropertyNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_propertyNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PropertyNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterPropertyNameRef) {
            listener.enterPropertyNameRef(this);
        }
    };
    // @Override
    PropertyNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitPropertyNameRef) {
            listener.exitPropertyNameRef(this);
        }
    };
    // @Override
    PropertyNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitPropertyNameRef) {
            return visitor.visitPropertyNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PropertyNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PropertyNameRefContext = PropertyNameRefContext;
var PropertyOverrideContext = /** @class */ (function (_super) {
    __extends(PropertyOverrideContext, _super);
    function PropertyOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PropertyOverrideContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    PropertyOverrideContext.prototype.typedValue = function () {
        return this.tryGetRuleContext(0, TypedValueContext);
    };
    PropertyOverrideContext.prototype.untyped = function () {
        return this.tryGetRuleContext(0, UntypedContext);
    };
    PropertyOverrideContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    PropertyOverrideContext.prototype.fixed = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FixedContext);
        }
        else {
            return this.getRuleContext(i, FixedContext);
        }
    };
    PropertyOverrideContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(PropertyOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_propertyOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PropertyOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterPropertyOverride) {
            listener.enterPropertyOverride(this);
        }
    };
    // @Override
    PropertyOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitPropertyOverride) {
            listener.exitPropertyOverride(this);
        }
    };
    // @Override
    PropertyOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitPropertyOverride) {
            return visitor.visitPropertyOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PropertyOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PropertyOverrideContext = PropertyOverrideContext;
var ProportionalFontContext = /** @class */ (function (_super) {
    __extends(ProportionalFontContext, _super);
    function ProportionalFontContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(ProportionalFontContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_proportionalFont; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ProportionalFontContext.prototype.enterRule = function (listener) {
        if (listener.enterProportionalFont) {
            listener.enterProportionalFont(this);
        }
    };
    // @Override
    ProportionalFontContext.prototype.exitRule = function (listener) {
        if (listener.exitProportionalFont) {
            listener.exitProportionalFont(this);
        }
    };
    // @Override
    ProportionalFontContext.prototype.accept = function (visitor) {
        if (visitor.visitProportionalFont) {
            return visitor.visitProportionalFont(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ProportionalFontContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ProportionalFontContext = ProportionalFontContext;
var PtContext = /** @class */ (function (_super) {
    __extends(PtContext, _super);
    function PtContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    PtContext.prototype.xCoordinate = function () {
        return this.getRuleContext(0, XCoordinateContext);
    };
    PtContext.prototype.yCoordinate = function () {
        return this.getRuleContext(0, YCoordinateContext);
    };
    Object.defineProperty(PtContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pt; },
        enumerable: true,
        configurable: true
    });
    // @Override
    PtContext.prototype.enterRule = function (listener) {
        if (listener.enterPt) {
            listener.enterPt(this);
        }
    };
    // @Override
    PtContext.prototype.exitRule = function (listener) {
        if (listener.exitPt) {
            listener.exitPt(this);
        }
    };
    // @Override
    PtContext.prototype.accept = function (visitor) {
        if (visitor.visitPt) {
            return visitor.visitPt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return PtContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.PtContext = PtContext;
var Pt1Context = /** @class */ (function (_super) {
    __extends(Pt1Context, _super);
    function Pt1Context(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Pt1Context.prototype.pointValue = function () {
        return this.getRuleContext(0, PointValueContext);
    };
    Object.defineProperty(Pt1Context.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pt1; },
        enumerable: true,
        configurable: true
    });
    // @Override
    Pt1Context.prototype.enterRule = function (listener) {
        if (listener.enterPt1) {
            listener.enterPt1(this);
        }
    };
    // @Override
    Pt1Context.prototype.exitRule = function (listener) {
        if (listener.exitPt1) {
            listener.exitPt1(this);
        }
    };
    // @Override
    Pt1Context.prototype.accept = function (visitor) {
        if (visitor.visitPt1) {
            return visitor.visitPt1(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return Pt1Context;
}(ParserRuleContext_1.ParserRuleContext));
exports.Pt1Context = Pt1Context;
var Pt2Context = /** @class */ (function (_super) {
    __extends(Pt2Context, _super);
    function Pt2Context(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Pt2Context.prototype.pointValue = function () {
        return this.getRuleContext(0, PointValueContext);
    };
    Object.defineProperty(Pt2Context.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_pt2; },
        enumerable: true,
        configurable: true
    });
    // @Override
    Pt2Context.prototype.enterRule = function (listener) {
        if (listener.enterPt2) {
            listener.enterPt2(this);
        }
    };
    // @Override
    Pt2Context.prototype.exitRule = function (listener) {
        if (listener.exitPt2) {
            listener.exitPt2(this);
        }
    };
    // @Override
    Pt2Context.prototype.accept = function (visitor) {
        if (visitor.visitPt2) {
            return visitor.visitPt2(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return Pt2Context;
}(ParserRuleContext_1.ParserRuleContext));
exports.Pt2Context = Pt2Context;
var RadianContext = /** @class */ (function (_super) {
    __extends(RadianContext, _super);
    function RadianContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RadianContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(RadianContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_radian; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RadianContext.prototype.enterRule = function (listener) {
        if (listener.enterRadian) {
            listener.enterRadian(this);
        }
    };
    // @Override
    RadianContext.prototype.exitRule = function (listener) {
        if (listener.exitRadian) {
            listener.exitRadian(this);
        }
    };
    // @Override
    RadianContext.prototype.accept = function (visitor) {
        if (visitor.visitRadian) {
            return visitor.visitRadian(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RadianContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RadianContext = RadianContext;
var ReasonContext = /** @class */ (function (_super) {
    __extends(ReasonContext, _super);
    function ReasonContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ReasonContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(ReasonContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_reason; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ReasonContext.prototype.enterRule = function (listener) {
        if (listener.enterReason) {
            listener.enterReason(this);
        }
    };
    // @Override
    ReasonContext.prototype.exitRule = function (listener) {
        if (listener.exitReason) {
            listener.exitReason(this);
        }
    };
    // @Override
    ReasonContext.prototype.accept = function (visitor) {
        if (visitor.visitReason) {
            return visitor.visitReason(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ReasonContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ReasonContext = ReasonContext;
var RectangleContext = /** @class */ (function (_super) {
    __extends(RectangleContext, _super);
    function RectangleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RectangleContext.prototype.pt1 = function () {
        return this.getRuleContext(0, Pt1Context);
    };
    RectangleContext.prototype.pt2 = function () {
        return this.getRuleContext(0, Pt2Context);
    };
    Object.defineProperty(RectangleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_rectangle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RectangleContext.prototype.enterRule = function (listener) {
        if (listener.enterRectangle) {
            listener.enterRectangle(this);
        }
    };
    // @Override
    RectangleContext.prototype.exitRule = function (listener) {
        if (listener.exitRectangle) {
            listener.exitRectangle(this);
        }
    };
    // @Override
    RectangleContext.prototype.accept = function (visitor) {
        if (visitor.visitRectangle) {
            return visitor.visitRectangle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RectangleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RectangleContext = RectangleContext;
var RedContext = /** @class */ (function (_super) {
    __extends(RedContext, _super);
    function RedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RedContext.prototype.scaledInteger = function () {
        return this.getRuleContext(0, ScaledIntegerContext);
    };
    Object.defineProperty(RedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_red; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RedContext.prototype.enterRule = function (listener) {
        if (listener.enterRed) {
            listener.enterRed(this);
        }
    };
    // @Override
    RedContext.prototype.exitRule = function (listener) {
        if (listener.exitRed) {
            listener.exitRed(this);
        }
    };
    // @Override
    RedContext.prototype.accept = function (visitor) {
        if (visitor.visitRed) {
            return visitor.visitRed(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RedContext = RedContext;
var RemoveDisplayContext = /** @class */ (function (_super) {
    __extends(RemoveDisplayContext, _super);
    function RemoveDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(RemoveDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_removeDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RemoveDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterRemoveDisplay) {
            listener.enterRemoveDisplay(this);
        }
    };
    // @Override
    RemoveDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitRemoveDisplay) {
            listener.exitRemoveDisplay(this);
        }
    };
    // @Override
    RemoveDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitRemoveDisplay) {
            return visitor.visitRemoveDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RemoveDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RemoveDisplayContext = RemoveDisplayContext;
var RepetitionCountContext = /** @class */ (function (_super) {
    __extends(RepetitionCountContext, _super);
    function RepetitionCountContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RepetitionCountContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(RepetitionCountContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_repetitionCount; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RepetitionCountContext.prototype.enterRule = function (listener) {
        if (listener.enterRepetitionCount) {
            listener.enterRepetitionCount(this);
        }
    };
    // @Override
    RepetitionCountContext.prototype.exitRule = function (listener) {
        if (listener.exitRepetitionCount) {
            listener.exitRepetitionCount(this);
        }
    };
    // @Override
    RepetitionCountContext.prototype.accept = function (visitor) {
        if (visitor.visitRepetitionCount) {
            return visitor.visitRepetitionCount(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RepetitionCountContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RepetitionCountContext = RepetitionCountContext;
var RepetitionCountDisplayContext = /** @class */ (function (_super) {
    __extends(RepetitionCountDisplayContext, _super);
    function RepetitionCountDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RepetitionCountDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    RepetitionCountDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    RepetitionCountDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(RepetitionCountDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_repetitionCountDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RepetitionCountDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterRepetitionCountDisplay) {
            listener.enterRepetitionCountDisplay(this);
        }
    };
    // @Override
    RepetitionCountDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitRepetitionCountDisplay) {
            listener.exitRepetitionCountDisplay(this);
        }
    };
    // @Override
    RepetitionCountDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitRepetitionCountDisplay) {
            return visitor.visitRepetitionCountDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RepetitionCountDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RepetitionCountDisplayContext = RepetitionCountDisplayContext;
var ReplaceDisplayContext = /** @class */ (function (_super) {
    __extends(ReplaceDisplayContext, _super);
    function ReplaceDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ReplaceDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    Object.defineProperty(ReplaceDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_replaceDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ReplaceDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterReplaceDisplay) {
            listener.enterReplaceDisplay(this);
        }
    };
    // @Override
    ReplaceDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitReplaceDisplay) {
            listener.exitReplaceDisplay(this);
        }
    };
    // @Override
    ReplaceDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitReplaceDisplay) {
            return visitor.visitReplaceDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ReplaceDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ReplaceDisplayContext = ReplaceDisplayContext;
var RequiredContext = /** @class */ (function (_super) {
    __extends(RequiredContext, _super);
    function RequiredContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(RequiredContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_required; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RequiredContext.prototype.enterRule = function (listener) {
        if (listener.enterRequired) {
            listener.enterRequired(this);
        }
    };
    // @Override
    RequiredContext.prototype.exitRule = function (listener) {
        if (listener.exitRequired) {
            listener.exitRequired(this);
        }
    };
    // @Override
    RequiredContext.prototype.accept = function (visitor) {
        if (visitor.visitRequired) {
            return visitor.visitRequired(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RequiredContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RequiredContext = RequiredContext;
var ResolvesContext = /** @class */ (function (_super) {
    __extends(ResolvesContext, _super);
    function ResolvesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ResolvesContext.prototype.logicNameRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicNameRefContext);
        }
        else {
            return this.getRuleContext(i, LogicNameRefContext);
        }
    };
    Object.defineProperty(ResolvesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_resolves; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ResolvesContext.prototype.enterRule = function (listener) {
        if (listener.enterResolves) {
            listener.enterResolves(this);
        }
    };
    // @Override
    ResolvesContext.prototype.exitRule = function (listener) {
        if (listener.exitResolves) {
            listener.exitResolves(this);
        }
    };
    // @Override
    ResolvesContext.prototype.accept = function (visitor) {
        if (visitor.visitResolves) {
            return visitor.visitResolves(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ResolvesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ResolvesContext = ResolvesContext;
var RevisionContext = /** @class */ (function (_super) {
    __extends(RevisionContext, _super);
    function RevisionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RevisionContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(RevisionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_revision; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RevisionContext.prototype.enterRule = function (listener) {
        if (listener.enterRevision) {
            listener.enterRevision(this);
        }
    };
    // @Override
    RevisionContext.prototype.exitRule = function (listener) {
        if (listener.exitRevision) {
            listener.exitRevision(this);
        }
    };
    // @Override
    RevisionContext.prototype.accept = function (visitor) {
        if (visitor.visitRevision) {
            return visitor.visitRevision(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RevisionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RevisionContext = RevisionContext;
var RevisionDisplayContext = /** @class */ (function (_super) {
    __extends(RevisionDisplayContext, _super);
    function RevisionDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RevisionDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    RevisionDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    RevisionDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(RevisionDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_revisionDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RevisionDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterRevisionDisplay) {
            listener.enterRevisionDisplay(this);
        }
    };
    // @Override
    RevisionDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitRevisionDisplay) {
            listener.exitRevisionDisplay(this);
        }
    };
    // @Override
    RevisionDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitRevisionDisplay) {
            return visitor.visitRevisionDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RevisionDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RevisionDisplayContext = RevisionDisplayContext;
var RightJustifyContext = /** @class */ (function (_super) {
    __extends(RightJustifyContext, _super);
    function RightJustifyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(RightJustifyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_rightJustify; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RightJustifyContext.prototype.enterRule = function (listener) {
        if (listener.enterRightJustify) {
            listener.enterRightJustify(this);
        }
    };
    // @Override
    RightJustifyContext.prototype.exitRule = function (listener) {
        if (listener.exitRightJustify) {
            listener.exitRightJustify(this);
        }
    };
    // @Override
    RightJustifyContext.prototype.accept = function (visitor) {
        if (visitor.visitRightJustify) {
            return visitor.visitRightJustify(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RightJustifyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RightJustifyContext = RightJustifyContext;
var RipperHotspotContext = /** @class */ (function (_super) {
    __extends(RipperHotspotContext, _super);
    function RipperHotspotContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RipperHotspotContext.prototype.hotspotNameDef = function () {
        return this.getRuleContext(0, HotspotNameDefContext);
    };
    RipperHotspotContext.prototype.hotspot = function () {
        return this.getRuleContext(0, HotspotContext);
    };
    Object.defineProperty(RipperHotspotContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ripperHotspot; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RipperHotspotContext.prototype.enterRule = function (listener) {
        if (listener.enterRipperHotspot) {
            listener.enterRipperHotspot(this);
        }
    };
    // @Override
    RipperHotspotContext.prototype.exitRule = function (listener) {
        if (listener.exitRipperHotspot) {
            listener.exitRipperHotspot(this);
        }
    };
    // @Override
    RipperHotspotContext.prototype.accept = function (visitor) {
        if (visitor.visitRipperHotspot) {
            return visitor.visitRipperHotspot(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RipperHotspotContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RipperHotspotContext = RipperHotspotContext;
var RipperHotspotRefContext = /** @class */ (function (_super) {
    __extends(RipperHotspotRefContext, _super);
    function RipperHotspotRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RipperHotspotRefContext.prototype.hotspotNameRef = function () {
        return this.getRuleContext(0, HotspotNameRefContext);
    };
    RipperHotspotRefContext.prototype.schematicRipperImplementationRef = function () {
        return this.getRuleContext(0, SchematicRipperImplementationRefContext);
    };
    Object.defineProperty(RipperHotspotRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_ripperHotspotRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RipperHotspotRefContext.prototype.enterRule = function (listener) {
        if (listener.enterRipperHotspotRef) {
            listener.enterRipperHotspotRef(this);
        }
    };
    // @Override
    RipperHotspotRefContext.prototype.exitRule = function (listener) {
        if (listener.exitRipperHotspotRef) {
            listener.exitRipperHotspotRef(this);
        }
    };
    // @Override
    RipperHotspotRefContext.prototype.accept = function (visitor) {
        if (visitor.visitRipperHotspotRef) {
            return visitor.visitRipperHotspotRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RipperHotspotRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RipperHotspotRefContext = RipperHotspotRefContext;
var RotationContext = /** @class */ (function (_super) {
    __extends(RotationContext, _super);
    function RotationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RotationContext.prototype.angleValue = function () {
        return this.getRuleContext(0, AngleValueContext);
    };
    Object.defineProperty(RotationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_rotation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RotationContext.prototype.enterRule = function (listener) {
        if (listener.enterRotation) {
            listener.enterRotation(this);
        }
    };
    // @Override
    RotationContext.prototype.exitRule = function (listener) {
        if (listener.exitRotation) {
            listener.exitRotation(this);
        }
    };
    // @Override
    RotationContext.prototype.accept = function (visitor) {
        if (visitor.visitRotation) {
            return visitor.visitRotation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RotationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RotationContext = RotationContext;
var RoundContext = /** @class */ (function (_super) {
    __extends(RoundContext, _super);
    function RoundContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(RoundContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_round; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RoundContext.prototype.enterRule = function (listener) {
        if (listener.enterRound) {
            listener.enterRound(this);
        }
    };
    // @Override
    RoundContext.prototype.exitRule = function (listener) {
        if (listener.exitRound) {
            listener.exitRound(this);
        }
    };
    // @Override
    RoundContext.prototype.accept = function (visitor) {
        if (visitor.visitRound) {
            return visitor.visitRound(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RoundContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RoundContext = RoundContext;
var RowSizeContext = /** @class */ (function (_super) {
    __extends(RowSizeContext, _super);
    function RowSizeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    RowSizeContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(RowSizeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_rowSize; },
        enumerable: true,
        configurable: true
    });
    // @Override
    RowSizeContext.prototype.enterRule = function (listener) {
        if (listener.enterRowSize) {
            listener.enterRowSize(this);
        }
    };
    // @Override
    RowSizeContext.prototype.exitRule = function (listener) {
        if (listener.exitRowSize) {
            listener.exitRowSize(this);
        }
    };
    // @Override
    RowSizeContext.prototype.accept = function (visitor) {
        if (visitor.visitRowSize) {
            return visitor.visitRowSize(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return RowSizeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.RowSizeContext = RowSizeContext;
var ScaledIntegerContext = /** @class */ (function (_super) {
    __extends(ScaledIntegerContext, _super);
    function ScaledIntegerContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ScaledIntegerContext.prototype.integerToken = function () {
        return this.tryGetRuleContext(0, IntegerTokenContext);
    };
    ScaledIntegerContext.prototype.e = function () {
        return this.tryGetRuleContext(0, EContext);
    };
    Object.defineProperty(ScaledIntegerContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_scaledInteger; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ScaledIntegerContext.prototype.enterRule = function (listener) {
        if (listener.enterScaledInteger) {
            listener.enterScaledInteger(this);
        }
    };
    // @Override
    ScaledIntegerContext.prototype.exitRule = function (listener) {
        if (listener.exitScaledInteger) {
            listener.exitScaledInteger(this);
        }
    };
    // @Override
    ScaledIntegerContext.prototype.accept = function (visitor) {
        if (visitor.visitScaledInteger) {
            return visitor.visitScaledInteger(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ScaledIntegerContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ScaledIntegerContext = ScaledIntegerContext;
var ScaleXContext = /** @class */ (function (_super) {
    __extends(ScaleXContext, _super);
    function ScaleXContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ScaleXContext.prototype.numerator = function () {
        return this.getRuleContext(0, NumeratorContext);
    };
    ScaleXContext.prototype.denominator = function () {
        return this.getRuleContext(0, DenominatorContext);
    };
    Object.defineProperty(ScaleXContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_scaleX; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ScaleXContext.prototype.enterRule = function (listener) {
        if (listener.enterScaleX) {
            listener.enterScaleX(this);
        }
    };
    // @Override
    ScaleXContext.prototype.exitRule = function (listener) {
        if (listener.exitScaleX) {
            listener.exitScaleX(this);
        }
    };
    // @Override
    ScaleXContext.prototype.accept = function (visitor) {
        if (visitor.visitScaleX) {
            return visitor.visitScaleX(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ScaleXContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ScaleXContext = ScaleXContext;
var ScaleYContext = /** @class */ (function (_super) {
    __extends(ScaleYContext, _super);
    function ScaleYContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ScaleYContext.prototype.numerator = function () {
        return this.getRuleContext(0, NumeratorContext);
    };
    ScaleYContext.prototype.denominator = function () {
        return this.getRuleContext(0, DenominatorContext);
    };
    Object.defineProperty(ScaleYContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_scaleY; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ScaleYContext.prototype.enterRule = function (listener) {
        if (listener.enterScaleY) {
            listener.enterScaleY(this);
        }
    };
    // @Override
    ScaleYContext.prototype.exitRule = function (listener) {
        if (listener.exitScaleY) {
            listener.exitScaleY(this);
        }
    };
    // @Override
    ScaleYContext.prototype.accept = function (visitor) {
        if (visitor.visitScaleY) {
            return visitor.visitScaleY(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ScaleYContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ScaleYContext = ScaleYContext;
var SchematicBusContext = /** @class */ (function (_super) {
    __extends(SchematicBusContext, _super);
    function SchematicBusContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicBusContext.prototype.interconnectNameDef = function () {
        return this.getRuleContext(0, InterconnectNameDefContext);
    };
    SchematicBusContext.prototype.signalGroupRef = function () {
        return this.getRuleContext(0, SignalGroupRefContext);
    };
    SchematicBusContext.prototype.schematicInterconnectHeader = function () {
        return this.getRuleContext(0, SchematicInterconnectHeaderContext);
    };
    SchematicBusContext.prototype.schematicBusJoined = function () {
        return this.getRuleContext(0, SchematicBusJoinedContext);
    };
    SchematicBusContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicBusContext.prototype.schematicBusDetails = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicBusDetailsContext);
        }
        else {
            return this.getRuleContext(i, SchematicBusDetailsContext);
        }
    };
    SchematicBusContext.prototype.schematicBusSlice = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicBusSliceContext);
        }
        else {
            return this.getRuleContext(i, SchematicBusSliceContext);
        }
    };
    SchematicBusContext.prototype.schematicInterconnectAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInterconnectAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, SchematicInterconnectAttributeDisplayContext);
        }
    };
    SchematicBusContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(SchematicBusContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicBus; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicBusContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicBus) {
            listener.enterSchematicBus(this);
        }
    };
    // @Override
    SchematicBusContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicBus) {
            listener.exitSchematicBus(this);
        }
    };
    // @Override
    SchematicBusContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicBus) {
            return visitor.visitSchematicBus(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicBusContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicBusContext = SchematicBusContext;
var SchematicBusDetailsContext = /** @class */ (function (_super) {
    __extends(SchematicBusDetailsContext, _super);
    function SchematicBusDetailsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicBusDetailsContext.prototype.schematicBusGraphics = function () {
        return this.tryGetRuleContext(0, SchematicBusGraphicsContext);
    };
    SchematicBusDetailsContext.prototype.schematicSubBusSet = function () {
        return this.tryGetRuleContext(0, SchematicSubBusSetContext);
    };
    Object.defineProperty(SchematicBusDetailsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicBusDetails; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicBusDetailsContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicBusDetails) {
            listener.enterSchematicBusDetails(this);
        }
    };
    // @Override
    SchematicBusDetailsContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicBusDetails) {
            listener.exitSchematicBusDetails(this);
        }
    };
    // @Override
    SchematicBusDetailsContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicBusDetails) {
            return visitor.visitSchematicBusDetails(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicBusDetailsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicBusDetailsContext = SchematicBusDetailsContext;
var SchematicBusGraphicsContext = /** @class */ (function (_super) {
    __extends(SchematicBusGraphicsContext, _super);
    function SchematicBusGraphicsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicBusGraphicsContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicBusGraphicsContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicBusGraphicsContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    SchematicBusGraphicsContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(SchematicBusGraphicsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicBusGraphics; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicBusGraphicsContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicBusGraphics) {
            listener.enterSchematicBusGraphics(this);
        }
    };
    // @Override
    SchematicBusGraphicsContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicBusGraphics) {
            listener.exitSchematicBusGraphics(this);
        }
    };
    // @Override
    SchematicBusGraphicsContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicBusGraphics) {
            return visitor.visitSchematicBusGraphics(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicBusGraphicsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicBusGraphicsContext = SchematicBusGraphicsContext;
var SchematicBusJoinedContext = /** @class */ (function (_super) {
    __extends(SchematicBusJoinedContext, _super);
    function SchematicBusJoinedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicBusJoinedContext.prototype.portJoined = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortJoinedContext);
        }
        else {
            return this.getRuleContext(i, PortJoinedContext);
        }
    };
    SchematicBusJoinedContext.prototype.ripperHotspotRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RipperHotspotRefContext);
        }
        else {
            return this.getRuleContext(i, RipperHotspotRefContext);
        }
    };
    SchematicBusJoinedContext.prototype.schematicGlobalPortImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicGlobalPortImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicGlobalPortImplementationRefContext);
        }
    };
    SchematicBusJoinedContext.prototype.schematicInterconnectTerminatorImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInterconnectTerminatorImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicInterconnectTerminatorImplementationRefContext);
        }
    };
    SchematicBusJoinedContext.prototype.schematicJunctionImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicJunctionImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicJunctionImplementationRefContext);
        }
    };
    SchematicBusJoinedContext.prototype.schematicMasterPortImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicMasterPortImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicMasterPortImplementationRefContext);
        }
    };
    SchematicBusJoinedContext.prototype.schematicOffPageConnectorImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOffPageConnectorImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicOffPageConnectorImplementationRefContext);
        }
    };
    SchematicBusJoinedContext.prototype.schematicOnPageConnectorImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOnPageConnectorImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicOnPageConnectorImplementationRefContext);
        }
    };
    SchematicBusJoinedContext.prototype.schematicSymbolPortImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSymbolPortImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicSymbolPortImplementationRefContext);
        }
    };
    Object.defineProperty(SchematicBusJoinedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicBusJoined; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicBusJoinedContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicBusJoined) {
            listener.enterSchematicBusJoined(this);
        }
    };
    // @Override
    SchematicBusJoinedContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicBusJoined) {
            listener.exitSchematicBusJoined(this);
        }
    };
    // @Override
    SchematicBusJoinedContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicBusJoined) {
            return visitor.visitSchematicBusJoined(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicBusJoinedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicBusJoinedContext = SchematicBusJoinedContext;
var SchematicBusSliceContext = /** @class */ (function (_super) {
    __extends(SchematicBusSliceContext, _super);
    function SchematicBusSliceContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicBusSliceContext.prototype.interconnectNameDef = function () {
        return this.getRuleContext(0, InterconnectNameDefContext);
    };
    SchematicBusSliceContext.prototype.signalGroupRef = function () {
        return this.getRuleContext(0, SignalGroupRefContext);
    };
    SchematicBusSliceContext.prototype.schematicInterconnectHeader = function () {
        return this.getRuleContext(0, SchematicInterconnectHeaderContext);
    };
    SchematicBusSliceContext.prototype.schematicBusJoined = function () {
        return this.getRuleContext(0, SchematicBusJoinedContext);
    };
    SchematicBusSliceContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicBusSliceContext.prototype.schematicBusDetails = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicBusDetailsContext);
        }
        else {
            return this.getRuleContext(i, SchematicBusDetailsContext);
        }
    };
    SchematicBusSliceContext.prototype.schematicBusSlice = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicBusSliceContext);
        }
        else {
            return this.getRuleContext(i, SchematicBusSliceContext);
        }
    };
    SchematicBusSliceContext.prototype.schematicInterconnectAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInterconnectAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, SchematicInterconnectAttributeDisplayContext);
        }
    };
    SchematicBusSliceContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(SchematicBusSliceContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicBusSlice; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicBusSliceContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicBusSlice) {
            listener.enterSchematicBusSlice(this);
        }
    };
    // @Override
    SchematicBusSliceContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicBusSlice) {
            listener.exitSchematicBusSlice(this);
        }
    };
    // @Override
    SchematicBusSliceContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicBusSlice) {
            return visitor.visitSchematicBusSlice(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicBusSliceContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicBusSliceContext = SchematicBusSliceContext;
var SchematicComplexFigureContext = /** @class */ (function (_super) {
    __extends(SchematicComplexFigureContext, _super);
    function SchematicComplexFigureContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicComplexFigureContext.prototype.schematicFigureMacroRef = function () {
        return this.getRuleContext(0, SchematicFigureMacroRefContext);
    };
    SchematicComplexFigureContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicComplexFigureContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicComplexFigureContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicComplexFigureContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicComplexFigure; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicComplexFigureContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicComplexFigure) {
            listener.enterSchematicComplexFigure(this);
        }
    };
    // @Override
    SchematicComplexFigureContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicComplexFigure) {
            listener.exitSchematicComplexFigure(this);
        }
    };
    // @Override
    SchematicComplexFigureContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicComplexFigure) {
            return visitor.visitSchematicComplexFigure(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicComplexFigureContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicComplexFigureContext = SchematicComplexFigureContext;
var SchematicFigureMacroContext = /** @class */ (function (_super) {
    __extends(SchematicFigureMacroContext, _super);
    function SchematicFigureMacroContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicFigureMacroContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicFigureMacroContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicFigureMacroContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicFigureMacroContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicFigureMacroContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicFigureMacroContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicFigureMacroContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicFigureMacroContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    SchematicFigureMacroContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(SchematicFigureMacroContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicFigureMacro; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicFigureMacroContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicFigureMacro) {
            listener.enterSchematicFigureMacro(this);
        }
    };
    // @Override
    SchematicFigureMacroContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicFigureMacro) {
            listener.exitSchematicFigureMacro(this);
        }
    };
    // @Override
    SchematicFigureMacroContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicFigureMacro) {
            return visitor.visitSchematicFigureMacro(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicFigureMacroContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicFigureMacroContext = SchematicFigureMacroContext;
var SchematicFigureMacroRefContext = /** @class */ (function (_super) {
    __extends(SchematicFigureMacroRefContext, _super);
    function SchematicFigureMacroRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicFigureMacroRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicFigureMacroRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicFigureMacroRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicFigureMacroRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicFigureMacroRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicFigureMacroRef) {
            listener.enterSchematicFigureMacroRef(this);
        }
    };
    // @Override
    SchematicFigureMacroRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicFigureMacroRef) {
            listener.exitSchematicFigureMacroRef(this);
        }
    };
    // @Override
    SchematicFigureMacroRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicFigureMacroRef) {
            return visitor.visitSchematicFigureMacroRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicFigureMacroRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicFigureMacroRefContext = SchematicFigureMacroRefContext;
var SchematicForFrameBorderContext = /** @class */ (function (_super) {
    __extends(SchematicForFrameBorderContext, _super);
    function SchematicForFrameBorderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicForFrameBorderContext.prototype.schematicForFrameBorderTemplateRef = function () {
        return this.getRuleContext(0, SchematicForFrameBorderTemplateRefContext);
    };
    SchematicForFrameBorderContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicForFrameBorderContext.prototype.forFrameIndexDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ForFrameIndexDisplayContext);
        }
        else {
            return this.getRuleContext(i, ForFrameIndexDisplayContext);
        }
    };
    SchematicForFrameBorderContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicForFrameBorderContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    SchematicForFrameBorderContext.prototype.repetitionCountDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RepetitionCountDisplayContext);
        }
        else {
            return this.getRuleContext(i, RepetitionCountDisplayContext);
        }
    };
    Object.defineProperty(SchematicForFrameBorderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicForFrameBorder; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicForFrameBorderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicForFrameBorder) {
            listener.enterSchematicForFrameBorder(this);
        }
    };
    // @Override
    SchematicForFrameBorderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicForFrameBorder) {
            listener.exitSchematicForFrameBorder(this);
        }
    };
    // @Override
    SchematicForFrameBorderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicForFrameBorder) {
            return visitor.visitSchematicForFrameBorder(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicForFrameBorderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicForFrameBorderContext = SchematicForFrameBorderContext;
var SchematicForFrameBorderTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicForFrameBorderTemplateContext, _super);
    function SchematicForFrameBorderTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicForFrameBorderTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicForFrameBorderTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicForFrameBorderTemplateContext.prototype.usableArea = function () {
        return this.getRuleContext(0, UsableAreaContext);
    };
    SchematicForFrameBorderTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicForFrameBorderTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicForFrameBorderTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicForFrameBorderTemplateContext.prototype.forFrameIndexDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ForFrameIndexDisplayContext);
        }
        else {
            return this.getRuleContext(i, ForFrameIndexDisplayContext);
        }
    };
    SchematicForFrameBorderTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicForFrameBorderTemplateContext.prototype.repetitionCountDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RepetitionCountDisplayContext);
        }
        else {
            return this.getRuleContext(i, RepetitionCountDisplayContext);
        }
    };
    SchematicForFrameBorderTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(SchematicForFrameBorderTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicForFrameBorderTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicForFrameBorderTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicForFrameBorderTemplate) {
            listener.enterSchematicForFrameBorderTemplate(this);
        }
    };
    // @Override
    SchematicForFrameBorderTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicForFrameBorderTemplate) {
            listener.exitSchematicForFrameBorderTemplate(this);
        }
    };
    // @Override
    SchematicForFrameBorderTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicForFrameBorderTemplate) {
            return visitor.visitSchematicForFrameBorderTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicForFrameBorderTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicForFrameBorderTemplateContext = SchematicForFrameBorderTemplateContext;
var SchematicForFrameBorderTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicForFrameBorderTemplateRefContext, _super);
    function SchematicForFrameBorderTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicForFrameBorderTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicForFrameBorderTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicForFrameBorderTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicForFrameBorderTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicForFrameBorderTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicForFrameBorderTemplateRef) {
            listener.enterSchematicForFrameBorderTemplateRef(this);
        }
    };
    // @Override
    SchematicForFrameBorderTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicForFrameBorderTemplateRef) {
            listener.exitSchematicForFrameBorderTemplateRef(this);
        }
    };
    // @Override
    SchematicForFrameBorderTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicForFrameBorderTemplateRef) {
            return visitor.visitSchematicForFrameBorderTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicForFrameBorderTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicForFrameBorderTemplateRefContext = SchematicForFrameBorderTemplateRefContext;
var SchematicForFrameImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicForFrameImplementationContext, _super);
    function SchematicForFrameImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicForFrameImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicForFrameImplementationContext.prototype.forFrameRef = function () {
        return this.getRuleContext(0, ForFrameRefContext);
    };
    SchematicForFrameImplementationContext.prototype.schematicForFrameImplementationHeader = function () {
        return this.getRuleContext(0, SchematicForFrameImplementationHeaderContext);
    };
    SchematicForFrameImplementationContext.prototype.schematicFrameImplementationDetails = function () {
        return this.getRuleContext(0, SchematicFrameImplementationDetailsContext);
    };
    Object.defineProperty(SchematicForFrameImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicForFrameImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicForFrameImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicForFrameImplementation) {
            listener.enterSchematicForFrameImplementation(this);
        }
    };
    // @Override
    SchematicForFrameImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicForFrameImplementation) {
            listener.exitSchematicForFrameImplementation(this);
        }
    };
    // @Override
    SchematicForFrameImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicForFrameImplementation) {
            return visitor.visitSchematicForFrameImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicForFrameImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicForFrameImplementationContext = SchematicForFrameImplementationContext;
var SchematicForFrameImplementationHeaderContext = /** @class */ (function (_super) {
    __extends(SchematicForFrameImplementationHeaderContext, _super);
    function SchematicForFrameImplementationHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicForFrameImplementationHeaderContext.prototype.schematicForFrameBorder = function () {
        return this.tryGetRuleContext(0, SchematicForFrameBorderContext);
    };
    Object.defineProperty(SchematicForFrameImplementationHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicForFrameImplementationHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicForFrameImplementationHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicForFrameImplementationHeader) {
            listener.enterSchematicForFrameImplementationHeader(this);
        }
    };
    // @Override
    SchematicForFrameImplementationHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicForFrameImplementationHeader) {
            listener.exitSchematicForFrameImplementationHeader(this);
        }
    };
    // @Override
    SchematicForFrameImplementationHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicForFrameImplementationHeader) {
            return visitor.visitSchematicForFrameImplementationHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicForFrameImplementationHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicForFrameImplementationHeaderContext = SchematicForFrameImplementationHeaderContext;
var SchematicFrameImplementationDetailsContext = /** @class */ (function (_super) {
    __extends(SchematicFrameImplementationDetailsContext, _super);
    function SchematicFrameImplementationDetailsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicFrameImplementationDetailsContext.prototype.cellPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, CellPropertyDisplayContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.clusterPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, ClusterPropertyDisplayContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicBus = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicBusContext);
        }
        else {
            return this.getRuleContext(i, SchematicBusContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicForFrameImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicForFrameImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicForFrameImplementationContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicGlobalPortImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicGlobalPortImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicGlobalPortImplementationContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicIfFrameImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicIfFrameImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicIfFrameImplementationContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicInstanceImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInstanceImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicInstanceImplementationContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicMasterPortImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicMasterPortImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicMasterPortImplementationContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicNet = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicNetContext);
        }
        else {
            return this.getRuleContext(i, SchematicNetContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicOffPageConnectorImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOffPageConnectorImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicOffPageConnectorImplementationContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicOnPageConnectorImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOnPageConnectorImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicOnPageConnectorImplementationContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicOtherwiseFrameImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOtherwiseFrameImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicOtherwiseFrameImplementationContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.schematicRipperImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicRipperImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicRipperImplementationContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    SchematicFrameImplementationDetailsContext.prototype.viewPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, ViewPropertyDisplayContext);
        }
    };
    Object.defineProperty(SchematicFrameImplementationDetailsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicFrameImplementationDetails; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicFrameImplementationDetailsContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicFrameImplementationDetails) {
            listener.enterSchematicFrameImplementationDetails(this);
        }
    };
    // @Override
    SchematicFrameImplementationDetailsContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicFrameImplementationDetails) {
            listener.exitSchematicFrameImplementationDetails(this);
        }
    };
    // @Override
    SchematicFrameImplementationDetailsContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicFrameImplementationDetails) {
            return visitor.visitSchematicFrameImplementationDetails(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicFrameImplementationDetailsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicFrameImplementationDetailsContext = SchematicFrameImplementationDetailsContext;
var SchematicGlobalPortAttributesContext = /** @class */ (function (_super) {
    __extends(SchematicGlobalPortAttributesContext, _super);
    function SchematicGlobalPortAttributesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicGlobalPortAttributesContext.prototype.ieeeStandard = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IeeeStandardContext);
        }
        else {
            return this.getRuleContext(i, IeeeStandardContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortAcPower = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortAcPowerContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortAcPowerContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortAnalog = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortAnalogContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortAnalogContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortChassisGround = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortChassisGroundContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortChassisGroundContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortClock = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortClockContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortClockContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortDcPower = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortDcPowerContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortDcPowerContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortEarthGround = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortEarthGroundContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortEarthGroundContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortGround = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortGroundContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortGroundContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortNonLogical = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortNonLogicalContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortNonLogicalContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortOpenCollector = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortOpenCollectorContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortOpenCollectorContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortOpenEmitter = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortOpenEmitterContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortOpenEmitterContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortPower = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortPowerContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortPowerContext);
        }
    };
    SchematicGlobalPortAttributesContext.prototype.schematicPortThreeState = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortThreeStateContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortThreeStateContext);
        }
    };
    Object.defineProperty(SchematicGlobalPortAttributesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicGlobalPortAttributes; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicGlobalPortAttributesContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicGlobalPortAttributes) {
            listener.enterSchematicGlobalPortAttributes(this);
        }
    };
    // @Override
    SchematicGlobalPortAttributesContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicGlobalPortAttributes) {
            listener.exitSchematicGlobalPortAttributes(this);
        }
    };
    // @Override
    SchematicGlobalPortAttributesContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicGlobalPortAttributes) {
            return visitor.visitSchematicGlobalPortAttributes(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicGlobalPortAttributesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicGlobalPortAttributesContext = SchematicGlobalPortAttributesContext;
var SchematicGlobalPortImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicGlobalPortImplementationContext, _super);
    function SchematicGlobalPortImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicGlobalPortImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicGlobalPortImplementationContext.prototype.schematicGlobalPortTemplateRef = function () {
        return this.getRuleContext(0, SchematicGlobalPortTemplateRefContext);
    };
    SchematicGlobalPortImplementationContext.prototype.globalPortRef = function () {
        return this.getRuleContext(0, GlobalPortRefContext);
    };
    SchematicGlobalPortImplementationContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicGlobalPortImplementationContext.prototype.globalPortNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortNameDisplayContext);
        }
    };
    SchematicGlobalPortImplementationContext.prototype.globalPortPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortPropertyDisplayContext);
        }
    };
    SchematicGlobalPortImplementationContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicGlobalPortImplementationContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicGlobalPortImplementationContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicGlobalPortImplementationContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicGlobalPortImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicGlobalPortImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicGlobalPortImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicGlobalPortImplementation) {
            listener.enterSchematicGlobalPortImplementation(this);
        }
    };
    // @Override
    SchematicGlobalPortImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicGlobalPortImplementation) {
            listener.exitSchematicGlobalPortImplementation(this);
        }
    };
    // @Override
    SchematicGlobalPortImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicGlobalPortImplementation) {
            return visitor.visitSchematicGlobalPortImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicGlobalPortImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicGlobalPortImplementationContext = SchematicGlobalPortImplementationContext;
var SchematicGlobalPortImplementationRefContext = /** @class */ (function (_super) {
    __extends(SchematicGlobalPortImplementationRefContext, _super);
    function SchematicGlobalPortImplementationRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicGlobalPortImplementationRefContext.prototype.implementationNameRef = function () {
        return this.getRuleContext(0, ImplementationNameRefContext);
    };
    Object.defineProperty(SchematicGlobalPortImplementationRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicGlobalPortImplementationRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicGlobalPortImplementationRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicGlobalPortImplementationRef) {
            listener.enterSchematicGlobalPortImplementationRef(this);
        }
    };
    // @Override
    SchematicGlobalPortImplementationRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicGlobalPortImplementationRef) {
            listener.exitSchematicGlobalPortImplementationRef(this);
        }
    };
    // @Override
    SchematicGlobalPortImplementationRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicGlobalPortImplementationRef) {
            return visitor.visitSchematicGlobalPortImplementationRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicGlobalPortImplementationRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicGlobalPortImplementationRefContext = SchematicGlobalPortImplementationRefContext;
var SchematicGlobalPortTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicGlobalPortTemplateContext, _super);
    function SchematicGlobalPortTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicGlobalPortTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicGlobalPortTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicGlobalPortTemplateContext.prototype.hotspot = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(HotspotContext);
        }
        else {
            return this.getRuleContext(i, HotspotContext);
        }
    };
    SchematicGlobalPortTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicGlobalPortTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicGlobalPortTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicGlobalPortTemplateContext.prototype.globalPortNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortNameDisplayContext);
        }
    };
    SchematicGlobalPortTemplateContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicGlobalPortTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicGlobalPortTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    SchematicGlobalPortTemplateContext.prototype.schematicGlobalPortAttributes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicGlobalPortAttributesContext);
        }
        else {
            return this.getRuleContext(i, SchematicGlobalPortAttributesContext);
        }
    };
    Object.defineProperty(SchematicGlobalPortTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicGlobalPortTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicGlobalPortTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicGlobalPortTemplate) {
            listener.enterSchematicGlobalPortTemplate(this);
        }
    };
    // @Override
    SchematicGlobalPortTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicGlobalPortTemplate) {
            listener.exitSchematicGlobalPortTemplate(this);
        }
    };
    // @Override
    SchematicGlobalPortTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicGlobalPortTemplate) {
            return visitor.visitSchematicGlobalPortTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicGlobalPortTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicGlobalPortTemplateContext = SchematicGlobalPortTemplateContext;
var SchematicGlobalPortTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicGlobalPortTemplateRefContext, _super);
    function SchematicGlobalPortTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicGlobalPortTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicGlobalPortTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicGlobalPortTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicGlobalPortTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicGlobalPortTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicGlobalPortTemplateRef) {
            listener.enterSchematicGlobalPortTemplateRef(this);
        }
    };
    // @Override
    SchematicGlobalPortTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicGlobalPortTemplateRef) {
            listener.exitSchematicGlobalPortTemplateRef(this);
        }
    };
    // @Override
    SchematicGlobalPortTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicGlobalPortTemplateRef) {
            return visitor.visitSchematicGlobalPortTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicGlobalPortTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicGlobalPortTemplateRefContext = SchematicGlobalPortTemplateRefContext;
var SchematicIfFrameBorderContext = /** @class */ (function (_super) {
    __extends(SchematicIfFrameBorderContext, _super);
    function SchematicIfFrameBorderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicIfFrameBorderContext.prototype.schematicIfFrameBorderTemplateRef = function () {
        return this.getRuleContext(0, SchematicIfFrameBorderTemplateRefContext);
    };
    SchematicIfFrameBorderContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicIfFrameBorderContext.prototype.conditionDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConditionDisplayContext);
        }
        else {
            return this.getRuleContext(i, ConditionDisplayContext);
        }
    };
    SchematicIfFrameBorderContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicIfFrameBorderContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicIfFrameBorderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicIfFrameBorder; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicIfFrameBorderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicIfFrameBorder) {
            listener.enterSchematicIfFrameBorder(this);
        }
    };
    // @Override
    SchematicIfFrameBorderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicIfFrameBorder) {
            listener.exitSchematicIfFrameBorder(this);
        }
    };
    // @Override
    SchematicIfFrameBorderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicIfFrameBorder) {
            return visitor.visitSchematicIfFrameBorder(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicIfFrameBorderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicIfFrameBorderContext = SchematicIfFrameBorderContext;
var SchematicIfFrameBorderTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicIfFrameBorderTemplateContext, _super);
    function SchematicIfFrameBorderTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicIfFrameBorderTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicIfFrameBorderTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicIfFrameBorderTemplateContext.prototype.usableArea = function () {
        return this.getRuleContext(0, UsableAreaContext);
    };
    SchematicIfFrameBorderTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicIfFrameBorderTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicIfFrameBorderTemplateContext.prototype.conditionDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConditionDisplayContext);
        }
        else {
            return this.getRuleContext(i, ConditionDisplayContext);
        }
    };
    SchematicIfFrameBorderTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicIfFrameBorderTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicIfFrameBorderTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(SchematicIfFrameBorderTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicIfFrameBorderTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicIfFrameBorderTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicIfFrameBorderTemplate) {
            listener.enterSchematicIfFrameBorderTemplate(this);
        }
    };
    // @Override
    SchematicIfFrameBorderTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicIfFrameBorderTemplate) {
            listener.exitSchematicIfFrameBorderTemplate(this);
        }
    };
    // @Override
    SchematicIfFrameBorderTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicIfFrameBorderTemplate) {
            return visitor.visitSchematicIfFrameBorderTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicIfFrameBorderTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicIfFrameBorderTemplateContext = SchematicIfFrameBorderTemplateContext;
var SchematicIfFrameBorderTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicIfFrameBorderTemplateRefContext, _super);
    function SchematicIfFrameBorderTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicIfFrameBorderTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicIfFrameBorderTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicIfFrameBorderTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicIfFrameBorderTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicIfFrameBorderTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicIfFrameBorderTemplateRef) {
            listener.enterSchematicIfFrameBorderTemplateRef(this);
        }
    };
    // @Override
    SchematicIfFrameBorderTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicIfFrameBorderTemplateRef) {
            listener.exitSchematicIfFrameBorderTemplateRef(this);
        }
    };
    // @Override
    SchematicIfFrameBorderTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicIfFrameBorderTemplateRef) {
            return visitor.visitSchematicIfFrameBorderTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicIfFrameBorderTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicIfFrameBorderTemplateRefContext = SchematicIfFrameBorderTemplateRefContext;
var SchematicIfFrameImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicIfFrameImplementationContext, _super);
    function SchematicIfFrameImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicIfFrameImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicIfFrameImplementationContext.prototype.ifFrameRef = function () {
        return this.getRuleContext(0, IfFrameRefContext);
    };
    SchematicIfFrameImplementationContext.prototype.schematicIfFrameImplementationHeader = function () {
        return this.getRuleContext(0, SchematicIfFrameImplementationHeaderContext);
    };
    SchematicIfFrameImplementationContext.prototype.schematicFrameImplementationDetails = function () {
        return this.getRuleContext(0, SchematicFrameImplementationDetailsContext);
    };
    Object.defineProperty(SchematicIfFrameImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicIfFrameImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicIfFrameImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicIfFrameImplementation) {
            listener.enterSchematicIfFrameImplementation(this);
        }
    };
    // @Override
    SchematicIfFrameImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicIfFrameImplementation) {
            listener.exitSchematicIfFrameImplementation(this);
        }
    };
    // @Override
    SchematicIfFrameImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicIfFrameImplementation) {
            return visitor.visitSchematicIfFrameImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicIfFrameImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicIfFrameImplementationContext = SchematicIfFrameImplementationContext;
var SchematicIfFrameImplementationHeaderContext = /** @class */ (function (_super) {
    __extends(SchematicIfFrameImplementationHeaderContext, _super);
    function SchematicIfFrameImplementationHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicIfFrameImplementationHeaderContext.prototype.schematicIfFrameBorder = function () {
        return this.tryGetRuleContext(0, SchematicIfFrameBorderContext);
    };
    Object.defineProperty(SchematicIfFrameImplementationHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicIfFrameImplementationHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicIfFrameImplementationHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicIfFrameImplementationHeader) {
            listener.enterSchematicIfFrameImplementationHeader(this);
        }
    };
    // @Override
    SchematicIfFrameImplementationHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicIfFrameImplementationHeader) {
            listener.exitSchematicIfFrameImplementationHeader(this);
        }
    };
    // @Override
    SchematicIfFrameImplementationHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicIfFrameImplementationHeader) {
            return visitor.visitSchematicIfFrameImplementationHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicIfFrameImplementationHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicIfFrameImplementationHeaderContext = SchematicIfFrameImplementationHeaderContext;
var SchematicImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicImplementationContext, _super);
    function SchematicImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicImplementationContext.prototype.page = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageContext);
        }
        else {
            return this.getRuleContext(i, PageContext);
        }
    };
    SchematicImplementationContext.prototype.totalPages = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TotalPagesContext);
        }
        else {
            return this.getRuleContext(i, TotalPagesContext);
        }
    };
    Object.defineProperty(SchematicImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicImplementation) {
            listener.enterSchematicImplementation(this);
        }
    };
    // @Override
    SchematicImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicImplementation) {
            listener.exitSchematicImplementation(this);
        }
    };
    // @Override
    SchematicImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicImplementation) {
            return visitor.visitSchematicImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicImplementationContext = SchematicImplementationContext;
var SchematicInstanceImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicInstanceImplementationContext, _super);
    function SchematicInstanceImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicInstanceImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicInstanceImplementationContext.prototype.instanceRef = function () {
        return this.getRuleContext(0, InstanceRefContext);
    };
    SchematicInstanceImplementationContext.prototype.schematicSymbolRef = function () {
        return this.getRuleContext(0, SchematicSymbolRefContext);
    };
    SchematicInstanceImplementationContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicInstanceImplementationContext.prototype.cellNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, CellNameDisplayContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.cellPropertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellPropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, CellPropertyDisplayOverrideContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.clusterPropertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterPropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, ClusterPropertyDisplayOverrideContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.designatorDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorDisplayContext);
        }
        else {
            return this.getRuleContext(i, DesignatorDisplayContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.instanceNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, InstanceNameDisplayContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.instanceNameGeneratorDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceNameGeneratorDisplayContext);
        }
        else {
            return this.getRuleContext(i, InstanceNameGeneratorDisplayContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.instancePortAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstancePortAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, InstancePortAttributeDisplayContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.instancePropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstancePropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, InstancePropertyDisplayContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.instanceWidthDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceWidthDisplayContext);
        }
        else {
            return this.getRuleContext(i, InstanceWidthDisplayContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.pageCommentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageCommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, PageCommentGraphicsContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.parameterDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ParameterDisplayContext);
        }
        else {
            return this.getRuleContext(i, ParameterDisplayContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.timingDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(TimingDisplayContext);
        }
        else {
            return this.getRuleContext(i, TimingDisplayContext);
        }
    };
    SchematicInstanceImplementationContext.prototype.viewNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ViewNameDisplayContext);
        }
    };
    Object.defineProperty(SchematicInstanceImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicInstanceImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicInstanceImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicInstanceImplementation) {
            listener.enterSchematicInstanceImplementation(this);
        }
    };
    // @Override
    SchematicInstanceImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicInstanceImplementation) {
            listener.exitSchematicInstanceImplementation(this);
        }
    };
    // @Override
    SchematicInstanceImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicInstanceImplementation) {
            return visitor.visitSchematicInstanceImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicInstanceImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicInstanceImplementationContext = SchematicInstanceImplementationContext;
var SchematicInstanceImplementationRefContext = /** @class */ (function (_super) {
    __extends(SchematicInstanceImplementationRefContext, _super);
    function SchematicInstanceImplementationRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicInstanceImplementationRefContext.prototype.implementationNameRef = function () {
        return this.getRuleContext(0, ImplementationNameRefContext);
    };
    Object.defineProperty(SchematicInstanceImplementationRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicInstanceImplementationRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicInstanceImplementationRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicInstanceImplementationRef) {
            listener.enterSchematicInstanceImplementationRef(this);
        }
    };
    // @Override
    SchematicInstanceImplementationRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicInstanceImplementationRef) {
            listener.exitSchematicInstanceImplementationRef(this);
        }
    };
    // @Override
    SchematicInstanceImplementationRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicInstanceImplementationRef) {
            return visitor.visitSchematicInstanceImplementationRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicInstanceImplementationRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicInstanceImplementationRefContext = SchematicInstanceImplementationRefContext;
var SchematicInterconnectAttributeDisplayContext = /** @class */ (function (_super) {
    __extends(SchematicInterconnectAttributeDisplayContext, _super);
    function SchematicInterconnectAttributeDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicInterconnectAttributeDisplayContext.prototype.connectivityTagGeneratorDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityTagGeneratorDisplayContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityTagGeneratorDisplayContext);
        }
    };
    SchematicInterconnectAttributeDisplayContext.prototype.criticalityDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CriticalityDisplayContext);
        }
        else {
            return this.getRuleContext(i, CriticalityDisplayContext);
        }
    };
    SchematicInterconnectAttributeDisplayContext.prototype.interconnectAttachedText = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectAttachedTextContext);
        }
        else {
            return this.getRuleContext(i, InterconnectAttachedTextContext);
        }
    };
    SchematicInterconnectAttributeDisplayContext.prototype.interconnectDelayDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectDelayDisplayContext);
        }
        else {
            return this.getRuleContext(i, InterconnectDelayDisplayContext);
        }
    };
    SchematicInterconnectAttributeDisplayContext.prototype.interconnectNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, InterconnectNameDisplayContext);
        }
    };
    SchematicInterconnectAttributeDisplayContext.prototype.interconnectPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, InterconnectPropertyDisplayContext);
        }
    };
    Object.defineProperty(SchematicInterconnectAttributeDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicInterconnectAttributeDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicInterconnectAttributeDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicInterconnectAttributeDisplay) {
            listener.enterSchematicInterconnectAttributeDisplay(this);
        }
    };
    // @Override
    SchematicInterconnectAttributeDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicInterconnectAttributeDisplay) {
            listener.exitSchematicInterconnectAttributeDisplay(this);
        }
    };
    // @Override
    SchematicInterconnectAttributeDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicInterconnectAttributeDisplay) {
            return visitor.visitSchematicInterconnectAttributeDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicInterconnectAttributeDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicInterconnectAttributeDisplayContext = SchematicInterconnectAttributeDisplayContext;
var SchematicInterconnectHeaderContext = /** @class */ (function (_super) {
    __extends(SchematicInterconnectHeaderContext, _super);
    function SchematicInterconnectHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicInterconnectHeaderContext.prototype.criticality = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CriticalityContext);
        }
        else {
            return this.getRuleContext(i, CriticalityContext);
        }
    };
    SchematicInterconnectHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    SchematicInterconnectHeaderContext.prototype.interconnectDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectDelayContext);
        }
        else {
            return this.getRuleContext(i, InterconnectDelayContext);
        }
    };
    SchematicInterconnectHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicInterconnectHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SchematicInterconnectHeaderContext.prototype.schematicInterconnectTerminatorImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInterconnectTerminatorImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicInterconnectTerminatorImplementationContext);
        }
    };
    SchematicInterconnectHeaderContext.prototype.schematicJunctionImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicJunctionImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicJunctionImplementationContext);
        }
    };
    SchematicInterconnectHeaderContext.prototype.schematicWireStyle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicWireStyleContext);
        }
        else {
            return this.getRuleContext(i, SchematicWireStyleContext);
        }
    };
    Object.defineProperty(SchematicInterconnectHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicInterconnectHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicInterconnectHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicInterconnectHeader) {
            listener.enterSchematicInterconnectHeader(this);
        }
    };
    // @Override
    SchematicInterconnectHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicInterconnectHeader) {
            listener.exitSchematicInterconnectHeader(this);
        }
    };
    // @Override
    SchematicInterconnectHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicInterconnectHeader) {
            return visitor.visitSchematicInterconnectHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicInterconnectHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicInterconnectHeaderContext = SchematicInterconnectHeaderContext;
var SchematicInterconnectTerminatorImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicInterconnectTerminatorImplementationContext, _super);
    function SchematicInterconnectTerminatorImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicInterconnectTerminatorImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicInterconnectTerminatorImplementationContext.prototype.schematicInterconnectTerminatorTemplateRef = function () {
        return this.getRuleContext(0, SchematicInterconnectTerminatorTemplateRefContext);
    };
    SchematicInterconnectTerminatorImplementationContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicInterconnectTerminatorImplementationContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicInterconnectTerminatorImplementationContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicInterconnectTerminatorImplementationContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicInterconnectTerminatorImplementationContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicInterconnectTerminatorImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicInterconnectTerminatorImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicInterconnectTerminatorImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicInterconnectTerminatorImplementation) {
            listener.enterSchematicInterconnectTerminatorImplementation(this);
        }
    };
    // @Override
    SchematicInterconnectTerminatorImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicInterconnectTerminatorImplementation) {
            listener.exitSchematicInterconnectTerminatorImplementation(this);
        }
    };
    // @Override
    SchematicInterconnectTerminatorImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicInterconnectTerminatorImplementation) {
            return visitor.visitSchematicInterconnectTerminatorImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicInterconnectTerminatorImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicInterconnectTerminatorImplementationContext = SchematicInterconnectTerminatorImplementationContext;
var SchematicInterconnectTerminatorImplementationRefContext = /** @class */ (function (_super) {
    __extends(SchematicInterconnectTerminatorImplementationRefContext, _super);
    function SchematicInterconnectTerminatorImplementationRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicInterconnectTerminatorImplementationRefContext.prototype.implementationNameRef = function () {
        return this.getRuleContext(0, ImplementationNameRefContext);
    };
    Object.defineProperty(SchematicInterconnectTerminatorImplementationRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicInterconnectTerminatorImplementationRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicInterconnectTerminatorImplementationRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicInterconnectTerminatorImplementationRef) {
            listener.enterSchematicInterconnectTerminatorImplementationRef(this);
        }
    };
    // @Override
    SchematicInterconnectTerminatorImplementationRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicInterconnectTerminatorImplementationRef) {
            listener.exitSchematicInterconnectTerminatorImplementationRef(this);
        }
    };
    // @Override
    SchematicInterconnectTerminatorImplementationRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicInterconnectTerminatorImplementationRef) {
            return visitor.visitSchematicInterconnectTerminatorImplementationRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicInterconnectTerminatorImplementationRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicInterconnectTerminatorImplementationRefContext = SchematicInterconnectTerminatorImplementationRefContext;
var SchematicInterconnectTerminatorTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicInterconnectTerminatorTemplateContext, _super);
    function SchematicInterconnectTerminatorTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicInterconnectTerminatorTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicInterconnectTerminatorTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicInterconnectTerminatorTemplateContext.prototype.hotspot = function () {
        return this.getRuleContext(0, HotspotContext);
    };
    SchematicInterconnectTerminatorTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicInterconnectTerminatorTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicInterconnectTerminatorTemplateContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicInterconnectTerminatorTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicInterconnectTerminatorTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(SchematicInterconnectTerminatorTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicInterconnectTerminatorTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicInterconnectTerminatorTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicInterconnectTerminatorTemplate) {
            listener.enterSchematicInterconnectTerminatorTemplate(this);
        }
    };
    // @Override
    SchematicInterconnectTerminatorTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicInterconnectTerminatorTemplate) {
            listener.exitSchematicInterconnectTerminatorTemplate(this);
        }
    };
    // @Override
    SchematicInterconnectTerminatorTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicInterconnectTerminatorTemplate) {
            return visitor.visitSchematicInterconnectTerminatorTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicInterconnectTerminatorTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicInterconnectTerminatorTemplateContext = SchematicInterconnectTerminatorTemplateContext;
var SchematicInterconnectTerminatorTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicInterconnectTerminatorTemplateRefContext, _super);
    function SchematicInterconnectTerminatorTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicInterconnectTerminatorTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicInterconnectTerminatorTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicInterconnectTerminatorTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicInterconnectTerminatorTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicInterconnectTerminatorTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicInterconnectTerminatorTemplateRef) {
            listener.enterSchematicInterconnectTerminatorTemplateRef(this);
        }
    };
    // @Override
    SchematicInterconnectTerminatorTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicInterconnectTerminatorTemplateRef) {
            listener.exitSchematicInterconnectTerminatorTemplateRef(this);
        }
    };
    // @Override
    SchematicInterconnectTerminatorTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicInterconnectTerminatorTemplateRef) {
            return visitor.visitSchematicInterconnectTerminatorTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicInterconnectTerminatorTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicInterconnectTerminatorTemplateRefContext = SchematicInterconnectTerminatorTemplateRefContext;
var SchematicJunctionImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicJunctionImplementationContext, _super);
    function SchematicJunctionImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicJunctionImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicJunctionImplementationContext.prototype.schematicJunctionTemplateRef = function () {
        return this.getRuleContext(0, SchematicJunctionTemplateRefContext);
    };
    SchematicJunctionImplementationContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicJunctionImplementationContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicJunctionImplementationContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicJunctionImplementationContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicJunctionImplementationContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicJunctionImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicJunctionImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicJunctionImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicJunctionImplementation) {
            listener.enterSchematicJunctionImplementation(this);
        }
    };
    // @Override
    SchematicJunctionImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicJunctionImplementation) {
            listener.exitSchematicJunctionImplementation(this);
        }
    };
    // @Override
    SchematicJunctionImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicJunctionImplementation) {
            return visitor.visitSchematicJunctionImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicJunctionImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicJunctionImplementationContext = SchematicJunctionImplementationContext;
var SchematicJunctionImplementationRefContext = /** @class */ (function (_super) {
    __extends(SchematicJunctionImplementationRefContext, _super);
    function SchematicJunctionImplementationRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicJunctionImplementationRefContext.prototype.implementationNameRef = function () {
        return this.getRuleContext(0, ImplementationNameRefContext);
    };
    Object.defineProperty(SchematicJunctionImplementationRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicJunctionImplementationRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicJunctionImplementationRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicJunctionImplementationRef) {
            listener.enterSchematicJunctionImplementationRef(this);
        }
    };
    // @Override
    SchematicJunctionImplementationRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicJunctionImplementationRef) {
            listener.exitSchematicJunctionImplementationRef(this);
        }
    };
    // @Override
    SchematicJunctionImplementationRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicJunctionImplementationRef) {
            return visitor.visitSchematicJunctionImplementationRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicJunctionImplementationRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicJunctionImplementationRefContext = SchematicJunctionImplementationRefContext;
var SchematicJunctionTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicJunctionTemplateContext, _super);
    function SchematicJunctionTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicJunctionTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicJunctionTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicJunctionTemplateContext.prototype.hotspot = function () {
        return this.getRuleContext(0, HotspotContext);
    };
    SchematicJunctionTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicJunctionTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicJunctionTemplateContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicJunctionTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicJunctionTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(SchematicJunctionTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicJunctionTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicJunctionTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicJunctionTemplate) {
            listener.enterSchematicJunctionTemplate(this);
        }
    };
    // @Override
    SchematicJunctionTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicJunctionTemplate) {
            listener.exitSchematicJunctionTemplate(this);
        }
    };
    // @Override
    SchematicJunctionTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicJunctionTemplate) {
            return visitor.visitSchematicJunctionTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicJunctionTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicJunctionTemplateContext = SchematicJunctionTemplateContext;
var SchematicJunctionTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicJunctionTemplateRefContext, _super);
    function SchematicJunctionTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicJunctionTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicJunctionTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicJunctionTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicJunctionTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicJunctionTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicJunctionTemplateRef) {
            listener.enterSchematicJunctionTemplateRef(this);
        }
    };
    // @Override
    SchematicJunctionTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicJunctionTemplateRef) {
            listener.exitSchematicJunctionTemplateRef(this);
        }
    };
    // @Override
    SchematicJunctionTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicJunctionTemplateRef) {
            return visitor.visitSchematicJunctionTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicJunctionTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicJunctionTemplateRefContext = SchematicJunctionTemplateRefContext;
var SchematicMasterPortImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicMasterPortImplementationContext, _super);
    function SchematicMasterPortImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicMasterPortImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicMasterPortImplementationContext.prototype.schematicMasterPortTemplateRef = function () {
        return this.getRuleContext(0, SchematicMasterPortTemplateRefContext);
    };
    SchematicMasterPortImplementationContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicMasterPortImplementationContext.prototype.portRef = function () {
        return this.tryGetRuleContext(0, PortRefContext);
    };
    SchematicMasterPortImplementationContext.prototype.localPortGroupRef = function () {
        return this.tryGetRuleContext(0, LocalPortGroupRefContext);
    };
    SchematicMasterPortImplementationContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicMasterPortImplementationContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicMasterPortImplementationContext.prototype.portAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, PortAttributeDisplayContext);
        }
    };
    SchematicMasterPortImplementationContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicMasterPortImplementationContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicMasterPortImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicMasterPortImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicMasterPortImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicMasterPortImplementation) {
            listener.enterSchematicMasterPortImplementation(this);
        }
    };
    // @Override
    SchematicMasterPortImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicMasterPortImplementation) {
            listener.exitSchematicMasterPortImplementation(this);
        }
    };
    // @Override
    SchematicMasterPortImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicMasterPortImplementation) {
            return visitor.visitSchematicMasterPortImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicMasterPortImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicMasterPortImplementationContext = SchematicMasterPortImplementationContext;
var SchematicMasterPortImplementationRefContext = /** @class */ (function (_super) {
    __extends(SchematicMasterPortImplementationRefContext, _super);
    function SchematicMasterPortImplementationRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicMasterPortImplementationRefContext.prototype.implementationNameRef = function () {
        return this.getRuleContext(0, ImplementationNameRefContext);
    };
    Object.defineProperty(SchematicMasterPortImplementationRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicMasterPortImplementationRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicMasterPortImplementationRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicMasterPortImplementationRef) {
            listener.enterSchematicMasterPortImplementationRef(this);
        }
    };
    // @Override
    SchematicMasterPortImplementationRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicMasterPortImplementationRef) {
            listener.exitSchematicMasterPortImplementationRef(this);
        }
    };
    // @Override
    SchematicMasterPortImplementationRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicMasterPortImplementationRef) {
            return visitor.visitSchematicMasterPortImplementationRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicMasterPortImplementationRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicMasterPortImplementationRefContext = SchematicMasterPortImplementationRefContext;
var SchematicMasterPortTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicMasterPortTemplateContext, _super);
    function SchematicMasterPortTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicMasterPortTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicMasterPortTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicMasterPortTemplateContext.prototype.hotspot = function () {
        return this.getRuleContext(0, HotspotContext);
    };
    SchematicMasterPortTemplateContext.prototype.portDirectionIndicator = function () {
        return this.getRuleContext(0, PortDirectionIndicatorContext);
    };
    SchematicMasterPortTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicMasterPortTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicMasterPortTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicMasterPortTemplateContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicMasterPortTemplateContext.prototype.portAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, PortAttributeDisplayContext);
        }
    };
    SchematicMasterPortTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicMasterPortTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    SchematicMasterPortTemplateContext.prototype.schematicPortStyle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortStyleContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortStyleContext);
        }
    };
    Object.defineProperty(SchematicMasterPortTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicMasterPortTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicMasterPortTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicMasterPortTemplate) {
            listener.enterSchematicMasterPortTemplate(this);
        }
    };
    // @Override
    SchematicMasterPortTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicMasterPortTemplate) {
            listener.exitSchematicMasterPortTemplate(this);
        }
    };
    // @Override
    SchematicMasterPortTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicMasterPortTemplate) {
            return visitor.visitSchematicMasterPortTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicMasterPortTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicMasterPortTemplateContext = SchematicMasterPortTemplateContext;
var SchematicMasterPortTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicMasterPortTemplateRefContext, _super);
    function SchematicMasterPortTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicMasterPortTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicMasterPortTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicMasterPortTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicMasterPortTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicMasterPortTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicMasterPortTemplateRef) {
            listener.enterSchematicMasterPortTemplateRef(this);
        }
    };
    // @Override
    SchematicMasterPortTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicMasterPortTemplateRef) {
            listener.exitSchematicMasterPortTemplateRef(this);
        }
    };
    // @Override
    SchematicMasterPortTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicMasterPortTemplateRef) {
            return visitor.visitSchematicMasterPortTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicMasterPortTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicMasterPortTemplateRefContext = SchematicMasterPortTemplateRefContext;
var SchematicMetricContext = /** @class */ (function (_super) {
    __extends(SchematicMetricContext, _super);
    function SchematicMetricContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicMetricContext.prototype.setDistance = function () {
        return this.getRuleContext(0, SetDistanceContext);
    };
    SchematicMetricContext.prototype.hotspotGrid = function () {
        return this.tryGetRuleContext(0, HotspotGridContext);
    };
    SchematicMetricContext.prototype.noHotspotGrid = function () {
        return this.tryGetRuleContext(0, NoHotspotGridContext);
    };
    SchematicMetricContext.prototype.nominalHotspotGrid = function () {
        return this.tryGetRuleContext(0, NominalHotspotGridContext);
    };
    Object.defineProperty(SchematicMetricContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicMetric; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicMetricContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicMetric) {
            listener.enterSchematicMetric(this);
        }
    };
    // @Override
    SchematicMetricContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicMetric) {
            listener.exitSchematicMetric(this);
        }
    };
    // @Override
    SchematicMetricContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicMetric) {
            return visitor.visitSchematicMetric(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicMetricContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicMetricContext = SchematicMetricContext;
var SchematicNetContext = /** @class */ (function (_super) {
    __extends(SchematicNetContext, _super);
    function SchematicNetContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicNetContext.prototype.interconnectNameDef = function () {
        return this.getRuleContext(0, InterconnectNameDefContext);
    };
    SchematicNetContext.prototype.signalRef = function () {
        return this.getRuleContext(0, SignalRefContext);
    };
    SchematicNetContext.prototype.schematicInterconnectHeader = function () {
        return this.getRuleContext(0, SchematicInterconnectHeaderContext);
    };
    SchematicNetContext.prototype.schematicNetJoined = function () {
        return this.getRuleContext(0, SchematicNetJoinedContext);
    };
    SchematicNetContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicNetContext.prototype.schematicInterconnectAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInterconnectAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, SchematicInterconnectAttributeDisplayContext);
        }
    };
    SchematicNetContext.prototype.schematicNetDetails = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicNetDetailsContext);
        }
        else {
            return this.getRuleContext(i, SchematicNetDetailsContext);
        }
    };
    SchematicNetContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(SchematicNetContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicNet; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicNetContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicNet) {
            listener.enterSchematicNet(this);
        }
    };
    // @Override
    SchematicNetContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicNet) {
            listener.exitSchematicNet(this);
        }
    };
    // @Override
    SchematicNetContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicNet) {
            return visitor.visitSchematicNet(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicNetContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicNetContext = SchematicNetContext;
var SchematicNetDetailsContext = /** @class */ (function (_super) {
    __extends(SchematicNetDetailsContext, _super);
    function SchematicNetDetailsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicNetDetailsContext.prototype.schematicNetGraphics = function () {
        return this.tryGetRuleContext(0, SchematicNetGraphicsContext);
    };
    SchematicNetDetailsContext.prototype.schematicSubNetSet = function () {
        return this.tryGetRuleContext(0, SchematicSubNetSetContext);
    };
    Object.defineProperty(SchematicNetDetailsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicNetDetails; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicNetDetailsContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicNetDetails) {
            listener.enterSchematicNetDetails(this);
        }
    };
    // @Override
    SchematicNetDetailsContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicNetDetails) {
            listener.exitSchematicNetDetails(this);
        }
    };
    // @Override
    SchematicNetDetailsContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicNetDetails) {
            return visitor.visitSchematicNetDetails(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicNetDetailsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicNetDetailsContext = SchematicNetDetailsContext;
var SchematicNetGraphicsContext = /** @class */ (function (_super) {
    __extends(SchematicNetGraphicsContext, _super);
    function SchematicNetGraphicsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicNetGraphicsContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicNetGraphicsContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicNetGraphicsContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    SchematicNetGraphicsContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(SchematicNetGraphicsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicNetGraphics; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicNetGraphicsContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicNetGraphics) {
            listener.enterSchematicNetGraphics(this);
        }
    };
    // @Override
    SchematicNetGraphicsContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicNetGraphics) {
            listener.exitSchematicNetGraphics(this);
        }
    };
    // @Override
    SchematicNetGraphicsContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicNetGraphics) {
            return visitor.visitSchematicNetGraphics(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicNetGraphicsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicNetGraphicsContext = SchematicNetGraphicsContext;
var SchematicNetJoinedContext = /** @class */ (function (_super) {
    __extends(SchematicNetJoinedContext, _super);
    function SchematicNetJoinedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicNetJoinedContext.prototype.portJoined = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortJoinedContext);
        }
        else {
            return this.getRuleContext(i, PortJoinedContext);
        }
    };
    SchematicNetJoinedContext.prototype.joinedAsSignal = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(JoinedAsSignalContext);
        }
        else {
            return this.getRuleContext(i, JoinedAsSignalContext);
        }
    };
    SchematicNetJoinedContext.prototype.ripperHotspotRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RipperHotspotRefContext);
        }
        else {
            return this.getRuleContext(i, RipperHotspotRefContext);
        }
    };
    SchematicNetJoinedContext.prototype.schematicGlobalPortImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicGlobalPortImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicGlobalPortImplementationRefContext);
        }
    };
    SchematicNetJoinedContext.prototype.schematicInterconnectTerminatorImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInterconnectTerminatorImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicInterconnectTerminatorImplementationRefContext);
        }
    };
    SchematicNetJoinedContext.prototype.schematicJunctionImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicJunctionImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicJunctionImplementationRefContext);
        }
    };
    SchematicNetJoinedContext.prototype.schematicMasterPortImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicMasterPortImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicMasterPortImplementationRefContext);
        }
    };
    SchematicNetJoinedContext.prototype.schematicOffPageConnectorImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOffPageConnectorImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicOffPageConnectorImplementationRefContext);
        }
    };
    SchematicNetJoinedContext.prototype.schematicOnPageConnectorImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicOnPageConnectorImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicOnPageConnectorImplementationRefContext);
        }
    };
    SchematicNetJoinedContext.prototype.schematicSymbolPortImplementationRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSymbolPortImplementationRefContext);
        }
        else {
            return this.getRuleContext(i, SchematicSymbolPortImplementationRefContext);
        }
    };
    Object.defineProperty(SchematicNetJoinedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicNetJoined; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicNetJoinedContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicNetJoined) {
            listener.enterSchematicNetJoined(this);
        }
    };
    // @Override
    SchematicNetJoinedContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicNetJoined) {
            listener.exitSchematicNetJoined(this);
        }
    };
    // @Override
    SchematicNetJoinedContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicNetJoined) {
            return visitor.visitSchematicNetJoined(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicNetJoinedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicNetJoinedContext = SchematicNetJoinedContext;
var SchematicOffPageConnectorImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicOffPageConnectorImplementationContext, _super);
    function SchematicOffPageConnectorImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOffPageConnectorImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicOffPageConnectorImplementationContext.prototype.schematicOffPageConnectorTemplateRef = function () {
        return this.getRuleContext(0, SchematicOffPageConnectorTemplateRefContext);
    };
    SchematicOffPageConnectorImplementationContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicOffPageConnectorImplementationContext.prototype.associatedInterconnectNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AssociatedInterconnectNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, AssociatedInterconnectNameDisplayContext);
        }
    };
    SchematicOffPageConnectorImplementationContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicOffPageConnectorImplementationContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicOffPageConnectorImplementationContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SchematicOffPageConnectorImplementationContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicOffPageConnectorImplementationContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicOffPageConnectorImplementationContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicOffPageConnectorImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOffPageConnectorImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOffPageConnectorImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOffPageConnectorImplementation) {
            listener.enterSchematicOffPageConnectorImplementation(this);
        }
    };
    // @Override
    SchematicOffPageConnectorImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOffPageConnectorImplementation) {
            listener.exitSchematicOffPageConnectorImplementation(this);
        }
    };
    // @Override
    SchematicOffPageConnectorImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOffPageConnectorImplementation) {
            return visitor.visitSchematicOffPageConnectorImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOffPageConnectorImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOffPageConnectorImplementationContext = SchematicOffPageConnectorImplementationContext;
var SchematicOffPageConnectorImplementationRefContext = /** @class */ (function (_super) {
    __extends(SchematicOffPageConnectorImplementationRefContext, _super);
    function SchematicOffPageConnectorImplementationRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOffPageConnectorImplementationRefContext.prototype.implementationNameRef = function () {
        return this.getRuleContext(0, ImplementationNameRefContext);
    };
    Object.defineProperty(SchematicOffPageConnectorImplementationRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOffPageConnectorImplementationRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOffPageConnectorImplementationRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOffPageConnectorImplementationRef) {
            listener.enterSchematicOffPageConnectorImplementationRef(this);
        }
    };
    // @Override
    SchematicOffPageConnectorImplementationRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOffPageConnectorImplementationRef) {
            listener.exitSchematicOffPageConnectorImplementationRef(this);
        }
    };
    // @Override
    SchematicOffPageConnectorImplementationRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOffPageConnectorImplementationRef) {
            return visitor.visitSchematicOffPageConnectorImplementationRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOffPageConnectorImplementationRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOffPageConnectorImplementationRefContext = SchematicOffPageConnectorImplementationRefContext;
var SchematicOffPageConnectorTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicOffPageConnectorTemplateContext, _super);
    function SchematicOffPageConnectorTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOffPageConnectorTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicOffPageConnectorTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicOffPageConnectorTemplateContext.prototype.hotspot = function () {
        return this.getRuleContext(0, HotspotContext);
    };
    SchematicOffPageConnectorTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicOffPageConnectorTemplateContext.prototype.associatedInterconnectNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AssociatedInterconnectNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, AssociatedInterconnectNameDisplayContext);
        }
    };
    SchematicOffPageConnectorTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicOffPageConnectorTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicOffPageConnectorTemplateContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicOffPageConnectorTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicOffPageConnectorTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(SchematicOffPageConnectorTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOffPageConnectorTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOffPageConnectorTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOffPageConnectorTemplate) {
            listener.enterSchematicOffPageConnectorTemplate(this);
        }
    };
    // @Override
    SchematicOffPageConnectorTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOffPageConnectorTemplate) {
            listener.exitSchematicOffPageConnectorTemplate(this);
        }
    };
    // @Override
    SchematicOffPageConnectorTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOffPageConnectorTemplate) {
            return visitor.visitSchematicOffPageConnectorTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOffPageConnectorTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOffPageConnectorTemplateContext = SchematicOffPageConnectorTemplateContext;
var SchematicOffPageConnectorTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicOffPageConnectorTemplateRefContext, _super);
    function SchematicOffPageConnectorTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOffPageConnectorTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicOffPageConnectorTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicOffPageConnectorTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOffPageConnectorTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOffPageConnectorTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOffPageConnectorTemplateRef) {
            listener.enterSchematicOffPageConnectorTemplateRef(this);
        }
    };
    // @Override
    SchematicOffPageConnectorTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOffPageConnectorTemplateRef) {
            listener.exitSchematicOffPageConnectorTemplateRef(this);
        }
    };
    // @Override
    SchematicOffPageConnectorTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOffPageConnectorTemplateRef) {
            return visitor.visitSchematicOffPageConnectorTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOffPageConnectorTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOffPageConnectorTemplateRefContext = SchematicOffPageConnectorTemplateRefContext;
var SchematicOnPageConnectorImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicOnPageConnectorImplementationContext, _super);
    function SchematicOnPageConnectorImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOnPageConnectorImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicOnPageConnectorImplementationContext.prototype.schematicOnPageConnectorTemplateRef = function () {
        return this.getRuleContext(0, SchematicOnPageConnectorTemplateRefContext);
    };
    SchematicOnPageConnectorImplementationContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicOnPageConnectorImplementationContext.prototype.associatedInterconnectNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AssociatedInterconnectNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, AssociatedInterconnectNameDisplayContext);
        }
    };
    SchematicOnPageConnectorImplementationContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicOnPageConnectorImplementationContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicOnPageConnectorImplementationContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SchematicOnPageConnectorImplementationContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicOnPageConnectorImplementationContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicOnPageConnectorImplementationContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicOnPageConnectorImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOnPageConnectorImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOnPageConnectorImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOnPageConnectorImplementation) {
            listener.enterSchematicOnPageConnectorImplementation(this);
        }
    };
    // @Override
    SchematicOnPageConnectorImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOnPageConnectorImplementation) {
            listener.exitSchematicOnPageConnectorImplementation(this);
        }
    };
    // @Override
    SchematicOnPageConnectorImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOnPageConnectorImplementation) {
            return visitor.visitSchematicOnPageConnectorImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOnPageConnectorImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOnPageConnectorImplementationContext = SchematicOnPageConnectorImplementationContext;
var SchematicOnPageConnectorImplementationRefContext = /** @class */ (function (_super) {
    __extends(SchematicOnPageConnectorImplementationRefContext, _super);
    function SchematicOnPageConnectorImplementationRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOnPageConnectorImplementationRefContext.prototype.implementationNameRef = function () {
        return this.getRuleContext(0, ImplementationNameRefContext);
    };
    Object.defineProperty(SchematicOnPageConnectorImplementationRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOnPageConnectorImplementationRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOnPageConnectorImplementationRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOnPageConnectorImplementationRef) {
            listener.enterSchematicOnPageConnectorImplementationRef(this);
        }
    };
    // @Override
    SchematicOnPageConnectorImplementationRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOnPageConnectorImplementationRef) {
            listener.exitSchematicOnPageConnectorImplementationRef(this);
        }
    };
    // @Override
    SchematicOnPageConnectorImplementationRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOnPageConnectorImplementationRef) {
            return visitor.visitSchematicOnPageConnectorImplementationRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOnPageConnectorImplementationRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOnPageConnectorImplementationRefContext = SchematicOnPageConnectorImplementationRefContext;
var SchematicOnPageConnectorTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicOnPageConnectorTemplateContext, _super);
    function SchematicOnPageConnectorTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOnPageConnectorTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicOnPageConnectorTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicOnPageConnectorTemplateContext.prototype.hotspot = function () {
        return this.getRuleContext(0, HotspotContext);
    };
    SchematicOnPageConnectorTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicOnPageConnectorTemplateContext.prototype.associatedInterconnectNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AssociatedInterconnectNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, AssociatedInterconnectNameDisplayContext);
        }
    };
    SchematicOnPageConnectorTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicOnPageConnectorTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicOnPageConnectorTemplateContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicOnPageConnectorTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicOnPageConnectorTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(SchematicOnPageConnectorTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOnPageConnectorTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOnPageConnectorTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOnPageConnectorTemplate) {
            listener.enterSchematicOnPageConnectorTemplate(this);
        }
    };
    // @Override
    SchematicOnPageConnectorTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOnPageConnectorTemplate) {
            listener.exitSchematicOnPageConnectorTemplate(this);
        }
    };
    // @Override
    SchematicOnPageConnectorTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOnPageConnectorTemplate) {
            return visitor.visitSchematicOnPageConnectorTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOnPageConnectorTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOnPageConnectorTemplateContext = SchematicOnPageConnectorTemplateContext;
var SchematicOnPageConnectorTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicOnPageConnectorTemplateRefContext, _super);
    function SchematicOnPageConnectorTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOnPageConnectorTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicOnPageConnectorTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicOnPageConnectorTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOnPageConnectorTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOnPageConnectorTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOnPageConnectorTemplateRef) {
            listener.enterSchematicOnPageConnectorTemplateRef(this);
        }
    };
    // @Override
    SchematicOnPageConnectorTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOnPageConnectorTemplateRef) {
            listener.exitSchematicOnPageConnectorTemplateRef(this);
        }
    };
    // @Override
    SchematicOnPageConnectorTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOnPageConnectorTemplateRef) {
            return visitor.visitSchematicOnPageConnectorTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOnPageConnectorTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOnPageConnectorTemplateRefContext = SchematicOnPageConnectorTemplateRefContext;
var SchematicOtherwiseFrameBorderContext = /** @class */ (function (_super) {
    __extends(SchematicOtherwiseFrameBorderContext, _super);
    function SchematicOtherwiseFrameBorderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOtherwiseFrameBorderContext.prototype.schematicOtherwiseFrameBorderTemplateRef = function () {
        return this.getRuleContext(0, SchematicOtherwiseFrameBorderTemplateRefContext);
    };
    SchematicOtherwiseFrameBorderContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicOtherwiseFrameBorderContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicOtherwiseFrameBorderContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicOtherwiseFrameBorderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOtherwiseFrameBorder; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOtherwiseFrameBorderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOtherwiseFrameBorder) {
            listener.enterSchematicOtherwiseFrameBorder(this);
        }
    };
    // @Override
    SchematicOtherwiseFrameBorderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOtherwiseFrameBorder) {
            listener.exitSchematicOtherwiseFrameBorder(this);
        }
    };
    // @Override
    SchematicOtherwiseFrameBorderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOtherwiseFrameBorder) {
            return visitor.visitSchematicOtherwiseFrameBorder(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOtherwiseFrameBorderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOtherwiseFrameBorderContext = SchematicOtherwiseFrameBorderContext;
var SchematicOtherwiseFrameBorderTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicOtherwiseFrameBorderTemplateContext, _super);
    function SchematicOtherwiseFrameBorderTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOtherwiseFrameBorderTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicOtherwiseFrameBorderTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicOtherwiseFrameBorderTemplateContext.prototype.usableArea = function () {
        return this.getRuleContext(0, UsableAreaContext);
    };
    SchematicOtherwiseFrameBorderTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicOtherwiseFrameBorderTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicOtherwiseFrameBorderTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicOtherwiseFrameBorderTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicOtherwiseFrameBorderTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(SchematicOtherwiseFrameBorderTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOtherwiseFrameBorderTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOtherwiseFrameBorderTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOtherwiseFrameBorderTemplate) {
            listener.enterSchematicOtherwiseFrameBorderTemplate(this);
        }
    };
    // @Override
    SchematicOtherwiseFrameBorderTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOtherwiseFrameBorderTemplate) {
            listener.exitSchematicOtherwiseFrameBorderTemplate(this);
        }
    };
    // @Override
    SchematicOtherwiseFrameBorderTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOtherwiseFrameBorderTemplate) {
            return visitor.visitSchematicOtherwiseFrameBorderTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOtherwiseFrameBorderTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOtherwiseFrameBorderTemplateContext = SchematicOtherwiseFrameBorderTemplateContext;
var SchematicOtherwiseFrameBorderTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicOtherwiseFrameBorderTemplateRefContext, _super);
    function SchematicOtherwiseFrameBorderTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOtherwiseFrameBorderTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicOtherwiseFrameBorderTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicOtherwiseFrameBorderTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOtherwiseFrameBorderTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOtherwiseFrameBorderTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOtherwiseFrameBorderTemplateRef) {
            listener.enterSchematicOtherwiseFrameBorderTemplateRef(this);
        }
    };
    // @Override
    SchematicOtherwiseFrameBorderTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOtherwiseFrameBorderTemplateRef) {
            listener.exitSchematicOtherwiseFrameBorderTemplateRef(this);
        }
    };
    // @Override
    SchematicOtherwiseFrameBorderTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOtherwiseFrameBorderTemplateRef) {
            return visitor.visitSchematicOtherwiseFrameBorderTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOtherwiseFrameBorderTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOtherwiseFrameBorderTemplateRefContext = SchematicOtherwiseFrameBorderTemplateRefContext;
var SchematicOtherwiseFrameImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicOtherwiseFrameImplementationContext, _super);
    function SchematicOtherwiseFrameImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOtherwiseFrameImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicOtherwiseFrameImplementationContext.prototype.otherwiseFrameRef = function () {
        return this.getRuleContext(0, OtherwiseFrameRefContext);
    };
    SchematicOtherwiseFrameImplementationContext.prototype.schematicOtherwiseFrameImplementationHeader = function () {
        return this.getRuleContext(0, SchematicOtherwiseFrameImplementationHeaderContext);
    };
    SchematicOtherwiseFrameImplementationContext.prototype.schematicFrameImplementationDetails = function () {
        return this.getRuleContext(0, SchematicFrameImplementationDetailsContext);
    };
    Object.defineProperty(SchematicOtherwiseFrameImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOtherwiseFrameImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOtherwiseFrameImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOtherwiseFrameImplementation) {
            listener.enterSchematicOtherwiseFrameImplementation(this);
        }
    };
    // @Override
    SchematicOtherwiseFrameImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOtherwiseFrameImplementation) {
            listener.exitSchematicOtherwiseFrameImplementation(this);
        }
    };
    // @Override
    SchematicOtherwiseFrameImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOtherwiseFrameImplementation) {
            return visitor.visitSchematicOtherwiseFrameImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOtherwiseFrameImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOtherwiseFrameImplementationContext = SchematicOtherwiseFrameImplementationContext;
var SchematicOtherwiseFrameImplementationHeaderContext = /** @class */ (function (_super) {
    __extends(SchematicOtherwiseFrameImplementationHeaderContext, _super);
    function SchematicOtherwiseFrameImplementationHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicOtherwiseFrameImplementationHeaderContext.prototype.schematicOtherwiseFrameBorder = function () {
        return this.tryGetRuleContext(0, SchematicOtherwiseFrameBorderContext);
    };
    Object.defineProperty(SchematicOtherwiseFrameImplementationHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicOtherwiseFrameImplementationHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicOtherwiseFrameImplementationHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicOtherwiseFrameImplementationHeader) {
            listener.enterSchematicOtherwiseFrameImplementationHeader(this);
        }
    };
    // @Override
    SchematicOtherwiseFrameImplementationHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicOtherwiseFrameImplementationHeader) {
            listener.exitSchematicOtherwiseFrameImplementationHeader(this);
        }
    };
    // @Override
    SchematicOtherwiseFrameImplementationHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicOtherwiseFrameImplementationHeader) {
            return visitor.visitSchematicOtherwiseFrameImplementationHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicOtherwiseFrameImplementationHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicOtherwiseFrameImplementationHeaderContext = SchematicOtherwiseFrameImplementationHeaderContext;
var SchematicPortAcPowerContext = /** @class */ (function (_super) {
    __extends(SchematicPortAcPowerContext, _super);
    function SchematicPortAcPowerContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortAcPowerContext.prototype.schematicPortAcPowerRecommendedFrequency = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortAcPowerRecommendedFrequencyContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortAcPowerRecommendedFrequencyContext);
        }
    };
    SchematicPortAcPowerContext.prototype.schematicPortAcPowerRecommendedVoltageRms = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortAcPowerRecommendedVoltageRmsContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortAcPowerRecommendedVoltageRmsContext);
        }
    };
    Object.defineProperty(SchematicPortAcPowerContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortAcPower; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortAcPowerContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortAcPower) {
            listener.enterSchematicPortAcPower(this);
        }
    };
    // @Override
    SchematicPortAcPowerContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortAcPower) {
            listener.exitSchematicPortAcPower(this);
        }
    };
    // @Override
    SchematicPortAcPowerContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortAcPower) {
            return visitor.visitSchematicPortAcPower(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortAcPowerContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortAcPowerContext = SchematicPortAcPowerContext;
var SchematicPortAcPowerRecommendedFrequencyContext = /** @class */ (function (_super) {
    __extends(SchematicPortAcPowerRecommendedFrequencyContext, _super);
    function SchematicPortAcPowerRecommendedFrequencyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortAcPowerRecommendedFrequencyContext.prototype.frequencyValue = function () {
        return this.getRuleContext(0, FrequencyValueContext);
    };
    Object.defineProperty(SchematicPortAcPowerRecommendedFrequencyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortAcPowerRecommendedFrequency; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortAcPowerRecommendedFrequencyContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortAcPowerRecommendedFrequency) {
            listener.enterSchematicPortAcPowerRecommendedFrequency(this);
        }
    };
    // @Override
    SchematicPortAcPowerRecommendedFrequencyContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortAcPowerRecommendedFrequency) {
            listener.exitSchematicPortAcPowerRecommendedFrequency(this);
        }
    };
    // @Override
    SchematicPortAcPowerRecommendedFrequencyContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortAcPowerRecommendedFrequency) {
            return visitor.visitSchematicPortAcPowerRecommendedFrequency(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortAcPowerRecommendedFrequencyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortAcPowerRecommendedFrequencyContext = SchematicPortAcPowerRecommendedFrequencyContext;
var SchematicPortAcPowerRecommendedVoltageRmsContext = /** @class */ (function (_super) {
    __extends(SchematicPortAcPowerRecommendedVoltageRmsContext, _super);
    function SchematicPortAcPowerRecommendedVoltageRmsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortAcPowerRecommendedVoltageRmsContext.prototype.voltageValue = function () {
        return this.getRuleContext(0, VoltageValueContext);
    };
    Object.defineProperty(SchematicPortAcPowerRecommendedVoltageRmsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortAcPowerRecommendedVoltageRms; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortAcPowerRecommendedVoltageRmsContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortAcPowerRecommendedVoltageRms) {
            listener.enterSchematicPortAcPowerRecommendedVoltageRms(this);
        }
    };
    // @Override
    SchematicPortAcPowerRecommendedVoltageRmsContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortAcPowerRecommendedVoltageRms) {
            listener.exitSchematicPortAcPowerRecommendedVoltageRms(this);
        }
    };
    // @Override
    SchematicPortAcPowerRecommendedVoltageRmsContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortAcPowerRecommendedVoltageRms) {
            return visitor.visitSchematicPortAcPowerRecommendedVoltageRms(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortAcPowerRecommendedVoltageRmsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortAcPowerRecommendedVoltageRmsContext = SchematicPortAcPowerRecommendedVoltageRmsContext;
var SchematicPortAnalogContext = /** @class */ (function (_super) {
    __extends(SchematicPortAnalogContext, _super);
    function SchematicPortAnalogContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(SchematicPortAnalogContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortAnalog; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortAnalogContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortAnalog) {
            listener.enterSchematicPortAnalog(this);
        }
    };
    // @Override
    SchematicPortAnalogContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortAnalog) {
            listener.exitSchematicPortAnalog(this);
        }
    };
    // @Override
    SchematicPortAnalogContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortAnalog) {
            return visitor.visitSchematicPortAnalog(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortAnalogContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortAnalogContext = SchematicPortAnalogContext;
var SchematicPortAttributesContext = /** @class */ (function (_super) {
    __extends(SchematicPortAttributesContext, _super);
    function SchematicPortAttributesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortAttributesContext.prototype.ieeeStandard = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IeeeStandardContext);
        }
        else {
            return this.getRuleContext(i, IeeeStandardContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortAcPower = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortAcPowerContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortAcPowerContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortAnalog = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortAnalogContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortAnalogContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortChassisGround = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortChassisGroundContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortChassisGroundContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortClock = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortClockContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortClockContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortDcPower = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortDcPowerContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortDcPowerContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortEarthGround = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortEarthGroundContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortEarthGroundContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortGround = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortGroundContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortGroundContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortNonLogical = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortNonLogicalContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortNonLogicalContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortOpenCollector = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortOpenCollectorContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortOpenCollectorContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortOpenEmitter = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortOpenEmitterContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortOpenEmitterContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortPower = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortPowerContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortPowerContext);
        }
    };
    SchematicPortAttributesContext.prototype.schematicPortThreeState = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortThreeStateContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortThreeStateContext);
        }
    };
    Object.defineProperty(SchematicPortAttributesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortAttributes; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortAttributesContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortAttributes) {
            listener.enterSchematicPortAttributes(this);
        }
    };
    // @Override
    SchematicPortAttributesContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortAttributes) {
            listener.exitSchematicPortAttributes(this);
        }
    };
    // @Override
    SchematicPortAttributesContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortAttributes) {
            return visitor.visitSchematicPortAttributes(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortAttributesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortAttributesContext = SchematicPortAttributesContext;
var SchematicPortChassisGroundContext = /** @class */ (function (_super) {
    __extends(SchematicPortChassisGroundContext, _super);
    function SchematicPortChassisGroundContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortChassisGroundContext.prototype.schematicPortAnalog = function () {
        return this.tryGetRuleContext(0, SchematicPortAnalogContext);
    };
    Object.defineProperty(SchematicPortChassisGroundContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortChassisGround; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortChassisGroundContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortChassisGround) {
            listener.enterSchematicPortChassisGround(this);
        }
    };
    // @Override
    SchematicPortChassisGroundContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortChassisGround) {
            listener.exitSchematicPortChassisGround(this);
        }
    };
    // @Override
    SchematicPortChassisGroundContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortChassisGround) {
            return visitor.visitSchematicPortChassisGround(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortChassisGroundContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortChassisGroundContext = SchematicPortChassisGroundContext;
var SchematicPortClockContext = /** @class */ (function (_super) {
    __extends(SchematicPortClockContext, _super);
    function SchematicPortClockContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortClockContext.prototype.ieeeStandard = function () {
        return this.tryGetRuleContext(0, IeeeStandardContext);
    };
    Object.defineProperty(SchematicPortClockContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortClock; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortClockContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortClock) {
            listener.enterSchematicPortClock(this);
        }
    };
    // @Override
    SchematicPortClockContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortClock) {
            listener.exitSchematicPortClock(this);
        }
    };
    // @Override
    SchematicPortClockContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortClock) {
            return visitor.visitSchematicPortClock(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortClockContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortClockContext = SchematicPortClockContext;
var SchematicPortDcPowerContext = /** @class */ (function (_super) {
    __extends(SchematicPortDcPowerContext, _super);
    function SchematicPortDcPowerContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortDcPowerContext.prototype.schematicPortAnalog = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortAnalogContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortAnalogContext);
        }
    };
    SchematicPortDcPowerContext.prototype.schematicPortDcPowerRecommendedVoltage = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortDcPowerRecommendedVoltageContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortDcPowerRecommendedVoltageContext);
        }
    };
    Object.defineProperty(SchematicPortDcPowerContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortDcPower; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortDcPowerContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortDcPower) {
            listener.enterSchematicPortDcPower(this);
        }
    };
    // @Override
    SchematicPortDcPowerContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortDcPower) {
            listener.exitSchematicPortDcPower(this);
        }
    };
    // @Override
    SchematicPortDcPowerContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortDcPower) {
            return visitor.visitSchematicPortDcPower(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortDcPowerContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortDcPowerContext = SchematicPortDcPowerContext;
var SchematicPortDcPowerRecommendedVoltageContext = /** @class */ (function (_super) {
    __extends(SchematicPortDcPowerRecommendedVoltageContext, _super);
    function SchematicPortDcPowerRecommendedVoltageContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortDcPowerRecommendedVoltageContext.prototype.voltageValue = function () {
        return this.getRuleContext(0, VoltageValueContext);
    };
    Object.defineProperty(SchematicPortDcPowerRecommendedVoltageContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortDcPowerRecommendedVoltage; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortDcPowerRecommendedVoltageContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortDcPowerRecommendedVoltage) {
            listener.enterSchematicPortDcPowerRecommendedVoltage(this);
        }
    };
    // @Override
    SchematicPortDcPowerRecommendedVoltageContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortDcPowerRecommendedVoltage) {
            listener.exitSchematicPortDcPowerRecommendedVoltage(this);
        }
    };
    // @Override
    SchematicPortDcPowerRecommendedVoltageContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortDcPowerRecommendedVoltage) {
            return visitor.visitSchematicPortDcPowerRecommendedVoltage(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortDcPowerRecommendedVoltageContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortDcPowerRecommendedVoltageContext = SchematicPortDcPowerRecommendedVoltageContext;
var SchematicPortEarthGroundContext = /** @class */ (function (_super) {
    __extends(SchematicPortEarthGroundContext, _super);
    function SchematicPortEarthGroundContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortEarthGroundContext.prototype.schematicPortAnalog = function () {
        return this.tryGetRuleContext(0, SchematicPortAnalogContext);
    };
    Object.defineProperty(SchematicPortEarthGroundContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortEarthGround; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortEarthGroundContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortEarthGround) {
            listener.enterSchematicPortEarthGround(this);
        }
    };
    // @Override
    SchematicPortEarthGroundContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortEarthGround) {
            listener.exitSchematicPortEarthGround(this);
        }
    };
    // @Override
    SchematicPortEarthGroundContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortEarthGround) {
            return visitor.visitSchematicPortEarthGround(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortEarthGroundContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortEarthGroundContext = SchematicPortEarthGroundContext;
var SchematicPortGroundContext = /** @class */ (function (_super) {
    __extends(SchematicPortGroundContext, _super);
    function SchematicPortGroundContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortGroundContext.prototype.schematicPortAnalog = function () {
        return this.tryGetRuleContext(0, SchematicPortAnalogContext);
    };
    Object.defineProperty(SchematicPortGroundContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortGround; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortGroundContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortGround) {
            listener.enterSchematicPortGround(this);
        }
    };
    // @Override
    SchematicPortGroundContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortGround) {
            listener.exitSchematicPortGround(this);
        }
    };
    // @Override
    SchematicPortGroundContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortGround) {
            return visitor.visitSchematicPortGround(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortGroundContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortGroundContext = SchematicPortGroundContext;
var SchematicPortNonLogicalContext = /** @class */ (function (_super) {
    __extends(SchematicPortNonLogicalContext, _super);
    function SchematicPortNonLogicalContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(SchematicPortNonLogicalContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortNonLogical; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortNonLogicalContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortNonLogical) {
            listener.enterSchematicPortNonLogical(this);
        }
    };
    // @Override
    SchematicPortNonLogicalContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortNonLogical) {
            listener.exitSchematicPortNonLogical(this);
        }
    };
    // @Override
    SchematicPortNonLogicalContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortNonLogical) {
            return visitor.visitSchematicPortNonLogical(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortNonLogicalContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortNonLogicalContext = SchematicPortNonLogicalContext;
var SchematicPortOpenCollectorContext = /** @class */ (function (_super) {
    __extends(SchematicPortOpenCollectorContext, _super);
    function SchematicPortOpenCollectorContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(SchematicPortOpenCollectorContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortOpenCollector; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortOpenCollectorContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortOpenCollector) {
            listener.enterSchematicPortOpenCollector(this);
        }
    };
    // @Override
    SchematicPortOpenCollectorContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortOpenCollector) {
            listener.exitSchematicPortOpenCollector(this);
        }
    };
    // @Override
    SchematicPortOpenCollectorContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortOpenCollector) {
            return visitor.visitSchematicPortOpenCollector(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortOpenCollectorContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortOpenCollectorContext = SchematicPortOpenCollectorContext;
var SchematicPortOpenEmitterContext = /** @class */ (function (_super) {
    __extends(SchematicPortOpenEmitterContext, _super);
    function SchematicPortOpenEmitterContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(SchematicPortOpenEmitterContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortOpenEmitter; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortOpenEmitterContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortOpenEmitter) {
            listener.enterSchematicPortOpenEmitter(this);
        }
    };
    // @Override
    SchematicPortOpenEmitterContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortOpenEmitter) {
            listener.exitSchematicPortOpenEmitter(this);
        }
    };
    // @Override
    SchematicPortOpenEmitterContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortOpenEmitter) {
            return visitor.visitSchematicPortOpenEmitter(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortOpenEmitterContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortOpenEmitterContext = SchematicPortOpenEmitterContext;
var SchematicPortPowerContext = /** @class */ (function (_super) {
    __extends(SchematicPortPowerContext, _super);
    function SchematicPortPowerContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(SchematicPortPowerContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortPower; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortPowerContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortPower) {
            listener.enterSchematicPortPower(this);
        }
    };
    // @Override
    SchematicPortPowerContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortPower) {
            listener.exitSchematicPortPower(this);
        }
    };
    // @Override
    SchematicPortPowerContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortPower) {
            return visitor.visitSchematicPortPower(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortPowerContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortPowerContext = SchematicPortPowerContext;
var SchematicPortStyleContext = /** @class */ (function (_super) {
    __extends(SchematicPortStyleContext, _super);
    function SchematicPortStyleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicPortStyleContext.prototype.narrowPort = function () {
        return this.tryGetRuleContext(0, NarrowPortContext);
    };
    SchematicPortStyleContext.prototype.widePort = function () {
        return this.tryGetRuleContext(0, WidePortContext);
    };
    Object.defineProperty(SchematicPortStyleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortStyle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortStyleContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortStyle) {
            listener.enterSchematicPortStyle(this);
        }
    };
    // @Override
    SchematicPortStyleContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortStyle) {
            listener.exitSchematicPortStyle(this);
        }
    };
    // @Override
    SchematicPortStyleContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortStyle) {
            return visitor.visitSchematicPortStyle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortStyleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortStyleContext = SchematicPortStyleContext;
var SchematicPortThreeStateContext = /** @class */ (function (_super) {
    __extends(SchematicPortThreeStateContext, _super);
    function SchematicPortThreeStateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(SchematicPortThreeStateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicPortThreeState; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicPortThreeStateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicPortThreeState) {
            listener.enterSchematicPortThreeState(this);
        }
    };
    // @Override
    SchematicPortThreeStateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicPortThreeState) {
            listener.exitSchematicPortThreeState(this);
        }
    };
    // @Override
    SchematicPortThreeStateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicPortThreeState) {
            return visitor.visitSchematicPortThreeState(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicPortThreeStateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicPortThreeStateContext = SchematicPortThreeStateContext;
var SchematicRequiredDefaultsContext = /** @class */ (function (_super) {
    __extends(SchematicRequiredDefaultsContext, _super);
    function SchematicRequiredDefaultsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicRequiredDefaultsContext.prototype.schematicMetric = function () {
        return this.getRuleContext(0, SchematicMetricContext);
    };
    SchematicRequiredDefaultsContext.prototype.fontRef = function () {
        return this.getRuleContext(0, FontRefContext);
    };
    SchematicRequiredDefaultsContext.prototype.textHeight = function () {
        return this.getRuleContext(0, TextHeightContext);
    };
    Object.defineProperty(SchematicRequiredDefaultsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicRequiredDefaults; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicRequiredDefaultsContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicRequiredDefaults) {
            listener.enterSchematicRequiredDefaults(this);
        }
    };
    // @Override
    SchematicRequiredDefaultsContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicRequiredDefaults) {
            listener.exitSchematicRequiredDefaults(this);
        }
    };
    // @Override
    SchematicRequiredDefaultsContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicRequiredDefaults) {
            return visitor.visitSchematicRequiredDefaults(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicRequiredDefaultsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicRequiredDefaultsContext = SchematicRequiredDefaultsContext;
var SchematicRipperImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicRipperImplementationContext, _super);
    function SchematicRipperImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicRipperImplementationContext.prototype.implementationNameDef = function () {
        return this.getRuleContext(0, ImplementationNameDefContext);
    };
    SchematicRipperImplementationContext.prototype.schematicRipperTemplateRef = function () {
        return this.getRuleContext(0, SchematicRipperTemplateRefContext);
    };
    SchematicRipperImplementationContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicRipperImplementationContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicRipperImplementationContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicRipperImplementationContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SchematicRipperImplementationContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicRipperImplementationContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicRipperImplementationContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicRipperImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicRipperImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicRipperImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicRipperImplementation) {
            listener.enterSchematicRipperImplementation(this);
        }
    };
    // @Override
    SchematicRipperImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicRipperImplementation) {
            listener.exitSchematicRipperImplementation(this);
        }
    };
    // @Override
    SchematicRipperImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicRipperImplementation) {
            return visitor.visitSchematicRipperImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicRipperImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicRipperImplementationContext = SchematicRipperImplementationContext;
var SchematicRipperImplementationRefContext = /** @class */ (function (_super) {
    __extends(SchematicRipperImplementationRefContext, _super);
    function SchematicRipperImplementationRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicRipperImplementationRefContext.prototype.implementationNameRef = function () {
        return this.getRuleContext(0, ImplementationNameRefContext);
    };
    Object.defineProperty(SchematicRipperImplementationRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicRipperImplementationRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicRipperImplementationRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicRipperImplementationRef) {
            listener.enterSchematicRipperImplementationRef(this);
        }
    };
    // @Override
    SchematicRipperImplementationRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicRipperImplementationRef) {
            listener.exitSchematicRipperImplementationRef(this);
        }
    };
    // @Override
    SchematicRipperImplementationRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicRipperImplementationRef) {
            return visitor.visitSchematicRipperImplementationRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicRipperImplementationRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicRipperImplementationRefContext = SchematicRipperImplementationRefContext;
var SchematicRipperTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicRipperTemplateContext, _super);
    function SchematicRipperTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicRipperTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicRipperTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicRipperTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicRipperTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicRipperTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicRipperTemplateContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicRipperTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicRipperTemplateContext.prototype.ripperHotspot = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RipperHotspotContext);
        }
        else {
            return this.getRuleContext(i, RipperHotspotContext);
        }
    };
    SchematicRipperTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(SchematicRipperTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicRipperTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicRipperTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicRipperTemplate) {
            listener.enterSchematicRipperTemplate(this);
        }
    };
    // @Override
    SchematicRipperTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicRipperTemplate) {
            listener.exitSchematicRipperTemplate(this);
        }
    };
    // @Override
    SchematicRipperTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicRipperTemplate) {
            return visitor.visitSchematicRipperTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicRipperTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicRipperTemplateContext = SchematicRipperTemplateContext;
var SchematicRipperTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicRipperTemplateRefContext, _super);
    function SchematicRipperTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicRipperTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicRipperTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicRipperTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicRipperTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicRipperTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicRipperTemplateRef) {
            listener.enterSchematicRipperTemplateRef(this);
        }
    };
    // @Override
    SchematicRipperTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicRipperTemplateRef) {
            listener.exitSchematicRipperTemplateRef(this);
        }
    };
    // @Override
    SchematicRipperTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicRipperTemplateRef) {
            return visitor.visitSchematicRipperTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicRipperTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicRipperTemplateRefContext = SchematicRipperTemplateRefContext;
var SchematicSubBusContext = /** @class */ (function (_super) {
    __extends(SchematicSubBusContext, _super);
    function SchematicSubBusContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSubBusContext.prototype.interconnectNameDef = function () {
        return this.getRuleContext(0, InterconnectNameDefContext);
    };
    SchematicSubBusContext.prototype.schematicSubInterconnectHeader = function () {
        return this.getRuleContext(0, SchematicSubInterconnectHeaderContext);
    };
    SchematicSubBusContext.prototype.schematicBusJoined = function () {
        return this.getRuleContext(0, SchematicBusJoinedContext);
    };
    SchematicSubBusContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicSubBusContext.prototype.schematicBusDetails = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicBusDetailsContext);
        }
        else {
            return this.getRuleContext(i, SchematicBusDetailsContext);
        }
    };
    SchematicSubBusContext.prototype.schematicBusSlice = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicBusSliceContext);
        }
        else {
            return this.getRuleContext(i, SchematicBusSliceContext);
        }
    };
    SchematicSubBusContext.prototype.schematicInterconnectAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInterconnectAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, SchematicInterconnectAttributeDisplayContext);
        }
    };
    SchematicSubBusContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(SchematicSubBusContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSubBus; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSubBusContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSubBus) {
            listener.enterSchematicSubBus(this);
        }
    };
    // @Override
    SchematicSubBusContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSubBus) {
            listener.exitSchematicSubBus(this);
        }
    };
    // @Override
    SchematicSubBusContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSubBus) {
            return visitor.visitSchematicSubBus(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSubBusContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSubBusContext = SchematicSubBusContext;
var SchematicSubBusSetContext = /** @class */ (function (_super) {
    __extends(SchematicSubBusSetContext, _super);
    function SchematicSubBusSetContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSubBusSetContext.prototype.schematicSubBus = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSubBusContext);
        }
        else {
            return this.getRuleContext(i, SchematicSubBusContext);
        }
    };
    Object.defineProperty(SchematicSubBusSetContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSubBusSet; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSubBusSetContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSubBusSet) {
            listener.enterSchematicSubBusSet(this);
        }
    };
    // @Override
    SchematicSubBusSetContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSubBusSet) {
            listener.exitSchematicSubBusSet(this);
        }
    };
    // @Override
    SchematicSubBusSetContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSubBusSet) {
            return visitor.visitSchematicSubBusSet(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSubBusSetContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSubBusSetContext = SchematicSubBusSetContext;
var SchematicSubInterconnectHeaderContext = /** @class */ (function (_super) {
    __extends(SchematicSubInterconnectHeaderContext, _super);
    function SchematicSubInterconnectHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSubInterconnectHeaderContext.prototype.criticality = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CriticalityContext);
        }
        else {
            return this.getRuleContext(i, CriticalityContext);
        }
    };
    SchematicSubInterconnectHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    SchematicSubInterconnectHeaderContext.prototype.interconnectDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterconnectDelayContext);
        }
        else {
            return this.getRuleContext(i, InterconnectDelayContext);
        }
    };
    SchematicSubInterconnectHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicSubInterconnectHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    Object.defineProperty(SchematicSubInterconnectHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSubInterconnectHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSubInterconnectHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSubInterconnectHeader) {
            listener.enterSchematicSubInterconnectHeader(this);
        }
    };
    // @Override
    SchematicSubInterconnectHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSubInterconnectHeader) {
            listener.exitSchematicSubInterconnectHeader(this);
        }
    };
    // @Override
    SchematicSubInterconnectHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSubInterconnectHeader) {
            return visitor.visitSchematicSubInterconnectHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSubInterconnectHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSubInterconnectHeaderContext = SchematicSubInterconnectHeaderContext;
var SchematicSubNetContext = /** @class */ (function (_super) {
    __extends(SchematicSubNetContext, _super);
    function SchematicSubNetContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSubNetContext.prototype.interconnectNameDef = function () {
        return this.getRuleContext(0, InterconnectNameDefContext);
    };
    SchematicSubNetContext.prototype.schematicSubInterconnectHeader = function () {
        return this.getRuleContext(0, SchematicSubInterconnectHeaderContext);
    };
    SchematicSubNetContext.prototype.schematicNetJoined = function () {
        return this.getRuleContext(0, SchematicNetJoinedContext);
    };
    SchematicSubNetContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicSubNetContext.prototype.schematicInterconnectAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicInterconnectAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, SchematicInterconnectAttributeDisplayContext);
        }
    };
    SchematicSubNetContext.prototype.schematicNetDetails = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicNetDetailsContext);
        }
        else {
            return this.getRuleContext(i, SchematicNetDetailsContext);
        }
    };
    SchematicSubNetContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(SchematicSubNetContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSubNet; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSubNetContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSubNet) {
            listener.enterSchematicSubNet(this);
        }
    };
    // @Override
    SchematicSubNetContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSubNet) {
            listener.exitSchematicSubNet(this);
        }
    };
    // @Override
    SchematicSubNetContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSubNet) {
            return visitor.visitSchematicSubNet(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSubNetContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSubNetContext = SchematicSubNetContext;
var SchematicSubNetSetContext = /** @class */ (function (_super) {
    __extends(SchematicSubNetSetContext, _super);
    function SchematicSubNetSetContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSubNetSetContext.prototype.schematicSubNet = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSubNetContext);
        }
        else {
            return this.getRuleContext(i, SchematicSubNetContext);
        }
    };
    Object.defineProperty(SchematicSubNetSetContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSubNetSet; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSubNetSetContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSubNetSet) {
            listener.enterSchematicSubNetSet(this);
        }
    };
    // @Override
    SchematicSubNetSetContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSubNetSet) {
            listener.exitSchematicSubNetSet(this);
        }
    };
    // @Override
    SchematicSubNetSetContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSubNetSet) {
            return visitor.visitSchematicSubNetSet(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSubNetSetContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSubNetSetContext = SchematicSubNetSetContext;
var SchematicSymbolContext = /** @class */ (function (_super) {
    __extends(SchematicSymbolContext, _super);
    function SchematicSymbolContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSymbolContext.prototype.viewNameDef = function () {
        return this.getRuleContext(0, ViewNameDefContext);
    };
    SchematicSymbolContext.prototype.schematicSymbolHeader = function () {
        return this.getRuleContext(0, SchematicSymbolHeaderContext);
    };
    SchematicSymbolContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicSymbolContext.prototype.cellNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, CellNameDisplayContext);
        }
    };
    SchematicSymbolContext.prototype.cellPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CellPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, CellPropertyDisplayContext);
        }
    };
    SchematicSymbolContext.prototype.clusterPropertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ClusterPropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, ClusterPropertyDisplayContext);
        }
    };
    SchematicSymbolContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicSymbolContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicSymbolContext.prototype.designatorDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DesignatorDisplayContext);
        }
        else {
            return this.getRuleContext(i, DesignatorDisplayContext);
        }
    };
    SchematicSymbolContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicSymbolContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicSymbolContext.prototype.instanceNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, InstanceNameDisplayContext);
        }
    };
    SchematicSymbolContext.prototype.instanceNameGeneratorDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceNameGeneratorDisplayContext);
        }
        else {
            return this.getRuleContext(i, InstanceNameGeneratorDisplayContext);
        }
    };
    SchematicSymbolContext.prototype.instanceWidthDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InstanceWidthDisplayContext);
        }
        else {
            return this.getRuleContext(i, InstanceWidthDisplayContext);
        }
    };
    SchematicSymbolContext.prototype.parameterDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ParameterDisplayContext);
        }
        else {
            return this.getRuleContext(i, ParameterDisplayContext);
        }
    };
    SchematicSymbolContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicSymbolContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    SchematicSymbolContext.prototype.schematicSymbolPortImplementation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSymbolPortImplementationContext);
        }
        else {
            return this.getRuleContext(i, SchematicSymbolPortImplementationContext);
        }
    };
    SchematicSymbolContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    SchematicSymbolContext.prototype.viewNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ViewNameDisplayContext);
        }
    };
    Object.defineProperty(SchematicSymbolContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSymbol; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSymbolContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSymbol) {
            listener.enterSchematicSymbol(this);
        }
    };
    // @Override
    SchematicSymbolContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSymbol) {
            listener.exitSchematicSymbol(this);
        }
    };
    // @Override
    SchematicSymbolContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSymbol) {
            return visitor.visitSchematicSymbol(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSymbolContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSymbolContext = SchematicSymbolContext;
var SchematicSymbolBorderContext = /** @class */ (function (_super) {
    __extends(SchematicSymbolBorderContext, _super);
    function SchematicSymbolBorderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSymbolBorderContext.prototype.schematicSymbolBorderTemplateRef = function () {
        return this.getRuleContext(0, SchematicSymbolBorderTemplateRefContext);
    };
    SchematicSymbolBorderContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicSymbolBorderContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicSymbolBorderContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicSymbolBorderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSymbolBorder; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSymbolBorderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSymbolBorder) {
            listener.enterSchematicSymbolBorder(this);
        }
    };
    // @Override
    SchematicSymbolBorderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSymbolBorder) {
            listener.exitSchematicSymbolBorder(this);
        }
    };
    // @Override
    SchematicSymbolBorderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSymbolBorder) {
            return visitor.visitSchematicSymbolBorder(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSymbolBorderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSymbolBorderContext = SchematicSymbolBorderContext;
var SchematicSymbolBorderTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicSymbolBorderTemplateContext, _super);
    function SchematicSymbolBorderTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSymbolBorderTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicSymbolBorderTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicSymbolBorderTemplateContext.prototype.usableArea = function () {
        return this.getRuleContext(0, UsableAreaContext);
    };
    SchematicSymbolBorderTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicSymbolBorderTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicSymbolBorderTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicSymbolBorderTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicSymbolBorderTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    Object.defineProperty(SchematicSymbolBorderTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSymbolBorderTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSymbolBorderTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSymbolBorderTemplate) {
            listener.enterSchematicSymbolBorderTemplate(this);
        }
    };
    // @Override
    SchematicSymbolBorderTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSymbolBorderTemplate) {
            listener.exitSchematicSymbolBorderTemplate(this);
        }
    };
    // @Override
    SchematicSymbolBorderTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSymbolBorderTemplate) {
            return visitor.visitSchematicSymbolBorderTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSymbolBorderTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSymbolBorderTemplateContext = SchematicSymbolBorderTemplateContext;
var SchematicSymbolBorderTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicSymbolBorderTemplateRefContext, _super);
    function SchematicSymbolBorderTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSymbolBorderTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicSymbolBorderTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicSymbolBorderTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSymbolBorderTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSymbolBorderTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSymbolBorderTemplateRef) {
            listener.enterSchematicSymbolBorderTemplateRef(this);
        }
    };
    // @Override
    SchematicSymbolBorderTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSymbolBorderTemplateRef) {
            listener.exitSchematicSymbolBorderTemplateRef(this);
        }
    };
    // @Override
    SchematicSymbolBorderTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSymbolBorderTemplateRef) {
            return visitor.visitSchematicSymbolBorderTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSymbolBorderTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSymbolBorderTemplateRefContext = SchematicSymbolBorderTemplateRefContext;
var SchematicSymbolHeaderContext = /** @class */ (function (_super) {
    __extends(SchematicSymbolHeaderContext, _super);
    function SchematicSymbolHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSymbolHeaderContext.prototype.schematicUnits = function () {
        return this.getRuleContext(0, SchematicUnitsContext);
    };
    SchematicSymbolHeaderContext.prototype.backgroundColor = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BackgroundColorContext);
        }
        else {
            return this.getRuleContext(i, BackgroundColorContext);
        }
    };
    SchematicSymbolHeaderContext.prototype.derivedFrom = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DerivedFromContext);
        }
        else {
            return this.getRuleContext(i, DerivedFromContext);
        }
    };
    SchematicSymbolHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    SchematicSymbolHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicSymbolHeaderContext.prototype.originalBoundingBox = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OriginalBoundingBoxContext);
        }
        else {
            return this.getRuleContext(i, OriginalBoundingBoxContext);
        }
    };
    SchematicSymbolHeaderContext.prototype.pageSize = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PageSizeContext);
        }
        else {
            return this.getRuleContext(i, PageSizeContext);
        }
    };
    SchematicSymbolHeaderContext.prototype.previousVersion = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PreviousVersionContext);
        }
        else {
            return this.getRuleContext(i, PreviousVersionContext);
        }
    };
    SchematicSymbolHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SchematicSymbolHeaderContext.prototype.schematicSymbolBorder = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicSymbolBorderContext);
        }
        else {
            return this.getRuleContext(i, SchematicSymbolBorderContext);
        }
    };
    SchematicSymbolHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(SchematicSymbolHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSymbolHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSymbolHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSymbolHeader) {
            listener.enterSchematicSymbolHeader(this);
        }
    };
    // @Override
    SchematicSymbolHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSymbolHeader) {
            listener.exitSchematicSymbolHeader(this);
        }
    };
    // @Override
    SchematicSymbolHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSymbolHeader) {
            return visitor.visitSchematicSymbolHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSymbolHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSymbolHeaderContext = SchematicSymbolHeaderContext;
var SchematicSymbolPortImplementationContext = /** @class */ (function (_super) {
    __extends(SchematicSymbolPortImplementationContext, _super);
    function SchematicSymbolPortImplementationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSymbolPortImplementationContext.prototype.symbolPortImplementationNameDef = function () {
        return this.getRuleContext(0, SymbolPortImplementationNameDefContext);
    };
    SchematicSymbolPortImplementationContext.prototype.portRef = function () {
        return this.getRuleContext(0, PortRefContext);
    };
    SchematicSymbolPortImplementationContext.prototype.schematicSymbolPortTemplateRef = function () {
        return this.getRuleContext(0, SchematicSymbolPortTemplateRefContext);
    };
    SchematicSymbolPortImplementationContext.prototype.transform = function () {
        return this.getRuleContext(0, TransformContext);
    };
    SchematicSymbolPortImplementationContext.prototype.portAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, PortAttributeDisplayContext);
        }
    };
    SchematicSymbolPortImplementationContext.prototype.propertyDisplayOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayOverrideContext);
        }
    };
    SchematicSymbolPortImplementationContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SchematicSymbolPortImplementationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSymbolPortImplementation; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSymbolPortImplementationContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSymbolPortImplementation) {
            listener.enterSchematicSymbolPortImplementation(this);
        }
    };
    // @Override
    SchematicSymbolPortImplementationContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSymbolPortImplementation) {
            listener.exitSchematicSymbolPortImplementation(this);
        }
    };
    // @Override
    SchematicSymbolPortImplementationContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSymbolPortImplementation) {
            return visitor.visitSchematicSymbolPortImplementation(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSymbolPortImplementationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSymbolPortImplementationContext = SchematicSymbolPortImplementationContext;
var SchematicSymbolPortImplementationRefContext = /** @class */ (function (_super) {
    __extends(SchematicSymbolPortImplementationRefContext, _super);
    function SchematicSymbolPortImplementationRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSymbolPortImplementationRefContext.prototype.symbolPortImplementationNameRef = function () {
        return this.getRuleContext(0, SymbolPortImplementationNameRefContext);
    };
    SchematicSymbolPortImplementationRefContext.prototype.schematicInstanceImplementationRef = function () {
        return this.getRuleContext(0, SchematicInstanceImplementationRefContext);
    };
    Object.defineProperty(SchematicSymbolPortImplementationRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSymbolPortImplementationRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSymbolPortImplementationRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSymbolPortImplementationRef) {
            listener.enterSchematicSymbolPortImplementationRef(this);
        }
    };
    // @Override
    SchematicSymbolPortImplementationRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSymbolPortImplementationRef) {
            listener.exitSchematicSymbolPortImplementationRef(this);
        }
    };
    // @Override
    SchematicSymbolPortImplementationRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSymbolPortImplementationRef) {
            return visitor.visitSchematicSymbolPortImplementationRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSymbolPortImplementationRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSymbolPortImplementationRefContext = SchematicSymbolPortImplementationRefContext;
var SchematicSymbolPortTemplateContext = /** @class */ (function (_super) {
    __extends(SchematicSymbolPortTemplateContext, _super);
    function SchematicSymbolPortTemplateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSymbolPortTemplateContext.prototype.libraryObjectNameDef = function () {
        return this.getRuleContext(0, LibraryObjectNameDefContext);
    };
    SchematicSymbolPortTemplateContext.prototype.schematicTemplateHeader = function () {
        return this.getRuleContext(0, SchematicTemplateHeaderContext);
    };
    SchematicSymbolPortTemplateContext.prototype.hotspot = function () {
        return this.getRuleContext(0, HotspotContext);
    };
    SchematicSymbolPortTemplateContext.prototype.portDirectionIndicator = function () {
        return this.getRuleContext(0, PortDirectionIndicatorContext);
    };
    SchematicSymbolPortTemplateContext.prototype.annotate = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AnnotateContext);
        }
        else {
            return this.getRuleContext(i, AnnotateContext);
        }
    };
    SchematicSymbolPortTemplateContext.prototype.commentGraphics = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentGraphicsContext);
        }
        else {
            return this.getRuleContext(i, CommentGraphicsContext);
        }
    };
    SchematicSymbolPortTemplateContext.prototype.figure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureContext);
        }
        else {
            return this.getRuleContext(i, FigureContext);
        }
    };
    SchematicSymbolPortTemplateContext.prototype.implementationNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ImplementationNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, ImplementationNameDisplayContext);
        }
    };
    SchematicSymbolPortTemplateContext.prototype.portAttributeDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortAttributeDisplayContext);
        }
        else {
            return this.getRuleContext(i, PortAttributeDisplayContext);
        }
    };
    SchematicSymbolPortTemplateContext.prototype.propertyDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyDisplayContext);
        }
    };
    SchematicSymbolPortTemplateContext.prototype.schematicComplexFigure = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicComplexFigureContext);
        }
        else {
            return this.getRuleContext(i, SchematicComplexFigureContext);
        }
    };
    SchematicSymbolPortTemplateContext.prototype.schematicPortAttributes = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortAttributesContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortAttributesContext);
        }
    };
    SchematicSymbolPortTemplateContext.prototype.schematicPortStyle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicPortStyleContext);
        }
        else {
            return this.getRuleContext(i, SchematicPortStyleContext);
        }
    };
    Object.defineProperty(SchematicSymbolPortTemplateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSymbolPortTemplate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSymbolPortTemplateContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSymbolPortTemplate) {
            listener.enterSchematicSymbolPortTemplate(this);
        }
    };
    // @Override
    SchematicSymbolPortTemplateContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSymbolPortTemplate) {
            listener.exitSchematicSymbolPortTemplate(this);
        }
    };
    // @Override
    SchematicSymbolPortTemplateContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSymbolPortTemplate) {
            return visitor.visitSchematicSymbolPortTemplate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSymbolPortTemplateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSymbolPortTemplateContext = SchematicSymbolPortTemplateContext;
var SchematicSymbolPortTemplateRefContext = /** @class */ (function (_super) {
    __extends(SchematicSymbolPortTemplateRefContext, _super);
    function SchematicSymbolPortTemplateRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSymbolPortTemplateRefContext.prototype.libraryObjectNameRef = function () {
        return this.getRuleContext(0, LibraryObjectNameRefContext);
    };
    SchematicSymbolPortTemplateRefContext.prototype.libraryRef = function () {
        return this.tryGetRuleContext(0, LibraryRefContext);
    };
    Object.defineProperty(SchematicSymbolPortTemplateRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSymbolPortTemplateRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSymbolPortTemplateRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSymbolPortTemplateRef) {
            listener.enterSchematicSymbolPortTemplateRef(this);
        }
    };
    // @Override
    SchematicSymbolPortTemplateRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSymbolPortTemplateRef) {
            listener.exitSchematicSymbolPortTemplateRef(this);
        }
    };
    // @Override
    SchematicSymbolPortTemplateRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSymbolPortTemplateRef) {
            return visitor.visitSchematicSymbolPortTemplateRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSymbolPortTemplateRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSymbolPortTemplateRefContext = SchematicSymbolPortTemplateRefContext;
var SchematicSymbolRefContext = /** @class */ (function (_super) {
    __extends(SchematicSymbolRefContext, _super);
    function SchematicSymbolRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicSymbolRefContext.prototype.viewNameRef = function () {
        return this.getRuleContext(0, ViewNameRefContext);
    };
    Object.defineProperty(SchematicSymbolRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicSymbolRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicSymbolRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicSymbolRef) {
            listener.enterSchematicSymbolRef(this);
        }
    };
    // @Override
    SchematicSymbolRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicSymbolRef) {
            listener.exitSchematicSymbolRef(this);
        }
    };
    // @Override
    SchematicSymbolRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicSymbolRef) {
            return visitor.visitSchematicSymbolRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicSymbolRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicSymbolRefContext = SchematicSymbolRefContext;
var SchematicTemplateHeaderContext = /** @class */ (function (_super) {
    __extends(SchematicTemplateHeaderContext, _super);
    function SchematicTemplateHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicTemplateHeaderContext.prototype.schematicUnits = function () {
        return this.getRuleContext(0, SchematicUnitsContext);
    };
    SchematicTemplateHeaderContext.prototype.backgroundColor = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BackgroundColorContext);
        }
        else {
            return this.getRuleContext(i, BackgroundColorContext);
        }
    };
    SchematicTemplateHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    SchematicTemplateHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicTemplateHeaderContext.prototype.originalBoundingBox = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OriginalBoundingBoxContext);
        }
        else {
            return this.getRuleContext(i, OriginalBoundingBoxContext);
        }
    };
    SchematicTemplateHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SchematicTemplateHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(SchematicTemplateHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicTemplateHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicTemplateHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicTemplateHeader) {
            listener.enterSchematicTemplateHeader(this);
        }
    };
    // @Override
    SchematicTemplateHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicTemplateHeader) {
            listener.exitSchematicTemplateHeader(this);
        }
    };
    // @Override
    SchematicTemplateHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicTemplateHeader) {
            return visitor.visitSchematicTemplateHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicTemplateHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicTemplateHeaderContext = SchematicTemplateHeaderContext;
var SchematicUnitsContext = /** @class */ (function (_super) {
    __extends(SchematicUnitsContext, _super);
    function SchematicUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicUnitsContext.prototype.schematicMetric = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SchematicMetricContext);
        }
        else {
            return this.getRuleContext(i, SchematicMetricContext);
        }
    };
    SchematicUnitsContext.prototype.setAngle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetAngleContext);
        }
        else {
            return this.getRuleContext(i, SetAngleContext);
        }
    };
    SchematicUnitsContext.prototype.setCapacitance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetCapacitanceContext);
        }
        else {
            return this.getRuleContext(i, SetCapacitanceContext);
        }
    };
    SchematicUnitsContext.prototype.setFrequency = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetFrequencyContext);
        }
        else {
            return this.getRuleContext(i, SetFrequencyContext);
        }
    };
    SchematicUnitsContext.prototype.setTime = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetTimeContext);
        }
        else {
            return this.getRuleContext(i, SetTimeContext);
        }
    };
    SchematicUnitsContext.prototype.setVoltage = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetVoltageContext);
        }
        else {
            return this.getRuleContext(i, SetVoltageContext);
        }
    };
    Object.defineProperty(SchematicUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicUnits) {
            listener.enterSchematicUnits(this);
        }
    };
    // @Override
    SchematicUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicUnits) {
            listener.exitSchematicUnits(this);
        }
    };
    // @Override
    SchematicUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicUnits) {
            return visitor.visitSchematicUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicUnitsContext = SchematicUnitsContext;
var SchematicViewContext = /** @class */ (function (_super) {
    __extends(SchematicViewContext, _super);
    function SchematicViewContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicViewContext.prototype.viewNameDef = function () {
        return this.getRuleContext(0, ViewNameDefContext);
    };
    SchematicViewContext.prototype.schematicViewHeader = function () {
        return this.getRuleContext(0, SchematicViewHeaderContext);
    };
    SchematicViewContext.prototype.logicalConnectivity = function () {
        return this.getRuleContext(0, LogicalConnectivityContext);
    };
    SchematicViewContext.prototype.schematicImplementation = function () {
        return this.getRuleContext(0, SchematicImplementationContext);
    };
    SchematicViewContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SchematicViewContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(SchematicViewContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicView; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicViewContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicView) {
            listener.enterSchematicView(this);
        }
    };
    // @Override
    SchematicViewContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicView) {
            listener.exitSchematicView(this);
        }
    };
    // @Override
    SchematicViewContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicView) {
            return visitor.visitSchematicView(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicViewContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicViewContext = SchematicViewContext;
var SchematicViewHeaderContext = /** @class */ (function (_super) {
    __extends(SchematicViewHeaderContext, _super);
    function SchematicViewHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicViewHeaderContext.prototype.schematicUnits = function () {
        return this.getRuleContext(0, SchematicUnitsContext);
    };
    SchematicViewHeaderContext.prototype.derivedFrom = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DerivedFromContext);
        }
        else {
            return this.getRuleContext(i, DerivedFromContext);
        }
    };
    SchematicViewHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    SchematicViewHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SchematicViewHeaderContext.prototype.previousVersion = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PreviousVersionContext);
        }
        else {
            return this.getRuleContext(i, PreviousVersionContext);
        }
    };
    SchematicViewHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SchematicViewHeaderContext.prototype.status = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StatusContext);
        }
        else {
            return this.getRuleContext(i, StatusContext);
        }
    };
    Object.defineProperty(SchematicViewHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicViewHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicViewHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicViewHeader) {
            listener.enterSchematicViewHeader(this);
        }
    };
    // @Override
    SchematicViewHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicViewHeader) {
            listener.exitSchematicViewHeader(this);
        }
    };
    // @Override
    SchematicViewHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicViewHeader) {
            return visitor.visitSchematicViewHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicViewHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicViewHeaderContext = SchematicViewHeaderContext;
var SchematicWireAffinityContext = /** @class */ (function (_super) {
    __extends(SchematicWireAffinityContext, _super);
    function SchematicWireAffinityContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicWireAffinityContext.prototype.narrowWire = function () {
        return this.tryGetRuleContext(0, NarrowWireContext);
    };
    SchematicWireAffinityContext.prototype.wideWire = function () {
        return this.tryGetRuleContext(0, WideWireContext);
    };
    SchematicWireAffinityContext.prototype.unrestricted = function () {
        return this.tryGetRuleContext(0, UnrestrictedContext);
    };
    Object.defineProperty(SchematicWireAffinityContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicWireAffinity; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicWireAffinityContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicWireAffinity) {
            listener.enterSchematicWireAffinity(this);
        }
    };
    // @Override
    SchematicWireAffinityContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicWireAffinity) {
            listener.exitSchematicWireAffinity(this);
        }
    };
    // @Override
    SchematicWireAffinityContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicWireAffinity) {
            return visitor.visitSchematicWireAffinity(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicWireAffinityContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicWireAffinityContext = SchematicWireAffinityContext;
var SchematicWireStyleContext = /** @class */ (function (_super) {
    __extends(SchematicWireStyleContext, _super);
    function SchematicWireStyleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SchematicWireStyleContext.prototype.narrowWire = function () {
        return this.tryGetRuleContext(0, NarrowWireContext);
    };
    SchematicWireStyleContext.prototype.wideWire = function () {
        return this.tryGetRuleContext(0, WideWireContext);
    };
    Object.defineProperty(SchematicWireStyleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_schematicWireStyle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SchematicWireStyleContext.prototype.enterRule = function (listener) {
        if (listener.enterSchematicWireStyle) {
            listener.enterSchematicWireStyle(this);
        }
    };
    // @Override
    SchematicWireStyleContext.prototype.exitRule = function (listener) {
        if (listener.exitSchematicWireStyle) {
            listener.exitSchematicWireStyle(this);
        }
    };
    // @Override
    SchematicWireStyleContext.prototype.accept = function (visitor) {
        if (visitor.visitSchematicWireStyle) {
            return visitor.visitSchematicWireStyle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SchematicWireStyleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SchematicWireStyleContext = SchematicWireStyleContext;
var SecondContext = /** @class */ (function (_super) {
    __extends(SecondContext, _super);
    function SecondContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SecondContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(SecondContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_second; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SecondContext.prototype.enterRule = function (listener) {
        if (listener.enterSecond) {
            listener.enterSecond(this);
        }
    };
    // @Override
    SecondContext.prototype.exitRule = function (listener) {
        if (listener.exitSecond) {
            listener.exitSecond(this);
        }
    };
    // @Override
    SecondContext.prototype.accept = function (visitor) {
        if (visitor.visitSecond) {
            return visitor.visitSecond(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SecondContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SecondContext = SecondContext;
var SecondIntegerExpressionContext = /** @class */ (function (_super) {
    __extends(SecondIntegerExpressionContext, _super);
    function SecondIntegerExpressionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SecondIntegerExpressionContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(SecondIntegerExpressionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_secondIntegerExpression; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SecondIntegerExpressionContext.prototype.enterRule = function (listener) {
        if (listener.enterSecondIntegerExpression) {
            listener.enterSecondIntegerExpression(this);
        }
    };
    // @Override
    SecondIntegerExpressionContext.prototype.exitRule = function (listener) {
        if (listener.exitSecondIntegerExpression) {
            listener.exitSecondIntegerExpression(this);
        }
    };
    // @Override
    SecondIntegerExpressionContext.prototype.accept = function (visitor) {
        if (visitor.visitSecondIntegerExpression) {
            return visitor.visitSecondIntegerExpression(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SecondIntegerExpressionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SecondIntegerExpressionContext = SecondIntegerExpressionContext;
var SecondNumberContext = /** @class */ (function (_super) {
    __extends(SecondNumberContext, _super);
    function SecondNumberContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SecondNumberContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(SecondNumberContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_secondNumber; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SecondNumberContext.prototype.enterRule = function (listener) {
        if (listener.enterSecondNumber) {
            listener.enterSecondNumber(this);
        }
    };
    // @Override
    SecondNumberContext.prototype.exitRule = function (listener) {
        if (listener.exitSecondNumber) {
            listener.exitSecondNumber(this);
        }
    };
    // @Override
    SecondNumberContext.prototype.accept = function (visitor) {
        if (visitor.visitSecondNumber) {
            return visitor.visitSecondNumber(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SecondNumberContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SecondNumberContext = SecondNumberContext;
var SecondStringExpressionContext = /** @class */ (function (_super) {
    __extends(SecondStringExpressionContext, _super);
    function SecondStringExpressionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SecondStringExpressionContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    Object.defineProperty(SecondStringExpressionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_secondStringExpression; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SecondStringExpressionContext.prototype.enterRule = function (listener) {
        if (listener.enterSecondStringExpression) {
            listener.enterSecondStringExpression(this);
        }
    };
    // @Override
    SecondStringExpressionContext.prototype.exitRule = function (listener) {
        if (listener.exitSecondStringExpression) {
            listener.exitSecondStringExpression(this);
        }
    };
    // @Override
    SecondStringExpressionContext.prototype.accept = function (visitor) {
        if (visitor.visitSecondStringExpression) {
            return visitor.visitSecondStringExpression(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SecondStringExpressionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SecondStringExpressionContext = SecondStringExpressionContext;
var SectionContext = /** @class */ (function (_super) {
    __extends(SectionContext, _super);
    function SectionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SectionContext.prototype.sectionNameDef = function () {
        return this.getRuleContext(0, SectionNameDefContext);
    };
    SectionContext.prototype.sectionTitle = function () {
        return this.getRuleContext(0, SectionTitleContext);
    };
    SectionContext.prototype.diagram = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DiagramContext);
        }
        else {
            return this.getRuleContext(i, DiagramContext);
        }
    };
    SectionContext.prototype.section = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SectionContext);
        }
        else {
            return this.getRuleContext(i, SectionContext);
        }
    };
    SectionContext.prototype.stringValue = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringValueContext);
        }
        else {
            return this.getRuleContext(i, StringValueContext);
        }
    };
    Object.defineProperty(SectionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_section; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SectionContext.prototype.enterRule = function (listener) {
        if (listener.enterSection) {
            listener.enterSection(this);
        }
    };
    // @Override
    SectionContext.prototype.exitRule = function (listener) {
        if (listener.exitSection) {
            listener.exitSection(this);
        }
    };
    // @Override
    SectionContext.prototype.accept = function (visitor) {
        if (visitor.visitSection) {
            return visitor.visitSection(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SectionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SectionContext = SectionContext;
var SectionNameDefContext = /** @class */ (function (_super) {
    __extends(SectionNameDefContext, _super);
    function SectionNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SectionNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(SectionNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_sectionNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SectionNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterSectionNameDef) {
            listener.enterSectionNameDef(this);
        }
    };
    // @Override
    SectionNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitSectionNameDef) {
            listener.exitSectionNameDef(this);
        }
    };
    // @Override
    SectionNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitSectionNameDef) {
            return visitor.visitSectionNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SectionNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SectionNameDefContext = SectionNameDefContext;
var SectionTitleContext = /** @class */ (function (_super) {
    __extends(SectionTitleContext, _super);
    function SectionTitleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SectionTitleContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(SectionTitleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_sectionTitle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SectionTitleContext.prototype.enterRule = function (listener) {
        if (listener.enterSectionTitle) {
            listener.enterSectionTitle(this);
        }
    };
    // @Override
    SectionTitleContext.prototype.exitRule = function (listener) {
        if (listener.exitSectionTitle) {
            listener.exitSectionTitle(this);
        }
    };
    // @Override
    SectionTitleContext.prototype.accept = function (visitor) {
        if (visitor.visitSectionTitle) {
            return visitor.visitSectionTitle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SectionTitleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SectionTitleContext = SectionTitleContext;
var SequenceContext = /** @class */ (function (_super) {
    __extends(SequenceContext, _super);
    function SequenceContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SequenceContext.prototype.fromInteger = function () {
        return this.getRuleContext(0, FromIntegerContext);
    };
    SequenceContext.prototype.toInteger = function () {
        return this.getRuleContext(0, ToIntegerContext);
    };
    SequenceContext.prototype.step = function () {
        return this.tryGetRuleContext(0, StepContext);
    };
    Object.defineProperty(SequenceContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_sequence; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SequenceContext.prototype.enterRule = function (listener) {
        if (listener.enterSequence) {
            listener.enterSequence(this);
        }
    };
    // @Override
    SequenceContext.prototype.exitRule = function (listener) {
        if (listener.exitSequence) {
            listener.exitSequence(this);
        }
    };
    // @Override
    SequenceContext.prototype.accept = function (visitor) {
        if (visitor.visitSequence) {
            return visitor.visitSequence(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SequenceContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SequenceContext = SequenceContext;
var SetAngleContext = /** @class */ (function (_super) {
    __extends(SetAngleContext, _super);
    function SetAngleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SetAngleContext.prototype.unitRef = function () {
        return this.getRuleContext(0, UnitRefContext);
    };
    Object.defineProperty(SetAngleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_setAngle; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SetAngleContext.prototype.enterRule = function (listener) {
        if (listener.enterSetAngle) {
            listener.enterSetAngle(this);
        }
    };
    // @Override
    SetAngleContext.prototype.exitRule = function (listener) {
        if (listener.exitSetAngle) {
            listener.exitSetAngle(this);
        }
    };
    // @Override
    SetAngleContext.prototype.accept = function (visitor) {
        if (visitor.visitSetAngle) {
            return visitor.visitSetAngle(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SetAngleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SetAngleContext = SetAngleContext;
var SetCapacitanceContext = /** @class */ (function (_super) {
    __extends(SetCapacitanceContext, _super);
    function SetCapacitanceContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SetCapacitanceContext.prototype.unitRef = function () {
        return this.getRuleContext(0, UnitRefContext);
    };
    Object.defineProperty(SetCapacitanceContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_setCapacitance; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SetCapacitanceContext.prototype.enterRule = function (listener) {
        if (listener.enterSetCapacitance) {
            listener.enterSetCapacitance(this);
        }
    };
    // @Override
    SetCapacitanceContext.prototype.exitRule = function (listener) {
        if (listener.exitSetCapacitance) {
            listener.exitSetCapacitance(this);
        }
    };
    // @Override
    SetCapacitanceContext.prototype.accept = function (visitor) {
        if (visitor.visitSetCapacitance) {
            return visitor.visitSetCapacitance(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SetCapacitanceContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SetCapacitanceContext = SetCapacitanceContext;
var SetCurrentContext = /** @class */ (function (_super) {
    __extends(SetCurrentContext, _super);
    function SetCurrentContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SetCurrentContext.prototype.unitRef = function () {
        return this.getRuleContext(0, UnitRefContext);
    };
    Object.defineProperty(SetCurrentContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_setCurrent; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SetCurrentContext.prototype.enterRule = function (listener) {
        if (listener.enterSetCurrent) {
            listener.enterSetCurrent(this);
        }
    };
    // @Override
    SetCurrentContext.prototype.exitRule = function (listener) {
        if (listener.exitSetCurrent) {
            listener.exitSetCurrent(this);
        }
    };
    // @Override
    SetCurrentContext.prototype.accept = function (visitor) {
        if (visitor.visitSetCurrent) {
            return visitor.visitSetCurrent(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SetCurrentContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SetCurrentContext = SetCurrentContext;
var SetDistanceContext = /** @class */ (function (_super) {
    __extends(SetDistanceContext, _super);
    function SetDistanceContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SetDistanceContext.prototype.unitRef = function () {
        return this.getRuleContext(0, UnitRefContext);
    };
    Object.defineProperty(SetDistanceContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_setDistance; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SetDistanceContext.prototype.enterRule = function (listener) {
        if (listener.enterSetDistance) {
            listener.enterSetDistance(this);
        }
    };
    // @Override
    SetDistanceContext.prototype.exitRule = function (listener) {
        if (listener.exitSetDistance) {
            listener.exitSetDistance(this);
        }
    };
    // @Override
    SetDistanceContext.prototype.accept = function (visitor) {
        if (visitor.visitSetDistance) {
            return visitor.visitSetDistance(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SetDistanceContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SetDistanceContext = SetDistanceContext;
var SetFrequencyContext = /** @class */ (function (_super) {
    __extends(SetFrequencyContext, _super);
    function SetFrequencyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SetFrequencyContext.prototype.unitRef = function () {
        return this.getRuleContext(0, UnitRefContext);
    };
    Object.defineProperty(SetFrequencyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_setFrequency; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SetFrequencyContext.prototype.enterRule = function (listener) {
        if (listener.enterSetFrequency) {
            listener.enterSetFrequency(this);
        }
    };
    // @Override
    SetFrequencyContext.prototype.exitRule = function (listener) {
        if (listener.exitSetFrequency) {
            listener.exitSetFrequency(this);
        }
    };
    // @Override
    SetFrequencyContext.prototype.accept = function (visitor) {
        if (visitor.visitSetFrequency) {
            return visitor.visitSetFrequency(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SetFrequencyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SetFrequencyContext = SetFrequencyContext;
var SetTimeContext = /** @class */ (function (_super) {
    __extends(SetTimeContext, _super);
    function SetTimeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SetTimeContext.prototype.unitRef = function () {
        return this.getRuleContext(0, UnitRefContext);
    };
    Object.defineProperty(SetTimeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_setTime; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SetTimeContext.prototype.enterRule = function (listener) {
        if (listener.enterSetTime) {
            listener.enterSetTime(this);
        }
    };
    // @Override
    SetTimeContext.prototype.exitRule = function (listener) {
        if (listener.exitSetTime) {
            listener.exitSetTime(this);
        }
    };
    // @Override
    SetTimeContext.prototype.accept = function (visitor) {
        if (visitor.visitSetTime) {
            return visitor.visitSetTime(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SetTimeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SetTimeContext = SetTimeContext;
var SetVoltageContext = /** @class */ (function (_super) {
    __extends(SetVoltageContext, _super);
    function SetVoltageContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SetVoltageContext.prototype.unitRef = function () {
        return this.getRuleContext(0, UnitRefContext);
    };
    Object.defineProperty(SetVoltageContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_setVoltage; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SetVoltageContext.prototype.enterRule = function (listener) {
        if (listener.enterSetVoltage) {
            listener.enterSetVoltage(this);
        }
    };
    // @Override
    SetVoltageContext.prototype.exitRule = function (listener) {
        if (listener.exitSetVoltage) {
            listener.exitSetVoltage(this);
        }
    };
    // @Override
    SetVoltageContext.prototype.accept = function (visitor) {
        if (visitor.visitSetVoltage) {
            return visitor.visitSetVoltage(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SetVoltageContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SetVoltageContext = SetVoltageContext;
var ShapeContext = /** @class */ (function (_super) {
    __extends(ShapeContext, _super);
    function ShapeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ShapeContext.prototype.curve = function () {
        return this.getRuleContext(0, CurveContext);
    };
    Object.defineProperty(ShapeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_shape; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ShapeContext.prototype.enterRule = function (listener) {
        if (listener.enterShape) {
            listener.enterShape(this);
        }
    };
    // @Override
    ShapeContext.prototype.exitRule = function (listener) {
        if (listener.exitShape) {
            listener.exitShape(this);
        }
    };
    // @Override
    ShapeContext.prototype.accept = function (visitor) {
        if (visitor.visitShape) {
            return visitor.visitShape(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ShapeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ShapeContext = ShapeContext;
var SiemensContext = /** @class */ (function (_super) {
    __extends(SiemensContext, _super);
    function SiemensContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SiemensContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(SiemensContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_siemens; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SiemensContext.prototype.enterRule = function (listener) {
        if (listener.enterSiemens) {
            listener.enterSiemens(this);
        }
    };
    // @Override
    SiemensContext.prototype.exitRule = function (listener) {
        if (listener.exitSiemens) {
            listener.exitSiemens(this);
        }
    };
    // @Override
    SiemensContext.prototype.accept = function (visitor) {
        if (visitor.visitSiemens) {
            return visitor.visitSiemens(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SiemensContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SiemensContext = SiemensContext;
var SignalContext = /** @class */ (function (_super) {
    __extends(SignalContext, _super);
    function SignalContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalContext.prototype.signalNameDef = function () {
        return this.getRuleContext(0, SignalNameDefContext);
    };
    SignalContext.prototype.signalJoined = function () {
        return this.getRuleContext(0, SignalJoinedContext);
    };
    SignalContext.prototype.connectivityTagGenerator = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ConnectivityTagGeneratorContext);
        }
        else {
            return this.getRuleContext(i, ConnectivityTagGeneratorContext);
        }
    };
    SignalContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    SignalContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SignalContext.prototype.signalWidth = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalWidthContext);
        }
        else {
            return this.getRuleContext(i, SignalWidthContext);
        }
    };
    Object.defineProperty(SignalContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signal; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalContext.prototype.enterRule = function (listener) {
        if (listener.enterSignal) {
            listener.enterSignal(this);
        }
    };
    // @Override
    SignalContext.prototype.exitRule = function (listener) {
        if (listener.exitSignal) {
            listener.exitSignal(this);
        }
    };
    // @Override
    SignalContext.prototype.accept = function (visitor) {
        if (visitor.visitSignal) {
            return visitor.visitSignal(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalContext = SignalContext;
var SignalAnnotateContext = /** @class */ (function (_super) {
    __extends(SignalAnnotateContext, _super);
    function SignalAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalAnnotateContext.prototype.extendSignalDef = function () {
        return this.tryGetRuleContext(0, ExtendSignalDefContext);
    };
    SignalAnnotateContext.prototype.extendSignalMemberDef = function () {
        return this.tryGetRuleContext(0, ExtendSignalMemberDefContext);
    };
    SignalAnnotateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SignalAnnotateContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SignalAnnotateContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SignalAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalAnnotate) {
            listener.enterSignalAnnotate(this);
        }
    };
    // @Override
    SignalAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalAnnotate) {
            listener.exitSignalAnnotate(this);
        }
    };
    // @Override
    SignalAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalAnnotate) {
            return visitor.visitSignalAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalAnnotateContext = SignalAnnotateContext;
var SignalGroupContext = /** @class */ (function (_super) {
    __extends(SignalGroupContext, _super);
    function SignalGroupContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalGroupContext.prototype.signalGroupNameDef = function () {
        return this.getRuleContext(0, SignalGroupNameDefContext);
    };
    SignalGroupContext.prototype.signalList = function () {
        return this.getRuleContext(0, SignalListContext);
    };
    SignalGroupContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SignalGroupContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    Object.defineProperty(SignalGroupContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalGroup; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalGroupContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalGroup) {
            listener.enterSignalGroup(this);
        }
    };
    // @Override
    SignalGroupContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalGroup) {
            listener.exitSignalGroup(this);
        }
    };
    // @Override
    SignalGroupContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalGroup) {
            return visitor.visitSignalGroup(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalGroupContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalGroupContext = SignalGroupContext;
var SignalGroupAnnotateContext = /** @class */ (function (_super) {
    __extends(SignalGroupAnnotateContext, _super);
    function SignalGroupAnnotateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalGroupAnnotateContext.prototype.extendSignalGroupDef = function () {
        return this.getRuleContext(0, ExtendSignalGroupDefContext);
    };
    SignalGroupAnnotateContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SignalGroupAnnotateContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    SignalGroupAnnotateContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(SignalGroupAnnotateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalGroupAnnotate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalGroupAnnotateContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalGroupAnnotate) {
            listener.enterSignalGroupAnnotate(this);
        }
    };
    // @Override
    SignalGroupAnnotateContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalGroupAnnotate) {
            listener.exitSignalGroupAnnotate(this);
        }
    };
    // @Override
    SignalGroupAnnotateContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalGroupAnnotate) {
            return visitor.visitSignalGroupAnnotate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalGroupAnnotateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalGroupAnnotateContext = SignalGroupAnnotateContext;
var SignalGroupNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(SignalGroupNameCaseSensitiveContext, _super);
    function SignalGroupNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalGroupNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(SignalGroupNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalGroupNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalGroupNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalGroupNameCaseSensitive) {
            listener.enterSignalGroupNameCaseSensitive(this);
        }
    };
    // @Override
    SignalGroupNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalGroupNameCaseSensitive) {
            listener.exitSignalGroupNameCaseSensitive(this);
        }
    };
    // @Override
    SignalGroupNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalGroupNameCaseSensitive) {
            return visitor.visitSignalGroupNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalGroupNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalGroupNameCaseSensitiveContext = SignalGroupNameCaseSensitiveContext;
var SignalGroupNameDefContext = /** @class */ (function (_super) {
    __extends(SignalGroupNameDefContext, _super);
    function SignalGroupNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalGroupNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(SignalGroupNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalGroupNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalGroupNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalGroupNameDef) {
            listener.enterSignalGroupNameDef(this);
        }
    };
    // @Override
    SignalGroupNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalGroupNameDef) {
            listener.exitSignalGroupNameDef(this);
        }
    };
    // @Override
    SignalGroupNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalGroupNameDef) {
            return visitor.visitSignalGroupNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalGroupNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalGroupNameDefContext = SignalGroupNameDefContext;
var SignalGroupNameRefContext = /** @class */ (function (_super) {
    __extends(SignalGroupNameRefContext, _super);
    function SignalGroupNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalGroupNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(SignalGroupNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalGroupNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalGroupNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalGroupNameRef) {
            listener.enterSignalGroupNameRef(this);
        }
    };
    // @Override
    SignalGroupNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalGroupNameRef) {
            listener.exitSignalGroupNameRef(this);
        }
    };
    // @Override
    SignalGroupNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalGroupNameRef) {
            return visitor.visitSignalGroupNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalGroupNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalGroupNameRefContext = SignalGroupNameRefContext;
var SignalGroupRefContext = /** @class */ (function (_super) {
    __extends(SignalGroupRefContext, _super);
    function SignalGroupRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalGroupRefContext.prototype.signalGroupNameRef = function () {
        return this.getRuleContext(0, SignalGroupNameRefContext);
    };
    Object.defineProperty(SignalGroupRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalGroupRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalGroupRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalGroupRef) {
            listener.enterSignalGroupRef(this);
        }
    };
    // @Override
    SignalGroupRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalGroupRef) {
            listener.exitSignalGroupRef(this);
        }
    };
    // @Override
    SignalGroupRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalGroupRef) {
            return visitor.visitSignalGroupRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalGroupRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalGroupRefContext = SignalGroupRefContext;
var SignalIndexValueContext = /** @class */ (function (_super) {
    __extends(SignalIndexValueContext, _super);
    function SignalIndexValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(SignalIndexValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalIndexValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalIndexValueContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalIndexValue) {
            listener.enterSignalIndexValue(this);
        }
    };
    // @Override
    SignalIndexValueContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalIndexValue) {
            listener.exitSignalIndexValue(this);
        }
    };
    // @Override
    SignalIndexValueContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalIndexValue) {
            return visitor.visitSignalIndexValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalIndexValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalIndexValueContext = SignalIndexValueContext;
var SignalJoinedContext = /** @class */ (function (_super) {
    __extends(SignalJoinedContext, _super);
    function SignalJoinedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalJoinedContext.prototype.globalPortRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(GlobalPortRefContext);
        }
        else {
            return this.getRuleContext(i, GlobalPortRefContext);
        }
    };
    SignalJoinedContext.prototype.portInstanceRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortInstanceRefContext);
        }
        else {
            return this.getRuleContext(i, PortInstanceRefContext);
        }
    };
    SignalJoinedContext.prototype.portMemberRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortMemberRefContext);
        }
        else {
            return this.getRuleContext(i, PortMemberRefContext);
        }
    };
    SignalJoinedContext.prototype.portRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortRefContext);
        }
        else {
            return this.getRuleContext(i, PortRefContext);
        }
    };
    Object.defineProperty(SignalJoinedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalJoined; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalJoinedContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalJoined) {
            listener.enterSignalJoined(this);
        }
    };
    // @Override
    SignalJoinedContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalJoined) {
            listener.exitSignalJoined(this);
        }
    };
    // @Override
    SignalJoinedContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalJoined) {
            return visitor.visitSignalJoined(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalJoinedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalJoinedContext = SignalJoinedContext;
var SignalListContext = /** @class */ (function (_super) {
    __extends(SignalListContext, _super);
    function SignalListContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalListContext.prototype.signalGroupRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalGroupRefContext);
        }
        else {
            return this.getRuleContext(i, SignalGroupRefContext);
        }
    };
    SignalListContext.prototype.signalRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SignalRefContext);
        }
        else {
            return this.getRuleContext(i, SignalRefContext);
        }
    };
    Object.defineProperty(SignalListContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalList; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalListContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalList) {
            listener.enterSignalList(this);
        }
    };
    // @Override
    SignalListContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalList) {
            listener.exitSignalList(this);
        }
    };
    // @Override
    SignalListContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalList) {
            return visitor.visitSignalList(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalListContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalListContext = SignalListContext;
var SignalMemberRefContext = /** @class */ (function (_super) {
    __extends(SignalMemberRefContext, _super);
    function SignalMemberRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalMemberRefContext.prototype.signalNameRef = function () {
        return this.getRuleContext(0, SignalNameRefContext);
    };
    SignalMemberRefContext.prototype.indexValue = function () {
        return this.getRuleContext(0, IndexValueContext);
    };
    Object.defineProperty(SignalMemberRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalMemberRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalMemberRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalMemberRef) {
            listener.enterSignalMemberRef(this);
        }
    };
    // @Override
    SignalMemberRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalMemberRef) {
            listener.exitSignalMemberRef(this);
        }
    };
    // @Override
    SignalMemberRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalMemberRef) {
            return visitor.visitSignalMemberRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalMemberRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalMemberRefContext = SignalMemberRefContext;
var SignalNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(SignalNameCaseSensitiveContext, _super);
    function SignalNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(SignalNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalNameCaseSensitive) {
            listener.enterSignalNameCaseSensitive(this);
        }
    };
    // @Override
    SignalNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalNameCaseSensitive) {
            listener.exitSignalNameCaseSensitive(this);
        }
    };
    // @Override
    SignalNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalNameCaseSensitive) {
            return visitor.visitSignalNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalNameCaseSensitiveContext = SignalNameCaseSensitiveContext;
var SignalNameDefContext = /** @class */ (function (_super) {
    __extends(SignalNameDefContext, _super);
    function SignalNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(SignalNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalNameDef) {
            listener.enterSignalNameDef(this);
        }
    };
    // @Override
    SignalNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalNameDef) {
            listener.exitSignalNameDef(this);
        }
    };
    // @Override
    SignalNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalNameDef) {
            return visitor.visitSignalNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalNameDefContext = SignalNameDefContext;
var SignalNameRefContext = /** @class */ (function (_super) {
    __extends(SignalNameRefContext, _super);
    function SignalNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(SignalNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalNameRef) {
            listener.enterSignalNameRef(this);
        }
    };
    // @Override
    SignalNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalNameRef) {
            listener.exitSignalNameRef(this);
        }
    };
    // @Override
    SignalNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalNameRef) {
            return visitor.visitSignalNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalNameRefContext = SignalNameRefContext;
var SignalRefContext = /** @class */ (function (_super) {
    __extends(SignalRefContext, _super);
    function SignalRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalRefContext.prototype.signalNameRef = function () {
        return this.getRuleContext(0, SignalNameRefContext);
    };
    Object.defineProperty(SignalRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalRef) {
            listener.enterSignalRef(this);
        }
    };
    // @Override
    SignalRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalRef) {
            listener.exitSignalRef(this);
        }
    };
    // @Override
    SignalRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalRef) {
            return visitor.visitSignalRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalRefContext = SignalRefContext;
var SignalWidthContext = /** @class */ (function (_super) {
    __extends(SignalWidthContext, _super);
    function SignalWidthContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SignalWidthContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(SignalWidthContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_signalWidth; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SignalWidthContext.prototype.enterRule = function (listener) {
        if (listener.enterSignalWidth) {
            listener.enterSignalWidth(this);
        }
    };
    // @Override
    SignalWidthContext.prototype.exitRule = function (listener) {
        if (listener.exitSignalWidth) {
            listener.exitSignalWidth(this);
        }
    };
    // @Override
    SignalWidthContext.prototype.accept = function (visitor) {
        if (visitor.visitSignalWidth) {
            return visitor.visitSignalWidth(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SignalWidthContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SignalWidthContext = SignalWidthContext;
var SimpleNameContext = /** @class */ (function (_super) {
    __extends(SimpleNameContext, _super);
    function SimpleNameContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SimpleNameContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(SimpleNameContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_simpleName; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SimpleNameContext.prototype.enterRule = function (listener) {
        if (listener.enterSimpleName) {
            listener.enterSimpleName(this);
        }
    };
    // @Override
    SimpleNameContext.prototype.exitRule = function (listener) {
        if (listener.exitSimpleName) {
            listener.exitSimpleName(this);
        }
    };
    // @Override
    SimpleNameContext.prototype.accept = function (visitor) {
        if (visitor.visitSimpleName) {
            return visitor.visitSimpleName(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SimpleNameContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SimpleNameContext = SimpleNameContext;
var StartPointContext = /** @class */ (function (_super) {
    __extends(StartPointContext, _super);
    function StartPointContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StartPointContext.prototype.pointValue = function () {
        return this.getRuleContext(0, PointValueContext);
    };
    Object.defineProperty(StartPointContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_startPoint; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StartPointContext.prototype.enterRule = function (listener) {
        if (listener.enterStartPoint) {
            listener.enterStartPoint(this);
        }
    };
    // @Override
    StartPointContext.prototype.exitRule = function (listener) {
        if (listener.exitStartPoint) {
            listener.exitStartPoint(this);
        }
    };
    // @Override
    StartPointContext.prototype.accept = function (visitor) {
        if (visitor.visitStartPoint) {
            return visitor.visitStartPoint(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StartPointContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StartPointContext = StartPointContext;
var StatusContext = /** @class */ (function (_super) {
    __extends(StatusContext, _super);
    function StatusContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StatusContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    StatusContext.prototype.copyright = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CopyrightContext);
        }
        else {
            return this.getRuleContext(i, CopyrightContext);
        }
    };
    StatusContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    StatusContext.prototype.written = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(WrittenContext);
        }
        else {
            return this.getRuleContext(i, WrittenContext);
        }
    };
    Object.defineProperty(StatusContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_status; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StatusContext.prototype.enterRule = function (listener) {
        if (listener.enterStatus) {
            listener.enterStatus(this);
        }
    };
    // @Override
    StatusContext.prototype.exitRule = function (listener) {
        if (listener.exitStatus) {
            listener.exitStatus(this);
        }
    };
    // @Override
    StatusContext.prototype.accept = function (visitor) {
        if (visitor.visitStatus) {
            return visitor.visitStatus(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StatusContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StatusContext = StatusContext;
var StepContext = /** @class */ (function (_super) {
    __extends(StepContext, _super);
    function StepContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StepContext.prototype.integerValue = function () {
        return this.getRuleContext(0, IntegerValueContext);
    };
    Object.defineProperty(StepContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_step; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StepContext.prototype.enterRule = function (listener) {
        if (listener.enterStep) {
            listener.enterStep(this);
        }
    };
    // @Override
    StepContext.prototype.exitRule = function (listener) {
        if (listener.exitStep) {
            listener.exitStep(this);
        }
    };
    // @Override
    StepContext.prototype.accept = function (visitor) {
        if (visitor.visitStep) {
            return visitor.visitStep(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StepContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StepContext = StepContext;
var StringContext = /** @class */ (function (_super) {
    __extends(StringContext, _super);
    function StringContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    Object.defineProperty(StringContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_string; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringContext.prototype.enterRule = function (listener) {
        if (listener.enterString) {
            listener.enterString(this);
        }
    };
    // @Override
    StringContext.prototype.exitRule = function (listener) {
        if (listener.exitString) {
            listener.exitString(this);
        }
    };
    // @Override
    StringContext.prototype.accept = function (visitor) {
        if (visitor.visitString) {
            return visitor.visitString(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringContext = StringContext;
var StringConcatenateContext = /** @class */ (function (_super) {
    __extends(StringConcatenateContext, _super);
    function StringConcatenateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringConcatenateContext.prototype.stringExpression = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringExpressionContext);
        }
        else {
            return this.getRuleContext(i, StringExpressionContext);
        }
    };
    Object.defineProperty(StringConcatenateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringConcatenate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringConcatenateContext.prototype.enterRule = function (listener) {
        if (listener.enterStringConcatenate) {
            listener.enterStringConcatenate(this);
        }
    };
    // @Override
    StringConcatenateContext.prototype.exitRule = function (listener) {
        if (listener.exitStringConcatenate) {
            listener.exitStringConcatenate(this);
        }
    };
    // @Override
    StringConcatenateContext.prototype.accept = function (visitor) {
        if (visitor.visitStringConcatenate) {
            return visitor.visitStringConcatenate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringConcatenateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringConcatenateContext = StringConcatenateContext;
var StringConstantContext = /** @class */ (function (_super) {
    __extends(StringConstantContext, _super);
    function StringConstantContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringConstantContext.prototype.constantNameDef = function () {
        return this.getRuleContext(0, ConstantNameDefContext);
    };
    StringConstantContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(StringConstantContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringConstant; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringConstantContext.prototype.enterRule = function (listener) {
        if (listener.enterStringConstant) {
            listener.enterStringConstant(this);
        }
    };
    // @Override
    StringConstantContext.prototype.exitRule = function (listener) {
        if (listener.exitStringConstant) {
            listener.exitStringConstant(this);
        }
    };
    // @Override
    StringConstantContext.prototype.accept = function (visitor) {
        if (visitor.visitStringConstant) {
            return visitor.visitStringConstant(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringConstantContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringConstantContext = StringConstantContext;
var StringConstantRefContext = /** @class */ (function (_super) {
    __extends(StringConstantRefContext, _super);
    function StringConstantRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringConstantRefContext.prototype.constantNameRef = function () {
        return this.getRuleContext(0, ConstantNameRefContext);
    };
    Object.defineProperty(StringConstantRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringConstantRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringConstantRefContext.prototype.enterRule = function (listener) {
        if (listener.enterStringConstantRef) {
            listener.enterStringConstantRef(this);
        }
    };
    // @Override
    StringConstantRefContext.prototype.exitRule = function (listener) {
        if (listener.exitStringConstantRef) {
            listener.exitStringConstantRef(this);
        }
    };
    // @Override
    StringConstantRefContext.prototype.accept = function (visitor) {
        if (visitor.visitStringConstantRef) {
            return visitor.visitStringConstantRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringConstantRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringConstantRefContext = StringConstantRefContext;
var StringEqualContext = /** @class */ (function (_super) {
    __extends(StringEqualContext, _super);
    function StringEqualContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringEqualContext.prototype.firstStringExpression = function () {
        return this.getRuleContext(0, FirstStringExpressionContext);
    };
    StringEqualContext.prototype.secondStringExpression = function () {
        return this.getRuleContext(0, SecondStringExpressionContext);
    };
    Object.defineProperty(StringEqualContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringEqual; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringEqualContext.prototype.enterRule = function (listener) {
        if (listener.enterStringEqual) {
            listener.enterStringEqual(this);
        }
    };
    // @Override
    StringEqualContext.prototype.exitRule = function (listener) {
        if (listener.exitStringEqual) {
            listener.exitStringEqual(this);
        }
    };
    // @Override
    StringEqualContext.prototype.accept = function (visitor) {
        if (visitor.visitStringEqual) {
            return visitor.visitStringEqual(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringEqualContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringEqualContext = StringEqualContext;
var StringExpressionContext = /** @class */ (function (_super) {
    __extends(StringExpressionContext, _super);
    function StringExpressionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringExpressionContext.prototype.stringParameterRef = function () {
        return this.tryGetRuleContext(0, StringParameterRefContext);
    };
    StringExpressionContext.prototype.stringToken = function () {
        return this.tryGetRuleContext(0, StringTokenContext);
    };
    StringExpressionContext.prototype.stringConstantRef = function () {
        return this.tryGetRuleContext(0, StringConstantRefContext);
    };
    StringExpressionContext.prototype.stringConcatenate = function () {
        return this.tryGetRuleContext(0, StringConcatenateContext);
    };
    StringExpressionContext.prototype.substring = function () {
        return this.tryGetRuleContext(0, SubstringContext);
    };
    StringExpressionContext.prototype.decimalToString = function () {
        return this.tryGetRuleContext(0, DecimalToStringContext);
    };
    StringExpressionContext.prototype.stringPrefix = function () {
        return this.tryGetRuleContext(0, StringPrefixContext);
    };
    StringExpressionContext.prototype.stringSuffix = function () {
        return this.tryGetRuleContext(0, StringSuffixContext);
    };
    Object.defineProperty(StringExpressionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringExpression; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringExpressionContext.prototype.enterRule = function (listener) {
        if (listener.enterStringExpression) {
            listener.enterStringExpression(this);
        }
    };
    // @Override
    StringExpressionContext.prototype.exitRule = function (listener) {
        if (listener.exitStringExpression) {
            listener.exitStringExpression(this);
        }
    };
    // @Override
    StringExpressionContext.prototype.accept = function (visitor) {
        if (visitor.visitStringExpression) {
            return visitor.visitStringExpression(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringExpressionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringExpressionContext = StringExpressionContext;
var StringLengthContext = /** @class */ (function (_super) {
    __extends(StringLengthContext, _super);
    function StringLengthContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringLengthContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    Object.defineProperty(StringLengthContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringLength; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringLengthContext.prototype.enterRule = function (listener) {
        if (listener.enterStringLength) {
            listener.enterStringLength(this);
        }
    };
    // @Override
    StringLengthContext.prototype.exitRule = function (listener) {
        if (listener.exitStringLength) {
            listener.exitStringLength(this);
        }
    };
    // @Override
    StringLengthContext.prototype.accept = function (visitor) {
        if (visitor.visitStringLength) {
            return visitor.visitStringLength(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringLengthContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringLengthContext = StringLengthContext;
var StringParameterContext = /** @class */ (function (_super) {
    __extends(StringParameterContext, _super);
    function StringParameterContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringParameterContext.prototype.parameterNameDef = function () {
        return this.getRuleContext(0, ParameterNameDefContext);
    };
    StringParameterContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    StringParameterContext.prototype.string = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringContext);
        }
        else {
            return this.getRuleContext(i, StringContext);
        }
    };
    Object.defineProperty(StringParameterContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringParameter; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringParameterContext.prototype.enterRule = function (listener) {
        if (listener.enterStringParameter) {
            listener.enterStringParameter(this);
        }
    };
    // @Override
    StringParameterContext.prototype.exitRule = function (listener) {
        if (listener.exitStringParameter) {
            listener.exitStringParameter(this);
        }
    };
    // @Override
    StringParameterContext.prototype.accept = function (visitor) {
        if (visitor.visitStringParameter) {
            return visitor.visitStringParameter(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringParameterContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringParameterContext = StringParameterContext;
var StringParameterAssignContext = /** @class */ (function (_super) {
    __extends(StringParameterAssignContext, _super);
    function StringParameterAssignContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringParameterAssignContext.prototype.parameterNameRef = function () {
        return this.getRuleContext(0, ParameterNameRefContext);
    };
    StringParameterAssignContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    Object.defineProperty(StringParameterAssignContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringParameterAssign; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringParameterAssignContext.prototype.enterRule = function (listener) {
        if (listener.enterStringParameterAssign) {
            listener.enterStringParameterAssign(this);
        }
    };
    // @Override
    StringParameterAssignContext.prototype.exitRule = function (listener) {
        if (listener.exitStringParameterAssign) {
            listener.exitStringParameterAssign(this);
        }
    };
    // @Override
    StringParameterAssignContext.prototype.accept = function (visitor) {
        if (visitor.visitStringParameterAssign) {
            return visitor.visitStringParameterAssign(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringParameterAssignContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringParameterAssignContext = StringParameterAssignContext;
var StringParameterRefContext = /** @class */ (function (_super) {
    __extends(StringParameterRefContext, _super);
    function StringParameterRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringParameterRefContext.prototype.parameterNameRef = function () {
        return this.getRuleContext(0, ParameterNameRefContext);
    };
    Object.defineProperty(StringParameterRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringParameterRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringParameterRefContext.prototype.enterRule = function (listener) {
        if (listener.enterStringParameterRef) {
            listener.enterStringParameterRef(this);
        }
    };
    // @Override
    StringParameterRefContext.prototype.exitRule = function (listener) {
        if (listener.exitStringParameterRef) {
            listener.exitStringParameterRef(this);
        }
    };
    // @Override
    StringParameterRefContext.prototype.accept = function (visitor) {
        if (visitor.visitStringParameterRef) {
            return visitor.visitStringParameterRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringParameterRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringParameterRefContext = StringParameterRefContext;
var StringPrefixContext = /** @class */ (function (_super) {
    __extends(StringPrefixContext, _super);
    function StringPrefixContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringPrefixContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    StringPrefixContext.prototype.substringLength = function () {
        return this.getRuleContext(0, SubstringLengthContext);
    };
    Object.defineProperty(StringPrefixContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringPrefix; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringPrefixContext.prototype.enterRule = function (listener) {
        if (listener.enterStringPrefix) {
            listener.enterStringPrefix(this);
        }
    };
    // @Override
    StringPrefixContext.prototype.exitRule = function (listener) {
        if (listener.exitStringPrefix) {
            listener.exitStringPrefix(this);
        }
    };
    // @Override
    StringPrefixContext.prototype.accept = function (visitor) {
        if (visitor.visitStringPrefix) {
            return visitor.visitStringPrefix(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringPrefixContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringPrefixContext = StringPrefixContext;
var StringSuffixContext = /** @class */ (function (_super) {
    __extends(StringSuffixContext, _super);
    function StringSuffixContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringSuffixContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    StringSuffixContext.prototype.substringOffset = function () {
        return this.getRuleContext(0, SubstringOffsetContext);
    };
    Object.defineProperty(StringSuffixContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringSuffix; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringSuffixContext.prototype.enterRule = function (listener) {
        if (listener.enterStringSuffix) {
            listener.enterStringSuffix(this);
        }
    };
    // @Override
    StringSuffixContext.prototype.exitRule = function (listener) {
        if (listener.exitStringSuffix) {
            listener.exitStringSuffix(this);
        }
    };
    // @Override
    StringSuffixContext.prototype.accept = function (visitor) {
        if (visitor.visitStringSuffix) {
            return visitor.visitStringSuffix(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringSuffixContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringSuffixContext = StringSuffixContext;
var StringValueContext = /** @class */ (function (_super) {
    __extends(StringValueContext, _super);
    function StringValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringValueContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(StringValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringValueContext.prototype.enterRule = function (listener) {
        if (listener.enterStringValue) {
            listener.enterStringValue(this);
        }
    };
    // @Override
    StringValueContext.prototype.exitRule = function (listener) {
        if (listener.exitStringValue) {
            listener.exitStringValue(this);
        }
    };
    // @Override
    StringValueContext.prototype.accept = function (visitor) {
        if (visitor.visitStringValue) {
            return visitor.visitStringValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringValueContext = StringValueContext;
var StrongContext = /** @class */ (function (_super) {
    __extends(StrongContext, _super);
    function StrongContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StrongContext.prototype.logicNameRef = function () {
        return this.getRuleContext(0, LogicNameRefContext);
    };
    Object.defineProperty(StrongContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_strong; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StrongContext.prototype.enterRule = function (listener) {
        if (listener.enterStrong) {
            listener.enterStrong(this);
        }
    };
    // @Override
    StrongContext.prototype.exitRule = function (listener) {
        if (listener.exitStrong) {
            listener.exitStrong(this);
        }
    };
    // @Override
    StrongContext.prototype.accept = function (visitor) {
        if (visitor.visitStrong) {
            return visitor.visitStrong(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StrongContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StrongContext = StrongContext;
var SubIssueContext = /** @class */ (function (_super) {
    __extends(SubIssueContext, _super);
    function SubIssueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SubIssueContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(SubIssueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_subIssue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SubIssueContext.prototype.enterRule = function (listener) {
        if (listener.enterSubIssue) {
            listener.enterSubIssue(this);
        }
    };
    // @Override
    SubIssueContext.prototype.exitRule = function (listener) {
        if (listener.exitSubIssue) {
            listener.exitSubIssue(this);
        }
    };
    // @Override
    SubIssueContext.prototype.accept = function (visitor) {
        if (visitor.visitSubIssue) {
            return visitor.visitSubIssue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SubIssueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SubIssueContext = SubIssueContext;
var SubstringContext = /** @class */ (function (_super) {
    __extends(SubstringContext, _super);
    function SubstringContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SubstringContext.prototype.stringExpression = function () {
        return this.getRuleContext(0, StringExpressionContext);
    };
    SubstringContext.prototype.substringLength = function () {
        return this.getRuleContext(0, SubstringLengthContext);
    };
    SubstringContext.prototype.substringOffset = function () {
        return this.getRuleContext(0, SubstringOffsetContext);
    };
    Object.defineProperty(SubstringContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_substring; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SubstringContext.prototype.enterRule = function (listener) {
        if (listener.enterSubstring) {
            listener.enterSubstring(this);
        }
    };
    // @Override
    SubstringContext.prototype.exitRule = function (listener) {
        if (listener.exitSubstring) {
            listener.exitSubstring(this);
        }
    };
    // @Override
    SubstringContext.prototype.accept = function (visitor) {
        if (visitor.visitSubstring) {
            return visitor.visitSubstring(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SubstringContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SubstringContext = SubstringContext;
var SubstringLengthContext = /** @class */ (function (_super) {
    __extends(SubstringLengthContext, _super);
    function SubstringLengthContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SubstringLengthContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(SubstringLengthContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_substringLength; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SubstringLengthContext.prototype.enterRule = function (listener) {
        if (listener.enterSubstringLength) {
            listener.enterSubstringLength(this);
        }
    };
    // @Override
    SubstringLengthContext.prototype.exitRule = function (listener) {
        if (listener.exitSubstringLength) {
            listener.exitSubstringLength(this);
        }
    };
    // @Override
    SubstringLengthContext.prototype.accept = function (visitor) {
        if (visitor.visitSubstringLength) {
            return visitor.visitSubstringLength(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SubstringLengthContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SubstringLengthContext = SubstringLengthContext;
var SubstringOffsetContext = /** @class */ (function (_super) {
    __extends(SubstringOffsetContext, _super);
    function SubstringOffsetContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SubstringOffsetContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(SubstringOffsetContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_substringOffset; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SubstringOffsetContext.prototype.enterRule = function (listener) {
        if (listener.enterSubstringOffset) {
            listener.enterSubstringOffset(this);
        }
    };
    // @Override
    SubstringOffsetContext.prototype.exitRule = function (listener) {
        if (listener.exitSubstringOffset) {
            listener.exitSubstringOffset(this);
        }
    };
    // @Override
    SubstringOffsetContext.prototype.accept = function (visitor) {
        if (visitor.visitSubstringOffset) {
            return visitor.visitSubstringOffset(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SubstringOffsetContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SubstringOffsetContext = SubstringOffsetContext;
var SubtrahendContext = /** @class */ (function (_super) {
    __extends(SubtrahendContext, _super);
    function SubtrahendContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SubtrahendContext.prototype.integerExpression = function () {
        return this.getRuleContext(0, IntegerExpressionContext);
    };
    Object.defineProperty(SubtrahendContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_subtrahend; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SubtrahendContext.prototype.enterRule = function (listener) {
        if (listener.enterSubtrahend) {
            listener.enterSubtrahend(this);
        }
    };
    // @Override
    SubtrahendContext.prototype.exitRule = function (listener) {
        if (listener.exitSubtrahend) {
            listener.exitSubtrahend(this);
        }
    };
    // @Override
    SubtrahendContext.prototype.accept = function (visitor) {
        if (visitor.visitSubtrahend) {
            return visitor.visitSubtrahend(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SubtrahendContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SubtrahendContext = SubtrahendContext;
var SymbolicLayoutUnitsContext = /** @class */ (function (_super) {
    __extends(SymbolicLayoutUnitsContext, _super);
    function SymbolicLayoutUnitsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SymbolicLayoutUnitsContext.prototype.setAngle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetAngleContext);
        }
        else {
            return this.getRuleContext(i, SetAngleContext);
        }
    };
    SymbolicLayoutUnitsContext.prototype.setCapacitance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetCapacitanceContext);
        }
        else {
            return this.getRuleContext(i, SetCapacitanceContext);
        }
    };
    SymbolicLayoutUnitsContext.prototype.setDistance = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetDistanceContext);
        }
        else {
            return this.getRuleContext(i, SetDistanceContext);
        }
    };
    SymbolicLayoutUnitsContext.prototype.setTime = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SetTimeContext);
        }
        else {
            return this.getRuleContext(i, SetTimeContext);
        }
    };
    Object.defineProperty(SymbolicLayoutUnitsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_symbolicLayoutUnits; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SymbolicLayoutUnitsContext.prototype.enterRule = function (listener) {
        if (listener.enterSymbolicLayoutUnits) {
            listener.enterSymbolicLayoutUnits(this);
        }
    };
    // @Override
    SymbolicLayoutUnitsContext.prototype.exitRule = function (listener) {
        if (listener.exitSymbolicLayoutUnits) {
            listener.exitSymbolicLayoutUnits(this);
        }
    };
    // @Override
    SymbolicLayoutUnitsContext.prototype.accept = function (visitor) {
        if (visitor.visitSymbolicLayoutUnits) {
            return visitor.visitSymbolicLayoutUnits(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SymbolicLayoutUnitsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SymbolicLayoutUnitsContext = SymbolicLayoutUnitsContext;
var SymbolicLayoutViewContext = /** @class */ (function (_super) {
    __extends(SymbolicLayoutViewContext, _super);
    function SymbolicLayoutViewContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SymbolicLayoutViewContext.prototype.viewNameDef = function () {
        return this.getRuleContext(0, ViewNameDefContext);
    };
    SymbolicLayoutViewContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    SymbolicLayoutViewContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    SymbolicLayoutViewContext.prototype.nameInformation = function () {
        return this.tryGetRuleContext(0, NameInformationContext);
    };
    Object.defineProperty(SymbolicLayoutViewContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_symbolicLayoutView; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SymbolicLayoutViewContext.prototype.enterRule = function (listener) {
        if (listener.enterSymbolicLayoutView) {
            listener.enterSymbolicLayoutView(this);
        }
    };
    // @Override
    SymbolicLayoutViewContext.prototype.exitRule = function (listener) {
        if (listener.exitSymbolicLayoutView) {
            listener.exitSymbolicLayoutView(this);
        }
    };
    // @Override
    SymbolicLayoutViewContext.prototype.accept = function (visitor) {
        if (visitor.visitSymbolicLayoutView) {
            return visitor.visitSymbolicLayoutView(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SymbolicLayoutViewContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SymbolicLayoutViewContext = SymbolicLayoutViewContext;
var SymbolPortImplementationNameDefContext = /** @class */ (function (_super) {
    __extends(SymbolPortImplementationNameDefContext, _super);
    function SymbolPortImplementationNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SymbolPortImplementationNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(SymbolPortImplementationNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_symbolPortImplementationNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SymbolPortImplementationNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterSymbolPortImplementationNameDef) {
            listener.enterSymbolPortImplementationNameDef(this);
        }
    };
    // @Override
    SymbolPortImplementationNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitSymbolPortImplementationNameDef) {
            listener.exitSymbolPortImplementationNameDef(this);
        }
    };
    // @Override
    SymbolPortImplementationNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitSymbolPortImplementationNameDef) {
            return visitor.visitSymbolPortImplementationNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SymbolPortImplementationNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SymbolPortImplementationNameDefContext = SymbolPortImplementationNameDefContext;
var SymbolPortImplementationNameRefContext = /** @class */ (function (_super) {
    __extends(SymbolPortImplementationNameRefContext, _super);
    function SymbolPortImplementationNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    SymbolPortImplementationNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(SymbolPortImplementationNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_symbolPortImplementationNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    SymbolPortImplementationNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterSymbolPortImplementationNameRef) {
            listener.enterSymbolPortImplementationNameRef(this);
        }
    };
    // @Override
    SymbolPortImplementationNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitSymbolPortImplementationNameRef) {
            listener.exitSymbolPortImplementationNameRef(this);
        }
    };
    // @Override
    SymbolPortImplementationNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitSymbolPortImplementationNameRef) {
            return visitor.visitSymbolPortImplementationNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return SymbolPortImplementationNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.SymbolPortImplementationNameRefContext = SymbolPortImplementationNameRefContext;
var TechnologyContext = /** @class */ (function (_super) {
    __extends(TechnologyContext, _super);
    function TechnologyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TechnologyContext.prototype.physicalScaling = function () {
        return this.getRuleContext(0, PhysicalScalingContext);
    };
    TechnologyContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    TechnologyContext.prototype.figureGroup = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FigureGroupContext);
        }
        else {
            return this.getRuleContext(i, FigureGroupContext);
        }
    };
    TechnologyContext.prototype.logicDefinitions = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(LogicDefinitionsContext);
        }
        else {
            return this.getRuleContext(i, LogicDefinitionsContext);
        }
    };
    TechnologyContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(TechnologyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_technology; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TechnologyContext.prototype.enterRule = function (listener) {
        if (listener.enterTechnology) {
            listener.enterTechnology(this);
        }
    };
    // @Override
    TechnologyContext.prototype.exitRule = function (listener) {
        if (listener.exitTechnology) {
            listener.exitTechnology(this);
        }
    };
    // @Override
    TechnologyContext.prototype.accept = function (visitor) {
        if (visitor.visitTechnology) {
            return visitor.visitTechnology(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TechnologyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TechnologyContext = TechnologyContext;
var TextHeightContext = /** @class */ (function (_super) {
    __extends(TextHeightContext, _super);
    function TextHeightContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TextHeightContext.prototype.lengthValue = function () {
        return this.getRuleContext(0, LengthValueContext);
    };
    Object.defineProperty(TextHeightContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_textHeight; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TextHeightContext.prototype.enterRule = function (listener) {
        if (listener.enterTextHeight) {
            listener.enterTextHeight(this);
        }
    };
    // @Override
    TextHeightContext.prototype.exitRule = function (listener) {
        if (listener.exitTextHeight) {
            listener.exitTextHeight(this);
        }
    };
    // @Override
    TextHeightContext.prototype.accept = function (visitor) {
        if (visitor.visitTextHeight) {
            return visitor.visitTextHeight(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TextHeightContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TextHeightContext = TextHeightContext;
var ThroughPointContext = /** @class */ (function (_super) {
    __extends(ThroughPointContext, _super);
    function ThroughPointContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ThroughPointContext.prototype.numberPoint = function () {
        return this.getRuleContext(0, NumberPointContext);
    };
    Object.defineProperty(ThroughPointContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_throughPoint; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ThroughPointContext.prototype.enterRule = function (listener) {
        if (listener.enterThroughPoint) {
            listener.enterThroughPoint(this);
        }
    };
    // @Override
    ThroughPointContext.prototype.exitRule = function (listener) {
        if (listener.exitThroughPoint) {
            listener.exitThroughPoint(this);
        }
    };
    // @Override
    ThroughPointContext.prototype.accept = function (visitor) {
        if (visitor.visitThroughPoint) {
            return visitor.visitThroughPoint(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ThroughPointContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ThroughPointContext = ThroughPointContext;
var TimeContext = /** @class */ (function (_super) {
    __extends(TimeContext, _super);
    function TimeContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TimeContext.prototype.hourNumber = function () {
        return this.getRuleContext(0, HourNumberContext);
    };
    TimeContext.prototype.minuteNumber = function () {
        return this.getRuleContext(0, MinuteNumberContext);
    };
    TimeContext.prototype.secondNumber = function () {
        return this.getRuleContext(0, SecondNumberContext);
    };
    Object.defineProperty(TimeContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_time; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TimeContext.prototype.enterRule = function (listener) {
        if (listener.enterTime) {
            listener.enterTime(this);
        }
    };
    // @Override
    TimeContext.prototype.exitRule = function (listener) {
        if (listener.exitTime) {
            listener.exitTime(this);
        }
    };
    // @Override
    TimeContext.prototype.accept = function (visitor) {
        if (visitor.visitTime) {
            return visitor.visitTime(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TimeContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TimeContext = TimeContext;
var TimeDelayContext = /** @class */ (function (_super) {
    __extends(TimeDelayContext, _super);
    function TimeDelayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TimeDelayContext.prototype.timeValue = function () {
        return this.getRuleContext(0, TimeValueContext);
    };
    Object.defineProperty(TimeDelayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_timeDelay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TimeDelayContext.prototype.enterRule = function (listener) {
        if (listener.enterTimeDelay) {
            listener.enterTimeDelay(this);
        }
    };
    // @Override
    TimeDelayContext.prototype.exitRule = function (listener) {
        if (listener.exitTimeDelay) {
            listener.exitTimeDelay(this);
        }
    };
    // @Override
    TimeDelayContext.prototype.accept = function (visitor) {
        if (visitor.visitTimeDelay) {
            return visitor.visitTimeDelay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TimeDelayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TimeDelayContext = TimeDelayContext;
var TimeIntervalContext = /** @class */ (function (_super) {
    __extends(TimeIntervalContext, _super);
    function TimeIntervalContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TimeIntervalContext.prototype.event = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(EventContext);
        }
        else {
            return this.getRuleContext(i, EventContext);
        }
    };
    TimeIntervalContext.prototype.offsetEvent = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OffsetEventContext);
        }
        else {
            return this.getRuleContext(i, OffsetEventContext);
        }
    };
    TimeIntervalContext.prototype.duration = function () {
        return this.tryGetRuleContext(0, DurationContext);
    };
    Object.defineProperty(TimeIntervalContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_timeInterval; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TimeIntervalContext.prototype.enterRule = function (listener) {
        if (listener.enterTimeInterval) {
            listener.enterTimeInterval(this);
        }
    };
    // @Override
    TimeIntervalContext.prototype.exitRule = function (listener) {
        if (listener.exitTimeInterval) {
            listener.exitTimeInterval(this);
        }
    };
    // @Override
    TimeIntervalContext.prototype.accept = function (visitor) {
        if (visitor.visitTimeInterval) {
            return visitor.visitTimeInterval(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TimeIntervalContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TimeIntervalContext = TimeIntervalContext;
var TimeStampContext = /** @class */ (function (_super) {
    __extends(TimeStampContext, _super);
    function TimeStampContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TimeStampContext.prototype.date = function () {
        return this.getRuleContext(0, DateContext);
    };
    TimeStampContext.prototype.time = function () {
        return this.getRuleContext(0, TimeContext);
    };
    Object.defineProperty(TimeStampContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_timeStamp; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TimeStampContext.prototype.enterRule = function (listener) {
        if (listener.enterTimeStamp) {
            listener.enterTimeStamp(this);
        }
    };
    // @Override
    TimeStampContext.prototype.exitRule = function (listener) {
        if (listener.exitTimeStamp) {
            listener.exitTimeStamp(this);
        }
    };
    // @Override
    TimeStampContext.prototype.accept = function (visitor) {
        if (visitor.visitTimeStamp) {
            return visitor.visitTimeStamp(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TimeStampContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TimeStampContext = TimeStampContext;
var TimeValueContext = /** @class */ (function (_super) {
    __extends(TimeValueContext, _super);
    function TimeValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TimeValueContext.prototype.miNoMaxValue = function () {
        return this.getRuleContext(0, MiNoMaxValueContext);
    };
    Object.defineProperty(TimeValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_timeValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TimeValueContext.prototype.enterRule = function (listener) {
        if (listener.enterTimeValue) {
            listener.enterTimeValue(this);
        }
    };
    // @Override
    TimeValueContext.prototype.exitRule = function (listener) {
        if (listener.exitTimeValue) {
            listener.exitTimeValue(this);
        }
    };
    // @Override
    TimeValueContext.prototype.accept = function (visitor) {
        if (visitor.visitTimeValue) {
            return visitor.visitTimeValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TimeValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TimeValueContext = TimeValueContext;
var TimingContext = /** @class */ (function (_super) {
    __extends(TimingContext, _super);
    function TimingContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TimingContext.prototype.timingNameDef = function () {
        return this.getRuleContext(0, TimingNameDefContext);
    };
    TimingContext.prototype.derivation = function () {
        return this.getRuleContext(0, DerivationContext);
    };
    TimingContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    TimingContext.prototype.forbiddenEvent = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ForbiddenEventContext);
        }
        else {
            return this.getRuleContext(i, ForbiddenEventContext);
        }
    };
    TimingContext.prototype.pathDelay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PathDelayContext);
        }
        else {
            return this.getRuleContext(i, PathDelayContext);
        }
    };
    TimingContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    TimingContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(TimingContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_timing; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TimingContext.prototype.enterRule = function (listener) {
        if (listener.enterTiming) {
            listener.enterTiming(this);
        }
    };
    // @Override
    TimingContext.prototype.exitRule = function (listener) {
        if (listener.exitTiming) {
            listener.exitTiming(this);
        }
    };
    // @Override
    TimingContext.prototype.accept = function (visitor) {
        if (visitor.visitTiming) {
            return visitor.visitTiming(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TimingContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TimingContext = TimingContext;
var TimingDisplayContext = /** @class */ (function (_super) {
    __extends(TimingDisplayContext, _super);
    function TimingDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TimingDisplayContext.prototype.timingNameRef = function () {
        return this.getRuleContext(0, TimingNameRefContext);
    };
    TimingDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    Object.defineProperty(TimingDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_timingDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TimingDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterTimingDisplay) {
            listener.enterTimingDisplay(this);
        }
    };
    // @Override
    TimingDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitTimingDisplay) {
            listener.exitTimingDisplay(this);
        }
    };
    // @Override
    TimingDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitTimingDisplay) {
            return visitor.visitTimingDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TimingDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TimingDisplayContext = TimingDisplayContext;
var TimingNameDefContext = /** @class */ (function (_super) {
    __extends(TimingNameDefContext, _super);
    function TimingNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TimingNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(TimingNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_timingNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TimingNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterTimingNameDef) {
            listener.enterTimingNameDef(this);
        }
    };
    // @Override
    TimingNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitTimingNameDef) {
            listener.exitTimingNameDef(this);
        }
    };
    // @Override
    TimingNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitTimingNameDef) {
            return visitor.visitTimingNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TimingNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TimingNameDefContext = TimingNameDefContext;
var TimingNameRefContext = /** @class */ (function (_super) {
    __extends(TimingNameRefContext, _super);
    function TimingNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TimingNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(TimingNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_timingNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TimingNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterTimingNameRef) {
            listener.enterTimingNameRef(this);
        }
    };
    // @Override
    TimingNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitTimingNameRef) {
            listener.exitTimingNameRef(this);
        }
    };
    // @Override
    TimingNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitTimingNameRef) {
            return visitor.visitTimingNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TimingNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TimingNameRefContext = TimingNameRefContext;
var ToIntegerContext = /** @class */ (function (_super) {
    __extends(ToIntegerContext, _super);
    function ToIntegerContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ToIntegerContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(ToIntegerContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_toInteger; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ToIntegerContext.prototype.enterRule = function (listener) {
        if (listener.enterToInteger) {
            listener.enterToInteger(this);
        }
    };
    // @Override
    ToIntegerContext.prototype.exitRule = function (listener) {
        if (listener.exitToInteger) {
            listener.exitToInteger(this);
        }
    };
    // @Override
    ToIntegerContext.prototype.accept = function (visitor) {
        if (visitor.visitToInteger) {
            return visitor.visitToInteger(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ToIntegerContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ToIntegerContext = ToIntegerContext;
var TopJustifyContext = /** @class */ (function (_super) {
    __extends(TopJustifyContext, _super);
    function TopJustifyContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(TopJustifyContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_topJustify; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TopJustifyContext.prototype.enterRule = function (listener) {
        if (listener.enterTopJustify) {
            listener.enterTopJustify(this);
        }
    };
    // @Override
    TopJustifyContext.prototype.exitRule = function (listener) {
        if (listener.exitTopJustify) {
            listener.exitTopJustify(this);
        }
    };
    // @Override
    TopJustifyContext.prototype.accept = function (visitor) {
        if (visitor.visitTopJustify) {
            return visitor.visitTopJustify(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TopJustifyContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TopJustifyContext = TopJustifyContext;
var TotalPagesContext = /** @class */ (function (_super) {
    __extends(TotalPagesContext, _super);
    function TotalPagesContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TotalPagesContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(TotalPagesContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_totalPages; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TotalPagesContext.prototype.enterRule = function (listener) {
        if (listener.enterTotalPages) {
            listener.enterTotalPages(this);
        }
    };
    // @Override
    TotalPagesContext.prototype.exitRule = function (listener) {
        if (listener.exitTotalPages) {
            listener.exitTotalPages(this);
        }
    };
    // @Override
    TotalPagesContext.prototype.accept = function (visitor) {
        if (visitor.visitTotalPages) {
            return visitor.visitTotalPages(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TotalPagesContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TotalPagesContext = TotalPagesContext;
var TotalPagesDisplayContext = /** @class */ (function (_super) {
    __extends(TotalPagesDisplayContext, _super);
    function TotalPagesDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TotalPagesDisplayContext.prototype.addDisplay = function () {
        return this.tryGetRuleContext(0, AddDisplayContext);
    };
    TotalPagesDisplayContext.prototype.replaceDisplay = function () {
        return this.tryGetRuleContext(0, ReplaceDisplayContext);
    };
    TotalPagesDisplayContext.prototype.removeDisplay = function () {
        return this.tryGetRuleContext(0, RemoveDisplayContext);
    };
    Object.defineProperty(TotalPagesDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_totalPagesDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TotalPagesDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterTotalPagesDisplay) {
            listener.enterTotalPagesDisplay(this);
        }
    };
    // @Override
    TotalPagesDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitTotalPagesDisplay) {
            listener.exitTotalPagesDisplay(this);
        }
    };
    // @Override
    TotalPagesDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitTotalPagesDisplay) {
            return visitor.visitTotalPagesDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TotalPagesDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TotalPagesDisplayContext = TotalPagesDisplayContext;
var TransformContext = /** @class */ (function (_super) {
    __extends(TransformContext, _super);
    function TransformContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TransformContext.prototype.origin = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OriginContext);
        }
        else {
            return this.getRuleContext(i, OriginContext);
        }
    };
    TransformContext.prototype.rotation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RotationContext);
        }
        else {
            return this.getRuleContext(i, RotationContext);
        }
    };
    TransformContext.prototype.scaleX = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ScaleXContext);
        }
        else {
            return this.getRuleContext(i, ScaleXContext);
        }
    };
    TransformContext.prototype.scaleY = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ScaleYContext);
        }
        else {
            return this.getRuleContext(i, ScaleYContext);
        }
    };
    Object.defineProperty(TransformContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_transform; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TransformContext.prototype.enterRule = function (listener) {
        if (listener.enterTransform) {
            listener.enterTransform(this);
        }
    };
    // @Override
    TransformContext.prototype.exitRule = function (listener) {
        if (listener.exitTransform) {
            listener.exitTransform(this);
        }
    };
    // @Override
    TransformContext.prototype.accept = function (visitor) {
        if (visitor.visitTransform) {
            return visitor.visitTransform(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TransformContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TransformContext = TransformContext;
var TransitionContext = /** @class */ (function (_super) {
    __extends(TransitionContext, _super);
    function TransitionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TransitionContext.prototype.previousLogicValue = function () {
        return this.getRuleContext(0, PreviousLogicValueContext);
    };
    TransitionContext.prototype.presentLogicValue = function () {
        return this.getRuleContext(0, PresentLogicValueContext);
    };
    Object.defineProperty(TransitionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_transition; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TransitionContext.prototype.enterRule = function (listener) {
        if (listener.enterTransition) {
            listener.enterTransition(this);
        }
    };
    // @Override
    TransitionContext.prototype.exitRule = function (listener) {
        if (listener.exitTransition) {
            listener.exitTransition(this);
        }
    };
    // @Override
    TransitionContext.prototype.accept = function (visitor) {
        if (visitor.visitTransition) {
            return visitor.visitTransition(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TransitionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TransitionContext = TransitionContext;
var EtrueContext = /** @class */ (function (_super) {
    __extends(EtrueContext, _super);
    function EtrueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(EtrueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_etrue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    EtrueContext.prototype.enterRule = function (listener) {
        if (listener.enterEtrue) {
            listener.enterEtrue(this);
        }
    };
    // @Override
    EtrueContext.prototype.exitRule = function (listener) {
        if (listener.exitEtrue) {
            listener.exitEtrue(this);
        }
    };
    // @Override
    EtrueContext.prototype.accept = function (visitor) {
        if (visitor.visitEtrue) {
            return visitor.visitEtrue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return EtrueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.EtrueContext = EtrueContext;
var TruncateContext = /** @class */ (function (_super) {
    __extends(TruncateContext, _super);
    function TruncateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(TruncateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_truncate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TruncateContext.prototype.enterRule = function (listener) {
        if (listener.enterTruncate) {
            listener.enterTruncate(this);
        }
    };
    // @Override
    TruncateContext.prototype.exitRule = function (listener) {
        if (listener.exitTruncate) {
            listener.exitTruncate(this);
        }
    };
    // @Override
    TruncateContext.prototype.accept = function (visitor) {
        if (visitor.visitTruncate) {
            return visitor.visitTruncate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TruncateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TruncateContext = TruncateContext;
var TypedValueContext = /** @class */ (function (_super) {
    __extends(TypedValueContext, _super);
    function TypedValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TypedValueContext.prototype.eboolean = function () {
        return this.tryGetRuleContext(0, EbooleanContext);
    };
    TypedValueContext.prototype.integer = function () {
        return this.tryGetRuleContext(0, IntegerContext);
    };
    TypedValueContext.prototype.miNoMax = function () {
        return this.tryGetRuleContext(0, MiNoMaxContext);
    };
    TypedValueContext.prototype.number = function () {
        return this.tryGetRuleContext(0, NumberContext);
    };
    TypedValueContext.prototype.point = function () {
        return this.tryGetRuleContext(0, PointContext);
    };
    TypedValueContext.prototype.string = function () {
        return this.tryGetRuleContext(0, StringContext);
    };
    Object.defineProperty(TypedValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_typedValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TypedValueContext.prototype.enterRule = function (listener) {
        if (listener.enterTypedValue) {
            listener.enterTypedValue(this);
        }
    };
    // @Override
    TypedValueContext.prototype.exitRule = function (listener) {
        if (listener.exitTypedValue) {
            listener.exitTypedValue(this);
        }
    };
    // @Override
    TypedValueContext.prototype.accept = function (visitor) {
        if (visitor.visitTypedValue) {
            return visitor.visitTypedValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TypedValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TypedValueContext = TypedValueContext;
var TypefaceContext = /** @class */ (function (_super) {
    __extends(TypefaceContext, _super);
    function TypefaceContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TypefaceContext.prototype.fontFamily = function () {
        return this.getRuleContext(0, FontFamilyContext);
    };
    TypefaceContext.prototype.typefaceSuffix = function () {
        return this.tryGetRuleContext(0, TypefaceSuffixContext);
    };
    Object.defineProperty(TypefaceContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_typeface; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TypefaceContext.prototype.enterRule = function (listener) {
        if (listener.enterTypeface) {
            listener.enterTypeface(this);
        }
    };
    // @Override
    TypefaceContext.prototype.exitRule = function (listener) {
        if (listener.exitTypeface) {
            listener.exitTypeface(this);
        }
    };
    // @Override
    TypefaceContext.prototype.accept = function (visitor) {
        if (visitor.visitTypeface) {
            return visitor.visitTypeface(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TypefaceContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TypefaceContext = TypefaceContext;
var TypefaceSuffixContext = /** @class */ (function (_super) {
    __extends(TypefaceSuffixContext, _super);
    function TypefaceSuffixContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    TypefaceSuffixContext.prototype.stringToken = function () {
        return this.getRuleContext(0, StringTokenContext);
    };
    Object.defineProperty(TypefaceSuffixContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_typefaceSuffix; },
        enumerable: true,
        configurable: true
    });
    // @Override
    TypefaceSuffixContext.prototype.enterRule = function (listener) {
        if (listener.enterTypefaceSuffix) {
            listener.enterTypefaceSuffix(this);
        }
    };
    // @Override
    TypefaceSuffixContext.prototype.exitRule = function (listener) {
        if (listener.exitTypefaceSuffix) {
            listener.exitTypefaceSuffix(this);
        }
    };
    // @Override
    TypefaceSuffixContext.prototype.accept = function (visitor) {
        if (visitor.visitTypefaceSuffix) {
            return visitor.visitTypefaceSuffix(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return TypefaceSuffixContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.TypefaceSuffixContext = TypefaceSuffixContext;
var UnconfiguredContext = /** @class */ (function (_super) {
    __extends(UnconfiguredContext, _super);
    function UnconfiguredContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(UnconfiguredContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unconfigured; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnconfiguredContext.prototype.enterRule = function (listener) {
        if (listener.enterUnconfigured) {
            listener.enterUnconfigured(this);
        }
    };
    // @Override
    UnconfiguredContext.prototype.exitRule = function (listener) {
        if (listener.exitUnconfigured) {
            listener.exitUnconfigured(this);
        }
    };
    // @Override
    UnconfiguredContext.prototype.accept = function (visitor) {
        if (visitor.visitUnconfigured) {
            return visitor.visitUnconfigured(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnconfiguredContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnconfiguredContext = UnconfiguredContext;
var UnconstrainedContext = /** @class */ (function (_super) {
    __extends(UnconstrainedContext, _super);
    function UnconstrainedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(UnconstrainedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unconstrained; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnconstrainedContext.prototype.enterRule = function (listener) {
        if (listener.enterUnconstrained) {
            listener.enterUnconstrained(this);
        }
    };
    // @Override
    UnconstrainedContext.prototype.exitRule = function (listener) {
        if (listener.exitUnconstrained) {
            listener.exitUnconstrained(this);
        }
    };
    // @Override
    UnconstrainedContext.prototype.accept = function (visitor) {
        if (visitor.visitUnconstrained) {
            return visitor.visitUnconstrained(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnconstrainedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnconstrainedContext = UnconstrainedContext;
var UndefinedContext = /** @class */ (function (_super) {
    __extends(UndefinedContext, _super);
    function UndefinedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(UndefinedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_undefined; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UndefinedContext.prototype.enterRule = function (listener) {
        if (listener.enterUndefined) {
            listener.enterUndefined(this);
        }
    };
    // @Override
    UndefinedContext.prototype.exitRule = function (listener) {
        if (listener.exitUndefined) {
            listener.exitUndefined(this);
        }
    };
    // @Override
    UndefinedContext.prototype.accept = function (visitor) {
        if (visitor.visitUndefined) {
            return visitor.visitUndefined(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UndefinedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UndefinedContext = UndefinedContext;
var UnitContext = /** @class */ (function (_super) {
    __extends(UnitContext, _super);
    function UnitContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    UnitContext.prototype.unitNameDef = function () {
        return this.getRuleContext(0, UnitNameDefContext);
    };
    UnitContext.prototype.numberOfNewUnits = function () {
        return this.getRuleContext(0, NumberOfNewUnitsContext);
    };
    UnitContext.prototype.numberOfBasicUnits = function () {
        return this.getRuleContext(0, NumberOfBasicUnitsContext);
    };
    UnitContext.prototype.ampere = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AmpereContext);
        }
        else {
            return this.getRuleContext(i, AmpereContext);
        }
    };
    UnitContext.prototype.candela = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CandelaContext);
        }
        else {
            return this.getRuleContext(i, CandelaContext);
        }
    };
    UnitContext.prototype.celsius = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CelsiusContext);
        }
        else {
            return this.getRuleContext(i, CelsiusContext);
        }
    };
    UnitContext.prototype.coulomb = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CoulombContext);
        }
        else {
            return this.getRuleContext(i, CoulombContext);
        }
    };
    UnitContext.prototype.degree = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DegreeContext);
        }
        else {
            return this.getRuleContext(i, DegreeContext);
        }
    };
    UnitContext.prototype.fahrenheit = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FahrenheitContext);
        }
        else {
            return this.getRuleContext(i, FahrenheitContext);
        }
    };
    UnitContext.prototype.farad = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FaradContext);
        }
        else {
            return this.getRuleContext(i, FaradContext);
        }
    };
    UnitContext.prototype.henry = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(HenryContext);
        }
        else {
            return this.getRuleContext(i, HenryContext);
        }
    };
    UnitContext.prototype.hertz = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(HertzContext);
        }
        else {
            return this.getRuleContext(i, HertzContext);
        }
    };
    UnitContext.prototype.joule = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(JouleContext);
        }
        else {
            return this.getRuleContext(i, JouleContext);
        }
    };
    UnitContext.prototype.kelvin = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(KelvinContext);
        }
        else {
            return this.getRuleContext(i, KelvinContext);
        }
    };
    UnitContext.prototype.kilogram = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(KilogramContext);
        }
        else {
            return this.getRuleContext(i, KilogramContext);
        }
    };
    UnitContext.prototype.meter = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(MeterContext);
        }
        else {
            return this.getRuleContext(i, MeterContext);
        }
    };
    UnitContext.prototype.mole = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(MoleContext);
        }
        else {
            return this.getRuleContext(i, MoleContext);
        }
    };
    UnitContext.prototype.ohm = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(OhmContext);
        }
        else {
            return this.getRuleContext(i, OhmContext);
        }
    };
    UnitContext.prototype.radian = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RadianContext);
        }
        else {
            return this.getRuleContext(i, RadianContext);
        }
    };
    UnitContext.prototype.second = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SecondContext);
        }
        else {
            return this.getRuleContext(i, SecondContext);
        }
    };
    UnitContext.prototype.siemens = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(SiemensContext);
        }
        else {
            return this.getRuleContext(i, SiemensContext);
        }
    };
    UnitContext.prototype.volt = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(VoltContext);
        }
        else {
            return this.getRuleContext(i, VoltContext);
        }
    };
    UnitContext.prototype.watt = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(WattContext);
        }
        else {
            return this.getRuleContext(i, WattContext);
        }
    };
    UnitContext.prototype.weber = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(WeberContext);
        }
        else {
            return this.getRuleContext(i, WeberContext);
        }
    };
    Object.defineProperty(UnitContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unit; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnitContext.prototype.enterRule = function (listener) {
        if (listener.enterUnit) {
            listener.enterUnit(this);
        }
    };
    // @Override
    UnitContext.prototype.exitRule = function (listener) {
        if (listener.exitUnit) {
            listener.exitUnit(this);
        }
    };
    // @Override
    UnitContext.prototype.accept = function (visitor) {
        if (visitor.visitUnit) {
            return visitor.visitUnit(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnitContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnitContext = UnitContext;
var UnitDefinitionsContext = /** @class */ (function (_super) {
    __extends(UnitDefinitionsContext, _super);
    function UnitDefinitionsContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    UnitDefinitionsContext.prototype.unit = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UnitContext);
        }
        else {
            return this.getRuleContext(i, UnitContext);
        }
    };
    Object.defineProperty(UnitDefinitionsContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unitDefinitions; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnitDefinitionsContext.prototype.enterRule = function (listener) {
        if (listener.enterUnitDefinitions) {
            listener.enterUnitDefinitions(this);
        }
    };
    // @Override
    UnitDefinitionsContext.prototype.exitRule = function (listener) {
        if (listener.exitUnitDefinitions) {
            listener.exitUnitDefinitions(this);
        }
    };
    // @Override
    UnitDefinitionsContext.prototype.accept = function (visitor) {
        if (visitor.visitUnitDefinitions) {
            return visitor.visitUnitDefinitions(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnitDefinitionsContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnitDefinitionsContext = UnitDefinitionsContext;
var UnitExponentContext = /** @class */ (function (_super) {
    __extends(UnitExponentContext, _super);
    function UnitExponentContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    UnitExponentContext.prototype.scaledInteger = function () {
        return this.getRuleContext(0, ScaledIntegerContext);
    };
    Object.defineProperty(UnitExponentContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unitExponent; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnitExponentContext.prototype.enterRule = function (listener) {
        if (listener.enterUnitExponent) {
            listener.enterUnitExponent(this);
        }
    };
    // @Override
    UnitExponentContext.prototype.exitRule = function (listener) {
        if (listener.exitUnitExponent) {
            listener.exitUnitExponent(this);
        }
    };
    // @Override
    UnitExponentContext.prototype.accept = function (visitor) {
        if (visitor.visitUnitExponent) {
            return visitor.visitUnitExponent(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnitExponentContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnitExponentContext = UnitExponentContext;
var UnitNameDefContext = /** @class */ (function (_super) {
    __extends(UnitNameDefContext, _super);
    function UnitNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    UnitNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(UnitNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unitNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnitNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterUnitNameDef) {
            listener.enterUnitNameDef(this);
        }
    };
    // @Override
    UnitNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitUnitNameDef) {
            listener.exitUnitNameDef(this);
        }
    };
    // @Override
    UnitNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitUnitNameDef) {
            return visitor.visitUnitNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnitNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnitNameDefContext = UnitNameDefContext;
var UnitNameRefContext = /** @class */ (function (_super) {
    __extends(UnitNameRefContext, _super);
    function UnitNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    UnitNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(UnitNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unitNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnitNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterUnitNameRef) {
            listener.enterUnitNameRef(this);
        }
    };
    // @Override
    UnitNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitUnitNameRef) {
            listener.exitUnitNameRef(this);
        }
    };
    // @Override
    UnitNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitUnitNameRef) {
            return visitor.visitUnitNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnitNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnitNameRefContext = UnitNameRefContext;
var UnitRefContext = /** @class */ (function (_super) {
    __extends(UnitRefContext, _super);
    function UnitRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    UnitRefContext.prototype.unitNameRef = function () {
        return this.getRuleContext(0, UnitNameRefContext);
    };
    Object.defineProperty(UnitRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unitRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnitRefContext.prototype.enterRule = function (listener) {
        if (listener.enterUnitRef) {
            listener.enterUnitRef(this);
        }
    };
    // @Override
    UnitRefContext.prototype.exitRule = function (listener) {
        if (listener.exitUnitRef) {
            listener.exitUnitRef(this);
        }
    };
    // @Override
    UnitRefContext.prototype.accept = function (visitor) {
        if (visitor.visitUnitRef) {
            return visitor.visitUnitRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnitRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnitRefContext = UnitRefContext;
var UnrestrictedContext = /** @class */ (function (_super) {
    __extends(UnrestrictedContext, _super);
    function UnrestrictedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(UnrestrictedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unrestricted; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnrestrictedContext.prototype.enterRule = function (listener) {
        if (listener.enterUnrestricted) {
            listener.enterUnrestricted(this);
        }
    };
    // @Override
    UnrestrictedContext.prototype.exitRule = function (listener) {
        if (listener.exitUnrestricted) {
            listener.exitUnrestricted(this);
        }
    };
    // @Override
    UnrestrictedContext.prototype.accept = function (visitor) {
        if (visitor.visitUnrestricted) {
            return visitor.visitUnrestricted(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnrestrictedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnrestrictedContext = UnrestrictedContext;
var UnspecifiedContext = /** @class */ (function (_super) {
    __extends(UnspecifiedContext, _super);
    function UnspecifiedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(UnspecifiedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unspecified; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnspecifiedContext.prototype.enterRule = function (listener) {
        if (listener.enterUnspecified) {
            listener.enterUnspecified(this);
        }
    };
    // @Override
    UnspecifiedContext.prototype.exitRule = function (listener) {
        if (listener.exitUnspecified) {
            listener.exitUnspecified(this);
        }
    };
    // @Override
    UnspecifiedContext.prototype.accept = function (visitor) {
        if (visitor.visitUnspecified) {
            return visitor.visitUnspecified(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnspecifiedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnspecifiedContext = UnspecifiedContext;
var UnspecifiedDirectionPortContext = /** @class */ (function (_super) {
    __extends(UnspecifiedDirectionPortContext, _super);
    function UnspecifiedDirectionPortContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(UnspecifiedDirectionPortContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unspecifiedDirectionPort; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnspecifiedDirectionPortContext.prototype.enterRule = function (listener) {
        if (listener.enterUnspecifiedDirectionPort) {
            listener.enterUnspecifiedDirectionPort(this);
        }
    };
    // @Override
    UnspecifiedDirectionPortContext.prototype.exitRule = function (listener) {
        if (listener.exitUnspecifiedDirectionPort) {
            listener.exitUnspecifiedDirectionPort(this);
        }
    };
    // @Override
    UnspecifiedDirectionPortContext.prototype.accept = function (visitor) {
        if (visitor.visitUnspecifiedDirectionPort) {
            return visitor.visitUnspecifiedDirectionPort(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnspecifiedDirectionPortContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnspecifiedDirectionPortContext = UnspecifiedDirectionPortContext;
var UntypedContext = /** @class */ (function (_super) {
    __extends(UntypedContext, _super);
    function UntypedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(UntypedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_untyped; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UntypedContext.prototype.enterRule = function (listener) {
        if (listener.enterUntyped) {
            listener.enterUntyped(this);
        }
    };
    // @Override
    UntypedContext.prototype.exitRule = function (listener) {
        if (listener.exitUntyped) {
            listener.exitUntyped(this);
        }
    };
    // @Override
    UntypedContext.prototype.accept = function (visitor) {
        if (visitor.visitUntyped) {
            return visitor.visitUntyped(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UntypedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UntypedContext = UntypedContext;
var UnusedContext = /** @class */ (function (_super) {
    __extends(UnusedContext, _super);
    function UnusedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(UnusedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_unused; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UnusedContext.prototype.enterRule = function (listener) {
        if (listener.enterUnused) {
            listener.enterUnused(this);
        }
    };
    // @Override
    UnusedContext.prototype.exitRule = function (listener) {
        if (listener.exitUnused) {
            listener.exitUnused(this);
        }
    };
    // @Override
    UnusedContext.prototype.accept = function (visitor) {
        if (visitor.visitUnused) {
            return visitor.visitUnused(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UnusedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UnusedContext = UnusedContext;
var UsableAreaContext = /** @class */ (function (_super) {
    __extends(UsableAreaContext, _super);
    function UsableAreaContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    UsableAreaContext.prototype.rectangle = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(RectangleContext);
        }
        else {
            return this.getRuleContext(i, RectangleContext);
        }
    };
    Object.defineProperty(UsableAreaContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_usableArea; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UsableAreaContext.prototype.enterRule = function (listener) {
        if (listener.enterUsableArea) {
            listener.enterUsableArea(this);
        }
    };
    // @Override
    UsableAreaContext.prototype.exitRule = function (listener) {
        if (listener.exitUsableArea) {
            listener.exitUsableArea(this);
        }
    };
    // @Override
    UsableAreaContext.prototype.accept = function (visitor) {
        if (visitor.visitUsableArea) {
            return visitor.visitUsableArea(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UsableAreaContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UsableAreaContext = UsableAreaContext;
var UserDataContext = /** @class */ (function (_super) {
    __extends(UserDataContext, _super);
    function UserDataContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    UserDataContext.prototype.userDataTag = function () {
        return this.getRuleContext(0, UserDataTagContext);
    };
    UserDataContext.prototype.IDENTIFIER = function (i) {
        if (i === undefined) {
            return this.getTokens(EDIF300Parser.IDENTIFIER);
        }
        else {
            return this.getToken(EDIF300Parser.IDENTIFIER, i);
        }
    };
    UserDataContext.prototype.integerToken = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(IntegerTokenContext);
        }
        else {
            return this.getRuleContext(i, IntegerTokenContext);
        }
    };
    UserDataContext.prototype.stringToken = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(StringTokenContext);
        }
        else {
            return this.getRuleContext(i, StringTokenContext);
        }
    };
    UserDataContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(UserDataContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_userData; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UserDataContext.prototype.enterRule = function (listener) {
        if (listener.enterUserData) {
            listener.enterUserData(this);
        }
    };
    // @Override
    UserDataContext.prototype.exitRule = function (listener) {
        if (listener.exitUserData) {
            listener.exitUserData(this);
        }
    };
    // @Override
    UserDataContext.prototype.accept = function (visitor) {
        if (visitor.visitUserData) {
            return visitor.visitUserData(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UserDataContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UserDataContext = UserDataContext;
var UserDataTagContext = /** @class */ (function (_super) {
    __extends(UserDataTagContext, _super);
    function UserDataTagContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    UserDataTagContext.prototype.IDENTIFIER = function () { return this.getToken(EDIF300Parser.IDENTIFIER, 0); };
    Object.defineProperty(UserDataTagContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_userDataTag; },
        enumerable: true,
        configurable: true
    });
    // @Override
    UserDataTagContext.prototype.enterRule = function (listener) {
        if (listener.enterUserDataTag) {
            listener.enterUserDataTag(this);
        }
    };
    // @Override
    UserDataTagContext.prototype.exitRule = function (listener) {
        if (listener.exitUserDataTag) {
            listener.exitUserDataTag(this);
        }
    };
    // @Override
    UserDataTagContext.prototype.accept = function (visitor) {
        if (visitor.visitUserDataTag) {
            return visitor.visitUserDataTag(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return UserDataTagContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.UserDataTagContext = UserDataTagContext;
var VersionContext = /** @class */ (function (_super) {
    __extends(VersionContext, _super);
    function VersionContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    VersionContext.prototype.stringValue = function () {
        return this.getRuleContext(0, StringValueContext);
    };
    Object.defineProperty(VersionContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_version; },
        enumerable: true,
        configurable: true
    });
    // @Override
    VersionContext.prototype.enterRule = function (listener) {
        if (listener.enterVersion) {
            listener.enterVersion(this);
        }
    };
    // @Override
    VersionContext.prototype.exitRule = function (listener) {
        if (listener.exitVersion) {
            listener.exitVersion(this);
        }
    };
    // @Override
    VersionContext.prototype.accept = function (visitor) {
        if (visitor.visitVersion) {
            return visitor.visitVersion(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return VersionContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.VersionContext = VersionContext;
var VerticalJustificationContext = /** @class */ (function (_super) {
    __extends(VerticalJustificationContext, _super);
    function VerticalJustificationContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    VerticalJustificationContext.prototype.bottomJustify = function () {
        return this.tryGetRuleContext(0, BottomJustifyContext);
    };
    VerticalJustificationContext.prototype.baselineJustify = function () {
        return this.tryGetRuleContext(0, BaselineJustifyContext);
    };
    VerticalJustificationContext.prototype.middleJustify = function () {
        return this.tryGetRuleContext(0, MiddleJustifyContext);
    };
    VerticalJustificationContext.prototype.caplineJustify = function () {
        return this.tryGetRuleContext(0, CaplineJustifyContext);
    };
    VerticalJustificationContext.prototype.topJustify = function () {
        return this.tryGetRuleContext(0, TopJustifyContext);
    };
    Object.defineProperty(VerticalJustificationContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_verticalJustification; },
        enumerable: true,
        configurable: true
    });
    // @Override
    VerticalJustificationContext.prototype.enterRule = function (listener) {
        if (listener.enterVerticalJustification) {
            listener.enterVerticalJustification(this);
        }
    };
    // @Override
    VerticalJustificationContext.prototype.exitRule = function (listener) {
        if (listener.exitVerticalJustification) {
            listener.exitVerticalJustification(this);
        }
    };
    // @Override
    VerticalJustificationContext.prototype.accept = function (visitor) {
        if (visitor.visitVerticalJustification) {
            return visitor.visitVerticalJustification(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return VerticalJustificationContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.VerticalJustificationContext = VerticalJustificationContext;
var ViewGroupContext = /** @class */ (function (_super) {
    __extends(ViewGroupContext, _super);
    function ViewGroupContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewGroupContext.prototype.viewGroupNameDef = function () {
        return this.getRuleContext(0, ViewGroupNameDefContext);
    };
    ViewGroupContext.prototype.viewGroupHeader = function () {
        return this.getRuleContext(0, ViewGroupHeaderContext);
    };
    ViewGroupContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ViewGroupContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    ViewGroupContext.prototype.viewGroupRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewGroupRefContext);
        }
        else {
            return this.getRuleContext(i, ViewGroupRefContext);
        }
    };
    ViewGroupContext.prototype.viewRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ViewRefContext);
        }
        else {
            return this.getRuleContext(i, ViewRefContext);
        }
    };
    Object.defineProperty(ViewGroupContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewGroup; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewGroupContext.prototype.enterRule = function (listener) {
        if (listener.enterViewGroup) {
            listener.enterViewGroup(this);
        }
    };
    // @Override
    ViewGroupContext.prototype.exitRule = function (listener) {
        if (listener.exitViewGroup) {
            listener.exitViewGroup(this);
        }
    };
    // @Override
    ViewGroupContext.prototype.accept = function (visitor) {
        if (visitor.visitViewGroup) {
            return visitor.visitViewGroup(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewGroupContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewGroupContext = ViewGroupContext;
var ViewGroupHeaderContext = /** @class */ (function (_super) {
    __extends(ViewGroupHeaderContext, _super);
    function ViewGroupHeaderContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewGroupHeaderContext.prototype.documentation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DocumentationContext);
        }
        else {
            return this.getRuleContext(i, DocumentationContext);
        }
    };
    ViewGroupHeaderContext.prototype.nameInformation = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(NameInformationContext);
        }
        else {
            return this.getRuleContext(i, NameInformationContext);
        }
    };
    ViewGroupHeaderContext.prototype.property = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyContext);
        }
        else {
            return this.getRuleContext(i, PropertyContext);
        }
    };
    ViewGroupHeaderContext.prototype.reason = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ReasonContext);
        }
        else {
            return this.getRuleContext(i, ReasonContext);
        }
    };
    Object.defineProperty(ViewGroupHeaderContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewGroupHeader; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewGroupHeaderContext.prototype.enterRule = function (listener) {
        if (listener.enterViewGroupHeader) {
            listener.enterViewGroupHeader(this);
        }
    };
    // @Override
    ViewGroupHeaderContext.prototype.exitRule = function (listener) {
        if (listener.exitViewGroupHeader) {
            listener.exitViewGroupHeader(this);
        }
    };
    // @Override
    ViewGroupHeaderContext.prototype.accept = function (visitor) {
        if (visitor.visitViewGroupHeader) {
            return visitor.visitViewGroupHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewGroupHeaderContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewGroupHeaderContext = ViewGroupHeaderContext;
var ViewGroupNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(ViewGroupNameCaseSensitiveContext, _super);
    function ViewGroupNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewGroupNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(ViewGroupNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewGroupNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewGroupNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterViewGroupNameCaseSensitive) {
            listener.enterViewGroupNameCaseSensitive(this);
        }
    };
    // @Override
    ViewGroupNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitViewGroupNameCaseSensitive) {
            listener.exitViewGroupNameCaseSensitive(this);
        }
    };
    // @Override
    ViewGroupNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitViewGroupNameCaseSensitive) {
            return visitor.visitViewGroupNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewGroupNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewGroupNameCaseSensitiveContext = ViewGroupNameCaseSensitiveContext;
var ViewGroupNameDefContext = /** @class */ (function (_super) {
    __extends(ViewGroupNameDefContext, _super);
    function ViewGroupNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewGroupNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(ViewGroupNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewGroupNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewGroupNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterViewGroupNameDef) {
            listener.enterViewGroupNameDef(this);
        }
    };
    // @Override
    ViewGroupNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitViewGroupNameDef) {
            listener.exitViewGroupNameDef(this);
        }
    };
    // @Override
    ViewGroupNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitViewGroupNameDef) {
            return visitor.visitViewGroupNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewGroupNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewGroupNameDefContext = ViewGroupNameDefContext;
var ViewGroupNameRefContext = /** @class */ (function (_super) {
    __extends(ViewGroupNameRefContext, _super);
    function ViewGroupNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewGroupNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(ViewGroupNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewGroupNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewGroupNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterViewGroupNameRef) {
            listener.enterViewGroupNameRef(this);
        }
    };
    // @Override
    ViewGroupNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitViewGroupNameRef) {
            listener.exitViewGroupNameRef(this);
        }
    };
    // @Override
    ViewGroupNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitViewGroupNameRef) {
            return visitor.visitViewGroupNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewGroupNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewGroupNameRefContext = ViewGroupNameRefContext;
var ViewGroupRefContext = /** @class */ (function (_super) {
    __extends(ViewGroupRefContext, _super);
    function ViewGroupRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewGroupRefContext.prototype.viewGroupNameRef = function () {
        return this.getRuleContext(0, ViewGroupNameRefContext);
    };
    Object.defineProperty(ViewGroupRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewGroupRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewGroupRefContext.prototype.enterRule = function (listener) {
        if (listener.enterViewGroupRef) {
            listener.enterViewGroupRef(this);
        }
    };
    // @Override
    ViewGroupRefContext.prototype.exitRule = function (listener) {
        if (listener.exitViewGroupRef) {
            listener.exitViewGroupRef(this);
        }
    };
    // @Override
    ViewGroupRefContext.prototype.accept = function (visitor) {
        if (visitor.visitViewGroupRef) {
            return visitor.visitViewGroupRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewGroupRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewGroupRefContext = ViewGroupRefContext;
var ViewNameCaseSensitiveContext = /** @class */ (function (_super) {
    __extends(ViewNameCaseSensitiveContext, _super);
    function ViewNameCaseSensitiveContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewNameCaseSensitiveContext.prototype.booleanToken = function () {
        return this.getRuleContext(0, BooleanTokenContext);
    };
    Object.defineProperty(ViewNameCaseSensitiveContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewNameCaseSensitive; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewNameCaseSensitiveContext.prototype.enterRule = function (listener) {
        if (listener.enterViewNameCaseSensitive) {
            listener.enterViewNameCaseSensitive(this);
        }
    };
    // @Override
    ViewNameCaseSensitiveContext.prototype.exitRule = function (listener) {
        if (listener.exitViewNameCaseSensitive) {
            listener.exitViewNameCaseSensitive(this);
        }
    };
    // @Override
    ViewNameCaseSensitiveContext.prototype.accept = function (visitor) {
        if (visitor.visitViewNameCaseSensitive) {
            return visitor.visitViewNameCaseSensitive(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewNameCaseSensitiveContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewNameCaseSensitiveContext = ViewNameCaseSensitiveContext;
var ViewNameDefContext = /** @class */ (function (_super) {
    __extends(ViewNameDefContext, _super);
    function ViewNameDefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewNameDefContext.prototype.nameDef = function () {
        return this.getRuleContext(0, NameDefContext);
    };
    Object.defineProperty(ViewNameDefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewNameDef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewNameDefContext.prototype.enterRule = function (listener) {
        if (listener.enterViewNameDef) {
            listener.enterViewNameDef(this);
        }
    };
    // @Override
    ViewNameDefContext.prototype.exitRule = function (listener) {
        if (listener.exitViewNameDef) {
            listener.exitViewNameDef(this);
        }
    };
    // @Override
    ViewNameDefContext.prototype.accept = function (visitor) {
        if (visitor.visitViewNameDef) {
            return visitor.visitViewNameDef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewNameDefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewNameDefContext = ViewNameDefContext;
var ViewNameDisplayContext = /** @class */ (function (_super) {
    __extends(ViewNameDisplayContext, _super);
    function ViewNameDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewNameDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    ViewNameDisplayContext.prototype.displayNameOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayNameOverrideContext);
        }
        else {
            return this.getRuleContext(i, DisplayNameOverrideContext);
        }
    };
    Object.defineProperty(ViewNameDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewNameDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewNameDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterViewNameDisplay) {
            listener.enterViewNameDisplay(this);
        }
    };
    // @Override
    ViewNameDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitViewNameDisplay) {
            listener.exitViewNameDisplay(this);
        }
    };
    // @Override
    ViewNameDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitViewNameDisplay) {
            return visitor.visitViewNameDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewNameDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewNameDisplayContext = ViewNameDisplayContext;
var ViewNameRefContext = /** @class */ (function (_super) {
    __extends(ViewNameRefContext, _super);
    function ViewNameRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewNameRefContext.prototype.nameRef = function () {
        return this.getRuleContext(0, NameRefContext);
    };
    Object.defineProperty(ViewNameRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewNameRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewNameRefContext.prototype.enterRule = function (listener) {
        if (listener.enterViewNameRef) {
            listener.enterViewNameRef(this);
        }
    };
    // @Override
    ViewNameRefContext.prototype.exitRule = function (listener) {
        if (listener.exitViewNameRef) {
            listener.exitViewNameRef(this);
        }
    };
    // @Override
    ViewNameRefContext.prototype.accept = function (visitor) {
        if (visitor.visitViewNameRef) {
            return visitor.visitViewNameRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewNameRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewNameRefContext = ViewNameRefContext;
var ViewPropertyDisplayContext = /** @class */ (function (_super) {
    __extends(ViewPropertyDisplayContext, _super);
    function ViewPropertyDisplayContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewPropertyDisplayContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    ViewPropertyDisplayContext.prototype.display = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DisplayContext);
        }
        else {
            return this.getRuleContext(i, DisplayContext);
        }
    };
    ViewPropertyDisplayContext.prototype.propertyNameDisplay = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyNameDisplayContext);
        }
        else {
            return this.getRuleContext(i, PropertyNameDisplayContext);
        }
    };
    Object.defineProperty(ViewPropertyDisplayContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewPropertyDisplay; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewPropertyDisplayContext.prototype.enterRule = function (listener) {
        if (listener.enterViewPropertyDisplay) {
            listener.enterViewPropertyDisplay(this);
        }
    };
    // @Override
    ViewPropertyDisplayContext.prototype.exitRule = function (listener) {
        if (listener.exitViewPropertyDisplay) {
            listener.exitViewPropertyDisplay(this);
        }
    };
    // @Override
    ViewPropertyDisplayContext.prototype.accept = function (visitor) {
        if (visitor.visitViewPropertyDisplay) {
            return visitor.visitViewPropertyDisplay(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewPropertyDisplayContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewPropertyDisplayContext = ViewPropertyDisplayContext;
var ViewPropertyOverrideContext = /** @class */ (function (_super) {
    __extends(ViewPropertyOverrideContext, _super);
    function ViewPropertyOverrideContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewPropertyOverrideContext.prototype.propertyNameRef = function () {
        return this.getRuleContext(0, PropertyNameRefContext);
    };
    ViewPropertyOverrideContext.prototype.typedValue = function () {
        return this.tryGetRuleContext(0, TypedValueContext);
    };
    ViewPropertyOverrideContext.prototype.untyped = function () {
        return this.tryGetRuleContext(0, UntypedContext);
    };
    ViewPropertyOverrideContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    ViewPropertyOverrideContext.prototype.fixed = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(FixedContext);
        }
        else {
            return this.getRuleContext(i, FixedContext);
        }
    };
    ViewPropertyOverrideContext.prototype.propertyOverride = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PropertyOverrideContext);
        }
        else {
            return this.getRuleContext(i, PropertyOverrideContext);
        }
    };
    Object.defineProperty(ViewPropertyOverrideContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewPropertyOverride; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewPropertyOverrideContext.prototype.enterRule = function (listener) {
        if (listener.enterViewPropertyOverride) {
            listener.enterViewPropertyOverride(this);
        }
    };
    // @Override
    ViewPropertyOverrideContext.prototype.exitRule = function (listener) {
        if (listener.exitViewPropertyOverride) {
            listener.exitViewPropertyOverride(this);
        }
    };
    // @Override
    ViewPropertyOverrideContext.prototype.accept = function (visitor) {
        if (visitor.visitViewPropertyOverride) {
            return visitor.visitViewPropertyOverride(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewPropertyOverrideContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewPropertyOverrideContext = ViewPropertyOverrideContext;
var ViewRefContext = /** @class */ (function (_super) {
    __extends(ViewRefContext, _super);
    function ViewRefContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    ViewRefContext.prototype.viewNameRef = function () {
        return this.getRuleContext(0, ViewNameRefContext);
    };
    ViewRefContext.prototype.clusterRef = function () {
        return this.tryGetRuleContext(0, ClusterRefContext);
    };
    Object.defineProperty(ViewRefContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_viewRef; },
        enumerable: true,
        configurable: true
    });
    // @Override
    ViewRefContext.prototype.enterRule = function (listener) {
        if (listener.enterViewRef) {
            listener.enterViewRef(this);
        }
    };
    // @Override
    ViewRefContext.prototype.exitRule = function (listener) {
        if (listener.exitViewRef) {
            listener.exitViewRef(this);
        }
    };
    // @Override
    ViewRefContext.prototype.accept = function (visitor) {
        if (visitor.visitViewRef) {
            return visitor.visitViewRef(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return ViewRefContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.ViewRefContext = ViewRefContext;
var VisibleContext = /** @class */ (function (_super) {
    __extends(VisibleContext, _super);
    function VisibleContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    VisibleContext.prototype.booleanValue = function () {
        return this.getRuleContext(0, BooleanValueContext);
    };
    Object.defineProperty(VisibleContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_visible; },
        enumerable: true,
        configurable: true
    });
    // @Override
    VisibleContext.prototype.enterRule = function (listener) {
        if (listener.enterVisible) {
            listener.enterVisible(this);
        }
    };
    // @Override
    VisibleContext.prototype.exitRule = function (listener) {
        if (listener.exitVisible) {
            listener.exitVisible(this);
        }
    };
    // @Override
    VisibleContext.prototype.accept = function (visitor) {
        if (visitor.visitVisible) {
            return visitor.visitVisible(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return VisibleContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.VisibleContext = VisibleContext;
var VoltContext = /** @class */ (function (_super) {
    __extends(VoltContext, _super);
    function VoltContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    VoltContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(VoltContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_volt; },
        enumerable: true,
        configurable: true
    });
    // @Override
    VoltContext.prototype.enterRule = function (listener) {
        if (listener.enterVolt) {
            listener.enterVolt(this);
        }
    };
    // @Override
    VoltContext.prototype.exitRule = function (listener) {
        if (listener.exitVolt) {
            listener.exitVolt(this);
        }
    };
    // @Override
    VoltContext.prototype.accept = function (visitor) {
        if (visitor.visitVolt) {
            return visitor.visitVolt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return VoltContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.VoltContext = VoltContext;
var VoltageMapContext = /** @class */ (function (_super) {
    __extends(VoltageMapContext, _super);
    function VoltageMapContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    VoltageMapContext.prototype.voltageValue = function () {
        return this.getRuleContext(0, VoltageValueContext);
    };
    Object.defineProperty(VoltageMapContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_voltageMap; },
        enumerable: true,
        configurable: true
    });
    // @Override
    VoltageMapContext.prototype.enterRule = function (listener) {
        if (listener.enterVoltageMap) {
            listener.enterVoltageMap(this);
        }
    };
    // @Override
    VoltageMapContext.prototype.exitRule = function (listener) {
        if (listener.exitVoltageMap) {
            listener.exitVoltageMap(this);
        }
    };
    // @Override
    VoltageMapContext.prototype.accept = function (visitor) {
        if (visitor.visitVoltageMap) {
            return visitor.visitVoltageMap(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return VoltageMapContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.VoltageMapContext = VoltageMapContext;
var VoltageValueContext = /** @class */ (function (_super) {
    __extends(VoltageValueContext, _super);
    function VoltageValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    VoltageValueContext.prototype.miNoMaxValue = function () {
        return this.getRuleContext(0, MiNoMaxValueContext);
    };
    Object.defineProperty(VoltageValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_voltageValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    VoltageValueContext.prototype.enterRule = function (listener) {
        if (listener.enterVoltageValue) {
            listener.enterVoltageValue(this);
        }
    };
    // @Override
    VoltageValueContext.prototype.exitRule = function (listener) {
        if (listener.exitVoltageValue) {
            listener.exitVoltageValue(this);
        }
    };
    // @Override
    VoltageValueContext.prototype.accept = function (visitor) {
        if (visitor.visitVoltageValue) {
            return visitor.visitVoltageValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return VoltageValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.VoltageValueContext = VoltageValueContext;
var WattContext = /** @class */ (function (_super) {
    __extends(WattContext, _super);
    function WattContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    WattContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(WattContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_watt; },
        enumerable: true,
        configurable: true
    });
    // @Override
    WattContext.prototype.enterRule = function (listener) {
        if (listener.enterWatt) {
            listener.enterWatt(this);
        }
    };
    // @Override
    WattContext.prototype.exitRule = function (listener) {
        if (listener.exitWatt) {
            listener.exitWatt(this);
        }
    };
    // @Override
    WattContext.prototype.accept = function (visitor) {
        if (visitor.visitWatt) {
            return visitor.visitWatt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return WattContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.WattContext = WattContext;
var WeakContext = /** @class */ (function (_super) {
    __extends(WeakContext, _super);
    function WeakContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    WeakContext.prototype.logicNameRef = function () {
        return this.getRuleContext(0, LogicNameRefContext);
    };
    Object.defineProperty(WeakContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_weak; },
        enumerable: true,
        configurable: true
    });
    // @Override
    WeakContext.prototype.enterRule = function (listener) {
        if (listener.enterWeak) {
            listener.enterWeak(this);
        }
    };
    // @Override
    WeakContext.prototype.exitRule = function (listener) {
        if (listener.exitWeak) {
            listener.exitWeak(this);
        }
    };
    // @Override
    WeakContext.prototype.accept = function (visitor) {
        if (visitor.visitWeak) {
            return visitor.visitWeak(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return WeakContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.WeakContext = WeakContext;
var WeakJoinedContext = /** @class */ (function (_super) {
    __extends(WeakJoinedContext, _super);
    function WeakJoinedContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    WeakJoinedContext.prototype.interfaceJoined = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(InterfaceJoinedContext);
        }
        else {
            return this.getRuleContext(i, InterfaceJoinedContext);
        }
    };
    WeakJoinedContext.prototype.portRef = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(PortRefContext);
        }
        else {
            return this.getRuleContext(i, PortRefContext);
        }
    };
    Object.defineProperty(WeakJoinedContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_weakJoined; },
        enumerable: true,
        configurable: true
    });
    // @Override
    WeakJoinedContext.prototype.enterRule = function (listener) {
        if (listener.enterWeakJoined) {
            listener.enterWeakJoined(this);
        }
    };
    // @Override
    WeakJoinedContext.prototype.exitRule = function (listener) {
        if (listener.exitWeakJoined) {
            listener.exitWeakJoined(this);
        }
    };
    // @Override
    WeakJoinedContext.prototype.accept = function (visitor) {
        if (visitor.visitWeakJoined) {
            return visitor.visitWeakJoined(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return WeakJoinedContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.WeakJoinedContext = WeakJoinedContext;
var WeberContext = /** @class */ (function (_super) {
    __extends(WeberContext, _super);
    function WeberContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    WeberContext.prototype.unitExponent = function () {
        return this.getRuleContext(0, UnitExponentContext);
    };
    Object.defineProperty(WeberContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_weber; },
        enumerable: true,
        configurable: true
    });
    // @Override
    WeberContext.prototype.enterRule = function (listener) {
        if (listener.enterWeber) {
            listener.enterWeber(this);
        }
    };
    // @Override
    WeberContext.prototype.exitRule = function (listener) {
        if (listener.exitWeber) {
            listener.exitWeber(this);
        }
    };
    // @Override
    WeberContext.prototype.accept = function (visitor) {
        if (visitor.visitWeber) {
            return visitor.visitWeber(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return WeberContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.WeberContext = WeberContext;
var WidePortContext = /** @class */ (function (_super) {
    __extends(WidePortContext, _super);
    function WidePortContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(WidePortContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_widePort; },
        enumerable: true,
        configurable: true
    });
    // @Override
    WidePortContext.prototype.enterRule = function (listener) {
        if (listener.enterWidePort) {
            listener.enterWidePort(this);
        }
    };
    // @Override
    WidePortContext.prototype.exitRule = function (listener) {
        if (listener.exitWidePort) {
            listener.exitWidePort(this);
        }
    };
    // @Override
    WidePortContext.prototype.accept = function (visitor) {
        if (visitor.visitWidePort) {
            return visitor.visitWidePort(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return WidePortContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.WidePortContext = WidePortContext;
var WideWireContext = /** @class */ (function (_super) {
    __extends(WideWireContext, _super);
    function WideWireContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Object.defineProperty(WideWireContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_wideWire; },
        enumerable: true,
        configurable: true
    });
    // @Override
    WideWireContext.prototype.enterRule = function (listener) {
        if (listener.enterWideWire) {
            listener.enterWideWire(this);
        }
    };
    // @Override
    WideWireContext.prototype.exitRule = function (listener) {
        if (listener.exitWideWire) {
            listener.exitWideWire(this);
        }
    };
    // @Override
    WideWireContext.prototype.accept = function (visitor) {
        if (visitor.visitWideWire) {
            return visitor.visitWideWire(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return WideWireContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.WideWireContext = WideWireContext;
var WrittenContext = /** @class */ (function (_super) {
    __extends(WrittenContext, _super);
    function WrittenContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    WrittenContext.prototype.timeStamp = function () {
        return this.getRuleContext(0, TimeStampContext);
    };
    WrittenContext.prototype.author = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(AuthorContext);
        }
        else {
            return this.getRuleContext(i, AuthorContext);
        }
    };
    WrittenContext.prototype.comment = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(CommentContext);
        }
        else {
            return this.getRuleContext(i, CommentContext);
        }
    };
    WrittenContext.prototype.dataOrigin = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(DataOriginContext);
        }
        else {
            return this.getRuleContext(i, DataOriginContext);
        }
    };
    WrittenContext.prototype.program = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(ProgramContext);
        }
        else {
            return this.getRuleContext(i, ProgramContext);
        }
    };
    WrittenContext.prototype.userData = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(UserDataContext);
        }
        else {
            return this.getRuleContext(i, UserDataContext);
        }
    };
    Object.defineProperty(WrittenContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_written; },
        enumerable: true,
        configurable: true
    });
    // @Override
    WrittenContext.prototype.enterRule = function (listener) {
        if (listener.enterWritten) {
            listener.enterWritten(this);
        }
    };
    // @Override
    WrittenContext.prototype.exitRule = function (listener) {
        if (listener.exitWritten) {
            listener.exitWritten(this);
        }
    };
    // @Override
    WrittenContext.prototype.accept = function (visitor) {
        if (visitor.visitWritten) {
            return visitor.visitWritten(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return WrittenContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.WrittenContext = WrittenContext;
var XCoordinateContext = /** @class */ (function (_super) {
    __extends(XCoordinateContext, _super);
    function XCoordinateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    XCoordinateContext.prototype.integerValue = function () {
        return this.getRuleContext(0, IntegerValueContext);
    };
    Object.defineProperty(XCoordinateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_xCoordinate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    XCoordinateContext.prototype.enterRule = function (listener) {
        if (listener.enterXCoordinate) {
            listener.enterXCoordinate(this);
        }
    };
    // @Override
    XCoordinateContext.prototype.exitRule = function (listener) {
        if (listener.exitXCoordinate) {
            listener.exitXCoordinate(this);
        }
    };
    // @Override
    XCoordinateContext.prototype.accept = function (visitor) {
        if (visitor.visitXCoordinate) {
            return visitor.visitXCoordinate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return XCoordinateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.XCoordinateContext = XCoordinateContext;
var XNumberValueContext = /** @class */ (function (_super) {
    __extends(XNumberValueContext, _super);
    function XNumberValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    XNumberValueContext.prototype.numberValue = function () {
        return this.getRuleContext(0, NumberValueContext);
    };
    Object.defineProperty(XNumberValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_xNumberValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    XNumberValueContext.prototype.enterRule = function (listener) {
        if (listener.enterXNumberValue) {
            listener.enterXNumberValue(this);
        }
    };
    // @Override
    XNumberValueContext.prototype.exitRule = function (listener) {
        if (listener.exitXNumberValue) {
            listener.exitXNumberValue(this);
        }
    };
    // @Override
    XNumberValueContext.prototype.accept = function (visitor) {
        if (visitor.visitXNumberValue) {
            return visitor.visitXNumberValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return XNumberValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.XNumberValueContext = XNumberValueContext;
var Xor_Context = /** @class */ (function (_super) {
    __extends(Xor_Context, _super);
    function Xor_Context(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    Xor_Context.prototype.booleanExpression = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(BooleanExpressionContext);
        }
        else {
            return this.getRuleContext(i, BooleanExpressionContext);
        }
    };
    Object.defineProperty(Xor_Context.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_xor_; },
        enumerable: true,
        configurable: true
    });
    // @Override
    Xor_Context.prototype.enterRule = function (listener) {
        if (listener.enterXor_) {
            listener.enterXor_(this);
        }
    };
    // @Override
    Xor_Context.prototype.exitRule = function (listener) {
        if (listener.exitXor_) {
            listener.exitXor_(this);
        }
    };
    // @Override
    Xor_Context.prototype.accept = function (visitor) {
        if (visitor.visitXor_) {
            return visitor.visitXor_(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return Xor_Context;
}(ParserRuleContext_1.ParserRuleContext));
exports.Xor_Context = Xor_Context;
var YCoordinateContext = /** @class */ (function (_super) {
    __extends(YCoordinateContext, _super);
    function YCoordinateContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    YCoordinateContext.prototype.integerValue = function () {
        return this.getRuleContext(0, IntegerValueContext);
    };
    Object.defineProperty(YCoordinateContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_yCoordinate; },
        enumerable: true,
        configurable: true
    });
    // @Override
    YCoordinateContext.prototype.enterRule = function (listener) {
        if (listener.enterYCoordinate) {
            listener.enterYCoordinate(this);
        }
    };
    // @Override
    YCoordinateContext.prototype.exitRule = function (listener) {
        if (listener.exitYCoordinate) {
            listener.exitYCoordinate(this);
        }
    };
    // @Override
    YCoordinateContext.prototype.accept = function (visitor) {
        if (visitor.visitYCoordinate) {
            return visitor.visitYCoordinate(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return YCoordinateContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.YCoordinateContext = YCoordinateContext;
var YearContext = /** @class */ (function (_super) {
    __extends(YearContext, _super);
    function YearContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    YearContext.prototype.yearNumber = function (i) {
        if (i === undefined) {
            return this.getRuleContexts(YearNumberContext);
        }
        else {
            return this.getRuleContext(i, YearNumberContext);
        }
    };
    Object.defineProperty(YearContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_year; },
        enumerable: true,
        configurable: true
    });
    // @Override
    YearContext.prototype.enterRule = function (listener) {
        if (listener.enterYear) {
            listener.enterYear(this);
        }
    };
    // @Override
    YearContext.prototype.exitRule = function (listener) {
        if (listener.exitYear) {
            listener.exitYear(this);
        }
    };
    // @Override
    YearContext.prototype.accept = function (visitor) {
        if (visitor.visitYear) {
            return visitor.visitYear(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return YearContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.YearContext = YearContext;
var YearNumberContext = /** @class */ (function (_super) {
    __extends(YearNumberContext, _super);
    function YearNumberContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    YearNumberContext.prototype.integerToken = function () {
        return this.getRuleContext(0, IntegerTokenContext);
    };
    Object.defineProperty(YearNumberContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_yearNumber; },
        enumerable: true,
        configurable: true
    });
    // @Override
    YearNumberContext.prototype.enterRule = function (listener) {
        if (listener.enterYearNumber) {
            listener.enterYearNumber(this);
        }
    };
    // @Override
    YearNumberContext.prototype.exitRule = function (listener) {
        if (listener.exitYearNumber) {
            listener.exitYearNumber(this);
        }
    };
    // @Override
    YearNumberContext.prototype.accept = function (visitor) {
        if (visitor.visitYearNumber) {
            return visitor.visitYearNumber(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return YearNumberContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.YearNumberContext = YearNumberContext;
var YNumberValueContext = /** @class */ (function (_super) {
    __extends(YNumberValueContext, _super);
    function YNumberValueContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    YNumberValueContext.prototype.numberValue = function () {
        return this.getRuleContext(0, NumberValueContext);
    };
    Object.defineProperty(YNumberValueContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_yNumberValue; },
        enumerable: true,
        configurable: true
    });
    // @Override
    YNumberValueContext.prototype.enterRule = function (listener) {
        if (listener.enterYNumberValue) {
            listener.enterYNumberValue(this);
        }
    };
    // @Override
    YNumberValueContext.prototype.exitRule = function (listener) {
        if (listener.exitYNumberValue) {
            listener.exitYNumberValue(this);
        }
    };
    // @Override
    YNumberValueContext.prototype.accept = function (visitor) {
        if (visitor.visitYNumberValue) {
            return visitor.visitYNumberValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return YNumberValueContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.YNumberValueContext = YNumberValueContext;
var IntegerTokenContext = /** @class */ (function (_super) {
    __extends(IntegerTokenContext, _super);
    function IntegerTokenContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    IntegerTokenContext.prototype.DECIMAL_LITERAL = function () { return this.getToken(EDIF300Parser.DECIMAL_LITERAL, 0); };
    Object.defineProperty(IntegerTokenContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_integerToken; },
        enumerable: true,
        configurable: true
    });
    // @Override
    IntegerTokenContext.prototype.enterRule = function (listener) {
        if (listener.enterIntegerToken) {
            listener.enterIntegerToken(this);
        }
    };
    // @Override
    IntegerTokenContext.prototype.exitRule = function (listener) {
        if (listener.exitIntegerToken) {
            listener.exitIntegerToken(this);
        }
    };
    // @Override
    IntegerTokenContext.prototype.accept = function (visitor) {
        if (visitor.visitIntegerToken) {
            return visitor.visitIntegerToken(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return IntegerTokenContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.IntegerTokenContext = IntegerTokenContext;
var StringTokenContext = /** @class */ (function (_super) {
    __extends(StringTokenContext, _super);
    function StringTokenContext(parent, invokingState) {
        return _super.call(this, parent, invokingState) || this;
    }
    StringTokenContext.prototype.STRING_LITERAL = function () { return this.getToken(EDIF300Parser.STRING_LITERAL, 0); };
    Object.defineProperty(StringTokenContext.prototype, "ruleIndex", {
        // @Override
        get: function () { return EDIF300Parser.RULE_stringToken; },
        enumerable: true,
        configurable: true
    });
    // @Override
    StringTokenContext.prototype.enterRule = function (listener) {
        if (listener.enterStringToken) {
            listener.enterStringToken(this);
        }
    };
    // @Override
    StringTokenContext.prototype.exitRule = function (listener) {
        if (listener.exitStringToken) {
            listener.exitStringToken(this);
        }
    };
    // @Override
    StringTokenContext.prototype.accept = function (visitor) {
        if (visitor.visitStringToken) {
            return visitor.visitStringToken(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    };
    return StringTokenContext;
}(ParserRuleContext_1.ParserRuleContext));
exports.StringTokenContext = StringTokenContext;
