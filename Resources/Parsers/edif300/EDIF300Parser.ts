// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/edif300/EDIF300.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { FailedPredicateException } from "antlr4ts/FailedPredicateException";
import { NotNull } from "antlr4ts/Decorators";
import { NoViableAltException } from "antlr4ts/NoViableAltException";
import { Override } from "antlr4ts/Decorators";
import { Parser } from "antlr4ts/Parser";
import { ParserRuleContext } from "antlr4ts/ParserRuleContext";
import { ParserATNSimulator } from "antlr4ts/atn/ParserATNSimulator";
import { ParseTreeListener } from "antlr4ts/tree/ParseTreeListener";
import { ParseTreeVisitor } from "antlr4ts/tree/ParseTreeVisitor";
import { RecognitionException } from "antlr4ts/RecognitionException";
import { RuleContext } from "antlr4ts/RuleContext";
//import { RuleVersion } from "antlr4ts/RuleVersion";
import { TerminalNode } from "antlr4ts/tree/TerminalNode";
import { Token } from "antlr4ts/Token";
import { TokenStream } from "antlr4ts/TokenStream";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";

import { EDIF300Listener } from "./EDIF300Listener";

export class EDIF300Parser extends Parser {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly T__39 = 40;
	public static readonly T__40 = 41;
	public static readonly T__41 = 42;
	public static readonly T__42 = 43;
	public static readonly T__43 = 44;
	public static readonly T__44 = 45;
	public static readonly T__45 = 46;
	public static readonly T__46 = 47;
	public static readonly T__47 = 48;
	public static readonly T__48 = 49;
	public static readonly T__49 = 50;
	public static readonly T__50 = 51;
	public static readonly T__51 = 52;
	public static readonly T__52 = 53;
	public static readonly T__53 = 54;
	public static readonly T__54 = 55;
	public static readonly T__55 = 56;
	public static readonly T__56 = 57;
	public static readonly T__57 = 58;
	public static readonly T__58 = 59;
	public static readonly T__59 = 60;
	public static readonly T__60 = 61;
	public static readonly T__61 = 62;
	public static readonly T__62 = 63;
	public static readonly T__63 = 64;
	public static readonly T__64 = 65;
	public static readonly T__65 = 66;
	public static readonly T__66 = 67;
	public static readonly T__67 = 68;
	public static readonly T__68 = 69;
	public static readonly T__69 = 70;
	public static readonly T__70 = 71;
	public static readonly T__71 = 72;
	public static readonly T__72 = 73;
	public static readonly T__73 = 74;
	public static readonly T__74 = 75;
	public static readonly T__75 = 76;
	public static readonly T__76 = 77;
	public static readonly T__77 = 78;
	public static readonly T__78 = 79;
	public static readonly T__79 = 80;
	public static readonly T__80 = 81;
	public static readonly T__81 = 82;
	public static readonly T__82 = 83;
	public static readonly T__83 = 84;
	public static readonly T__84 = 85;
	public static readonly T__85 = 86;
	public static readonly T__86 = 87;
	public static readonly T__87 = 88;
	public static readonly T__88 = 89;
	public static readonly T__89 = 90;
	public static readonly T__90 = 91;
	public static readonly T__91 = 92;
	public static readonly T__92 = 93;
	public static readonly T__93 = 94;
	public static readonly T__94 = 95;
	public static readonly T__95 = 96;
	public static readonly T__96 = 97;
	public static readonly T__97 = 98;
	public static readonly T__98 = 99;
	public static readonly T__99 = 100;
	public static readonly T__100 = 101;
	public static readonly T__101 = 102;
	public static readonly T__102 = 103;
	public static readonly T__103 = 104;
	public static readonly T__104 = 105;
	public static readonly T__105 = 106;
	public static readonly T__106 = 107;
	public static readonly T__107 = 108;
	public static readonly T__108 = 109;
	public static readonly T__109 = 110;
	public static readonly T__110 = 111;
	public static readonly T__111 = 112;
	public static readonly T__112 = 113;
	public static readonly T__113 = 114;
	public static readonly T__114 = 115;
	public static readonly T__115 = 116;
	public static readonly T__116 = 117;
	public static readonly T__117 = 118;
	public static readonly T__118 = 119;
	public static readonly T__119 = 120;
	public static readonly T__120 = 121;
	public static readonly T__121 = 122;
	public static readonly T__122 = 123;
	public static readonly T__123 = 124;
	public static readonly T__124 = 125;
	public static readonly T__125 = 126;
	public static readonly T__126 = 127;
	public static readonly T__127 = 128;
	public static readonly T__128 = 129;
	public static readonly T__129 = 130;
	public static readonly T__130 = 131;
	public static readonly T__131 = 132;
	public static readonly T__132 = 133;
	public static readonly T__133 = 134;
	public static readonly T__134 = 135;
	public static readonly T__135 = 136;
	public static readonly T__136 = 137;
	public static readonly T__137 = 138;
	public static readonly T__138 = 139;
	public static readonly T__139 = 140;
	public static readonly T__140 = 141;
	public static readonly T__141 = 142;
	public static readonly T__142 = 143;
	public static readonly T__143 = 144;
	public static readonly T__144 = 145;
	public static readonly T__145 = 146;
	public static readonly T__146 = 147;
	public static readonly T__147 = 148;
	public static readonly T__148 = 149;
	public static readonly T__149 = 150;
	public static readonly T__150 = 151;
	public static readonly T__151 = 152;
	public static readonly T__152 = 153;
	public static readonly T__153 = 154;
	public static readonly T__154 = 155;
	public static readonly T__155 = 156;
	public static readonly T__156 = 157;
	public static readonly T__157 = 158;
	public static readonly T__158 = 159;
	public static readonly T__159 = 160;
	public static readonly T__160 = 161;
	public static readonly T__161 = 162;
	public static readonly T__162 = 163;
	public static readonly T__163 = 164;
	public static readonly T__164 = 165;
	public static readonly T__165 = 166;
	public static readonly T__166 = 167;
	public static readonly T__167 = 168;
	public static readonly T__168 = 169;
	public static readonly T__169 = 170;
	public static readonly T__170 = 171;
	public static readonly T__171 = 172;
	public static readonly T__172 = 173;
	public static readonly T__173 = 174;
	public static readonly T__174 = 175;
	public static readonly T__175 = 176;
	public static readonly T__176 = 177;
	public static readonly T__177 = 178;
	public static readonly T__178 = 179;
	public static readonly T__179 = 180;
	public static readonly T__180 = 181;
	public static readonly T__181 = 182;
	public static readonly T__182 = 183;
	public static readonly T__183 = 184;
	public static readonly T__184 = 185;
	public static readonly T__185 = 186;
	public static readonly T__186 = 187;
	public static readonly T__187 = 188;
	public static readonly T__188 = 189;
	public static readonly T__189 = 190;
	public static readonly T__190 = 191;
	public static readonly T__191 = 192;
	public static readonly T__192 = 193;
	public static readonly T__193 = 194;
	public static readonly T__194 = 195;
	public static readonly T__195 = 196;
	public static readonly T__196 = 197;
	public static readonly T__197 = 198;
	public static readonly T__198 = 199;
	public static readonly T__199 = 200;
	public static readonly T__200 = 201;
	public static readonly T__201 = 202;
	public static readonly T__202 = 203;
	public static readonly T__203 = 204;
	public static readonly T__204 = 205;
	public static readonly T__205 = 206;
	public static readonly T__206 = 207;
	public static readonly T__207 = 208;
	public static readonly T__208 = 209;
	public static readonly T__209 = 210;
	public static readonly T__210 = 211;
	public static readonly T__211 = 212;
	public static readonly T__212 = 213;
	public static readonly T__213 = 214;
	public static readonly T__214 = 215;
	public static readonly T__215 = 216;
	public static readonly T__216 = 217;
	public static readonly T__217 = 218;
	public static readonly T__218 = 219;
	public static readonly T__219 = 220;
	public static readonly T__220 = 221;
	public static readonly T__221 = 222;
	public static readonly T__222 = 223;
	public static readonly T__223 = 224;
	public static readonly T__224 = 225;
	public static readonly T__225 = 226;
	public static readonly T__226 = 227;
	public static readonly T__227 = 228;
	public static readonly T__228 = 229;
	public static readonly T__229 = 230;
	public static readonly T__230 = 231;
	public static readonly T__231 = 232;
	public static readonly T__232 = 233;
	public static readonly T__233 = 234;
	public static readonly T__234 = 235;
	public static readonly T__235 = 236;
	public static readonly T__236 = 237;
	public static readonly T__237 = 238;
	public static readonly T__238 = 239;
	public static readonly T__239 = 240;
	public static readonly T__240 = 241;
	public static readonly T__241 = 242;
	public static readonly T__242 = 243;
	public static readonly T__243 = 244;
	public static readonly T__244 = 245;
	public static readonly T__245 = 246;
	public static readonly T__246 = 247;
	public static readonly T__247 = 248;
	public static readonly T__248 = 249;
	public static readonly T__249 = 250;
	public static readonly T__250 = 251;
	public static readonly T__251 = 252;
	public static readonly T__252 = 253;
	public static readonly T__253 = 254;
	public static readonly T__254 = 255;
	public static readonly T__255 = 256;
	public static readonly T__256 = 257;
	public static readonly T__257 = 258;
	public static readonly T__258 = 259;
	public static readonly T__259 = 260;
	public static readonly T__260 = 261;
	public static readonly T__261 = 262;
	public static readonly T__262 = 263;
	public static readonly T__263 = 264;
	public static readonly T__264 = 265;
	public static readonly T__265 = 266;
	public static readonly T__266 = 267;
	public static readonly T__267 = 268;
	public static readonly T__268 = 269;
	public static readonly T__269 = 270;
	public static readonly T__270 = 271;
	public static readonly T__271 = 272;
	public static readonly T__272 = 273;
	public static readonly T__273 = 274;
	public static readonly T__274 = 275;
	public static readonly T__275 = 276;
	public static readonly T__276 = 277;
	public static readonly T__277 = 278;
	public static readonly T__278 = 279;
	public static readonly T__279 = 280;
	public static readonly T__280 = 281;
	public static readonly T__281 = 282;
	public static readonly T__282 = 283;
	public static readonly T__283 = 284;
	public static readonly T__284 = 285;
	public static readonly T__285 = 286;
	public static readonly T__286 = 287;
	public static readonly T__287 = 288;
	public static readonly T__288 = 289;
	public static readonly T__289 = 290;
	public static readonly T__290 = 291;
	public static readonly T__291 = 292;
	public static readonly T__292 = 293;
	public static readonly T__293 = 294;
	public static readonly T__294 = 295;
	public static readonly T__295 = 296;
	public static readonly T__296 = 297;
	public static readonly T__297 = 298;
	public static readonly T__298 = 299;
	public static readonly T__299 = 300;
	public static readonly T__300 = 301;
	public static readonly T__301 = 302;
	public static readonly T__302 = 303;
	public static readonly T__303 = 304;
	public static readonly T__304 = 305;
	public static readonly T__305 = 306;
	public static readonly T__306 = 307;
	public static readonly T__307 = 308;
	public static readonly T__308 = 309;
	public static readonly T__309 = 310;
	public static readonly T__310 = 311;
	public static readonly T__311 = 312;
	public static readonly T__312 = 313;
	public static readonly T__313 = 314;
	public static readonly T__314 = 315;
	public static readonly T__315 = 316;
	public static readonly T__316 = 317;
	public static readonly T__317 = 318;
	public static readonly T__318 = 319;
	public static readonly T__319 = 320;
	public static readonly T__320 = 321;
	public static readonly T__321 = 322;
	public static readonly T__322 = 323;
	public static readonly T__323 = 324;
	public static readonly T__324 = 325;
	public static readonly T__325 = 326;
	public static readonly T__326 = 327;
	public static readonly T__327 = 328;
	public static readonly T__328 = 329;
	public static readonly T__329 = 330;
	public static readonly T__330 = 331;
	public static readonly T__331 = 332;
	public static readonly T__332 = 333;
	public static readonly T__333 = 334;
	public static readonly T__334 = 335;
	public static readonly T__335 = 336;
	public static readonly T__336 = 337;
	public static readonly T__337 = 338;
	public static readonly T__338 = 339;
	public static readonly T__339 = 340;
	public static readonly T__340 = 341;
	public static readonly T__341 = 342;
	public static readonly T__342 = 343;
	public static readonly T__343 = 344;
	public static readonly T__344 = 345;
	public static readonly T__345 = 346;
	public static readonly T__346 = 347;
	public static readonly T__347 = 348;
	public static readonly T__348 = 349;
	public static readonly T__349 = 350;
	public static readonly T__350 = 351;
	public static readonly T__351 = 352;
	public static readonly T__352 = 353;
	public static readonly T__353 = 354;
	public static readonly T__354 = 355;
	public static readonly T__355 = 356;
	public static readonly T__356 = 357;
	public static readonly T__357 = 358;
	public static readonly T__358 = 359;
	public static readonly T__359 = 360;
	public static readonly T__360 = 361;
	public static readonly T__361 = 362;
	public static readonly T__362 = 363;
	public static readonly T__363 = 364;
	public static readonly T__364 = 365;
	public static readonly T__365 = 366;
	public static readonly T__366 = 367;
	public static readonly T__367 = 368;
	public static readonly T__368 = 369;
	public static readonly T__369 = 370;
	public static readonly T__370 = 371;
	public static readonly T__371 = 372;
	public static readonly T__372 = 373;
	public static readonly T__373 = 374;
	public static readonly T__374 = 375;
	public static readonly T__375 = 376;
	public static readonly T__376 = 377;
	public static readonly T__377 = 378;
	public static readonly T__378 = 379;
	public static readonly T__379 = 380;
	public static readonly T__380 = 381;
	public static readonly T__381 = 382;
	public static readonly T__382 = 383;
	public static readonly T__383 = 384;
	public static readonly T__384 = 385;
	public static readonly T__385 = 386;
	public static readonly T__386 = 387;
	public static readonly T__387 = 388;
	public static readonly T__388 = 389;
	public static readonly T__389 = 390;
	public static readonly T__390 = 391;
	public static readonly T__391 = 392;
	public static readonly T__392 = 393;
	public static readonly T__393 = 394;
	public static readonly T__394 = 395;
	public static readonly T__395 = 396;
	public static readonly T__396 = 397;
	public static readonly T__397 = 398;
	public static readonly T__398 = 399;
	public static readonly T__399 = 400;
	public static readonly T__400 = 401;
	public static readonly T__401 = 402;
	public static readonly T__402 = 403;
	public static readonly T__403 = 404;
	public static readonly T__404 = 405;
	public static readonly T__405 = 406;
	public static readonly T__406 = 407;
	public static readonly T__407 = 408;
	public static readonly T__408 = 409;
	public static readonly T__409 = 410;
	public static readonly T__410 = 411;
	public static readonly T__411 = 412;
	public static readonly T__412 = 413;
	public static readonly T__413 = 414;
	public static readonly T__414 = 415;
	public static readonly T__415 = 416;
	public static readonly T__416 = 417;
	public static readonly T__417 = 418;
	public static readonly T__418 = 419;
	public static readonly T__419 = 420;
	public static readonly T__420 = 421;
	public static readonly T__421 = 422;
	public static readonly T__422 = 423;
	public static readonly T__423 = 424;
	public static readonly T__424 = 425;
	public static readonly T__425 = 426;
	public static readonly T__426 = 427;
	public static readonly T__427 = 428;
	public static readonly T__428 = 429;
	public static readonly T__429 = 430;
	public static readonly T__430 = 431;
	public static readonly T__431 = 432;
	public static readonly T__432 = 433;
	public static readonly T__433 = 434;
	public static readonly T__434 = 435;
	public static readonly T__435 = 436;
	public static readonly T__436 = 437;
	public static readonly T__437 = 438;
	public static readonly T__438 = 439;
	public static readonly T__439 = 440;
	public static readonly T__440 = 441;
	public static readonly T__441 = 442;
	public static readonly T__442 = 443;
	public static readonly T__443 = 444;
	public static readonly T__444 = 445;
	public static readonly T__445 = 446;
	public static readonly T__446 = 447;
	public static readonly T__447 = 448;
	public static readonly T__448 = 449;
	public static readonly T__449 = 450;
	public static readonly T__450 = 451;
	public static readonly T__451 = 452;
	public static readonly T__452 = 453;
	public static readonly T__453 = 454;
	public static readonly T__454 = 455;
	public static readonly T__455 = 456;
	public static readonly T__456 = 457;
	public static readonly T__457 = 458;
	public static readonly T__458 = 459;
	public static readonly T__459 = 460;
	public static readonly T__460 = 461;
	public static readonly T__461 = 462;
	public static readonly T__462 = 463;
	public static readonly T__463 = 464;
	public static readonly T__464 = 465;
	public static readonly T__465 = 466;
	public static readonly T__466 = 467;
	public static readonly T__467 = 468;
	public static readonly T__468 = 469;
	public static readonly T__469 = 470;
	public static readonly T__470 = 471;
	public static readonly T__471 = 472;
	public static readonly T__472 = 473;
	public static readonly T__473 = 474;
	public static readonly T__474 = 475;
	public static readonly T__475 = 476;
	public static readonly T__476 = 477;
	public static readonly T__477 = 478;
	public static readonly T__478 = 479;
	public static readonly T__479 = 480;
	public static readonly T__480 = 481;
	public static readonly T__481 = 482;
	public static readonly T__482 = 483;
	public static readonly T__483 = 484;
	public static readonly T__484 = 485;
	public static readonly T__485 = 486;
	public static readonly T__486 = 487;
	public static readonly T__487 = 488;
	public static readonly T__488 = 489;
	public static readonly T__489 = 490;
	public static readonly T__490 = 491;
	public static readonly T__491 = 492;
	public static readonly T__492 = 493;
	public static readonly T__493 = 494;
	public static readonly T__494 = 495;
	public static readonly T__495 = 496;
	public static readonly T__496 = 497;
	public static readonly T__497 = 498;
	public static readonly T__498 = 499;
	public static readonly T__499 = 500;
	public static readonly T__500 = 501;
	public static readonly T__501 = 502;
	public static readonly T__502 = 503;
	public static readonly T__503 = 504;
	public static readonly T__504 = 505;
	public static readonly T__505 = 506;
	public static readonly T__506 = 507;
	public static readonly T__507 = 508;
	public static readonly T__508 = 509;
	public static readonly T__509 = 510;
	public static readonly T__510 = 511;
	public static readonly T__511 = 512;
	public static readonly T__512 = 513;
	public static readonly T__513 = 514;
	public static readonly T__514 = 515;
	public static readonly T__515 = 516;
	public static readonly T__516 = 517;
	public static readonly T__517 = 518;
	public static readonly T__518 = 519;
	public static readonly T__519 = 520;
	public static readonly T__520 = 521;
	public static readonly T__521 = 522;
	public static readonly T__522 = 523;
	public static readonly T__523 = 524;
	public static readonly T__524 = 525;
	public static readonly T__525 = 526;
	public static readonly T__526 = 527;
	public static readonly T__527 = 528;
	public static readonly T__528 = 529;
	public static readonly T__529 = 530;
	public static readonly T__530 = 531;
	public static readonly T__531 = 532;
	public static readonly T__532 = 533;
	public static readonly T__533 = 534;
	public static readonly T__534 = 535;
	public static readonly T__535 = 536;
	public static readonly T__536 = 537;
	public static readonly T__537 = 538;
	public static readonly T__538 = 539;
	public static readonly T__539 = 540;
	public static readonly T__540 = 541;
	public static readonly T__541 = 542;
	public static readonly T__542 = 543;
	public static readonly T__543 = 544;
	public static readonly T__544 = 545;
	public static readonly T__545 = 546;
	public static readonly T__546 = 547;
	public static readonly T__547 = 548;
	public static readonly T__548 = 549;
	public static readonly T__549 = 550;
	public static readonly T__550 = 551;
	public static readonly T__551 = 552;
	public static readonly T__552 = 553;
	public static readonly T__553 = 554;
	public static readonly T__554 = 555;
	public static readonly T__555 = 556;
	public static readonly T__556 = 557;
	public static readonly T__557 = 558;
	public static readonly T__558 = 559;
	public static readonly T__559 = 560;
	public static readonly T__560 = 561;
	public static readonly T__561 = 562;
	public static readonly T__562 = 563;
	public static readonly T__563 = 564;
	public static readonly T__564 = 565;
	public static readonly T__565 = 566;
	public static readonly T__566 = 567;
	public static readonly T__567 = 568;
	public static readonly T__568 = 569;
	public static readonly T__569 = 570;
	public static readonly T__570 = 571;
	public static readonly T__571 = 572;
	public static readonly T__572 = 573;
	public static readonly T__573 = 574;
	public static readonly T__574 = 575;
	public static readonly T__575 = 576;
	public static readonly T__576 = 577;
	public static readonly T__577 = 578;
	public static readonly T__578 = 579;
	public static readonly T__579 = 580;
	public static readonly T__580 = 581;
	public static readonly T__581 = 582;
	public static readonly T__582 = 583;
	public static readonly T__583 = 584;
	public static readonly T__584 = 585;
	public static readonly T__585 = 586;
	public static readonly T__586 = 587;
	public static readonly T__587 = 588;
	public static readonly T__588 = 589;
	public static readonly T__589 = 590;
	public static readonly T__590 = 591;
	public static readonly T__591 = 592;
	public static readonly T__592 = 593;
	public static readonly T__593 = 594;
	public static readonly T__594 = 595;
	public static readonly T__595 = 596;
	public static readonly T__596 = 597;
	public static readonly T__597 = 598;
	public static readonly T__598 = 599;
	public static readonly T__599 = 600;
	public static readonly T__600 = 601;
	public static readonly T__601 = 602;
	public static readonly T__602 = 603;
	public static readonly T__603 = 604;
	public static readonly T__604 = 605;
	public static readonly T__605 = 606;
	public static readonly T__606 = 607;
	public static readonly T__607 = 608;
	public static readonly T__608 = 609;
	public static readonly T__609 = 610;
	public static readonly T__610 = 611;
	public static readonly T__611 = 612;
	public static readonly T__612 = 613;
	public static readonly T__613 = 614;
	public static readonly T__614 = 615;
	public static readonly T__615 = 616;
	public static readonly T__616 = 617;
	public static readonly T__617 = 618;
	public static readonly T__618 = 619;
	public static readonly T__619 = 620;
	public static readonly T__620 = 621;
	public static readonly T__621 = 622;
	public static readonly T__622 = 623;
	public static readonly T__623 = 624;
	public static readonly T__624 = 625;
	public static readonly T__625 = 626;
	public static readonly T__626 = 627;
	public static readonly T__627 = 628;
	public static readonly T__628 = 629;
	public static readonly T__629 = 630;
	public static readonly T__630 = 631;
	public static readonly T__631 = 632;
	public static readonly T__632 = 633;
	public static readonly T__633 = 634;
	public static readonly T__634 = 635;
	public static readonly T__635 = 636;
	public static readonly T__636 = 637;
	public static readonly T__637 = 638;
	public static readonly T__638 = 639;
	public static readonly T__639 = 640;
	public static readonly T__640 = 641;
	public static readonly T__641 = 642;
	public static readonly T__642 = 643;
	public static readonly T__643 = 644;
	public static readonly T__644 = 645;
	public static readonly T__645 = 646;
	public static readonly T__646 = 647;
	public static readonly T__647 = 648;
	public static readonly T__648 = 649;
	public static readonly T__649 = 650;
	public static readonly T__650 = 651;
	public static readonly T__651 = 652;
	public static readonly T__652 = 653;
	public static readonly T__653 = 654;
	public static readonly T__654 = 655;
	public static readonly T__655 = 656;
	public static readonly T__656 = 657;
	public static readonly T__657 = 658;
	public static readonly T__658 = 659;
	public static readonly T__659 = 660;
	public static readonly T__660 = 661;
	public static readonly T__661 = 662;
	public static readonly T__662 = 663;
	public static readonly T__663 = 664;
	public static readonly T__664 = 665;
	public static readonly T__665 = 666;
	public static readonly IDENTIFIER = 667;
	public static readonly STRING_LITERAL = 668;
	public static readonly DECIMAL_LITERAL = 669;
	public static readonly WS = 670;
	public static readonly RULE_goal = 0;
	public static readonly RULE_absolute = 1;
	public static readonly RULE_acLoad = 2;
	public static readonly RULE_acLoadDisplay = 3;
	public static readonly RULE_acLoadFactorCapacitance = 4;
	public static readonly RULE_acLoadFactorTime = 5;
	public static readonly RULE_addDisplay = 6;
	public static readonly RULE_ampere = 7;
	public static readonly RULE_and_ = 8;
	public static readonly RULE_angleValue = 9;
	public static readonly RULE_annotate = 10;
	public static readonly RULE_approvedDate = 11;
	public static readonly RULE_approvedDateDisplay = 12;
	public static readonly RULE_arc = 13;
	public static readonly RULE_ascii = 14;
	public static readonly RULE_associatedInterconnectNameDisplay = 15;
	public static readonly RULE_attachmentPoint = 16;
	public static readonly RULE_author = 17;
	public static readonly RULE_backgroundColor = 18;
	public static readonly RULE_baselineJustify = 19;
	public static readonly RULE_becomes = 20;
	public static readonly RULE_behaviorView = 21;
	public static readonly RULE_bidirectional = 22;
	public static readonly RULE_bidirectionalPort = 23;
	public static readonly RULE_bidirectionalPortAttributes = 24;
	public static readonly RULE_bitOrder = 25;
	public static readonly RULE_blue = 26;
	public static readonly RULE_boldStyle = 27;
	public static readonly RULE_eboolean = 28;
	public static readonly RULE_booleanConstant = 29;
	public static readonly RULE_booleanConstantRef = 30;
	public static readonly RULE_booleanExpression = 31;
	public static readonly RULE_booleanMap = 32;
	public static readonly RULE_booleanParameter = 33;
	public static readonly RULE_booleanParameterAssign = 34;
	public static readonly RULE_booleanParameterRef = 35;
	public static readonly RULE_booleanToken = 36;
	public static readonly RULE_booleanValue = 37;
	public static readonly RULE_borderPattern = 38;
	public static readonly RULE_borderPatternVisible = 39;
	public static readonly RULE_borderWidth = 40;
	public static readonly RULE_bottomJustify = 41;
	public static readonly RULE_calculated = 42;
	public static readonly RULE_candela = 43;
	public static readonly RULE_capacitanceValue = 44;
	public static readonly RULE_caplineJustify = 45;
	public static readonly RULE_cell = 46;
	public static readonly RULE_cellHeader = 47;
	public static readonly RULE_cellNameDisplay = 48;
	public static readonly RULE_cellPropertyDisplay = 49;
	public static readonly RULE_cellPropertyDisplayOverride = 50;
	public static readonly RULE_cellPropertyOverride = 51;
	public static readonly RULE_cellRef = 52;
	public static readonly RULE_celsius = 53;
	public static readonly RULE_centerJustify = 54;
	public static readonly RULE_characterEncoding = 55;
	public static readonly RULE_checkDate = 56;
	public static readonly RULE_checkDateDisplay = 57;
	public static readonly RULE_circle = 58;
	public static readonly RULE_cluster = 59;
	public static readonly RULE_clusterConfiguration = 60;
	public static readonly RULE_clusterConfigurationNameCaseSensitive = 61;
	public static readonly RULE_clusterConfigurationNameDef = 62;
	public static readonly RULE_clusterConfigurationNameRef = 63;
	public static readonly RULE_clusterConfigurationRef = 64;
	public static readonly RULE_clusterHeader = 65;
	public static readonly RULE_clusterNameCaseSensitive = 66;
	public static readonly RULE_clusterNameDef = 67;
	public static readonly RULE_clusterNameRef = 68;
	public static readonly RULE_clusterPropertyDisplay = 69;
	public static readonly RULE_clusterPropertyDisplayOverride = 70;
	public static readonly RULE_clusterPropertyOverride = 71;
	public static readonly RULE_clusterRef = 72;
	public static readonly RULE_color = 73;
	public static readonly RULE_comment = 74;
	public static readonly RULE_commentGraphics = 75;
	public static readonly RULE_companyName = 76;
	public static readonly RULE_companyNameDisplay = 77;
	public static readonly RULE_complementedName = 78;
	public static readonly RULE_complementedNamePart = 79;
	public static readonly RULE_complexGeometry = 80;
	public static readonly RULE_complexName = 81;
	public static readonly RULE_compound = 82;
	public static readonly RULE_condition = 83;
	public static readonly RULE_conditionDisplay = 84;
	public static readonly RULE_connectedSignalIndexGenerator = 85;
	public static readonly RULE_connectedSignalIndexGeneratorDisplay = 86;
	public static readonly RULE_connectivityBus = 87;
	public static readonly RULE_connectivityBusJoined = 88;
	public static readonly RULE_connectivityBusSlice = 89;
	public static readonly RULE_connectivityFrameStructure = 90;
	public static readonly RULE_connectivityFrameStructureNameDef = 91;
	public static readonly RULE_connectivityNet = 92;
	public static readonly RULE_connectivityNetJoined = 93;
	public static readonly RULE_connectivityRipper = 94;
	public static readonly RULE_connectivityRipperNameDef = 95;
	public static readonly RULE_connectivityRipperNameRef = 96;
	public static readonly RULE_connectivityRipperRef = 97;
	public static readonly RULE_connectivityStructure = 98;
	public static readonly RULE_connectivitySubBus = 99;
	public static readonly RULE_connectivitySubNet = 100;
	public static readonly RULE_connectivityTagGenerator = 101;
	public static readonly RULE_connectivityTagGeneratorDisplay = 102;
	public static readonly RULE_connectivityUnits = 103;
	public static readonly RULE_connectivityView = 104;
	public static readonly RULE_connectivityViewHeader = 105;
	public static readonly RULE_constantNameDef = 106;
	public static readonly RULE_constantNameRef = 107;
	public static readonly RULE_constantValues = 108;
	public static readonly RULE_contract = 109;
	public static readonly RULE_contractDisplay = 110;
	public static readonly RULE_copyright = 111;
	public static readonly RULE_copyrightDisplay = 112;
	public static readonly RULE_cornerType = 113;
	public static readonly RULE_coulomb = 114;
	public static readonly RULE_criticality = 115;
	public static readonly RULE_criticalityDisplay = 116;
	public static readonly RULE_currentMap = 117;
	public static readonly RULE_currentValue = 118;
	public static readonly RULE_curve = 119;
	public static readonly RULE_dataOrigin = 120;
	public static readonly RULE_date = 121;
	public static readonly RULE_dayNumber = 122;
	public static readonly RULE_dcFanInLoad = 123;
	public static readonly RULE_dcFanInLoadDisplay = 124;
	public static readonly RULE_dcFanOutLoad = 125;
	public static readonly RULE_dcFanOutLoadDisplay = 126;
	public static readonly RULE_dcMaxFanIn = 127;
	public static readonly RULE_dcMaxFanInDisplay = 128;
	public static readonly RULE_dcMaxFanOut = 129;
	public static readonly RULE_dcMaxFanOutDisplay = 130;
	public static readonly RULE_decimalToString = 131;
	public static readonly RULE_defaultClusterConfiguration = 132;
	public static readonly RULE_defaultConnection = 133;
	public static readonly RULE_degree = 134;
	public static readonly RULE_delay = 135;
	public static readonly RULE_denominator = 136;
	public static readonly RULE_derivation = 137;
	public static readonly RULE_derivedFrom = 138;
	public static readonly RULE_design = 139;
	public static readonly RULE_designator = 140;
	public static readonly RULE_designatorDisplay = 141;
	public static readonly RULE_designHeader = 142;
	public static readonly RULE_designHierarchy = 143;
	public static readonly RULE_designHierarchyHeader = 144;
	public static readonly RULE_designHierarchyNameCaseSensitive = 145;
	public static readonly RULE_designHierarchyNameDef = 146;
	public static readonly RULE_designNameCaseSensitive = 147;
	public static readonly RULE_designNameDef = 148;
	public static readonly RULE_designUnits = 149;
	public static readonly RULE_diagram = 150;
	public static readonly RULE_diagramNameDef = 151;
	public static readonly RULE_directionalPortAttributeOverride = 152;
	public static readonly RULE_display = 153;
	public static readonly RULE_displayAttributes = 154;
	public static readonly RULE_displayName = 155;
	public static readonly RULE_displayNameOverride = 156;
	public static readonly RULE_distanceValue = 157;
	public static readonly RULE_dividend = 158;
	public static readonly RULE_divisor = 159;
	public static readonly RULE_documentation = 160;
	public static readonly RULE_documentationHeader = 161;
	public static readonly RULE_documentationNameCaseSensitive = 162;
	public static readonly RULE_documentationNameDef = 163;
	public static readonly RULE_documentationUnits = 164;
	public static readonly RULE_dominates = 165;
	public static readonly RULE_dot = 166;
	public static readonly RULE_drawingDescription = 167;
	public static readonly RULE_drawingDescriptionDisplay = 168;
	public static readonly RULE_drawingIdentification = 169;
	public static readonly RULE_drawingIdentificationDisplay = 170;
	public static readonly RULE_drawingSize = 171;
	public static readonly RULE_drawingSizeDisplay = 172;
	public static readonly RULE_duration = 173;
	public static readonly RULE_e = 174;
	public static readonly RULE_edif = 175;
	public static readonly RULE_edifHeader = 176;
	public static readonly RULE_edifLevel = 177;
	public static readonly RULE_edifLevelValue = 178;
	public static readonly RULE_edifNameDef = 179;
	public static readonly RULE_edifVersion = 180;
	public static readonly RULE_endPoint = 181;
	public static readonly RULE_endType = 182;
	public static readonly RULE_engineeringDate = 183;
	public static readonly RULE_engineeringDateDisplay = 184;
	public static readonly RULE_event = 185;
	public static readonly RULE_exponent = 186;
	public static readonly RULE_extend = 187;
	public static readonly RULE_extendForFrameMemberDef = 188;
	public static readonly RULE_extendFrameDef = 189;
	public static readonly RULE_extendInstanceDef = 190;
	public static readonly RULE_extendInstanceMemberDef = 191;
	public static readonly RULE_extendInterconnectDef = 192;
	public static readonly RULE_extendPageDef = 193;
	public static readonly RULE_extendPortDef = 194;
	public static readonly RULE_extendPortMemberDef = 195;
	public static readonly RULE_extendSignalDef = 196;
	public static readonly RULE_extendSignalGroupDef = 197;
	public static readonly RULE_extendSignalMemberDef = 198;
	public static readonly RULE_external = 199;
	public static readonly RULE_fahrenheit = 200;
	public static readonly RULE_efalse = 201;
	public static readonly RULE_farad = 202;
	public static readonly RULE_figure = 203;
	public static readonly RULE_figureGroup = 204;
	public static readonly RULE_figureGroupNameCaseSensitive = 205;
	public static readonly RULE_figureGroupNameDef = 206;
	public static readonly RULE_figureGroupNameRef = 207;
	public static readonly RULE_figureGroupOverride = 208;
	public static readonly RULE_fillPattern = 209;
	public static readonly RULE_fillPatternVisible = 210;
	public static readonly RULE_firstIntegerExpression = 211;
	public static readonly RULE_firstStringExpression = 212;
	public static readonly RULE_fixed = 213;
	public static readonly RULE_font = 214;
	public static readonly RULE_fontCapitalHeight = 215;
	public static readonly RULE_fontDefinitions = 216;
	public static readonly RULE_fontDescent = 217;
	public static readonly RULE_fontFamily = 218;
	public static readonly RULE_fontHeight = 219;
	public static readonly RULE_fontNameDef = 220;
	public static readonly RULE_fontNameRef = 221;
	public static readonly RULE_fontProportions = 222;
	public static readonly RULE_fontRef = 223;
	public static readonly RULE_fonts = 224;
	public static readonly RULE_fontWidth = 225;
	public static readonly RULE_forbiddenEvent = 226;
	public static readonly RULE_forFrame = 227;
	public static readonly RULE_forFrameAnnotate = 228;
	public static readonly RULE_forFrameIndex = 229;
	public static readonly RULE_forFrameIndexDisplay = 230;
	public static readonly RULE_forFrameIndexNameCaseSensitive = 231;
	public static readonly RULE_forFrameIndexRef = 232;
	public static readonly RULE_forFrameMemberRef = 233;
	public static readonly RULE_forFrameRef = 234;
	public static readonly RULE_frameConfiguration = 235;
	public static readonly RULE_frameNameCaseSensitive = 236;
	public static readonly RULE_frameNameDef = 237;
	public static readonly RULE_frameNameRef = 238;
	public static readonly RULE_frameRef = 239;
	public static readonly RULE_frequencyValue = 240;
	public static readonly RULE_fromBottom = 241;
	public static readonly RULE_fromInteger = 242;
	public static readonly RULE_fromLeft = 243;
	public static readonly RULE_fromRight = 244;
	public static readonly RULE_fromTop = 245;
	public static readonly RULE_generated = 246;
	public static readonly RULE_geometryMacro = 247;
	public static readonly RULE_geometryMacroHeader = 248;
	public static readonly RULE_geometryMacroRef = 249;
	public static readonly RULE_geometryMacroUnits = 250;
	public static readonly RULE_globalPort = 251;
	public static readonly RULE_globalPortBundle = 252;
	public static readonly RULE_globalPortDefinitions = 253;
	public static readonly RULE_globalPortList = 254;
	public static readonly RULE_globalPortNameCaseSensitive = 255;
	public static readonly RULE_globalPortNameDef = 256;
	public static readonly RULE_globalPortNameDisplay = 257;
	public static readonly RULE_globalPortNameRef = 258;
	public static readonly RULE_globalPortPropertyDisplay = 259;
	public static readonly RULE_globalPortRef = 260;
	public static readonly RULE_globalPortScope = 261;
	public static readonly RULE_green = 262;
	public static readonly RULE_henry = 263;
	public static readonly RULE_hertz = 264;
	public static readonly RULE_horizontalJustification = 265;
	public static readonly RULE_hotspot = 266;
	public static readonly RULE_hotspotConnectDirection = 267;
	public static readonly RULE_hotspotGrid = 268;
	public static readonly RULE_hotspotNameCaseSensitive = 269;
	public static readonly RULE_hotspotNameDef = 270;
	public static readonly RULE_hotspotNameDisplay = 271;
	public static readonly RULE_hotspotNameRef = 272;
	public static readonly RULE_hourNumber = 273;
	public static readonly RULE_ieeeDesignation = 274;
	public static readonly RULE_ieeeSection = 275;
	public static readonly RULE_ieeeStandard = 276;
	public static readonly RULE_ifFrame = 277;
	public static readonly RULE_ifFrameAnnotate = 278;
	public static readonly RULE_ifFrameRef = 279;
	public static readonly RULE_ifFrameSet = 280;
	public static readonly RULE_ignore = 281;
	public static readonly RULE_implementationNameCaseSensitive = 282;
	public static readonly RULE_implementationNameDef = 283;
	public static readonly RULE_implementationNameDisplay = 284;
	public static readonly RULE_implementationNameRef = 285;
	public static readonly RULE_indexEndDisplay = 286;
	public static readonly RULE_indexNameDef = 287;
	public static readonly RULE_indexNameDisplay = 288;
	public static readonly RULE_indexNameRef = 289;
	public static readonly RULE_indexStart = 290;
	public static readonly RULE_indexStartDisplay = 291;
	public static readonly RULE_indexStep = 292;
	public static readonly RULE_indexStepDisplay = 293;
	public static readonly RULE_indexValue = 294;
	public static readonly RULE_input = 295;
	public static readonly RULE_inputPort = 296;
	public static readonly RULE_inputPortAttributes = 297;
	public static readonly RULE_instance = 298;
	public static readonly RULE_instanceConfiguration = 299;
	public static readonly RULE_instanceIndexValue = 300;
	public static readonly RULE_instanceMemberRef = 301;
	public static readonly RULE_instanceNameCaseSensitive = 302;
	public static readonly RULE_instanceNameDef = 303;
	public static readonly RULE_instanceNameDisplay = 304;
	public static readonly RULE_instanceNameGenerator = 305;
	public static readonly RULE_instanceNameGeneratorDisplay = 306;
	public static readonly RULE_instanceNameRef = 307;
	public static readonly RULE_instancePortAttributeDisplay = 308;
	public static readonly RULE_instancePortAttributes = 309;
	public static readonly RULE_instancePropertyDisplay = 310;
	public static readonly RULE_instancePropertyOverride = 311;
	public static readonly RULE_instanceRef = 312;
	public static readonly RULE_instanceWidth = 313;
	public static readonly RULE_instanceWidthDisplay = 314;
	public static readonly RULE_integer = 315;
	public static readonly RULE_integerConstant = 316;
	public static readonly RULE_integerConstantRef = 317;
	public static readonly RULE_integerEqual = 318;
	public static readonly RULE_integerExpression = 319;
	public static readonly RULE_integerParameter = 320;
	public static readonly RULE_integerParameterAssign = 321;
	public static readonly RULE_integerParameterRef = 322;
	public static readonly RULE_integerProduct = 323;
	public static readonly RULE_integerQuotient = 324;
	public static readonly RULE_integerRemainder = 325;
	public static readonly RULE_integerSubtract = 326;
	public static readonly RULE_integerSum = 327;
	public static readonly RULE_integerValue = 328;
	public static readonly RULE_interconnectAnnotate = 329;
	public static readonly RULE_interconnectAttachedText = 330;
	public static readonly RULE_interconnectDelay = 331;
	public static readonly RULE_interconnectDelayDisplay = 332;
	public static readonly RULE_interconnectDelayNameDef = 333;
	public static readonly RULE_interconnectDelayNameRef = 334;
	public static readonly RULE_interconnectHeader = 335;
	public static readonly RULE_interconnectNameCaseSensitive = 336;
	public static readonly RULE_interconnectNameDef = 337;
	public static readonly RULE_interconnectNameDisplay = 338;
	public static readonly RULE_interconnectNameRef = 339;
	public static readonly RULE_interconnectPropertyDisplay = 340;
	public static readonly RULE_interconnectRef = 341;
	public static readonly RULE_interconnectSet = 342;
	public static readonly RULE_einterface = 343;
	public static readonly RULE_interfaceJoined = 344;
	public static readonly RULE_interfaceUnits = 345;
	public static readonly RULE_iso8859 = 346;
	public static readonly RULE_iso8859Part = 347;
	public static readonly RULE_isolated = 348;
	public static readonly RULE_issue = 349;
	public static readonly RULE_italicStyle = 350;
	public static readonly RULE_jisx0201 = 351;
	public static readonly RULE_jisx0208 = 352;
	public static readonly RULE_joinedAsSignal = 353;
	public static readonly RULE_joule = 354;
	public static readonly RULE_k0KeywordLevel = 355;
	public static readonly RULE_k1KeywordAlias = 356;
	public static readonly RULE_k1KeywordLevel = 357;
	public static readonly RULE_k1KeywordNameDef = 358;
	public static readonly RULE_k1KeywordNameRef = 359;
	public static readonly RULE_k2Actual = 360;
	public static readonly RULE_k2Build = 361;
	public static readonly RULE_k2Formal = 362;
	public static readonly RULE_k2FormalNameDef = 363;
	public static readonly RULE_k2FormalNameRef = 364;
	public static readonly RULE_k2Generate = 365;
	public static readonly RULE_k2KeywordDefine = 366;
	public static readonly RULE_k2KeywordLevel = 367;
	public static readonly RULE_k2KeywordParameters = 368;
	public static readonly RULE_k2Literal = 369;
	public static readonly RULE_k2Optional = 370;
	public static readonly RULE_k2Required = 371;
	public static readonly RULE_k3Build = 372;
	public static readonly RULE_k3Collector = 373;
	public static readonly RULE_k3ForEach = 374;
	public static readonly RULE_k3Formal = 375;
	public static readonly RULE_k3FormalList = 376;
	public static readonly RULE_k3Generate = 377;
	public static readonly RULE_k3KeywordDefine = 378;
	public static readonly RULE_k3KeywordLevel = 379;
	public static readonly RULE_k3KeywordParameters = 380;
	public static readonly RULE_kelvin = 381;
	public static readonly RULE_keywordMap = 382;
	public static readonly RULE_kilogram = 383;
	public static readonly RULE_leaf = 384;
	public static readonly RULE_leafOccurrenceAnnotate = 385;
	public static readonly RULE_leftJustify = 386;
	public static readonly RULE_lengthValue = 387;
	public static readonly RULE_lessThan = 388;
	public static readonly RULE_lessThanOrEqual = 389;
	public static readonly RULE_library = 390;
	public static readonly RULE_libraryHeader = 391;
	public static readonly RULE_libraryNameCaseSensitive = 392;
	public static readonly RULE_libraryNameDef = 393;
	public static readonly RULE_libraryNameRef = 394;
	public static readonly RULE_libraryObjectNameCaseSensitive = 395;
	public static readonly RULE_libraryObjectNameDef = 396;
	public static readonly RULE_libraryObjectNameRef = 397;
	public static readonly RULE_libraryRef = 398;
	public static readonly RULE_loadDelay = 399;
	public static readonly RULE_localPortGroup = 400;
	public static readonly RULE_localPortGroupNameCaseSensitive = 401;
	public static readonly RULE_localPortGroupNameDef = 402;
	public static readonly RULE_localPortGroupNameRef = 403;
	public static readonly RULE_localPortGroupRef = 404;
	public static readonly RULE_logicalConnectivity = 405;
	public static readonly RULE_logicDefinitions = 406;
	public static readonly RULE_logicList = 407;
	public static readonly RULE_logicMapInput = 408;
	public static readonly RULE_logicMapOutput = 409;
	public static readonly RULE_logicModelUnits = 410;
	public static readonly RULE_logicModelView = 411;
	public static readonly RULE_logicNameDef = 412;
	public static readonly RULE_logicNameRef = 413;
	public static readonly RULE_logicOneOf = 414;
	public static readonly RULE_logicRef = 415;
	public static readonly RULE_logicValue = 416;
	public static readonly RULE_lsbToMsb = 417;
	public static readonly RULE_mantissa = 418;
	public static readonly RULE_mark = 419;
	public static readonly RULE_maskLayoutUnits = 420;
	public static readonly RULE_maskLayoutView = 421;
	public static readonly RULE_measured = 422;
	public static readonly RULE_meter = 423;
	public static readonly RULE_middleJustify = 424;
	public static readonly RULE_minimalWidth = 425;
	public static readonly RULE_minimumStringLength = 426;
	public static readonly RULE_miNoMax = 427;
	public static readonly RULE_miNoMaxValue = 428;
	public static readonly RULE_minuend = 429;
	public static readonly RULE_minuteNumber = 430;
	public static readonly RULE_mixedDirection = 431;
	public static readonly RULE_mnm = 432;
	public static readonly RULE_mole = 433;
	public static readonly RULE_monthNumber = 434;
	public static readonly RULE_msbToLsb = 435;
	public static readonly RULE_mustJoin = 436;
	public static readonly RULE_nameAlias = 437;
	public static readonly RULE_nameCaseSensitivity = 438;
	public static readonly RULE_nameDef = 439;
	public static readonly RULE_nameDimension = 440;
	public static readonly RULE_nameDimensionStructure = 441;
	public static readonly RULE_nameInformation = 442;
	public static readonly RULE_namePartSeparator = 443;
	public static readonly RULE_nameRef = 444;
	public static readonly RULE_nameStructure = 445;
	public static readonly RULE_narrowPort = 446;
	public static readonly RULE_narrowWire = 447;
	public static readonly RULE_noHotspotGrid = 448;
	public static readonly RULE_nominalHotspotGrid = 449;
	public static readonly RULE_nonPermutable = 450;
	public static readonly RULE_not_ = 451;
	public static readonly RULE_notInherited = 452;
	public static readonly RULE_number = 453;
	public static readonly RULE_numberExpression = 454;
	public static readonly RULE_numberOfBasicUnits = 455;
	public static readonly RULE_numberOfNewUnits = 456;
	public static readonly RULE_numberParameter = 457;
	public static readonly RULE_numberParameterAssign = 458;
	public static readonly RULE_numberParameterRef = 459;
	public static readonly RULE_numberPoint = 460;
	public static readonly RULE_numberValue = 461;
	public static readonly RULE_numerator = 462;
	public static readonly RULE_occurrenceAnnotate = 463;
	public static readonly RULE_occurrenceHierarchyAnnotate = 464;
	public static readonly RULE_offsetEvent = 465;
	public static readonly RULE_ohm = 466;
	public static readonly RULE_openShape = 467;
	public static readonly RULE_or_ = 468;
	public static readonly RULE_origin = 469;
	public static readonly RULE_originalBoundingBox = 470;
	public static readonly RULE_originalDrawingDate = 471;
	public static readonly RULE_originalDrawingDateDisplay = 472;
	public static readonly RULE_originalName = 473;
	public static readonly RULE_otherwiseFrame = 474;
	public static readonly RULE_otherwiseFrameAnnotate = 475;
	public static readonly RULE_otherwiseFrameRef = 476;
	public static readonly RULE_output = 477;
	public static readonly RULE_outputPort = 478;
	public static readonly RULE_outputPortAttributes = 479;
	public static readonly RULE_owner = 480;
	public static readonly RULE_page = 481;
	public static readonly RULE_pageAnnotate = 482;
	public static readonly RULE_pageBorder = 483;
	public static readonly RULE_pageBorderTemplate = 484;
	public static readonly RULE_pageBorderTemplateRef = 485;
	public static readonly RULE_pageCommentGraphics = 486;
	public static readonly RULE_pageHeader = 487;
	public static readonly RULE_pageIdentification = 488;
	public static readonly RULE_pageIdentificationDisplay = 489;
	public static readonly RULE_pageNameCaseSensitive = 490;
	public static readonly RULE_pageNameDef = 491;
	public static readonly RULE_pageNameRef = 492;
	public static readonly RULE_pagePropertyDisplay = 493;
	public static readonly RULE_pageRef = 494;
	public static readonly RULE_pageSize = 495;
	public static readonly RULE_pageTitle = 496;
	public static readonly RULE_pageTitleBlock = 497;
	public static readonly RULE_pageTitleBlockAttributeDisplay = 498;
	public static readonly RULE_pageTitleBlockAttributes = 499;
	public static readonly RULE_pageTitleBlockTemplate = 500;
	public static readonly RULE_pageTitleBlockTemplateRef = 501;
	public static readonly RULE_pageTitleDisplay = 502;
	public static readonly RULE_parameterDisplay = 503;
	public static readonly RULE_parameterNameCaseSensitive = 504;
	public static readonly RULE_parameterNameDef = 505;
	public static readonly RULE_parameterNameDisplay = 506;
	public static readonly RULE_parameterNameRef = 507;
	public static readonly RULE_path = 508;
	public static readonly RULE_pathDelay = 509;
	public static readonly RULE_pathWidth = 510;
	public static readonly RULE_pcbLayoutUnits = 511;
	public static readonly RULE_pcbLayoutView = 512;
	public static readonly RULE_permutable = 513;
	public static readonly RULE_physicalDefaults = 514;
	public static readonly RULE_physicalScaling = 515;
	public static readonly RULE_pixelPattern = 516;
	public static readonly RULE_pixelRow = 517;
	public static readonly RULE_point = 518;
	public static readonly RULE_pointList = 519;
	public static readonly RULE_pointValue = 520;
	public static readonly RULE_polygon = 521;
	public static readonly RULE_port = 522;
	public static readonly RULE_portAnnotate = 523;
	public static readonly RULE_portAttributeDisplay = 524;
	public static readonly RULE_portBundle = 525;
	public static readonly RULE_portDelay = 526;
	public static readonly RULE_portDelayDisplay = 527;
	public static readonly RULE_portDelayNameDef = 528;
	public static readonly RULE_portDelayNameRef = 529;
	public static readonly RULE_portDelayOverride = 530;
	public static readonly RULE_portDirection = 531;
	public static readonly RULE_portDirectionIndicator = 532;
	public static readonly RULE_portIndexValue = 533;
	public static readonly RULE_portInstanceRef = 534;
	public static readonly RULE_portJoined = 535;
	public static readonly RULE_portList = 536;
	public static readonly RULE_portLoadDelay = 537;
	public static readonly RULE_portLoadDelayDisplay = 538;
	public static readonly RULE_portLoadDelayNameDef = 539;
	public static readonly RULE_portLoadDelayNameRef = 540;
	public static readonly RULE_portLoadDelayOverride = 541;
	public static readonly RULE_portMemberRef = 542;
	public static readonly RULE_portNameCaseSensitive = 543;
	public static readonly RULE_portNameDef = 544;
	public static readonly RULE_portNameDisplay = 545;
	public static readonly RULE_portNameGenerator = 546;
	public static readonly RULE_portNameGeneratorDisplay = 547;
	public static readonly RULE_portNameRef = 548;
	public static readonly RULE_portPropertyDisplay = 549;
	public static readonly RULE_portPropertyDisplayOverride = 550;
	public static readonly RULE_portPropertyOverride = 551;
	public static readonly RULE_portRef = 552;
	public static readonly RULE_portSet = 553;
	public static readonly RULE_portWidth = 554;
	public static readonly RULE_presentLogicValue = 555;
	public static readonly RULE_previousLogicValue = 556;
	public static readonly RULE_previousVersion = 557;
	public static readonly RULE_primaryName = 558;
	public static readonly RULE_program = 559;
	public static readonly RULE_property = 560;
	public static readonly RULE_propertyDisplay = 561;
	public static readonly RULE_propertyDisplayOverride = 562;
	public static readonly RULE_propertyInheritanceControl = 563;
	public static readonly RULE_propertyNameCaseSensitive = 564;
	public static readonly RULE_propertyNameDef = 565;
	public static readonly RULE_propertyNameDisplay = 566;
	public static readonly RULE_propertyNameRef = 567;
	public static readonly RULE_propertyOverride = 568;
	public static readonly RULE_proportionalFont = 569;
	public static readonly RULE_pt = 570;
	public static readonly RULE_pt1 = 571;
	public static readonly RULE_pt2 = 572;
	public static readonly RULE_radian = 573;
	public static readonly RULE_reason = 574;
	public static readonly RULE_rectangle = 575;
	public static readonly RULE_red = 576;
	public static readonly RULE_removeDisplay = 577;
	public static readonly RULE_repetitionCount = 578;
	public static readonly RULE_repetitionCountDisplay = 579;
	public static readonly RULE_replaceDisplay = 580;
	public static readonly RULE_required = 581;
	public static readonly RULE_resolves = 582;
	public static readonly RULE_revision = 583;
	public static readonly RULE_revisionDisplay = 584;
	public static readonly RULE_rightJustify = 585;
	public static readonly RULE_ripperHotspot = 586;
	public static readonly RULE_ripperHotspotRef = 587;
	public static readonly RULE_rotation = 588;
	public static readonly RULE_round = 589;
	public static readonly RULE_rowSize = 590;
	public static readonly RULE_scaledInteger = 591;
	public static readonly RULE_scaleX = 592;
	public static readonly RULE_scaleY = 593;
	public static readonly RULE_schematicBus = 594;
	public static readonly RULE_schematicBusDetails = 595;
	public static readonly RULE_schematicBusGraphics = 596;
	public static readonly RULE_schematicBusJoined = 597;
	public static readonly RULE_schematicBusSlice = 598;
	public static readonly RULE_schematicComplexFigure = 599;
	public static readonly RULE_schematicFigureMacro = 600;
	public static readonly RULE_schematicFigureMacroRef = 601;
	public static readonly RULE_schematicForFrameBorder = 602;
	public static readonly RULE_schematicForFrameBorderTemplate = 603;
	public static readonly RULE_schematicForFrameBorderTemplateRef = 604;
	public static readonly RULE_schematicForFrameImplementation = 605;
	public static readonly RULE_schematicForFrameImplementationHeader = 606;
	public static readonly RULE_schematicFrameImplementationDetails = 607;
	public static readonly RULE_schematicGlobalPortAttributes = 608;
	public static readonly RULE_schematicGlobalPortImplementation = 609;
	public static readonly RULE_schematicGlobalPortImplementationRef = 610;
	public static readonly RULE_schematicGlobalPortTemplate = 611;
	public static readonly RULE_schematicGlobalPortTemplateRef = 612;
	public static readonly RULE_schematicIfFrameBorder = 613;
	public static readonly RULE_schematicIfFrameBorderTemplate = 614;
	public static readonly RULE_schematicIfFrameBorderTemplateRef = 615;
	public static readonly RULE_schematicIfFrameImplementation = 616;
	public static readonly RULE_schematicIfFrameImplementationHeader = 617;
	public static readonly RULE_schematicImplementation = 618;
	public static readonly RULE_schematicInstanceImplementation = 619;
	public static readonly RULE_schematicInstanceImplementationRef = 620;
	public static readonly RULE_schematicInterconnectAttributeDisplay = 621;
	public static readonly RULE_schematicInterconnectHeader = 622;
	public static readonly RULE_schematicInterconnectTerminatorImplementation = 623;
	public static readonly RULE_schematicInterconnectTerminatorImplementationRef = 624;
	public static readonly RULE_schematicInterconnectTerminatorTemplate = 625;
	public static readonly RULE_schematicInterconnectTerminatorTemplateRef = 626;
	public static readonly RULE_schematicJunctionImplementation = 627;
	public static readonly RULE_schematicJunctionImplementationRef = 628;
	public static readonly RULE_schematicJunctionTemplate = 629;
	public static readonly RULE_schematicJunctionTemplateRef = 630;
	public static readonly RULE_schematicMasterPortImplementation = 631;
	public static readonly RULE_schematicMasterPortImplementationRef = 632;
	public static readonly RULE_schematicMasterPortTemplate = 633;
	public static readonly RULE_schematicMasterPortTemplateRef = 634;
	public static readonly RULE_schematicMetric = 635;
	public static readonly RULE_schematicNet = 636;
	public static readonly RULE_schematicNetDetails = 637;
	public static readonly RULE_schematicNetGraphics = 638;
	public static readonly RULE_schematicNetJoined = 639;
	public static readonly RULE_schematicOffPageConnectorImplementation = 640;
	public static readonly RULE_schematicOffPageConnectorImplementationRef = 641;
	public static readonly RULE_schematicOffPageConnectorTemplate = 642;
	public static readonly RULE_schematicOffPageConnectorTemplateRef = 643;
	public static readonly RULE_schematicOnPageConnectorImplementation = 644;
	public static readonly RULE_schematicOnPageConnectorImplementationRef = 645;
	public static readonly RULE_schematicOnPageConnectorTemplate = 646;
	public static readonly RULE_schematicOnPageConnectorTemplateRef = 647;
	public static readonly RULE_schematicOtherwiseFrameBorder = 648;
	public static readonly RULE_schematicOtherwiseFrameBorderTemplate = 649;
	public static readonly RULE_schematicOtherwiseFrameBorderTemplateRef = 650;
	public static readonly RULE_schematicOtherwiseFrameImplementation = 651;
	public static readonly RULE_schematicOtherwiseFrameImplementationHeader = 652;
	public static readonly RULE_schematicPortAcPower = 653;
	public static readonly RULE_schematicPortAcPowerRecommendedFrequency = 654;
	public static readonly RULE_schematicPortAcPowerRecommendedVoltageRms = 655;
	public static readonly RULE_schematicPortAnalog = 656;
	public static readonly RULE_schematicPortAttributes = 657;
	public static readonly RULE_schematicPortChassisGround = 658;
	public static readonly RULE_schematicPortClock = 659;
	public static readonly RULE_schematicPortDcPower = 660;
	public static readonly RULE_schematicPortDcPowerRecommendedVoltage = 661;
	public static readonly RULE_schematicPortEarthGround = 662;
	public static readonly RULE_schematicPortGround = 663;
	public static readonly RULE_schematicPortNonLogical = 664;
	public static readonly RULE_schematicPortOpenCollector = 665;
	public static readonly RULE_schematicPortOpenEmitter = 666;
	public static readonly RULE_schematicPortPower = 667;
	public static readonly RULE_schematicPortStyle = 668;
	public static readonly RULE_schematicPortThreeState = 669;
	public static readonly RULE_schematicRequiredDefaults = 670;
	public static readonly RULE_schematicRipperImplementation = 671;
	public static readonly RULE_schematicRipperImplementationRef = 672;
	public static readonly RULE_schematicRipperTemplate = 673;
	public static readonly RULE_schematicRipperTemplateRef = 674;
	public static readonly RULE_schematicSubBus = 675;
	public static readonly RULE_schematicSubBusSet = 676;
	public static readonly RULE_schematicSubInterconnectHeader = 677;
	public static readonly RULE_schematicSubNet = 678;
	public static readonly RULE_schematicSubNetSet = 679;
	public static readonly RULE_schematicSymbol = 680;
	public static readonly RULE_schematicSymbolBorder = 681;
	public static readonly RULE_schematicSymbolBorderTemplate = 682;
	public static readonly RULE_schematicSymbolBorderTemplateRef = 683;
	public static readonly RULE_schematicSymbolHeader = 684;
	public static readonly RULE_schematicSymbolPortImplementation = 685;
	public static readonly RULE_schematicSymbolPortImplementationRef = 686;
	public static readonly RULE_schematicSymbolPortTemplate = 687;
	public static readonly RULE_schematicSymbolPortTemplateRef = 688;
	public static readonly RULE_schematicSymbolRef = 689;
	public static readonly RULE_schematicTemplateHeader = 690;
	public static readonly RULE_schematicUnits = 691;
	public static readonly RULE_schematicView = 692;
	public static readonly RULE_schematicViewHeader = 693;
	public static readonly RULE_schematicWireAffinity = 694;
	public static readonly RULE_schematicWireStyle = 695;
	public static readonly RULE_second = 696;
	public static readonly RULE_secondIntegerExpression = 697;
	public static readonly RULE_secondNumber = 698;
	public static readonly RULE_secondStringExpression = 699;
	public static readonly RULE_section = 700;
	public static readonly RULE_sectionNameDef = 701;
	public static readonly RULE_sectionTitle = 702;
	public static readonly RULE_sequence = 703;
	public static readonly RULE_setAngle = 704;
	public static readonly RULE_setCapacitance = 705;
	public static readonly RULE_setCurrent = 706;
	public static readonly RULE_setDistance = 707;
	public static readonly RULE_setFrequency = 708;
	public static readonly RULE_setTime = 709;
	public static readonly RULE_setVoltage = 710;
	public static readonly RULE_shape = 711;
	public static readonly RULE_siemens = 712;
	public static readonly RULE_signal = 713;
	public static readonly RULE_signalAnnotate = 714;
	public static readonly RULE_signalGroup = 715;
	public static readonly RULE_signalGroupAnnotate = 716;
	public static readonly RULE_signalGroupNameCaseSensitive = 717;
	public static readonly RULE_signalGroupNameDef = 718;
	public static readonly RULE_signalGroupNameRef = 719;
	public static readonly RULE_signalGroupRef = 720;
	public static readonly RULE_signalIndexValue = 721;
	public static readonly RULE_signalJoined = 722;
	public static readonly RULE_signalList = 723;
	public static readonly RULE_signalMemberRef = 724;
	public static readonly RULE_signalNameCaseSensitive = 725;
	public static readonly RULE_signalNameDef = 726;
	public static readonly RULE_signalNameRef = 727;
	public static readonly RULE_signalRef = 728;
	public static readonly RULE_signalWidth = 729;
	public static readonly RULE_simpleName = 730;
	public static readonly RULE_startPoint = 731;
	public static readonly RULE_status = 732;
	public static readonly RULE_step = 733;
	public static readonly RULE_string = 734;
	public static readonly RULE_stringConcatenate = 735;
	public static readonly RULE_stringConstant = 736;
	public static readonly RULE_stringConstantRef = 737;
	public static readonly RULE_stringEqual = 738;
	public static readonly RULE_stringExpression = 739;
	public static readonly RULE_stringLength = 740;
	public static readonly RULE_stringParameter = 741;
	public static readonly RULE_stringParameterAssign = 742;
	public static readonly RULE_stringParameterRef = 743;
	public static readonly RULE_stringPrefix = 744;
	public static readonly RULE_stringSuffix = 745;
	public static readonly RULE_stringValue = 746;
	public static readonly RULE_strong = 747;
	public static readonly RULE_subIssue = 748;
	public static readonly RULE_substring = 749;
	public static readonly RULE_substringLength = 750;
	public static readonly RULE_substringOffset = 751;
	public static readonly RULE_subtrahend = 752;
	public static readonly RULE_symbolicLayoutUnits = 753;
	public static readonly RULE_symbolicLayoutView = 754;
	public static readonly RULE_symbolPortImplementationNameDef = 755;
	public static readonly RULE_symbolPortImplementationNameRef = 756;
	public static readonly RULE_technology = 757;
	public static readonly RULE_textHeight = 758;
	public static readonly RULE_throughPoint = 759;
	public static readonly RULE_time = 760;
	public static readonly RULE_timeDelay = 761;
	public static readonly RULE_timeInterval = 762;
	public static readonly RULE_timeStamp = 763;
	public static readonly RULE_timeValue = 764;
	public static readonly RULE_timing = 765;
	public static readonly RULE_timingDisplay = 766;
	public static readonly RULE_timingNameDef = 767;
	public static readonly RULE_timingNameRef = 768;
	public static readonly RULE_toInteger = 769;
	public static readonly RULE_topJustify = 770;
	public static readonly RULE_totalPages = 771;
	public static readonly RULE_totalPagesDisplay = 772;
	public static readonly RULE_transform = 773;
	public static readonly RULE_transition = 774;
	public static readonly RULE_etrue = 775;
	public static readonly RULE_truncate = 776;
	public static readonly RULE_typedValue = 777;
	public static readonly RULE_typeface = 778;
	public static readonly RULE_typefaceSuffix = 779;
	public static readonly RULE_unconfigured = 780;
	public static readonly RULE_unconstrained = 781;
	public static readonly RULE_undefined = 782;
	public static readonly RULE_unit = 783;
	public static readonly RULE_unitDefinitions = 784;
	public static readonly RULE_unitExponent = 785;
	public static readonly RULE_unitNameDef = 786;
	public static readonly RULE_unitNameRef = 787;
	public static readonly RULE_unitRef = 788;
	public static readonly RULE_unrestricted = 789;
	public static readonly RULE_unspecified = 790;
	public static readonly RULE_unspecifiedDirectionPort = 791;
	public static readonly RULE_untyped = 792;
	public static readonly RULE_unused = 793;
	public static readonly RULE_usableArea = 794;
	public static readonly RULE_userData = 795;
	public static readonly RULE_userDataTag = 796;
	public static readonly RULE_version = 797;
	public static readonly RULE_verticalJustification = 798;
	public static readonly RULE_viewGroup = 799;
	public static readonly RULE_viewGroupHeader = 800;
	public static readonly RULE_viewGroupNameCaseSensitive = 801;
	public static readonly RULE_viewGroupNameDef = 802;
	public static readonly RULE_viewGroupNameRef = 803;
	public static readonly RULE_viewGroupRef = 804;
	public static readonly RULE_viewNameCaseSensitive = 805;
	public static readonly RULE_viewNameDef = 806;
	public static readonly RULE_viewNameDisplay = 807;
	public static readonly RULE_viewNameRef = 808;
	public static readonly RULE_viewPropertyDisplay = 809;
	public static readonly RULE_viewPropertyOverride = 810;
	public static readonly RULE_viewRef = 811;
	public static readonly RULE_visible = 812;
	public static readonly RULE_volt = 813;
	public static readonly RULE_voltageMap = 814;
	public static readonly RULE_voltageValue = 815;
	public static readonly RULE_watt = 816;
	public static readonly RULE_weak = 817;
	public static readonly RULE_weakJoined = 818;
	public static readonly RULE_weber = 819;
	public static readonly RULE_widePort = 820;
	public static readonly RULE_wideWire = 821;
	public static readonly RULE_written = 822;
	public static readonly RULE_xCoordinate = 823;
	public static readonly RULE_xNumberValue = 824;
	public static readonly RULE_xor_ = 825;
	public static readonly RULE_yCoordinate = 826;
	public static readonly RULE_year = 827;
	public static readonly RULE_yearNumber = 828;
	public static readonly RULE_yNumberValue = 829;
	public static readonly RULE_integerToken = 830;
	public static readonly RULE_stringToken = 831;
	// tslint:disable:no-trailing-whitespace
	public static readonly ruleNames: string[] = [
		"goal", "absolute", "acLoad", "acLoadDisplay", "acLoadFactorCapacitance", 
		"acLoadFactorTime", "addDisplay", "ampere", "and_", "angleValue", "annotate", 
		"approvedDate", "approvedDateDisplay", "arc", "ascii", "associatedInterconnectNameDisplay", 
		"attachmentPoint", "author", "backgroundColor", "baselineJustify", "becomes", 
		"behaviorView", "bidirectional", "bidirectionalPort", "bidirectionalPortAttributes", 
		"bitOrder", "blue", "boldStyle", "eboolean", "booleanConstant", "booleanConstantRef", 
		"booleanExpression", "booleanMap", "booleanParameter", "booleanParameterAssign", 
		"booleanParameterRef", "booleanToken", "booleanValue", "borderPattern", 
		"borderPatternVisible", "borderWidth", "bottomJustify", "calculated", 
		"candela", "capacitanceValue", "caplineJustify", "cell", "cellHeader", 
		"cellNameDisplay", "cellPropertyDisplay", "cellPropertyDisplayOverride", 
		"cellPropertyOverride", "cellRef", "celsius", "centerJustify", "characterEncoding", 
		"checkDate", "checkDateDisplay", "circle", "cluster", "clusterConfiguration", 
		"clusterConfigurationNameCaseSensitive", "clusterConfigurationNameDef", 
		"clusterConfigurationNameRef", "clusterConfigurationRef", "clusterHeader", 
		"clusterNameCaseSensitive", "clusterNameDef", "clusterNameRef", "clusterPropertyDisplay", 
		"clusterPropertyDisplayOverride", "clusterPropertyOverride", "clusterRef", 
		"color", "comment", "commentGraphics", "companyName", "companyNameDisplay", 
		"complementedName", "complementedNamePart", "complexGeometry", "complexName", 
		"compound", "condition", "conditionDisplay", "connectedSignalIndexGenerator", 
		"connectedSignalIndexGeneratorDisplay", "connectivityBus", "connectivityBusJoined", 
		"connectivityBusSlice", "connectivityFrameStructure", "connectivityFrameStructureNameDef", 
		"connectivityNet", "connectivityNetJoined", "connectivityRipper", "connectivityRipperNameDef", 
		"connectivityRipperNameRef", "connectivityRipperRef", "connectivityStructure", 
		"connectivitySubBus", "connectivitySubNet", "connectivityTagGenerator", 
		"connectivityTagGeneratorDisplay", "connectivityUnits", "connectivityView", 
		"connectivityViewHeader", "constantNameDef", "constantNameRef", "constantValues", 
		"contract", "contractDisplay", "copyright", "copyrightDisplay", "cornerType", 
		"coulomb", "criticality", "criticalityDisplay", "currentMap", "currentValue", 
		"curve", "dataOrigin", "date", "dayNumber", "dcFanInLoad", "dcFanInLoadDisplay", 
		"dcFanOutLoad", "dcFanOutLoadDisplay", "dcMaxFanIn", "dcMaxFanInDisplay", 
		"dcMaxFanOut", "dcMaxFanOutDisplay", "decimalToString", "defaultClusterConfiguration", 
		"defaultConnection", "degree", "delay", "denominator", "derivation", "derivedFrom", 
		"design", "designator", "designatorDisplay", "designHeader", "designHierarchy", 
		"designHierarchyHeader", "designHierarchyNameCaseSensitive", "designHierarchyNameDef", 
		"designNameCaseSensitive", "designNameDef", "designUnits", "diagram", 
		"diagramNameDef", "directionalPortAttributeOverride", "display", "displayAttributes", 
		"displayName", "displayNameOverride", "distanceValue", "dividend", "divisor", 
		"documentation", "documentationHeader", "documentationNameCaseSensitive", 
		"documentationNameDef", "documentationUnits", "dominates", "dot", "drawingDescription", 
		"drawingDescriptionDisplay", "drawingIdentification", "drawingIdentificationDisplay", 
		"drawingSize", "drawingSizeDisplay", "duration", "e", "edif", "edifHeader", 
		"edifLevel", "edifLevelValue", "edifNameDef", "edifVersion", "endPoint", 
		"endType", "engineeringDate", "engineeringDateDisplay", "event", "exponent", 
		"extend", "extendForFrameMemberDef", "extendFrameDef", "extendInstanceDef", 
		"extendInstanceMemberDef", "extendInterconnectDef", "extendPageDef", "extendPortDef", 
		"extendPortMemberDef", "extendSignalDef", "extendSignalGroupDef", "extendSignalMemberDef", 
		"external", "fahrenheit", "efalse", "farad", "figure", "figureGroup", 
		"figureGroupNameCaseSensitive", "figureGroupNameDef", "figureGroupNameRef", 
		"figureGroupOverride", "fillPattern", "fillPatternVisible", "firstIntegerExpression", 
		"firstStringExpression", "fixed", "font", "fontCapitalHeight", "fontDefinitions", 
		"fontDescent", "fontFamily", "fontHeight", "fontNameDef", "fontNameRef", 
		"fontProportions", "fontRef", "fonts", "fontWidth", "forbiddenEvent", 
		"forFrame", "forFrameAnnotate", "forFrameIndex", "forFrameIndexDisplay", 
		"forFrameIndexNameCaseSensitive", "forFrameIndexRef", "forFrameMemberRef", 
		"forFrameRef", "frameConfiguration", "frameNameCaseSensitive", "frameNameDef", 
		"frameNameRef", "frameRef", "frequencyValue", "fromBottom", "fromInteger", 
		"fromLeft", "fromRight", "fromTop", "generated", "geometryMacro", "geometryMacroHeader", 
		"geometryMacroRef", "geometryMacroUnits", "globalPort", "globalPortBundle", 
		"globalPortDefinitions", "globalPortList", "globalPortNameCaseSensitive", 
		"globalPortNameDef", "globalPortNameDisplay", "globalPortNameRef", "globalPortPropertyDisplay", 
		"globalPortRef", "globalPortScope", "green", "henry", "hertz", "horizontalJustification", 
		"hotspot", "hotspotConnectDirection", "hotspotGrid", "hotspotNameCaseSensitive", 
		"hotspotNameDef", "hotspotNameDisplay", "hotspotNameRef", "hourNumber", 
		"ieeeDesignation", "ieeeSection", "ieeeStandard", "ifFrame", "ifFrameAnnotate", 
		"ifFrameRef", "ifFrameSet", "ignore", "implementationNameCaseSensitive", 
		"implementationNameDef", "implementationNameDisplay", "implementationNameRef", 
		"indexEndDisplay", "indexNameDef", "indexNameDisplay", "indexNameRef", 
		"indexStart", "indexStartDisplay", "indexStep", "indexStepDisplay", "indexValue", 
		"input", "inputPort", "inputPortAttributes", "instance", "instanceConfiguration", 
		"instanceIndexValue", "instanceMemberRef", "instanceNameCaseSensitive", 
		"instanceNameDef", "instanceNameDisplay", "instanceNameGenerator", "instanceNameGeneratorDisplay", 
		"instanceNameRef", "instancePortAttributeDisplay", "instancePortAttributes", 
		"instancePropertyDisplay", "instancePropertyOverride", "instanceRef", 
		"instanceWidth", "instanceWidthDisplay", "integer", "integerConstant", 
		"integerConstantRef", "integerEqual", "integerExpression", "integerParameter", 
		"integerParameterAssign", "integerParameterRef", "integerProduct", "integerQuotient", 
		"integerRemainder", "integerSubtract", "integerSum", "integerValue", "interconnectAnnotate", 
		"interconnectAttachedText", "interconnectDelay", "interconnectDelayDisplay", 
		"interconnectDelayNameDef", "interconnectDelayNameRef", "interconnectHeader", 
		"interconnectNameCaseSensitive", "interconnectNameDef", "interconnectNameDisplay", 
		"interconnectNameRef", "interconnectPropertyDisplay", "interconnectRef", 
		"interconnectSet", "einterface", "interfaceJoined", "interfaceUnits", 
		"iso8859", "iso8859Part", "isolated", "issue", "italicStyle", "jisx0201", 
		"jisx0208", "joinedAsSignal", "joule", "k0KeywordLevel", "k1KeywordAlias", 
		"k1KeywordLevel", "k1KeywordNameDef", "k1KeywordNameRef", "k2Actual", 
		"k2Build", "k2Formal", "k2FormalNameDef", "k2FormalNameRef", "k2Generate", 
		"k2KeywordDefine", "k2KeywordLevel", "k2KeywordParameters", "k2Literal", 
		"k2Optional", "k2Required", "k3Build", "k3Collector", "k3ForEach", "k3Formal", 
		"k3FormalList", "k3Generate", "k3KeywordDefine", "k3KeywordLevel", "k3KeywordParameters", 
		"kelvin", "keywordMap", "kilogram", "leaf", "leafOccurrenceAnnotate", 
		"leftJustify", "lengthValue", "lessThan", "lessThanOrEqual", "library", 
		"libraryHeader", "libraryNameCaseSensitive", "libraryNameDef", "libraryNameRef", 
		"libraryObjectNameCaseSensitive", "libraryObjectNameDef", "libraryObjectNameRef", 
		"libraryRef", "loadDelay", "localPortGroup", "localPortGroupNameCaseSensitive", 
		"localPortGroupNameDef", "localPortGroupNameRef", "localPortGroupRef", 
		"logicalConnectivity", "logicDefinitions", "logicList", "logicMapInput", 
		"logicMapOutput", "logicModelUnits", "logicModelView", "logicNameDef", 
		"logicNameRef", "logicOneOf", "logicRef", "logicValue", "lsbToMsb", "mantissa", 
		"mark", "maskLayoutUnits", "maskLayoutView", "measured", "meter", "middleJustify", 
		"minimalWidth", "minimumStringLength", "miNoMax", "miNoMaxValue", "minuend", 
		"minuteNumber", "mixedDirection", "mnm", "mole", "monthNumber", "msbToLsb", 
		"mustJoin", "nameAlias", "nameCaseSensitivity", "nameDef", "nameDimension", 
		"nameDimensionStructure", "nameInformation", "namePartSeparator", "nameRef", 
		"nameStructure", "narrowPort", "narrowWire", "noHotspotGrid", "nominalHotspotGrid", 
		"nonPermutable", "not_", "notInherited", "number", "numberExpression", 
		"numberOfBasicUnits", "numberOfNewUnits", "numberParameter", "numberParameterAssign", 
		"numberParameterRef", "numberPoint", "numberValue", "numerator", "occurrenceAnnotate", 
		"occurrenceHierarchyAnnotate", "offsetEvent", "ohm", "openShape", "or_", 
		"origin", "originalBoundingBox", "originalDrawingDate", "originalDrawingDateDisplay", 
		"originalName", "otherwiseFrame", "otherwiseFrameAnnotate", "otherwiseFrameRef", 
		"output", "outputPort", "outputPortAttributes", "owner", "page", "pageAnnotate", 
		"pageBorder", "pageBorderTemplate", "pageBorderTemplateRef", "pageCommentGraphics", 
		"pageHeader", "pageIdentification", "pageIdentificationDisplay", "pageNameCaseSensitive", 
		"pageNameDef", "pageNameRef", "pagePropertyDisplay", "pageRef", "pageSize", 
		"pageTitle", "pageTitleBlock", "pageTitleBlockAttributeDisplay", "pageTitleBlockAttributes", 
		"pageTitleBlockTemplate", "pageTitleBlockTemplateRef", "pageTitleDisplay", 
		"parameterDisplay", "parameterNameCaseSensitive", "parameterNameDef", 
		"parameterNameDisplay", "parameterNameRef", "path", "pathDelay", "pathWidth", 
		"pcbLayoutUnits", "pcbLayoutView", "permutable", "physicalDefaults", "physicalScaling", 
		"pixelPattern", "pixelRow", "point", "pointList", "pointValue", "polygon", 
		"port", "portAnnotate", "portAttributeDisplay", "portBundle", "portDelay", 
		"portDelayDisplay", "portDelayNameDef", "portDelayNameRef", "portDelayOverride", 
		"portDirection", "portDirectionIndicator", "portIndexValue", "portInstanceRef", 
		"portJoined", "portList", "portLoadDelay", "portLoadDelayDisplay", "portLoadDelayNameDef", 
		"portLoadDelayNameRef", "portLoadDelayOverride", "portMemberRef", "portNameCaseSensitive", 
		"portNameDef", "portNameDisplay", "portNameGenerator", "portNameGeneratorDisplay", 
		"portNameRef", "portPropertyDisplay", "portPropertyDisplayOverride", "portPropertyOverride", 
		"portRef", "portSet", "portWidth", "presentLogicValue", "previousLogicValue", 
		"previousVersion", "primaryName", "program", "property", "propertyDisplay", 
		"propertyDisplayOverride", "propertyInheritanceControl", "propertyNameCaseSensitive", 
		"propertyNameDef", "propertyNameDisplay", "propertyNameRef", "propertyOverride", 
		"proportionalFont", "pt", "pt1", "pt2", "radian", "reason", "rectangle", 
		"red", "removeDisplay", "repetitionCount", "repetitionCountDisplay", "replaceDisplay", 
		"required", "resolves", "revision", "revisionDisplay", "rightJustify", 
		"ripperHotspot", "ripperHotspotRef", "rotation", "round", "rowSize", "scaledInteger", 
		"scaleX", "scaleY", "schematicBus", "schematicBusDetails", "schematicBusGraphics", 
		"schematicBusJoined", "schematicBusSlice", "schematicComplexFigure", "schematicFigureMacro", 
		"schematicFigureMacroRef", "schematicForFrameBorder", "schematicForFrameBorderTemplate", 
		"schematicForFrameBorderTemplateRef", "schematicForFrameImplementation", 
		"schematicForFrameImplementationHeader", "schematicFrameImplementationDetails", 
		"schematicGlobalPortAttributes", "schematicGlobalPortImplementation", 
		"schematicGlobalPortImplementationRef", "schematicGlobalPortTemplate", 
		"schematicGlobalPortTemplateRef", "schematicIfFrameBorder", "schematicIfFrameBorderTemplate", 
		"schematicIfFrameBorderTemplateRef", "schematicIfFrameImplementation", 
		"schematicIfFrameImplementationHeader", "schematicImplementation", "schematicInstanceImplementation", 
		"schematicInstanceImplementationRef", "schematicInterconnectAttributeDisplay", 
		"schematicInterconnectHeader", "schematicInterconnectTerminatorImplementation", 
		"schematicInterconnectTerminatorImplementationRef", "schematicInterconnectTerminatorTemplate", 
		"schematicInterconnectTerminatorTemplateRef", "schematicJunctionImplementation", 
		"schematicJunctionImplementationRef", "schematicJunctionTemplate", "schematicJunctionTemplateRef", 
		"schematicMasterPortImplementation", "schematicMasterPortImplementationRef", 
		"schematicMasterPortTemplate", "schematicMasterPortTemplateRef", "schematicMetric", 
		"schematicNet", "schematicNetDetails", "schematicNetGraphics", "schematicNetJoined", 
		"schematicOffPageConnectorImplementation", "schematicOffPageConnectorImplementationRef", 
		"schematicOffPageConnectorTemplate", "schematicOffPageConnectorTemplateRef", 
		"schematicOnPageConnectorImplementation", "schematicOnPageConnectorImplementationRef", 
		"schematicOnPageConnectorTemplate", "schematicOnPageConnectorTemplateRef", 
		"schematicOtherwiseFrameBorder", "schematicOtherwiseFrameBorderTemplate", 
		"schematicOtherwiseFrameBorderTemplateRef", "schematicOtherwiseFrameImplementation", 
		"schematicOtherwiseFrameImplementationHeader", "schematicPortAcPower", 
		"schematicPortAcPowerRecommendedFrequency", "schematicPortAcPowerRecommendedVoltageRms", 
		"schematicPortAnalog", "schematicPortAttributes", "schematicPortChassisGround", 
		"schematicPortClock", "schematicPortDcPower", "schematicPortDcPowerRecommendedVoltage", 
		"schematicPortEarthGround", "schematicPortGround", "schematicPortNonLogical", 
		"schematicPortOpenCollector", "schematicPortOpenEmitter", "schematicPortPower", 
		"schematicPortStyle", "schematicPortThreeState", "schematicRequiredDefaults", 
		"schematicRipperImplementation", "schematicRipperImplementationRef", "schematicRipperTemplate", 
		"schematicRipperTemplateRef", "schematicSubBus", "schematicSubBusSet", 
		"schematicSubInterconnectHeader", "schematicSubNet", "schematicSubNetSet", 
		"schematicSymbol", "schematicSymbolBorder", "schematicSymbolBorderTemplate", 
		"schematicSymbolBorderTemplateRef", "schematicSymbolHeader", "schematicSymbolPortImplementation", 
		"schematicSymbolPortImplementationRef", "schematicSymbolPortTemplate", 
		"schematicSymbolPortTemplateRef", "schematicSymbolRef", "schematicTemplateHeader", 
		"schematicUnits", "schematicView", "schematicViewHeader", "schematicWireAffinity", 
		"schematicWireStyle", "second", "secondIntegerExpression", "secondNumber", 
		"secondStringExpression", "section", "sectionNameDef", "sectionTitle", 
		"sequence", "setAngle", "setCapacitance", "setCurrent", "setDistance", 
		"setFrequency", "setTime", "setVoltage", "shape", "siemens", "signal", 
		"signalAnnotate", "signalGroup", "signalGroupAnnotate", "signalGroupNameCaseSensitive", 
		"signalGroupNameDef", "signalGroupNameRef", "signalGroupRef", "signalIndexValue", 
		"signalJoined", "signalList", "signalMemberRef", "signalNameCaseSensitive", 
		"signalNameDef", "signalNameRef", "signalRef", "signalWidth", "simpleName", 
		"startPoint", "status", "step", "string", "stringConcatenate", "stringConstant", 
		"stringConstantRef", "stringEqual", "stringExpression", "stringLength", 
		"stringParameter", "stringParameterAssign", "stringParameterRef", "stringPrefix", 
		"stringSuffix", "stringValue", "strong", "subIssue", "substring", "substringLength", 
		"substringOffset", "subtrahend", "symbolicLayoutUnits", "symbolicLayoutView", 
		"symbolPortImplementationNameDef", "symbolPortImplementationNameRef", 
		"technology", "textHeight", "throughPoint", "time", "timeDelay", "timeInterval", 
		"timeStamp", "timeValue", "timing", "timingDisplay", "timingNameDef", 
		"timingNameRef", "toInteger", "topJustify", "totalPages", "totalPagesDisplay", 
		"transform", "transition", "etrue", "truncate", "typedValue", "typeface", 
		"typefaceSuffix", "unconfigured", "unconstrained", "undefined", "unit", 
		"unitDefinitions", "unitExponent", "unitNameDef", "unitNameRef", "unitRef", 
		"unrestricted", "unspecified", "unspecifiedDirectionPort", "untyped", 
		"unused", "usableArea", "userData", "userDataTag", "version", "verticalJustification", 
		"viewGroup", "viewGroupHeader", "viewGroupNameCaseSensitive", "viewGroupNameDef", 
		"viewGroupNameRef", "viewGroupRef", "viewNameCaseSensitive", "viewNameDef", 
		"viewNameDisplay", "viewNameRef", "viewPropertyDisplay", "viewPropertyOverride", 
		"viewRef", "visible", "volt", "voltageMap", "voltageValue", "watt", "weak", 
		"weakJoined", "weber", "widePort", "wideWire", "written", "xCoordinate", 
		"xNumberValue", "xor_", "yCoordinate", "year", "yearNumber", "yNumberValue", 
		"integerToken", "stringToken",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'(absolute'", "')'", "'(acLoad'", "'(acLoadDisplay'", "'(addDisplay'", 
		"'(ampere'", "'(and'", "'(annotate'", "'(approvedDate'", "'(approvedDateDisplay'", 
		"'(arc'", "'(ascii'", "'(associatedInterconnectNameDisplay'", "'(author'", 
		"'(backgroundColor'", "'(baselineJustify'", "'(becomes'", "'(behaviorView'", 
		"'(bidirectional'", "'(bidirectionalPort'", "'(bidirectionalPortAttributes'", 
		"'(bitOrder'", "'(boldStyle'", "'(boolean'", "'(booleanConstant'", "'(booleanConstantRef'", 
		"'(booleanMap'", "'(booleanParameter'", "'(booleanParameterAssign'", "'(booleanParameterRef'", 
		"'(borderPattern'", "'(borderPatternVisible'", "'(borderWidth'", "'(bottomJustify'", 
		"'(calculated'", "'(candela'", "'(caplineJustify'", "'(cell'", "'(cellHeader'", 
		"'(cellNameDisplay'", "'(cellPropertyDisplay'", "'(cellPropertyDisplayOverride'", 
		"'(cellPropertyOverride'", "'(cellRef'", "'(celsius'", "'(centerJustify'", 
		"'(characterEncoding'", "'(checkDate'", "'(checkDateDisplay'", "'(circle'", 
		"'(cluster'", "'(clusterConfiguration'", "'(clusterConfigurationNameCaseSensitive'", 
		"'(clusterConfigurationRef'", "'(clusterHeader'", "'(clusterNameCaseSensitive'", 
		"'(clusterPropertyDisplay'", "'(clusterPropertyDisplayOverride'", "'(clusterPropertyOverride'", 
		"'(clusterRef'", "'(color'", "'(comment'", "'(commentGraphics'", "'(companyName'", 
		"'(companyNameDisplay'", "'(complementedName'", "'(complementedNamePart'", 
		"'(complexGeometry'", "'(complexName'", "'(compound'", "'(condition'", 
		"'(conditionDisplay'", "'(connectedSignalIndexGenerator'", "'(connectedSignalIndexGeneratorDisplay'", 
		"'(connectivityBus'", "'(connectivityBusJoined'", "'(connectivityBusSlice'", 
		"'(connectivityFrameStructure'", "'(connectivityNet'", "'(connectivityNetJoined'", 
		"'(connectivityRipper'", "'(connectivityRipperRef'", "'(connectivityStructure'", 
		"'(connectivitySubBus'", "'(connectivitySubNet'", "'(connectivityTagGenerator'", 
		"'(connectivityTagGeneratorDisplay'", "'(connectivityUnits'", "'(connectivityView'", 
		"'(connectivityViewHeader'", "'(constantValues'", "'(contract'", "'(contractDisplay'", 
		"'(copyright'", "'(copyrightDisplay'", "'(cornerType'", "'(coulomb'", 
		"'(criticality'", "'(criticalityDisplay'", "'(currentMap'", "'(curve'", 
		"'(dataOrigin'", "'(date'", "'(dcFanInLoad'", "'(dcFanInLoadDisplay'", 
		"'(dcFanOutLoad'", "'(dcFanOutLoadDisplay'", "'(dcMaxFanIn'", "'(dcMaxFanInDisplay'", 
		"'(dcMaxFanOut'", "'(dcMaxFanOutDisplay'", "'(decimalToString'", "'(defaultClusterConfiguration'", 
		"'(defaultConnection'", "'(degree'", "'(delay'", "'(derivedFrom'", "'(design'", 
		"'(designator'", "'(designatorDisplay'", "'(designHeader'", "'(designHierarchy'", 
		"'(designHierarchyHeader'", "'(designHierarchyNameCaseSensitive'", "'(designNameCaseSensitive'", 
		"'(designUnits'", "'(diagram'", "'(directionalPortAttributeOverride'", 
		"'(display'", "'(displayAttributes'", "'(displayName'", "'(displayNameOverride'", 
		"'(documentation'", "'(documentationHeader'", "'(documentationNameCaseSensitive'", 
		"'(documentationUnits'", "'(dominates'", "'(dot'", "'(drawingDescription'", 
		"'(drawingDescriptionDisplay'", "'(drawingIdentification'", "'(drawingIdentificationDisplay'", 
		"'(drawingSize'", "'(drawingSizeDisplay'", "'(duration'", "'(e'", "'(edif'", 
		"'(edifHeader'", "'(edifLevel'", "'(edifVersion'", "'(endType'", "'(engineeringDate'", 
		"'(engineeringDateDisplay'", "'(event'", "'(extend'", "'(external'", "'(fahrenheit'", 
		"'(false'", "'(farad'", "'(figure'", "'(figureGroup'", "'(figureGroupNameCaseSensitive'", 
		"'(figureGroupOverride'", "'(fillPattern'", "'(fillPatternVisible'", "'(fixed'", 
		"'(font'", "'(fontCapitalHeight'", "'(fontDefinitions'", "'(fontDescent'", 
		"'(fontHeight'", "'(fontProportions'", "'(fontRef'", "'(fonts'", "'(fontWidth'", 
		"'(forbiddenEvent'", "'(forFrame'", "'(forFrameAnnotate'", "'(forFrameIndex'", 
		"'(forFrameIndexDisplay'", "'(forFrameIndexNameCaseSensitive'", "'(forFrameIndexRef'", 
		"'(forFrameMemberRef'", "'(forFrameRef'", "'(frameConfiguration'", "'(frameNameCaseSensitive'", 
		"'(frameRef'", "'(fromBottom'", "'(fromLeft'", "'(fromRight'", "'(fromTop'", 
		"'(generated'", "'(geometryMacro'", "'(geometryMacroHeader'", "'(geometryMacroRef'", 
		"'(geometryMacroUnits'", "'(globalPort'", "'(globalPortBundle'", "'(globalPortDefinitions'", 
		"'(globalPortList'", "'(globalPortNameCaseSensitive'", "'(globalPortNameDisplay'", 
		"'(globalPortPropertyDisplay'", "'(globalPortRef'", "'(globalPortScope'", 
		"'(henry'", "'(hertz'", "'(horizontalJustification'", "'(hotspot'", "'(hotspotConnectDirection'", 
		"'(hotspotGrid'", "'(hotspotNameCaseSensitive'", "'(hotspotNameDisplay'", 
		"'(ieeeSection'", "'(ieeeStandard'", "'(ifFrame'", "'(ifFrameAnnotate'", 
		"'(ifFrameRef'", "'(ifFrameSet'", "'(ignore'", "'(implementationNameCaseSensitive'", 
		"'(implementationNameDisplay'", "'(indexEndDisplay'", "'(indexNameDisplay'", 
		"'(indexStart'", "'(indexStartDisplay'", "'(indexStep'", "'(indexStepDisplay'", 
		"'(indexValue'", "'(input'", "'(inputPort'", "'(inputPortAttributes'", 
		"'(instance'", "'(instanceConfiguration'", "'(instanceIndexValue'", "'(instanceMemberRef'", 
		"'(instanceNameCaseSensitive'", "'(instanceNameDisplay'", "'(instanceNameGenerator'", 
		"'(instanceNameGeneratorDisplay'", "'(instancePortAttributeDisplay'", 
		"'(instancePortAttributes'", "'(instancePropertyDisplay'", "'(instancePropertyOverride'", 
		"'(instanceRef'", "'(instanceWidth'", "'(instanceWidthDisplay'", "'(integer'", 
		"'(integerConstant'", "'(integerConstantRef'", "'(integerEqual'", "'(integerParameter'", 
		"'(integerParameterAssign'", "'(integerParameterRef'", "'(integerProduct'", 
		"'(integerQuotient'", "'(integerRemainder'", "'(integerSubtract'", "'(integerSum'", 
		"'(interconnectAnnotate'", "'(interconnectAttachedText'", "'(interconnectDelay'", 
		"'(interconnectDelayDisplay'", "'(interconnectHeader'", "'(interconnectNameCaseSensitive'", 
		"'(interconnectNameDisplay'", "'(interconnectPropertyDisplay'", "'(interconnectRef'", 
		"'(interconnectSet'", "'(interface'", "'(interfaceJoined'", "'(interfaceUnits'", 
		"'(iso8859'", "'(isolated'", "'(italicStyle'", "'(jisx0201'", "'(jisx0208'", 
		"'(joinedAsSignal'", "'(joule'", "'(k0KeywordLevel'", "'(k1KeywordAlias'", 
		"'(k1KeywordLevel'", "'(k2Actual'", "'(k2Build'", "'(k2Formal'", "'(k2Generate'", 
		"'(k2KeywordDefine'", "'(k2KeywordLevel'", "'(k2KeywordParameters'", "'(k2Literal'", 
		"'(k2Optional'", "'(k2Required'", "'(k3Build'", "'(k3Collector'", "'(k3ForEach'", 
		"'(k3Formal'", "'(k3FormalList'", "'(k3Generate'", "'(k3KeywordDefine'", 
		"'(k3KeywordLevel'", "'(k3KeywordParameters'", "'(kelvin'", "'(keywordMap'", 
		"'(kilogram'", "'(leaf'", "'(leafOccurrenceAnnotate'", "'(leftJustify'", 
		"'(lessThan'", "'(lessThanOrEqual'", "'(library'", "'(libraryHeader'", 
		"'(libraryNameCaseSensitive'", "'(libraryObjectNameCaseSensitive'", "'(libraryRef'", 
		"'(loadDelay'", "'(localPortGroup'", "'(localPortGroupNameCaseSensitive'", 
		"'(localPortGroupRef'", "'(logicalConnectivity'", "'(logicDefinitions'", 
		"'(logicList'", "'(logicMapInput'", "'(logicMapOutput'", "'(logicModelUnits'", 
		"'(logicModelView'", "'(logicOneOf'", "'(logicRef'", "'(logicValue'", 
		"'(lsbToMsb'", "'(maskLayoutUnits'", "'(maskLayoutView'", "'(measured'", 
		"'(meter'", "'(middleJustify'", "'(minimalWidth'", "'(minimumStringLength'", 
		"'(miNoMax'", "'(mixedDirection'", "'(mnm'", "'(mole'", "'(msbToLsb'", 
		"'(mustJoin'", "'(nameAlias'", "'(nameCaseSensitivity'", "'(nameDimension'", 
		"'(nameDimensionStructure'", "'(nameInformation'", "'(namePartSeparator'", 
		"'(nameStructure'", "'(narrowPort'", "'(narrowWire'", "'(noHotspotGrid'", 
		"'(nominalHotspotGrid'", "'(nonPermutable'", "'(not'", "'(notInherited'", 
		"'(number'", "'(numberParameter'", "'(numberParameterAssign'", "'(numberParameterRef'", 
		"'(numberPoint'", "'(occurrenceAnnotate'", "'(occurrenceHierarchyAnnotate'", 
		"'(offsetEvent'", "'(ohm'", "'(openShape'", "'(or'", "'(origin'", "'(originalBoundingBox'", 
		"'(originalDrawingDate'", "'(originalDrawingDateDisplay'", "'(otherwiseFrame'", 
		"'(otherwiseFrameAnnotate'", "'(otherwiseFrameRef'", "'(output'", "'(outputPort'", 
		"'(outputPortAttributes'", "'(owner'", "'(page'", "'(pageAnnotate'", "'(pageBorder'", 
		"'(pageBorderTemplate'", "'(pageBorderTemplateRef'", "'(pageCommentGraphics'", 
		"'(pageHeader'", "'(pageIdentification'", "'(pageIdentificationDisplay'", 
		"'(pageNameCaseSensitive'", "'(pagePropertyDisplay'", "'(pageRef'", "'(pageSize'", 
		"'(pageTitle'", "'(pageTitleBlock'", "'(pageTitleBlockAttributeDisplay'", 
		"'(pageTitleBlockAttributes'", "'(pageTitleBlockTemplate'", "'(pageTitleBlockTemplateRef'", 
		"'(pageTitleDisplay'", "'(parameterDisplay'", "'(parameterNameCaseSensitive'", 
		"'(parameterNameDisplay'", "'(path'", "'(pathDelay'", "'(pathWidth'", 
		"'(pcbLayoutUnits'", "'(pcbLayoutView'", "'(permutable'", "'(physicalDefaults'", 
		"'(physicalScaling'", "'(pixelPattern'", "'(pixelRow'", "'(point'", "'(pointList'", 
		"'(polygon'", "'(port'", "'(portAnnotate'", "'(portAttributeDisplay'", 
		"'(portBundle'", "'(portDelay'", "'(portDelayDisplay'", "'(portDelayOverride'", 
		"'(portIndexValue'", "'(portInstanceRef'", "'(portJoined'", "'(portList'", 
		"'(portLoadDelay'", "'(portLoadDelayDisplay'", "'(portLoadDelayOverride'", 
		"'(portMemberRef'", "'(portNameCaseSensitive'", "'(portNameDisplay'", 
		"'(portNameGenerator'", "'(portNameGeneratorDisplay'", "'(portPropertyDisplay'", 
		"'(portPropertyDisplayOverride'", "'(portPropertyOverride'", "'(portRef'", 
		"'(portSet'", "'(portWidth'", "'(previousVersion'", "'(primaryName'", 
		"'(program'", "'(property'", "'(propertyDisplay'", "'(propertyDisplayOverride'", 
		"'(propertyInheritanceControl'", "'(propertyNameCaseSensitive'", "'(propertyNameDisplay'", 
		"'(propertyOverride'", "'(proportionalFont'", "'(pt'", "'(radian'", "'(reason'", 
		"'(rectangle'", "'(removeDisplay'", "'(repetitionCount'", "'(repetitionCountDisplay'", 
		"'(replaceDisplay'", "'(required'", "'(resolves'", "'(revision'", "'(revisionDisplay'", 
		"'(rightJustify'", "'(ripperHotspot'", "'(ripperHotspotRef'", "'(rotation'", 
		"'(round'", "'(scaleX'", "'(scaleY'", "'(schematicBus'", "'(schematicBusDetails'", 
		"'(schematicBusGraphics'", "'(schematicBusJoined'", "'(schematicBusSlice'", 
		"'(schematicComplexFigure'", "'(schematicFigureMacro'", "'(schematicFigureMacroRef'", 
		"'(schematicForFrameBorder'", "'(schematicForFrameBorderTemplate'", "'(schematicForFrameBorderTemplateRef'", 
		"'(schematicForFrameImplementation'", "'(schematicForFrameImplementationHeader'", 
		"'(schematicFrameImplementationDetails'", "'(schematicGlobalPortAttributes'", 
		"'(schematicGlobalPortImplementation'", "'(schematicGlobalPortImplementationRef'", 
		"'(schematicGlobalPortTemplate'", "'(schematicGlobalPortTemplateRef'", 
		"'(schematicIfFrameBorder'", "'(schematicIfFrameBorderTemplate'", "'(schematicIfFrameBorderTemplateRef'", 
		"'(schematicIfFrameImplementation'", "'(schematicIfFrameImplementationHeader'", 
		"'(schematicImplementation'", "'(schematicInstanceImplementation'", "'(schematicInstanceImplementationRef'", 
		"'(schematicInterconnectAttributeDisplay'", "'(schematicInterconnectHeader'", 
		"'(schematicInterconnectTerminatorImplementation'", "'(schematicInterconnectTerminatorImplementationRef'", 
		"'(schematicInterconnectTerminatorTemplate'", "'(schematicInterconnectTerminatorTemplateRef'", 
		"'(schematicJunctionImplementation'", "'(schematicJunctionImplementationRef'", 
		"'(schematicJunctionTemplate'", "'(schematicJunctionTemplateRef'", "'(schematicMasterPortImplementation'", 
		"'(schematicMasterPortImplementationRef'", "'(schematicMasterPortTemplate'", 
		"'(schematicMasterPortTemplateRef'", "'(schematicMetric'", "'(schematicNet'", 
		"'(schematicNetDetails'", "'(schematicNetGraphics'", "'(schematicNetJoined'", 
		"'(schematicOffPageConnectorImplementation'", "'(schematicOffPageConnectorImplementationRef'", 
		"'(schematicOffPageConnectorTemplate'", "'(schematicOffPageConnectorTemplateRef'", 
		"'(schematicOnPageConnectorImplementation'", "'(schematicOnPageConnectorImplementationRef'", 
		"'(schematicOnPageConnectorTemplate'", "'(schematicOnPageConnectorTemplateRef'", 
		"'(schematicOtherwiseFrameBorder'", "'(schematicOtherwiseFrameBorderTemplate'", 
		"'(schematicOtherwiseFrameBorderTemplateRef'", "'(schematicOtherwiseFrameImplementation'", 
		"'(schematicOtherwiseFrameImplementationHeader'", "'(schematicPortAcPower'", 
		"'(schematicPortAcPowerRecommendedFrequency'", "'(schematicPortAcPowerRecommendedVoltageRms'", 
		"'(schematicPortAnalog'", "'(schematicPortAttributes'", "'(schematicPortChassisGround'", 
		"'(schematicPortClock'", "'(schematicPortDcPower'", "'(schematicPortDcPowerRecommendedVoltage'", 
		"'(schematicPortEarthGround'", "'(schematicPortGround'", "'(schematicPortNonLogical'", 
		"'(schematicPortOpenCollector'", "'(schematicPortOpenEmitter'", "'(schematicPortPower'", 
		"'(schematicPortStyle'", "'(schematicPortThreeState'", "'(schematicRequiredDefaults'", 
		"'(schematicRipperImplementation'", "'(schematicRipperImplementationRef'", 
		"'(schematicRipperTemplate'", "'(schematicRipperTemplateRef'", "'(schematicSubBus'", 
		"'(schematicSubBusSet'", "'(schematicSubInterconnectHeader'", "'(schematicSubNet'", 
		"'(schematicSubNetSet'", "'(schematicSymbol'", "'(schematicSymbolBorder'", 
		"'(schematicSymbolBorderTemplate'", "'(schematicSymbolBorderTemplateRef'", 
		"'(schematicSymbolHeader'", "'(schematicSymbolPortImplementation'", "'(schematicSymbolPortImplementationRef'", 
		"'(schematicSymbolPortTemplate'", "'(schematicSymbolPortTemplateRef'", 
		"'(schematicSymbolRef'", "'(schematicTemplateHeader'", "'(schematicUnits'", 
		"'(schematicView'", "'(schematicViewHeader'", "'(schematicWireAffinity'", 
		"'(schematicWireStyle'", "'(second'", "'(section'", "'(sectionTitle'", 
		"'(sequence'", "'(setAngle'", "'(setCapacitance'", "'(setCurrent'", "'(setDistance'", 
		"'(setFrequency'", "'(setTime'", "'(setVoltage'", "'(shape'", "'(siemens'", 
		"'(signal'", "'(signalAnnotate'", "'(signalGroup'", "'(signalGroupAnnotate'", 
		"'(signalGroupNameCaseSensitive'", "'(signalGroupRef'", "'(signalIndexValue'", 
		"'(signalJoined'", "'(signalList'", "'(signalMemberRef'", "'(signalNameCaseSensitive'", 
		"'(signalRef'", "'(signalWidth'", "'(status'", "'(step'", "'(string'", 
		"'(stringConcatenate'", "'(stringConstant'", "'(stringConstantRef'", "'(stringEqual'", 
		"'(stringLength'", "'(stringParameter'", "'(stringParameterAssign'", "'(stringParameterRef'", 
		"'(stringPrefix'", "'(stringSuffix'", "'(strong'", "'(substring'", "'(symbolicLayoutUnits'", 
		"'(symbolicLayoutView'", "'(technology'", "'(textHeight'", "'(time'", 
		"'(timeInterval'", "'(timeStamp'", "'(timing'", "'(timingDisplay'", "'(topJustify'", 
		"'(totalPages'", "'(totalPagesDisplay'", "'(transform'", "'(transition'", 
		"'(true'", "'(truncate'", "'(typeface'", "'(typefaceSuffix'", "'(unconfigured'", 
		"'(unconstrained'", "'(undefined'", "'(unit'", "'(unitDefinitions'", "'(unitRef'", 
		"'(unrestricted'", "'(unspecified'", "'(unspecifiedDirectionPort'", "'(untyped'", 
		"'(unused'", "'(usableArea'", "'(userData'", "'(version'", "'(verticalJustification'", 
		"'(viewGroup'", "'(viewGroupHeader'", "'(viewGroupNameCaseSensitive'", 
		"'(viewGroupRef'", "'(viewNameCaseSensitive'", "'(viewNameDisplay'", "'(viewPropertyDisplay'", 
		"'(viewPropertyOverride'", "'(viewRef'", "'(visible'", "'(volt'", "'(voltageMap'", 
		"'(watt'", "'(weak'", "'(weakJoined'", "'(weber'", "'(widePort'", "'(wideWire'", 
		"'(written'", "'(xor'", "'(year'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "IDENTIFIER", "STRING_LITERAL", "DECIMAL_LITERAL", 
		"WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(EDIF300Parser._LITERAL_NAMES, EDIF300Parser._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return EDIF300Parser.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace

	// @Override
	public get grammarFileName(): string { return "EDIF300.g4"; }

	// @Override
	public get ruleNames(): string[] { return EDIF300Parser.ruleNames; }

	// @Override
	public get serializedATN(): string { return EDIF300Parser._serializedATN; }

	constructor(input: TokenStream) {
		super(input);
		this._interp = new ParserATNSimulator(EDIF300Parser._ATN, this);
	}
	// @RuleVersion(0)
	public goal(): GoalContext {
		let _localctx: GoalContext = new GoalContext(this._ctx, this.state);
		this.enterRule(_localctx, 0, EDIF300Parser.RULE_goal);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1664;
			this.edif();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public absolute(): AbsoluteContext {
		let _localctx: AbsoluteContext = new AbsoluteContext(this._ctx, this.state);
		this.enterRule(_localctx, 2, EDIF300Parser.RULE_absolute);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1666;
			this.match(EDIF300Parser.T__0);
			this.state = 1667;
			this.integerExpression();
			this.state = 1668;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public acLoad(): AcLoadContext {
		let _localctx: AcLoadContext = new AcLoadContext(this._ctx, this.state);
		this.enterRule(_localctx, 4, EDIF300Parser.RULE_acLoad);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1670;
			this.match(EDIF300Parser.T__2);
			this.state = 1671;
			this.capacitanceValue();
			this.state = 1672;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public acLoadDisplay(): AcLoadDisplayContext {
		let _localctx: AcLoadDisplayContext = new AcLoadDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 6, EDIF300Parser.RULE_acLoadDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1674;
			this.match(EDIF300Parser.T__3);
			this.state = 1678;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 1675;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 1676;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 1677;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 1680;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public acLoadFactorCapacitance(): AcLoadFactorCapacitanceContext {
		let _localctx: AcLoadFactorCapacitanceContext = new AcLoadFactorCapacitanceContext(this._ctx, this.state);
		this.enterRule(_localctx, 8, EDIF300Parser.RULE_acLoadFactorCapacitance);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1682;
			this.capacitanceValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public acLoadFactorTime(): AcLoadFactorTimeContext {
		let _localctx: AcLoadFactorTimeContext = new AcLoadFactorTimeContext(this._ctx, this.state);
		this.enterRule(_localctx, 10, EDIF300Parser.RULE_acLoadFactorTime);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1684;
			this.timeValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public addDisplay(): AddDisplayContext {
		let _localctx: AddDisplayContext = new AddDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 12, EDIF300Parser.RULE_addDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1686;
			this.match(EDIF300Parser.T__4);
			this.state = 1690;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 1687;
				this.display();
				}
				}
				this.state = 1692;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1693;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ampere(): AmpereContext {
		let _localctx: AmpereContext = new AmpereContext(this._ctx, this.state);
		this.enterRule(_localctx, 14, EDIF300Parser.RULE_ampere);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1695;
			this.match(EDIF300Parser.T__5);
			this.state = 1696;
			this.unitExponent();
			this.state = 1697;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public and_(): And_Context {
		let _localctx: And_Context = new And_Context(this._ctx, this.state);
		this.enterRule(_localctx, 16, EDIF300Parser.RULE_and_);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1699;
			this.match(EDIF300Parser.T__6);
			this.state = 1703;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << EDIF300Parser.T__6) | (1 << EDIF300Parser.T__25) | (1 << EDIF300Parser.T__29))) !== 0) || _la === EDIF300Parser.T__157 || _la === EDIF300Parser.T__250 || _la === EDIF300Parser.T__307 || _la === EDIF300Parser.T__308 || _la === EDIF300Parser.T__354 || _la === EDIF300Parser.T__366 || _la === EDIF300Parser.T__603 || _la === EDIF300Parser.T__626 || _la === EDIF300Parser.T__664) {
				{
				{
				this.state = 1700;
				this.booleanExpression();
				}
				}
				this.state = 1705;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1706;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public angleValue(): AngleValueContext {
		let _localctx: AngleValueContext = new AngleValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 18, EDIF300Parser.RULE_angleValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1708;
			this.numberValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public annotate(): AnnotateContext {
		let _localctx: AnnotateContext = new AnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 20, EDIF300Parser.RULE_annotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1710;
			this.match(EDIF300Parser.T__7);
			this.state = 1711;
			this.stringValue();
			this.state = 1715;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 1712;
				this.display();
				}
				}
				this.state = 1717;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1718;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public approvedDate(): ApprovedDateContext {
		let _localctx: ApprovedDateContext = new ApprovedDateContext(this._ctx, this.state);
		this.enterRule(_localctx, 22, EDIF300Parser.RULE_approvedDate);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1720;
			this.match(EDIF300Parser.T__8);
			this.state = 1721;
			this.date();
			this.state = 1722;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public approvedDateDisplay(): ApprovedDateDisplayContext {
		let _localctx: ApprovedDateDisplayContext = new ApprovedDateDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 24, EDIF300Parser.RULE_approvedDateDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1724;
			this.match(EDIF300Parser.T__9);
			this.state = 1728;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 1725;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 1726;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 1727;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 1730;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public arc(): ArcContext {
		let _localctx: ArcContext = new ArcContext(this._ctx, this.state);
		this.enterRule(_localctx, 26, EDIF300Parser.RULE_arc);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1732;
			this.match(EDIF300Parser.T__10);
			this.state = 1733;
			this.startPoint();
			this.state = 1734;
			this.throughPoint();
			this.state = 1735;
			this.endPoint();
			this.state = 1736;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ascii(): AsciiContext {
		let _localctx: AsciiContext = new AsciiContext(this._ctx, this.state);
		this.enterRule(_localctx, 28, EDIF300Parser.RULE_ascii);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1738;
			this.match(EDIF300Parser.T__11);
			this.state = 1739;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public associatedInterconnectNameDisplay(): AssociatedInterconnectNameDisplayContext {
		let _localctx: AssociatedInterconnectNameDisplayContext = new AssociatedInterconnectNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 30, EDIF300Parser.RULE_associatedInterconnectNameDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1741;
			this.match(EDIF300Parser.T__12);
			this.state = 1745;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 1742;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 1743;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 1744;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 1747;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public attachmentPoint(): AttachmentPointContext {
		let _localctx: AttachmentPointContext = new AttachmentPointContext(this._ctx, this.state);
		this.enterRule(_localctx, 32, EDIF300Parser.RULE_attachmentPoint);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1749;
			this.pointValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public author(): AuthorContext {
		let _localctx: AuthorContext = new AuthorContext(this._ctx, this.state);
		this.enterRule(_localctx, 34, EDIF300Parser.RULE_author);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1751;
			this.match(EDIF300Parser.T__13);
			this.state = 1752;
			this.stringToken();
			this.state = 1753;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public backgroundColor(): BackgroundColorContext {
		let _localctx: BackgroundColorContext = new BackgroundColorContext(this._ctx, this.state);
		this.enterRule(_localctx, 36, EDIF300Parser.RULE_backgroundColor);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1755;
			this.match(EDIF300Parser.T__14);
			this.state = 1756;
			this.color();
			this.state = 1757;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public baselineJustify(): BaselineJustifyContext {
		let _localctx: BaselineJustifyContext = new BaselineJustifyContext(this._ctx, this.state);
		this.enterRule(_localctx, 38, EDIF300Parser.RULE_baselineJustify);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1759;
			this.match(EDIF300Parser.T__15);
			this.state = 1760;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public becomes(): BecomesContext {
		let _localctx: BecomesContext = new BecomesContext(this._ctx, this.state);
		this.enterRule(_localctx, 40, EDIF300Parser.RULE_becomes);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1762;
			this.match(EDIF300Parser.T__16);
			this.state = 1766;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.IDENTIFIER:
				{
				this.state = 1763;
				this.logicNameRef();
				}
				break;
			case EDIF300Parser.T__320:
				{
				this.state = 1764;
				this.logicList();
				}
				break;
			case EDIF300Parser.T__325:
				{
				this.state = 1765;
				this.logicOneOf();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 1768;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public behaviorView(): BehaviorViewContext {
		let _localctx: BehaviorViewContext = new BehaviorViewContext(this._ctx, this.state);
		this.enterRule(_localctx, 42, EDIF300Parser.RULE_behaviorView);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1770;
			this.match(EDIF300Parser.T__17);
			this.state = 1771;
			this.viewNameDef();
			this.state = 1777;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__642) {
				{
				this.state = 1775;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 1772;
					this.comment();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 1773;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 1774;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 1779;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1780;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public bidirectional(): BidirectionalContext {
		let _localctx: BidirectionalContext = new BidirectionalContext(this._ctx, this.state);
		this.enterRule(_localctx, 44, EDIF300Parser.RULE_bidirectional);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1782;
			this.match(EDIF300Parser.T__18);
			this.state = 1783;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public bidirectionalPort(): BidirectionalPortContext {
		let _localctx: BidirectionalPortContext = new BidirectionalPortContext(this._ctx, this.state);
		this.enterRule(_localctx, 46, EDIF300Parser.RULE_bidirectionalPort);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1785;
			this.match(EDIF300Parser.T__19);
			this.state = 1787;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__20) {
				{
				this.state = 1786;
				this.bidirectionalPortAttributes();
				}
			}

			this.state = 1789;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public bidirectionalPortAttributes(): BidirectionalPortAttributesContext {
		let _localctx: BidirectionalPortAttributesContext = new BidirectionalPortAttributesContext(this._ctx, this.state);
		this.enterRule(_localctx, 48, EDIF300Parser.RULE_bidirectionalPortAttributes);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1791;
			this.match(EDIF300Parser.T__20);
			this.state = 1798;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 104)) & ~0x1F) === 0 && ((1 << (_la - 104)) & ((1 << (EDIF300Parser.T__103 - 104)) | (1 << (EDIF300Parser.T__105 - 104)) | (1 << (EDIF300Parser.T__107 - 104)) | (1 << (EDIF300Parser.T__109 - 104)))) !== 0)) {
				{
				this.state = 1796;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__103:
					{
					this.state = 1792;
					this.dcFanInLoad();
					}
					break;
				case EDIF300Parser.T__105:
					{
					this.state = 1793;
					this.dcFanOutLoad();
					}
					break;
				case EDIF300Parser.T__107:
					{
					this.state = 1794;
					this.dcMaxFanIn();
					}
					break;
				case EDIF300Parser.T__109:
					{
					this.state = 1795;
					this.dcMaxFanOut();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 1800;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1801;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public bitOrder(): BitOrderContext {
		let _localctx: BitOrderContext = new BitOrderContext(this._ctx, this.state);
		this.enterRule(_localctx, 50, EDIF300Parser.RULE_bitOrder);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1803;
			this.match(EDIF300Parser.T__21);
			this.state = 1806;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__328:
				{
				this.state = 1804;
				this.lsbToMsb();
				}
				break;
			case EDIF300Parser.T__340:
				{
				this.state = 1805;
				this.msbToLsb();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 1808;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public blue(): BlueContext {
		let _localctx: BlueContext = new BlueContext(this._ctx, this.state);
		this.enterRule(_localctx, 52, EDIF300Parser.RULE_blue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1810;
			this.scaledInteger();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public boldStyle(): BoldStyleContext {
		let _localctx: BoldStyleContext = new BoldStyleContext(this._ctx, this.state);
		this.enterRule(_localctx, 54, EDIF300Parser.RULE_boldStyle);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1812;
			this.match(EDIF300Parser.T__22);
			this.state = 1813;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public eboolean(): EbooleanContext {
		let _localctx: EbooleanContext = new EbooleanContext(this._ctx, this.state);
		this.enterRule(_localctx, 56, EDIF300Parser.RULE_eboolean);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1815;
			this.match(EDIF300Parser.T__23);
			this.state = 1816;
			this.booleanExpression();
			this.state = 1817;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public booleanConstant(): BooleanConstantContext {
		let _localctx: BooleanConstantContext = new BooleanConstantContext(this._ctx, this.state);
		this.enterRule(_localctx, 58, EDIF300Parser.RULE_booleanConstant);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1819;
			this.match(EDIF300Parser.T__24);
			this.state = 1820;
			this.constantNameDef();
			this.state = 1821;
			this.booleanToken();
			this.state = 1822;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public booleanConstantRef(): BooleanConstantRefContext {
		let _localctx: BooleanConstantRefContext = new BooleanConstantRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 60, EDIF300Parser.RULE_booleanConstantRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1824;
			this.match(EDIF300Parser.T__25);
			this.state = 1825;
			this.constantNameRef();
			this.state = 1826;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public booleanExpression(): BooleanExpressionContext {
		let _localctx: BooleanExpressionContext = new BooleanExpressionContext(this._ctx, this.state);
		this.enterRule(_localctx, 62, EDIF300Parser.RULE_booleanExpression);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1839;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__6:
				{
				this.state = 1828;
				this.and_();
				}
				break;
			case EDIF300Parser.T__29:
				{
				this.state = 1829;
				this.booleanParameterRef();
				}
				break;
			case EDIF300Parser.T__157:
			case EDIF300Parser.T__626:
				{
				this.state = 1830;
				this.booleanToken();
				}
				break;
			case EDIF300Parser.T__603:
				{
				this.state = 1831;
				this.stringEqual();
				}
				break;
			case EDIF300Parser.T__250:
				{
				this.state = 1832;
				this.integerEqual();
				}
				break;
			case EDIF300Parser.T__307:
				{
				this.state = 1833;
				this.lessThan();
				}
				break;
			case EDIF300Parser.T__308:
				{
				this.state = 1834;
				this.lessThanOrEqual();
				}
				break;
			case EDIF300Parser.T__354:
				{
				this.state = 1835;
				this.not_();
				}
				break;
			case EDIF300Parser.T__366:
				{
				this.state = 1836;
				this.or_();
				}
				break;
			case EDIF300Parser.T__664:
				{
				this.state = 1837;
				this.xor_();
				}
				break;
			case EDIF300Parser.T__25:
				{
				this.state = 1838;
				this.booleanConstantRef();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public booleanMap(): BooleanMapContext {
		let _localctx: BooleanMapContext = new BooleanMapContext(this._ctx, this.state);
		this.enterRule(_localctx, 64, EDIF300Parser.RULE_booleanMap);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1841;
			this.match(EDIF300Parser.T__26);
			this.state = 1842;
			this.booleanValue();
			this.state = 1843;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public booleanParameter(): BooleanParameterContext {
		let _localctx: BooleanParameterContext = new BooleanParameterContext(this._ctx, this.state);
		this.enterRule(_localctx, 66, EDIF300Parser.RULE_booleanParameter);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1845;
			this.match(EDIF300Parser.T__27);
			this.state = 1846;
			this.parameterNameDef();
			this.state = 1851;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__23 || _la === EDIF300Parser.T__346) {
				{
				this.state = 1849;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__23:
					{
					this.state = 1847;
					this.eboolean();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 1848;
					this.nameInformation();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 1853;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1854;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public booleanParameterAssign(): BooleanParameterAssignContext {
		let _localctx: BooleanParameterAssignContext = new BooleanParameterAssignContext(this._ctx, this.state);
		this.enterRule(_localctx, 68, EDIF300Parser.RULE_booleanParameterAssign);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1856;
			this.match(EDIF300Parser.T__28);
			this.state = 1857;
			this.parameterNameRef();
			this.state = 1858;
			this.booleanExpression();
			this.state = 1859;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public booleanParameterRef(): BooleanParameterRefContext {
		let _localctx: BooleanParameterRefContext = new BooleanParameterRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 70, EDIF300Parser.RULE_booleanParameterRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1861;
			this.match(EDIF300Parser.T__29);
			this.state = 1862;
			this.parameterNameRef();
			this.state = 1863;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public booleanToken(): BooleanTokenContext {
		let _localctx: BooleanTokenContext = new BooleanTokenContext(this._ctx, this.state);
		this.enterRule(_localctx, 72, EDIF300Parser.RULE_booleanToken);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1867;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__157:
				{
				this.state = 1865;
				this.efalse();
				}
				break;
			case EDIF300Parser.T__626:
				{
				this.state = 1866;
				this.etrue();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public booleanValue(): BooleanValueContext {
		let _localctx: BooleanValueContext = new BooleanValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 74, EDIF300Parser.RULE_booleanValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1869;
			this.booleanToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public borderPattern(): BorderPatternContext {
		let _localctx: BorderPatternContext = new BorderPatternContext(this._ctx, this.state);
		this.enterRule(_localctx, 76, EDIF300Parser.RULE_borderPattern);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1871;
			this.match(EDIF300Parser.T__30);
			this.state = 1872;
			this.pixelPattern();
			this.state = 1873;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public borderPatternVisible(): BorderPatternVisibleContext {
		let _localctx: BorderPatternVisibleContext = new BorderPatternVisibleContext(this._ctx, this.state);
		this.enterRule(_localctx, 78, EDIF300Parser.RULE_borderPatternVisible);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1875;
			this.match(EDIF300Parser.T__31);
			this.state = 1876;
			this.booleanValue();
			this.state = 1877;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public borderWidth(): BorderWidthContext {
		let _localctx: BorderWidthContext = new BorderWidthContext(this._ctx, this.state);
		this.enterRule(_localctx, 80, EDIF300Parser.RULE_borderWidth);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1879;
			this.match(EDIF300Parser.T__32);
			this.state = 1882;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.DECIMAL_LITERAL:
				{
				this.state = 1880;
				this.lengthValue();
				}
				break;
			case EDIF300Parser.T__334:
				{
				this.state = 1881;
				this.minimalWidth();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 1884;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public bottomJustify(): BottomJustifyContext {
		let _localctx: BottomJustifyContext = new BottomJustifyContext(this._ctx, this.state);
		this.enterRule(_localctx, 82, EDIF300Parser.RULE_bottomJustify);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1886;
			this.match(EDIF300Parser.T__33);
			this.state = 1887;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public calculated(): CalculatedContext {
		let _localctx: CalculatedContext = new CalculatedContext(this._ctx, this.state);
		this.enterRule(_localctx, 84, EDIF300Parser.RULE_calculated);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1889;
			this.match(EDIF300Parser.T__34);
			this.state = 1890;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public candela(): CandelaContext {
		let _localctx: CandelaContext = new CandelaContext(this._ctx, this.state);
		this.enterRule(_localctx, 86, EDIF300Parser.RULE_candela);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1892;
			this.match(EDIF300Parser.T__35);
			this.state = 1893;
			this.unitExponent();
			this.state = 1894;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public capacitanceValue(): CapacitanceValueContext {
		let _localctx: CapacitanceValueContext = new CapacitanceValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 88, EDIF300Parser.RULE_capacitanceValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1896;
			this.miNoMaxValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public caplineJustify(): CaplineJustifyContext {
		let _localctx: CaplineJustifyContext = new CaplineJustifyContext(this._ctx, this.state);
		this.enterRule(_localctx, 90, EDIF300Parser.RULE_caplineJustify);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1898;
			this.match(EDIF300Parser.T__36);
			this.state = 1899;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cell(): CellContext {
		let _localctx: CellContext = new CellContext(this._ctx, this.state);
		this.enterRule(_localctx, 92, EDIF300Parser.RULE_cell);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1901;
			this.match(EDIF300Parser.T__37);
			this.state = 1902;
			this.libraryObjectNameDef();
			this.state = 1903;
			this.cellHeader();
			this.state = 1910;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__50 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__642 || _la === EDIF300Parser.T__645) {
				{
				this.state = 1908;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__50:
					{
					this.state = 1904;
					this.cluster();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 1905;
					this.comment();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 1906;
					this.userData();
					}
					break;
				case EDIF300Parser.T__645:
					{
					this.state = 1907;
					this.viewGroup();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 1912;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1913;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cellHeader(): CellHeaderContext {
		let _localctx: CellHeaderContext = new CellHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 94, EDIF300Parser.RULE_cellHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1915;
			this.match(EDIF300Parser.T__38);
			this.state = 1922;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
				{
				this.state = 1920;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__132:
					{
					this.state = 1916;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 1917;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 1918;
					this.property();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 1919;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 1924;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1925;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cellNameDisplay(): CellNameDisplayContext {
		let _localctx: CellNameDisplayContext = new CellNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 96, EDIF300Parser.RULE_cellNameDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1927;
			this.match(EDIF300Parser.T__39);
			this.state = 1932;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
				{
				this.state = 1930;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 1928;
					this.display();
					}
					break;
				case EDIF300Parser.T__131:
					{
					this.state = 1929;
					this.displayNameOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 1934;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1935;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cellPropertyDisplay(): CellPropertyDisplayContext {
		let _localctx: CellPropertyDisplayContext = new CellPropertyDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 98, EDIF300Parser.RULE_cellPropertyDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1937;
			this.match(EDIF300Parser.T__40);
			this.state = 1938;
			this.propertyNameRef();
			this.state = 1943;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
				{
				this.state = 1941;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 1939;
					this.display();
					}
					break;
				case EDIF300Parser.T__447:
					{
					this.state = 1940;
					this.propertyNameDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 1945;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1946;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cellPropertyDisplayOverride(): CellPropertyDisplayOverrideContext {
		let _localctx: CellPropertyDisplayOverrideContext = new CellPropertyDisplayOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 100, EDIF300Parser.RULE_cellPropertyDisplayOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1948;
			this.match(EDIF300Parser.T__41);
			this.state = 1949;
			this.propertyNameRef();
			this.state = 1953;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 1950;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 1951;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 1952;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 1956;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__447) {
				{
				this.state = 1955;
				this.propertyNameDisplay();
				}
			}

			this.state = 1958;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cellPropertyOverride(): CellPropertyOverrideContext {
		let _localctx: CellPropertyOverrideContext = new CellPropertyOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 102, EDIF300Parser.RULE_cellPropertyOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1960;
			this.match(EDIF300Parser.T__42);
			this.state = 1961;
			this.propertyNameRef();
			this.state = 1964;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__23:
			case EDIF300Parser.T__247:
			case EDIF300Parser.T__336:
			case EDIF300Parser.T__356:
			case EDIF300Parser.T__411:
			case EDIF300Parser.T__599:
				{
				this.state = 1962;
				this.typedValue();
				}
				break;
			case EDIF300Parser.T__639:
				{
				this.state = 1963;
				this.untyped();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 1971;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
				{
				this.state = 1969;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 1966;
					this.comment();
					}
					break;
				case EDIF300Parser.T__165:
					{
					this.state = 1967;
					this.fixed();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 1968;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 1973;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1974;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cellRef(): CellRefContext {
		let _localctx: CellRefContext = new CellRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 104, EDIF300Parser.RULE_cellRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1976;
			this.match(EDIF300Parser.T__43);
			this.state = 1977;
			this.libraryObjectNameRef();
			this.state = 1979;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 1978;
				this.libraryRef();
				}
			}

			this.state = 1981;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public celsius(): CelsiusContext {
		let _localctx: CelsiusContext = new CelsiusContext(this._ctx, this.state);
		this.enterRule(_localctx, 106, EDIF300Parser.RULE_celsius);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1983;
			this.match(EDIF300Parser.T__44);
			this.state = 1984;
			this.unitExponent();
			this.state = 1985;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public centerJustify(): CenterJustifyContext {
		let _localctx: CenterJustifyContext = new CenterJustifyContext(this._ctx, this.state);
		this.enterRule(_localctx, 108, EDIF300Parser.RULE_centerJustify);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1987;
			this.match(EDIF300Parser.T__45);
			this.state = 1988;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public characterEncoding(): CharacterEncodingContext {
		let _localctx: CharacterEncodingContext = new CharacterEncodingContext(this._ctx, this.state);
		this.enterRule(_localctx, 110, EDIF300Parser.RULE_characterEncoding);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1990;
			this.match(EDIF300Parser.T__46);
			this.state = 1995;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__11:
				{
				this.state = 1991;
				this.ascii();
				}
				break;
			case EDIF300Parser.T__272:
				{
				this.state = 1992;
				this.iso8859();
				}
				break;
			case EDIF300Parser.T__275:
				{
				this.state = 1993;
				this.jisx0201();
				}
				break;
			case EDIF300Parser.T__276:
				{
				this.state = 1994;
				this.jisx0208();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 1997;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public checkDate(): CheckDateContext {
		let _localctx: CheckDateContext = new CheckDateContext(this._ctx, this.state);
		this.enterRule(_localctx, 112, EDIF300Parser.RULE_checkDate);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 1999;
			this.match(EDIF300Parser.T__47);
			this.state = 2000;
			this.date();
			this.state = 2001;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public checkDateDisplay(): CheckDateDisplayContext {
		let _localctx: CheckDateDisplayContext = new CheckDateDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 114, EDIF300Parser.RULE_checkDateDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2003;
			this.match(EDIF300Parser.T__48);
			this.state = 2007;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2004;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2005;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2006;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2009;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public circle(): CircleContext {
		let _localctx: CircleContext = new CircleContext(this._ctx, this.state);
		this.enterRule(_localctx, 116, EDIF300Parser.RULE_circle);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2011;
			this.match(EDIF300Parser.T__49);
			this.state = 2012;
			this.pt1();
			this.state = 2013;
			this.pt2();
			this.state = 2014;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cluster(): ClusterContext {
		let _localctx: ClusterContext = new ClusterContext(this._ctx, this.state);
		this.enterRule(_localctx, 118, EDIF300Parser.RULE_cluster);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2016;
			this.match(EDIF300Parser.T__50);
			this.state = 2017;
			this.clusterNameDef();
			this.state = 2018;
			this.einterface();
			this.state = 2019;
			this.clusterHeader();
			this.state = 2034;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__17 || _la === EDIF300Parser.T__51 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__88 || _la === EDIF300Parser.T__112 || _la === EDIF300Parser.T__324 || _la === EDIF300Parser.T__330 || _la === EDIF300Parser.T__405 || _la === EDIF300Parser.T__555 || _la === EDIF300Parser.T__567 || _la === EDIF300Parser.T__613 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2032;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__555:
					{
					this.state = 2020;
					this.schematicSymbol();
					}
					break;
				case EDIF300Parser.T__567:
					{
					this.state = 2021;
					this.schematicView();
					}
					break;
				case EDIF300Parser.T__17:
					{
					this.state = 2022;
					this.behaviorView();
					}
					break;
				case EDIF300Parser.T__51:
					{
					this.state = 2023;
					this.clusterConfiguration();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 2024;
					this.comment();
					}
					break;
				case EDIF300Parser.T__88:
					{
					this.state = 2025;
					this.connectivityView();
					}
					break;
				case EDIF300Parser.T__112:
					{
					this.state = 2026;
					this.defaultClusterConfiguration();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2027;
					this.userData();
					}
					break;
				case EDIF300Parser.T__324:
					{
					this.state = 2028;
					this.logicModelView();
					}
					break;
				case EDIF300Parser.T__330:
					{
					this.state = 2029;
					this.maskLayoutView();
					}
					break;
				case EDIF300Parser.T__405:
					{
					this.state = 2030;
					this.pcbLayoutView();
					}
					break;
				case EDIF300Parser.T__613:
					{
					this.state = 2031;
					this.symbolicLayoutView();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2036;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2037;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterConfiguration(): ClusterConfigurationContext {
		let _localctx: ClusterConfigurationContext = new ClusterConfigurationContext(this._ctx, this.state);
		this.enterRule(_localctx, 120, EDIF300Parser.RULE_clusterConfiguration);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2039;
			this.match(EDIF300Parser.T__51);
			this.state = 2040;
			this.clusterConfigurationNameDef();
			this.state = 2044;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__653:
				{
				this.state = 2041;
				this.viewRef();
				}
				break;
			case EDIF300Parser.T__304:
				{
				this.state = 2042;
				this.leaf();
				}
				break;
			case EDIF300Parser.T__630:
				{
				this.state = 2043;
				this.unconfigured();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2055;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__184 || _la === EDIF300Parser.T__204 || _la === EDIF300Parser.T__233 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2053;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2046;
					this.comment();
					}
					break;
				case EDIF300Parser.T__184:
					{
					this.state = 2047;
					this.frameConfiguration();
					}
					break;
				case EDIF300Parser.T__204:
					{
					this.state = 2048;
					this.globalPortScope();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 2049;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__233:
					{
					this.state = 2050;
					this.instanceConfiguration();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 2051;
					this.property();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2052;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2057;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2058;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterConfigurationNameCaseSensitive(): ClusterConfigurationNameCaseSensitiveContext {
		let _localctx: ClusterConfigurationNameCaseSensitiveContext = new ClusterConfigurationNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 122, EDIF300Parser.RULE_clusterConfigurationNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2060;
			this.match(EDIF300Parser.T__52);
			this.state = 2061;
			this.booleanToken();
			this.state = 2062;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterConfigurationNameDef(): ClusterConfigurationNameDefContext {
		let _localctx: ClusterConfigurationNameDefContext = new ClusterConfigurationNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 124, EDIF300Parser.RULE_clusterConfigurationNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2064;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterConfigurationNameRef(): ClusterConfigurationNameRefContext {
		let _localctx: ClusterConfigurationNameRefContext = new ClusterConfigurationNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 126, EDIF300Parser.RULE_clusterConfigurationNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2066;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterConfigurationRef(): ClusterConfigurationRefContext {
		let _localctx: ClusterConfigurationRefContext = new ClusterConfigurationRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 128, EDIF300Parser.RULE_clusterConfigurationRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2068;
			this.match(EDIF300Parser.T__53);
			this.state = 2069;
			this.clusterConfigurationNameRef();
			this.state = 2070;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterHeader(): ClusterHeaderContext {
		let _localctx: ClusterHeaderContext = new ClusterHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 130, EDIF300Parser.RULE_clusterHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2072;
			this.match(EDIF300Parser.T__54);
			this.state = 2079;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
				{
				this.state = 2077;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__132:
					{
					this.state = 2073;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 2074;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 2075;
					this.property();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 2076;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2081;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2082;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterNameCaseSensitive(): ClusterNameCaseSensitiveContext {
		let _localctx: ClusterNameCaseSensitiveContext = new ClusterNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 132, EDIF300Parser.RULE_clusterNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2084;
			this.match(EDIF300Parser.T__55);
			this.state = 2085;
			this.booleanToken();
			this.state = 2086;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterNameDef(): ClusterNameDefContext {
		let _localctx: ClusterNameDefContext = new ClusterNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 134, EDIF300Parser.RULE_clusterNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2088;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterNameRef(): ClusterNameRefContext {
		let _localctx: ClusterNameRefContext = new ClusterNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 136, EDIF300Parser.RULE_clusterNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2090;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterPropertyDisplay(): ClusterPropertyDisplayContext {
		let _localctx: ClusterPropertyDisplayContext = new ClusterPropertyDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 138, EDIF300Parser.RULE_clusterPropertyDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2092;
			this.match(EDIF300Parser.T__56);
			this.state = 2093;
			this.propertyNameRef();
			this.state = 2098;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
				{
				this.state = 2096;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 2094;
					this.display();
					}
					break;
				case EDIF300Parser.T__447:
					{
					this.state = 2095;
					this.propertyNameDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2100;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2101;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterPropertyDisplayOverride(): ClusterPropertyDisplayOverrideContext {
		let _localctx: ClusterPropertyDisplayOverrideContext = new ClusterPropertyDisplayOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 140, EDIF300Parser.RULE_clusterPropertyDisplayOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2103;
			this.match(EDIF300Parser.T__57);
			this.state = 2104;
			this.propertyNameRef();
			this.state = 2108;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2105;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2106;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2107;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2111;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__447) {
				{
				this.state = 2110;
				this.propertyNameDisplay();
				}
			}

			this.state = 2113;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterPropertyOverride(): ClusterPropertyOverrideContext {
		let _localctx: ClusterPropertyOverrideContext = new ClusterPropertyOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 142, EDIF300Parser.RULE_clusterPropertyOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2115;
			this.match(EDIF300Parser.T__58);
			this.state = 2116;
			this.propertyNameRef();
			this.state = 2119;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__23:
			case EDIF300Parser.T__247:
			case EDIF300Parser.T__336:
			case EDIF300Parser.T__356:
			case EDIF300Parser.T__411:
			case EDIF300Parser.T__599:
				{
				this.state = 2117;
				this.typedValue();
				}
				break;
			case EDIF300Parser.T__639:
				{
				this.state = 2118;
				this.untyped();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2126;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
				{
				this.state = 2124;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2121;
					this.comment();
					}
					break;
				case EDIF300Parser.T__165:
					{
					this.state = 2122;
					this.fixed();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 2123;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2128;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2129;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public clusterRef(): ClusterRefContext {
		let _localctx: ClusterRefContext = new ClusterRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 144, EDIF300Parser.RULE_clusterRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2131;
			this.match(EDIF300Parser.T__59);
			this.state = 2132;
			this.clusterNameRef();
			this.state = 2134;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__43) {
				{
				this.state = 2133;
				this.cellRef();
				}
			}

			this.state = 2136;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public color(): ColorContext {
		let _localctx: ColorContext = new ColorContext(this._ctx, this.state);
		this.enterRule(_localctx, 146, EDIF300Parser.RULE_color);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2138;
			this.match(EDIF300Parser.T__60);
			this.state = 2139;
			this.red();
			this.state = 2140;
			this.green();
			this.state = 2141;
			this.blue();
			this.state = 2142;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public comment(): CommentContext {
		let _localctx: CommentContext = new CommentContext(this._ctx, this.state);
		this.enterRule(_localctx, 148, EDIF300Parser.RULE_comment);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2144;
			this.match(EDIF300Parser.T__61);
			this.state = 2148;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.STRING_LITERAL) {
				{
				{
				this.state = 2145;
				this.stringToken();
				}
				}
				this.state = 2150;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2151;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public commentGraphics(): CommentGraphicsContext {
		let _localctx: CommentGraphicsContext = new CommentGraphicsContext(this._ctx, this.state);
		this.enterRule(_localctx, 150, EDIF300Parser.RULE_commentGraphics);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2153;
			this.match(EDIF300Parser.T__62);
			this.state = 2162;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__368 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2160;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 2154;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 2155;
					this.comment();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 2156;
					this.figure();
					}
					break;
				case EDIF300Parser.T__368:
					{
					this.state = 2157;
					this.originalBoundingBox();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 2158;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2159;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2164;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2165;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public companyName(): CompanyNameContext {
		let _localctx: CompanyNameContext = new CompanyNameContext(this._ctx, this.state);
		this.enterRule(_localctx, 152, EDIF300Parser.RULE_companyName);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2167;
			this.match(EDIF300Parser.T__63);
			this.state = 2168;
			this.stringToken();
			this.state = 2169;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public companyNameDisplay(): CompanyNameDisplayContext {
		let _localctx: CompanyNameDisplayContext = new CompanyNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 154, EDIF300Parser.RULE_companyNameDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2171;
			this.match(EDIF300Parser.T__64);
			this.state = 2175;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2172;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2173;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2174;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2177;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public complementedName(): ComplementedNameContext {
		let _localctx: ComplementedNameContext = new ComplementedNameContext(this._ctx, this.state);
		this.enterRule(_localctx, 156, EDIF300Parser.RULE_complementedName);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2179;
			this.match(EDIF300Parser.T__65);
			this.state = 2186;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__66 || _la === EDIF300Parser.T__344 || _la === EDIF300Parser.T__347 || _la === EDIF300Parser.STRING_LITERAL) {
				{
				this.state = 2184;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__66:
					{
					this.state = 2180;
					this.complementedNamePart();
					}
					break;
				case EDIF300Parser.T__344:
					{
					this.state = 2181;
					this.nameDimension();
					}
					break;
				case EDIF300Parser.T__347:
					{
					this.state = 2182;
					this.namePartSeparator();
					}
					break;
				case EDIF300Parser.STRING_LITERAL:
					{
					this.state = 2183;
					this.simpleName();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2188;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2189;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public complementedNamePart(): ComplementedNamePartContext {
		let _localctx: ComplementedNamePartContext = new ComplementedNamePartContext(this._ctx, this.state);
		this.enterRule(_localctx, 158, EDIF300Parser.RULE_complementedNamePart);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2191;
			this.match(EDIF300Parser.T__66);
			this.state = 2197;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__66 || _la === EDIF300Parser.T__347 || _la === EDIF300Parser.STRING_LITERAL) {
				{
				this.state = 2195;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__66:
					{
					this.state = 2192;
					this.complementedNamePart();
					}
					break;
				case EDIF300Parser.T__347:
					{
					this.state = 2193;
					this.namePartSeparator();
					}
					break;
				case EDIF300Parser.STRING_LITERAL:
					{
					this.state = 2194;
					this.simpleName();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2199;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2200;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public complexGeometry(): ComplexGeometryContext {
		let _localctx: ComplexGeometryContext = new ComplexGeometryContext(this._ctx, this.state);
		this.enterRule(_localctx, 160, EDIF300Parser.RULE_complexGeometry);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2202;
			this.match(EDIF300Parser.T__67);
			this.state = 2203;
			this.geometryMacroRef();
			this.state = 2204;
			this.transform();
			this.state = 2205;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public complexName(): ComplexNameContext {
		let _localctx: ComplexNameContext = new ComplexNameContext(this._ctx, this.state);
		this.enterRule(_localctx, 162, EDIF300Parser.RULE_complexName);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2207;
			this.match(EDIF300Parser.T__68);
			this.state = 2214;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__66 || _la === EDIF300Parser.T__344 || _la === EDIF300Parser.T__347 || _la === EDIF300Parser.STRING_LITERAL) {
				{
				this.state = 2212;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__66:
					{
					this.state = 2208;
					this.complementedNamePart();
					}
					break;
				case EDIF300Parser.T__344:
					{
					this.state = 2209;
					this.nameDimension();
					}
					break;
				case EDIF300Parser.T__347:
					{
					this.state = 2210;
					this.namePartSeparator();
					}
					break;
				case EDIF300Parser.STRING_LITERAL:
					{
					this.state = 2211;
					this.simpleName();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2216;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2217;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public compound(): CompoundContext {
		let _localctx: CompoundContext = new CompoundContext(this._ctx, this.state);
		this.enterRule(_localctx, 164, EDIF300Parser.RULE_compound);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2219;
			this.match(EDIF300Parser.T__69);
			this.state = 2223;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.IDENTIFIER) {
				{
				{
				this.state = 2220;
				this.logicNameRef();
				}
				}
				this.state = 2225;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2226;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public condition(): ConditionContext {
		let _localctx: ConditionContext = new ConditionContext(this._ctx, this.state);
		this.enterRule(_localctx, 166, EDIF300Parser.RULE_condition);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2228;
			this.match(EDIF300Parser.T__70);
			this.state = 2229;
			this.booleanExpression();
			this.state = 2230;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public conditionDisplay(): ConditionDisplayContext {
		let _localctx: ConditionDisplayContext = new ConditionDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 168, EDIF300Parser.RULE_conditionDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2232;
			this.match(EDIF300Parser.T__71);
			this.state = 2236;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2233;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2234;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2235;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2238;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectedSignalIndexGenerator(): ConnectedSignalIndexGeneratorContext {
		let _localctx: ConnectedSignalIndexGeneratorContext = new ConnectedSignalIndexGeneratorContext(this._ctx, this.state);
		this.enterRule(_localctx, 170, EDIF300Parser.RULE_connectedSignalIndexGenerator);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2240;
			this.match(EDIF300Parser.T__72);
			this.state = 2241;
			this.integerExpression();
			this.state = 2242;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectedSignalIndexGeneratorDisplay(): ConnectedSignalIndexGeneratorDisplayContext {
		let _localctx: ConnectedSignalIndexGeneratorDisplayContext = new ConnectedSignalIndexGeneratorDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 172, EDIF300Parser.RULE_connectedSignalIndexGeneratorDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2244;
			this.match(EDIF300Parser.T__73);
			this.state = 2248;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2245;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2246;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2247;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2250;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityBus(): ConnectivityBusContext {
		let _localctx: ConnectivityBusContext = new ConnectivityBusContext(this._ctx, this.state);
		this.enterRule(_localctx, 174, EDIF300Parser.RULE_connectivityBus);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2252;
			this.match(EDIF300Parser.T__74);
			this.state = 2253;
			this.interconnectNameDef();
			this.state = 2254;
			this.signalGroupRef();
			this.state = 2255;
			this.interconnectHeader();
			this.state = 2256;
			this.connectivityBusJoined();
			this.state = 2263;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 62)) & ~0x1F) === 0 && ((1 << (_la - 62)) & ((1 << (EDIF300Parser.T__61 - 62)) | (1 << (EDIF300Parser.T__76 - 62)) | (1 << (EDIF300Parser.T__83 - 62)))) !== 0) || _la === EDIF300Parser.T__642) {
				{
				this.state = 2261;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2257;
					this.comment();
					}
					break;
				case EDIF300Parser.T__76:
					{
					this.state = 2258;
					this.connectivityBusSlice();
					}
					break;
				case EDIF300Parser.T__83:
					{
					this.state = 2259;
					this.connectivitySubBus();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2260;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2265;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2266;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityBusJoined(): ConnectivityBusJoinedContext {
		let _localctx: ConnectivityBusJoinedContext = new ConnectivityBusJoinedContext(this._ctx, this.state);
		this.enterRule(_localctx, 176, EDIF300Parser.RULE_connectivityBusJoined);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2268;
			this.match(EDIF300Parser.T__75);
			this.state = 2269;
			this.portJoined();
			this.state = 2273;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__81) {
				{
				{
				this.state = 2270;
				this.connectivityRipperRef();
				}
				}
				this.state = 2275;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2276;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityBusSlice(): ConnectivityBusSliceContext {
		let _localctx: ConnectivityBusSliceContext = new ConnectivityBusSliceContext(this._ctx, this.state);
		this.enterRule(_localctx, 178, EDIF300Parser.RULE_connectivityBusSlice);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2278;
			this.match(EDIF300Parser.T__76);
			this.state = 2279;
			this.interconnectNameDef();
			this.state = 2280;
			this.signalGroupRef();
			this.state = 2281;
			this.interconnectHeader();
			this.state = 2282;
			this.connectivityBusJoined();
			this.state = 2289;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 62)) & ~0x1F) === 0 && ((1 << (_la - 62)) & ((1 << (EDIF300Parser.T__61 - 62)) | (1 << (EDIF300Parser.T__76 - 62)) | (1 << (EDIF300Parser.T__83 - 62)))) !== 0) || _la === EDIF300Parser.T__642) {
				{
				this.state = 2287;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2283;
					this.comment();
					}
					break;
				case EDIF300Parser.T__76:
					{
					this.state = 2284;
					this.connectivityBusSlice();
					}
					break;
				case EDIF300Parser.T__83:
					{
					this.state = 2285;
					this.connectivitySubBus();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2286;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2291;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2292;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityFrameStructure(): ConnectivityFrameStructureContext {
		let _localctx: ConnectivityFrameStructureContext = new ConnectivityFrameStructureContext(this._ctx, this.state);
		this.enterRule(_localctx, 180, EDIF300Parser.RULE_connectivityFrameStructure);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2294;
			this.match(EDIF300Parser.T__77);
			this.state = 2295;
			this.connectivityFrameStructureNameDef();
			this.state = 2296;
			this.frameRef();
			this.state = 2306;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 62)) & ~0x1F) === 0 && ((1 << (_la - 62)) & ((1 << (EDIF300Parser.T__61 - 62)) | (1 << (EDIF300Parser.T__74 - 62)) | (1 << (EDIF300Parser.T__77 - 62)) | (1 << (EDIF300Parser.T__78 - 62)) | (1 << (EDIF300Parser.T__80 - 62)))) !== 0) || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2304;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2297;
					this.comment();
					}
					break;
				case EDIF300Parser.T__74:
					{
					this.state = 2298;
					this.connectivityBus();
					}
					break;
				case EDIF300Parser.T__77:
					{
					this.state = 2299;
					this.connectivityFrameStructure();
					}
					break;
				case EDIF300Parser.T__78:
					{
					this.state = 2300;
					this.connectivityNet();
					}
					break;
				case EDIF300Parser.T__80:
					{
					this.state = 2301;
					this.connectivityRipper();
					}
					break;
				case EDIF300Parser.T__619:
					{
					this.state = 2302;
					this.timing();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2303;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2308;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2309;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityFrameStructureNameDef(): ConnectivityFrameStructureNameDefContext {
		let _localctx: ConnectivityFrameStructureNameDefContext = new ConnectivityFrameStructureNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 182, EDIF300Parser.RULE_connectivityFrameStructureNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2311;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityNet(): ConnectivityNetContext {
		let _localctx: ConnectivityNetContext = new ConnectivityNetContext(this._ctx, this.state);
		this.enterRule(_localctx, 184, EDIF300Parser.RULE_connectivityNet);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2313;
			this.match(EDIF300Parser.T__78);
			this.state = 2314;
			this.interconnectNameDef();
			this.state = 2315;
			this.signalRef();
			this.state = 2316;
			this.interconnectHeader();
			this.state = 2317;
			this.connectivityNetJoined();
			this.state = 2323;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__84 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2321;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2318;
					this.comment();
					}
					break;
				case EDIF300Parser.T__84:
					{
					this.state = 2319;
					this.connectivitySubNet();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2320;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2325;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2326;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityNetJoined(): ConnectivityNetJoinedContext {
		let _localctx: ConnectivityNetJoinedContext = new ConnectivityNetJoinedContext(this._ctx, this.state);
		this.enterRule(_localctx, 186, EDIF300Parser.RULE_connectivityNetJoined);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2328;
			this.match(EDIF300Parser.T__79);
			this.state = 2331;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__423:
				{
				this.state = 2329;
				this.portJoined();
				}
				break;
			case EDIF300Parser.T__277:
				{
				this.state = 2330;
				this.joinedAsSignal();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2336;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__81) {
				{
				{
				this.state = 2333;
				this.connectivityRipperRef();
				}
				}
				this.state = 2338;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2339;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityRipper(): ConnectivityRipperContext {
		let _localctx: ConnectivityRipperContext = new ConnectivityRipperContext(this._ctx, this.state);
		this.enterRule(_localctx, 188, EDIF300Parser.RULE_connectivityRipper);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2341;
			this.match(EDIF300Parser.T__80);
			this.state = 2342;
			this.connectivityRipperNameDef();
			this.state = 2343;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityRipperNameDef(): ConnectivityRipperNameDefContext {
		let _localctx: ConnectivityRipperNameDefContext = new ConnectivityRipperNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 190, EDIF300Parser.RULE_connectivityRipperNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2345;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityRipperNameRef(): ConnectivityRipperNameRefContext {
		let _localctx: ConnectivityRipperNameRefContext = new ConnectivityRipperNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 192, EDIF300Parser.RULE_connectivityRipperNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2347;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityRipperRef(): ConnectivityRipperRefContext {
		let _localctx: ConnectivityRipperRefContext = new ConnectivityRipperRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 194, EDIF300Parser.RULE_connectivityRipperRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2349;
			this.match(EDIF300Parser.T__81);
			this.state = 2350;
			this.connectivityRipperNameRef();
			this.state = 2351;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityStructure(): ConnectivityStructureContext {
		let _localctx: ConnectivityStructureContext = new ConnectivityStructureContext(this._ctx, this.state);
		this.enterRule(_localctx, 196, EDIF300Parser.RULE_connectivityStructure);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2353;
			this.match(EDIF300Parser.T__82);
			this.state = 2364;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 62)) & ~0x1F) === 0 && ((1 << (_la - 62)) & ((1 << (EDIF300Parser.T__61 - 62)) | (1 << (EDIF300Parser.T__74 - 62)) | (1 << (EDIF300Parser.T__77 - 62)) | (1 << (EDIF300Parser.T__78 - 62)) | (1 << (EDIF300Parser.T__80 - 62)))) !== 0) || _la === EDIF300Parser.T__315 || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2362;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2354;
					this.comment();
					}
					break;
				case EDIF300Parser.T__74:
					{
					this.state = 2355;
					this.connectivityBus();
					}
					break;
				case EDIF300Parser.T__77:
					{
					this.state = 2356;
					this.connectivityFrameStructure();
					}
					break;
				case EDIF300Parser.T__78:
					{
					this.state = 2357;
					this.connectivityNet();
					}
					break;
				case EDIF300Parser.T__80:
					{
					this.state = 2358;
					this.connectivityRipper();
					}
					break;
				case EDIF300Parser.T__315:
					{
					this.state = 2359;
					this.localPortGroup();
					}
					break;
				case EDIF300Parser.T__619:
					{
					this.state = 2360;
					this.timing();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2361;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2366;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2367;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivitySubBus(): ConnectivitySubBusContext {
		let _localctx: ConnectivitySubBusContext = new ConnectivitySubBusContext(this._ctx, this.state);
		this.enterRule(_localctx, 198, EDIF300Parser.RULE_connectivitySubBus);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2369;
			this.match(EDIF300Parser.T__83);
			this.state = 2370;
			this.interconnectNameDef();
			this.state = 2371;
			this.interconnectHeader();
			this.state = 2372;
			this.connectivityBusJoined();
			this.state = 2379;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 62)) & ~0x1F) === 0 && ((1 << (_la - 62)) & ((1 << (EDIF300Parser.T__61 - 62)) | (1 << (EDIF300Parser.T__76 - 62)) | (1 << (EDIF300Parser.T__83 - 62)))) !== 0) || _la === EDIF300Parser.T__642) {
				{
				this.state = 2377;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2373;
					this.comment();
					}
					break;
				case EDIF300Parser.T__76:
					{
					this.state = 2374;
					this.connectivityBusSlice();
					}
					break;
				case EDIF300Parser.T__83:
					{
					this.state = 2375;
					this.connectivitySubBus();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2376;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2381;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2382;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivitySubNet(): ConnectivitySubNetContext {
		let _localctx: ConnectivitySubNetContext = new ConnectivitySubNetContext(this._ctx, this.state);
		this.enterRule(_localctx, 200, EDIF300Parser.RULE_connectivitySubNet);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2384;
			this.match(EDIF300Parser.T__84);
			this.state = 2385;
			this.interconnectNameDef();
			this.state = 2386;
			this.interconnectHeader();
			this.state = 2387;
			this.connectivityNetJoined();
			this.state = 2393;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__84 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2391;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2388;
					this.comment();
					}
					break;
				case EDIF300Parser.T__84:
					{
					this.state = 2389;
					this.connectivitySubNet();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2390;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2395;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2396;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityTagGenerator(): ConnectivityTagGeneratorContext {
		let _localctx: ConnectivityTagGeneratorContext = new ConnectivityTagGeneratorContext(this._ctx, this.state);
		this.enterRule(_localctx, 202, EDIF300Parser.RULE_connectivityTagGenerator);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2398;
			this.match(EDIF300Parser.T__85);
			this.state = 2399;
			this.stringExpression();
			this.state = 2400;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityTagGeneratorDisplay(): ConnectivityTagGeneratorDisplayContext {
		let _localctx: ConnectivityTagGeneratorDisplayContext = new ConnectivityTagGeneratorDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 204, EDIF300Parser.RULE_connectivityTagGeneratorDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2402;
			this.match(EDIF300Parser.T__86);
			this.state = 2406;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 2403;
				this.display();
				}
				}
				this.state = 2408;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2409;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityUnits(): ConnectivityUnitsContext {
		let _localctx: ConnectivityUnitsContext = new ConnectivityUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 206, EDIF300Parser.RULE_connectivityUnits);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2411;
			this.match(EDIF300Parser.T__87);
			this.state = 2414;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__576:
				{
				this.state = 2412;
				this.setCapacitance();
				}
				break;
			case EDIF300Parser.T__580:
				{
				this.state = 2413;
				this.setTime();
				}
				break;
			case EDIF300Parser.T__1:
				break;
			default:
				break;
			}
			this.state = 2416;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityView(): ConnectivityViewContext {
		let _localctx: ConnectivityViewContext = new ConnectivityViewContext(this._ctx, this.state);
		this.enterRule(_localctx, 208, EDIF300Parser.RULE_connectivityView);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2418;
			this.match(EDIF300Parser.T__88);
			this.state = 2419;
			this.viewNameDef();
			this.state = 2420;
			this.connectivityViewHeader();
			this.state = 2421;
			this.logicalConnectivity();
			this.state = 2422;
			this.connectivityStructure();
			this.state = 2427;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2425;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2423;
					this.comment();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2424;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2429;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2430;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public connectivityViewHeader(): ConnectivityViewHeaderContext {
		let _localctx: ConnectivityViewHeaderContext = new ConnectivityViewHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 210, EDIF300Parser.RULE_connectivityViewHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2432;
			this.match(EDIF300Parser.T__89);
			this.state = 2433;
			this.connectivityUnits();
			this.state = 2442;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__116 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__439 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
				{
				this.state = 2440;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__116:
					{
					this.state = 2434;
					this.derivedFrom();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 2435;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 2436;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__439:
					{
					this.state = 2437;
					this.previousVersion();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 2438;
					this.property();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 2439;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2444;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2445;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public constantNameDef(): ConstantNameDefContext {
		let _localctx: ConstantNameDefContext = new ConstantNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 212, EDIF300Parser.RULE_constantNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2447;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public constantNameRef(): ConstantNameRefContext {
		let _localctx: ConstantNameRefContext = new ConstantNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 214, EDIF300Parser.RULE_constantNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2449;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public constantValues(): ConstantValuesContext {
		let _localctx: ConstantValuesContext = new ConstantValuesContext(this._ctx, this.state);
		this.enterRule(_localctx, 216, EDIF300Parser.RULE_constantValues);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2451;
			this.match(EDIF300Parser.T__90);
			this.state = 2457;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__24 || _la === EDIF300Parser.T__248 || _la === EDIF300Parser.T__601) {
				{
				this.state = 2455;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__24:
					{
					this.state = 2452;
					this.booleanConstant();
					}
					break;
				case EDIF300Parser.T__248:
					{
					this.state = 2453;
					this.integerConstant();
					}
					break;
				case EDIF300Parser.T__601:
					{
					this.state = 2454;
					this.stringConstant();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2459;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2460;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public contract(): ContractContext {
		let _localctx: ContractContext = new ContractContext(this._ctx, this.state);
		this.enterRule(_localctx, 218, EDIF300Parser.RULE_contract);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2462;
			this.match(EDIF300Parser.T__91);
			this.state = 2463;
			this.stringToken();
			this.state = 2464;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public contractDisplay(): ContractDisplayContext {
		let _localctx: ContractDisplayContext = new ContractDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 220, EDIF300Parser.RULE_contractDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2466;
			this.match(EDIF300Parser.T__92);
			this.state = 2470;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2467;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2468;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2469;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2472;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public copyright(): CopyrightContext {
		let _localctx: CopyrightContext = new CopyrightContext(this._ctx, this.state);
		this.enterRule(_localctx, 222, EDIF300Parser.RULE_copyright);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2474;
			this.match(EDIF300Parser.T__93);
			this.state = 2475;
			this.year();
			this.state = 2479;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.STRING_LITERAL) {
				{
				{
				this.state = 2476;
				this.stringToken();
				}
				}
				this.state = 2481;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2482;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public copyrightDisplay(): CopyrightDisplayContext {
		let _localctx: CopyrightDisplayContext = new CopyrightDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 224, EDIF300Parser.RULE_copyrightDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2484;
			this.match(EDIF300Parser.T__94);
			this.state = 2488;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2485;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2486;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2487;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2490;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public cornerType(): CornerTypeContext {
		let _localctx: CornerTypeContext = new CornerTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 226, EDIF300Parser.RULE_cornerType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2492;
			this.match(EDIF300Parser.T__95);
			this.state = 2496;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__627:
				{
				this.state = 2493;
				this.truncate();
				}
				break;
			case EDIF300Parser.T__466:
				{
				this.state = 2494;
				this.round();
				}
				break;
			case EDIF300Parser.T__154:
				{
				this.state = 2495;
				this.extend();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2498;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public coulomb(): CoulombContext {
		let _localctx: CoulombContext = new CoulombContext(this._ctx, this.state);
		this.enterRule(_localctx, 228, EDIF300Parser.RULE_coulomb);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2500;
			this.match(EDIF300Parser.T__96);
			this.state = 2501;
			this.unitExponent();
			this.state = 2502;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public criticality(): CriticalityContext {
		let _localctx: CriticalityContext = new CriticalityContext(this._ctx, this.state);
		this.enterRule(_localctx, 230, EDIF300Parser.RULE_criticality);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2504;
			this.match(EDIF300Parser.T__97);
			this.state = 2505;
			this.integerValue();
			this.state = 2506;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public criticalityDisplay(): CriticalityDisplayContext {
		let _localctx: CriticalityDisplayContext = new CriticalityDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 232, EDIF300Parser.RULE_criticalityDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2508;
			this.match(EDIF300Parser.T__98);
			this.state = 2512;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 2509;
				this.display();
				}
				}
				this.state = 2514;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2515;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public currentMap(): CurrentMapContext {
		let _localctx: CurrentMapContext = new CurrentMapContext(this._ctx, this.state);
		this.enterRule(_localctx, 234, EDIF300Parser.RULE_currentMap);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2517;
			this.match(EDIF300Parser.T__99);
			this.state = 2518;
			this.currentValue();
			this.state = 2519;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public currentValue(): CurrentValueContext {
		let _localctx: CurrentValueContext = new CurrentValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 236, EDIF300Parser.RULE_currentValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2521;
			this.miNoMaxValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public curve(): CurveContext {
		let _localctx: CurveContext = new CurveContext(this._ctx, this.state);
		this.enterRule(_localctx, 238, EDIF300Parser.RULE_curve);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2523;
			this.match(EDIF300Parser.T__100);
			this.state = 2528;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__10 || _la === EDIF300Parser.T__450) {
				{
				this.state = 2526;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__10:
					{
					this.state = 2524;
					this.arc();
					}
					break;
				case EDIF300Parser.T__450:
					{
					this.state = 2525;
					this.pointValue();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2530;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2531;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dataOrigin(): DataOriginContext {
		let _localctx: DataOriginContext = new DataOriginContext(this._ctx, this.state);
		this.enterRule(_localctx, 240, EDIF300Parser.RULE_dataOrigin);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2533;
			this.match(EDIF300Parser.T__101);
			this.state = 2534;
			this.stringToken();
			this.state = 2536;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__643) {
				{
				this.state = 2535;
				this.version();
				}
			}

			this.state = 2538;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public date(): DateContext {
		let _localctx: DateContext = new DateContext(this._ctx, this.state);
		this.enterRule(_localctx, 242, EDIF300Parser.RULE_date);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2540;
			this.match(EDIF300Parser.T__102);
			this.state = 2541;
			this.yearNumber();
			this.state = 2542;
			this.monthNumber();
			this.state = 2543;
			this.dayNumber();
			this.state = 2544;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dayNumber(): DayNumberContext {
		let _localctx: DayNumberContext = new DayNumberContext(this._ctx, this.state);
		this.enterRule(_localctx, 244, EDIF300Parser.RULE_dayNumber);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2546;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dcFanInLoad(): DcFanInLoadContext {
		let _localctx: DcFanInLoadContext = new DcFanInLoadContext(this._ctx, this.state);
		this.enterRule(_localctx, 246, EDIF300Parser.RULE_dcFanInLoad);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2548;
			this.match(EDIF300Parser.T__103);
			this.state = 2549;
			this.numberValue();
			this.state = 2550;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dcFanInLoadDisplay(): DcFanInLoadDisplayContext {
		let _localctx: DcFanInLoadDisplayContext = new DcFanInLoadDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 248, EDIF300Parser.RULE_dcFanInLoadDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2552;
			this.match(EDIF300Parser.T__104);
			this.state = 2556;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2553;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2554;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2555;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2558;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dcFanOutLoad(): DcFanOutLoadContext {
		let _localctx: DcFanOutLoadContext = new DcFanOutLoadContext(this._ctx, this.state);
		this.enterRule(_localctx, 250, EDIF300Parser.RULE_dcFanOutLoad);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2560;
			this.match(EDIF300Parser.T__105);
			this.state = 2561;
			this.numberValue();
			this.state = 2562;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dcFanOutLoadDisplay(): DcFanOutLoadDisplayContext {
		let _localctx: DcFanOutLoadDisplayContext = new DcFanOutLoadDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 252, EDIF300Parser.RULE_dcFanOutLoadDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2564;
			this.match(EDIF300Parser.T__106);
			this.state = 2568;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2565;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2566;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2567;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2570;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dcMaxFanIn(): DcMaxFanInContext {
		let _localctx: DcMaxFanInContext = new DcMaxFanInContext(this._ctx, this.state);
		this.enterRule(_localctx, 254, EDIF300Parser.RULE_dcMaxFanIn);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2572;
			this.match(EDIF300Parser.T__107);
			this.state = 2573;
			this.numberValue();
			this.state = 2574;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dcMaxFanInDisplay(): DcMaxFanInDisplayContext {
		let _localctx: DcMaxFanInDisplayContext = new DcMaxFanInDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 256, EDIF300Parser.RULE_dcMaxFanInDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2576;
			this.match(EDIF300Parser.T__108);
			this.state = 2580;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2577;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2578;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2579;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2582;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dcMaxFanOut(): DcMaxFanOutContext {
		let _localctx: DcMaxFanOutContext = new DcMaxFanOutContext(this._ctx, this.state);
		this.enterRule(_localctx, 258, EDIF300Parser.RULE_dcMaxFanOut);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2584;
			this.match(EDIF300Parser.T__109);
			this.state = 2585;
			this.numberValue();
			this.state = 2586;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dcMaxFanOutDisplay(): DcMaxFanOutDisplayContext {
		let _localctx: DcMaxFanOutDisplayContext = new DcMaxFanOutDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 260, EDIF300Parser.RULE_dcMaxFanOutDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2588;
			this.match(EDIF300Parser.T__110);
			this.state = 2592;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2589;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2590;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2591;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2594;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public decimalToString(): DecimalToStringContext {
		let _localctx: DecimalToStringContext = new DecimalToStringContext(this._ctx, this.state);
		this.enterRule(_localctx, 262, EDIF300Parser.RULE_decimalToString);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2596;
			this.match(EDIF300Parser.T__111);
			this.state = 2597;
			this.integerExpression();
			this.state = 2599;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__335) {
				{
				this.state = 2598;
				this.minimumStringLength();
				}
			}

			this.state = 2601;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public defaultClusterConfiguration(): DefaultClusterConfigurationContext {
		let _localctx: DefaultClusterConfigurationContext = new DefaultClusterConfigurationContext(this._ctx, this.state);
		this.enterRule(_localctx, 264, EDIF300Parser.RULE_defaultClusterConfiguration);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2603;
			this.match(EDIF300Parser.T__112);
			this.state = 2604;
			this.clusterConfigurationNameRef();
			this.state = 2605;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public defaultConnection(): DefaultConnectionContext {
		let _localctx: DefaultConnectionContext = new DefaultConnectionContext(this._ctx, this.state);
		this.enterRule(_localctx, 266, EDIF300Parser.RULE_defaultConnection);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2607;
			this.match(EDIF300Parser.T__113);
			this.state = 2608;
			this.globalPortRef();
			this.state = 2609;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public degree(): DegreeContext {
		let _localctx: DegreeContext = new DegreeContext(this._ctx, this.state);
		this.enterRule(_localctx, 268, EDIF300Parser.RULE_degree);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2611;
			this.match(EDIF300Parser.T__114);
			this.state = 2612;
			this.unitExponent();
			this.state = 2613;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public delay(): DelayContext {
		let _localctx: DelayContext = new DelayContext(this._ctx, this.state);
		this.enterRule(_localctx, 270, EDIF300Parser.RULE_delay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2615;
			this.match(EDIF300Parser.T__115);
			this.state = 2616;
			this.timeDelay();
			this.state = 2617;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public denominator(): DenominatorContext {
		let _localctx: DenominatorContext = new DenominatorContext(this._ctx, this.state);
		this.enterRule(_localctx, 272, EDIF300Parser.RULE_denominator);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2619;
			this.integerValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public derivation(): DerivationContext {
		let _localctx: DerivationContext = new DerivationContext(this._ctx, this.state);
		this.enterRule(_localctx, 274, EDIF300Parser.RULE_derivation);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2624;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__34:
				{
				this.state = 2621;
				this.calculated();
				}
				break;
			case EDIF300Parser.T__331:
				{
				this.state = 2622;
				this.measured();
				}
				break;
			case EDIF300Parser.T__458:
				{
				this.state = 2623;
				this.required();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public derivedFrom(): DerivedFromContext {
		let _localctx: DerivedFromContext = new DerivedFromContext(this._ctx, this.state);
		this.enterRule(_localctx, 276, EDIF300Parser.RULE_derivedFrom);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2626;
			this.match(EDIF300Parser.T__116);
			this.state = 2627;
			this.viewRef();
			this.state = 2629;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__452) {
				{
				this.state = 2628;
				this.reason();
				}
			}

			this.state = 2631;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public design(): DesignContext {
		let _localctx: DesignContext = new DesignContext(this._ctx, this.state);
		this.enterRule(_localctx, 278, EDIF300Parser.RULE_design);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2633;
			this.match(EDIF300Parser.T__117);
			this.state = 2634;
			this.designNameDef();
			this.state = 2635;
			this.cellRef();
			this.state = 2636;
			this.designHeader();
			this.state = 2642;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__121 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2640;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 2637;
					this.comment();
					}
					break;
				case EDIF300Parser.T__121:
					{
					this.state = 2638;
					this.designHierarchy();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2639;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2644;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2645;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public designator(): DesignatorContext {
		let _localctx: DesignatorContext = new DesignatorContext(this._ctx, this.state);
		this.enterRule(_localctx, 280, EDIF300Parser.RULE_designator);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2647;
			this.match(EDIF300Parser.T__118);
			this.state = 2648;
			this.stringValue();
			this.state = 2649;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public designatorDisplay(): DesignatorDisplayContext {
		let _localctx: DesignatorDisplayContext = new DesignatorDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 282, EDIF300Parser.RULE_designatorDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2651;
			this.match(EDIF300Parser.T__119);
			this.state = 2655;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2652;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2653;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2654;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2657;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public designHeader(): DesignHeaderContext {
		let _localctx: DesignHeaderContext = new DesignHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 284, EDIF300Parser.RULE_designHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2659;
			this.match(EDIF300Parser.T__120);
			this.state = 2660;
			this.designUnits();
			this.state = 2667;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
				{
				this.state = 2665;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__132:
					{
					this.state = 2661;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 2662;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 2663;
					this.property();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 2664;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2669;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2670;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public designHierarchy(): DesignHierarchyContext {
		let _localctx: DesignHierarchyContext = new DesignHierarchyContext(this._ctx, this.state);
		this.enterRule(_localctx, 286, EDIF300Parser.RULE_designHierarchy);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2672;
			this.match(EDIF300Parser.T__121);
			this.state = 2673;
			this.designHierarchyNameDef();
			this.state = 2674;
			this.clusterRef();
			this.state = 2675;
			this.clusterConfigurationRef();
			this.state = 2676;
			this.designHierarchyHeader();
			this.state = 2678;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__362) {
				{
				this.state = 2677;
				this.occurrenceHierarchyAnnotate();
				}
			}

			this.state = 2680;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public designHierarchyHeader(): DesignHierarchyHeaderContext {
		let _localctx: DesignHierarchyHeaderContext = new DesignHierarchyHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 288, EDIF300Parser.RULE_designHierarchyHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2682;
			this.match(EDIF300Parser.T__122);
			this.state = 2691;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__28 || _la === EDIF300Parser.T__252 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__358 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__606) {
				{
				this.state = 2689;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__28:
					{
					this.state = 2683;
					this.booleanParameterAssign();
					}
					break;
				case EDIF300Parser.T__252:
					{
					this.state = 2684;
					this.integerParameterAssign();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 2685;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__358:
					{
					this.state = 2686;
					this.numberParameterAssign();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 2687;
					this.property();
					}
					break;
				case EDIF300Parser.T__606:
					{
					this.state = 2688;
					this.stringParameterAssign();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2693;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2694;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public designHierarchyNameCaseSensitive(): DesignHierarchyNameCaseSensitiveContext {
		let _localctx: DesignHierarchyNameCaseSensitiveContext = new DesignHierarchyNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 290, EDIF300Parser.RULE_designHierarchyNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2696;
			this.match(EDIF300Parser.T__123);
			this.state = 2697;
			this.booleanToken();
			this.state = 2698;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public designHierarchyNameDef(): DesignHierarchyNameDefContext {
		let _localctx: DesignHierarchyNameDefContext = new DesignHierarchyNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 292, EDIF300Parser.RULE_designHierarchyNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2700;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public designNameCaseSensitive(): DesignNameCaseSensitiveContext {
		let _localctx: DesignNameCaseSensitiveContext = new DesignNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 294, EDIF300Parser.RULE_designNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2702;
			this.match(EDIF300Parser.T__124);
			this.state = 2703;
			this.booleanToken();
			this.state = 2704;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public designNameDef(): DesignNameDefContext {
		let _localctx: DesignNameDefContext = new DesignNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 296, EDIF300Parser.RULE_designNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2706;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public designUnits(): DesignUnitsContext {
		let _localctx: DesignUnitsContext = new DesignUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 298, EDIF300Parser.RULE_designUnits);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2708;
			this.match(EDIF300Parser.T__125);
			this.state = 2713;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__576 || _la === EDIF300Parser.T__580) {
				{
				this.state = 2711;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__576:
					{
					this.state = 2709;
					this.setCapacitance();
					}
					break;
				case EDIF300Parser.T__580:
					{
					this.state = 2710;
					this.setTime();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2715;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2716;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diagram(): DiagramContext {
		let _localctx: DiagramContext = new DiagramContext(this._ctx, this.state);
		this.enterRule(_localctx, 300, EDIF300Parser.RULE_diagram);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2718;
			this.match(EDIF300Parser.T__126);
			this.state = 2719;
			this.diagramNameDef();
			this.state = 2726;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2724;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 2720;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 2721;
					this.comment();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 2722;
					this.figure();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2723;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2728;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2729;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public diagramNameDef(): DiagramNameDefContext {
		let _localctx: DiagramNameDefContext = new DiagramNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 302, EDIF300Parser.RULE_diagramNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2731;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public directionalPortAttributeOverride(): DirectionalPortAttributeOverrideContext {
		let _localctx: DirectionalPortAttributeOverrideContext = new DirectionalPortAttributeOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 304, EDIF300Parser.RULE_directionalPortAttributeOverride);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2733;
			this.match(EDIF300Parser.T__127);
			this.state = 2737;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__231:
				{
				this.state = 2734;
				this.inputPortAttributes();
				}
				break;
			case EDIF300Parser.T__376:
				{
				this.state = 2735;
				this.outputPortAttributes();
				}
				break;
			case EDIF300Parser.T__20:
				{
				this.state = 2736;
				this.bidirectionalPortAttributes();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2739;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public display(): DisplayContext {
		let _localctx: DisplayContext = new DisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 306, EDIF300Parser.RULE_display);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2741;
			this.match(EDIF300Parser.T__128);
			this.state = 2746;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__162 || _la === EDIF300Parser.IDENTIFIER) {
				{
				this.state = 2744;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.IDENTIFIER:
					{
					this.state = 2742;
					this.figureGroupNameRef();
					}
					break;
				case EDIF300Parser.T__162:
					{
					this.state = 2743;
					this.figureGroupOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2748;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2749;
			this.transform();
			this.state = 2750;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public displayAttributes(): DisplayAttributesContext {
		let _localctx: DisplayAttributesContext = new DisplayAttributesContext(this._ctx, this.state);
		this.enterRule(_localctx, 308, EDIF300Parser.RULE_displayAttributes);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2752;
			this.match(EDIF300Parser.T__129);
			this.state = 2766;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 31)) & ~0x1F) === 0 && ((1 << (_la - 31)) & ((1 << (EDIF300Parser.T__30 - 31)) | (1 << (EDIF300Parser.T__31 - 31)) | (1 << (EDIF300Parser.T__32 - 31)) | (1 << (EDIF300Parser.T__60 - 31)))) !== 0) || ((((_la - 164)) & ~0x1F) === 0 && ((1 << (_la - 164)) & ((1 << (EDIF300Parser.T__163 - 164)) | (1 << (EDIF300Parser.T__164 - 164)) | (1 << (EDIF300Parser.T__172 - 164)))) !== 0) || _la === EDIF300Parser.T__207 || _la === EDIF300Parser.T__615 || _la === EDIF300Parser.T__644 || _la === EDIF300Parser.T__654) {
				{
				this.state = 2764;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__30:
					{
					this.state = 2753;
					this.borderPattern();
					}
					break;
				case EDIF300Parser.T__31:
					{
					this.state = 2754;
					this.borderPatternVisible();
					}
					break;
				case EDIF300Parser.T__32:
					{
					this.state = 2755;
					this.borderWidth();
					}
					break;
				case EDIF300Parser.T__60:
					{
					this.state = 2756;
					this.color();
					}
					break;
				case EDIF300Parser.T__163:
					{
					this.state = 2757;
					this.fillPattern();
					}
					break;
				case EDIF300Parser.T__164:
					{
					this.state = 2758;
					this.fillPatternVisible();
					}
					break;
				case EDIF300Parser.T__172:
					{
					this.state = 2759;
					this.fontRef();
					}
					break;
				case EDIF300Parser.T__207:
					{
					this.state = 2760;
					this.horizontalJustification();
					}
					break;
				case EDIF300Parser.T__615:
					{
					this.state = 2761;
					this.textHeight();
					}
					break;
				case EDIF300Parser.T__644:
					{
					this.state = 2762;
					this.verticalJustification();
					}
					break;
				case EDIF300Parser.T__654:
					{
					this.state = 2763;
					this.visible();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2768;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2769;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public displayName(): DisplayNameContext {
		let _localctx: DisplayNameContext = new DisplayNameContext(this._ctx, this.state);
		this.enterRule(_localctx, 310, EDIF300Parser.RULE_displayName);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2771;
			this.match(EDIF300Parser.T__130);
			this.state = 2772;
			this.stringToken();
			this.state = 2773;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public displayNameOverride(): DisplayNameOverrideContext {
		let _localctx: DisplayNameOverrideContext = new DisplayNameOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 312, EDIF300Parser.RULE_displayNameOverride);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2775;
			this.match(EDIF300Parser.T__131);
			this.state = 2776;
			this.stringToken();
			this.state = 2780;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2777;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2778;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2779;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2782;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public distanceValue(): DistanceValueContext {
		let _localctx: DistanceValueContext = new DistanceValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 314, EDIF300Parser.RULE_distanceValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2784;
			this.integerValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dividend(): DividendContext {
		let _localctx: DividendContext = new DividendContext(this._ctx, this.state);
		this.enterRule(_localctx, 316, EDIF300Parser.RULE_dividend);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2786;
			this.integerExpression();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public divisor(): DivisorContext {
		let _localctx: DivisorContext = new DivisorContext(this._ctx, this.state);
		this.enterRule(_localctx, 318, EDIF300Parser.RULE_divisor);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2788;
			this.integerExpression();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public documentation(): DocumentationContext {
		let _localctx: DocumentationContext = new DocumentationContext(this._ctx, this.state);
		this.enterRule(_localctx, 320, EDIF300Parser.RULE_documentation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2790;
			this.match(EDIF300Parser.T__132);
			this.state = 2791;
			this.documentationNameDef();
			this.state = 2792;
			this.documentationHeader();
			this.state = 2796;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__572) {
				{
				{
				this.state = 2793;
				this.section();
				}
				}
				this.state = 2798;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2799;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public documentationHeader(): DocumentationHeaderContext {
		let _localctx: DocumentationHeaderContext = new DocumentationHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 322, EDIF300Parser.RULE_documentationHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2801;
			this.match(EDIF300Parser.T__133);
			this.state = 2802;
			this.documentationUnits();
			this.state = 2808;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__597) {
				{
				this.state = 2806;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__14:
					{
					this.state = 2803;
					this.backgroundColor();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 2804;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 2805;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2810;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2811;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public documentationNameCaseSensitive(): DocumentationNameCaseSensitiveContext {
		let _localctx: DocumentationNameCaseSensitiveContext = new DocumentationNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 324, EDIF300Parser.RULE_documentationNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2813;
			this.match(EDIF300Parser.T__134);
			this.state = 2814;
			this.booleanToken();
			this.state = 2815;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public documentationNameDef(): DocumentationNameDefContext {
		let _localctx: DocumentationNameDefContext = new DocumentationNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 326, EDIF300Parser.RULE_documentationNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2817;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public documentationUnits(): DocumentationUnitsContext {
		let _localctx: DocumentationUnitsContext = new DocumentationUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 328, EDIF300Parser.RULE_documentationUnits);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2819;
			this.match(EDIF300Parser.T__135);
			this.state = 2824;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__575 || _la === EDIF300Parser.T__578) {
				{
				this.state = 2822;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__575:
					{
					this.state = 2820;
					this.setAngle();
					}
					break;
				case EDIF300Parser.T__578:
					{
					this.state = 2821;
					this.setDistance();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2826;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2827;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dominates(): DominatesContext {
		let _localctx: DominatesContext = new DominatesContext(this._ctx, this.state);
		this.enterRule(_localctx, 330, EDIF300Parser.RULE_dominates);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2829;
			this.match(EDIF300Parser.T__136);
			this.state = 2833;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.IDENTIFIER) {
				{
				{
				this.state = 2830;
				this.logicNameRef();
				}
				}
				this.state = 2835;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2836;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public dot(): DotContext {
		let _localctx: DotContext = new DotContext(this._ctx, this.state);
		this.enterRule(_localctx, 332, EDIF300Parser.RULE_dot);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2838;
			this.match(EDIF300Parser.T__137);
			this.state = 2839;
			this.pointValue();
			this.state = 2840;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public drawingDescription(): DrawingDescriptionContext {
		let _localctx: DrawingDescriptionContext = new DrawingDescriptionContext(this._ctx, this.state);
		this.enterRule(_localctx, 334, EDIF300Parser.RULE_drawingDescription);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2842;
			this.match(EDIF300Parser.T__138);
			this.state = 2843;
			this.stringToken();
			this.state = 2844;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public drawingDescriptionDisplay(): DrawingDescriptionDisplayContext {
		let _localctx: DrawingDescriptionDisplayContext = new DrawingDescriptionDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 336, EDIF300Parser.RULE_drawingDescriptionDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2846;
			this.match(EDIF300Parser.T__139);
			this.state = 2850;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2847;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2848;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2849;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2852;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public drawingIdentification(): DrawingIdentificationContext {
		let _localctx: DrawingIdentificationContext = new DrawingIdentificationContext(this._ctx, this.state);
		this.enterRule(_localctx, 338, EDIF300Parser.RULE_drawingIdentification);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2854;
			this.match(EDIF300Parser.T__140);
			this.state = 2855;
			this.stringToken();
			this.state = 2856;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public drawingIdentificationDisplay(): DrawingIdentificationDisplayContext {
		let _localctx: DrawingIdentificationDisplayContext = new DrawingIdentificationDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 340, EDIF300Parser.RULE_drawingIdentificationDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2858;
			this.match(EDIF300Parser.T__141);
			this.state = 2862;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2859;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2860;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2861;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2864;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public drawingSize(): DrawingSizeContext {
		let _localctx: DrawingSizeContext = new DrawingSizeContext(this._ctx, this.state);
		this.enterRule(_localctx, 342, EDIF300Parser.RULE_drawingSize);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2866;
			this.match(EDIF300Parser.T__142);
			this.state = 2867;
			this.stringToken();
			this.state = 2868;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public drawingSizeDisplay(): DrawingSizeDisplayContext {
		let _localctx: DrawingSizeDisplayContext = new DrawingSizeDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 344, EDIF300Parser.RULE_drawingSizeDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2870;
			this.match(EDIF300Parser.T__143);
			this.state = 2874;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2871;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2872;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2873;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2876;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public duration(): DurationContext {
		let _localctx: DurationContext = new DurationContext(this._ctx, this.state);
		this.enterRule(_localctx, 346, EDIF300Parser.RULE_duration);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2878;
			this.match(EDIF300Parser.T__144);
			this.state = 2879;
			this.timeValue();
			this.state = 2880;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public e(): EContext {
		let _localctx: EContext = new EContext(this._ctx, this.state);
		this.enterRule(_localctx, 348, EDIF300Parser.RULE_e);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2882;
			this.match(EDIF300Parser.T__145);
			this.state = 2883;
			this.mantissa();
			this.state = 2884;
			this.exponent();
			this.state = 2885;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public edif(): EdifContext {
		let _localctx: EdifContext = new EdifContext(this._ctx, this.state);
		this.enterRule(_localctx, 350, EDIF300Parser.RULE_edif);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2887;
			this.match(EDIF300Parser.T__146);
			this.state = 2888;
			this.edifNameDef();
			this.state = 2889;
			this.edifVersion();
			this.state = 2890;
			this.edifHeader();
			this.state = 2898;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__117 || _la === EDIF300Parser.T__155 || _la === EDIF300Parser.T__309 || _la === EDIF300Parser.T__642) {
				{
				this.state = 2896;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__309:
					{
					this.state = 2891;
					this.library();
					}
					break;
				case EDIF300Parser.T__117:
					{
					this.state = 2892;
					this.design();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 2893;
					this.comment();
					}
					break;
				case EDIF300Parser.T__155:
					{
					this.state = 2894;
					this.external();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 2895;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2900;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2901;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public edifHeader(): EdifHeaderContext {
		let _localctx: EdifHeaderContext = new EdifHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 352, EDIF300Parser.RULE_edifHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2903;
			this.match(EDIF300Parser.T__147);
			this.state = 2904;
			this.edifLevel();
			this.state = 2905;
			this.keywordMap();
			this.state = 2906;
			this.unitDefinitions();
			this.state = 2907;
			this.fontDefinitions();
			this.state = 2908;
			this.physicalDefaults();
			this.state = 2920;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__46 || _la === EDIF300Parser.T__90 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__198 || _la === EDIF300Parser.T__343 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__408 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
				{
				this.state = 2918;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__46:
					{
					this.state = 2909;
					this.characterEncoding();
					}
					break;
				case EDIF300Parser.T__90:
					{
					this.state = 2910;
					this.constantValues();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 2911;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__198:
					{
					this.state = 2912;
					this.globalPortDefinitions();
					}
					break;
				case EDIF300Parser.T__343:
					{
					this.state = 2913;
					this.nameCaseSensitivity();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 2914;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__408:
					{
					this.state = 2915;
					this.physicalScaling();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 2916;
					this.property();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 2917;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2922;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2923;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public edifLevel(): EdifLevelContext {
		let _localctx: EdifLevelContext = new EdifLevelContext(this._ctx, this.state);
		this.enterRule(_localctx, 354, EDIF300Parser.RULE_edifLevel);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2925;
			this.match(EDIF300Parser.T__148);
			this.state = 2926;
			this.edifLevelValue();
			this.state = 2927;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public edifLevelValue(): EdifLevelValueContext {
		let _localctx: EdifLevelValueContext = new EdifLevelValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 356, EDIF300Parser.RULE_edifLevelValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2929;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public edifNameDef(): EdifNameDefContext {
		let _localctx: EdifNameDefContext = new EdifNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 358, EDIF300Parser.RULE_edifNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2931;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public edifVersion(): EdifVersionContext {
		let _localctx: EdifVersionContext = new EdifVersionContext(this._ctx, this.state);
		this.enterRule(_localctx, 360, EDIF300Parser.RULE_edifVersion);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2933;
			this.match(EDIF300Parser.T__149);
			this.state = 2934;
			this.mark();
			this.state = 2935;
			this.issue();
			this.state = 2936;
			this.subIssue();
			this.state = 2937;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public endPoint(): EndPointContext {
		let _localctx: EndPointContext = new EndPointContext(this._ctx, this.state);
		this.enterRule(_localctx, 362, EDIF300Parser.RULE_endPoint);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2939;
			this.pointValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public endType(): EndTypeContext {
		let _localctx: EndTypeContext = new EndTypeContext(this._ctx, this.state);
		this.enterRule(_localctx, 364, EDIF300Parser.RULE_endType);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2941;
			this.match(EDIF300Parser.T__150);
			this.state = 2945;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__627:
				{
				this.state = 2942;
				this.truncate();
				}
				break;
			case EDIF300Parser.T__466:
				{
				this.state = 2943;
				this.round();
				}
				break;
			case EDIF300Parser.T__154:
				{
				this.state = 2944;
				this.extend();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2947;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public engineeringDate(): EngineeringDateContext {
		let _localctx: EngineeringDateContext = new EngineeringDateContext(this._ctx, this.state);
		this.enterRule(_localctx, 366, EDIF300Parser.RULE_engineeringDate);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2949;
			this.match(EDIF300Parser.T__151);
			this.state = 2950;
			this.date();
			this.state = 2951;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public engineeringDateDisplay(): EngineeringDateDisplayContext {
		let _localctx: EngineeringDateDisplayContext = new EngineeringDateDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 368, EDIF300Parser.RULE_engineeringDateDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2953;
			this.match(EDIF300Parser.T__152);
			this.state = 2957;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 2954;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 2955;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 2956;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2959;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public event(): EventContext {
		let _localctx: EventContext = new EventContext(this._ctx, this.state);
		this.enterRule(_localctx, 370, EDIF300Parser.RULE_event);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2961;
			this.match(EDIF300Parser.T__153);
			this.state = 2967;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__436:
				{
				this.state = 2962;
				this.portRef();
				}
				break;
			case EDIF300Parser.T__424:
				{
				this.state = 2963;
				this.portList();
				}
				break;
			case EDIF300Parser.T__437:
				{
				this.state = 2964;
				this.portSet();
				}
				break;
			case EDIF300Parser.T__267:
				{
				this.state = 2965;
				this.interconnectRef();
				}
				break;
			case EDIF300Parser.T__268:
				{
				this.state = 2966;
				this.interconnectSet();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 2973;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
				{
				this.state = 2971;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__16:
					{
					this.state = 2969;
					this.becomes();
					}
					break;
				case EDIF300Parser.T__625:
					{
					this.state = 2970;
					this.transition();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 2975;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 2976;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public exponent(): ExponentContext {
		let _localctx: ExponentContext = new ExponentContext(this._ctx, this.state);
		this.enterRule(_localctx, 372, EDIF300Parser.RULE_exponent);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2978;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extend(): ExtendContext {
		let _localctx: ExtendContext = new ExtendContext(this._ctx, this.state);
		this.enterRule(_localctx, 374, EDIF300Parser.RULE_extend);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2980;
			this.match(EDIF300Parser.T__154);
			this.state = 2981;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendForFrameMemberDef(): ExtendForFrameMemberDefContext {
		let _localctx: ExtendForFrameMemberDefContext = new ExtendForFrameMemberDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 376, EDIF300Parser.RULE_extendForFrameMemberDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2983;
			this.forFrameMemberRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendFrameDef(): ExtendFrameDefContext {
		let _localctx: ExtendFrameDefContext = new ExtendFrameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 378, EDIF300Parser.RULE_extendFrameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2985;
			this.frameNameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendInstanceDef(): ExtendInstanceDefContext {
		let _localctx: ExtendInstanceDefContext = new ExtendInstanceDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 380, EDIF300Parser.RULE_extendInstanceDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2987;
			this.instanceNameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendInstanceMemberDef(): ExtendInstanceMemberDefContext {
		let _localctx: ExtendInstanceMemberDefContext = new ExtendInstanceMemberDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 382, EDIF300Parser.RULE_extendInstanceMemberDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2989;
			this.instanceMemberRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendInterconnectDef(): ExtendInterconnectDefContext {
		let _localctx: ExtendInterconnectDefContext = new ExtendInterconnectDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 384, EDIF300Parser.RULE_extendInterconnectDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2991;
			this.interconnectNameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendPageDef(): ExtendPageDefContext {
		let _localctx: ExtendPageDefContext = new ExtendPageDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 386, EDIF300Parser.RULE_extendPageDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2993;
			this.pageNameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendPortDef(): ExtendPortDefContext {
		let _localctx: ExtendPortDefContext = new ExtendPortDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 388, EDIF300Parser.RULE_extendPortDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2995;
			this.portNameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendPortMemberDef(): ExtendPortMemberDefContext {
		let _localctx: ExtendPortMemberDefContext = new ExtendPortMemberDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 390, EDIF300Parser.RULE_extendPortMemberDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2997;
			this.portMemberRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendSignalDef(): ExtendSignalDefContext {
		let _localctx: ExtendSignalDefContext = new ExtendSignalDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 392, EDIF300Parser.RULE_extendSignalDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 2999;
			this.signalNameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendSignalGroupDef(): ExtendSignalGroupDefContext {
		let _localctx: ExtendSignalGroupDefContext = new ExtendSignalGroupDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 394, EDIF300Parser.RULE_extendSignalGroupDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3001;
			this.signalGroupNameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public extendSignalMemberDef(): ExtendSignalMemberDefContext {
		let _localctx: ExtendSignalMemberDefContext = new ExtendSignalMemberDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 396, EDIF300Parser.RULE_extendSignalMemberDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3003;
			this.signalMemberRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public external(): ExternalContext {
		let _localctx: ExternalContext = new ExternalContext(this._ctx, this.state);
		this.enterRule(_localctx, 398, EDIF300Parser.RULE_external);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3005;
			this.match(EDIF300Parser.T__155);
			this.state = 3006;
			this.libraryNameDef();
			this.state = 3007;
			this.libraryHeader();
			this.state = 3029;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__37 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__192 || _la === EDIF300Parser.T__381 || _la === EDIF300Parser.T__395 || ((((_la - 476)) & ~0x1F) === 0 && ((1 << (_la - 476)) & ((1 << (EDIF300Parser.T__475 - 476)) | (1 << (EDIF300Parser.T__478 - 476)) | (1 << (EDIF300Parser.T__486 - 476)) | (1 << (EDIF300Parser.T__489 - 476)) | (1 << (EDIF300Parser.T__500 - 476)) | (1 << (EDIF300Parser.T__504 - 476)))) !== 0) || ((((_la - 509)) & ~0x1F) === 0 && ((1 << (_la - 509)) & ((1 << (EDIF300Parser.T__508 - 509)) | (1 << (EDIF300Parser.T__517 - 509)) | (1 << (EDIF300Parser.T__521 - 509)) | (1 << (EDIF300Parser.T__524 - 509)))) !== 0) || ((((_la - 549)) & ~0x1F) === 0 && ((1 << (_la - 549)) & ((1 << (EDIF300Parser.T__548 - 549)) | (1 << (EDIF300Parser.T__557 - 549)) | (1 << (EDIF300Parser.T__562 - 549)))) !== 0) || _la === EDIF300Parser.T__642) {
				{
				this.state = 3027;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__37:
					{
					this.state = 3008;
					this.cell();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 3009;
					this.comment();
					}
					break;
				case EDIF300Parser.T__192:
					{
					this.state = 3010;
					this.geometryMacro();
					}
					break;
				case EDIF300Parser.T__381:
					{
					this.state = 3011;
					this.pageBorderTemplate();
					}
					break;
				case EDIF300Parser.T__395:
					{
					this.state = 3012;
					this.pageTitleBlockTemplate();
					}
					break;
				case EDIF300Parser.T__475:
					{
					this.state = 3013;
					this.schematicFigureMacro();
					}
					break;
				case EDIF300Parser.T__478:
					{
					this.state = 3014;
					this.schematicForFrameBorderTemplate();
					}
					break;
				case EDIF300Parser.T__486:
					{
					this.state = 3015;
					this.schematicGlobalPortTemplate();
					}
					break;
				case EDIF300Parser.T__489:
					{
					this.state = 3016;
					this.schematicIfFrameBorderTemplate();
					}
					break;
				case EDIF300Parser.T__500:
					{
					this.state = 3017;
					this.schematicInterconnectTerminatorTemplate();
					}
					break;
				case EDIF300Parser.T__504:
					{
					this.state = 3018;
					this.schematicJunctionTemplate();
					}
					break;
				case EDIF300Parser.T__508:
					{
					this.state = 3019;
					this.schematicMasterPortTemplate();
					}
					break;
				case EDIF300Parser.T__517:
					{
					this.state = 3020;
					this.schematicOffPageConnectorTemplate();
					}
					break;
				case EDIF300Parser.T__521:
					{
					this.state = 3021;
					this.schematicOnPageConnectorTemplate();
					}
					break;
				case EDIF300Parser.T__524:
					{
					this.state = 3022;
					this.schematicOtherwiseFrameBorderTemplate();
					}
					break;
				case EDIF300Parser.T__548:
					{
					this.state = 3023;
					this.schematicRipperTemplate();
					}
					break;
				case EDIF300Parser.T__557:
					{
					this.state = 3024;
					this.schematicSymbolBorderTemplate();
					}
					break;
				case EDIF300Parser.T__562:
					{
					this.state = 3025;
					this.schematicSymbolPortTemplate();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 3026;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3031;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3032;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fahrenheit(): FahrenheitContext {
		let _localctx: FahrenheitContext = new FahrenheitContext(this._ctx, this.state);
		this.enterRule(_localctx, 400, EDIF300Parser.RULE_fahrenheit);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3034;
			this.match(EDIF300Parser.T__156);
			this.state = 3035;
			this.unitExponent();
			this.state = 3036;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public efalse(): EfalseContext {
		let _localctx: EfalseContext = new EfalseContext(this._ctx, this.state);
		this.enterRule(_localctx, 402, EDIF300Parser.RULE_efalse);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3038;
			this.match(EDIF300Parser.T__157);
			this.state = 3039;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public farad(): FaradContext {
		let _localctx: FaradContext = new FaradContext(this._ctx, this.state);
		this.enterRule(_localctx, 404, EDIF300Parser.RULE_farad);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3041;
			this.match(EDIF300Parser.T__158);
			this.state = 3042;
			this.unitExponent();
			this.state = 3043;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public figure(): FigureContext {
		let _localctx: FigureContext = new FigureContext(this._ctx, this.state);
		this.enterRule(_localctx, 406, EDIF300Parser.RULE_figure);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3045;
			this.match(EDIF300Parser.T__159);
			this.state = 3048;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.IDENTIFIER:
				{
				this.state = 3046;
				this.figureGroupNameRef();
				}
				break;
			case EDIF300Parser.T__162:
				{
				this.state = 3047;
				this.figureGroupOverride();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 3062;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 50)) & ~0x1F) === 0 && ((1 << (_la - 50)) & ((1 << (EDIF300Parser.T__49 - 50)) | (1 << (EDIF300Parser.T__61 - 50)) | (1 << (EDIF300Parser.T__67 - 50)))) !== 0) || _la === EDIF300Parser.T__137 || _la === EDIF300Parser.T__365 || _la === EDIF300Parser.T__401 || _la === EDIF300Parser.T__413 || _la === EDIF300Parser.T__453 || _la === EDIF300Parser.T__582 || _la === EDIF300Parser.T__642) {
				{
				this.state = 3060;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__49:
					{
					this.state = 3050;
					this.circle();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 3051;
					this.comment();
					}
					break;
				case EDIF300Parser.T__67:
					{
					this.state = 3052;
					this.complexGeometry();
					}
					break;
				case EDIF300Parser.T__137:
					{
					this.state = 3053;
					this.dot();
					}
					break;
				case EDIF300Parser.T__365:
					{
					this.state = 3054;
					this.openShape();
					}
					break;
				case EDIF300Parser.T__401:
					{
					this.state = 3055;
					this.path();
					}
					break;
				case EDIF300Parser.T__413:
					{
					this.state = 3056;
					this.polygon();
					}
					break;
				case EDIF300Parser.T__453:
					{
					this.state = 3057;
					this.rectangle();
					}
					break;
				case EDIF300Parser.T__582:
					{
					this.state = 3058;
					this.shape();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 3059;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3064;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3065;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public figureGroup(): FigureGroupContext {
		let _localctx: FigureGroupContext = new FigureGroupContext(this._ctx, this.state);
		this.enterRule(_localctx, 408, EDIF300Parser.RULE_figureGroup);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3067;
			this.match(EDIF300Parser.T__160);
			this.state = 3068;
			this.figureGroupNameDef();
			this.state = 3079;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__95 || _la === EDIF300Parser.T__129 || _la === EDIF300Parser.T__150 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__403 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
				{
				this.state = 3077;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3069;
					this.comment();
					}
					break;
				case EDIF300Parser.T__95:
					{
					this.state = 3070;
					this.cornerType();
					}
					break;
				case EDIF300Parser.T__129:
					{
					this.state = 3071;
					this.displayAttributes();
					}
					break;
				case EDIF300Parser.T__150:
					{
					this.state = 3072;
					this.endType();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3073;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__403:
					{
					this.state = 3074;
					this.pathWidth();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3075;
					this.property();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 3076;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3081;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3082;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public figureGroupNameCaseSensitive(): FigureGroupNameCaseSensitiveContext {
		let _localctx: FigureGroupNameCaseSensitiveContext = new FigureGroupNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 410, EDIF300Parser.RULE_figureGroupNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3084;
			this.match(EDIF300Parser.T__161);
			this.state = 3085;
			this.booleanToken();
			this.state = 3086;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public figureGroupNameDef(): FigureGroupNameDefContext {
		let _localctx: FigureGroupNameDefContext = new FigureGroupNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 412, EDIF300Parser.RULE_figureGroupNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3088;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public figureGroupNameRef(): FigureGroupNameRefContext {
		let _localctx: FigureGroupNameRefContext = new FigureGroupNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 414, EDIF300Parser.RULE_figureGroupNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3090;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public figureGroupOverride(): FigureGroupOverrideContext {
		let _localctx: FigureGroupOverrideContext = new FigureGroupOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 416, EDIF300Parser.RULE_figureGroupOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3092;
			this.match(EDIF300Parser.T__162);
			this.state = 3093;
			this.figureGroupNameRef();
			this.state = 3102;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__95 || _la === EDIF300Parser.T__129 || _la === EDIF300Parser.T__150 || _la === EDIF300Parser.T__403 || _la === EDIF300Parser.T__448) {
				{
				this.state = 3100;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3094;
					this.comment();
					}
					break;
				case EDIF300Parser.T__95:
					{
					this.state = 3095;
					this.cornerType();
					}
					break;
				case EDIF300Parser.T__129:
					{
					this.state = 3096;
					this.displayAttributes();
					}
					break;
				case EDIF300Parser.T__150:
					{
					this.state = 3097;
					this.endType();
					}
					break;
				case EDIF300Parser.T__403:
					{
					this.state = 3098;
					this.pathWidth();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 3099;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3104;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3105;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fillPattern(): FillPatternContext {
		let _localctx: FillPatternContext = new FillPatternContext(this._ctx, this.state);
		this.enterRule(_localctx, 418, EDIF300Parser.RULE_fillPattern);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3107;
			this.match(EDIF300Parser.T__163);
			this.state = 3108;
			this.pixelPattern();
			this.state = 3109;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fillPatternVisible(): FillPatternVisibleContext {
		let _localctx: FillPatternVisibleContext = new FillPatternVisibleContext(this._ctx, this.state);
		this.enterRule(_localctx, 420, EDIF300Parser.RULE_fillPatternVisible);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3111;
			this.match(EDIF300Parser.T__164);
			this.state = 3112;
			this.booleanValue();
			this.state = 3113;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public firstIntegerExpression(): FirstIntegerExpressionContext {
		let _localctx: FirstIntegerExpressionContext = new FirstIntegerExpressionContext(this._ctx, this.state);
		this.enterRule(_localctx, 422, EDIF300Parser.RULE_firstIntegerExpression);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3115;
			this.integerExpression();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public firstStringExpression(): FirstStringExpressionContext {
		let _localctx: FirstStringExpressionContext = new FirstStringExpressionContext(this._ctx, this.state);
		this.enterRule(_localctx, 424, EDIF300Parser.RULE_firstStringExpression);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3117;
			this.stringExpression();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fixed(): FixedContext {
		let _localctx: FixedContext = new FixedContext(this._ctx, this.state);
		this.enterRule(_localctx, 426, EDIF300Parser.RULE_fixed);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3119;
			this.match(EDIF300Parser.T__165);
			this.state = 3120;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public font(): FontContext {
		let _localctx: FontContext = new FontContext(this._ctx, this.state);
		this.enterRule(_localctx, 428, EDIF300Parser.RULE_font);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3122;
			this.match(EDIF300Parser.T__166);
			this.state = 3123;
			this.fontNameDef();
			this.state = 3124;
			this.typeface();
			this.state = 3125;
			this.fontProportions();
			this.state = 3133;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__22 || _la === EDIF300Parser.T__274 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__449 || _la === EDIF300Parser.T__642) {
				{
				this.state = 3131;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__22:
					{
					this.state = 3126;
					this.boldStyle();
					}
					break;
				case EDIF300Parser.T__274:
					{
					this.state = 3127;
					this.italicStyle();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3128;
					this.property();
					}
					break;
				case EDIF300Parser.T__449:
					{
					this.state = 3129;
					this.proportionalFont();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 3130;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3135;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3136;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fontCapitalHeight(): FontCapitalHeightContext {
		let _localctx: FontCapitalHeightContext = new FontCapitalHeightContext(this._ctx, this.state);
		this.enterRule(_localctx, 430, EDIF300Parser.RULE_fontCapitalHeight);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3138;
			this.match(EDIF300Parser.T__167);
			this.state = 3139;
			this.lengthValue();
			this.state = 3140;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fontDefinitions(): FontDefinitionsContext {
		let _localctx: FontDefinitionsContext = new FontDefinitionsContext(this._ctx, this.state);
		this.enterRule(_localctx, 432, EDIF300Parser.RULE_fontDefinitions);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3142;
			this.match(EDIF300Parser.T__168);
			this.state = 3144;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__173) {
				{
				this.state = 3143;
				this.fonts();
				}
			}

			this.state = 3146;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fontDescent(): FontDescentContext {
		let _localctx: FontDescentContext = new FontDescentContext(this._ctx, this.state);
		this.enterRule(_localctx, 434, EDIF300Parser.RULE_fontDescent);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3148;
			this.match(EDIF300Parser.T__169);
			this.state = 3149;
			this.lengthValue();
			this.state = 3150;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fontFamily(): FontFamilyContext {
		let _localctx: FontFamilyContext = new FontFamilyContext(this._ctx, this.state);
		this.enterRule(_localctx, 436, EDIF300Parser.RULE_fontFamily);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3152;
			this.stringToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fontHeight(): FontHeightContext {
		let _localctx: FontHeightContext = new FontHeightContext(this._ctx, this.state);
		this.enterRule(_localctx, 438, EDIF300Parser.RULE_fontHeight);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3154;
			this.match(EDIF300Parser.T__170);
			this.state = 3155;
			this.lengthValue();
			this.state = 3156;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fontNameDef(): FontNameDefContext {
		let _localctx: FontNameDefContext = new FontNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 440, EDIF300Parser.RULE_fontNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3158;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fontNameRef(): FontNameRefContext {
		let _localctx: FontNameRefContext = new FontNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 442, EDIF300Parser.RULE_fontNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3160;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fontProportions(): FontProportionsContext {
		let _localctx: FontProportionsContext = new FontProportionsContext(this._ctx, this.state);
		this.enterRule(_localctx, 444, EDIF300Parser.RULE_fontProportions);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3162;
			this.match(EDIF300Parser.T__171);
			this.state = 3163;
			this.fontHeight();
			this.state = 3164;
			this.fontDescent();
			this.state = 3165;
			this.fontCapitalHeight();
			this.state = 3166;
			this.fontWidth();
			this.state = 3167;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fontRef(): FontRefContext {
		let _localctx: FontRefContext = new FontRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 446, EDIF300Parser.RULE_fontRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3169;
			this.match(EDIF300Parser.T__172);
			this.state = 3170;
			this.fontNameRef();
			this.state = 3171;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fonts(): FontsContext {
		let _localctx: FontsContext = new FontsContext(this._ctx, this.state);
		this.enterRule(_localctx, 448, EDIF300Parser.RULE_fonts);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3173;
			this.match(EDIF300Parser.T__173);
			this.state = 3174;
			this.setDistance();
			this.state = 3178;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__166) {
				{
				{
				this.state = 3175;
				this.font();
				}
				}
				this.state = 3180;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3181;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fontWidth(): FontWidthContext {
		let _localctx: FontWidthContext = new FontWidthContext(this._ctx, this.state);
		this.enterRule(_localctx, 450, EDIF300Parser.RULE_fontWidth);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3183;
			this.match(EDIF300Parser.T__174);
			this.state = 3184;
			this.lengthValue();
			this.state = 3185;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public forbiddenEvent(): ForbiddenEventContext {
		let _localctx: ForbiddenEventContext = new ForbiddenEventContext(this._ctx, this.state);
		this.enterRule(_localctx, 452, EDIF300Parser.RULE_forbiddenEvent);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3187;
			this.match(EDIF300Parser.T__175);
			this.state = 3188;
			this.timeInterval();
			this.state = 3192;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__153) {
				{
				{
				this.state = 3189;
				this.event();
				}
				}
				this.state = 3194;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3195;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public forFrame(): ForFrameContext {
		let _localctx: ForFrameContext = new ForFrameContext(this._ctx, this.state);
		this.enterRule(_localctx, 454, EDIF300Parser.RULE_forFrame);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3197;
			this.match(EDIF300Parser.T__176);
			this.state = 3198;
			this.frameNameDef();
			this.state = 3199;
			this.repetitionCount();
			this.state = 3200;
			this.forFrameIndex();
			this.state = 3201;
			this.logicalConnectivity();
			this.state = 3209;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
				{
				this.state = 3207;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3202;
					this.comment();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 3203;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3204;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3205;
					this.property();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 3206;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3211;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3212;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public forFrameAnnotate(): ForFrameAnnotateContext {
		let _localctx: ForFrameAnnotateContext = new ForFrameAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 456, EDIF300Parser.RULE_forFrameAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3214;
			this.match(EDIF300Parser.T__177);
			this.state = 3215;
			this.extendForFrameMemberDef();
			this.state = 3225;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__177 || _la === EDIF300Parser.T__216 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__305 || _la === EDIF300Parser.T__361 || _la === EDIF300Parser.T__372) {
				{
				this.state = 3223;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3216;
					this.comment();
					}
					break;
				case EDIF300Parser.T__177:
					{
					this.state = 3217;
					this.forFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__216:
					{
					this.state = 3218;
					this.ifFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__259:
					{
					this.state = 3219;
					this.interconnectAnnotate();
					}
					break;
				case EDIF300Parser.T__305:
					{
					this.state = 3220;
					this.leafOccurrenceAnnotate();
					}
					break;
				case EDIF300Parser.T__361:
					{
					this.state = 3221;
					this.occurrenceAnnotate();
					}
					break;
				case EDIF300Parser.T__372:
					{
					this.state = 3222;
					this.otherwiseFrameAnnotate();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3227;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3228;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public forFrameIndex(): ForFrameIndexContext {
		let _localctx: ForFrameIndexContext = new ForFrameIndexContext(this._ctx, this.state);
		this.enterRule(_localctx, 458, EDIF300Parser.RULE_forFrameIndex);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3230;
			this.match(EDIF300Parser.T__178);
			this.state = 3231;
			this.indexNameDef();
			this.state = 3237;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__224 || _la === EDIF300Parser.T__226 || _la === EDIF300Parser.T__346) {
				{
				this.state = 3235;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__224:
					{
					this.state = 3232;
					this.indexStart();
					}
					break;
				case EDIF300Parser.T__226:
					{
					this.state = 3233;
					this.indexStep();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3234;
					this.nameInformation();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3239;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3240;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public forFrameIndexDisplay(): ForFrameIndexDisplayContext {
		let _localctx: ForFrameIndexDisplayContext = new ForFrameIndexDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 460, EDIF300Parser.RULE_forFrameIndexDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3242;
			this.match(EDIF300Parser.T__179);
			this.state = 3249;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 223)) & ~0x1F) === 0 && ((1 << (_la - 223)) & ((1 << (EDIF300Parser.T__222 - 223)) | (1 << (EDIF300Parser.T__223 - 223)) | (1 << (EDIF300Parser.T__225 - 223)) | (1 << (EDIF300Parser.T__227 - 223)))) !== 0)) {
				{
				this.state = 3247;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__222:
					{
					this.state = 3243;
					this.indexEndDisplay();
					}
					break;
				case EDIF300Parser.T__223:
					{
					this.state = 3244;
					this.indexNameDisplay();
					}
					break;
				case EDIF300Parser.T__225:
					{
					this.state = 3245;
					this.indexStartDisplay();
					}
					break;
				case EDIF300Parser.T__227:
					{
					this.state = 3246;
					this.indexStepDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3251;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3252;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public forFrameIndexNameCaseSensitive(): ForFrameIndexNameCaseSensitiveContext {
		let _localctx: ForFrameIndexNameCaseSensitiveContext = new ForFrameIndexNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 462, EDIF300Parser.RULE_forFrameIndexNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3254;
			this.match(EDIF300Parser.T__180);
			this.state = 3255;
			this.booleanToken();
			this.state = 3256;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public forFrameIndexRef(): ForFrameIndexRefContext {
		let _localctx: ForFrameIndexRefContext = new ForFrameIndexRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 464, EDIF300Parser.RULE_forFrameIndexRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3258;
			this.match(EDIF300Parser.T__181);
			this.state = 3259;
			this.indexNameRef();
			this.state = 3260;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public forFrameMemberRef(): ForFrameMemberRefContext {
		let _localctx: ForFrameMemberRefContext = new ForFrameMemberRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 466, EDIF300Parser.RULE_forFrameMemberRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3262;
			this.match(EDIF300Parser.T__182);
			this.state = 3263;
			this.frameNameRef();
			this.state = 3264;
			this.indexValue();
			this.state = 3265;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public forFrameRef(): ForFrameRefContext {
		let _localctx: ForFrameRefContext = new ForFrameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 468, EDIF300Parser.RULE_forFrameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3267;
			this.match(EDIF300Parser.T__183);
			this.state = 3268;
			this.frameNameRef();
			this.state = 3269;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public frameConfiguration(): FrameConfigurationContext {
		let _localctx: FrameConfigurationContext = new FrameConfigurationContext(this._ctx, this.state);
		this.enterRule(_localctx, 470, EDIF300Parser.RULE_frameConfiguration);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3271;
			this.match(EDIF300Parser.T__184);
			this.state = 3272;
			this.frameNameRef();
			this.state = 3277;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__184 || _la === EDIF300Parser.T__233) {
				{
				this.state = 3275;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__184:
					{
					this.state = 3273;
					this.frameConfiguration();
					}
					break;
				case EDIF300Parser.T__233:
					{
					this.state = 3274;
					this.instanceConfiguration();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3279;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3280;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public frameNameCaseSensitive(): FrameNameCaseSensitiveContext {
		let _localctx: FrameNameCaseSensitiveContext = new FrameNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 472, EDIF300Parser.RULE_frameNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3282;
			this.match(EDIF300Parser.T__185);
			this.state = 3283;
			this.booleanToken();
			this.state = 3284;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public frameNameDef(): FrameNameDefContext {
		let _localctx: FrameNameDefContext = new FrameNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 474, EDIF300Parser.RULE_frameNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3286;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public frameNameRef(): FrameNameRefContext {
		let _localctx: FrameNameRefContext = new FrameNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 476, EDIF300Parser.RULE_frameNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3288;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public frameRef(): FrameRefContext {
		let _localctx: FrameRefContext = new FrameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 478, EDIF300Parser.RULE_frameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3290;
			this.match(EDIF300Parser.T__186);
			this.state = 3291;
			this.frameNameRef();
			this.state = 3292;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public frequencyValue(): FrequencyValueContext {
		let _localctx: FrequencyValueContext = new FrequencyValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 480, EDIF300Parser.RULE_frequencyValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3294;
			this.miNoMaxValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fromBottom(): FromBottomContext {
		let _localctx: FromBottomContext = new FromBottomContext(this._ctx, this.state);
		this.enterRule(_localctx, 482, EDIF300Parser.RULE_fromBottom);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3296;
			this.match(EDIF300Parser.T__187);
			this.state = 3297;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fromInteger(): FromIntegerContext {
		let _localctx: FromIntegerContext = new FromIntegerContext(this._ctx, this.state);
		this.enterRule(_localctx, 484, EDIF300Parser.RULE_fromInteger);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3299;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fromLeft(): FromLeftContext {
		let _localctx: FromLeftContext = new FromLeftContext(this._ctx, this.state);
		this.enterRule(_localctx, 486, EDIF300Parser.RULE_fromLeft);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3301;
			this.match(EDIF300Parser.T__188);
			this.state = 3302;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fromRight(): FromRightContext {
		let _localctx: FromRightContext = new FromRightContext(this._ctx, this.state);
		this.enterRule(_localctx, 488, EDIF300Parser.RULE_fromRight);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3304;
			this.match(EDIF300Parser.T__189);
			this.state = 3305;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public fromTop(): FromTopContext {
		let _localctx: FromTopContext = new FromTopContext(this._ctx, this.state);
		this.enterRule(_localctx, 490, EDIF300Parser.RULE_fromTop);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3307;
			this.match(EDIF300Parser.T__190);
			this.state = 3308;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public generated(): GeneratedContext {
		let _localctx: GeneratedContext = new GeneratedContext(this._ctx, this.state);
		this.enterRule(_localctx, 492, EDIF300Parser.RULE_generated);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3310;
			this.match(EDIF300Parser.T__191);
			this.state = 3311;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public geometryMacro(): GeometryMacroContext {
		let _localctx: GeometryMacroContext = new GeometryMacroContext(this._ctx, this.state);
		this.enterRule(_localctx, 494, EDIF300Parser.RULE_geometryMacro);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3313;
			this.match(EDIF300Parser.T__192);
			this.state = 3314;
			this.libraryObjectNameDef();
			this.state = 3315;
			this.geometryMacroHeader();
			this.state = 3328;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 50)) & ~0x1F) === 0 && ((1 << (_la - 50)) & ((1 << (EDIF300Parser.T__49 - 50)) | (1 << (EDIF300Parser.T__61 - 50)) | (1 << (EDIF300Parser.T__67 - 50)))) !== 0) || _la === EDIF300Parser.T__137 || _la === EDIF300Parser.T__365 || _la === EDIF300Parser.T__401 || _la === EDIF300Parser.T__413 || _la === EDIF300Parser.T__453 || _la === EDIF300Parser.T__582 || _la === EDIF300Parser.T__642) {
				{
				this.state = 3326;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__49:
					{
					this.state = 3316;
					this.circle();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 3317;
					this.comment();
					}
					break;
				case EDIF300Parser.T__67:
					{
					this.state = 3318;
					this.complexGeometry();
					}
					break;
				case EDIF300Parser.T__137:
					{
					this.state = 3319;
					this.dot();
					}
					break;
				case EDIF300Parser.T__365:
					{
					this.state = 3320;
					this.openShape();
					}
					break;
				case EDIF300Parser.T__401:
					{
					this.state = 3321;
					this.path();
					}
					break;
				case EDIF300Parser.T__413:
					{
					this.state = 3322;
					this.polygon();
					}
					break;
				case EDIF300Parser.T__453:
					{
					this.state = 3323;
					this.rectangle();
					}
					break;
				case EDIF300Parser.T__582:
					{
					this.state = 3324;
					this.shape();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 3325;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3330;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3331;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public geometryMacroHeader(): GeometryMacroHeaderContext {
		let _localctx: GeometryMacroHeaderContext = new GeometryMacroHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 496, EDIF300Parser.RULE_geometryMacroHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3333;
			this.match(EDIF300Parser.T__193);
			this.state = 3334;
			this.geometryMacroUnits();
			this.state = 3343;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__368 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
				{
				this.state = 3341;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__14:
					{
					this.state = 3335;
					this.backgroundColor();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 3336;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3337;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__368:
					{
					this.state = 3338;
					this.originalBoundingBox();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3339;
					this.property();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 3340;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3345;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3346;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public geometryMacroRef(): GeometryMacroRefContext {
		let _localctx: GeometryMacroRefContext = new GeometryMacroRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 498, EDIF300Parser.RULE_geometryMacroRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3348;
			this.match(EDIF300Parser.T__194);
			this.state = 3349;
			this.libraryObjectNameRef();
			this.state = 3351;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 3350;
				this.libraryRef();
				}
			}

			this.state = 3353;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public geometryMacroUnits(): GeometryMacroUnitsContext {
		let _localctx: GeometryMacroUnitsContext = new GeometryMacroUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 500, EDIF300Parser.RULE_geometryMacroUnits);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3355;
			this.match(EDIF300Parser.T__195);
			this.state = 3357;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__575) {
				{
				this.state = 3356;
				this.setAngle();
				}
			}

			this.state = 3359;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPort(): GlobalPortContext {
		let _localctx: GlobalPortContext = new GlobalPortContext(this._ctx, this.state);
		this.enterRule(_localctx, 502, EDIF300Parser.RULE_globalPort);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3361;
			this.match(EDIF300Parser.T__196);
			this.state = 3362;
			this.globalPortNameDef();
			this.state = 3370;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__483 || _la === EDIF300Parser.T__642) {
				{
				this.state = 3368;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3363;
					this.comment();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3364;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3365;
					this.property();
					}
					break;
				case EDIF300Parser.T__483:
					{
					this.state = 3366;
					this.schematicGlobalPortAttributes();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 3367;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3372;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3373;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPortBundle(): GlobalPortBundleContext {
		let _localctx: GlobalPortBundleContext = new GlobalPortBundleContext(this._ctx, this.state);
		this.enterRule(_localctx, 504, EDIF300Parser.RULE_globalPortBundle);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3375;
			this.match(EDIF300Parser.T__197);
			this.state = 3376;
			this.globalPortNameDef();
			this.state = 3377;
			this.globalPortList();
			this.state = 3384;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
				{
				this.state = 3382;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3378;
					this.comment();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3379;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3380;
					this.property();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 3381;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3386;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3387;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPortDefinitions(): GlobalPortDefinitionsContext {
		let _localctx: GlobalPortDefinitionsContext = new GlobalPortDefinitionsContext(this._ctx, this.state);
		this.enterRule(_localctx, 506, EDIF300Parser.RULE_globalPortDefinitions);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3389;
			this.match(EDIF300Parser.T__198);
			this.state = 3394;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__196 || _la === EDIF300Parser.T__197) {
				{
				this.state = 3392;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__196:
					{
					this.state = 3390;
					this.globalPort();
					}
					break;
				case EDIF300Parser.T__197:
					{
					this.state = 3391;
					this.globalPortBundle();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3396;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3397;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPortList(): GlobalPortListContext {
		let _localctx: GlobalPortListContext = new GlobalPortListContext(this._ctx, this.state);
		this.enterRule(_localctx, 508, EDIF300Parser.RULE_globalPortList);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3399;
			this.match(EDIF300Parser.T__199);
			this.state = 3403;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__203) {
				{
				{
				this.state = 3400;
				this.globalPortRef();
				}
				}
				this.state = 3405;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3406;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPortNameCaseSensitive(): GlobalPortNameCaseSensitiveContext {
		let _localctx: GlobalPortNameCaseSensitiveContext = new GlobalPortNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 510, EDIF300Parser.RULE_globalPortNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3408;
			this.match(EDIF300Parser.T__200);
			this.state = 3409;
			this.booleanToken();
			this.state = 3410;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPortNameDef(): GlobalPortNameDefContext {
		let _localctx: GlobalPortNameDefContext = new GlobalPortNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 512, EDIF300Parser.RULE_globalPortNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3412;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPortNameDisplay(): GlobalPortNameDisplayContext {
		let _localctx: GlobalPortNameDisplayContext = new GlobalPortNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 514, EDIF300Parser.RULE_globalPortNameDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3414;
			this.match(EDIF300Parser.T__201);
			this.state = 3419;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
				{
				this.state = 3417;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 3415;
					this.display();
					}
					break;
				case EDIF300Parser.T__131:
					{
					this.state = 3416;
					this.displayNameOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3421;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3422;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPortNameRef(): GlobalPortNameRefContext {
		let _localctx: GlobalPortNameRefContext = new GlobalPortNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 516, EDIF300Parser.RULE_globalPortNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3424;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPortPropertyDisplay(): GlobalPortPropertyDisplayContext {
		let _localctx: GlobalPortPropertyDisplayContext = new GlobalPortPropertyDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 518, EDIF300Parser.RULE_globalPortPropertyDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3426;
			this.match(EDIF300Parser.T__202);
			this.state = 3427;
			this.propertyNameRef();
			this.state = 3432;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
				{
				this.state = 3430;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 3428;
					this.display();
					}
					break;
				case EDIF300Parser.T__447:
					{
					this.state = 3429;
					this.propertyNameDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3434;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3435;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPortRef(): GlobalPortRefContext {
		let _localctx: GlobalPortRefContext = new GlobalPortRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 520, EDIF300Parser.RULE_globalPortRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3437;
			this.match(EDIF300Parser.T__203);
			this.state = 3438;
			this.globalPortNameRef();
			this.state = 3439;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public globalPortScope(): GlobalPortScopeContext {
		let _localctx: GlobalPortScopeContext = new GlobalPortScopeContext(this._ctx, this.state);
		this.enterRule(_localctx, 522, EDIF300Parser.RULE_globalPortScope);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3441;
			this.match(EDIF300Parser.T__204);
			this.state = 3442;
			this.globalPortNameRef();
			this.state = 3443;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public green(): GreenContext {
		let _localctx: GreenContext = new GreenContext(this._ctx, this.state);
		this.enterRule(_localctx, 524, EDIF300Parser.RULE_green);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3445;
			this.scaledInteger();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public henry(): HenryContext {
		let _localctx: HenryContext = new HenryContext(this._ctx, this.state);
		this.enterRule(_localctx, 526, EDIF300Parser.RULE_henry);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3447;
			this.match(EDIF300Parser.T__205);
			this.state = 3448;
			this.unitExponent();
			this.state = 3449;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public hertz(): HertzContext {
		let _localctx: HertzContext = new HertzContext(this._ctx, this.state);
		this.enterRule(_localctx, 528, EDIF300Parser.RULE_hertz);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3451;
			this.match(EDIF300Parser.T__206);
			this.state = 3452;
			this.unitExponent();
			this.state = 3453;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public horizontalJustification(): HorizontalJustificationContext {
		let _localctx: HorizontalJustificationContext = new HorizontalJustificationContext(this._ctx, this.state);
		this.enterRule(_localctx, 530, EDIF300Parser.RULE_horizontalJustification);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3455;
			this.match(EDIF300Parser.T__207);
			this.state = 3459;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__306:
				{
				this.state = 3456;
				this.leftJustify();
				}
				break;
			case EDIF300Parser.T__45:
				{
				this.state = 3457;
				this.centerJustify();
				}
				break;
			case EDIF300Parser.T__462:
				{
				this.state = 3458;
				this.rightJustify();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 3461;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public hotspot(): HotspotContext {
		let _localctx: HotspotContext = new HotspotContext(this._ctx, this.state);
		this.enterRule(_localctx, 532, EDIF300Parser.RULE_hotspot);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3463;
			this.match(EDIF300Parser.T__208);
			this.state = 3464;
			this.pointValue();
			this.state = 3471;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__209 || _la === EDIF300Parser.T__212 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__569) {
				{
				this.state = 3469;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__209:
					{
					this.state = 3465;
					this.hotspotConnectDirection();
					}
					break;
				case EDIF300Parser.T__212:
					{
					this.state = 3466;
					this.hotspotNameDisplay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3467;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__569:
					{
					this.state = 3468;
					this.schematicWireAffinity();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3473;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3474;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public hotspotConnectDirection(): HotspotConnectDirectionContext {
		let _localctx: HotspotConnectDirectionContext = new HotspotConnectDirectionContext(this._ctx, this.state);
		this.enterRule(_localctx, 534, EDIF300Parser.RULE_hotspotConnectDirection);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3476;
			this.match(EDIF300Parser.T__209);
			this.state = 3483;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 188)) & ~0x1F) === 0 && ((1 << (_la - 188)) & ((1 << (EDIF300Parser.T__187 - 188)) | (1 << (EDIF300Parser.T__188 - 188)) | (1 << (EDIF300Parser.T__189 - 188)) | (1 << (EDIF300Parser.T__190 - 188)))) !== 0)) {
				{
				this.state = 3481;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__187:
					{
					this.state = 3477;
					this.fromBottom();
					}
					break;
				case EDIF300Parser.T__188:
					{
					this.state = 3478;
					this.fromLeft();
					}
					break;
				case EDIF300Parser.T__189:
					{
					this.state = 3479;
					this.fromRight();
					}
					break;
				case EDIF300Parser.T__190:
					{
					this.state = 3480;
					this.fromTop();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3485;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3486;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public hotspotGrid(): HotspotGridContext {
		let _localctx: HotspotGridContext = new HotspotGridContext(this._ctx, this.state);
		this.enterRule(_localctx, 536, EDIF300Parser.RULE_hotspotGrid);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3488;
			this.match(EDIF300Parser.T__210);
			this.state = 3489;
			this.lengthValue();
			this.state = 3490;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public hotspotNameCaseSensitive(): HotspotNameCaseSensitiveContext {
		let _localctx: HotspotNameCaseSensitiveContext = new HotspotNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 538, EDIF300Parser.RULE_hotspotNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3492;
			this.match(EDIF300Parser.T__211);
			this.state = 3493;
			this.booleanToken();
			this.state = 3494;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public hotspotNameDef(): HotspotNameDefContext {
		let _localctx: HotspotNameDefContext = new HotspotNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 540, EDIF300Parser.RULE_hotspotNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3496;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public hotspotNameDisplay(): HotspotNameDisplayContext {
		let _localctx: HotspotNameDisplayContext = new HotspotNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 542, EDIF300Parser.RULE_hotspotNameDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3498;
			this.match(EDIF300Parser.T__212);
			this.state = 3503;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
				{
				this.state = 3501;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 3499;
					this.display();
					}
					break;
				case EDIF300Parser.T__131:
					{
					this.state = 3500;
					this.displayNameOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3505;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3506;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public hotspotNameRef(): HotspotNameRefContext {
		let _localctx: HotspotNameRefContext = new HotspotNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 544, EDIF300Parser.RULE_hotspotNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3508;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public hourNumber(): HourNumberContext {
		let _localctx: HourNumberContext = new HourNumberContext(this._ctx, this.state);
		this.enterRule(_localctx, 546, EDIF300Parser.RULE_hourNumber);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3510;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ieeeDesignation(): IeeeDesignationContext {
		let _localctx: IeeeDesignationContext = new IeeeDesignationContext(this._ctx, this.state);
		this.enterRule(_localctx, 548, EDIF300Parser.RULE_ieeeDesignation);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3512;
			this.stringToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ieeeSection(): IeeeSectionContext {
		let _localctx: IeeeSectionContext = new IeeeSectionContext(this._ctx, this.state);
		this.enterRule(_localctx, 550, EDIF300Parser.RULE_ieeeSection);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3514;
			this.match(EDIF300Parser.T__213);
			this.state = 3518;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.DECIMAL_LITERAL) {
				{
				{
				this.state = 3515;
				this.integerToken();
				}
				}
				this.state = 3520;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3521;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ieeeStandard(): IeeeStandardContext {
		let _localctx: IeeeStandardContext = new IeeeStandardContext(this._ctx, this.state);
		this.enterRule(_localctx, 552, EDIF300Parser.RULE_ieeeStandard);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3523;
			this.match(EDIF300Parser.T__214);
			this.state = 3524;
			this.ieeeDesignation();
			this.state = 3525;
			this.year();
			this.state = 3530;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__213) {
				{
				this.state = 3528;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3526;
					this.comment();
					}
					break;
				case EDIF300Parser.T__213:
					{
					this.state = 3527;
					this.ieeeSection();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3532;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3533;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ifFrame(): IfFrameContext {
		let _localctx: IfFrameContext = new IfFrameContext(this._ctx, this.state);
		this.enterRule(_localctx, 554, EDIF300Parser.RULE_ifFrame);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3535;
			this.match(EDIF300Parser.T__215);
			this.state = 3536;
			this.frameNameDef();
			this.state = 3537;
			this.condition();
			this.state = 3538;
			this.logicalConnectivity();
			this.state = 3546;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
				{
				this.state = 3544;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3539;
					this.comment();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3540;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 3541;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3542;
					this.property();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 3543;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3548;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3549;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ifFrameAnnotate(): IfFrameAnnotateContext {
		let _localctx: IfFrameAnnotateContext = new IfFrameAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 556, EDIF300Parser.RULE_ifFrameAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3551;
			this.match(EDIF300Parser.T__216);
			this.state = 3552;
			this.extendFrameDef();
			this.state = 3563;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__177 || _la === EDIF300Parser.T__216 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__305 || _la === EDIF300Parser.T__361 || _la === EDIF300Parser.T__372 || _la === EDIF300Parser.T__448) {
				{
				this.state = 3561;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3553;
					this.comment();
					}
					break;
				case EDIF300Parser.T__177:
					{
					this.state = 3554;
					this.forFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__216:
					{
					this.state = 3555;
					this.ifFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__259:
					{
					this.state = 3556;
					this.interconnectAnnotate();
					}
					break;
				case EDIF300Parser.T__305:
					{
					this.state = 3557;
					this.leafOccurrenceAnnotate();
					}
					break;
				case EDIF300Parser.T__361:
					{
					this.state = 3558;
					this.occurrenceAnnotate();
					}
					break;
				case EDIF300Parser.T__372:
					{
					this.state = 3559;
					this.otherwiseFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 3560;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3565;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3566;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ifFrameRef(): IfFrameRefContext {
		let _localctx: IfFrameRefContext = new IfFrameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 558, EDIF300Parser.RULE_ifFrameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3568;
			this.match(EDIF300Parser.T__217);
			this.state = 3569;
			this.frameNameRef();
			this.state = 3570;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ifFrameSet(): IfFrameSetContext {
		let _localctx: IfFrameSetContext = new IfFrameSetContext(this._ctx, this.state);
		this.enterRule(_localctx, 560, EDIF300Parser.RULE_ifFrameSet);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3572;
			this.match(EDIF300Parser.T__218);
			this.state = 3576;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__217) {
				{
				{
				this.state = 3573;
				this.ifFrameRef();
				}
				}
				this.state = 3578;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3579;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ignore(): IgnoreContext {
		let _localctx: IgnoreContext = new IgnoreContext(this._ctx, this.state);
		this.enterRule(_localctx, 562, EDIF300Parser.RULE_ignore);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3581;
			this.match(EDIF300Parser.T__219);
			this.state = 3582;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public implementationNameCaseSensitive(): ImplementationNameCaseSensitiveContext {
		let _localctx: ImplementationNameCaseSensitiveContext = new ImplementationNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 564, EDIF300Parser.RULE_implementationNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3584;
			this.match(EDIF300Parser.T__220);
			this.state = 3585;
			this.booleanToken();
			this.state = 3586;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public implementationNameDef(): ImplementationNameDefContext {
		let _localctx: ImplementationNameDefContext = new ImplementationNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 566, EDIF300Parser.RULE_implementationNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3588;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public implementationNameDisplay(): ImplementationNameDisplayContext {
		let _localctx: ImplementationNameDisplayContext = new ImplementationNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 568, EDIF300Parser.RULE_implementationNameDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3590;
			this.match(EDIF300Parser.T__221);
			this.state = 3595;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
				{
				this.state = 3593;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 3591;
					this.display();
					}
					break;
				case EDIF300Parser.T__131:
					{
					this.state = 3592;
					this.displayNameOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3597;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3598;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public implementationNameRef(): ImplementationNameRefContext {
		let _localctx: ImplementationNameRefContext = new ImplementationNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 570, EDIF300Parser.RULE_implementationNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3600;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indexEndDisplay(): IndexEndDisplayContext {
		let _localctx: IndexEndDisplayContext = new IndexEndDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 572, EDIF300Parser.RULE_indexEndDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3602;
			this.match(EDIF300Parser.T__222);
			this.state = 3606;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 3603;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 3604;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 3605;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 3608;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indexNameDef(): IndexNameDefContext {
		let _localctx: IndexNameDefContext = new IndexNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 574, EDIF300Parser.RULE_indexNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3610;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indexNameDisplay(): IndexNameDisplayContext {
		let _localctx: IndexNameDisplayContext = new IndexNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 576, EDIF300Parser.RULE_indexNameDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3612;
			this.match(EDIF300Parser.T__223);
			this.state = 3616;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 3613;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 3614;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 3615;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 3618;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indexNameRef(): IndexNameRefContext {
		let _localctx: IndexNameRefContext = new IndexNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 578, EDIF300Parser.RULE_indexNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3620;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indexStart(): IndexStartContext {
		let _localctx: IndexStartContext = new IndexStartContext(this._ctx, this.state);
		this.enterRule(_localctx, 580, EDIF300Parser.RULE_indexStart);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3622;
			this.match(EDIF300Parser.T__224);
			this.state = 3623;
			this.integerExpression();
			this.state = 3624;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indexStartDisplay(): IndexStartDisplayContext {
		let _localctx: IndexStartDisplayContext = new IndexStartDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 582, EDIF300Parser.RULE_indexStartDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3626;
			this.match(EDIF300Parser.T__225);
			this.state = 3630;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 3627;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 3628;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 3629;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 3632;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indexStep(): IndexStepContext {
		let _localctx: IndexStepContext = new IndexStepContext(this._ctx, this.state);
		this.enterRule(_localctx, 584, EDIF300Parser.RULE_indexStep);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3634;
			this.match(EDIF300Parser.T__226);
			this.state = 3635;
			this.integerExpression();
			this.state = 3636;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indexStepDisplay(): IndexStepDisplayContext {
		let _localctx: IndexStepDisplayContext = new IndexStepDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 586, EDIF300Parser.RULE_indexStepDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3638;
			this.match(EDIF300Parser.T__227);
			this.state = 3642;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 3639;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 3640;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 3641;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 3644;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public indexValue(): IndexValueContext {
		let _localctx: IndexValueContext = new IndexValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 588, EDIF300Parser.RULE_indexValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3646;
			this.match(EDIF300Parser.T__228);
			this.state = 3647;
			this.integerToken();
			this.state = 3648;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public input(): InputContext {
		let _localctx: InputContext = new InputContext(this._ctx, this.state);
		this.enterRule(_localctx, 590, EDIF300Parser.RULE_input);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3650;
			this.match(EDIF300Parser.T__229);
			this.state = 3651;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public inputPort(): InputPortContext {
		let _localctx: InputPortContext = new InputPortContext(this._ctx, this.state);
		this.enterRule(_localctx, 592, EDIF300Parser.RULE_inputPort);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3653;
			this.match(EDIF300Parser.T__230);
			this.state = 3655;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__231) {
				{
				this.state = 3654;
				this.inputPortAttributes();
				}
			}

			this.state = 3657;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public inputPortAttributes(): InputPortAttributesContext {
		let _localctx: InputPortAttributesContext = new InputPortAttributesContext(this._ctx, this.state);
		this.enterRule(_localctx, 594, EDIF300Parser.RULE_inputPortAttributes);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3659;
			this.match(EDIF300Parser.T__231);
			this.state = 3664;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__105 || _la === EDIF300Parser.T__107) {
				{
				this.state = 3662;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__105:
					{
					this.state = 3660;
					this.dcFanOutLoad();
					}
					break;
				case EDIF300Parser.T__107:
					{
					this.state = 3661;
					this.dcMaxFanIn();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3666;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3667;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instance(): InstanceContext {
		let _localctx: InstanceContext = new InstanceContext(this._ctx, this.state);
		this.enterRule(_localctx, 596, EDIF300Parser.RULE_instance);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3669;
			this.match(EDIF300Parser.T__232);
			this.state = 3670;
			this.instanceNameDef();
			this.state = 3671;
			this.clusterRef();
			this.state = 3689;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__28 || ((((_la - 43)) & ~0x1F) === 0 && ((1 << (_la - 43)) & ((1 << (EDIF300Parser.T__42 - 43)) | (1 << (EDIF300Parser.T__58 - 43)) | (1 << (EDIF300Parser.T__61 - 43)))) !== 0) || _la === EDIF300Parser.T__118 || ((((_la - 239)) & ~0x1F) === 0 && ((1 << (_la - 239)) & ((1 << (EDIF300Parser.T__238 - 239)) | (1 << (EDIF300Parser.T__241 - 239)) | (1 << (EDIF300Parser.T__245 - 239)) | (1 << (EDIF300Parser.T__252 - 239)))) !== 0) || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__358 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__606 || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__642) {
				{
				this.state = 3687;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__28:
					{
					this.state = 3672;
					this.booleanParameterAssign();
					}
					break;
				case EDIF300Parser.T__42:
					{
					this.state = 3673;
					this.cellPropertyOverride();
					}
					break;
				case EDIF300Parser.T__58:
					{
					this.state = 3674;
					this.clusterPropertyOverride();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 3675;
					this.comment();
					}
					break;
				case EDIF300Parser.T__118:
					{
					this.state = 3676;
					this.designator();
					}
					break;
				case EDIF300Parser.T__238:
					{
					this.state = 3677;
					this.instanceNameGenerator();
					}
					break;
				case EDIF300Parser.T__241:
					{
					this.state = 3678;
					this.instancePortAttributes();
					}
					break;
				case EDIF300Parser.T__245:
					{
					this.state = 3679;
					this.instanceWidth();
					}
					break;
				case EDIF300Parser.T__252:
					{
					this.state = 3680;
					this.integerParameterAssign();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3681;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__358:
					{
					this.state = 3682;
					this.numberParameterAssign();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3683;
					this.property();
					}
					break;
				case EDIF300Parser.T__606:
					{
					this.state = 3684;
					this.stringParameterAssign();
					}
					break;
				case EDIF300Parser.T__619:
					{
					this.state = 3685;
					this.timing();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 3686;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3691;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3692;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceConfiguration(): InstanceConfigurationContext {
		let _localctx: InstanceConfigurationContext = new InstanceConfigurationContext(this._ctx, this.state);
		this.enterRule(_localctx, 598, EDIF300Parser.RULE_instanceConfiguration);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3694;
			this.match(EDIF300Parser.T__233);
			this.state = 3695;
			this.instanceNameRef();
			this.state = 3696;
			this.clusterConfigurationRef();
			this.state = 3697;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceIndexValue(): InstanceIndexValueContext {
		let _localctx: InstanceIndexValueContext = new InstanceIndexValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 600, EDIF300Parser.RULE_instanceIndexValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3699;
			this.match(EDIF300Parser.T__234);
			this.state = 3700;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceMemberRef(): InstanceMemberRefContext {
		let _localctx: InstanceMemberRefContext = new InstanceMemberRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 602, EDIF300Parser.RULE_instanceMemberRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3702;
			this.match(EDIF300Parser.T__235);
			this.state = 3703;
			this.instanceNameRef();
			this.state = 3704;
			this.indexValue();
			this.state = 3705;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceNameCaseSensitive(): InstanceNameCaseSensitiveContext {
		let _localctx: InstanceNameCaseSensitiveContext = new InstanceNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 604, EDIF300Parser.RULE_instanceNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3707;
			this.match(EDIF300Parser.T__236);
			this.state = 3708;
			this.booleanToken();
			this.state = 3709;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceNameDef(): InstanceNameDefContext {
		let _localctx: InstanceNameDefContext = new InstanceNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 606, EDIF300Parser.RULE_instanceNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3711;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceNameDisplay(): InstanceNameDisplayContext {
		let _localctx: InstanceNameDisplayContext = new InstanceNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 608, EDIF300Parser.RULE_instanceNameDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3713;
			this.match(EDIF300Parser.T__237);
			this.state = 3718;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
				{
				this.state = 3716;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 3714;
					this.display();
					}
					break;
				case EDIF300Parser.T__131:
					{
					this.state = 3715;
					this.displayNameOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3720;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3721;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceNameGenerator(): InstanceNameGeneratorContext {
		let _localctx: InstanceNameGeneratorContext = new InstanceNameGeneratorContext(this._ctx, this.state);
		this.enterRule(_localctx, 610, EDIF300Parser.RULE_instanceNameGenerator);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3723;
			this.match(EDIF300Parser.T__238);
			this.state = 3724;
			this.stringExpression();
			this.state = 3725;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceNameGeneratorDisplay(): InstanceNameGeneratorDisplayContext {
		let _localctx: InstanceNameGeneratorDisplayContext = new InstanceNameGeneratorDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 612, EDIF300Parser.RULE_instanceNameGeneratorDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3727;
			this.match(EDIF300Parser.T__239);
			this.state = 3731;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 3728;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 3729;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 3730;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 3733;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceNameRef(): InstanceNameRefContext {
		let _localctx: InstanceNameRefContext = new InstanceNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 614, EDIF300Parser.RULE_instanceNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3735;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instancePortAttributeDisplay(): InstancePortAttributeDisplayContext {
		let _localctx: InstancePortAttributeDisplayContext = new InstancePortAttributeDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 616, EDIF300Parser.RULE_instancePortAttributeDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3737;
			this.match(EDIF300Parser.T__240);
			this.state = 3738;
			this.symbolPortImplementationNameRef();
			this.state = 3739;
			this.portRef();
			this.state = 3744;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__416 || _la === EDIF300Parser.T__434) {
				{
				this.state = 3742;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__434:
					{
					this.state = 3740;
					this.portPropertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__416:
					{
					this.state = 3741;
					this.portAttributeDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3746;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3747;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instancePortAttributes(): InstancePortAttributesContext {
		let _localctx: InstancePortAttributesContext = new InstancePortAttributesContext(this._ctx, this.state);
		this.enterRule(_localctx, 618, EDIF300Parser.RULE_instancePortAttributes);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3749;
			this.match(EDIF300Parser.T__241);
			this.state = 3750;
			this.extendPortDef();
			this.state = 3765;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__2 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__72 || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__127 || ((((_la - 419)) & ~0x1F) === 0 && ((1 << (_la - 419)) & ((1 << (EDIF300Parser.T__418 - 419)) | (1 << (EDIF300Parser.T__420 - 419)) | (1 << (EDIF300Parser.T__425 - 419)) | (1 << (EDIF300Parser.T__427 - 419)) | (1 << (EDIF300Parser.T__435 - 419)) | (1 << (EDIF300Parser.T__442 - 419)))) !== 0) || _la === EDIF300Parser.T__640) {
				{
				this.state = 3763;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__2:
					{
					this.state = 3751;
					this.acLoad();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 3752;
					this.comment();
					}
					break;
				case EDIF300Parser.T__72:
					{
					this.state = 3753;
					this.connectedSignalIndexGenerator();
					}
					break;
				case EDIF300Parser.T__118:
					{
					this.state = 3754;
					this.designator();
					}
					break;
				case EDIF300Parser.T__127:
					{
					this.state = 3755;
					this.directionalPortAttributeOverride();
					}
					break;
				case EDIF300Parser.T__418:
					{
					this.state = 3756;
					this.portDelay();
					}
					break;
				case EDIF300Parser.T__420:
					{
					this.state = 3757;
					this.portDelayOverride();
					}
					break;
				case EDIF300Parser.T__425:
					{
					this.state = 3758;
					this.portLoadDelay();
					}
					break;
				case EDIF300Parser.T__427:
					{
					this.state = 3759;
					this.portLoadDelayOverride();
					}
					break;
				case EDIF300Parser.T__435:
					{
					this.state = 3760;
					this.portPropertyOverride();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3761;
					this.property();
					}
					break;
				case EDIF300Parser.T__640:
					{
					this.state = 3762;
					this.unused();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3767;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3768;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instancePropertyDisplay(): InstancePropertyDisplayContext {
		let _localctx: InstancePropertyDisplayContext = new InstancePropertyDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 620, EDIF300Parser.RULE_instancePropertyDisplay);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3770;
			this.match(EDIF300Parser.T__242);
			this.state = 3771;
			this.propertyNameRef();
			this.state = 3775;
			this._errHandler.sync(this);
			_alt = this.interpreter.adaptivePredict(this._input, 212, this._ctx);
			while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					{
					{
					this.state = 3772;
					this.display();
					}
					}
				}
				this.state = 3777;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 212, this._ctx);
			}
			this.state = 3779;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__447) {
				{
				this.state = 3778;
				this.propertyNameDisplay();
				}
			}

			this.state = 3784;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 3781;
				this.display();
				}
				}
				this.state = 3786;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3787;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instancePropertyOverride(): InstancePropertyOverrideContext {
		let _localctx: InstancePropertyOverrideContext = new InstancePropertyOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 622, EDIF300Parser.RULE_instancePropertyOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3789;
			this.match(EDIF300Parser.T__243);
			this.state = 3790;
			this.propertyNameRef();
			this.state = 3793;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__23:
			case EDIF300Parser.T__247:
			case EDIF300Parser.T__336:
			case EDIF300Parser.T__356:
			case EDIF300Parser.T__411:
			case EDIF300Parser.T__599:
				{
				this.state = 3791;
				this.typedValue();
				}
				break;
			case EDIF300Parser.T__639:
				{
				this.state = 3792;
				this.untyped();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 3800;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
				{
				this.state = 3798;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3795;
					this.comment();
					}
					break;
				case EDIF300Parser.T__165:
					{
					this.state = 3796;
					this.fixed();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 3797;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3802;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3803;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceRef(): InstanceRefContext {
		let _localctx: InstanceRefContext = new InstanceRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 624, EDIF300Parser.RULE_instanceRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3805;
			this.match(EDIF300Parser.T__244);
			this.state = 3806;
			this.instanceNameRef();
			this.state = 3807;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceWidth(): InstanceWidthContext {
		let _localctx: InstanceWidthContext = new InstanceWidthContext(this._ctx, this.state);
		this.enterRule(_localctx, 626, EDIF300Parser.RULE_instanceWidth);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3809;
			this.match(EDIF300Parser.T__245);
			this.state = 3810;
			this.integerExpression();
			this.state = 3811;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public instanceWidthDisplay(): InstanceWidthDisplayContext {
		let _localctx: InstanceWidthDisplayContext = new InstanceWidthDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 628, EDIF300Parser.RULE_instanceWidthDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3813;
			this.match(EDIF300Parser.T__246);
			this.state = 3817;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 3814;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 3815;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 3816;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 3819;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integer(): IntegerContext {
		let _localctx: IntegerContext = new IntegerContext(this._ctx, this.state);
		this.enterRule(_localctx, 630, EDIF300Parser.RULE_integer);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3821;
			this.match(EDIF300Parser.T__247);
			this.state = 3822;
			this.integerExpression();
			this.state = 3823;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerConstant(): IntegerConstantContext {
		let _localctx: IntegerConstantContext = new IntegerConstantContext(this._ctx, this.state);
		this.enterRule(_localctx, 632, EDIF300Parser.RULE_integerConstant);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3825;
			this.match(EDIF300Parser.T__248);
			this.state = 3826;
			this.constantNameDef();
			this.state = 3827;
			this.integerToken();
			this.state = 3828;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerConstantRef(): IntegerConstantRefContext {
		let _localctx: IntegerConstantRefContext = new IntegerConstantRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 634, EDIF300Parser.RULE_integerConstantRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3830;
			this.match(EDIF300Parser.T__249);
			this.state = 3831;
			this.constantNameRef();
			this.state = 3832;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerEqual(): IntegerEqualContext {
		let _localctx: IntegerEqualContext = new IntegerEqualContext(this._ctx, this.state);
		this.enterRule(_localctx, 636, EDIF300Parser.RULE_integerEqual);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3834;
			this.match(EDIF300Parser.T__250);
			this.state = 3835;
			this.firstIntegerExpression();
			this.state = 3836;
			this.secondIntegerExpression();
			this.state = 3837;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerExpression(): IntegerExpressionContext {
		let _localctx: IntegerExpressionContext = new IntegerExpressionContext(this._ctx, this.state);
		this.enterRule(_localctx, 638, EDIF300Parser.RULE_integerExpression);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3853;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__253:
				{
				this.state = 3839;
				this.integerParameterRef();
				}
				break;
			case EDIF300Parser.DECIMAL_LITERAL:
				{
				this.state = 3840;
				this.integerToken();
				}
				break;
			case EDIF300Parser.T__254:
				{
				this.state = 3841;
				this.integerProduct();
				}
				break;
			case EDIF300Parser.T__257:
				{
				this.state = 3842;
				this.integerSubtract();
				}
				break;
			case EDIF300Parser.T__258:
				{
				this.state = 3843;
				this.integerSum();
				}
				break;
			case EDIF300Parser.T__256:
				{
				this.state = 3844;
				this.integerRemainder();
				}
				break;
			case EDIF300Parser.T__255:
				{
				this.state = 3845;
				this.integerQuotient();
				}
				break;
			case EDIF300Parser.T__604:
				{
				this.state = 3846;
				this.stringLength();
				}
				break;
			case EDIF300Parser.T__249:
				{
				this.state = 3847;
				this.integerConstantRef();
				}
				break;
			case EDIF300Parser.T__181:
				{
				this.state = 3848;
				this.forFrameIndexRef();
				}
				break;
			case EDIF300Parser.T__421:
				{
				this.state = 3849;
				this.portIndexValue();
				}
				break;
			case EDIF300Parser.T__590:
				{
				this.state = 3850;
				this.signalIndexValue();
				}
				break;
			case EDIF300Parser.T__0:
				{
				this.state = 3851;
				this.absolute();
				}
				break;
			case EDIF300Parser.T__234:
				{
				this.state = 3852;
				this.instanceIndexValue();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerParameter(): IntegerParameterContext {
		let _localctx: IntegerParameterContext = new IntegerParameterContext(this._ctx, this.state);
		this.enterRule(_localctx, 640, EDIF300Parser.RULE_integerParameter);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3855;
			this.match(EDIF300Parser.T__251);
			this.state = 3856;
			this.parameterNameDef();
			this.state = 3861;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__247 || _la === EDIF300Parser.T__346) {
				{
				this.state = 3859;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__247:
					{
					this.state = 3857;
					this.integer();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3858;
					this.nameInformation();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3863;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3864;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerParameterAssign(): IntegerParameterAssignContext {
		let _localctx: IntegerParameterAssignContext = new IntegerParameterAssignContext(this._ctx, this.state);
		this.enterRule(_localctx, 642, EDIF300Parser.RULE_integerParameterAssign);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3866;
			this.match(EDIF300Parser.T__252);
			this.state = 3867;
			this.parameterNameRef();
			this.state = 3868;
			this.integerExpression();
			this.state = 3869;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerParameterRef(): IntegerParameterRefContext {
		let _localctx: IntegerParameterRefContext = new IntegerParameterRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 644, EDIF300Parser.RULE_integerParameterRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3871;
			this.match(EDIF300Parser.T__253);
			this.state = 3872;
			this.parameterNameRef();
			this.state = 3873;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerProduct(): IntegerProductContext {
		let _localctx: IntegerProductContext = new IntegerProductContext(this._ctx, this.state);
		this.enterRule(_localctx, 646, EDIF300Parser.RULE_integerProduct);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3875;
			this.match(EDIF300Parser.T__254);
			this.state = 3879;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__0 || _la === EDIF300Parser.T__181 || ((((_la - 235)) & ~0x1F) === 0 && ((1 << (_la - 235)) & ((1 << (EDIF300Parser.T__234 - 235)) | (1 << (EDIF300Parser.T__249 - 235)) | (1 << (EDIF300Parser.T__253 - 235)) | (1 << (EDIF300Parser.T__254 - 235)) | (1 << (EDIF300Parser.T__255 - 235)) | (1 << (EDIF300Parser.T__256 - 235)) | (1 << (EDIF300Parser.T__257 - 235)) | (1 << (EDIF300Parser.T__258 - 235)))) !== 0) || _la === EDIF300Parser.T__421 || _la === EDIF300Parser.T__590 || _la === EDIF300Parser.T__604 || _la === EDIF300Parser.DECIMAL_LITERAL) {
				{
				{
				this.state = 3876;
				this.integerExpression();
				}
				}
				this.state = 3881;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3882;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerQuotient(): IntegerQuotientContext {
		let _localctx: IntegerQuotientContext = new IntegerQuotientContext(this._ctx, this.state);
		this.enterRule(_localctx, 648, EDIF300Parser.RULE_integerQuotient);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3884;
			this.match(EDIF300Parser.T__255);
			this.state = 3885;
			this.dividend();
			this.state = 3886;
			this.divisor();
			this.state = 3887;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerRemainder(): IntegerRemainderContext {
		let _localctx: IntegerRemainderContext = new IntegerRemainderContext(this._ctx, this.state);
		this.enterRule(_localctx, 650, EDIF300Parser.RULE_integerRemainder);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3889;
			this.match(EDIF300Parser.T__256);
			this.state = 3890;
			this.dividend();
			this.state = 3891;
			this.divisor();
			this.state = 3892;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerSubtract(): IntegerSubtractContext {
		let _localctx: IntegerSubtractContext = new IntegerSubtractContext(this._ctx, this.state);
		this.enterRule(_localctx, 652, EDIF300Parser.RULE_integerSubtract);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3894;
			this.match(EDIF300Parser.T__257);
			this.state = 3895;
			this.minuend();
			this.state = 3896;
			this.subtrahend();
			this.state = 3897;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerSum(): IntegerSumContext {
		let _localctx: IntegerSumContext = new IntegerSumContext(this._ctx, this.state);
		this.enterRule(_localctx, 654, EDIF300Parser.RULE_integerSum);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3899;
			this.match(EDIF300Parser.T__258);
			this.state = 3903;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__0 || _la === EDIF300Parser.T__181 || ((((_la - 235)) & ~0x1F) === 0 && ((1 << (_la - 235)) & ((1 << (EDIF300Parser.T__234 - 235)) | (1 << (EDIF300Parser.T__249 - 235)) | (1 << (EDIF300Parser.T__253 - 235)) | (1 << (EDIF300Parser.T__254 - 235)) | (1 << (EDIF300Parser.T__255 - 235)) | (1 << (EDIF300Parser.T__256 - 235)) | (1 << (EDIF300Parser.T__257 - 235)) | (1 << (EDIF300Parser.T__258 - 235)))) !== 0) || _la === EDIF300Parser.T__421 || _la === EDIF300Parser.T__590 || _la === EDIF300Parser.T__604 || _la === EDIF300Parser.DECIMAL_LITERAL) {
				{
				{
				this.state = 3900;
				this.integerExpression();
				}
				}
				this.state = 3905;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3906;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerValue(): IntegerValueContext {
		let _localctx: IntegerValueContext = new IntegerValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 656, EDIF300Parser.RULE_integerValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3908;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectAnnotate(): InterconnectAnnotateContext {
		let _localctx: InterconnectAnnotateContext = new InterconnectAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 658, EDIF300Parser.RULE_interconnectAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3910;
			this.match(EDIF300Parser.T__259);
			this.state = 3911;
			this.extendInterconnectDef();
			this.state = 3920;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__97 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__261 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__448) {
				{
				this.state = 3918;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 3912;
					this.comment();
					}
					break;
				case EDIF300Parser.T__259:
					{
					this.state = 3913;
					this.interconnectAnnotate();
					}
					break;
				case EDIF300Parser.T__97:
					{
					this.state = 3914;
					this.criticality();
					}
					break;
				case EDIF300Parser.T__261:
					{
					this.state = 3915;
					this.interconnectDelay();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3916;
					this.property();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 3917;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3922;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3923;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectAttachedText(): InterconnectAttachedTextContext {
		let _localctx: InterconnectAttachedTextContext = new InterconnectAttachedTextContext(this._ctx, this.state);
		this.enterRule(_localctx, 660, EDIF300Parser.RULE_interconnectAttachedText);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3925;
			this.match(EDIF300Parser.T__260);
			this.state = 3926;
			this.attachmentPoint();
			this.state = 3935;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__86 || _la === EDIF300Parser.T__98 || ((((_la - 263)) & ~0x1F) === 0 && ((1 << (_la - 263)) & ((1 << (EDIF300Parser.T__262 - 263)) | (1 << (EDIF300Parser.T__265 - 263)) | (1 << (EDIF300Parser.T__266 - 263)))) !== 0)) {
				{
				this.state = 3933;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 3927;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__86:
					{
					this.state = 3928;
					this.connectivityTagGeneratorDisplay();
					}
					break;
				case EDIF300Parser.T__98:
					{
					this.state = 3929;
					this.criticalityDisplay();
					}
					break;
				case EDIF300Parser.T__262:
					{
					this.state = 3930;
					this.interconnectDelayDisplay();
					}
					break;
				case EDIF300Parser.T__265:
					{
					this.state = 3931;
					this.interconnectNameDisplay();
					}
					break;
				case EDIF300Parser.T__266:
					{
					this.state = 3932;
					this.interconnectPropertyDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3937;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3938;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectDelay(): InterconnectDelayContext {
		let _localctx: InterconnectDelayContext = new InterconnectDelayContext(this._ctx, this.state);
		this.enterRule(_localctx, 662, EDIF300Parser.RULE_interconnectDelay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3940;
			this.match(EDIF300Parser.T__261);
			this.state = 3941;
			this.interconnectDelayNameDef();
			this.state = 3942;
			this.derivation();
			this.state = 3943;
			this.delay();
			this.state = 3948;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
				{
				this.state = 3946;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__16:
					{
					this.state = 3944;
					this.becomes();
					}
					break;
				case EDIF300Parser.T__625:
					{
					this.state = 3945;
					this.transition();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3950;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3951;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectDelayDisplay(): InterconnectDelayDisplayContext {
		let _localctx: InterconnectDelayDisplayContext = new InterconnectDelayDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 664, EDIF300Parser.RULE_interconnectDelayDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3953;
			this.match(EDIF300Parser.T__262);
			this.state = 3954;
			this.interconnectDelayNameRef();
			this.state = 3958;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 3955;
				this.display();
				}
				}
				this.state = 3960;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3961;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectDelayNameDef(): InterconnectDelayNameDefContext {
		let _localctx: InterconnectDelayNameDefContext = new InterconnectDelayNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 666, EDIF300Parser.RULE_interconnectDelayNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3963;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectDelayNameRef(): InterconnectDelayNameRefContext {
		let _localctx: InterconnectDelayNameRefContext = new InterconnectDelayNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 668, EDIF300Parser.RULE_interconnectDelayNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3965;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectHeader(): InterconnectHeaderContext {
		let _localctx: InterconnectHeaderContext = new InterconnectHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 670, EDIF300Parser.RULE_interconnectHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3967;
			this.match(EDIF300Parser.T__263);
			this.state = 3975;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__97 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__261 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442) {
				{
				this.state = 3973;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__97:
					{
					this.state = 3968;
					this.criticality();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 3969;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__261:
					{
					this.state = 3970;
					this.interconnectDelay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 3971;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 3972;
					this.property();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3977;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3978;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectNameCaseSensitive(): InterconnectNameCaseSensitiveContext {
		let _localctx: InterconnectNameCaseSensitiveContext = new InterconnectNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 672, EDIF300Parser.RULE_interconnectNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3980;
			this.match(EDIF300Parser.T__264);
			this.state = 3981;
			this.booleanToken();
			this.state = 3982;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectNameDef(): InterconnectNameDefContext {
		let _localctx: InterconnectNameDefContext = new InterconnectNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 674, EDIF300Parser.RULE_interconnectNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3984;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectNameDisplay(): InterconnectNameDisplayContext {
		let _localctx: InterconnectNameDisplayContext = new InterconnectNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 676, EDIF300Parser.RULE_interconnectNameDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3986;
			this.match(EDIF300Parser.T__265);
			this.state = 3991;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
				{
				this.state = 3989;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 3987;
					this.display();
					}
					break;
				case EDIF300Parser.T__131:
					{
					this.state = 3988;
					this.displayNameOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 3993;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 3994;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectNameRef(): InterconnectNameRefContext {
		let _localctx: InterconnectNameRefContext = new InterconnectNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 678, EDIF300Parser.RULE_interconnectNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3996;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectPropertyDisplay(): InterconnectPropertyDisplayContext {
		let _localctx: InterconnectPropertyDisplayContext = new InterconnectPropertyDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 680, EDIF300Parser.RULE_interconnectPropertyDisplay);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 3998;
			this.match(EDIF300Parser.T__266);
			this.state = 3999;
			this.propertyNameRef();
			this.state = 4003;
			this._errHandler.sync(this);
			_alt = this.interpreter.adaptivePredict(this._input, 235, this._ctx);
			while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					{
					{
					this.state = 4000;
					this.display();
					}
					}
				}
				this.state = 4005;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 235, this._ctx);
			}
			this.state = 4007;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__447) {
				{
				this.state = 4006;
				this.propertyNameDisplay();
				}
			}

			this.state = 4012;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 4009;
				this.display();
				}
				}
				this.state = 4014;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4015;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectRef(): InterconnectRefContext {
		let _localctx: InterconnectRefContext = new InterconnectRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 682, EDIF300Parser.RULE_interconnectRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4017;
			this.match(EDIF300Parser.T__267);
			this.state = 4018;
			this.interconnectNameRef();
			this.state = 4020;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__389) {
				{
				this.state = 4019;
				this.pageRef();
				}
			}

			this.state = 4022;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interconnectSet(): InterconnectSetContext {
		let _localctx: InterconnectSetContext = new InterconnectSetContext(this._ctx, this.state);
		this.enterRule(_localctx, 684, EDIF300Parser.RULE_interconnectSet);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4024;
			this.match(EDIF300Parser.T__268);
			this.state = 4028;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__267) {
				{
				{
				this.state = 4025;
				this.interconnectRef();
				}
				}
				this.state = 4030;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4031;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public einterface(): EinterfaceContext {
		let _localctx: EinterfaceContext = new EinterfaceContext(this._ctx, this.state);
		this.enterRule(_localctx, 686, EDIF300Parser.RULE_einterface);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4033;
			this.match(EDIF300Parser.T__269);
			this.state = 4034;
			this.interfaceUnits();
			this.state = 4049;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__27 || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__251 || _la === EDIF300Parser.T__270 || _la === EDIF300Parser.T__341 || _la === EDIF300Parser.T__357 || ((((_la - 407)) & ~0x1F) === 0 && ((1 << (_la - 407)) & ((1 << (EDIF300Parser.T__406 - 407)) | (1 << (EDIF300Parser.T__414 - 407)) | (1 << (EDIF300Parser.T__417 - 407)))) !== 0) || _la === EDIF300Parser.T__605 || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__659) {
				{
				this.state = 4047;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__118:
					{
					this.state = 4035;
					this.designator();
					}
					break;
				case EDIF300Parser.T__27:
					{
					this.state = 4036;
					this.booleanParameter();
					}
					break;
				case EDIF300Parser.T__251:
					{
					this.state = 4037;
					this.integerParameter();
					}
					break;
				case EDIF300Parser.T__270:
					{
					this.state = 4038;
					this.interfaceJoined();
					}
					break;
				case EDIF300Parser.T__341:
					{
					this.state = 4039;
					this.mustJoin();
					}
					break;
				case EDIF300Parser.T__357:
					{
					this.state = 4040;
					this.numberParameter();
					}
					break;
				case EDIF300Parser.T__406:
					{
					this.state = 4041;
					this.permutable();
					}
					break;
				case EDIF300Parser.T__414:
					{
					this.state = 4042;
					this.port();
					}
					break;
				case EDIF300Parser.T__417:
					{
					this.state = 4043;
					this.portBundle();
					}
					break;
				case EDIF300Parser.T__605:
					{
					this.state = 4044;
					this.stringParameter();
					}
					break;
				case EDIF300Parser.T__619:
					{
					this.state = 4045;
					this.timing();
					}
					break;
				case EDIF300Parser.T__659:
					{
					this.state = 4046;
					this.weakJoined();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4051;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4052;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interfaceJoined(): InterfaceJoinedContext {
		let _localctx: InterfaceJoinedContext = new InterfaceJoinedContext(this._ctx, this.state);
		this.enterRule(_localctx, 688, EDIF300Parser.RULE_interfaceJoined);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4054;
			this.match(EDIF300Parser.T__270);
			this.state = 4058;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__436) {
				{
				{
				this.state = 4055;
				this.portRef();
				}
				}
				this.state = 4060;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4061;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public interfaceUnits(): InterfaceUnitsContext {
		let _localctx: InterfaceUnitsContext = new InterfaceUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 690, EDIF300Parser.RULE_interfaceUnits);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4063;
			this.match(EDIF300Parser.T__271);
			this.state = 4068;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__576 || _la === EDIF300Parser.T__580) {
				{
				this.state = 4066;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__576:
					{
					this.state = 4064;
					this.setCapacitance();
					}
					break;
				case EDIF300Parser.T__580:
					{
					this.state = 4065;
					this.setTime();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4070;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4071;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public iso8859(): Iso8859Context {
		let _localctx: Iso8859Context = new Iso8859Context(this._ctx, this.state);
		this.enterRule(_localctx, 692, EDIF300Parser.RULE_iso8859);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4073;
			this.match(EDIF300Parser.T__272);
			this.state = 4074;
			this.iso8859Part();
			this.state = 4075;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public iso8859Part(): Iso8859PartContext {
		let _localctx: Iso8859PartContext = new Iso8859PartContext(this._ctx, this.state);
		this.enterRule(_localctx, 694, EDIF300Parser.RULE_iso8859Part);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4077;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public isolated(): IsolatedContext {
		let _localctx: IsolatedContext = new IsolatedContext(this._ctx, this.state);
		this.enterRule(_localctx, 696, EDIF300Parser.RULE_isolated);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4079;
			this.match(EDIF300Parser.T__273);
			this.state = 4080;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public issue(): IssueContext {
		let _localctx: IssueContext = new IssueContext(this._ctx, this.state);
		this.enterRule(_localctx, 698, EDIF300Parser.RULE_issue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4082;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public italicStyle(): ItalicStyleContext {
		let _localctx: ItalicStyleContext = new ItalicStyleContext(this._ctx, this.state);
		this.enterRule(_localctx, 700, EDIF300Parser.RULE_italicStyle);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4084;
			this.match(EDIF300Parser.T__274);
			this.state = 4085;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public jisx0201(): Jisx0201Context {
		let _localctx: Jisx0201Context = new Jisx0201Context(this._ctx, this.state);
		this.enterRule(_localctx, 702, EDIF300Parser.RULE_jisx0201);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4087;
			this.match(EDIF300Parser.T__275);
			this.state = 4088;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public jisx0208(): Jisx0208Context {
		let _localctx: Jisx0208Context = new Jisx0208Context(this._ctx, this.state);
		this.enterRule(_localctx, 704, EDIF300Parser.RULE_jisx0208);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4090;
			this.match(EDIF300Parser.T__276);
			this.state = 4091;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public joinedAsSignal(): JoinedAsSignalContext {
		let _localctx: JoinedAsSignalContext = new JoinedAsSignalContext(this._ctx, this.state);
		this.enterRule(_localctx, 706, EDIF300Parser.RULE_joinedAsSignal);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4093;
			this.match(EDIF300Parser.T__277);
			this.state = 4094;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public joule(): JouleContext {
		let _localctx: JouleContext = new JouleContext(this._ctx, this.state);
		this.enterRule(_localctx, 708, EDIF300Parser.RULE_joule);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4096;
			this.match(EDIF300Parser.T__278);
			this.state = 4097;
			this.unitExponent();
			this.state = 4098;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k0KeywordLevel(): K0KeywordLevelContext {
		let _localctx: K0KeywordLevelContext = new K0KeywordLevelContext(this._ctx, this.state);
		this.enterRule(_localctx, 710, EDIF300Parser.RULE_k0KeywordLevel);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4100;
			this.match(EDIF300Parser.T__279);
			this.state = 4101;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k1KeywordAlias(): K1KeywordAliasContext {
		let _localctx: K1KeywordAliasContext = new K1KeywordAliasContext(this._ctx, this.state);
		this.enterRule(_localctx, 712, EDIF300Parser.RULE_k1KeywordAlias);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4103;
			this.match(EDIF300Parser.T__280);
			this.state = 4104;
			this.k1KeywordNameDef();
			this.state = 4105;
			this.k1KeywordNameRef();
			this.state = 4106;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k1KeywordLevel(): K1KeywordLevelContext {
		let _localctx: K1KeywordLevelContext = new K1KeywordLevelContext(this._ctx, this.state);
		this.enterRule(_localctx, 714, EDIF300Parser.RULE_k1KeywordLevel);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4108;
			this.match(EDIF300Parser.T__281);
			this.state = 4112;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__280) {
				{
				{
				this.state = 4109;
				this.k1KeywordAlias();
				}
				}
				this.state = 4114;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4115;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k1KeywordNameDef(): K1KeywordNameDefContext {
		let _localctx: K1KeywordNameDefContext = new K1KeywordNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 716, EDIF300Parser.RULE_k1KeywordNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4117;
			this.match(EDIF300Parser.IDENTIFIER);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k1KeywordNameRef(): K1KeywordNameRefContext {
		let _localctx: K1KeywordNameRefContext = new K1KeywordNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 718, EDIF300Parser.RULE_k1KeywordNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4119;
			this.match(EDIF300Parser.IDENTIFIER);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2Actual(): K2ActualContext {
		let _localctx: K2ActualContext = new K2ActualContext(this._ctx, this.state);
		this.enterRule(_localctx, 720, EDIF300Parser.RULE_k2Actual);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4121;
			this.match(EDIF300Parser.T__282);
			this.state = 4122;
			this.k2FormalNameRef();
			this.state = 4123;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2Build(): K2BuildContext {
		let _localctx: K2BuildContext = new K2BuildContext(this._ctx, this.state);
		this.enterRule(_localctx, 722, EDIF300Parser.RULE_k2Build);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4125;
			this.match(EDIF300Parser.T__283);
			this.state = 4126;
			this.k1KeywordNameRef();
			this.state = 4133;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || ((((_la - 283)) & ~0x1F) === 0 && ((1 << (_la - 283)) & ((1 << (EDIF300Parser.T__282 - 283)) | (1 << (EDIF300Parser.T__283 - 283)) | (1 << (EDIF300Parser.T__289 - 283)))) !== 0)) {
				{
				this.state = 4131;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4127;
					this.comment();
					}
					break;
				case EDIF300Parser.T__282:
					{
					this.state = 4128;
					this.k2Actual();
					}
					break;
				case EDIF300Parser.T__283:
					{
					this.state = 4129;
					this.k2Build();
					}
					break;
				case EDIF300Parser.T__289:
					{
					this.state = 4130;
					this.k2Literal();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4135;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4136;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2Formal(): K2FormalContext {
		let _localctx: K2FormalContext = new K2FormalContext(this._ctx, this.state);
		this.enterRule(_localctx, 724, EDIF300Parser.RULE_k2Formal);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4138;
			this.match(EDIF300Parser.T__284);
			this.state = 4139;
			this.k2FormalNameDef();
			this.state = 4142;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__290:
				{
				this.state = 4140;
				this.k2Optional();
				}
				break;
			case EDIF300Parser.T__291:
				{
				this.state = 4141;
				this.k2Required();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4144;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2FormalNameDef(): K2FormalNameDefContext {
		let _localctx: K2FormalNameDefContext = new K2FormalNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 726, EDIF300Parser.RULE_k2FormalNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4146;
			this.match(EDIF300Parser.IDENTIFIER);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2FormalNameRef(): K2FormalNameRefContext {
		let _localctx: K2FormalNameRefContext = new K2FormalNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 728, EDIF300Parser.RULE_k2FormalNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4148;
			this.match(EDIF300Parser.IDENTIFIER);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2Generate(): K2GenerateContext {
		let _localctx: K2GenerateContext = new K2GenerateContext(this._ctx, this.state);
		this.enterRule(_localctx, 730, EDIF300Parser.RULE_k2Generate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4150;
			this.match(EDIF300Parser.T__285);
			this.state = 4157;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || ((((_la - 283)) & ~0x1F) === 0 && ((1 << (_la - 283)) & ((1 << (EDIF300Parser.T__282 - 283)) | (1 << (EDIF300Parser.T__283 - 283)) | (1 << (EDIF300Parser.T__289 - 283)))) !== 0)) {
				{
				this.state = 4155;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4151;
					this.comment();
					}
					break;
				case EDIF300Parser.T__282:
					{
					this.state = 4152;
					this.k2Actual();
					}
					break;
				case EDIF300Parser.T__283:
					{
					this.state = 4153;
					this.k2Build();
					}
					break;
				case EDIF300Parser.T__289:
					{
					this.state = 4154;
					this.k2Literal();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4159;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4160;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2KeywordDefine(): K2KeywordDefineContext {
		let _localctx: K2KeywordDefineContext = new K2KeywordDefineContext(this._ctx, this.state);
		this.enterRule(_localctx, 732, EDIF300Parser.RULE_k2KeywordDefine);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4162;
			this.match(EDIF300Parser.T__286);
			this.state = 4163;
			this.k1KeywordNameDef();
			this.state = 4164;
			this.k2KeywordParameters();
			this.state = 4165;
			this.k2Generate();
			this.state = 4166;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2KeywordLevel(): K2KeywordLevelContext {
		let _localctx: K2KeywordLevelContext = new K2KeywordLevelContext(this._ctx, this.state);
		this.enterRule(_localctx, 734, EDIF300Parser.RULE_k2KeywordLevel);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4168;
			this.match(EDIF300Parser.T__287);
			this.state = 4173;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__280 || _la === EDIF300Parser.T__286) {
				{
				this.state = 4171;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__280:
					{
					this.state = 4169;
					this.k1KeywordAlias();
					}
					break;
				case EDIF300Parser.T__286:
					{
					this.state = 4170;
					this.k2KeywordDefine();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4175;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4176;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2KeywordParameters(): K2KeywordParametersContext {
		let _localctx: K2KeywordParametersContext = new K2KeywordParametersContext(this._ctx, this.state);
		this.enterRule(_localctx, 736, EDIF300Parser.RULE_k2KeywordParameters);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4178;
			this.match(EDIF300Parser.T__288);
			this.state = 4182;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__284) {
				{
				{
				this.state = 4179;
				this.k2Formal();
				}
				}
				this.state = 4184;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4185;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2Literal(): K2LiteralContext {
		let _localctx: K2LiteralContext = new K2LiteralContext(this._ctx, this.state);
		this.enterRule(_localctx, 738, EDIF300Parser.RULE_k2Literal);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4187;
			this.match(EDIF300Parser.T__289);
			this.state = 4193;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 667)) & ~0x1F) === 0 && ((1 << (_la - 667)) & ((1 << (EDIF300Parser.IDENTIFIER - 667)) | (1 << (EDIF300Parser.STRING_LITERAL - 667)) | (1 << (EDIF300Parser.DECIMAL_LITERAL - 667)))) !== 0)) {
				{
				this.state = 4191;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.IDENTIFIER:
					{
					this.state = 4188;
					this.match(EDIF300Parser.IDENTIFIER);
					}
					break;
				case EDIF300Parser.DECIMAL_LITERAL:
					{
					this.state = 4189;
					this.integerToken();
					}
					break;
				case EDIF300Parser.STRING_LITERAL:
					{
					this.state = 4190;
					this.stringToken();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4195;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4196;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2Optional(): K2OptionalContext {
		let _localctx: K2OptionalContext = new K2OptionalContext(this._ctx, this.state);
		this.enterRule(_localctx, 740, EDIF300Parser.RULE_k2Optional);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4198;
			this.match(EDIF300Parser.T__290);
			this.state = 4202;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__289:
				{
				this.state = 4199;
				this.k2Literal();
				}
				break;
			case EDIF300Parser.T__282:
				{
				this.state = 4200;
				this.k2Actual();
				}
				break;
			case EDIF300Parser.T__283:
				{
				this.state = 4201;
				this.k2Build();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4204;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k2Required(): K2RequiredContext {
		let _localctx: K2RequiredContext = new K2RequiredContext(this._ctx, this.state);
		this.enterRule(_localctx, 742, EDIF300Parser.RULE_k2Required);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4206;
			this.match(EDIF300Parser.T__291);
			this.state = 4207;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k3Build(): K3BuildContext {
		let _localctx: K3BuildContext = new K3BuildContext(this._ctx, this.state);
		this.enterRule(_localctx, 744, EDIF300Parser.RULE_k3Build);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4209;
			this.match(EDIF300Parser.T__292);
			this.state = 4210;
			this.k1KeywordNameRef();
			this.state = 4218;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || ((((_la - 283)) & ~0x1F) === 0 && ((1 << (_la - 283)) & ((1 << (EDIF300Parser.T__282 - 283)) | (1 << (EDIF300Parser.T__289 - 283)) | (1 << (EDIF300Parser.T__292 - 283)) | (1 << (EDIF300Parser.T__294 - 283)))) !== 0)) {
				{
				this.state = 4216;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4211;
					this.comment();
					}
					break;
				case EDIF300Parser.T__282:
					{
					this.state = 4212;
					this.k2Actual();
					}
					break;
				case EDIF300Parser.T__289:
					{
					this.state = 4213;
					this.k2Literal();
					}
					break;
				case EDIF300Parser.T__292:
					{
					this.state = 4214;
					this.k3Build();
					}
					break;
				case EDIF300Parser.T__294:
					{
					this.state = 4215;
					this.k3ForEach();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4220;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4221;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k3Collector(): K3CollectorContext {
		let _localctx: K3CollectorContext = new K3CollectorContext(this._ctx, this.state);
		this.enterRule(_localctx, 746, EDIF300Parser.RULE_k3Collector);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4223;
			this.match(EDIF300Parser.T__293);
			this.state = 4224;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k3ForEach(): K3ForEachContext {
		let _localctx: K3ForEachContext = new K3ForEachContext(this._ctx, this.state);
		this.enterRule(_localctx, 748, EDIF300Parser.RULE_k3ForEach);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4226;
			this.match(EDIF300Parser.T__294);
			this.state = 4229;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.IDENTIFIER:
				{
				this.state = 4227;
				this.k2FormalNameRef();
				}
				break;
			case EDIF300Parser.T__296:
				{
				this.state = 4228;
				this.k3FormalList();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4238;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || ((((_la - 283)) & ~0x1F) === 0 && ((1 << (_la - 283)) & ((1 << (EDIF300Parser.T__282 - 283)) | (1 << (EDIF300Parser.T__289 - 283)) | (1 << (EDIF300Parser.T__292 - 283)) | (1 << (EDIF300Parser.T__294 - 283)))) !== 0)) {
				{
				this.state = 4236;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4231;
					this.comment();
					}
					break;
				case EDIF300Parser.T__282:
					{
					this.state = 4232;
					this.k2Actual();
					}
					break;
				case EDIF300Parser.T__289:
					{
					this.state = 4233;
					this.k2Literal();
					}
					break;
				case EDIF300Parser.T__292:
					{
					this.state = 4234;
					this.k3Build();
					}
					break;
				case EDIF300Parser.T__294:
					{
					this.state = 4235;
					this.k3ForEach();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4240;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4241;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k3Formal(): K3FormalContext {
		let _localctx: K3FormalContext = new K3FormalContext(this._ctx, this.state);
		this.enterRule(_localctx, 750, EDIF300Parser.RULE_k3Formal);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4243;
			this.match(EDIF300Parser.T__295);
			this.state = 4244;
			this.k2FormalNameDef();
			this.state = 4248;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__290:
				{
				this.state = 4245;
				this.k2Optional();
				}
				break;
			case EDIF300Parser.T__291:
				{
				this.state = 4246;
				this.k2Required();
				}
				break;
			case EDIF300Parser.T__293:
				{
				this.state = 4247;
				this.k3Collector();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4250;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k3FormalList(): K3FormalListContext {
		let _localctx: K3FormalListContext = new K3FormalListContext(this._ctx, this.state);
		this.enterRule(_localctx, 752, EDIF300Parser.RULE_k3FormalList);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4252;
			this.match(EDIF300Parser.T__296);
			this.state = 4256;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.IDENTIFIER) {
				{
				{
				this.state = 4253;
				this.k2FormalNameRef();
				}
				}
				this.state = 4258;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4259;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k3Generate(): K3GenerateContext {
		let _localctx: K3GenerateContext = new K3GenerateContext(this._ctx, this.state);
		this.enterRule(_localctx, 754, EDIF300Parser.RULE_k3Generate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4261;
			this.match(EDIF300Parser.T__297);
			this.state = 4269;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || ((((_la - 283)) & ~0x1F) === 0 && ((1 << (_la - 283)) & ((1 << (EDIF300Parser.T__282 - 283)) | (1 << (EDIF300Parser.T__283 - 283)) | (1 << (EDIF300Parser.T__289 - 283)) | (1 << (EDIF300Parser.T__294 - 283)))) !== 0)) {
				{
				this.state = 4267;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4262;
					this.comment();
					}
					break;
				case EDIF300Parser.T__282:
					{
					this.state = 4263;
					this.k2Actual();
					}
					break;
				case EDIF300Parser.T__283:
					{
					this.state = 4264;
					this.k2Build();
					}
					break;
				case EDIF300Parser.T__289:
					{
					this.state = 4265;
					this.k2Literal();
					}
					break;
				case EDIF300Parser.T__294:
					{
					this.state = 4266;
					this.k3ForEach();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4271;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4272;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k3KeywordDefine(): K3KeywordDefineContext {
		let _localctx: K3KeywordDefineContext = new K3KeywordDefineContext(this._ctx, this.state);
		this.enterRule(_localctx, 756, EDIF300Parser.RULE_k3KeywordDefine);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4274;
			this.match(EDIF300Parser.T__298);
			this.state = 4275;
			this.k1KeywordNameDef();
			this.state = 4276;
			this.k3KeywordParameters();
			this.state = 4277;
			this.k3Generate();
			this.state = 4278;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k3KeywordLevel(): K3KeywordLevelContext {
		let _localctx: K3KeywordLevelContext = new K3KeywordLevelContext(this._ctx, this.state);
		this.enterRule(_localctx, 758, EDIF300Parser.RULE_k3KeywordLevel);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4280;
			this.match(EDIF300Parser.T__299);
			this.state = 4285;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__280 || _la === EDIF300Parser.T__298) {
				{
				this.state = 4283;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__280:
					{
					this.state = 4281;
					this.k1KeywordAlias();
					}
					break;
				case EDIF300Parser.T__298:
					{
					this.state = 4282;
					this.k3KeywordDefine();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4287;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4288;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public k3KeywordParameters(): K3KeywordParametersContext {
		let _localctx: K3KeywordParametersContext = new K3KeywordParametersContext(this._ctx, this.state);
		this.enterRule(_localctx, 760, EDIF300Parser.RULE_k3KeywordParameters);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4290;
			this.match(EDIF300Parser.T__300);
			this.state = 4294;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__295) {
				{
				{
				this.state = 4291;
				this.k3Formal();
				}
				}
				this.state = 4296;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4297;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public kelvin(): KelvinContext {
		let _localctx: KelvinContext = new KelvinContext(this._ctx, this.state);
		this.enterRule(_localctx, 762, EDIF300Parser.RULE_kelvin);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4299;
			this.match(EDIF300Parser.T__301);
			this.state = 4300;
			this.unitExponent();
			this.state = 4301;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public keywordMap(): KeywordMapContext {
		let _localctx: KeywordMapContext = new KeywordMapContext(this._ctx, this.state);
		this.enterRule(_localctx, 764, EDIF300Parser.RULE_keywordMap);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4303;
			this.match(EDIF300Parser.T__302);
			this.state = 4308;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__279:
				{
				this.state = 4304;
				this.k0KeywordLevel();
				}
				break;
			case EDIF300Parser.T__281:
				{
				this.state = 4305;
				this.k1KeywordLevel();
				}
				break;
			case EDIF300Parser.T__287:
				{
				this.state = 4306;
				this.k2KeywordLevel();
				}
				break;
			case EDIF300Parser.T__299:
				{
				this.state = 4307;
				this.k3KeywordLevel();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4313;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61) {
				{
				{
				this.state = 4310;
				this.comment();
				}
				}
				this.state = 4315;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4316;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public kilogram(): KilogramContext {
		let _localctx: KilogramContext = new KilogramContext(this._ctx, this.state);
		this.enterRule(_localctx, 766, EDIF300Parser.RULE_kilogram);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4318;
			this.match(EDIF300Parser.T__303);
			this.state = 4319;
			this.unitExponent();
			this.state = 4320;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public leaf(): LeafContext {
		let _localctx: LeafContext = new LeafContext(this._ctx, this.state);
		this.enterRule(_localctx, 768, EDIF300Parser.RULE_leaf);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4322;
			this.match(EDIF300Parser.T__304);
			this.state = 4323;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public leafOccurrenceAnnotate(): LeafOccurrenceAnnotateContext {
		let _localctx: LeafOccurrenceAnnotateContext = new LeafOccurrenceAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 770, EDIF300Parser.RULE_leafOccurrenceAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4325;
			this.match(EDIF300Parser.T__305);
			this.state = 4328;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.IDENTIFIER:
				{
				this.state = 4326;
				this.extendInstanceDef();
				}
				break;
			case EDIF300Parser.T__235:
				{
				this.state = 4327;
				this.extendInstanceMemberDef();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4339;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 43)) & ~0x1F) === 0 && ((1 << (_la - 43)) & ((1 << (EDIF300Parser.T__42 - 43)) | (1 << (EDIF300Parser.T__58 - 43)) | (1 << (EDIF300Parser.T__61 - 43)))) !== 0) || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__243 || _la === EDIF300Parser.T__415 || _la === EDIF300Parser.T__442) {
				{
				this.state = 4337;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__42:
					{
					this.state = 4330;
					this.cellPropertyOverride();
					}
					break;
				case EDIF300Parser.T__58:
					{
					this.state = 4331;
					this.clusterPropertyOverride();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 4332;
					this.comment();
					}
					break;
				case EDIF300Parser.T__118:
					{
					this.state = 4333;
					this.designator();
					}
					break;
				case EDIF300Parser.T__243:
					{
					this.state = 4334;
					this.instancePropertyOverride();
					}
					break;
				case EDIF300Parser.T__415:
					{
					this.state = 4335;
					this.portAnnotate();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 4336;
					this.property();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4341;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4342;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public leftJustify(): LeftJustifyContext {
		let _localctx: LeftJustifyContext = new LeftJustifyContext(this._ctx, this.state);
		this.enterRule(_localctx, 772, EDIF300Parser.RULE_leftJustify);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4344;
			this.match(EDIF300Parser.T__306);
			this.state = 4345;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public lengthValue(): LengthValueContext {
		let _localctx: LengthValueContext = new LengthValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 774, EDIF300Parser.RULE_lengthValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4347;
			this.distanceValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public lessThan(): LessThanContext {
		let _localctx: LessThanContext = new LessThanContext(this._ctx, this.state);
		this.enterRule(_localctx, 776, EDIF300Parser.RULE_lessThan);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4349;
			this.match(EDIF300Parser.T__307);
			this.state = 4353;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__0 || _la === EDIF300Parser.T__181 || ((((_la - 235)) & ~0x1F) === 0 && ((1 << (_la - 235)) & ((1 << (EDIF300Parser.T__234 - 235)) | (1 << (EDIF300Parser.T__249 - 235)) | (1 << (EDIF300Parser.T__253 - 235)) | (1 << (EDIF300Parser.T__254 - 235)) | (1 << (EDIF300Parser.T__255 - 235)) | (1 << (EDIF300Parser.T__256 - 235)) | (1 << (EDIF300Parser.T__257 - 235)) | (1 << (EDIF300Parser.T__258 - 235)))) !== 0) || _la === EDIF300Parser.T__421 || _la === EDIF300Parser.T__590 || _la === EDIF300Parser.T__604 || _la === EDIF300Parser.DECIMAL_LITERAL) {
				{
				{
				this.state = 4350;
				this.integerExpression();
				}
				}
				this.state = 4355;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4356;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public lessThanOrEqual(): LessThanOrEqualContext {
		let _localctx: LessThanOrEqualContext = new LessThanOrEqualContext(this._ctx, this.state);
		this.enterRule(_localctx, 778, EDIF300Parser.RULE_lessThanOrEqual);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4358;
			this.match(EDIF300Parser.T__308);
			this.state = 4362;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__0 || _la === EDIF300Parser.T__181 || ((((_la - 235)) & ~0x1F) === 0 && ((1 << (_la - 235)) & ((1 << (EDIF300Parser.T__234 - 235)) | (1 << (EDIF300Parser.T__249 - 235)) | (1 << (EDIF300Parser.T__253 - 235)) | (1 << (EDIF300Parser.T__254 - 235)) | (1 << (EDIF300Parser.T__255 - 235)) | (1 << (EDIF300Parser.T__256 - 235)) | (1 << (EDIF300Parser.T__257 - 235)) | (1 << (EDIF300Parser.T__258 - 235)))) !== 0) || _la === EDIF300Parser.T__421 || _la === EDIF300Parser.T__590 || _la === EDIF300Parser.T__604 || _la === EDIF300Parser.DECIMAL_LITERAL) {
				{
				{
				this.state = 4359;
				this.integerExpression();
				}
				}
				this.state = 4364;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4365;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public library(): LibraryContext {
		let _localctx: LibraryContext = new LibraryContext(this._ctx, this.state);
		this.enterRule(_localctx, 780, EDIF300Parser.RULE_library);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4367;
			this.match(EDIF300Parser.T__309);
			this.state = 4368;
			this.libraryNameDef();
			this.state = 4369;
			this.libraryHeader();
			this.state = 4391;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__37 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__192 || _la === EDIF300Parser.T__381 || _la === EDIF300Parser.T__395 || ((((_la - 476)) & ~0x1F) === 0 && ((1 << (_la - 476)) & ((1 << (EDIF300Parser.T__475 - 476)) | (1 << (EDIF300Parser.T__478 - 476)) | (1 << (EDIF300Parser.T__486 - 476)) | (1 << (EDIF300Parser.T__489 - 476)) | (1 << (EDIF300Parser.T__500 - 476)) | (1 << (EDIF300Parser.T__504 - 476)))) !== 0) || ((((_la - 509)) & ~0x1F) === 0 && ((1 << (_la - 509)) & ((1 << (EDIF300Parser.T__508 - 509)) | (1 << (EDIF300Parser.T__517 - 509)) | (1 << (EDIF300Parser.T__521 - 509)) | (1 << (EDIF300Parser.T__524 - 509)))) !== 0) || ((((_la - 549)) & ~0x1F) === 0 && ((1 << (_la - 549)) & ((1 << (EDIF300Parser.T__548 - 549)) | (1 << (EDIF300Parser.T__557 - 549)) | (1 << (EDIF300Parser.T__562 - 549)))) !== 0) || _la === EDIF300Parser.T__642) {
				{
				this.state = 4389;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__37:
					{
					this.state = 4370;
					this.cell();
					}
					break;
				case EDIF300Parser.T__500:
					{
					this.state = 4371;
					this.schematicInterconnectTerminatorTemplate();
					}
					break;
				case EDIF300Parser.T__504:
					{
					this.state = 4372;
					this.schematicJunctionTemplate();
					}
					break;
				case EDIF300Parser.T__486:
					{
					this.state = 4373;
					this.schematicGlobalPortTemplate();
					}
					break;
				case EDIF300Parser.T__508:
					{
					this.state = 4374;
					this.schematicMasterPortTemplate();
					}
					break;
				case EDIF300Parser.T__517:
					{
					this.state = 4375;
					this.schematicOffPageConnectorTemplate();
					}
					break;
				case EDIF300Parser.T__521:
					{
					this.state = 4376;
					this.schematicOnPageConnectorTemplate();
					}
					break;
				case EDIF300Parser.T__548:
					{
					this.state = 4377;
					this.schematicRipperTemplate();
					}
					break;
				case EDIF300Parser.T__557:
					{
					this.state = 4378;
					this.schematicSymbolBorderTemplate();
					}
					break;
				case EDIF300Parser.T__562:
					{
					this.state = 4379;
					this.schematicSymbolPortTemplate();
					}
					break;
				case EDIF300Parser.T__381:
					{
					this.state = 4380;
					this.pageBorderTemplate();
					}
					break;
				case EDIF300Parser.T__395:
					{
					this.state = 4381;
					this.pageTitleBlockTemplate();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 4382;
					this.comment();
					}
					break;
				case EDIF300Parser.T__192:
					{
					this.state = 4383;
					this.geometryMacro();
					}
					break;
				case EDIF300Parser.T__475:
					{
					this.state = 4384;
					this.schematicFigureMacro();
					}
					break;
				case EDIF300Parser.T__478:
					{
					this.state = 4385;
					this.schematicForFrameBorderTemplate();
					}
					break;
				case EDIF300Parser.T__489:
					{
					this.state = 4386;
					this.schematicIfFrameBorderTemplate();
					}
					break;
				case EDIF300Parser.T__524:
					{
					this.state = 4387;
					this.schematicOtherwiseFrameBorderTemplate();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 4388;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4393;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4394;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public libraryHeader(): LibraryHeaderContext {
		let _localctx: LibraryHeaderContext = new LibraryHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 782, EDIF300Parser.RULE_libraryHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4396;
			this.match(EDIF300Parser.T__310);
			this.state = 4397;
			this.edifLevel();
			this.state = 4398;
			this.nameCaseSensitivity();
			this.state = 4399;
			this.technology();
			this.state = 4407;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
				{
				this.state = 4405;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__14:
					{
					this.state = 4400;
					this.backgroundColor();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 4401;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 4402;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 4403;
					this.property();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 4404;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4409;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4410;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public libraryNameCaseSensitive(): LibraryNameCaseSensitiveContext {
		let _localctx: LibraryNameCaseSensitiveContext = new LibraryNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 784, EDIF300Parser.RULE_libraryNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4412;
			this.match(EDIF300Parser.T__311);
			this.state = 4413;
			this.booleanToken();
			this.state = 4414;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public libraryNameDef(): LibraryNameDefContext {
		let _localctx: LibraryNameDefContext = new LibraryNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 786, EDIF300Parser.RULE_libraryNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4416;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public libraryNameRef(): LibraryNameRefContext {
		let _localctx: LibraryNameRefContext = new LibraryNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 788, EDIF300Parser.RULE_libraryNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4418;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public libraryObjectNameCaseSensitive(): LibraryObjectNameCaseSensitiveContext {
		let _localctx: LibraryObjectNameCaseSensitiveContext = new LibraryObjectNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 790, EDIF300Parser.RULE_libraryObjectNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4420;
			this.match(EDIF300Parser.T__312);
			this.state = 4421;
			this.booleanToken();
			this.state = 4422;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		let _localctx: LibraryObjectNameDefContext = new LibraryObjectNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 792, EDIF300Parser.RULE_libraryObjectNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4424;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		let _localctx: LibraryObjectNameRefContext = new LibraryObjectNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 794, EDIF300Parser.RULE_libraryObjectNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4426;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public libraryRef(): LibraryRefContext {
		let _localctx: LibraryRefContext = new LibraryRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 796, EDIF300Parser.RULE_libraryRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4428;
			this.match(EDIF300Parser.T__313);
			this.state = 4429;
			this.libraryNameRef();
			this.state = 4430;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public loadDelay(): LoadDelayContext {
		let _localctx: LoadDelayContext = new LoadDelayContext(this._ctx, this.state);
		this.enterRule(_localctx, 798, EDIF300Parser.RULE_loadDelay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4432;
			this.match(EDIF300Parser.T__314);
			this.state = 4433;
			this.acLoadFactorTime();
			this.state = 4434;
			this.acLoadFactorCapacitance();
			this.state = 4435;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public localPortGroup(): LocalPortGroupContext {
		let _localctx: LocalPortGroupContext = new LocalPortGroupContext(this._ctx, this.state);
		this.enterRule(_localctx, 800, EDIF300Parser.RULE_localPortGroup);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4437;
			this.match(EDIF300Parser.T__315);
			this.state = 4438;
			this.localPortGroupNameDef();
			this.state = 4439;
			this.portList();
			this.state = 4446;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
				{
				this.state = 4444;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4440;
					this.comment();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 4441;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 4442;
					this.property();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 4443;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4448;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4449;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public localPortGroupNameCaseSensitive(): LocalPortGroupNameCaseSensitiveContext {
		let _localctx: LocalPortGroupNameCaseSensitiveContext = new LocalPortGroupNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 802, EDIF300Parser.RULE_localPortGroupNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4451;
			this.match(EDIF300Parser.T__316);
			this.state = 4452;
			this.booleanToken();
			this.state = 4453;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public localPortGroupNameDef(): LocalPortGroupNameDefContext {
		let _localctx: LocalPortGroupNameDefContext = new LocalPortGroupNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 804, EDIF300Parser.RULE_localPortGroupNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4455;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public localPortGroupNameRef(): LocalPortGroupNameRefContext {
		let _localctx: LocalPortGroupNameRefContext = new LocalPortGroupNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 806, EDIF300Parser.RULE_localPortGroupNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4457;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public localPortGroupRef(): LocalPortGroupRefContext {
		let _localctx: LocalPortGroupRefContext = new LocalPortGroupRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 808, EDIF300Parser.RULE_localPortGroupRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4459;
			this.match(EDIF300Parser.T__317);
			this.state = 4460;
			this.localPortGroupNameRef();
			this.state = 4461;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicalConnectivity(): LogicalConnectivityContext {
		let _localctx: LogicalConnectivityContext = new LogicalConnectivityContext(this._ctx, this.state);
		this.enterRule(_localctx, 810, EDIF300Parser.RULE_logicalConnectivity);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4463;
			this.match(EDIF300Parser.T__318);
			this.state = 4474;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__176 || _la === EDIF300Parser.T__215 || _la === EDIF300Parser.T__232 || _la === EDIF300Parser.T__371 || _la === EDIF300Parser.T__584 || _la === EDIF300Parser.T__586 || _la === EDIF300Parser.T__642) {
				{
				this.state = 4472;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4464;
					this.comment();
					}
					break;
				case EDIF300Parser.T__176:
					{
					this.state = 4465;
					this.forFrame();
					}
					break;
				case EDIF300Parser.T__215:
					{
					this.state = 4466;
					this.ifFrame();
					}
					break;
				case EDIF300Parser.T__232:
					{
					this.state = 4467;
					this.instance();
					}
					break;
				case EDIF300Parser.T__371:
					{
					this.state = 4468;
					this.otherwiseFrame();
					}
					break;
				case EDIF300Parser.T__584:
					{
					this.state = 4469;
					this.signal();
					}
					break;
				case EDIF300Parser.T__586:
					{
					this.state = 4470;
					this.signalGroup();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 4471;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4476;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4477;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicDefinitions(): LogicDefinitionsContext {
		let _localctx: LogicDefinitionsContext = new LogicDefinitionsContext(this._ctx, this.state);
		this.enterRule(_localctx, 812, EDIF300Parser.RULE_logicDefinitions);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4479;
			this.match(EDIF300Parser.T__319);
			this.state = 4480;
			this.setVoltage();
			this.state = 4481;
			this.setCurrent();
			this.state = 4486;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__327) {
				{
				this.state = 4484;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4482;
					this.comment();
					}
					break;
				case EDIF300Parser.T__327:
					{
					this.state = 4483;
					this.logicValue();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4488;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4489;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicList(): LogicListContext {
		let _localctx: LogicListContext = new LogicListContext(this._ctx, this.state);
		this.enterRule(_localctx, 814, EDIF300Parser.RULE_logicList);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4491;
			this.match(EDIF300Parser.T__320);
			this.state = 4497;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__219 || _la === EDIF300Parser.T__325 || _la === EDIF300Parser.IDENTIFIER) {
				{
				this.state = 4495;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__219:
					{
					this.state = 4492;
					this.ignore();
					}
					break;
				case EDIF300Parser.IDENTIFIER:
					{
					this.state = 4493;
					this.logicNameRef();
					}
					break;
				case EDIF300Parser.T__325:
					{
					this.state = 4494;
					this.logicOneOf();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4499;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4500;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicMapInput(): LogicMapInputContext {
		let _localctx: LogicMapInputContext = new LogicMapInputContext(this._ctx, this.state);
		this.enterRule(_localctx, 816, EDIF300Parser.RULE_logicMapInput);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4502;
			this.match(EDIF300Parser.T__321);
			this.state = 4506;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__326) {
				{
				{
				this.state = 4503;
				this.logicRef();
				}
				}
				this.state = 4508;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4509;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicMapOutput(): LogicMapOutputContext {
		let _localctx: LogicMapOutputContext = new LogicMapOutputContext(this._ctx, this.state);
		this.enterRule(_localctx, 818, EDIF300Parser.RULE_logicMapOutput);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4511;
			this.match(EDIF300Parser.T__322);
			this.state = 4515;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__326) {
				{
				{
				this.state = 4512;
				this.logicRef();
				}
				}
				this.state = 4517;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4518;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicModelUnits(): LogicModelUnitsContext {
		let _localctx: LogicModelUnitsContext = new LogicModelUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 820, EDIF300Parser.RULE_logicModelUnits);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4520;
			this.match(EDIF300Parser.T__323);
			this.state = 4525;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__576 || _la === EDIF300Parser.T__580) {
				{
				this.state = 4523;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__576:
					{
					this.state = 4521;
					this.setCapacitance();
					}
					break;
				case EDIF300Parser.T__580:
					{
					this.state = 4522;
					this.setTime();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4527;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4528;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicModelView(): LogicModelViewContext {
		let _localctx: LogicModelViewContext = new LogicModelViewContext(this._ctx, this.state);
		this.enterRule(_localctx, 822, EDIF300Parser.RULE_logicModelView);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4530;
			this.match(EDIF300Parser.T__324);
			this.state = 4531;
			this.viewNameDef();
			this.state = 4537;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__642) {
				{
				this.state = 4535;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4532;
					this.comment();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 4533;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 4534;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4539;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4540;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicNameDef(): LogicNameDefContext {
		let _localctx: LogicNameDefContext = new LogicNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 824, EDIF300Parser.RULE_logicNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4542;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicNameRef(): LogicNameRefContext {
		let _localctx: LogicNameRefContext = new LogicNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 826, EDIF300Parser.RULE_logicNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4544;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicOneOf(): LogicOneOfContext {
		let _localctx: LogicOneOfContext = new LogicOneOfContext(this._ctx, this.state);
		this.enterRule(_localctx, 828, EDIF300Parser.RULE_logicOneOf);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4546;
			this.match(EDIF300Parser.T__325);
			this.state = 4551;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__320 || _la === EDIF300Parser.IDENTIFIER) {
				{
				this.state = 4549;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__320:
					{
					this.state = 4547;
					this.logicList();
					}
					break;
				case EDIF300Parser.IDENTIFIER:
					{
					this.state = 4548;
					this.logicNameRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4553;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4554;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicRef(): LogicRefContext {
		let _localctx: LogicRefContext = new LogicRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 830, EDIF300Parser.RULE_logicRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4556;
			this.match(EDIF300Parser.T__326);
			this.state = 4557;
			this.logicNameRef();
			this.state = 4559;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 4558;
				this.libraryRef();
				}
			}

			this.state = 4561;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public logicValue(): LogicValueContext {
		let _localctx: LogicValueContext = new LogicValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 832, EDIF300Parser.RULE_logicValue);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4563;
			this.match(EDIF300Parser.T__327);
			this.state = 4564;
			this.logicNameDef();
			this.state = 4581;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__26 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__69 || _la === EDIF300Parser.T__99 || _la === EDIF300Parser.T__136 || _la === EDIF300Parser.T__273 || ((((_la - 322)) & ~0x1F) === 0 && ((1 << (_la - 322)) & ((1 << (EDIF300Parser.T__321 - 322)) | (1 << (EDIF300Parser.T__322 - 322)) | (1 << (EDIF300Parser.T__346 - 322)))) !== 0) || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__459 || _la === EDIF300Parser.T__610 || _la === EDIF300Parser.T__656 || _la === EDIF300Parser.T__658) {
				{
				this.state = 4579;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__26:
					{
					this.state = 4565;
					this.booleanMap();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 4566;
					this.comment();
					}
					break;
				case EDIF300Parser.T__69:
					{
					this.state = 4567;
					this.compound();
					}
					break;
				case EDIF300Parser.T__99:
					{
					this.state = 4568;
					this.currentMap();
					}
					break;
				case EDIF300Parser.T__136:
					{
					this.state = 4569;
					this.dominates();
					}
					break;
				case EDIF300Parser.T__273:
					{
					this.state = 4570;
					this.isolated();
					}
					break;
				case EDIF300Parser.T__321:
					{
					this.state = 4571;
					this.logicMapInput();
					}
					break;
				case EDIF300Parser.T__322:
					{
					this.state = 4572;
					this.logicMapOutput();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 4573;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 4574;
					this.property();
					}
					break;
				case EDIF300Parser.T__459:
					{
					this.state = 4575;
					this.resolves();
					}
					break;
				case EDIF300Parser.T__610:
					{
					this.state = 4576;
					this.strong();
					}
					break;
				case EDIF300Parser.T__656:
					{
					this.state = 4577;
					this.voltageMap();
					}
					break;
				case EDIF300Parser.T__658:
					{
					this.state = 4578;
					this.weak();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4583;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4584;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public lsbToMsb(): LsbToMsbContext {
		let _localctx: LsbToMsbContext = new LsbToMsbContext(this._ctx, this.state);
		this.enterRule(_localctx, 834, EDIF300Parser.RULE_lsbToMsb);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4586;
			this.match(EDIF300Parser.T__328);
			this.state = 4587;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mantissa(): MantissaContext {
		let _localctx: MantissaContext = new MantissaContext(this._ctx, this.state);
		this.enterRule(_localctx, 836, EDIF300Parser.RULE_mantissa);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4589;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mark(): MarkContext {
		let _localctx: MarkContext = new MarkContext(this._ctx, this.state);
		this.enterRule(_localctx, 838, EDIF300Parser.RULE_mark);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4591;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public maskLayoutUnits(): MaskLayoutUnitsContext {
		let _localctx: MaskLayoutUnitsContext = new MaskLayoutUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 840, EDIF300Parser.RULE_maskLayoutUnits);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4593;
			this.match(EDIF300Parser.T__329);
			this.state = 4600;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 576)) & ~0x1F) === 0 && ((1 << (_la - 576)) & ((1 << (EDIF300Parser.T__575 - 576)) | (1 << (EDIF300Parser.T__576 - 576)) | (1 << (EDIF300Parser.T__578 - 576)) | (1 << (EDIF300Parser.T__580 - 576)))) !== 0)) {
				{
				this.state = 4598;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__575:
					{
					this.state = 4594;
					this.setAngle();
					}
					break;
				case EDIF300Parser.T__576:
					{
					this.state = 4595;
					this.setCapacitance();
					}
					break;
				case EDIF300Parser.T__578:
					{
					this.state = 4596;
					this.setDistance();
					}
					break;
				case EDIF300Parser.T__580:
					{
					this.state = 4597;
					this.setTime();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4602;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4603;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public maskLayoutView(): MaskLayoutViewContext {
		let _localctx: MaskLayoutViewContext = new MaskLayoutViewContext(this._ctx, this.state);
		this.enterRule(_localctx, 842, EDIF300Parser.RULE_maskLayoutView);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4605;
			this.match(EDIF300Parser.T__330);
			this.state = 4606;
			this.viewNameDef();
			this.state = 4612;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__642) {
				{
				this.state = 4610;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4607;
					this.comment();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 4608;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 4609;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4614;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4615;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public measured(): MeasuredContext {
		let _localctx: MeasuredContext = new MeasuredContext(this._ctx, this.state);
		this.enterRule(_localctx, 844, EDIF300Parser.RULE_measured);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4617;
			this.match(EDIF300Parser.T__331);
			this.state = 4618;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public meter(): MeterContext {
		let _localctx: MeterContext = new MeterContext(this._ctx, this.state);
		this.enterRule(_localctx, 846, EDIF300Parser.RULE_meter);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4620;
			this.match(EDIF300Parser.T__332);
			this.state = 4621;
			this.unitExponent();
			this.state = 4622;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public middleJustify(): MiddleJustifyContext {
		let _localctx: MiddleJustifyContext = new MiddleJustifyContext(this._ctx, this.state);
		this.enterRule(_localctx, 848, EDIF300Parser.RULE_middleJustify);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4624;
			this.match(EDIF300Parser.T__333);
			this.state = 4625;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public minimalWidth(): MinimalWidthContext {
		let _localctx: MinimalWidthContext = new MinimalWidthContext(this._ctx, this.state);
		this.enterRule(_localctx, 850, EDIF300Parser.RULE_minimalWidth);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4627;
			this.match(EDIF300Parser.T__334);
			this.state = 4628;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public minimumStringLength(): MinimumStringLengthContext {
		let _localctx: MinimumStringLengthContext = new MinimumStringLengthContext(this._ctx, this.state);
		this.enterRule(_localctx, 852, EDIF300Parser.RULE_minimumStringLength);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4630;
			this.match(EDIF300Parser.T__335);
			this.state = 4631;
			this.substringLength();
			this.state = 4632;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public miNoMax(): MiNoMaxContext {
		let _localctx: MiNoMaxContext = new MiNoMaxContext(this._ctx, this.state);
		this.enterRule(_localctx, 854, EDIF300Parser.RULE_miNoMax);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4634;
			this.match(EDIF300Parser.T__336);
			this.state = 4635;
			this.miNoMaxValue();
			this.state = 4636;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public miNoMaxValue(): MiNoMaxValueContext {
		let _localctx: MiNoMaxValueContext = new MiNoMaxValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 856, EDIF300Parser.RULE_miNoMaxValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4640;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__145:
			case EDIF300Parser.DECIMAL_LITERAL:
				{
				this.state = 4638;
				this.numberValue();
				}
				break;
			case EDIF300Parser.T__338:
				{
				this.state = 4639;
				this.mnm();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public minuend(): MinuendContext {
		let _localctx: MinuendContext = new MinuendContext(this._ctx, this.state);
		this.enterRule(_localctx, 858, EDIF300Parser.RULE_minuend);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4642;
			this.integerExpression();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public minuteNumber(): MinuteNumberContext {
		let _localctx: MinuteNumberContext = new MinuteNumberContext(this._ctx, this.state);
		this.enterRule(_localctx, 860, EDIF300Parser.RULE_minuteNumber);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4644;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mixedDirection(): MixedDirectionContext {
		let _localctx: MixedDirectionContext = new MixedDirectionContext(this._ctx, this.state);
		this.enterRule(_localctx, 862, EDIF300Parser.RULE_mixedDirection);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4646;
			this.match(EDIF300Parser.T__337);
			this.state = 4647;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mnm(): MnmContext {
		let _localctx: MnmContext = new MnmContext(this._ctx, this.state);
		this.enterRule(_localctx, 864, EDIF300Parser.RULE_mnm);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4649;
			this.match(EDIF300Parser.T__338);
			this.state = 4653;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__145:
			case EDIF300Parser.DECIMAL_LITERAL:
				{
				this.state = 4650;
				this.numberValue();
				}
				break;
			case EDIF300Parser.T__632:
				{
				this.state = 4651;
				this.undefined();
				}
				break;
			case EDIF300Parser.T__631:
				{
				this.state = 4652;
				this.unconstrained();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4658;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__145:
			case EDIF300Parser.DECIMAL_LITERAL:
				{
				this.state = 4655;
				this.numberValue();
				}
				break;
			case EDIF300Parser.T__632:
				{
				this.state = 4656;
				this.undefined();
				}
				break;
			case EDIF300Parser.T__631:
				{
				this.state = 4657;
				this.unconstrained();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4663;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__145:
			case EDIF300Parser.DECIMAL_LITERAL:
				{
				this.state = 4660;
				this.numberValue();
				}
				break;
			case EDIF300Parser.T__632:
				{
				this.state = 4661;
				this.undefined();
				}
				break;
			case EDIF300Parser.T__631:
				{
				this.state = 4662;
				this.unconstrained();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4665;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mole(): MoleContext {
		let _localctx: MoleContext = new MoleContext(this._ctx, this.state);
		this.enterRule(_localctx, 866, EDIF300Parser.RULE_mole);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4667;
			this.match(EDIF300Parser.T__339);
			this.state = 4668;
			this.unitExponent();
			this.state = 4669;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public monthNumber(): MonthNumberContext {
		let _localctx: MonthNumberContext = new MonthNumberContext(this._ctx, this.state);
		this.enterRule(_localctx, 868, EDIF300Parser.RULE_monthNumber);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4671;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public msbToLsb(): MsbToLsbContext {
		let _localctx: MsbToLsbContext = new MsbToLsbContext(this._ctx, this.state);
		this.enterRule(_localctx, 870, EDIF300Parser.RULE_msbToLsb);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4673;
			this.match(EDIF300Parser.T__340);
			this.state = 4674;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public mustJoin(): MustJoinContext {
		let _localctx: MustJoinContext = new MustJoinContext(this._ctx, this.state);
		this.enterRule(_localctx, 872, EDIF300Parser.RULE_mustJoin);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4676;
			this.match(EDIF300Parser.T__341);
			this.state = 4682;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__270 || _la === EDIF300Parser.T__436 || _la === EDIF300Parser.T__659) {
				{
				this.state = 4680;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__270:
					{
					this.state = 4677;
					this.interfaceJoined();
					}
					break;
				case EDIF300Parser.T__436:
					{
					this.state = 4678;
					this.portRef();
					}
					break;
				case EDIF300Parser.T__659:
					{
					this.state = 4679;
					this.weakJoined();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4684;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4685;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nameAlias(): NameAliasContext {
		let _localctx: NameAliasContext = new NameAliasContext(this._ctx, this.state);
		this.enterRule(_localctx, 874, EDIF300Parser.RULE_nameAlias);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4687;
			this.match(EDIF300Parser.T__342);
			this.state = 4688;
			this.originalName();
			this.state = 4694;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__130 || _la === EDIF300Parser.T__191 || _la === EDIF300Parser.T__348) {
				{
				this.state = 4692;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__130:
					{
					this.state = 4689;
					this.displayName();
					}
					break;
				case EDIF300Parser.T__191:
					{
					this.state = 4690;
					this.generated();
					}
					break;
				case EDIF300Parser.T__348:
					{
					this.state = 4691;
					this.nameStructure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4696;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4697;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nameCaseSensitivity(): NameCaseSensitivityContext {
		let _localctx: NameCaseSensitivityContext = new NameCaseSensitivityContext(this._ctx, this.state);
		this.enterRule(_localctx, 876, EDIF300Parser.RULE_nameCaseSensitivity);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4699;
			this.match(EDIF300Parser.T__343);
			this.state = 4726;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__52 || _la === EDIF300Parser.T__55 || ((((_la - 124)) & ~0x1F) === 0 && ((1 << (_la - 124)) & ((1 << (EDIF300Parser.T__123 - 124)) | (1 << (EDIF300Parser.T__124 - 124)) | (1 << (EDIF300Parser.T__134 - 124)))) !== 0) || ((((_la - 162)) & ~0x1F) === 0 && ((1 << (_la - 162)) & ((1 << (EDIF300Parser.T__161 - 162)) | (1 << (EDIF300Parser.T__180 - 162)) | (1 << (EDIF300Parser.T__185 - 162)))) !== 0) || ((((_la - 201)) & ~0x1F) === 0 && ((1 << (_la - 201)) & ((1 << (EDIF300Parser.T__200 - 201)) | (1 << (EDIF300Parser.T__211 - 201)) | (1 << (EDIF300Parser.T__220 - 201)))) !== 0) || _la === EDIF300Parser.T__236 || _la === EDIF300Parser.T__264 || ((((_la - 312)) & ~0x1F) === 0 && ((1 << (_la - 312)) & ((1 << (EDIF300Parser.T__311 - 312)) | (1 << (EDIF300Parser.T__312 - 312)) | (1 << (EDIF300Parser.T__316 - 312)))) !== 0) || _la === EDIF300Parser.T__387 || _la === EDIF300Parser.T__399 || _la === EDIF300Parser.T__429 || _la === EDIF300Parser.T__446 || _la === EDIF300Parser.T__588 || _la === EDIF300Parser.T__594 || _la === EDIF300Parser.T__647 || _la === EDIF300Parser.T__649) {
				{
				this.state = 4724;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__52:
					{
					this.state = 4700;
					this.clusterConfigurationNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__55:
					{
					this.state = 4701;
					this.clusterNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__123:
					{
					this.state = 4702;
					this.designHierarchyNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__124:
					{
					this.state = 4703;
					this.designNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__134:
					{
					this.state = 4704;
					this.documentationNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__161:
					{
					this.state = 4705;
					this.figureGroupNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__180:
					{
					this.state = 4706;
					this.forFrameIndexNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__185:
					{
					this.state = 4707;
					this.frameNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__200:
					{
					this.state = 4708;
					this.globalPortNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__211:
					{
					this.state = 4709;
					this.hotspotNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__220:
					{
					this.state = 4710;
					this.implementationNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__236:
					{
					this.state = 4711;
					this.instanceNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__264:
					{
					this.state = 4712;
					this.interconnectNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__311:
					{
					this.state = 4713;
					this.libraryNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__312:
					{
					this.state = 4714;
					this.libraryObjectNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__316:
					{
					this.state = 4715;
					this.localPortGroupNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__387:
					{
					this.state = 4716;
					this.pageNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__399:
					{
					this.state = 4717;
					this.parameterNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__429:
					{
					this.state = 4718;
					this.portNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__446:
					{
					this.state = 4719;
					this.propertyNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__588:
					{
					this.state = 4720;
					this.signalGroupNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__594:
					{
					this.state = 4721;
					this.signalNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__647:
					{
					this.state = 4722;
					this.viewGroupNameCaseSensitive();
					}
					break;
				case EDIF300Parser.T__649:
					{
					this.state = 4723;
					this.viewNameCaseSensitive();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4728;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4729;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nameDef(): NameDefContext {
		let _localctx: NameDefContext = new NameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 878, EDIF300Parser.RULE_nameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4731;
			this.match(EDIF300Parser.IDENTIFIER);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nameDimension(): NameDimensionContext {
		let _localctx: NameDimensionContext = new NameDimensionContext(this._ctx, this.state);
		this.enterRule(_localctx, 880, EDIF300Parser.RULE_nameDimension);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4733;
			this.match(EDIF300Parser.T__344);
			this.state = 4734;
			this.nameDimensionStructure();
			this.state = 4736;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__21) {
				{
				this.state = 4735;
				this.bitOrder();
				}
			}

			this.state = 4738;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nameDimensionStructure(): NameDimensionStructureContext {
		let _localctx: NameDimensionStructureContext = new NameDimensionStructureContext(this._ctx, this.state);
		this.enterRule(_localctx, 882, EDIF300Parser.RULE_nameDimensionStructure);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4740;
			this.match(EDIF300Parser.T__345);
			this.state = 4748;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__65 || _la === EDIF300Parser.T__68 || _la === EDIF300Parser.T__574 || _la === EDIF300Parser.STRING_LITERAL || _la === EDIF300Parser.DECIMAL_LITERAL) {
				{
				this.state = 4746;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__65:
					{
					this.state = 4741;
					this.complementedName();
					}
					break;
				case EDIF300Parser.T__68:
					{
					this.state = 4742;
					this.complexName();
					}
					break;
				case EDIF300Parser.DECIMAL_LITERAL:
					{
					this.state = 4743;
					this.integerValue();
					}
					break;
				case EDIF300Parser.T__574:
					{
					this.state = 4744;
					this.sequence();
					}
					break;
				case EDIF300Parser.STRING_LITERAL:
					{
					this.state = 4745;
					this.simpleName();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4750;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4751;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nameInformation(): NameInformationContext {
		let _localctx: NameInformationContext = new NameInformationContext(this._ctx, this.state);
		this.enterRule(_localctx, 884, EDIF300Parser.RULE_nameInformation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4753;
			this.match(EDIF300Parser.T__346);
			this.state = 4754;
			this.primaryName();
			this.state = 4758;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__342) {
				{
				{
				this.state = 4755;
				this.nameAlias();
				}
				}
				this.state = 4760;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4761;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public namePartSeparator(): NamePartSeparatorContext {
		let _localctx: NamePartSeparatorContext = new NamePartSeparatorContext(this._ctx, this.state);
		this.enterRule(_localctx, 886, EDIF300Parser.RULE_namePartSeparator);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4763;
			this.match(EDIF300Parser.T__347);
			this.state = 4764;
			this.stringToken();
			this.state = 4765;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nameRef(): NameRefContext {
		let _localctx: NameRefContext = new NameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 888, EDIF300Parser.RULE_nameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4767;
			this.match(EDIF300Parser.IDENTIFIER);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nameStructure(): NameStructureContext {
		let _localctx: NameStructureContext = new NameStructureContext(this._ctx, this.state);
		this.enterRule(_localctx, 890, EDIF300Parser.RULE_nameStructure);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4769;
			this.match(EDIF300Parser.T__348);
			this.state = 4773;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.STRING_LITERAL:
				{
				this.state = 4770;
				this.simpleName();
				}
				break;
			case EDIF300Parser.T__68:
				{
				this.state = 4771;
				this.complexName();
				}
				break;
			case EDIF300Parser.T__65:
				{
				this.state = 4772;
				this.complementedName();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4775;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public narrowPort(): NarrowPortContext {
		let _localctx: NarrowPortContext = new NarrowPortContext(this._ctx, this.state);
		this.enterRule(_localctx, 892, EDIF300Parser.RULE_narrowPort);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4777;
			this.match(EDIF300Parser.T__349);
			this.state = 4778;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public narrowWire(): NarrowWireContext {
		let _localctx: NarrowWireContext = new NarrowWireContext(this._ctx, this.state);
		this.enterRule(_localctx, 894, EDIF300Parser.RULE_narrowWire);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4780;
			this.match(EDIF300Parser.T__350);
			this.state = 4781;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public noHotspotGrid(): NoHotspotGridContext {
		let _localctx: NoHotspotGridContext = new NoHotspotGridContext(this._ctx, this.state);
		this.enterRule(_localctx, 896, EDIF300Parser.RULE_noHotspotGrid);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4783;
			this.match(EDIF300Parser.T__351);
			this.state = 4784;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nominalHotspotGrid(): NominalHotspotGridContext {
		let _localctx: NominalHotspotGridContext = new NominalHotspotGridContext(this._ctx, this.state);
		this.enterRule(_localctx, 898, EDIF300Parser.RULE_nominalHotspotGrid);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4786;
			this.match(EDIF300Parser.T__352);
			this.state = 4787;
			this.lengthValue();
			this.state = 4788;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public nonPermutable(): NonPermutableContext {
		let _localctx: NonPermutableContext = new NonPermutableContext(this._ctx, this.state);
		this.enterRule(_localctx, 900, EDIF300Parser.RULE_nonPermutable);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4790;
			this.match(EDIF300Parser.T__353);
			this.state = 4795;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__406 || _la === EDIF300Parser.T__436) {
				{
				this.state = 4793;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__406:
					{
					this.state = 4791;
					this.permutable();
					}
					break;
				case EDIF300Parser.T__436:
					{
					this.state = 4792;
					this.portRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4797;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4798;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public not_(): Not_Context {
		let _localctx: Not_Context = new Not_Context(this._ctx, this.state);
		this.enterRule(_localctx, 902, EDIF300Parser.RULE_not_);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4800;
			this.match(EDIF300Parser.T__354);
			this.state = 4801;
			this.booleanExpression();
			this.state = 4802;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public notInherited(): NotInheritedContext {
		let _localctx: NotInheritedContext = new NotInheritedContext(this._ctx, this.state);
		this.enterRule(_localctx, 904, EDIF300Parser.RULE_notInherited);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4804;
			this.match(EDIF300Parser.T__355);
			this.state = 4805;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public number(): NumberContext {
		let _localctx: NumberContext = new NumberContext(this._ctx, this.state);
		this.enterRule(_localctx, 906, EDIF300Parser.RULE_number);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4807;
			this.match(EDIF300Parser.T__356);
			this.state = 4808;
			this.numberExpression();
			this.state = 4809;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public numberExpression(): NumberExpressionContext {
		let _localctx: NumberExpressionContext = new NumberExpressionContext(this._ctx, this.state);
		this.enterRule(_localctx, 908, EDIF300Parser.RULE_numberExpression);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4813;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__145:
			case EDIF300Parser.DECIMAL_LITERAL:
				{
				this.state = 4811;
				this.numberValue();
				}
				break;
			case EDIF300Parser.T__359:
				{
				this.state = 4812;
				this.numberParameterRef();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public numberOfBasicUnits(): NumberOfBasicUnitsContext {
		let _localctx: NumberOfBasicUnitsContext = new NumberOfBasicUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 910, EDIF300Parser.RULE_numberOfBasicUnits);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4815;
			this.scaledInteger();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public numberOfNewUnits(): NumberOfNewUnitsContext {
		let _localctx: NumberOfNewUnitsContext = new NumberOfNewUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 912, EDIF300Parser.RULE_numberOfNewUnits);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4817;
			this.scaledInteger();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public numberParameter(): NumberParameterContext {
		let _localctx: NumberParameterContext = new NumberParameterContext(this._ctx, this.state);
		this.enterRule(_localctx, 914, EDIF300Parser.RULE_numberParameter);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4819;
			this.match(EDIF300Parser.T__357);
			this.state = 4820;
			this.parameterNameDef();
			this.state = 4825;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__356) {
				{
				this.state = 4823;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__346:
					{
					this.state = 4821;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__356:
					{
					this.state = 4822;
					this.number();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4827;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4828;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public numberParameterAssign(): NumberParameterAssignContext {
		let _localctx: NumberParameterAssignContext = new NumberParameterAssignContext(this._ctx, this.state);
		this.enterRule(_localctx, 916, EDIF300Parser.RULE_numberParameterAssign);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4830;
			this.match(EDIF300Parser.T__358);
			this.state = 4831;
			this.parameterNameRef();
			this.state = 4832;
			this.numberExpression();
			this.state = 4833;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public numberParameterRef(): NumberParameterRefContext {
		let _localctx: NumberParameterRefContext = new NumberParameterRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 918, EDIF300Parser.RULE_numberParameterRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4835;
			this.match(EDIF300Parser.T__359);
			this.state = 4836;
			this.parameterNameRef();
			this.state = 4837;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public numberPoint(): NumberPointContext {
		let _localctx: NumberPointContext = new NumberPointContext(this._ctx, this.state);
		this.enterRule(_localctx, 920, EDIF300Parser.RULE_numberPoint);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4839;
			this.match(EDIF300Parser.T__360);
			this.state = 4840;
			this.xNumberValue();
			this.state = 4841;
			this.yNumberValue();
			this.state = 4842;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public numberValue(): NumberValueContext {
		let _localctx: NumberValueContext = new NumberValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 922, EDIF300Parser.RULE_numberValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4844;
			this.scaledInteger();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public numerator(): NumeratorContext {
		let _localctx: NumeratorContext = new NumeratorContext(this._ctx, this.state);
		this.enterRule(_localctx, 924, EDIF300Parser.RULE_numerator);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4846;
			this.integerValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public occurrenceAnnotate(): OccurrenceAnnotateContext {
		let _localctx: OccurrenceAnnotateContext = new OccurrenceAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 926, EDIF300Parser.RULE_occurrenceAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4848;
			this.match(EDIF300Parser.T__361);
			this.state = 4851;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.IDENTIFIER:
				{
				this.state = 4849;
				this.extendInstanceDef();
				}
				break;
			case EDIF300Parser.T__235:
				{
				this.state = 4850;
				this.extendInstanceMemberDef();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4873;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 43)) & ~0x1F) === 0 && ((1 << (_la - 43)) & ((1 << (EDIF300Parser.T__42 - 43)) | (1 << (EDIF300Parser.T__58 - 43)) | (1 << (EDIF300Parser.T__61 - 43)))) !== 0) || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__177 || _la === EDIF300Parser.T__216 || _la === EDIF300Parser.T__243 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__305 || ((((_la - 362)) & ~0x1F) === 0 && ((1 << (_la - 362)) & ((1 << (EDIF300Parser.T__361 - 362)) | (1 << (EDIF300Parser.T__372 - 362)) | (1 << (EDIF300Parser.T__379 - 362)))) !== 0) || _la === EDIF300Parser.T__415 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__585 || _la === EDIF300Parser.T__587 || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__652) {
				{
				this.state = 4871;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__42:
					{
					this.state = 4853;
					this.cellPropertyOverride();
					}
					break;
				case EDIF300Parser.T__58:
					{
					this.state = 4854;
					this.clusterPropertyOverride();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 4855;
					this.comment();
					}
					break;
				case EDIF300Parser.T__118:
					{
					this.state = 4856;
					this.designator();
					}
					break;
				case EDIF300Parser.T__177:
					{
					this.state = 4857;
					this.forFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__216:
					{
					this.state = 4858;
					this.ifFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__243:
					{
					this.state = 4859;
					this.instancePropertyOverride();
					}
					break;
				case EDIF300Parser.T__259:
					{
					this.state = 4860;
					this.interconnectAnnotate();
					}
					break;
				case EDIF300Parser.T__305:
					{
					this.state = 4861;
					this.leafOccurrenceAnnotate();
					}
					break;
				case EDIF300Parser.T__361:
					{
					this.state = 4862;
					this.occurrenceAnnotate();
					}
					break;
				case EDIF300Parser.T__372:
					{
					this.state = 4863;
					this.otherwiseFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__379:
					{
					this.state = 4864;
					this.pageAnnotate();
					}
					break;
				case EDIF300Parser.T__415:
					{
					this.state = 4865;
					this.portAnnotate();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 4866;
					this.property();
					}
					break;
				case EDIF300Parser.T__585:
					{
					this.state = 4867;
					this.signalAnnotate();
					}
					break;
				case EDIF300Parser.T__587:
					{
					this.state = 4868;
					this.signalGroupAnnotate();
					}
					break;
				case EDIF300Parser.T__619:
					{
					this.state = 4869;
					this.timing();
					}
					break;
				case EDIF300Parser.T__652:
					{
					this.state = 4870;
					this.viewPropertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4875;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4876;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public occurrenceHierarchyAnnotate(): OccurrenceHierarchyAnnotateContext {
		let _localctx: OccurrenceHierarchyAnnotateContext = new OccurrenceHierarchyAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 928, EDIF300Parser.RULE_occurrenceHierarchyAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4878;
			this.match(EDIF300Parser.T__362);
			this.state = 4896;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 43)) & ~0x1F) === 0 && ((1 << (_la - 43)) & ((1 << (EDIF300Parser.T__42 - 43)) | (1 << (EDIF300Parser.T__58 - 43)) | (1 << (EDIF300Parser.T__61 - 43)))) !== 0) || _la === EDIF300Parser.T__177 || _la === EDIF300Parser.T__216 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__305 || ((((_la - 362)) & ~0x1F) === 0 && ((1 << (_la - 362)) & ((1 << (EDIF300Parser.T__361 - 362)) | (1 << (EDIF300Parser.T__372 - 362)) | (1 << (EDIF300Parser.T__379 - 362)))) !== 0) || _la === EDIF300Parser.T__415 || _la === EDIF300Parser.T__585 || _la === EDIF300Parser.T__587 || _la === EDIF300Parser.T__619 || _la === EDIF300Parser.T__652) {
				{
				this.state = 4894;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__42:
					{
					this.state = 4879;
					this.cellPropertyOverride();
					}
					break;
				case EDIF300Parser.T__58:
					{
					this.state = 4880;
					this.clusterPropertyOverride();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 4881;
					this.comment();
					}
					break;
				case EDIF300Parser.T__177:
					{
					this.state = 4882;
					this.forFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__216:
					{
					this.state = 4883;
					this.ifFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__259:
					{
					this.state = 4884;
					this.interconnectAnnotate();
					}
					break;
				case EDIF300Parser.T__305:
					{
					this.state = 4885;
					this.leafOccurrenceAnnotate();
					}
					break;
				case EDIF300Parser.T__361:
					{
					this.state = 4886;
					this.occurrenceAnnotate();
					}
					break;
				case EDIF300Parser.T__372:
					{
					this.state = 4887;
					this.otherwiseFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__379:
					{
					this.state = 4888;
					this.pageAnnotate();
					}
					break;
				case EDIF300Parser.T__415:
					{
					this.state = 4889;
					this.portAnnotate();
					}
					break;
				case EDIF300Parser.T__585:
					{
					this.state = 4890;
					this.signalAnnotate();
					}
					break;
				case EDIF300Parser.T__587:
					{
					this.state = 4891;
					this.signalGroupAnnotate();
					}
					break;
				case EDIF300Parser.T__619:
					{
					this.state = 4892;
					this.timing();
					}
					break;
				case EDIF300Parser.T__652:
					{
					this.state = 4893;
					this.viewPropertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4898;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4899;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public offsetEvent(): OffsetEventContext {
		let _localctx: OffsetEventContext = new OffsetEventContext(this._ctx, this.state);
		this.enterRule(_localctx, 930, EDIF300Parser.RULE_offsetEvent);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4901;
			this.match(EDIF300Parser.T__363);
			this.state = 4902;
			this.event();
			this.state = 4903;
			this.numberValue();
			this.state = 4904;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ohm(): OhmContext {
		let _localctx: OhmContext = new OhmContext(this._ctx, this.state);
		this.enterRule(_localctx, 932, EDIF300Parser.RULE_ohm);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4906;
			this.match(EDIF300Parser.T__364);
			this.state = 4907;
			this.unitExponent();
			this.state = 4908;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public openShape(): OpenShapeContext {
		let _localctx: OpenShapeContext = new OpenShapeContext(this._ctx, this.state);
		this.enterRule(_localctx, 934, EDIF300Parser.RULE_openShape);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4910;
			this.match(EDIF300Parser.T__365);
			this.state = 4911;
			this.curve();
			this.state = 4912;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public or_(): Or_Context {
		let _localctx: Or_Context = new Or_Context(this._ctx, this.state);
		this.enterRule(_localctx, 936, EDIF300Parser.RULE_or_);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4914;
			this.match(EDIF300Parser.T__366);
			this.state = 4918;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << EDIF300Parser.T__6) | (1 << EDIF300Parser.T__25) | (1 << EDIF300Parser.T__29))) !== 0) || _la === EDIF300Parser.T__157 || _la === EDIF300Parser.T__250 || _la === EDIF300Parser.T__307 || _la === EDIF300Parser.T__308 || _la === EDIF300Parser.T__354 || _la === EDIF300Parser.T__366 || _la === EDIF300Parser.T__603 || _la === EDIF300Parser.T__626 || _la === EDIF300Parser.T__664) {
				{
				{
				this.state = 4915;
				this.booleanExpression();
				}
				}
				this.state = 4920;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4921;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public origin(): OriginContext {
		let _localctx: OriginContext = new OriginContext(this._ctx, this.state);
		this.enterRule(_localctx, 938, EDIF300Parser.RULE_origin);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4923;
			this.match(EDIF300Parser.T__367);
			this.state = 4924;
			this.pointValue();
			this.state = 4925;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public originalBoundingBox(): OriginalBoundingBoxContext {
		let _localctx: OriginalBoundingBoxContext = new OriginalBoundingBoxContext(this._ctx, this.state);
		this.enterRule(_localctx, 940, EDIF300Parser.RULE_originalBoundingBox);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4927;
			this.match(EDIF300Parser.T__368);
			this.state = 4928;
			this.rectangle();
			this.state = 4929;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public originalDrawingDate(): OriginalDrawingDateContext {
		let _localctx: OriginalDrawingDateContext = new OriginalDrawingDateContext(this._ctx, this.state);
		this.enterRule(_localctx, 942, EDIF300Parser.RULE_originalDrawingDate);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4931;
			this.match(EDIF300Parser.T__369);
			this.state = 4932;
			this.date();
			this.state = 4933;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public originalDrawingDateDisplay(): OriginalDrawingDateDisplayContext {
		let _localctx: OriginalDrawingDateDisplayContext = new OriginalDrawingDateDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 944, EDIF300Parser.RULE_originalDrawingDateDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4935;
			this.match(EDIF300Parser.T__370);
			this.state = 4939;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 4936;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 4937;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 4938;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 4941;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public originalName(): OriginalNameContext {
		let _localctx: OriginalNameContext = new OriginalNameContext(this._ctx, this.state);
		this.enterRule(_localctx, 946, EDIF300Parser.RULE_originalName);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4943;
			this.stringToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public otherwiseFrame(): OtherwiseFrameContext {
		let _localctx: OtherwiseFrameContext = new OtherwiseFrameContext(this._ctx, this.state);
		this.enterRule(_localctx, 948, EDIF300Parser.RULE_otherwiseFrame);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4945;
			this.match(EDIF300Parser.T__371);
			this.state = 4946;
			this.frameNameDef();
			this.state = 4947;
			this.ifFrameSet();
			this.state = 4948;
			this.logicalConnectivity();
			this.state = 4956;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
				{
				this.state = 4954;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4949;
					this.comment();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 4950;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 4951;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 4952;
					this.property();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 4953;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4958;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4959;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public otherwiseFrameAnnotate(): OtherwiseFrameAnnotateContext {
		let _localctx: OtherwiseFrameAnnotateContext = new OtherwiseFrameAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 950, EDIF300Parser.RULE_otherwiseFrameAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4961;
			this.match(EDIF300Parser.T__372);
			this.state = 4962;
			this.extendFrameDef();
			this.state = 4973;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__177 || _la === EDIF300Parser.T__216 || _la === EDIF300Parser.T__259 || _la === EDIF300Parser.T__305 || _la === EDIF300Parser.T__361 || _la === EDIF300Parser.T__372 || _la === EDIF300Parser.T__448) {
				{
				this.state = 4971;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 4963;
					this.comment();
					}
					break;
				case EDIF300Parser.T__177:
					{
					this.state = 4964;
					this.forFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__216:
					{
					this.state = 4965;
					this.ifFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__259:
					{
					this.state = 4966;
					this.interconnectAnnotate();
					}
					break;
				case EDIF300Parser.T__305:
					{
					this.state = 4967;
					this.leafOccurrenceAnnotate();
					}
					break;
				case EDIF300Parser.T__361:
					{
					this.state = 4968;
					this.occurrenceAnnotate();
					}
					break;
				case EDIF300Parser.T__372:
					{
					this.state = 4969;
					this.otherwiseFrameAnnotate();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 4970;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4975;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4976;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public otherwiseFrameRef(): OtherwiseFrameRefContext {
		let _localctx: OtherwiseFrameRefContext = new OtherwiseFrameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 952, EDIF300Parser.RULE_otherwiseFrameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4978;
			this.match(EDIF300Parser.T__373);
			this.state = 4979;
			this.frameNameRef();
			this.state = 4980;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public output(): OutputContext {
		let _localctx: OutputContext = new OutputContext(this._ctx, this.state);
		this.enterRule(_localctx, 954, EDIF300Parser.RULE_output);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4982;
			this.match(EDIF300Parser.T__374);
			this.state = 4983;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public outputPort(): OutputPortContext {
		let _localctx: OutputPortContext = new OutputPortContext(this._ctx, this.state);
		this.enterRule(_localctx, 956, EDIF300Parser.RULE_outputPort);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4985;
			this.match(EDIF300Parser.T__375);
			this.state = 4987;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__376) {
				{
				this.state = 4986;
				this.outputPortAttributes();
				}
			}

			this.state = 4989;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public outputPortAttributes(): OutputPortAttributesContext {
		let _localctx: OutputPortAttributesContext = new OutputPortAttributesContext(this._ctx, this.state);
		this.enterRule(_localctx, 958, EDIF300Parser.RULE_outputPortAttributes);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 4991;
			this.match(EDIF300Parser.T__376);
			this.state = 4996;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__103 || _la === EDIF300Parser.T__109) {
				{
				this.state = 4994;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__103:
					{
					this.state = 4992;
					this.dcFanInLoad();
					}
					break;
				case EDIF300Parser.T__109:
					{
					this.state = 4993;
					this.dcMaxFanOut();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 4998;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 4999;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public owner(): OwnerContext {
		let _localctx: OwnerContext = new OwnerContext(this._ctx, this.state);
		this.enterRule(_localctx, 960, EDIF300Parser.RULE_owner);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5001;
			this.match(EDIF300Parser.T__377);
			this.state = 5002;
			this.stringValue();
			this.state = 5003;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public page(): PageContext {
		let _localctx: PageContext = new PageContext(this._ctx, this.state);
		this.enterRule(_localctx, 962, EDIF300Parser.RULE_page);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5005;
			this.match(EDIF300Parser.T__378);
			this.state = 5006;
			this.pageNameDef();
			this.state = 5007;
			this.pageHeader();
			this.state = 5030;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 41)) & ~0x1F) === 0 && ((1 << (_la - 41)) & ((1 << (EDIF300Parser.T__40 - 41)) | (1 << (EDIF300Parser.T__56 - 41)) | (1 << (EDIF300Parser.T__61 - 41)))) !== 0) || _la === EDIF300Parser.T__315 || _la === EDIF300Parser.T__383 || _la === EDIF300Parser.T__392 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__469 || ((((_la - 481)) & ~0x1F) === 0 && ((1 << (_la - 481)) & ((1 << (EDIF300Parser.T__480 - 481)) | (1 << (EDIF300Parser.T__484 - 481)) | (1 << (EDIF300Parser.T__491 - 481)) | (1 << (EDIF300Parser.T__494 - 481)) | (1 << (EDIF300Parser.T__506 - 481)) | (1 << (EDIF300Parser.T__511 - 481)))) !== 0) || ((((_la - 516)) & ~0x1F) === 0 && ((1 << (_la - 516)) & ((1 << (EDIF300Parser.T__515 - 516)) | (1 << (EDIF300Parser.T__519 - 516)) | (1 << (EDIF300Parser.T__526 - 516)) | (1 << (EDIF300Parser.T__546 - 516)))) !== 0) || _la === EDIF300Parser.T__642 || _la === EDIF300Parser.T__651) {
				{
				this.state = 5028;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__40:
					{
					this.state = 5008;
					this.cellPropertyDisplay();
					}
					break;
				case EDIF300Parser.T__56:
					{
					this.state = 5009;
					this.clusterPropertyDisplay();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 5010;
					this.comment();
					}
					break;
				case EDIF300Parser.T__315:
					{
					this.state = 5011;
					this.localPortGroup();
					}
					break;
				case EDIF300Parser.T__383:
					{
					this.state = 5012;
					this.pageCommentGraphics();
					}
					break;
				case EDIF300Parser.T__392:
					{
					this.state = 5013;
					this.pageTitleBlock();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 5014;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__469:
					{
					this.state = 5015;
					this.schematicBus();
					}
					break;
				case EDIF300Parser.T__480:
					{
					this.state = 5016;
					this.schematicForFrameImplementation();
					}
					break;
				case EDIF300Parser.T__484:
					{
					this.state = 5017;
					this.schematicGlobalPortImplementation();
					}
					break;
				case EDIF300Parser.T__491:
					{
					this.state = 5018;
					this.schematicIfFrameImplementation();
					}
					break;
				case EDIF300Parser.T__494:
					{
					this.state = 5019;
					this.schematicInstanceImplementation();
					}
					break;
				case EDIF300Parser.T__506:
					{
					this.state = 5020;
					this.schematicMasterPortImplementation();
					}
					break;
				case EDIF300Parser.T__511:
					{
					this.state = 5021;
					this.schematicNet();
					}
					break;
				case EDIF300Parser.T__515:
					{
					this.state = 5022;
					this.schematicOffPageConnectorImplementation();
					}
					break;
				case EDIF300Parser.T__519:
					{
					this.state = 5023;
					this.schematicOnPageConnectorImplementation();
					}
					break;
				case EDIF300Parser.T__526:
					{
					this.state = 5024;
					this.schematicOtherwiseFrameImplementation();
					}
					break;
				case EDIF300Parser.T__546:
					{
					this.state = 5025;
					this.schematicRipperImplementation();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 5026;
					this.userData();
					}
					break;
				case EDIF300Parser.T__651:
					{
					this.state = 5027;
					this.viewPropertyDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5032;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5033;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageAnnotate(): PageAnnotateContext {
		let _localctx: PageAnnotateContext = new PageAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 964, EDIF300Parser.RULE_pageAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5035;
			this.match(EDIF300Parser.T__379);
			this.state = 5036;
			this.extendPageDef();
			this.state = 5040;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__259) {
				{
				{
				this.state = 5037;
				this.interconnectAnnotate();
				}
				}
				this.state = 5042;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5043;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageBorder(): PageBorderContext {
		let _localctx: PageBorderContext = new PageBorderContext(this._ctx, this.state);
		this.enterRule(_localctx, 966, EDIF300Parser.RULE_pageBorder);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5045;
			this.match(EDIF300Parser.T__380);
			this.state = 5046;
			this.pageBorderTemplateRef();
			this.state = 5047;
			this.transform();
			this.state = 5052;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
				{
				this.state = 5050;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__444:
					{
					this.state = 5048;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 5049;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5054;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5055;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageBorderTemplate(): PageBorderTemplateContext {
		let _localctx: PageBorderTemplateContext = new PageBorderTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 968, EDIF300Parser.RULE_pageBorderTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5057;
			this.match(EDIF300Parser.T__381);
			this.state = 5058;
			this.libraryObjectNameDef();
			this.state = 5059;
			this.schematicTemplateHeader();
			this.state = 5060;
			this.usableArea();
			this.state = 5068;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
				{
				this.state = 5066;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 5061;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 5062;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 5063;
					this.figure();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 5064;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 5065;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5070;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5071;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageBorderTemplateRef(): PageBorderTemplateRefContext {
		let _localctx: PageBorderTemplateRefContext = new PageBorderTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 970, EDIF300Parser.RULE_pageBorderTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5073;
			this.match(EDIF300Parser.T__382);
			this.state = 5074;
			this.libraryObjectNameRef();
			this.state = 5076;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 5075;
				this.libraryRef();
				}
			}

			this.state = 5078;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageCommentGraphics(): PageCommentGraphicsContext {
		let _localctx: PageCommentGraphicsContext = new PageCommentGraphicsContext(this._ctx, this.state);
		this.enterRule(_localctx, 972, EDIF300Parser.RULE_pageCommentGraphics);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5080;
			this.match(EDIF300Parser.T__383);
			this.state = 5088;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__642) {
				{
				this.state = 5086;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 5081;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 5082;
					this.comment();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 5083;
					this.figure();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 5084;
					this.schematicComplexFigure();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 5085;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5090;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5091;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageHeader(): PageHeaderContext {
		let _localctx: PageHeaderContext = new PageHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 974, EDIF300Parser.RULE_pageHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5093;
			this.match(EDIF300Parser.T__384);
			this.state = 5104;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__368 || _la === EDIF300Parser.T__380 || _la === EDIF300Parser.T__390 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
				{
				this.state = 5102;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__14:
					{
					this.state = 5094;
					this.backgroundColor();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 5095;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 5096;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__368:
					{
					this.state = 5097;
					this.originalBoundingBox();
					}
					break;
				case EDIF300Parser.T__380:
					{
					this.state = 5098;
					this.pageBorder();
					}
					break;
				case EDIF300Parser.T__390:
					{
					this.state = 5099;
					this.pageSize();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 5100;
					this.property();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 5101;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5106;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5107;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageIdentification(): PageIdentificationContext {
		let _localctx: PageIdentificationContext = new PageIdentificationContext(this._ctx, this.state);
		this.enterRule(_localctx, 976, EDIF300Parser.RULE_pageIdentification);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5109;
			this.match(EDIF300Parser.T__385);
			this.state = 5110;
			this.stringToken();
			this.state = 5111;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageIdentificationDisplay(): PageIdentificationDisplayContext {
		let _localctx: PageIdentificationDisplayContext = new PageIdentificationDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 978, EDIF300Parser.RULE_pageIdentificationDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5113;
			this.match(EDIF300Parser.T__386);
			this.state = 5117;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 5114;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 5115;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 5116;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5119;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageNameCaseSensitive(): PageNameCaseSensitiveContext {
		let _localctx: PageNameCaseSensitiveContext = new PageNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 980, EDIF300Parser.RULE_pageNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5121;
			this.match(EDIF300Parser.T__387);
			this.state = 5122;
			this.booleanToken();
			this.state = 5123;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageNameDef(): PageNameDefContext {
		let _localctx: PageNameDefContext = new PageNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 982, EDIF300Parser.RULE_pageNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5125;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageNameRef(): PageNameRefContext {
		let _localctx: PageNameRefContext = new PageNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 984, EDIF300Parser.RULE_pageNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5127;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pagePropertyDisplay(): PagePropertyDisplayContext {
		let _localctx: PagePropertyDisplayContext = new PagePropertyDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 986, EDIF300Parser.RULE_pagePropertyDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5129;
			this.match(EDIF300Parser.T__388);
			this.state = 5130;
			this.propertyNameRef();
			this.state = 5135;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
				{
				this.state = 5133;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 5131;
					this.display();
					}
					break;
				case EDIF300Parser.T__447:
					{
					this.state = 5132;
					this.propertyNameDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5137;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5138;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageRef(): PageRefContext {
		let _localctx: PageRefContext = new PageRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 988, EDIF300Parser.RULE_pageRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5140;
			this.match(EDIF300Parser.T__389);
			this.state = 5141;
			this.pageNameRef();
			this.state = 5142;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageSize(): PageSizeContext {
		let _localctx: PageSizeContext = new PageSizeContext(this._ctx, this.state);
		this.enterRule(_localctx, 990, EDIF300Parser.RULE_pageSize);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5144;
			this.match(EDIF300Parser.T__390);
			this.state = 5145;
			this.rectangle();
			this.state = 5146;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageTitle(): PageTitleContext {
		let _localctx: PageTitleContext = new PageTitleContext(this._ctx, this.state);
		this.enterRule(_localctx, 992, EDIF300Parser.RULE_pageTitle);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5148;
			this.match(EDIF300Parser.T__391);
			this.state = 5149;
			this.stringToken();
			this.state = 5150;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageTitleBlock(): PageTitleBlockContext {
		let _localctx: PageTitleBlockContext = new PageTitleBlockContext(this._ctx, this.state);
		this.enterRule(_localctx, 994, EDIF300Parser.RULE_pageTitleBlock);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5152;
			this.match(EDIF300Parser.T__392);
			this.state = 5153;
			this.implementationNameDef();
			this.state = 5154;
			this.pageTitleBlockTemplateRef();
			this.state = 5155;
			this.transform();
			this.state = 5166;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__346 || ((((_la - 389)) & ~0x1F) === 0 && ((1 << (_la - 389)) & ((1 << (EDIF300Parser.T__388 - 389)) | (1 << (EDIF300Parser.T__393 - 389)) | (1 << (EDIF300Parser.T__394 - 389)))) !== 0) || ((((_la - 443)) & ~0x1F) === 0 && ((1 << (_la - 443)) & ((1 << (EDIF300Parser.T__442 - 443)) | (1 << (EDIF300Parser.T__443 - 443)) | (1 << (EDIF300Parser.T__444 - 443)) | (1 << (EDIF300Parser.T__448 - 443)))) !== 0)) {
				{
				this.state = 5164;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__346:
					{
					this.state = 5156;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__388:
					{
					this.state = 5157;
					this.pagePropertyDisplay();
					}
					break;
				case EDIF300Parser.T__393:
					{
					this.state = 5158;
					this.pageTitleBlockAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__394:
					{
					this.state = 5159;
					this.pageTitleBlockAttributes();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 5160;
					this.property();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 5161;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 5162;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 5163;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5168;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5169;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageTitleBlockAttributeDisplay(): PageTitleBlockAttributeDisplayContext {
		let _localctx: PageTitleBlockAttributeDisplayContext = new PageTitleBlockAttributeDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 996, EDIF300Parser.RULE_pageTitleBlockAttributeDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5171;
			this.match(EDIF300Parser.T__393);
			this.state = 5188;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__9 || _la === EDIF300Parser.T__48 || _la === EDIF300Parser.T__64 || _la === EDIF300Parser.T__92 || _la === EDIF300Parser.T__94 || ((((_la - 140)) & ~0x1F) === 0 && ((1 << (_la - 140)) & ((1 << (EDIF300Parser.T__139 - 140)) | (1 << (EDIF300Parser.T__141 - 140)) | (1 << (EDIF300Parser.T__143 - 140)) | (1 << (EDIF300Parser.T__152 - 140)))) !== 0) || ((((_la - 371)) & ~0x1F) === 0 && ((1 << (_la - 371)) & ((1 << (EDIF300Parser.T__370 - 371)) | (1 << (EDIF300Parser.T__386 - 371)) | (1 << (EDIF300Parser.T__397 - 371)))) !== 0) || _la === EDIF300Parser.T__461 || _la === EDIF300Parser.T__623) {
				{
				this.state = 5186;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__9:
					{
					this.state = 5172;
					this.approvedDateDisplay();
					}
					break;
				case EDIF300Parser.T__48:
					{
					this.state = 5173;
					this.checkDateDisplay();
					}
					break;
				case EDIF300Parser.T__64:
					{
					this.state = 5174;
					this.companyNameDisplay();
					}
					break;
				case EDIF300Parser.T__92:
					{
					this.state = 5175;
					this.contractDisplay();
					}
					break;
				case EDIF300Parser.T__94:
					{
					this.state = 5176;
					this.copyrightDisplay();
					}
					break;
				case EDIF300Parser.T__139:
					{
					this.state = 5177;
					this.drawingDescriptionDisplay();
					}
					break;
				case EDIF300Parser.T__141:
					{
					this.state = 5178;
					this.drawingIdentificationDisplay();
					}
					break;
				case EDIF300Parser.T__143:
					{
					this.state = 5179;
					this.drawingSizeDisplay();
					}
					break;
				case EDIF300Parser.T__152:
					{
					this.state = 5180;
					this.engineeringDateDisplay();
					}
					break;
				case EDIF300Parser.T__370:
					{
					this.state = 5181;
					this.originalDrawingDateDisplay();
					}
					break;
				case EDIF300Parser.T__386:
					{
					this.state = 5182;
					this.pageIdentificationDisplay();
					}
					break;
				case EDIF300Parser.T__397:
					{
					this.state = 5183;
					this.pageTitleDisplay();
					}
					break;
				case EDIF300Parser.T__461:
					{
					this.state = 5184;
					this.revisionDisplay();
					}
					break;
				case EDIF300Parser.T__623:
					{
					this.state = 5185;
					this.totalPagesDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5190;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5191;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageTitleBlockAttributes(): PageTitleBlockAttributesContext {
		let _localctx: PageTitleBlockAttributesContext = new PageTitleBlockAttributesContext(this._ctx, this.state);
		this.enterRule(_localctx, 998, EDIF300Parser.RULE_pageTitleBlockAttributes);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5193;
			this.match(EDIF300Parser.T__394);
			this.state = 5208;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__8 || _la === EDIF300Parser.T__47 || _la === EDIF300Parser.T__63 || _la === EDIF300Parser.T__91 || ((((_la - 139)) & ~0x1F) === 0 && ((1 << (_la - 139)) & ((1 << (EDIF300Parser.T__138 - 139)) | (1 << (EDIF300Parser.T__140 - 139)) | (1 << (EDIF300Parser.T__142 - 139)) | (1 << (EDIF300Parser.T__151 - 139)))) !== 0) || ((((_la - 370)) & ~0x1F) === 0 && ((1 << (_la - 370)) & ((1 << (EDIF300Parser.T__369 - 370)) | (1 << (EDIF300Parser.T__385 - 370)) | (1 << (EDIF300Parser.T__391 - 370)))) !== 0) || _la === EDIF300Parser.T__460) {
				{
				this.state = 5206;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__8:
					{
					this.state = 5194;
					this.approvedDate();
					}
					break;
				case EDIF300Parser.T__47:
					{
					this.state = 5195;
					this.checkDate();
					}
					break;
				case EDIF300Parser.T__63:
					{
					this.state = 5196;
					this.companyName();
					}
					break;
				case EDIF300Parser.T__91:
					{
					this.state = 5197;
					this.contract();
					}
					break;
				case EDIF300Parser.T__138:
					{
					this.state = 5198;
					this.drawingDescription();
					}
					break;
				case EDIF300Parser.T__140:
					{
					this.state = 5199;
					this.drawingIdentification();
					}
					break;
				case EDIF300Parser.T__142:
					{
					this.state = 5200;
					this.drawingSize();
					}
					break;
				case EDIF300Parser.T__151:
					{
					this.state = 5201;
					this.engineeringDate();
					}
					break;
				case EDIF300Parser.T__369:
					{
					this.state = 5202;
					this.originalDrawingDate();
					}
					break;
				case EDIF300Parser.T__385:
					{
					this.state = 5203;
					this.pageIdentification();
					}
					break;
				case EDIF300Parser.T__391:
					{
					this.state = 5204;
					this.pageTitle();
					}
					break;
				case EDIF300Parser.T__460:
					{
					this.state = 5205;
					this.revision();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5210;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5211;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageTitleBlockTemplate(): PageTitleBlockTemplateContext {
		let _localctx: PageTitleBlockTemplateContext = new PageTitleBlockTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1000, EDIF300Parser.RULE_pageTitleBlockTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5213;
			this.match(EDIF300Parser.T__395);
			this.state = 5214;
			this.libraryObjectNameDef();
			this.state = 5215;
			this.schematicTemplateHeader();
			this.state = 5225;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__393 || _la === EDIF300Parser.T__394 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
				{
				this.state = 5223;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 5216;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 5217;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 5218;
					this.figure();
					}
					break;
				case EDIF300Parser.T__393:
					{
					this.state = 5219;
					this.pageTitleBlockAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__394:
					{
					this.state = 5220;
					this.pageTitleBlockAttributes();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 5221;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 5222;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5227;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5228;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageTitleBlockTemplateRef(): PageTitleBlockTemplateRefContext {
		let _localctx: PageTitleBlockTemplateRefContext = new PageTitleBlockTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1002, EDIF300Parser.RULE_pageTitleBlockTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5230;
			this.match(EDIF300Parser.T__396);
			this.state = 5231;
			this.libraryObjectNameRef();
			this.state = 5233;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 5232;
				this.libraryRef();
				}
			}

			this.state = 5235;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pageTitleDisplay(): PageTitleDisplayContext {
		let _localctx: PageTitleDisplayContext = new PageTitleDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1004, EDIF300Parser.RULE_pageTitleDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5237;
			this.match(EDIF300Parser.T__397);
			this.state = 5241;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 5238;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 5239;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 5240;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5243;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public parameterDisplay(): ParameterDisplayContext {
		let _localctx: ParameterDisplayContext = new ParameterDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1006, EDIF300Parser.RULE_parameterDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5245;
			this.match(EDIF300Parser.T__398);
			this.state = 5246;
			this.parameterNameRef();
			this.state = 5250;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 5247;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 5248;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 5249;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5253;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__400) {
				{
				this.state = 5252;
				this.parameterNameDisplay();
				}
			}

			this.state = 5255;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public parameterNameCaseSensitive(): ParameterNameCaseSensitiveContext {
		let _localctx: ParameterNameCaseSensitiveContext = new ParameterNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 1008, EDIF300Parser.RULE_parameterNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5257;
			this.match(EDIF300Parser.T__399);
			this.state = 5258;
			this.booleanToken();
			this.state = 5259;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public parameterNameDef(): ParameterNameDefContext {
		let _localctx: ParameterNameDefContext = new ParameterNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1010, EDIF300Parser.RULE_parameterNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5261;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public parameterNameDisplay(): ParameterNameDisplayContext {
		let _localctx: ParameterNameDisplayContext = new ParameterNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1012, EDIF300Parser.RULE_parameterNameDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5263;
			this.match(EDIF300Parser.T__400);
			this.state = 5267;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 5264;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 5265;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 5266;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5269;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public parameterNameRef(): ParameterNameRefContext {
		let _localctx: ParameterNameRefContext = new ParameterNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1014, EDIF300Parser.RULE_parameterNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5271;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public path(): PathContext {
		let _localctx: PathContext = new PathContext(this._ctx, this.state);
		this.enterRule(_localctx, 1016, EDIF300Parser.RULE_path);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5273;
			this.match(EDIF300Parser.T__401);
			this.state = 5274;
			this.pointList();
			this.state = 5275;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pathDelay(): PathDelayContext {
		let _localctx: PathDelayContext = new PathDelayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1018, EDIF300Parser.RULE_pathDelay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5277;
			this.match(EDIF300Parser.T__402);
			this.state = 5278;
			this.delay();
			this.state = 5282;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__153) {
				{
				{
				this.state = 5279;
				this.event();
				}
				}
				this.state = 5284;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5285;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pathWidth(): PathWidthContext {
		let _localctx: PathWidthContext = new PathWidthContext(this._ctx, this.state);
		this.enterRule(_localctx, 1020, EDIF300Parser.RULE_pathWidth);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5287;
			this.match(EDIF300Parser.T__403);
			this.state = 5290;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.DECIMAL_LITERAL:
				{
				this.state = 5288;
				this.lengthValue();
				}
				break;
			case EDIF300Parser.T__334:
				{
				this.state = 5289;
				this.minimalWidth();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5292;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pcbLayoutUnits(): PcbLayoutUnitsContext {
		let _localctx: PcbLayoutUnitsContext = new PcbLayoutUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1022, EDIF300Parser.RULE_pcbLayoutUnits);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5294;
			this.match(EDIF300Parser.T__404);
			this.state = 5301;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 576)) & ~0x1F) === 0 && ((1 << (_la - 576)) & ((1 << (EDIF300Parser.T__575 - 576)) | (1 << (EDIF300Parser.T__576 - 576)) | (1 << (EDIF300Parser.T__578 - 576)) | (1 << (EDIF300Parser.T__580 - 576)))) !== 0)) {
				{
				this.state = 5299;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__575:
					{
					this.state = 5295;
					this.setAngle();
					}
					break;
				case EDIF300Parser.T__576:
					{
					this.state = 5296;
					this.setCapacitance();
					}
					break;
				case EDIF300Parser.T__578:
					{
					this.state = 5297;
					this.setDistance();
					}
					break;
				case EDIF300Parser.T__580:
					{
					this.state = 5298;
					this.setTime();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5303;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5304;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pcbLayoutView(): PcbLayoutViewContext {
		let _localctx: PcbLayoutViewContext = new PcbLayoutViewContext(this._ctx, this.state);
		this.enterRule(_localctx, 1024, EDIF300Parser.RULE_pcbLayoutView);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5306;
			this.match(EDIF300Parser.T__405);
			this.state = 5307;
			this.viewNameDef();
			this.state = 5313;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__642) {
				{
				this.state = 5311;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 5308;
					this.comment();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 5309;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 5310;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5315;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5316;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public permutable(): PermutableContext {
		let _localctx: PermutableContext = new PermutableContext(this._ctx, this.state);
		this.enterRule(_localctx, 1026, EDIF300Parser.RULE_permutable);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5318;
			this.match(EDIF300Parser.T__406);
			this.state = 5324;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__353 || _la === EDIF300Parser.T__406 || _la === EDIF300Parser.T__436) {
				{
				this.state = 5322;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__353:
					{
					this.state = 5319;
					this.nonPermutable();
					}
					break;
				case EDIF300Parser.T__406:
					{
					this.state = 5320;
					this.permutable();
					}
					break;
				case EDIF300Parser.T__436:
					{
					this.state = 5321;
					this.portRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5326;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5327;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public physicalDefaults(): PhysicalDefaultsContext {
		let _localctx: PhysicalDefaultsContext = new PhysicalDefaultsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1028, EDIF300Parser.RULE_physicalDefaults);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5329;
			this.match(EDIF300Parser.T__407);
			this.state = 5331;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__545) {
				{
				this.state = 5330;
				this.schematicRequiredDefaults();
				}
			}

			this.state = 5333;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public physicalScaling(): PhysicalScalingContext {
		let _localctx: PhysicalScalingContext = new PhysicalScalingContext(this._ctx, this.state);
		this.enterRule(_localctx, 1030, EDIF300Parser.RULE_physicalScaling);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5335;
			this.match(EDIF300Parser.T__408);
			this.state = 5348;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__87 || _la === EDIF300Parser.T__135 || _la === EDIF300Parser.T__195 || _la === EDIF300Parser.T__271 || _la === EDIF300Parser.T__323 || _la === EDIF300Parser.T__329 || _la === EDIF300Parser.T__404 || _la === EDIF300Parser.T__566 || _la === EDIF300Parser.T__612) {
				{
				this.state = 5346;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 5336;
					this.comment();
					}
					break;
				case EDIF300Parser.T__87:
					{
					this.state = 5337;
					this.connectivityUnits();
					}
					break;
				case EDIF300Parser.T__135:
					{
					this.state = 5338;
					this.documentationUnits();
					}
					break;
				case EDIF300Parser.T__195:
					{
					this.state = 5339;
					this.geometryMacroUnits();
					}
					break;
				case EDIF300Parser.T__271:
					{
					this.state = 5340;
					this.interfaceUnits();
					}
					break;
				case EDIF300Parser.T__323:
					{
					this.state = 5341;
					this.logicModelUnits();
					}
					break;
				case EDIF300Parser.T__329:
					{
					this.state = 5342;
					this.maskLayoutUnits();
					}
					break;
				case EDIF300Parser.T__404:
					{
					this.state = 5343;
					this.pcbLayoutUnits();
					}
					break;
				case EDIF300Parser.T__566:
					{
					this.state = 5344;
					this.schematicUnits();
					}
					break;
				case EDIF300Parser.T__612:
					{
					this.state = 5345;
					this.symbolicLayoutUnits();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5350;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5351;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pixelPattern(): PixelPatternContext {
		let _localctx: PixelPatternContext = new PixelPatternContext(this._ctx, this.state);
		this.enterRule(_localctx, 1032, EDIF300Parser.RULE_pixelPattern);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5353;
			this.match(EDIF300Parser.T__409);
			this.state = 5354;
			this.rowSize();
			this.state = 5358;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__410) {
				{
				{
				this.state = 5355;
				this.pixelRow();
				}
				}
				this.state = 5360;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5361;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pixelRow(): PixelRowContext {
		let _localctx: PixelRowContext = new PixelRowContext(this._ctx, this.state);
		this.enterRule(_localctx, 1034, EDIF300Parser.RULE_pixelRow);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5363;
			this.match(EDIF300Parser.T__410);
			this.state = 5367;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__157 || _la === EDIF300Parser.T__626) {
				{
				{
				this.state = 5364;
				this.booleanToken();
				}
				}
				this.state = 5369;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5370;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public point(): PointContext {
		let _localctx: PointContext = new PointContext(this._ctx, this.state);
		this.enterRule(_localctx, 1036, EDIF300Parser.RULE_point);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5372;
			this.match(EDIF300Parser.T__411);
			this.state = 5373;
			this.pointValue();
			this.state = 5374;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pointList(): PointListContext {
		let _localctx: PointListContext = new PointListContext(this._ctx, this.state);
		this.enterRule(_localctx, 1038, EDIF300Parser.RULE_pointList);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5376;
			this.match(EDIF300Parser.T__412);
			this.state = 5380;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__450) {
				{
				{
				this.state = 5377;
				this.pointValue();
				}
				}
				this.state = 5382;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5383;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pointValue(): PointValueContext {
		let _localctx: PointValueContext = new PointValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1040, EDIF300Parser.RULE_pointValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5385;
			this.pt();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public polygon(): PolygonContext {
		let _localctx: PolygonContext = new PolygonContext(this._ctx, this.state);
		this.enterRule(_localctx, 1042, EDIF300Parser.RULE_polygon);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5387;
			this.match(EDIF300Parser.T__413);
			this.state = 5388;
			this.pointList();
			this.state = 5389;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public port(): PortContext {
		let _localctx: PortContext = new PortContext(this._ctx, this.state);
		this.enterRule(_localctx, 1044, EDIF300Parser.RULE_port);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5391;
			this.match(EDIF300Parser.T__414);
			this.state = 5393;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.IDENTIFIER) {
				{
				this.state = 5392;
				this.portNameDef();
				}
			}

			this.state = 5396;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__19 || _la === EDIF300Parser.T__230 || _la === EDIF300Parser.T__375 || _la === EDIF300Parser.T__638) {
				{
				this.state = 5395;
				this.portDirection();
				}
			}

			this.state = 5413;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__2 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__113 || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__346 || ((((_la - 419)) & ~0x1F) === 0 && ((1 << (_la - 419)) & ((1 << (EDIF300Parser.T__418 - 419)) | (1 << (EDIF300Parser.T__425 - 419)) | (1 << (EDIF300Parser.T__431 - 419)) | (1 << (EDIF300Parser.T__438 - 419)) | (1 << (EDIF300Parser.T__442 - 419)))) !== 0) || _la === EDIF300Parser.T__532 || _la === EDIF300Parser.T__640 || _la === EDIF300Parser.T__642) {
				{
				this.state = 5411;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__2:
					{
					this.state = 5398;
					this.acLoad();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 5399;
					this.comment();
					}
					break;
				case EDIF300Parser.T__113:
					{
					this.state = 5400;
					this.defaultConnection();
					}
					break;
				case EDIF300Parser.T__118:
					{
					this.state = 5401;
					this.designator();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 5402;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__418:
					{
					this.state = 5403;
					this.portDelay();
					}
					break;
				case EDIF300Parser.T__425:
					{
					this.state = 5404;
					this.portLoadDelay();
					}
					break;
				case EDIF300Parser.T__431:
					{
					this.state = 5405;
					this.portNameGenerator();
					}
					break;
				case EDIF300Parser.T__438:
					{
					this.state = 5406;
					this.portWidth();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 5407;
					this.property();
					}
					break;
				case EDIF300Parser.T__532:
					{
					this.state = 5408;
					this.schematicPortAttributes();
					}
					break;
				case EDIF300Parser.T__640:
					{
					this.state = 5409;
					this.unused();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 5410;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5415;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5416;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portAnnotate(): PortAnnotateContext {
		let _localctx: PortAnnotateContext = new PortAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1046, EDIF300Parser.RULE_portAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5418;
			this.match(EDIF300Parser.T__415);
			this.state = 5421;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.IDENTIFIER:
				{
				this.state = 5419;
				this.extendPortDef();
				}
				break;
			case EDIF300Parser.T__428:
				{
				this.state = 5420;
				this.extendPortMemberDef();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5435;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__2 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__127 || ((((_la - 419)) & ~0x1F) === 0 && ((1 << (_la - 419)) & ((1 << (EDIF300Parser.T__418 - 419)) | (1 << (EDIF300Parser.T__420 - 419)) | (1 << (EDIF300Parser.T__425 - 419)) | (1 << (EDIF300Parser.T__427 - 419)) | (1 << (EDIF300Parser.T__435 - 419)) | (1 << (EDIF300Parser.T__442 - 419)))) !== 0)) {
				{
				this.state = 5433;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__2:
					{
					this.state = 5423;
					this.acLoad();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 5424;
					this.comment();
					}
					break;
				case EDIF300Parser.T__118:
					{
					this.state = 5425;
					this.designator();
					}
					break;
				case EDIF300Parser.T__127:
					{
					this.state = 5426;
					this.directionalPortAttributeOverride();
					}
					break;
				case EDIF300Parser.T__418:
					{
					this.state = 5427;
					this.portDelay();
					}
					break;
				case EDIF300Parser.T__420:
					{
					this.state = 5428;
					this.portDelayOverride();
					}
					break;
				case EDIF300Parser.T__425:
					{
					this.state = 5429;
					this.portLoadDelay();
					}
					break;
				case EDIF300Parser.T__427:
					{
					this.state = 5430;
					this.portLoadDelayOverride();
					}
					break;
				case EDIF300Parser.T__435:
					{
					this.state = 5431;
					this.portPropertyOverride();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 5432;
					this.property();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5437;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5438;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portAttributeDisplay(): PortAttributeDisplayContext {
		let _localctx: PortAttributeDisplayContext = new PortAttributeDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1048, EDIF300Parser.RULE_portAttributeDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5440;
			this.match(EDIF300Parser.T__416);
			this.state = 5455;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__3 || _la === EDIF300Parser.T__73 || _la === EDIF300Parser.T__104 || ((((_la - 107)) & ~0x1F) === 0 && ((1 << (_la - 107)) & ((1 << (EDIF300Parser.T__106 - 107)) | (1 << (EDIF300Parser.T__108 - 107)) | (1 << (EDIF300Parser.T__110 - 107)) | (1 << (EDIF300Parser.T__119 - 107)))) !== 0) || ((((_la - 420)) & ~0x1F) === 0 && ((1 << (_la - 420)) & ((1 << (EDIF300Parser.T__419 - 420)) | (1 << (EDIF300Parser.T__426 - 420)) | (1 << (EDIF300Parser.T__430 - 420)) | (1 << (EDIF300Parser.T__432 - 420)) | (1 << (EDIF300Parser.T__433 - 420)))) !== 0)) {
				{
				this.state = 5453;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__3:
					{
					this.state = 5441;
					this.acLoadDisplay();
					}
					break;
				case EDIF300Parser.T__73:
					{
					this.state = 5442;
					this.connectedSignalIndexGeneratorDisplay();
					}
					break;
				case EDIF300Parser.T__104:
					{
					this.state = 5443;
					this.dcFanInLoadDisplay();
					}
					break;
				case EDIF300Parser.T__106:
					{
					this.state = 5444;
					this.dcFanOutLoadDisplay();
					}
					break;
				case EDIF300Parser.T__108:
					{
					this.state = 5445;
					this.dcMaxFanInDisplay();
					}
					break;
				case EDIF300Parser.T__110:
					{
					this.state = 5446;
					this.dcMaxFanOutDisplay();
					}
					break;
				case EDIF300Parser.T__119:
					{
					this.state = 5447;
					this.designatorDisplay();
					}
					break;
				case EDIF300Parser.T__419:
					{
					this.state = 5448;
					this.portDelayDisplay();
					}
					break;
				case EDIF300Parser.T__426:
					{
					this.state = 5449;
					this.portLoadDelayDisplay();
					}
					break;
				case EDIF300Parser.T__430:
					{
					this.state = 5450;
					this.portNameDisplay();
					}
					break;
				case EDIF300Parser.T__432:
					{
					this.state = 5451;
					this.portNameGeneratorDisplay();
					}
					break;
				case EDIF300Parser.T__433:
					{
					this.state = 5452;
					this.portPropertyDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5457;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5458;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portBundle(): PortBundleContext {
		let _localctx: PortBundleContext = new PortBundleContext(this._ctx, this.state);
		this.enterRule(_localctx, 1050, EDIF300Parser.RULE_portBundle);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5460;
			this.match(EDIF300Parser.T__417);
			this.state = 5461;
			this.portNameDef();
			this.state = 5462;
			this.portList();
			this.state = 5470;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__118 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
				{
				this.state = 5468;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 5463;
					this.comment();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 5464;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 5465;
					this.property();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 5466;
					this.userData();
					}
					break;
				case EDIF300Parser.T__118:
					{
					this.state = 5467;
					this.designator();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5472;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5473;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portDelay(): PortDelayContext {
		let _localctx: PortDelayContext = new PortDelayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1052, EDIF300Parser.RULE_portDelay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5475;
			this.match(EDIF300Parser.T__418);
			this.state = 5476;
			this.portDelayNameDef();
			this.state = 5477;
			this.derivation();
			this.state = 5478;
			this.delay();
			this.state = 5483;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
				{
				this.state = 5481;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__16:
					{
					this.state = 5479;
					this.becomes();
					}
					break;
				case EDIF300Parser.T__625:
					{
					this.state = 5480;
					this.transition();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5485;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5486;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portDelayDisplay(): PortDelayDisplayContext {
		let _localctx: PortDelayDisplayContext = new PortDelayDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1054, EDIF300Parser.RULE_portDelayDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5488;
			this.match(EDIF300Parser.T__419);
			this.state = 5489;
			this.portDelayNameRef();
			this.state = 5493;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 5490;
				this.display();
				}
				}
				this.state = 5495;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5496;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portDelayNameDef(): PortDelayNameDefContext {
		let _localctx: PortDelayNameDefContext = new PortDelayNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1056, EDIF300Parser.RULE_portDelayNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5498;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portDelayNameRef(): PortDelayNameRefContext {
		let _localctx: PortDelayNameRefContext = new PortDelayNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1058, EDIF300Parser.RULE_portDelayNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5500;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portDelayOverride(): PortDelayOverrideContext {
		let _localctx: PortDelayOverrideContext = new PortDelayOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 1060, EDIF300Parser.RULE_portDelayOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5502;
			this.match(EDIF300Parser.T__420);
			this.state = 5503;
			this.portDelayNameRef();
			this.state = 5504;
			this.derivation();
			this.state = 5505;
			this.delay();
			this.state = 5510;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
				{
				this.state = 5508;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__16:
					{
					this.state = 5506;
					this.becomes();
					}
					break;
				case EDIF300Parser.T__625:
					{
					this.state = 5507;
					this.transition();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5512;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5513;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portDirection(): PortDirectionContext {
		let _localctx: PortDirectionContext = new PortDirectionContext(this._ctx, this.state);
		this.enterRule(_localctx, 1062, EDIF300Parser.RULE_portDirection);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5519;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__230:
				{
				this.state = 5515;
				this.inputPort();
				}
				break;
			case EDIF300Parser.T__375:
				{
				this.state = 5516;
				this.outputPort();
				}
				break;
			case EDIF300Parser.T__19:
				{
				this.state = 5517;
				this.bidirectionalPort();
				}
				break;
			case EDIF300Parser.T__638:
				{
				this.state = 5518;
				this.unspecifiedDirectionPort();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portDirectionIndicator(): PortDirectionIndicatorContext {
		let _localctx: PortDirectionIndicatorContext = new PortDirectionIndicatorContext(this._ctx, this.state);
		this.enterRule(_localctx, 1064, EDIF300Parser.RULE_portDirectionIndicator);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5527;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__229:
				{
				this.state = 5521;
				this.input();
				}
				break;
			case EDIF300Parser.T__374:
				{
				this.state = 5522;
				this.output();
				}
				break;
			case EDIF300Parser.T__18:
				{
				this.state = 5523;
				this.bidirectional();
				}
				break;
			case EDIF300Parser.T__637:
				{
				this.state = 5524;
				this.unspecified();
				}
				break;
			case EDIF300Parser.T__636:
				{
				this.state = 5525;
				this.unrestricted();
				}
				break;
			case EDIF300Parser.T__337:
				{
				this.state = 5526;
				this.mixedDirection();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portIndexValue(): PortIndexValueContext {
		let _localctx: PortIndexValueContext = new PortIndexValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1066, EDIF300Parser.RULE_portIndexValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5529;
			this.match(EDIF300Parser.T__421);
			this.state = 5530;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portInstanceRef(): PortInstanceRefContext {
		let _localctx: PortInstanceRefContext = new PortInstanceRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1068, EDIF300Parser.RULE_portInstanceRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5532;
			this.match(EDIF300Parser.T__422);
			this.state = 5535;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.IDENTIFIER:
				{
				this.state = 5533;
				this.portNameRef();
				}
				break;
			case EDIF300Parser.T__428:
				{
				this.state = 5534;
				this.portMemberRef();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5539;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__244:
				{
				this.state = 5537;
				this.instanceRef();
				}
				break;
			case EDIF300Parser.T__235:
				{
				this.state = 5538;
				this.instanceMemberRef();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5541;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portJoined(): PortJoinedContext {
		let _localctx: PortJoinedContext = new PortJoinedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1070, EDIF300Parser.RULE_portJoined);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5543;
			this.match(EDIF300Parser.T__423);
			this.state = 5550;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__203 || _la === EDIF300Parser.T__317 || _la === EDIF300Parser.T__422 || _la === EDIF300Parser.T__436) {
				{
				this.state = 5548;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__203:
					{
					this.state = 5544;
					this.globalPortRef();
					}
					break;
				case EDIF300Parser.T__317:
					{
					this.state = 5545;
					this.localPortGroupRef();
					}
					break;
				case EDIF300Parser.T__422:
					{
					this.state = 5546;
					this.portInstanceRef();
					}
					break;
				case EDIF300Parser.T__436:
					{
					this.state = 5547;
					this.portRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5552;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5553;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portList(): PortListContext {
		let _localctx: PortListContext = new PortListContext(this._ctx, this.state);
		this.enterRule(_localctx, 1072, EDIF300Parser.RULE_portList);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5555;
			this.match(EDIF300Parser.T__424);
			this.state = 5559;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__436) {
				{
				{
				this.state = 5556;
				this.portRef();
				}
				}
				this.state = 5561;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5562;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portLoadDelay(): PortLoadDelayContext {
		let _localctx: PortLoadDelayContext = new PortLoadDelayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1074, EDIF300Parser.RULE_portLoadDelay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5564;
			this.match(EDIF300Parser.T__425);
			this.state = 5565;
			this.portLoadDelayNameDef();
			this.state = 5566;
			this.derivation();
			this.state = 5567;
			this.loadDelay();
			this.state = 5572;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
				{
				this.state = 5570;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__16:
					{
					this.state = 5568;
					this.becomes();
					}
					break;
				case EDIF300Parser.T__625:
					{
					this.state = 5569;
					this.transition();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5574;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5575;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portLoadDelayDisplay(): PortLoadDelayDisplayContext {
		let _localctx: PortLoadDelayDisplayContext = new PortLoadDelayDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1076, EDIF300Parser.RULE_portLoadDelayDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5577;
			this.match(EDIF300Parser.T__426);
			this.state = 5578;
			this.portLoadDelayNameRef();
			this.state = 5582;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 5579;
				this.display();
				}
				}
				this.state = 5584;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5585;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portLoadDelayNameDef(): PortLoadDelayNameDefContext {
		let _localctx: PortLoadDelayNameDefContext = new PortLoadDelayNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1078, EDIF300Parser.RULE_portLoadDelayNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5587;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portLoadDelayNameRef(): PortLoadDelayNameRefContext {
		let _localctx: PortLoadDelayNameRefContext = new PortLoadDelayNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1080, EDIF300Parser.RULE_portLoadDelayNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5589;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portLoadDelayOverride(): PortLoadDelayOverrideContext {
		let _localctx: PortLoadDelayOverrideContext = new PortLoadDelayOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 1082, EDIF300Parser.RULE_portLoadDelayOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5591;
			this.match(EDIF300Parser.T__427);
			this.state = 5592;
			this.portLoadDelayNameRef();
			this.state = 5593;
			this.derivation();
			this.state = 5594;
			this.loadDelay();
			this.state = 5599;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__16 || _la === EDIF300Parser.T__625) {
				{
				this.state = 5597;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__16:
					{
					this.state = 5595;
					this.becomes();
					}
					break;
				case EDIF300Parser.T__625:
					{
					this.state = 5596;
					this.transition();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5601;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5602;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portMemberRef(): PortMemberRefContext {
		let _localctx: PortMemberRefContext = new PortMemberRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1084, EDIF300Parser.RULE_portMemberRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5604;
			this.match(EDIF300Parser.T__428);
			this.state = 5605;
			this.portNameRef();
			this.state = 5606;
			this.indexValue();
			this.state = 5607;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portNameCaseSensitive(): PortNameCaseSensitiveContext {
		let _localctx: PortNameCaseSensitiveContext = new PortNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 1086, EDIF300Parser.RULE_portNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5609;
			this.match(EDIF300Parser.T__429);
			this.state = 5610;
			this.booleanToken();
			this.state = 5611;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portNameDef(): PortNameDefContext {
		let _localctx: PortNameDefContext = new PortNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1088, EDIF300Parser.RULE_portNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5613;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portNameDisplay(): PortNameDisplayContext {
		let _localctx: PortNameDisplayContext = new PortNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1090, EDIF300Parser.RULE_portNameDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5615;
			this.match(EDIF300Parser.T__430);
			this.state = 5620;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
				{
				this.state = 5618;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 5616;
					this.display();
					}
					break;
				case EDIF300Parser.T__131:
					{
					this.state = 5617;
					this.displayNameOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5622;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5623;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portNameGenerator(): PortNameGeneratorContext {
		let _localctx: PortNameGeneratorContext = new PortNameGeneratorContext(this._ctx, this.state);
		this.enterRule(_localctx, 1092, EDIF300Parser.RULE_portNameGenerator);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5625;
			this.match(EDIF300Parser.T__431);
			this.state = 5626;
			this.stringExpression();
			this.state = 5627;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portNameGeneratorDisplay(): PortNameGeneratorDisplayContext {
		let _localctx: PortNameGeneratorDisplayContext = new PortNameGeneratorDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1094, EDIF300Parser.RULE_portNameGeneratorDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5629;
			this.match(EDIF300Parser.T__432);
			this.state = 5633;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 5630;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 5631;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 5632;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5635;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portNameRef(): PortNameRefContext {
		let _localctx: PortNameRefContext = new PortNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1096, EDIF300Parser.RULE_portNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5637;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portPropertyDisplay(): PortPropertyDisplayContext {
		let _localctx: PortPropertyDisplayContext = new PortPropertyDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1098, EDIF300Parser.RULE_portPropertyDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5639;
			this.match(EDIF300Parser.T__433);
			this.state = 5640;
			this.propertyNameRef();
			this.state = 5645;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
				{
				this.state = 5643;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 5641;
					this.display();
					}
					break;
				case EDIF300Parser.T__447:
					{
					this.state = 5642;
					this.propertyNameDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5647;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5648;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portPropertyDisplayOverride(): PortPropertyDisplayOverrideContext {
		let _localctx: PortPropertyDisplayOverrideContext = new PortPropertyDisplayOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 1100, EDIF300Parser.RULE_portPropertyDisplayOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5650;
			this.match(EDIF300Parser.T__434);
			this.state = 5651;
			this.propertyNameRef();
			this.state = 5655;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 5652;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 5653;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 5654;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5658;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__447) {
				{
				this.state = 5657;
				this.propertyNameDisplay();
				}
			}

			this.state = 5660;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portPropertyOverride(): PortPropertyOverrideContext {
		let _localctx: PortPropertyOverrideContext = new PortPropertyOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 1102, EDIF300Parser.RULE_portPropertyOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5662;
			this.match(EDIF300Parser.T__435);
			this.state = 5663;
			this.propertyNameRef();
			this.state = 5666;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__23:
			case EDIF300Parser.T__247:
			case EDIF300Parser.T__336:
			case EDIF300Parser.T__356:
			case EDIF300Parser.T__411:
			case EDIF300Parser.T__599:
				{
				this.state = 5664;
				this.typedValue();
				}
				break;
			case EDIF300Parser.T__639:
				{
				this.state = 5665;
				this.untyped();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5673;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
				{
				this.state = 5671;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 5668;
					this.comment();
					}
					break;
				case EDIF300Parser.T__165:
					{
					this.state = 5669;
					this.fixed();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 5670;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5675;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5676;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portRef(): PortRefContext {
		let _localctx: PortRefContext = new PortRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1104, EDIF300Parser.RULE_portRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5678;
			this.match(EDIF300Parser.T__436);
			this.state = 5679;
			this.portNameRef();
			this.state = 5680;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portSet(): PortSetContext {
		let _localctx: PortSetContext = new PortSetContext(this._ctx, this.state);
		this.enterRule(_localctx, 1106, EDIF300Parser.RULE_portSet);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5682;
			this.match(EDIF300Parser.T__437);
			this.state = 5686;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__436) {
				{
				{
				this.state = 5683;
				this.portRef();
				}
				}
				this.state = 5688;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5689;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public portWidth(): PortWidthContext {
		let _localctx: PortWidthContext = new PortWidthContext(this._ctx, this.state);
		this.enterRule(_localctx, 1108, EDIF300Parser.RULE_portWidth);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5691;
			this.match(EDIF300Parser.T__438);
			this.state = 5692;
			this.integerExpression();
			this.state = 5693;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public presentLogicValue(): PresentLogicValueContext {
		let _localctx: PresentLogicValueContext = new PresentLogicValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1110, EDIF300Parser.RULE_presentLogicValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5698;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.IDENTIFIER:
				{
				this.state = 5695;
				this.logicNameRef();
				}
				break;
			case EDIF300Parser.T__320:
				{
				this.state = 5696;
				this.logicList();
				}
				break;
			case EDIF300Parser.T__325:
				{
				this.state = 5697;
				this.logicOneOf();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public previousLogicValue(): PreviousLogicValueContext {
		let _localctx: PreviousLogicValueContext = new PreviousLogicValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1112, EDIF300Parser.RULE_previousLogicValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5703;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.IDENTIFIER:
				{
				this.state = 5700;
				this.logicNameRef();
				}
				break;
			case EDIF300Parser.T__320:
				{
				this.state = 5701;
				this.logicList();
				}
				break;
			case EDIF300Parser.T__325:
				{
				this.state = 5702;
				this.logicOneOf();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public previousVersion(): PreviousVersionContext {
		let _localctx: PreviousVersionContext = new PreviousVersionContext(this._ctx, this.state);
		this.enterRule(_localctx, 1114, EDIF300Parser.RULE_previousVersion);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5705;
			this.match(EDIF300Parser.T__439);
			this.state = 5706;
			this.viewRef();
			this.state = 5708;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__452) {
				{
				this.state = 5707;
				this.reason();
				}
			}

			this.state = 5710;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public primaryName(): PrimaryNameContext {
		let _localctx: PrimaryNameContext = new PrimaryNameContext(this._ctx, this.state);
		this.enterRule(_localctx, 1116, EDIF300Parser.RULE_primaryName);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5712;
			this.match(EDIF300Parser.T__440);
			this.state = 5713;
			this.originalName();
			this.state = 5719;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__130 || _la === EDIF300Parser.T__191 || _la === EDIF300Parser.T__348) {
				{
				this.state = 5717;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__130:
					{
					this.state = 5714;
					this.displayName();
					}
					break;
				case EDIF300Parser.T__191:
					{
					this.state = 5715;
					this.generated();
					}
					break;
				case EDIF300Parser.T__348:
					{
					this.state = 5716;
					this.nameStructure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5721;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5722;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public program(): ProgramContext {
		let _localctx: ProgramContext = new ProgramContext(this._ctx, this.state);
		this.enterRule(_localctx, 1118, EDIF300Parser.RULE_program);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5724;
			this.match(EDIF300Parser.T__441);
			this.state = 5725;
			this.stringValue();
			this.state = 5727;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__643) {
				{
				this.state = 5726;
				this.version();
				}
			}

			this.state = 5729;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public property(): PropertyContext {
		let _localctx: PropertyContext = new PropertyContext(this._ctx, this.state);
		this.enterRule(_localctx, 1120, EDIF300Parser.RULE_property);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5731;
			this.match(EDIF300Parser.T__442);
			this.state = 5732;
			this.propertyNameDef();
			this.state = 5735;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__23:
			case EDIF300Parser.T__247:
			case EDIF300Parser.T__336:
			case EDIF300Parser.T__356:
			case EDIF300Parser.T__411:
			case EDIF300Parser.T__599:
				{
				this.state = 5733;
				this.typedValue();
				}
				break;
			case EDIF300Parser.T__639:
				{
				this.state = 5734;
				this.untyped();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5745;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__377 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__445 || _la === EDIF300Parser.T__635) {
				{
				this.state = 5743;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 5737;
					this.comment();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 5738;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__377:
					{
					this.state = 5739;
					this.owner();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 5740;
					this.property();
					}
					break;
				case EDIF300Parser.T__445:
					{
					this.state = 5741;
					this.propertyInheritanceControl();
					}
					break;
				case EDIF300Parser.T__635:
					{
					this.state = 5742;
					this.unitRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5747;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5748;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public propertyDisplay(): PropertyDisplayContext {
		let _localctx: PropertyDisplayContext = new PropertyDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1122, EDIF300Parser.RULE_propertyDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5750;
			this.match(EDIF300Parser.T__443);
			this.state = 5751;
			this.propertyNameRef();
			this.state = 5756;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
				{
				this.state = 5754;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 5752;
					this.display();
					}
					break;
				case EDIF300Parser.T__447:
					{
					this.state = 5753;
					this.propertyNameDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5758;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5759;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public propertyDisplayOverride(): PropertyDisplayOverrideContext {
		let _localctx: PropertyDisplayOverrideContext = new PropertyDisplayOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 1124, EDIF300Parser.RULE_propertyDisplayOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5761;
			this.match(EDIF300Parser.T__444);
			this.state = 5762;
			this.propertyNameRef();
			this.state = 5766;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 5763;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 5764;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 5765;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5769;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__447) {
				{
				this.state = 5768;
				this.propertyNameDisplay();
				}
			}

			this.state = 5771;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public propertyInheritanceControl(): PropertyInheritanceControlContext {
		let _localctx: PropertyInheritanceControlContext = new PropertyInheritanceControlContext(this._ctx, this.state);
		this.enterRule(_localctx, 1126, EDIF300Parser.RULE_propertyInheritanceControl);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5773;
			this.match(EDIF300Parser.T__445);
			this.state = 5776;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__165:
				{
				this.state = 5774;
				this.fixed();
				}
				break;
			case EDIF300Parser.T__355:
				{
				this.state = 5775;
				this.notInherited();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5778;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public propertyNameCaseSensitive(): PropertyNameCaseSensitiveContext {
		let _localctx: PropertyNameCaseSensitiveContext = new PropertyNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 1128, EDIF300Parser.RULE_propertyNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5780;
			this.match(EDIF300Parser.T__446);
			this.state = 5781;
			this.booleanToken();
			this.state = 5782;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public propertyNameDef(): PropertyNameDefContext {
		let _localctx: PropertyNameDefContext = new PropertyNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1130, EDIF300Parser.RULE_propertyNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5784;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public propertyNameDisplay(): PropertyNameDisplayContext {
		let _localctx: PropertyNameDisplayContext = new PropertyNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1132, EDIF300Parser.RULE_propertyNameDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5786;
			this.match(EDIF300Parser.T__447);
			this.state = 5791;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
				{
				this.state = 5789;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 5787;
					this.display();
					}
					break;
				case EDIF300Parser.T__131:
					{
					this.state = 5788;
					this.displayNameOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5793;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5794;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public propertyNameRef(): PropertyNameRefContext {
		let _localctx: PropertyNameRefContext = new PropertyNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1134, EDIF300Parser.RULE_propertyNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5796;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public propertyOverride(): PropertyOverrideContext {
		let _localctx: PropertyOverrideContext = new PropertyOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 1136, EDIF300Parser.RULE_propertyOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5798;
			this.match(EDIF300Parser.T__448);
			this.state = 5799;
			this.propertyNameRef();
			this.state = 5802;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__23:
			case EDIF300Parser.T__247:
			case EDIF300Parser.T__336:
			case EDIF300Parser.T__356:
			case EDIF300Parser.T__411:
			case EDIF300Parser.T__599:
				{
				this.state = 5800;
				this.typedValue();
				}
				break;
			case EDIF300Parser.T__639:
				{
				this.state = 5801;
				this.untyped();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5809;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
				{
				this.state = 5807;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 5804;
					this.comment();
					}
					break;
				case EDIF300Parser.T__165:
					{
					this.state = 5805;
					this.fixed();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 5806;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5811;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5812;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public proportionalFont(): ProportionalFontContext {
		let _localctx: ProportionalFontContext = new ProportionalFontContext(this._ctx, this.state);
		this.enterRule(_localctx, 1138, EDIF300Parser.RULE_proportionalFont);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5814;
			this.match(EDIF300Parser.T__449);
			this.state = 5815;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pt(): PtContext {
		let _localctx: PtContext = new PtContext(this._ctx, this.state);
		this.enterRule(_localctx, 1140, EDIF300Parser.RULE_pt);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5817;
			this.match(EDIF300Parser.T__450);
			this.state = 5818;
			this.xCoordinate();
			this.state = 5819;
			this.yCoordinate();
			this.state = 5820;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pt1(): Pt1Context {
		let _localctx: Pt1Context = new Pt1Context(this._ctx, this.state);
		this.enterRule(_localctx, 1142, EDIF300Parser.RULE_pt1);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5822;
			this.pointValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public pt2(): Pt2Context {
		let _localctx: Pt2Context = new Pt2Context(this._ctx, this.state);
		this.enterRule(_localctx, 1144, EDIF300Parser.RULE_pt2);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5824;
			this.pointValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public radian(): RadianContext {
		let _localctx: RadianContext = new RadianContext(this._ctx, this.state);
		this.enterRule(_localctx, 1146, EDIF300Parser.RULE_radian);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5826;
			this.match(EDIF300Parser.T__451);
			this.state = 5827;
			this.unitExponent();
			this.state = 5828;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public reason(): ReasonContext {
		let _localctx: ReasonContext = new ReasonContext(this._ctx, this.state);
		this.enterRule(_localctx, 1148, EDIF300Parser.RULE_reason);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5830;
			this.match(EDIF300Parser.T__452);
			this.state = 5831;
			this.stringToken();
			this.state = 5832;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public rectangle(): RectangleContext {
		let _localctx: RectangleContext = new RectangleContext(this._ctx, this.state);
		this.enterRule(_localctx, 1150, EDIF300Parser.RULE_rectangle);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5834;
			this.match(EDIF300Parser.T__453);
			this.state = 5835;
			this.pt1();
			this.state = 5836;
			this.pt2();
			this.state = 5837;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public red(): RedContext {
		let _localctx: RedContext = new RedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1152, EDIF300Parser.RULE_red);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5839;
			this.scaledInteger();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public removeDisplay(): RemoveDisplayContext {
		let _localctx: RemoveDisplayContext = new RemoveDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1154, EDIF300Parser.RULE_removeDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5841;
			this.match(EDIF300Parser.T__454);
			this.state = 5842;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public repetitionCount(): RepetitionCountContext {
		let _localctx: RepetitionCountContext = new RepetitionCountContext(this._ctx, this.state);
		this.enterRule(_localctx, 1156, EDIF300Parser.RULE_repetitionCount);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5844;
			this.match(EDIF300Parser.T__455);
			this.state = 5845;
			this.integerExpression();
			this.state = 5846;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public repetitionCountDisplay(): RepetitionCountDisplayContext {
		let _localctx: RepetitionCountDisplayContext = new RepetitionCountDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1158, EDIF300Parser.RULE_repetitionCountDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5848;
			this.match(EDIF300Parser.T__456);
			this.state = 5852;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 5849;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 5850;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 5851;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5854;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public replaceDisplay(): ReplaceDisplayContext {
		let _localctx: ReplaceDisplayContext = new ReplaceDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1160, EDIF300Parser.RULE_replaceDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5856;
			this.match(EDIF300Parser.T__457);
			this.state = 5860;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 5857;
				this.display();
				}
				}
				this.state = 5862;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5863;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public required(): RequiredContext {
		let _localctx: RequiredContext = new RequiredContext(this._ctx, this.state);
		this.enterRule(_localctx, 1162, EDIF300Parser.RULE_required);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5865;
			this.match(EDIF300Parser.T__458);
			this.state = 5866;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public resolves(): ResolvesContext {
		let _localctx: ResolvesContext = new ResolvesContext(this._ctx, this.state);
		this.enterRule(_localctx, 1164, EDIF300Parser.RULE_resolves);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5868;
			this.match(EDIF300Parser.T__459);
			this.state = 5872;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.IDENTIFIER) {
				{
				{
				this.state = 5869;
				this.logicNameRef();
				}
				}
				this.state = 5874;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5875;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public revision(): RevisionContext {
		let _localctx: RevisionContext = new RevisionContext(this._ctx, this.state);
		this.enterRule(_localctx, 1166, EDIF300Parser.RULE_revision);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5877;
			this.match(EDIF300Parser.T__460);
			this.state = 5878;
			this.stringToken();
			this.state = 5879;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public revisionDisplay(): RevisionDisplayContext {
		let _localctx: RevisionDisplayContext = new RevisionDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1168, EDIF300Parser.RULE_revisionDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5881;
			this.match(EDIF300Parser.T__461);
			this.state = 5885;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 5882;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 5883;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 5884;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5887;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public rightJustify(): RightJustifyContext {
		let _localctx: RightJustifyContext = new RightJustifyContext(this._ctx, this.state);
		this.enterRule(_localctx, 1170, EDIF300Parser.RULE_rightJustify);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5889;
			this.match(EDIF300Parser.T__462);
			this.state = 5890;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ripperHotspot(): RipperHotspotContext {
		let _localctx: RipperHotspotContext = new RipperHotspotContext(this._ctx, this.state);
		this.enterRule(_localctx, 1172, EDIF300Parser.RULE_ripperHotspot);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5892;
			this.match(EDIF300Parser.T__463);
			this.state = 5893;
			this.hotspotNameDef();
			this.state = 5894;
			this.hotspot();
			this.state = 5895;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public ripperHotspotRef(): RipperHotspotRefContext {
		let _localctx: RipperHotspotRefContext = new RipperHotspotRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1174, EDIF300Parser.RULE_ripperHotspotRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5897;
			this.match(EDIF300Parser.T__464);
			this.state = 5898;
			this.hotspotNameRef();
			this.state = 5899;
			this.schematicRipperImplementationRef();
			this.state = 5900;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public rotation(): RotationContext {
		let _localctx: RotationContext = new RotationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1176, EDIF300Parser.RULE_rotation);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5902;
			this.match(EDIF300Parser.T__465);
			this.state = 5903;
			this.angleValue();
			this.state = 5904;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public round(): RoundContext {
		let _localctx: RoundContext = new RoundContext(this._ctx, this.state);
		this.enterRule(_localctx, 1178, EDIF300Parser.RULE_round);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5906;
			this.match(EDIF300Parser.T__466);
			this.state = 5907;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public rowSize(): RowSizeContext {
		let _localctx: RowSizeContext = new RowSizeContext(this._ctx, this.state);
		this.enterRule(_localctx, 1180, EDIF300Parser.RULE_rowSize);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5909;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public scaledInteger(): ScaledIntegerContext {
		let _localctx: ScaledIntegerContext = new ScaledIntegerContext(this._ctx, this.state);
		this.enterRule(_localctx, 1182, EDIF300Parser.RULE_scaledInteger);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5913;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.DECIMAL_LITERAL:
				{
				this.state = 5911;
				this.integerToken();
				}
				break;
			case EDIF300Parser.T__145:
				{
				this.state = 5912;
				this.e();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public scaleX(): ScaleXContext {
		let _localctx: ScaleXContext = new ScaleXContext(this._ctx, this.state);
		this.enterRule(_localctx, 1184, EDIF300Parser.RULE_scaleX);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5915;
			this.match(EDIF300Parser.T__467);
			this.state = 5916;
			this.numerator();
			this.state = 5917;
			this.denominator();
			this.state = 5918;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public scaleY(): ScaleYContext {
		let _localctx: ScaleYContext = new ScaleYContext(this._ctx, this.state);
		this.enterRule(_localctx, 1186, EDIF300Parser.RULE_scaleY);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5920;
			this.match(EDIF300Parser.T__468);
			this.state = 5921;
			this.numerator();
			this.state = 5922;
			this.denominator();
			this.state = 5923;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicBus(): SchematicBusContext {
		let _localctx: SchematicBusContext = new SchematicBusContext(this._ctx, this.state);
		this.enterRule(_localctx, 1188, EDIF300Parser.RULE_schematicBus);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5925;
			this.match(EDIF300Parser.T__469);
			this.state = 5926;
			this.interconnectNameDef();
			this.state = 5927;
			this.signalGroupRef();
			this.state = 5928;
			this.schematicInterconnectHeader();
			this.state = 5929;
			this.schematicBusJoined();
			this.state = 5937;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || ((((_la - 471)) & ~0x1F) === 0 && ((1 << (_la - 471)) & ((1 << (EDIF300Parser.T__470 - 471)) | (1 << (EDIF300Parser.T__473 - 471)) | (1 << (EDIF300Parser.T__496 - 471)))) !== 0) || _la === EDIF300Parser.T__642) {
				{
				this.state = 5935;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 5930;
					this.comment();
					}
					break;
				case EDIF300Parser.T__470:
					{
					this.state = 5931;
					this.schematicBusDetails();
					}
					break;
				case EDIF300Parser.T__473:
					{
					this.state = 5932;
					this.schematicBusSlice();
					}
					break;
				case EDIF300Parser.T__496:
					{
					this.state = 5933;
					this.schematicInterconnectAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 5934;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5939;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5940;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicBusDetails(): SchematicBusDetailsContext {
		let _localctx: SchematicBusDetailsContext = new SchematicBusDetailsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1190, EDIF300Parser.RULE_schematicBusDetails);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5942;
			this.match(EDIF300Parser.T__470);
			this.state = 5945;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__471:
				{
				this.state = 5943;
				this.schematicBusGraphics();
				}
				break;
			case EDIF300Parser.T__551:
				{
				this.state = 5944;
				this.schematicSubBusSet();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 5947;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicBusGraphics(): SchematicBusGraphicsContext {
		let _localctx: SchematicBusGraphicsContext = new SchematicBusGraphicsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1192, EDIF300Parser.RULE_schematicBusGraphics);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5949;
			this.match(EDIF300Parser.T__471);
			this.state = 5956;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__642) {
				{
				this.state = 5954;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 5950;
					this.comment();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 5951;
					this.figure();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 5952;
					this.schematicComplexFigure();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 5953;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5958;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5959;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicBusJoined(): SchematicBusJoinedContext {
		let _localctx: SchematicBusJoinedContext = new SchematicBusJoinedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1194, EDIF300Parser.RULE_schematicBusJoined);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5961;
			this.match(EDIF300Parser.T__472);
			this.state = 5973;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__423 || _la === EDIF300Parser.T__464 || _la === EDIF300Parser.T__485 || ((((_la - 500)) & ~0x1F) === 0 && ((1 << (_la - 500)) & ((1 << (EDIF300Parser.T__499 - 500)) | (1 << (EDIF300Parser.T__503 - 500)) | (1 << (EDIF300Parser.T__507 - 500)) | (1 << (EDIF300Parser.T__516 - 500)) | (1 << (EDIF300Parser.T__520 - 500)))) !== 0) || _la === EDIF300Parser.T__561) {
				{
				this.state = 5971;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__423:
					{
					this.state = 5962;
					this.portJoined();
					}
					break;
				case EDIF300Parser.T__464:
					{
					this.state = 5963;
					this.ripperHotspotRef();
					}
					break;
				case EDIF300Parser.T__485:
					{
					this.state = 5964;
					this.schematicGlobalPortImplementationRef();
					}
					break;
				case EDIF300Parser.T__499:
					{
					this.state = 5965;
					this.schematicInterconnectTerminatorImplementationRef();
					}
					break;
				case EDIF300Parser.T__503:
					{
					this.state = 5966;
					this.schematicJunctionImplementationRef();
					}
					break;
				case EDIF300Parser.T__507:
					{
					this.state = 5967;
					this.schematicMasterPortImplementationRef();
					}
					break;
				case EDIF300Parser.T__516:
					{
					this.state = 5968;
					this.schematicOffPageConnectorImplementationRef();
					}
					break;
				case EDIF300Parser.T__520:
					{
					this.state = 5969;
					this.schematicOnPageConnectorImplementationRef();
					}
					break;
				case EDIF300Parser.T__561:
					{
					this.state = 5970;
					this.schematicSymbolPortImplementationRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5975;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5976;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicBusSlice(): SchematicBusSliceContext {
		let _localctx: SchematicBusSliceContext = new SchematicBusSliceContext(this._ctx, this.state);
		this.enterRule(_localctx, 1196, EDIF300Parser.RULE_schematicBusSlice);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5978;
			this.match(EDIF300Parser.T__473);
			this.state = 5979;
			this.interconnectNameDef();
			this.state = 5980;
			this.signalGroupRef();
			this.state = 5981;
			this.schematicInterconnectHeader();
			this.state = 5982;
			this.schematicBusJoined();
			this.state = 5990;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || ((((_la - 471)) & ~0x1F) === 0 && ((1 << (_la - 471)) & ((1 << (EDIF300Parser.T__470 - 471)) | (1 << (EDIF300Parser.T__473 - 471)) | (1 << (EDIF300Parser.T__496 - 471)))) !== 0) || _la === EDIF300Parser.T__642) {
				{
				this.state = 5988;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 5983;
					this.comment();
					}
					break;
				case EDIF300Parser.T__470:
					{
					this.state = 5984;
					this.schematicBusDetails();
					}
					break;
				case EDIF300Parser.T__473:
					{
					this.state = 5985;
					this.schematicBusSlice();
					}
					break;
				case EDIF300Parser.T__496:
					{
					this.state = 5986;
					this.schematicInterconnectAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 5987;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 5992;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 5993;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicComplexFigure(): SchematicComplexFigureContext {
		let _localctx: SchematicComplexFigureContext = new SchematicComplexFigureContext(this._ctx, this.state);
		this.enterRule(_localctx, 1198, EDIF300Parser.RULE_schematicComplexFigure);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 5995;
			this.match(EDIF300Parser.T__474);
			this.state = 5996;
			this.schematicFigureMacroRef();
			this.state = 5997;
			this.transform();
			this.state = 6002;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
				{
				this.state = 6000;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__444:
					{
					this.state = 5998;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 5999;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6004;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6005;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicFigureMacro(): SchematicFigureMacroContext {
		let _localctx: SchematicFigureMacroContext = new SchematicFigureMacroContext(this._ctx, this.state);
		this.enterRule(_localctx, 1200, EDIF300Parser.RULE_schematicFigureMacro);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6007;
			this.match(EDIF300Parser.T__475);
			this.state = 6008;
			this.libraryObjectNameDef();
			this.state = 6009;
			this.schematicTemplateHeader();
			this.state = 6019;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__642) {
				{
				this.state = 6017;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6010;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 6011;
					this.comment();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6012;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6013;
					this.figure();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6014;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6015;
					this.schematicComplexFigure();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 6016;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6021;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6022;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicFigureMacroRef(): SchematicFigureMacroRefContext {
		let _localctx: SchematicFigureMacroRefContext = new SchematicFigureMacroRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1202, EDIF300Parser.RULE_schematicFigureMacroRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6024;
			this.match(EDIF300Parser.T__476);
			this.state = 6025;
			this.libraryObjectNameRef();
			this.state = 6027;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6026;
				this.libraryRef();
				}
			}

			this.state = 6029;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicForFrameBorder(): SchematicForFrameBorderContext {
		let _localctx: SchematicForFrameBorderContext = new SchematicForFrameBorderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1204, EDIF300Parser.RULE_schematicForFrameBorder);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6031;
			this.match(EDIF300Parser.T__477);
			this.state = 6032;
			this.schematicForFrameBorderTemplateRef();
			this.state = 6033;
			this.transform();
			this.state = 6040;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__179 || ((((_la - 445)) & ~0x1F) === 0 && ((1 << (_la - 445)) & ((1 << (EDIF300Parser.T__444 - 445)) | (1 << (EDIF300Parser.T__448 - 445)) | (1 << (EDIF300Parser.T__456 - 445)))) !== 0)) {
				{
				this.state = 6038;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__179:
					{
					this.state = 6034;
					this.forFrameIndexDisplay();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6035;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6036;
					this.propertyOverride();
					}
					break;
				case EDIF300Parser.T__456:
					{
					this.state = 6037;
					this.repetitionCountDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6042;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6043;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicForFrameBorderTemplate(): SchematicForFrameBorderTemplateContext {
		let _localctx: SchematicForFrameBorderTemplateContext = new SchematicForFrameBorderTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1206, EDIF300Parser.RULE_schematicForFrameBorderTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6045;
			this.match(EDIF300Parser.T__478);
			this.state = 6046;
			this.libraryObjectNameDef();
			this.state = 6047;
			this.schematicTemplateHeader();
			this.state = 6048;
			this.usableArea();
			this.state = 6058;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__179 || ((((_la - 444)) & ~0x1F) === 0 && ((1 << (_la - 444)) & ((1 << (EDIF300Parser.T__443 - 444)) | (1 << (EDIF300Parser.T__456 - 444)) | (1 << (EDIF300Parser.T__474 - 444)))) !== 0)) {
				{
				this.state = 6056;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6049;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6050;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6051;
					this.figure();
					}
					break;
				case EDIF300Parser.T__179:
					{
					this.state = 6052;
					this.forFrameIndexDisplay();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6053;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__456:
					{
					this.state = 6054;
					this.repetitionCountDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6055;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6060;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6061;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicForFrameBorderTemplateRef(): SchematicForFrameBorderTemplateRefContext {
		let _localctx: SchematicForFrameBorderTemplateRefContext = new SchematicForFrameBorderTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1208, EDIF300Parser.RULE_schematicForFrameBorderTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6063;
			this.match(EDIF300Parser.T__479);
			this.state = 6064;
			this.libraryObjectNameRef();
			this.state = 6066;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6065;
				this.libraryRef();
				}
			}

			this.state = 6068;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicForFrameImplementation(): SchematicForFrameImplementationContext {
		let _localctx: SchematicForFrameImplementationContext = new SchematicForFrameImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1210, EDIF300Parser.RULE_schematicForFrameImplementation);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6070;
			this.match(EDIF300Parser.T__480);
			this.state = 6071;
			this.implementationNameDef();
			this.state = 6072;
			this.forFrameRef();
			this.state = 6073;
			this.schematicForFrameImplementationHeader();
			this.state = 6074;
			this.schematicFrameImplementationDetails();
			this.state = 6075;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicForFrameImplementationHeader(): SchematicForFrameImplementationHeaderContext {
		let _localctx: SchematicForFrameImplementationHeaderContext = new SchematicForFrameImplementationHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1212, EDIF300Parser.RULE_schematicForFrameImplementationHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6077;
			this.match(EDIF300Parser.T__481);
			this.state = 6079;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__477) {
				{
				this.state = 6078;
				this.schematicForFrameBorder();
				}
			}

			this.state = 6081;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicFrameImplementationDetails(): SchematicFrameImplementationDetailsContext {
		let _localctx: SchematicFrameImplementationDetailsContext = new SchematicFrameImplementationDetailsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1214, EDIF300Parser.RULE_schematicFrameImplementationDetails);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6083;
			this.match(EDIF300Parser.T__482);
			this.state = 6104;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 41)) & ~0x1F) === 0 && ((1 << (_la - 41)) & ((1 << (EDIF300Parser.T__40 - 41)) | (1 << (EDIF300Parser.T__56 - 41)) | (1 << (EDIF300Parser.T__61 - 41)) | (1 << (EDIF300Parser.T__62 - 41)))) !== 0) || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__469 || ((((_la - 481)) & ~0x1F) === 0 && ((1 << (_la - 481)) & ((1 << (EDIF300Parser.T__480 - 481)) | (1 << (EDIF300Parser.T__484 - 481)) | (1 << (EDIF300Parser.T__491 - 481)) | (1 << (EDIF300Parser.T__494 - 481)) | (1 << (EDIF300Parser.T__506 - 481)) | (1 << (EDIF300Parser.T__511 - 481)))) !== 0) || ((((_la - 516)) & ~0x1F) === 0 && ((1 << (_la - 516)) & ((1 << (EDIF300Parser.T__515 - 516)) | (1 << (EDIF300Parser.T__519 - 516)) | (1 << (EDIF300Parser.T__526 - 516)) | (1 << (EDIF300Parser.T__546 - 516)))) !== 0) || _la === EDIF300Parser.T__642 || _la === EDIF300Parser.T__651) {
				{
				this.state = 6102;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__40:
					{
					this.state = 6084;
					this.cellPropertyDisplay();
					}
					break;
				case EDIF300Parser.T__56:
					{
					this.state = 6085;
					this.clusterPropertyDisplay();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 6086;
					this.comment();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6087;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6088;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__469:
					{
					this.state = 6089;
					this.schematicBus();
					}
					break;
				case EDIF300Parser.T__480:
					{
					this.state = 6090;
					this.schematicForFrameImplementation();
					}
					break;
				case EDIF300Parser.T__484:
					{
					this.state = 6091;
					this.schematicGlobalPortImplementation();
					}
					break;
				case EDIF300Parser.T__491:
					{
					this.state = 6092;
					this.schematicIfFrameImplementation();
					}
					break;
				case EDIF300Parser.T__494:
					{
					this.state = 6093;
					this.schematicInstanceImplementation();
					}
					break;
				case EDIF300Parser.T__506:
					{
					this.state = 6094;
					this.schematicMasterPortImplementation();
					}
					break;
				case EDIF300Parser.T__511:
					{
					this.state = 6095;
					this.schematicNet();
					}
					break;
				case EDIF300Parser.T__515:
					{
					this.state = 6096;
					this.schematicOffPageConnectorImplementation();
					}
					break;
				case EDIF300Parser.T__519:
					{
					this.state = 6097;
					this.schematicOnPageConnectorImplementation();
					}
					break;
				case EDIF300Parser.T__526:
					{
					this.state = 6098;
					this.schematicOtherwiseFrameImplementation();
					}
					break;
				case EDIF300Parser.T__546:
					{
					this.state = 6099;
					this.schematicRipperImplementation();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 6100;
					this.userData();
					}
					break;
				case EDIF300Parser.T__651:
					{
					this.state = 6101;
					this.viewPropertyDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6106;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6107;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicGlobalPortAttributes(): SchematicGlobalPortAttributesContext {
		let _localctx: SchematicGlobalPortAttributesContext = new SchematicGlobalPortAttributesContext(this._ctx, this.state);
		this.enterRule(_localctx, 1216, EDIF300Parser.RULE_schematicGlobalPortAttributes);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6109;
			this.match(EDIF300Parser.T__483);
			this.state = 6125;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__214 || ((((_la - 529)) & ~0x1F) === 0 && ((1 << (_la - 529)) & ((1 << (EDIF300Parser.T__528 - 529)) | (1 << (EDIF300Parser.T__531 - 529)) | (1 << (EDIF300Parser.T__533 - 529)) | (1 << (EDIF300Parser.T__534 - 529)) | (1 << (EDIF300Parser.T__535 - 529)) | (1 << (EDIF300Parser.T__537 - 529)) | (1 << (EDIF300Parser.T__538 - 529)) | (1 << (EDIF300Parser.T__539 - 529)) | (1 << (EDIF300Parser.T__540 - 529)) | (1 << (EDIF300Parser.T__541 - 529)) | (1 << (EDIF300Parser.T__542 - 529)) | (1 << (EDIF300Parser.T__544 - 529)))) !== 0)) {
				{
				this.state = 6123;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__214:
					{
					this.state = 6110;
					this.ieeeStandard();
					}
					break;
				case EDIF300Parser.T__528:
					{
					this.state = 6111;
					this.schematicPortAcPower();
					}
					break;
				case EDIF300Parser.T__531:
					{
					this.state = 6112;
					this.schematicPortAnalog();
					}
					break;
				case EDIF300Parser.T__533:
					{
					this.state = 6113;
					this.schematicPortChassisGround();
					}
					break;
				case EDIF300Parser.T__534:
					{
					this.state = 6114;
					this.schematicPortClock();
					}
					break;
				case EDIF300Parser.T__535:
					{
					this.state = 6115;
					this.schematicPortDcPower();
					}
					break;
				case EDIF300Parser.T__537:
					{
					this.state = 6116;
					this.schematicPortEarthGround();
					}
					break;
				case EDIF300Parser.T__538:
					{
					this.state = 6117;
					this.schematicPortGround();
					}
					break;
				case EDIF300Parser.T__539:
					{
					this.state = 6118;
					this.schematicPortNonLogical();
					}
					break;
				case EDIF300Parser.T__540:
					{
					this.state = 6119;
					this.schematicPortOpenCollector();
					}
					break;
				case EDIF300Parser.T__541:
					{
					this.state = 6120;
					this.schematicPortOpenEmitter();
					}
					break;
				case EDIF300Parser.T__542:
					{
					this.state = 6121;
					this.schematicPortPower();
					}
					break;
				case EDIF300Parser.T__544:
					{
					this.state = 6122;
					this.schematicPortThreeState();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6127;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6128;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicGlobalPortImplementation(): SchematicGlobalPortImplementationContext {
		let _localctx: SchematicGlobalPortImplementationContext = new SchematicGlobalPortImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1218, EDIF300Parser.RULE_schematicGlobalPortImplementation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6130;
			this.match(EDIF300Parser.T__484);
			this.state = 6131;
			this.implementationNameDef();
			this.state = 6132;
			this.schematicGlobalPortTemplateRef();
			this.state = 6133;
			this.globalPortRef();
			this.state = 6134;
			this.transform();
			this.state = 6143;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 202)) & ~0x1F) === 0 && ((1 << (_la - 202)) & ((1 << (EDIF300Parser.T__201 - 202)) | (1 << (EDIF300Parser.T__202 - 202)) | (1 << (EDIF300Parser.T__221 - 202)))) !== 0) || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
				{
				this.state = 6141;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__201:
					{
					this.state = 6135;
					this.globalPortNameDisplay();
					}
					break;
				case EDIF300Parser.T__202:
					{
					this.state = 6136;
					this.globalPortPropertyDisplay();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6137;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6138;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6139;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6140;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6145;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6146;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicGlobalPortImplementationRef(): SchematicGlobalPortImplementationRefContext {
		let _localctx: SchematicGlobalPortImplementationRefContext = new SchematicGlobalPortImplementationRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1220, EDIF300Parser.RULE_schematicGlobalPortImplementationRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6148;
			this.match(EDIF300Parser.T__485);
			this.state = 6149;
			this.implementationNameRef();
			this.state = 6150;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicGlobalPortTemplate(): SchematicGlobalPortTemplateContext {
		let _localctx: SchematicGlobalPortTemplateContext = new SchematicGlobalPortTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1222, EDIF300Parser.RULE_schematicGlobalPortTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6152;
			this.match(EDIF300Parser.T__486);
			this.state = 6153;
			this.libraryObjectNameDef();
			this.state = 6154;
			this.schematicTemplateHeader();
			this.state = 6156;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 468, this._ctx) ) {
			case 1:
				{
				this.state = 6155;
				this.hotspot();
				}
				break;
			}
			this.state = 6168;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__201 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__483) {
				{
				this.state = 6166;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6158;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6159;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6160;
					this.figure();
					}
					break;
				case EDIF300Parser.T__201:
					{
					this.state = 6161;
					this.globalPortNameDisplay();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6162;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6163;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6164;
					this.schematicComplexFigure();
					}
					break;
				case EDIF300Parser.T__483:
					{
					this.state = 6165;
					this.schematicGlobalPortAttributes();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6170;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6172;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__208) {
				{
				this.state = 6171;
				this.hotspot();
				}
			}

			this.state = 6174;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicGlobalPortTemplateRef(): SchematicGlobalPortTemplateRefContext {
		let _localctx: SchematicGlobalPortTemplateRefContext = new SchematicGlobalPortTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1224, EDIF300Parser.RULE_schematicGlobalPortTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6176;
			this.match(EDIF300Parser.T__487);
			this.state = 6177;
			this.libraryObjectNameRef();
			this.state = 6179;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6178;
				this.libraryRef();
				}
			}

			this.state = 6181;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicIfFrameBorder(): SchematicIfFrameBorderContext {
		let _localctx: SchematicIfFrameBorderContext = new SchematicIfFrameBorderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1226, EDIF300Parser.RULE_schematicIfFrameBorder);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6183;
			this.match(EDIF300Parser.T__488);
			this.state = 6184;
			this.schematicIfFrameBorderTemplateRef();
			this.state = 6185;
			this.transform();
			this.state = 6191;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__71 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
				{
				this.state = 6189;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__71:
					{
					this.state = 6186;
					this.conditionDisplay();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6187;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6188;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6193;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6194;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicIfFrameBorderTemplate(): SchematicIfFrameBorderTemplateContext {
		let _localctx: SchematicIfFrameBorderTemplateContext = new SchematicIfFrameBorderTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1228, EDIF300Parser.RULE_schematicIfFrameBorderTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6196;
			this.match(EDIF300Parser.T__489);
			this.state = 6197;
			this.libraryObjectNameDef();
			this.state = 6198;
			this.schematicTemplateHeader();
			this.state = 6199;
			this.usableArea();
			this.state = 6208;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__71 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
				{
				this.state = 6206;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6200;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6201;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__71:
					{
					this.state = 6202;
					this.conditionDisplay();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6203;
					this.figure();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6204;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6205;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6210;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6211;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicIfFrameBorderTemplateRef(): SchematicIfFrameBorderTemplateRefContext {
		let _localctx: SchematicIfFrameBorderTemplateRefContext = new SchematicIfFrameBorderTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1230, EDIF300Parser.RULE_schematicIfFrameBorderTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6213;
			this.match(EDIF300Parser.T__490);
			this.state = 6214;
			this.libraryObjectNameRef();
			this.state = 6216;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6215;
				this.libraryRef();
				}
			}

			this.state = 6218;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicIfFrameImplementation(): SchematicIfFrameImplementationContext {
		let _localctx: SchematicIfFrameImplementationContext = new SchematicIfFrameImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1232, EDIF300Parser.RULE_schematicIfFrameImplementation);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6220;
			this.match(EDIF300Parser.T__491);
			this.state = 6221;
			this.implementationNameDef();
			this.state = 6222;
			this.ifFrameRef();
			this.state = 6223;
			this.schematicIfFrameImplementationHeader();
			this.state = 6224;
			this.schematicFrameImplementationDetails();
			this.state = 6225;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicIfFrameImplementationHeader(): SchematicIfFrameImplementationHeaderContext {
		let _localctx: SchematicIfFrameImplementationHeaderContext = new SchematicIfFrameImplementationHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1234, EDIF300Parser.RULE_schematicIfFrameImplementationHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6227;
			this.match(EDIF300Parser.T__492);
			this.state = 6229;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__488) {
				{
				this.state = 6228;
				this.schematicIfFrameBorder();
				}
			}

			this.state = 6231;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicImplementation(): SchematicImplementationContext {
		let _localctx: SchematicImplementationContext = new SchematicImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1236, EDIF300Parser.RULE_schematicImplementation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6233;
			this.match(EDIF300Parser.T__493);
			this.state = 6238;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__378 || _la === EDIF300Parser.T__622) {
				{
				this.state = 6236;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__378:
					{
					this.state = 6234;
					this.page();
					}
					break;
				case EDIF300Parser.T__622:
					{
					this.state = 6235;
					this.totalPages();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6240;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6241;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicInstanceImplementation(): SchematicInstanceImplementationContext {
		let _localctx: SchematicInstanceImplementationContext = new SchematicInstanceImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1238, EDIF300Parser.RULE_schematicInstanceImplementation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6243;
			this.match(EDIF300Parser.T__494);
			this.state = 6244;
			this.implementationNameDef();
			this.state = 6245;
			this.instanceRef();
			this.state = 6246;
			this.schematicSymbolRef();
			this.state = 6247;
			this.transform();
			this.state = 6267;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1F) === 0 && ((1 << (_la - 40)) & ((1 << (EDIF300Parser.T__39 - 40)) | (1 << (EDIF300Parser.T__41 - 40)) | (1 << (EDIF300Parser.T__57 - 40)))) !== 0) || _la === EDIF300Parser.T__119 || ((((_la - 222)) & ~0x1F) === 0 && ((1 << (_la - 222)) & ((1 << (EDIF300Parser.T__221 - 222)) | (1 << (EDIF300Parser.T__237 - 222)) | (1 << (EDIF300Parser.T__239 - 222)) | (1 << (EDIF300Parser.T__240 - 222)) | (1 << (EDIF300Parser.T__242 - 222)) | (1 << (EDIF300Parser.T__246 - 222)))) !== 0) || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__383 || _la === EDIF300Parser.T__398 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448 || _la === EDIF300Parser.T__620 || _la === EDIF300Parser.T__650) {
				{
				this.state = 6265;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__39:
					{
					this.state = 6248;
					this.cellNameDisplay();
					}
					break;
				case EDIF300Parser.T__41:
					{
					this.state = 6249;
					this.cellPropertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__57:
					{
					this.state = 6250;
					this.clusterPropertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__119:
					{
					this.state = 6251;
					this.designatorDisplay();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6252;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__237:
					{
					this.state = 6253;
					this.instanceNameDisplay();
					}
					break;
				case EDIF300Parser.T__239:
					{
					this.state = 6254;
					this.instanceNameGeneratorDisplay();
					}
					break;
				case EDIF300Parser.T__240:
					{
					this.state = 6255;
					this.instancePortAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__242:
					{
					this.state = 6256;
					this.instancePropertyDisplay();
					}
					break;
				case EDIF300Parser.T__246:
					{
					this.state = 6257;
					this.instanceWidthDisplay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6258;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__383:
					{
					this.state = 6259;
					this.pageCommentGraphics();
					}
					break;
				case EDIF300Parser.T__398:
					{
					this.state = 6260;
					this.parameterDisplay();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6261;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6262;
					this.propertyOverride();
					}
					break;
				case EDIF300Parser.T__620:
					{
					this.state = 6263;
					this.timingDisplay();
					}
					break;
				case EDIF300Parser.T__650:
					{
					this.state = 6264;
					this.viewNameDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6269;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6270;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicInstanceImplementationRef(): SchematicInstanceImplementationRefContext {
		let _localctx: SchematicInstanceImplementationRefContext = new SchematicInstanceImplementationRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1240, EDIF300Parser.RULE_schematicInstanceImplementationRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6272;
			this.match(EDIF300Parser.T__495);
			this.state = 6273;
			this.implementationNameRef();
			this.state = 6274;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicInterconnectAttributeDisplay(): SchematicInterconnectAttributeDisplayContext {
		let _localctx: SchematicInterconnectAttributeDisplayContext = new SchematicInterconnectAttributeDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1242, EDIF300Parser.RULE_schematicInterconnectAttributeDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6276;
			this.match(EDIF300Parser.T__496);
			this.state = 6285;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__86 || _la === EDIF300Parser.T__98 || ((((_la - 261)) & ~0x1F) === 0 && ((1 << (_la - 261)) & ((1 << (EDIF300Parser.T__260 - 261)) | (1 << (EDIF300Parser.T__262 - 261)) | (1 << (EDIF300Parser.T__265 - 261)) | (1 << (EDIF300Parser.T__266 - 261)))) !== 0)) {
				{
				this.state = 6283;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__86:
					{
					this.state = 6277;
					this.connectivityTagGeneratorDisplay();
					}
					break;
				case EDIF300Parser.T__98:
					{
					this.state = 6278;
					this.criticalityDisplay();
					}
					break;
				case EDIF300Parser.T__260:
					{
					this.state = 6279;
					this.interconnectAttachedText();
					}
					break;
				case EDIF300Parser.T__262:
					{
					this.state = 6280;
					this.interconnectDelayDisplay();
					}
					break;
				case EDIF300Parser.T__265:
					{
					this.state = 6281;
					this.interconnectNameDisplay();
					}
					break;
				case EDIF300Parser.T__266:
					{
					this.state = 6282;
					this.interconnectPropertyDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6287;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6288;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicInterconnectHeader(): SchematicInterconnectHeaderContext {
		let _localctx: SchematicInterconnectHeaderContext = new SchematicInterconnectHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1244, EDIF300Parser.RULE_schematicInterconnectHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6290;
			this.match(EDIF300Parser.T__497);
			this.state = 6301;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__97 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__261 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__498 || _la === EDIF300Parser.T__502 || _la === EDIF300Parser.T__570) {
				{
				this.state = 6299;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__97:
					{
					this.state = 6291;
					this.criticality();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 6292;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__261:
					{
					this.state = 6293;
					this.interconnectDelay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6294;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 6295;
					this.property();
					}
					break;
				case EDIF300Parser.T__498:
					{
					this.state = 6296;
					this.schematicInterconnectTerminatorImplementation();
					}
					break;
				case EDIF300Parser.T__502:
					{
					this.state = 6297;
					this.schematicJunctionImplementation();
					}
					break;
				case EDIF300Parser.T__570:
					{
					this.state = 6298;
					this.schematicWireStyle();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6303;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6304;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicInterconnectTerminatorImplementation(): SchematicInterconnectTerminatorImplementationContext {
		let _localctx: SchematicInterconnectTerminatorImplementationContext = new SchematicInterconnectTerminatorImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1246, EDIF300Parser.RULE_schematicInterconnectTerminatorImplementation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6306;
			this.match(EDIF300Parser.T__498);
			this.state = 6307;
			this.implementationNameDef();
			this.state = 6308;
			this.schematicInterconnectTerminatorTemplateRef();
			this.state = 6309;
			this.transform();
			this.state = 6316;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
				{
				this.state = 6314;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__221:
					{
					this.state = 6310;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6311;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6312;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6313;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6318;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6319;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicInterconnectTerminatorImplementationRef(): SchematicInterconnectTerminatorImplementationRefContext {
		let _localctx: SchematicInterconnectTerminatorImplementationRefContext = new SchematicInterconnectTerminatorImplementationRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1248, EDIF300Parser.RULE_schematicInterconnectTerminatorImplementationRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6321;
			this.match(EDIF300Parser.T__499);
			this.state = 6322;
			this.implementationNameRef();
			this.state = 6323;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicInterconnectTerminatorTemplate(): SchematicInterconnectTerminatorTemplateContext {
		let _localctx: SchematicInterconnectTerminatorTemplateContext = new SchematicInterconnectTerminatorTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1250, EDIF300Parser.RULE_schematicInterconnectTerminatorTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6325;
			this.match(EDIF300Parser.T__500);
			this.state = 6326;
			this.libraryObjectNameDef();
			this.state = 6327;
			this.schematicTemplateHeader();
			this.state = 6328;
			this.hotspot();
			this.state = 6336;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
				{
				this.state = 6334;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__62:
					{
					this.state = 6329;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6330;
					this.figure();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6331;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6332;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6333;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6338;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6339;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicInterconnectTerminatorTemplateRef(): SchematicInterconnectTerminatorTemplateRefContext {
		let _localctx: SchematicInterconnectTerminatorTemplateRefContext = new SchematicInterconnectTerminatorTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1252, EDIF300Parser.RULE_schematicInterconnectTerminatorTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6341;
			this.match(EDIF300Parser.T__501);
			this.state = 6342;
			this.libraryObjectNameRef();
			this.state = 6344;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6343;
				this.libraryRef();
				}
			}

			this.state = 6346;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicJunctionImplementation(): SchematicJunctionImplementationContext {
		let _localctx: SchematicJunctionImplementationContext = new SchematicJunctionImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1254, EDIF300Parser.RULE_schematicJunctionImplementation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6348;
			this.match(EDIF300Parser.T__502);
			this.state = 6349;
			this.implementationNameDef();
			this.state = 6350;
			this.schematicJunctionTemplateRef();
			this.state = 6351;
			this.transform();
			this.state = 6358;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
				{
				this.state = 6356;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__221:
					{
					this.state = 6352;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6353;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6354;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6355;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6360;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6361;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicJunctionImplementationRef(): SchematicJunctionImplementationRefContext {
		let _localctx: SchematicJunctionImplementationRefContext = new SchematicJunctionImplementationRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1256, EDIF300Parser.RULE_schematicJunctionImplementationRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6363;
			this.match(EDIF300Parser.T__503);
			this.state = 6364;
			this.implementationNameRef();
			this.state = 6365;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicJunctionTemplate(): SchematicJunctionTemplateContext {
		let _localctx: SchematicJunctionTemplateContext = new SchematicJunctionTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1258, EDIF300Parser.RULE_schematicJunctionTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6367;
			this.match(EDIF300Parser.T__504);
			this.state = 6368;
			this.libraryObjectNameDef();
			this.state = 6369;
			this.schematicTemplateHeader();
			this.state = 6370;
			this.hotspot();
			this.state = 6378;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
				{
				this.state = 6376;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__62:
					{
					this.state = 6371;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6372;
					this.figure();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6373;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6374;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6375;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6380;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6381;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicJunctionTemplateRef(): SchematicJunctionTemplateRefContext {
		let _localctx: SchematicJunctionTemplateRefContext = new SchematicJunctionTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1260, EDIF300Parser.RULE_schematicJunctionTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6383;
			this.match(EDIF300Parser.T__505);
			this.state = 6384;
			this.libraryObjectNameRef();
			this.state = 6386;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6385;
				this.libraryRef();
				}
			}

			this.state = 6388;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicMasterPortImplementation(): SchematicMasterPortImplementationContext {
		let _localctx: SchematicMasterPortImplementationContext = new SchematicMasterPortImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1262, EDIF300Parser.RULE_schematicMasterPortImplementation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6390;
			this.match(EDIF300Parser.T__506);
			this.state = 6391;
			this.implementationNameDef();
			this.state = 6392;
			this.schematicMasterPortTemplateRef();
			this.state = 6395;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__436:
				{
				this.state = 6393;
				this.portRef();
				}
				break;
			case EDIF300Parser.T__317:
				{
				this.state = 6394;
				this.localPortGroupRef();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 6397;
			this.transform();
			this.state = 6405;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__416 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
				{
				this.state = 6403;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__221:
					{
					this.state = 6398;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6399;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__416:
					{
					this.state = 6400;
					this.portAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6401;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6402;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6407;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6408;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicMasterPortImplementationRef(): SchematicMasterPortImplementationRefContext {
		let _localctx: SchematicMasterPortImplementationRefContext = new SchematicMasterPortImplementationRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1264, EDIF300Parser.RULE_schematicMasterPortImplementationRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6410;
			this.match(EDIF300Parser.T__507);
			this.state = 6411;
			this.implementationNameRef();
			this.state = 6412;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicMasterPortTemplate(): SchematicMasterPortTemplateContext {
		let _localctx: SchematicMasterPortTemplateContext = new SchematicMasterPortTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1266, EDIF300Parser.RULE_schematicMasterPortTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6414;
			this.match(EDIF300Parser.T__508);
			this.state = 6415;
			this.libraryObjectNameDef();
			this.state = 6416;
			this.schematicTemplateHeader();
			this.state = 6417;
			this.hotspot();
			this.state = 6418;
			this.portDirectionIndicator();
			this.state = 6429;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__416 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__543) {
				{
				this.state = 6427;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6419;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6420;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6421;
					this.figure();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6422;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__416:
					{
					this.state = 6423;
					this.portAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6424;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6425;
					this.schematicComplexFigure();
					}
					break;
				case EDIF300Parser.T__543:
					{
					this.state = 6426;
					this.schematicPortStyle();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6431;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6432;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicMasterPortTemplateRef(): SchematicMasterPortTemplateRefContext {
		let _localctx: SchematicMasterPortTemplateRefContext = new SchematicMasterPortTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1268, EDIF300Parser.RULE_schematicMasterPortTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6434;
			this.match(EDIF300Parser.T__509);
			this.state = 6435;
			this.libraryObjectNameRef();
			this.state = 6437;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6436;
				this.libraryRef();
				}
			}

			this.state = 6439;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicMetric(): SchematicMetricContext {
		let _localctx: SchematicMetricContext = new SchematicMetricContext(this._ctx, this.state);
		this.enterRule(_localctx, 1270, EDIF300Parser.RULE_schematicMetric);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6441;
			this.match(EDIF300Parser.T__510);
			this.state = 6442;
			this.setDistance();
			this.state = 6445;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__210:
				{
				this.state = 6443;
				this.hotspotGrid();
				}
				break;
			case EDIF300Parser.T__351:
				{
				this.state = 6444;
				this.noHotspotGrid();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 6448;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__352) {
				{
				this.state = 6447;
				this.nominalHotspotGrid();
				}
			}

			this.state = 6450;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicNet(): SchematicNetContext {
		let _localctx: SchematicNetContext = new SchematicNetContext(this._ctx, this.state);
		this.enterRule(_localctx, 1272, EDIF300Parser.RULE_schematicNet);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6452;
			this.match(EDIF300Parser.T__511);
			this.state = 6453;
			this.interconnectNameDef();
			this.state = 6454;
			this.signalRef();
			this.state = 6455;
			this.schematicInterconnectHeader();
			this.state = 6456;
			this.schematicNetJoined();
			this.state = 6463;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__496 || _la === EDIF300Parser.T__512 || _la === EDIF300Parser.T__642) {
				{
				this.state = 6461;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 6457;
					this.comment();
					}
					break;
				case EDIF300Parser.T__496:
					{
					this.state = 6458;
					this.schematicInterconnectAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__512:
					{
					this.state = 6459;
					this.schematicNetDetails();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 6460;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6465;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6466;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicNetDetails(): SchematicNetDetailsContext {
		let _localctx: SchematicNetDetailsContext = new SchematicNetDetailsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1274, EDIF300Parser.RULE_schematicNetDetails);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6468;
			this.match(EDIF300Parser.T__512);
			this.state = 6471;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__513:
				{
				this.state = 6469;
				this.schematicNetGraphics();
				}
				break;
			case EDIF300Parser.T__554:
				{
				this.state = 6470;
				this.schematicSubNetSet();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 6473;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicNetGraphics(): SchematicNetGraphicsContext {
		let _localctx: SchematicNetGraphicsContext = new SchematicNetGraphicsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1276, EDIF300Parser.RULE_schematicNetGraphics);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6475;
			this.match(EDIF300Parser.T__513);
			this.state = 6482;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__642) {
				{
				this.state = 6480;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 6476;
					this.comment();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6477;
					this.figure();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6478;
					this.schematicComplexFigure();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 6479;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6484;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6485;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicNetJoined(): SchematicNetJoinedContext {
		let _localctx: SchematicNetJoinedContext = new SchematicNetJoinedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1278, EDIF300Parser.RULE_schematicNetJoined);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6487;
			this.match(EDIF300Parser.T__514);
			this.state = 6490;
			this._errHandler.sync(this);
			switch ( this.interpreter.adaptivePredict(this._input, 510, this._ctx) ) {
			case 1:
				{
				this.state = 6488;
				this.portJoined();
				}
				break;

			case 2:
				{
				this.state = 6489;
				this.joinedAsSignal();
				}
				break;
			}
			this.state = 6502;
			this._errHandler.sync(this);
			_alt = this.interpreter.adaptivePredict(this._input, 512, this._ctx);
			while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					{
					this.state = 6500;
					this._errHandler.sync(this);
					switch (this._input.LA(1)) {
					case EDIF300Parser.T__464:
						{
						this.state = 6492;
						this.ripperHotspotRef();
						}
						break;
					case EDIF300Parser.T__485:
						{
						this.state = 6493;
						this.schematicGlobalPortImplementationRef();
						}
						break;
					case EDIF300Parser.T__499:
						{
						this.state = 6494;
						this.schematicInterconnectTerminatorImplementationRef();
						}
						break;
					case EDIF300Parser.T__503:
						{
						this.state = 6495;
						this.schematicJunctionImplementationRef();
						}
						break;
					case EDIF300Parser.T__507:
						{
						this.state = 6496;
						this.schematicMasterPortImplementationRef();
						}
						break;
					case EDIF300Parser.T__516:
						{
						this.state = 6497;
						this.schematicOffPageConnectorImplementationRef();
						}
						break;
					case EDIF300Parser.T__520:
						{
						this.state = 6498;
						this.schematicOnPageConnectorImplementationRef();
						}
						break;
					case EDIF300Parser.T__561:
						{
						this.state = 6499;
						this.schematicSymbolPortImplementationRef();
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
				}
				this.state = 6504;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 512, this._ctx);
			}
			this.state = 6507;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__423:
				{
				this.state = 6505;
				this.portJoined();
				}
				break;
			case EDIF300Parser.T__277:
				{
				this.state = 6506;
				this.joinedAsSignal();
				}
				break;
			case EDIF300Parser.T__1:
			case EDIF300Parser.T__464:
			case EDIF300Parser.T__485:
			case EDIF300Parser.T__499:
			case EDIF300Parser.T__503:
			case EDIF300Parser.T__507:
			case EDIF300Parser.T__516:
			case EDIF300Parser.T__520:
			case EDIF300Parser.T__561:
				break;
			default:
				break;
			}
			this.state = 6519;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__464 || _la === EDIF300Parser.T__485 || ((((_la - 500)) & ~0x1F) === 0 && ((1 << (_la - 500)) & ((1 << (EDIF300Parser.T__499 - 500)) | (1 << (EDIF300Parser.T__503 - 500)) | (1 << (EDIF300Parser.T__507 - 500)) | (1 << (EDIF300Parser.T__516 - 500)) | (1 << (EDIF300Parser.T__520 - 500)))) !== 0) || _la === EDIF300Parser.T__561) {
				{
				this.state = 6517;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__464:
					{
					this.state = 6509;
					this.ripperHotspotRef();
					}
					break;
				case EDIF300Parser.T__485:
					{
					this.state = 6510;
					this.schematicGlobalPortImplementationRef();
					}
					break;
				case EDIF300Parser.T__499:
					{
					this.state = 6511;
					this.schematicInterconnectTerminatorImplementationRef();
					}
					break;
				case EDIF300Parser.T__503:
					{
					this.state = 6512;
					this.schematicJunctionImplementationRef();
					}
					break;
				case EDIF300Parser.T__507:
					{
					this.state = 6513;
					this.schematicMasterPortImplementationRef();
					}
					break;
				case EDIF300Parser.T__516:
					{
					this.state = 6514;
					this.schematicOffPageConnectorImplementationRef();
					}
					break;
				case EDIF300Parser.T__520:
					{
					this.state = 6515;
					this.schematicOnPageConnectorImplementationRef();
					}
					break;
				case EDIF300Parser.T__561:
					{
					this.state = 6516;
					this.schematicSymbolPortImplementationRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6521;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6522;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOffPageConnectorImplementation(): SchematicOffPageConnectorImplementationContext {
		let _localctx: SchematicOffPageConnectorImplementationContext = new SchematicOffPageConnectorImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1280, EDIF300Parser.RULE_schematicOffPageConnectorImplementation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6524;
			this.match(EDIF300Parser.T__515);
			this.state = 6525;
			this.implementationNameDef();
			this.state = 6526;
			this.schematicOffPageConnectorTemplateRef();
			this.state = 6527;
			this.transform();
			this.state = 6537;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__12 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || ((((_la - 443)) & ~0x1F) === 0 && ((1 << (_la - 443)) & ((1 << (EDIF300Parser.T__442 - 443)) | (1 << (EDIF300Parser.T__443 - 443)) | (1 << (EDIF300Parser.T__444 - 443)) | (1 << (EDIF300Parser.T__448 - 443)))) !== 0)) {
				{
				this.state = 6535;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__12:
					{
					this.state = 6528;
					this.associatedInterconnectNameDisplay();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6529;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6530;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 6531;
					this.property();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6532;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6533;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6534;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6539;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6540;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOffPageConnectorImplementationRef(): SchematicOffPageConnectorImplementationRefContext {
		let _localctx: SchematicOffPageConnectorImplementationRefContext = new SchematicOffPageConnectorImplementationRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1282, EDIF300Parser.RULE_schematicOffPageConnectorImplementationRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6542;
			this.match(EDIF300Parser.T__516);
			this.state = 6543;
			this.implementationNameRef();
			this.state = 6544;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOffPageConnectorTemplate(): SchematicOffPageConnectorTemplateContext {
		let _localctx: SchematicOffPageConnectorTemplateContext = new SchematicOffPageConnectorTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1284, EDIF300Parser.RULE_schematicOffPageConnectorTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6546;
			this.match(EDIF300Parser.T__517);
			this.state = 6547;
			this.libraryObjectNameDef();
			this.state = 6548;
			this.schematicTemplateHeader();
			this.state = 6549;
			this.hotspot();
			this.state = 6559;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__12 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
				{
				this.state = 6557;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6550;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__12:
					{
					this.state = 6551;
					this.associatedInterconnectNameDisplay();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6552;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6553;
					this.figure();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6554;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6555;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6556;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6561;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6562;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOffPageConnectorTemplateRef(): SchematicOffPageConnectorTemplateRefContext {
		let _localctx: SchematicOffPageConnectorTemplateRefContext = new SchematicOffPageConnectorTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1286, EDIF300Parser.RULE_schematicOffPageConnectorTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6564;
			this.match(EDIF300Parser.T__518);
			this.state = 6565;
			this.libraryObjectNameRef();
			this.state = 6567;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6566;
				this.libraryRef();
				}
			}

			this.state = 6569;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOnPageConnectorImplementation(): SchematicOnPageConnectorImplementationContext {
		let _localctx: SchematicOnPageConnectorImplementationContext = new SchematicOnPageConnectorImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1288, EDIF300Parser.RULE_schematicOnPageConnectorImplementation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6571;
			this.match(EDIF300Parser.T__519);
			this.state = 6572;
			this.implementationNameDef();
			this.state = 6573;
			this.schematicOnPageConnectorTemplateRef();
			this.state = 6574;
			this.transform();
			this.state = 6584;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__12 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || ((((_la - 443)) & ~0x1F) === 0 && ((1 << (_la - 443)) & ((1 << (EDIF300Parser.T__442 - 443)) | (1 << (EDIF300Parser.T__443 - 443)) | (1 << (EDIF300Parser.T__444 - 443)) | (1 << (EDIF300Parser.T__448 - 443)))) !== 0)) {
				{
				this.state = 6582;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__12:
					{
					this.state = 6575;
					this.associatedInterconnectNameDisplay();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6576;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6577;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 6578;
					this.property();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6579;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6580;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6581;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6586;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6587;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOnPageConnectorImplementationRef(): SchematicOnPageConnectorImplementationRefContext {
		let _localctx: SchematicOnPageConnectorImplementationRefContext = new SchematicOnPageConnectorImplementationRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1290, EDIF300Parser.RULE_schematicOnPageConnectorImplementationRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6589;
			this.match(EDIF300Parser.T__520);
			this.state = 6590;
			this.implementationNameRef();
			this.state = 6591;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOnPageConnectorTemplate(): SchematicOnPageConnectorTemplateContext {
		let _localctx: SchematicOnPageConnectorTemplateContext = new SchematicOnPageConnectorTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1292, EDIF300Parser.RULE_schematicOnPageConnectorTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6593;
			this.match(EDIF300Parser.T__521);
			this.state = 6594;
			this.libraryObjectNameDef();
			this.state = 6595;
			this.schematicTemplateHeader();
			this.state = 6596;
			this.hotspot();
			this.state = 6606;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__12 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
				{
				this.state = 6604;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6597;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__12:
					{
					this.state = 6598;
					this.associatedInterconnectNameDisplay();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6599;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6600;
					this.figure();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6601;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6602;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6603;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6608;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6609;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOnPageConnectorTemplateRef(): SchematicOnPageConnectorTemplateRefContext {
		let _localctx: SchematicOnPageConnectorTemplateRefContext = new SchematicOnPageConnectorTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1294, EDIF300Parser.RULE_schematicOnPageConnectorTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6611;
			this.match(EDIF300Parser.T__522);
			this.state = 6612;
			this.libraryObjectNameRef();
			this.state = 6614;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6613;
				this.libraryRef();
				}
			}

			this.state = 6616;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOtherwiseFrameBorder(): SchematicOtherwiseFrameBorderContext {
		let _localctx: SchematicOtherwiseFrameBorderContext = new SchematicOtherwiseFrameBorderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1296, EDIF300Parser.RULE_schematicOtherwiseFrameBorder);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6618;
			this.match(EDIF300Parser.T__523);
			this.state = 6619;
			this.schematicOtherwiseFrameBorderTemplateRef();
			this.state = 6620;
			this.transform();
			this.state = 6625;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
				{
				this.state = 6623;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__444:
					{
					this.state = 6621;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6622;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6627;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6628;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOtherwiseFrameBorderTemplate(): SchematicOtherwiseFrameBorderTemplateContext {
		let _localctx: SchematicOtherwiseFrameBorderTemplateContext = new SchematicOtherwiseFrameBorderTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1298, EDIF300Parser.RULE_schematicOtherwiseFrameBorderTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6630;
			this.match(EDIF300Parser.T__524);
			this.state = 6631;
			this.libraryObjectNameDef();
			this.state = 6632;
			this.schematicTemplateHeader();
			this.state = 6633;
			this.usableArea();
			this.state = 6641;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
				{
				this.state = 6639;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6634;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6635;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6636;
					this.figure();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6637;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6638;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6643;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6644;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOtherwiseFrameBorderTemplateRef(): SchematicOtherwiseFrameBorderTemplateRefContext {
		let _localctx: SchematicOtherwiseFrameBorderTemplateRefContext = new SchematicOtherwiseFrameBorderTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1300, EDIF300Parser.RULE_schematicOtherwiseFrameBorderTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6646;
			this.match(EDIF300Parser.T__525);
			this.state = 6647;
			this.libraryObjectNameRef();
			this.state = 6649;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6648;
				this.libraryRef();
				}
			}

			this.state = 6651;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOtherwiseFrameImplementation(): SchematicOtherwiseFrameImplementationContext {
		let _localctx: SchematicOtherwiseFrameImplementationContext = new SchematicOtherwiseFrameImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1302, EDIF300Parser.RULE_schematicOtherwiseFrameImplementation);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6653;
			this.match(EDIF300Parser.T__526);
			this.state = 6654;
			this.implementationNameDef();
			this.state = 6655;
			this.otherwiseFrameRef();
			this.state = 6656;
			this.schematicOtherwiseFrameImplementationHeader();
			this.state = 6657;
			this.schematicFrameImplementationDetails();
			this.state = 6658;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicOtherwiseFrameImplementationHeader(): SchematicOtherwiseFrameImplementationHeaderContext {
		let _localctx: SchematicOtherwiseFrameImplementationHeaderContext = new SchematicOtherwiseFrameImplementationHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1304, EDIF300Parser.RULE_schematicOtherwiseFrameImplementationHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6660;
			this.match(EDIF300Parser.T__527);
			this.state = 6662;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__523) {
				{
				this.state = 6661;
				this.schematicOtherwiseFrameBorder();
				}
			}

			this.state = 6664;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortAcPower(): SchematicPortAcPowerContext {
		let _localctx: SchematicPortAcPowerContext = new SchematicPortAcPowerContext(this._ctx, this.state);
		this.enterRule(_localctx, 1306, EDIF300Parser.RULE_schematicPortAcPower);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6666;
			this.match(EDIF300Parser.T__528);
			this.state = 6671;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__529 || _la === EDIF300Parser.T__530) {
				{
				this.state = 6669;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__529:
					{
					this.state = 6667;
					this.schematicPortAcPowerRecommendedFrequency();
					}
					break;
				case EDIF300Parser.T__530:
					{
					this.state = 6668;
					this.schematicPortAcPowerRecommendedVoltageRms();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6673;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6674;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortAcPowerRecommendedFrequency(): SchematicPortAcPowerRecommendedFrequencyContext {
		let _localctx: SchematicPortAcPowerRecommendedFrequencyContext = new SchematicPortAcPowerRecommendedFrequencyContext(this._ctx, this.state);
		this.enterRule(_localctx, 1308, EDIF300Parser.RULE_schematicPortAcPowerRecommendedFrequency);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6676;
			this.match(EDIF300Parser.T__529);
			this.state = 6677;
			this.frequencyValue();
			this.state = 6678;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortAcPowerRecommendedVoltageRms(): SchematicPortAcPowerRecommendedVoltageRmsContext {
		let _localctx: SchematicPortAcPowerRecommendedVoltageRmsContext = new SchematicPortAcPowerRecommendedVoltageRmsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1310, EDIF300Parser.RULE_schematicPortAcPowerRecommendedVoltageRms);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6680;
			this.match(EDIF300Parser.T__530);
			this.state = 6681;
			this.voltageValue();
			this.state = 6682;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortAnalog(): SchematicPortAnalogContext {
		let _localctx: SchematicPortAnalogContext = new SchematicPortAnalogContext(this._ctx, this.state);
		this.enterRule(_localctx, 1312, EDIF300Parser.RULE_schematicPortAnalog);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6684;
			this.match(EDIF300Parser.T__531);
			this.state = 6685;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortAttributes(): SchematicPortAttributesContext {
		let _localctx: SchematicPortAttributesContext = new SchematicPortAttributesContext(this._ctx, this.state);
		this.enterRule(_localctx, 1314, EDIF300Parser.RULE_schematicPortAttributes);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6687;
			this.match(EDIF300Parser.T__532);
			this.state = 6703;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__214 || ((((_la - 529)) & ~0x1F) === 0 && ((1 << (_la - 529)) & ((1 << (EDIF300Parser.T__528 - 529)) | (1 << (EDIF300Parser.T__531 - 529)) | (1 << (EDIF300Parser.T__533 - 529)) | (1 << (EDIF300Parser.T__534 - 529)) | (1 << (EDIF300Parser.T__535 - 529)) | (1 << (EDIF300Parser.T__537 - 529)) | (1 << (EDIF300Parser.T__538 - 529)) | (1 << (EDIF300Parser.T__539 - 529)) | (1 << (EDIF300Parser.T__540 - 529)) | (1 << (EDIF300Parser.T__541 - 529)) | (1 << (EDIF300Parser.T__542 - 529)) | (1 << (EDIF300Parser.T__544 - 529)))) !== 0)) {
				{
				this.state = 6701;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__214:
					{
					this.state = 6688;
					this.ieeeStandard();
					}
					break;
				case EDIF300Parser.T__528:
					{
					this.state = 6689;
					this.schematicPortAcPower();
					}
					break;
				case EDIF300Parser.T__531:
					{
					this.state = 6690;
					this.schematicPortAnalog();
					}
					break;
				case EDIF300Parser.T__533:
					{
					this.state = 6691;
					this.schematicPortChassisGround();
					}
					break;
				case EDIF300Parser.T__534:
					{
					this.state = 6692;
					this.schematicPortClock();
					}
					break;
				case EDIF300Parser.T__535:
					{
					this.state = 6693;
					this.schematicPortDcPower();
					}
					break;
				case EDIF300Parser.T__537:
					{
					this.state = 6694;
					this.schematicPortEarthGround();
					}
					break;
				case EDIF300Parser.T__538:
					{
					this.state = 6695;
					this.schematicPortGround();
					}
					break;
				case EDIF300Parser.T__539:
					{
					this.state = 6696;
					this.schematicPortNonLogical();
					}
					break;
				case EDIF300Parser.T__540:
					{
					this.state = 6697;
					this.schematicPortOpenCollector();
					}
					break;
				case EDIF300Parser.T__541:
					{
					this.state = 6698;
					this.schematicPortOpenEmitter();
					}
					break;
				case EDIF300Parser.T__542:
					{
					this.state = 6699;
					this.schematicPortPower();
					}
					break;
				case EDIF300Parser.T__544:
					{
					this.state = 6700;
					this.schematicPortThreeState();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6705;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6706;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortChassisGround(): SchematicPortChassisGroundContext {
		let _localctx: SchematicPortChassisGroundContext = new SchematicPortChassisGroundContext(this._ctx, this.state);
		this.enterRule(_localctx, 1316, EDIF300Parser.RULE_schematicPortChassisGround);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6708;
			this.match(EDIF300Parser.T__533);
			this.state = 6710;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__531) {
				{
				this.state = 6709;
				this.schematicPortAnalog();
				}
			}

			this.state = 6712;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortClock(): SchematicPortClockContext {
		let _localctx: SchematicPortClockContext = new SchematicPortClockContext(this._ctx, this.state);
		this.enterRule(_localctx, 1318, EDIF300Parser.RULE_schematicPortClock);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6714;
			this.match(EDIF300Parser.T__534);
			this.state = 6716;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__214) {
				{
				this.state = 6715;
				this.ieeeStandard();
				}
			}

			this.state = 6718;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortDcPower(): SchematicPortDcPowerContext {
		let _localctx: SchematicPortDcPowerContext = new SchematicPortDcPowerContext(this._ctx, this.state);
		this.enterRule(_localctx, 1320, EDIF300Parser.RULE_schematicPortDcPower);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6720;
			this.match(EDIF300Parser.T__535);
			this.state = 6725;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__531 || _la === EDIF300Parser.T__536) {
				{
				this.state = 6723;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__531:
					{
					this.state = 6721;
					this.schematicPortAnalog();
					}
					break;
				case EDIF300Parser.T__536:
					{
					this.state = 6722;
					this.schematicPortDcPowerRecommendedVoltage();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6727;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6728;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortDcPowerRecommendedVoltage(): SchematicPortDcPowerRecommendedVoltageContext {
		let _localctx: SchematicPortDcPowerRecommendedVoltageContext = new SchematicPortDcPowerRecommendedVoltageContext(this._ctx, this.state);
		this.enterRule(_localctx, 1322, EDIF300Parser.RULE_schematicPortDcPowerRecommendedVoltage);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6730;
			this.match(EDIF300Parser.T__536);
			this.state = 6731;
			this.voltageValue();
			this.state = 6732;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortEarthGround(): SchematicPortEarthGroundContext {
		let _localctx: SchematicPortEarthGroundContext = new SchematicPortEarthGroundContext(this._ctx, this.state);
		this.enterRule(_localctx, 1324, EDIF300Parser.RULE_schematicPortEarthGround);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6734;
			this.match(EDIF300Parser.T__537);
			this.state = 6736;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__531) {
				{
				this.state = 6735;
				this.schematicPortAnalog();
				}
			}

			this.state = 6738;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortGround(): SchematicPortGroundContext {
		let _localctx: SchematicPortGroundContext = new SchematicPortGroundContext(this._ctx, this.state);
		this.enterRule(_localctx, 1326, EDIF300Parser.RULE_schematicPortGround);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6740;
			this.match(EDIF300Parser.T__538);
			this.state = 6742;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__531) {
				{
				this.state = 6741;
				this.schematicPortAnalog();
				}
			}

			this.state = 6744;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortNonLogical(): SchematicPortNonLogicalContext {
		let _localctx: SchematicPortNonLogicalContext = new SchematicPortNonLogicalContext(this._ctx, this.state);
		this.enterRule(_localctx, 1328, EDIF300Parser.RULE_schematicPortNonLogical);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6746;
			this.match(EDIF300Parser.T__539);
			this.state = 6747;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortOpenCollector(): SchematicPortOpenCollectorContext {
		let _localctx: SchematicPortOpenCollectorContext = new SchematicPortOpenCollectorContext(this._ctx, this.state);
		this.enterRule(_localctx, 1330, EDIF300Parser.RULE_schematicPortOpenCollector);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6749;
			this.match(EDIF300Parser.T__540);
			this.state = 6750;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortOpenEmitter(): SchematicPortOpenEmitterContext {
		let _localctx: SchematicPortOpenEmitterContext = new SchematicPortOpenEmitterContext(this._ctx, this.state);
		this.enterRule(_localctx, 1332, EDIF300Parser.RULE_schematicPortOpenEmitter);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6752;
			this.match(EDIF300Parser.T__541);
			this.state = 6753;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortPower(): SchematicPortPowerContext {
		let _localctx: SchematicPortPowerContext = new SchematicPortPowerContext(this._ctx, this.state);
		this.enterRule(_localctx, 1334, EDIF300Parser.RULE_schematicPortPower);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6755;
			this.match(EDIF300Parser.T__542);
			this.state = 6756;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortStyle(): SchematicPortStyleContext {
		let _localctx: SchematicPortStyleContext = new SchematicPortStyleContext(this._ctx, this.state);
		this.enterRule(_localctx, 1336, EDIF300Parser.RULE_schematicPortStyle);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6758;
			this.match(EDIF300Parser.T__543);
			this.state = 6761;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__349:
				{
				this.state = 6759;
				this.narrowPort();
				}
				break;
			case EDIF300Parser.T__661:
				{
				this.state = 6760;
				this.widePort();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 6763;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicPortThreeState(): SchematicPortThreeStateContext {
		let _localctx: SchematicPortThreeStateContext = new SchematicPortThreeStateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1338, EDIF300Parser.RULE_schematicPortThreeState);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6765;
			this.match(EDIF300Parser.T__544);
			this.state = 6766;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicRequiredDefaults(): SchematicRequiredDefaultsContext {
		let _localctx: SchematicRequiredDefaultsContext = new SchematicRequiredDefaultsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1340, EDIF300Parser.RULE_schematicRequiredDefaults);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6768;
			this.match(EDIF300Parser.T__545);
			this.state = 6769;
			this.schematicMetric();
			this.state = 6770;
			this.fontRef();
			this.state = 6771;
			this.textHeight();
			this.state = 6772;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicRipperImplementation(): SchematicRipperImplementationContext {
		let _localctx: SchematicRipperImplementationContext = new SchematicRipperImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1342, EDIF300Parser.RULE_schematicRipperImplementation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6774;
			this.match(EDIF300Parser.T__546);
			this.state = 6775;
			this.implementationNameDef();
			this.state = 6776;
			this.schematicRipperTemplateRef();
			this.state = 6777;
			this.transform();
			this.state = 6786;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__346 || ((((_la - 443)) & ~0x1F) === 0 && ((1 << (_la - 443)) & ((1 << (EDIF300Parser.T__442 - 443)) | (1 << (EDIF300Parser.T__443 - 443)) | (1 << (EDIF300Parser.T__444 - 443)) | (1 << (EDIF300Parser.T__448 - 443)))) !== 0)) {
				{
				this.state = 6784;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__221:
					{
					this.state = 6778;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6779;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 6780;
					this.property();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6781;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6782;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6783;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6788;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6789;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicRipperImplementationRef(): SchematicRipperImplementationRefContext {
		let _localctx: SchematicRipperImplementationRefContext = new SchematicRipperImplementationRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1344, EDIF300Parser.RULE_schematicRipperImplementationRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6791;
			this.match(EDIF300Parser.T__547);
			this.state = 6792;
			this.implementationNameRef();
			this.state = 6793;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicRipperTemplate(): SchematicRipperTemplateContext {
		let _localctx: SchematicRipperTemplateContext = new SchematicRipperTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1346, EDIF300Parser.RULE_schematicRipperTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6795;
			this.match(EDIF300Parser.T__548);
			this.state = 6796;
			this.libraryObjectNameDef();
			this.state = 6797;
			this.schematicTemplateHeader();
			this.state = 6807;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || ((((_la - 444)) & ~0x1F) === 0 && ((1 << (_la - 444)) & ((1 << (EDIF300Parser.T__443 - 444)) | (1 << (EDIF300Parser.T__463 - 444)) | (1 << (EDIF300Parser.T__474 - 444)))) !== 0)) {
				{
				this.state = 6805;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6798;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6799;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6800;
					this.figure();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6801;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6802;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__463:
					{
					this.state = 6803;
					this.ripperHotspot();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6804;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6809;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6810;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicRipperTemplateRef(): SchematicRipperTemplateRefContext {
		let _localctx: SchematicRipperTemplateRefContext = new SchematicRipperTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1348, EDIF300Parser.RULE_schematicRipperTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6812;
			this.match(EDIF300Parser.T__549);
			this.state = 6813;
			this.libraryObjectNameRef();
			this.state = 6815;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6814;
				this.libraryRef();
				}
			}

			this.state = 6817;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSubBus(): SchematicSubBusContext {
		let _localctx: SchematicSubBusContext = new SchematicSubBusContext(this._ctx, this.state);
		this.enterRule(_localctx, 1350, EDIF300Parser.RULE_schematicSubBus);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6819;
			this.match(EDIF300Parser.T__550);
			this.state = 6820;
			this.interconnectNameDef();
			this.state = 6821;
			this.schematicSubInterconnectHeader();
			this.state = 6822;
			this.schematicBusJoined();
			this.state = 6830;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || ((((_la - 471)) & ~0x1F) === 0 && ((1 << (_la - 471)) & ((1 << (EDIF300Parser.T__470 - 471)) | (1 << (EDIF300Parser.T__473 - 471)) | (1 << (EDIF300Parser.T__496 - 471)))) !== 0) || _la === EDIF300Parser.T__642) {
				{
				this.state = 6828;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 6823;
					this.comment();
					}
					break;
				case EDIF300Parser.T__470:
					{
					this.state = 6824;
					this.schematicBusDetails();
					}
					break;
				case EDIF300Parser.T__473:
					{
					this.state = 6825;
					this.schematicBusSlice();
					}
					break;
				case EDIF300Parser.T__496:
					{
					this.state = 6826;
					this.schematicInterconnectAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 6827;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6832;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6833;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSubBusSet(): SchematicSubBusSetContext {
		let _localctx: SchematicSubBusSetContext = new SchematicSubBusSetContext(this._ctx, this.state);
		this.enterRule(_localctx, 1352, EDIF300Parser.RULE_schematicSubBusSet);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6835;
			this.match(EDIF300Parser.T__551);
			this.state = 6839;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__550) {
				{
				{
				this.state = 6836;
				this.schematicSubBus();
				}
				}
				this.state = 6841;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6842;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSubInterconnectHeader(): SchematicSubInterconnectHeaderContext {
		let _localctx: SchematicSubInterconnectHeaderContext = new SchematicSubInterconnectHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1354, EDIF300Parser.RULE_schematicSubInterconnectHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6844;
			this.match(EDIF300Parser.T__552);
			this.state = 6852;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__97 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__261 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442) {
				{
				this.state = 6850;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__97:
					{
					this.state = 6845;
					this.criticality();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 6846;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__261:
					{
					this.state = 6847;
					this.interconnectDelay();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6848;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 6849;
					this.property();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6854;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6855;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSubNet(): SchematicSubNetContext {
		let _localctx: SchematicSubNetContext = new SchematicSubNetContext(this._ctx, this.state);
		this.enterRule(_localctx, 1356, EDIF300Parser.RULE_schematicSubNet);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6857;
			this.match(EDIF300Parser.T__553);
			this.state = 6858;
			this.interconnectNameDef();
			this.state = 6859;
			this.schematicSubInterconnectHeader();
			this.state = 6860;
			this.schematicNetJoined();
			this.state = 6867;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__496 || _la === EDIF300Parser.T__512 || _la === EDIF300Parser.T__642) {
				{
				this.state = 6865;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 6861;
					this.comment();
					}
					break;
				case EDIF300Parser.T__496:
					{
					this.state = 6862;
					this.schematicInterconnectAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__512:
					{
					this.state = 6863;
					this.schematicNetDetails();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 6864;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6869;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6870;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSubNetSet(): SchematicSubNetSetContext {
		let _localctx: SchematicSubNetSetContext = new SchematicSubNetSetContext(this._ctx, this.state);
		this.enterRule(_localctx, 1358, EDIF300Parser.RULE_schematicSubNetSet);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6872;
			this.match(EDIF300Parser.T__554);
			this.state = 6876;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__553) {
				{
				{
				this.state = 6873;
				this.schematicSubNet();
				}
				}
				this.state = 6878;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6879;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSymbol(): SchematicSymbolContext {
		let _localctx: SchematicSymbolContext = new SchematicSymbolContext(this._ctx, this.state);
		this.enterRule(_localctx, 1360, EDIF300Parser.RULE_schematicSymbol);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6881;
			this.match(EDIF300Parser.T__555);
			this.state = 6882;
			this.viewNameDef();
			this.state = 6883;
			this.schematicSymbolHeader();
			this.state = 6904;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || ((((_la - 40)) & ~0x1F) === 0 && ((1 << (_la - 40)) & ((1 << (EDIF300Parser.T__39 - 40)) | (1 << (EDIF300Parser.T__40 - 40)) | (1 << (EDIF300Parser.T__56 - 40)) | (1 << (EDIF300Parser.T__61 - 40)) | (1 << (EDIF300Parser.T__62 - 40)))) !== 0) || _la === EDIF300Parser.T__119 || _la === EDIF300Parser.T__159 || ((((_la - 222)) & ~0x1F) === 0 && ((1 << (_la - 222)) & ((1 << (EDIF300Parser.T__221 - 222)) | (1 << (EDIF300Parser.T__237 - 222)) | (1 << (EDIF300Parser.T__239 - 222)) | (1 << (EDIF300Parser.T__246 - 222)))) !== 0) || _la === EDIF300Parser.T__398 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__560 || _la === EDIF300Parser.T__642 || _la === EDIF300Parser.T__650) {
				{
				this.state = 6902;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6884;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__39:
					{
					this.state = 6885;
					this.cellNameDisplay();
					}
					break;
				case EDIF300Parser.T__40:
					{
					this.state = 6886;
					this.cellPropertyDisplay();
					}
					break;
				case EDIF300Parser.T__56:
					{
					this.state = 6887;
					this.clusterPropertyDisplay();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 6888;
					this.comment();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6889;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__119:
					{
					this.state = 6890;
					this.designatorDisplay();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6891;
					this.figure();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6892;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__237:
					{
					this.state = 6893;
					this.instanceNameDisplay();
					}
					break;
				case EDIF300Parser.T__239:
					{
					this.state = 6894;
					this.instanceNameGeneratorDisplay();
					}
					break;
				case EDIF300Parser.T__246:
					{
					this.state = 6895;
					this.instanceWidthDisplay();
					}
					break;
				case EDIF300Parser.T__398:
					{
					this.state = 6896;
					this.parameterDisplay();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6897;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6898;
					this.schematicComplexFigure();
					}
					break;
				case EDIF300Parser.T__560:
					{
					this.state = 6899;
					this.schematicSymbolPortImplementation();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 6900;
					this.userData();
					}
					break;
				case EDIF300Parser.T__650:
					{
					this.state = 6901;
					this.viewNameDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6906;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6907;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSymbolBorder(): SchematicSymbolBorderContext {
		let _localctx: SchematicSymbolBorderContext = new SchematicSymbolBorderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1362, EDIF300Parser.RULE_schematicSymbolBorder);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6909;
			this.match(EDIF300Parser.T__556);
			this.state = 6910;
			this.schematicSymbolBorderTemplateRef();
			this.state = 6911;
			this.transform();
			this.state = 6916;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
				{
				this.state = 6914;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__444:
					{
					this.state = 6912;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6913;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6918;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6919;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSymbolBorderTemplate(): SchematicSymbolBorderTemplateContext {
		let _localctx: SchematicSymbolBorderTemplateContext = new SchematicSymbolBorderTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1364, EDIF300Parser.RULE_schematicSymbolBorderTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6921;
			this.match(EDIF300Parser.T__557);
			this.state = 6922;
			this.libraryObjectNameDef();
			this.state = 6923;
			this.schematicTemplateHeader();
			this.state = 6924;
			this.usableArea();
			this.state = 6932;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474) {
				{
				this.state = 6930;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6925;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6926;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6927;
					this.figure();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6928;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6929;
					this.schematicComplexFigure();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6934;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6935;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSymbolBorderTemplateRef(): SchematicSymbolBorderTemplateRefContext {
		let _localctx: SchematicSymbolBorderTemplateRefContext = new SchematicSymbolBorderTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1366, EDIF300Parser.RULE_schematicSymbolBorderTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6937;
			this.match(EDIF300Parser.T__558);
			this.state = 6938;
			this.libraryObjectNameRef();
			this.state = 6940;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 6939;
				this.libraryRef();
				}
			}

			this.state = 6942;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSymbolHeader(): SchematicSymbolHeaderContext {
		let _localctx: SchematicSymbolHeaderContext = new SchematicSymbolHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1368, EDIF300Parser.RULE_schematicSymbolHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6944;
			this.match(EDIF300Parser.T__559);
			this.state = 6945;
			this.schematicUnits();
			this.state = 6958;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__116 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__368 || _la === EDIF300Parser.T__390 || _la === EDIF300Parser.T__439 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__556 || _la === EDIF300Parser.T__597) {
				{
				this.state = 6956;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__14:
					{
					this.state = 6946;
					this.backgroundColor();
					}
					break;
				case EDIF300Parser.T__116:
					{
					this.state = 6947;
					this.derivedFrom();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 6948;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 6949;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__368:
					{
					this.state = 6950;
					this.originalBoundingBox();
					}
					break;
				case EDIF300Parser.T__390:
					{
					this.state = 6951;
					this.pageSize();
					}
					break;
				case EDIF300Parser.T__439:
					{
					this.state = 6952;
					this.previousVersion();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 6953;
					this.property();
					}
					break;
				case EDIF300Parser.T__556:
					{
					this.state = 6954;
					this.schematicSymbolBorder();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 6955;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6960;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6961;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSymbolPortImplementation(): SchematicSymbolPortImplementationContext {
		let _localctx: SchematicSymbolPortImplementationContext = new SchematicSymbolPortImplementationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1370, EDIF300Parser.RULE_schematicSymbolPortImplementation);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6963;
			this.match(EDIF300Parser.T__560);
			this.state = 6964;
			this.symbolPortImplementationNameDef();
			this.state = 6965;
			this.portRef();
			this.state = 6966;
			this.schematicSymbolPortTemplateRef();
			this.state = 6967;
			this.transform();
			this.state = 6973;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__416 || _la === EDIF300Parser.T__444 || _la === EDIF300Parser.T__448) {
				{
				this.state = 6971;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__416:
					{
					this.state = 6968;
					this.portAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__444:
					{
					this.state = 6969;
					this.propertyDisplayOverride();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 6970;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 6975;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 6976;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSymbolPortImplementationRef(): SchematicSymbolPortImplementationRefContext {
		let _localctx: SchematicSymbolPortImplementationRefContext = new SchematicSymbolPortImplementationRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1372, EDIF300Parser.RULE_schematicSymbolPortImplementationRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6978;
			this.match(EDIF300Parser.T__561);
			this.state = 6979;
			this.symbolPortImplementationNameRef();
			this.state = 6980;
			this.schematicInstanceImplementationRef();
			this.state = 6981;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSymbolPortTemplate(): SchematicSymbolPortTemplateContext {
		let _localctx: SchematicSymbolPortTemplateContext = new SchematicSymbolPortTemplateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1374, EDIF300Parser.RULE_schematicSymbolPortTemplate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 6983;
			this.match(EDIF300Parser.T__562);
			this.state = 6984;
			this.libraryObjectNameDef();
			this.state = 6985;
			this.schematicTemplateHeader();
			this.state = 6986;
			this.hotspot();
			this.state = 6987;
			this.portDirectionIndicator();
			this.state = 6999;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__7 || _la === EDIF300Parser.T__62 || _la === EDIF300Parser.T__159 || _la === EDIF300Parser.T__221 || _la === EDIF300Parser.T__416 || _la === EDIF300Parser.T__443 || _la === EDIF300Parser.T__474 || _la === EDIF300Parser.T__532 || _la === EDIF300Parser.T__543) {
				{
				this.state = 6997;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__7:
					{
					this.state = 6988;
					this.annotate();
					}
					break;
				case EDIF300Parser.T__62:
					{
					this.state = 6989;
					this.commentGraphics();
					}
					break;
				case EDIF300Parser.T__159:
					{
					this.state = 6990;
					this.figure();
					}
					break;
				case EDIF300Parser.T__221:
					{
					this.state = 6991;
					this.implementationNameDisplay();
					}
					break;
				case EDIF300Parser.T__416:
					{
					this.state = 6992;
					this.portAttributeDisplay();
					}
					break;
				case EDIF300Parser.T__443:
					{
					this.state = 6993;
					this.propertyDisplay();
					}
					break;
				case EDIF300Parser.T__474:
					{
					this.state = 6994;
					this.schematicComplexFigure();
					}
					break;
				case EDIF300Parser.T__532:
					{
					this.state = 6995;
					this.schematicPortAttributes();
					}
					break;
				case EDIF300Parser.T__543:
					{
					this.state = 6996;
					this.schematicPortStyle();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7001;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7002;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSymbolPortTemplateRef(): SchematicSymbolPortTemplateRefContext {
		let _localctx: SchematicSymbolPortTemplateRefContext = new SchematicSymbolPortTemplateRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1376, EDIF300Parser.RULE_schematicSymbolPortTemplateRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7004;
			this.match(EDIF300Parser.T__563);
			this.state = 7005;
			this.libraryObjectNameRef();
			this.state = 7007;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__313) {
				{
				this.state = 7006;
				this.libraryRef();
				}
			}

			this.state = 7009;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicSymbolRef(): SchematicSymbolRefContext {
		let _localctx: SchematicSymbolRefContext = new SchematicSymbolRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1378, EDIF300Parser.RULE_schematicSymbolRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7011;
			this.match(EDIF300Parser.T__564);
			this.state = 7012;
			this.viewNameRef();
			this.state = 7013;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		let _localctx: SchematicTemplateHeaderContext = new SchematicTemplateHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1380, EDIF300Parser.RULE_schematicTemplateHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7015;
			this.match(EDIF300Parser.T__565);
			this.state = 7016;
			this.schematicUnits();
			this.state = 7025;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__14 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__368 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
				{
				this.state = 7023;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__14:
					{
					this.state = 7017;
					this.backgroundColor();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 7018;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 7019;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__368:
					{
					this.state = 7020;
					this.originalBoundingBox();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 7021;
					this.property();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 7022;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7027;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7028;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicUnits(): SchematicUnitsContext {
		let _localctx: SchematicUnitsContext = new SchematicUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1382, EDIF300Parser.RULE_schematicUnits);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7030;
			this.match(EDIF300Parser.T__566);
			this.state = 7039;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__510 || ((((_la - 576)) & ~0x1F) === 0 && ((1 << (_la - 576)) & ((1 << (EDIF300Parser.T__575 - 576)) | (1 << (EDIF300Parser.T__576 - 576)) | (1 << (EDIF300Parser.T__579 - 576)) | (1 << (EDIF300Parser.T__580 - 576)) | (1 << (EDIF300Parser.T__581 - 576)))) !== 0)) {
				{
				this.state = 7037;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__510:
					{
					this.state = 7031;
					this.schematicMetric();
					}
					break;
				case EDIF300Parser.T__575:
					{
					this.state = 7032;
					this.setAngle();
					}
					break;
				case EDIF300Parser.T__576:
					{
					this.state = 7033;
					this.setCapacitance();
					}
					break;
				case EDIF300Parser.T__579:
					{
					this.state = 7034;
					this.setFrequency();
					}
					break;
				case EDIF300Parser.T__580:
					{
					this.state = 7035;
					this.setTime();
					}
					break;
				case EDIF300Parser.T__581:
					{
					this.state = 7036;
					this.setVoltage();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7041;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7042;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicView(): SchematicViewContext {
		let _localctx: SchematicViewContext = new SchematicViewContext(this._ctx, this.state);
		this.enterRule(_localctx, 1384, EDIF300Parser.RULE_schematicView);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7044;
			this.match(EDIF300Parser.T__567);
			this.state = 7045;
			this.viewNameDef();
			this.state = 7046;
			this.schematicViewHeader();
			this.state = 7047;
			this.logicalConnectivity();
			this.state = 7048;
			this.schematicImplementation();
			this.state = 7053;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__642) {
				{
				this.state = 7051;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 7049;
					this.comment();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 7050;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7055;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7056;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicViewHeader(): SchematicViewHeaderContext {
		let _localctx: SchematicViewHeaderContext = new SchematicViewHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1386, EDIF300Parser.RULE_schematicViewHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7058;
			this.match(EDIF300Parser.T__568);
			this.state = 7059;
			this.schematicUnits();
			this.state = 7068;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__116 || _la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__439 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__597) {
				{
				this.state = 7066;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__116:
					{
					this.state = 7060;
					this.derivedFrom();
					}
					break;
				case EDIF300Parser.T__132:
					{
					this.state = 7061;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 7062;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__439:
					{
					this.state = 7063;
					this.previousVersion();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 7064;
					this.property();
					}
					break;
				case EDIF300Parser.T__597:
					{
					this.state = 7065;
					this.status();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7070;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7071;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicWireAffinity(): SchematicWireAffinityContext {
		let _localctx: SchematicWireAffinityContext = new SchematicWireAffinityContext(this._ctx, this.state);
		this.enterRule(_localctx, 1388, EDIF300Parser.RULE_schematicWireAffinity);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7073;
			this.match(EDIF300Parser.T__569);
			this.state = 7077;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__350:
				{
				this.state = 7074;
				this.narrowWire();
				}
				break;
			case EDIF300Parser.T__662:
				{
				this.state = 7075;
				this.wideWire();
				}
				break;
			case EDIF300Parser.T__636:
				{
				this.state = 7076;
				this.unrestricted();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 7079;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public schematicWireStyle(): SchematicWireStyleContext {
		let _localctx: SchematicWireStyleContext = new SchematicWireStyleContext(this._ctx, this.state);
		this.enterRule(_localctx, 1390, EDIF300Parser.RULE_schematicWireStyle);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7081;
			this.match(EDIF300Parser.T__570);
			this.state = 7084;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__350:
				{
				this.state = 7082;
				this.narrowWire();
				}
				break;
			case EDIF300Parser.T__662:
				{
				this.state = 7083;
				this.wideWire();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 7086;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public second(): SecondContext {
		let _localctx: SecondContext = new SecondContext(this._ctx, this.state);
		this.enterRule(_localctx, 1392, EDIF300Parser.RULE_second);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7088;
			this.match(EDIF300Parser.T__571);
			this.state = 7089;
			this.unitExponent();
			this.state = 7090;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public secondIntegerExpression(): SecondIntegerExpressionContext {
		let _localctx: SecondIntegerExpressionContext = new SecondIntegerExpressionContext(this._ctx, this.state);
		this.enterRule(_localctx, 1394, EDIF300Parser.RULE_secondIntegerExpression);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7092;
			this.integerExpression();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public secondNumber(): SecondNumberContext {
		let _localctx: SecondNumberContext = new SecondNumberContext(this._ctx, this.state);
		this.enterRule(_localctx, 1396, EDIF300Parser.RULE_secondNumber);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7094;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public secondStringExpression(): SecondStringExpressionContext {
		let _localctx: SecondStringExpressionContext = new SecondStringExpressionContext(this._ctx, this.state);
		this.enterRule(_localctx, 1398, EDIF300Parser.RULE_secondStringExpression);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7096;
			this.stringExpression();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public section(): SectionContext {
		let _localctx: SectionContext = new SectionContext(this._ctx, this.state);
		this.enterRule(_localctx, 1400, EDIF300Parser.RULE_section);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7098;
			this.match(EDIF300Parser.T__572);
			this.state = 7099;
			this.sectionNameDef();
			this.state = 7100;
			this.sectionTitle();
			this.state = 7106;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__126 || _la === EDIF300Parser.T__572 || _la === EDIF300Parser.STRING_LITERAL) {
				{
				this.state = 7104;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__126:
					{
					this.state = 7101;
					this.diagram();
					}
					break;
				case EDIF300Parser.T__572:
					{
					this.state = 7102;
					this.section();
					}
					break;
				case EDIF300Parser.STRING_LITERAL:
					{
					this.state = 7103;
					this.stringValue();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7108;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7109;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sectionNameDef(): SectionNameDefContext {
		let _localctx: SectionNameDefContext = new SectionNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1402, EDIF300Parser.RULE_sectionNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7111;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sectionTitle(): SectionTitleContext {
		let _localctx: SectionTitleContext = new SectionTitleContext(this._ctx, this.state);
		this.enterRule(_localctx, 1404, EDIF300Parser.RULE_sectionTitle);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7113;
			this.match(EDIF300Parser.T__573);
			this.state = 7114;
			this.stringToken();
			this.state = 7115;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public sequence(): SequenceContext {
		let _localctx: SequenceContext = new SequenceContext(this._ctx, this.state);
		this.enterRule(_localctx, 1406, EDIF300Parser.RULE_sequence);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7117;
			this.match(EDIF300Parser.T__574);
			this.state = 7118;
			this.fromInteger();
			this.state = 7119;
			this.toInteger();
			this.state = 7121;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__598) {
				{
				this.state = 7120;
				this.step();
				}
			}

			this.state = 7123;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public setAngle(): SetAngleContext {
		let _localctx: SetAngleContext = new SetAngleContext(this._ctx, this.state);
		this.enterRule(_localctx, 1408, EDIF300Parser.RULE_setAngle);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7125;
			this.match(EDIF300Parser.T__575);
			this.state = 7126;
			this.unitRef();
			this.state = 7127;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public setCapacitance(): SetCapacitanceContext {
		let _localctx: SetCapacitanceContext = new SetCapacitanceContext(this._ctx, this.state);
		this.enterRule(_localctx, 1410, EDIF300Parser.RULE_setCapacitance);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7129;
			this.match(EDIF300Parser.T__576);
			this.state = 7130;
			this.unitRef();
			this.state = 7131;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public setCurrent(): SetCurrentContext {
		let _localctx: SetCurrentContext = new SetCurrentContext(this._ctx, this.state);
		this.enterRule(_localctx, 1412, EDIF300Parser.RULE_setCurrent);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7133;
			this.match(EDIF300Parser.T__577);
			this.state = 7134;
			this.unitRef();
			this.state = 7135;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public setDistance(): SetDistanceContext {
		let _localctx: SetDistanceContext = new SetDistanceContext(this._ctx, this.state);
		this.enterRule(_localctx, 1414, EDIF300Parser.RULE_setDistance);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7137;
			this.match(EDIF300Parser.T__578);
			this.state = 7138;
			this.unitRef();
			this.state = 7139;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public setFrequency(): SetFrequencyContext {
		let _localctx: SetFrequencyContext = new SetFrequencyContext(this._ctx, this.state);
		this.enterRule(_localctx, 1416, EDIF300Parser.RULE_setFrequency);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7141;
			this.match(EDIF300Parser.T__579);
			this.state = 7142;
			this.unitRef();
			this.state = 7143;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public setTime(): SetTimeContext {
		let _localctx: SetTimeContext = new SetTimeContext(this._ctx, this.state);
		this.enterRule(_localctx, 1418, EDIF300Parser.RULE_setTime);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7145;
			this.match(EDIF300Parser.T__580);
			this.state = 7146;
			this.unitRef();
			this.state = 7147;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public setVoltage(): SetVoltageContext {
		let _localctx: SetVoltageContext = new SetVoltageContext(this._ctx, this.state);
		this.enterRule(_localctx, 1420, EDIF300Parser.RULE_setVoltage);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7149;
			this.match(EDIF300Parser.T__581);
			this.state = 7150;
			this.unitRef();
			this.state = 7151;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public shape(): ShapeContext {
		let _localctx: ShapeContext = new ShapeContext(this._ctx, this.state);
		this.enterRule(_localctx, 1422, EDIF300Parser.RULE_shape);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7153;
			this.match(EDIF300Parser.T__582);
			this.state = 7154;
			this.curve();
			this.state = 7155;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public siemens(): SiemensContext {
		let _localctx: SiemensContext = new SiemensContext(this._ctx, this.state);
		this.enterRule(_localctx, 1424, EDIF300Parser.RULE_siemens);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7157;
			this.match(EDIF300Parser.T__583);
			this.state = 7158;
			this.unitExponent();
			this.state = 7159;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signal(): SignalContext {
		let _localctx: SignalContext = new SignalContext(this._ctx, this.state);
		this.enterRule(_localctx, 1426, EDIF300Parser.RULE_signal);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7161;
			this.match(EDIF300Parser.T__584);
			this.state = 7162;
			this.signalNameDef();
			this.state = 7163;
			this.signalJoined();
			this.state = 7170;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__85 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__596) {
				{
				this.state = 7168;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__85:
					{
					this.state = 7164;
					this.connectivityTagGenerator();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 7165;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 7166;
					this.property();
					}
					break;
				case EDIF300Parser.T__596:
					{
					this.state = 7167;
					this.signalWidth();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7172;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7173;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalAnnotate(): SignalAnnotateContext {
		let _localctx: SignalAnnotateContext = new SignalAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1428, EDIF300Parser.RULE_signalAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7175;
			this.match(EDIF300Parser.T__585);
			this.state = 7178;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.IDENTIFIER:
				{
				this.state = 7176;
				this.extendSignalDef();
				}
				break;
			case EDIF300Parser.T__593:
				{
				this.state = 7177;
				this.extendSignalMemberDef();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 7185;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__448) {
				{
				this.state = 7183;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 7180;
					this.comment();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 7181;
					this.property();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 7182;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7187;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7188;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalGroup(): SignalGroupContext {
		let _localctx: SignalGroupContext = new SignalGroupContext(this._ctx, this.state);
		this.enterRule(_localctx, 1430, EDIF300Parser.RULE_signalGroup);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7190;
			this.match(EDIF300Parser.T__586);
			this.state = 7191;
			this.signalGroupNameDef();
			this.state = 7192;
			this.signalList();
			this.state = 7197;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442) {
				{
				this.state = 7195;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__442:
					{
					this.state = 7193;
					this.property();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 7194;
					this.nameInformation();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7199;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7200;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalGroupAnnotate(): SignalGroupAnnotateContext {
		let _localctx: SignalGroupAnnotateContext = new SignalGroupAnnotateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1432, EDIF300Parser.RULE_signalGroupAnnotate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7202;
			this.match(EDIF300Parser.T__587);
			this.state = 7203;
			this.extendSignalGroupDef();
			this.state = 7209;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__448) {
				{
				this.state = 7207;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 7204;
					this.comment();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 7205;
					this.property();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 7206;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7211;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7212;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalGroupNameCaseSensitive(): SignalGroupNameCaseSensitiveContext {
		let _localctx: SignalGroupNameCaseSensitiveContext = new SignalGroupNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 1434, EDIF300Parser.RULE_signalGroupNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7214;
			this.match(EDIF300Parser.T__588);
			this.state = 7215;
			this.booleanToken();
			this.state = 7216;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalGroupNameDef(): SignalGroupNameDefContext {
		let _localctx: SignalGroupNameDefContext = new SignalGroupNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1436, EDIF300Parser.RULE_signalGroupNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7218;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalGroupNameRef(): SignalGroupNameRefContext {
		let _localctx: SignalGroupNameRefContext = new SignalGroupNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1438, EDIF300Parser.RULE_signalGroupNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7220;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalGroupRef(): SignalGroupRefContext {
		let _localctx: SignalGroupRefContext = new SignalGroupRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1440, EDIF300Parser.RULE_signalGroupRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7222;
			this.match(EDIF300Parser.T__589);
			this.state = 7223;
			this.signalGroupNameRef();
			this.state = 7224;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalIndexValue(): SignalIndexValueContext {
		let _localctx: SignalIndexValueContext = new SignalIndexValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1442, EDIF300Parser.RULE_signalIndexValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7226;
			this.match(EDIF300Parser.T__590);
			this.state = 7227;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalJoined(): SignalJoinedContext {
		let _localctx: SignalJoinedContext = new SignalJoinedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1444, EDIF300Parser.RULE_signalJoined);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7229;
			this.match(EDIF300Parser.T__591);
			this.state = 7236;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__203 || ((((_la - 423)) & ~0x1F) === 0 && ((1 << (_la - 423)) & ((1 << (EDIF300Parser.T__422 - 423)) | (1 << (EDIF300Parser.T__428 - 423)) | (1 << (EDIF300Parser.T__436 - 423)))) !== 0)) {
				{
				this.state = 7234;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__203:
					{
					this.state = 7230;
					this.globalPortRef();
					}
					break;
				case EDIF300Parser.T__422:
					{
					this.state = 7231;
					this.portInstanceRef();
					}
					break;
				case EDIF300Parser.T__428:
					{
					this.state = 7232;
					this.portMemberRef();
					}
					break;
				case EDIF300Parser.T__436:
					{
					this.state = 7233;
					this.portRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7238;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7239;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalList(): SignalListContext {
		let _localctx: SignalListContext = new SignalListContext(this._ctx, this.state);
		this.enterRule(_localctx, 1446, EDIF300Parser.RULE_signalList);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7241;
			this.match(EDIF300Parser.T__592);
			this.state = 7246;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__589 || _la === EDIF300Parser.T__595) {
				{
				this.state = 7244;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__589:
					{
					this.state = 7242;
					this.signalGroupRef();
					}
					break;
				case EDIF300Parser.T__595:
					{
					this.state = 7243;
					this.signalRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7248;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7249;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalMemberRef(): SignalMemberRefContext {
		let _localctx: SignalMemberRefContext = new SignalMemberRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1448, EDIF300Parser.RULE_signalMemberRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7251;
			this.match(EDIF300Parser.T__593);
			this.state = 7252;
			this.signalNameRef();
			this.state = 7253;
			this.indexValue();
			this.state = 7254;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalNameCaseSensitive(): SignalNameCaseSensitiveContext {
		let _localctx: SignalNameCaseSensitiveContext = new SignalNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 1450, EDIF300Parser.RULE_signalNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7256;
			this.match(EDIF300Parser.T__594);
			this.state = 7257;
			this.booleanToken();
			this.state = 7258;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalNameDef(): SignalNameDefContext {
		let _localctx: SignalNameDefContext = new SignalNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1452, EDIF300Parser.RULE_signalNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7260;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalNameRef(): SignalNameRefContext {
		let _localctx: SignalNameRefContext = new SignalNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1454, EDIF300Parser.RULE_signalNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7262;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalRef(): SignalRefContext {
		let _localctx: SignalRefContext = new SignalRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1456, EDIF300Parser.RULE_signalRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7264;
			this.match(EDIF300Parser.T__595);
			this.state = 7265;
			this.signalNameRef();
			this.state = 7266;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public signalWidth(): SignalWidthContext {
		let _localctx: SignalWidthContext = new SignalWidthContext(this._ctx, this.state);
		this.enterRule(_localctx, 1458, EDIF300Parser.RULE_signalWidth);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7268;
			this.match(EDIF300Parser.T__596);
			this.state = 7269;
			this.integerExpression();
			this.state = 7270;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public simpleName(): SimpleNameContext {
		let _localctx: SimpleNameContext = new SimpleNameContext(this._ctx, this.state);
		this.enterRule(_localctx, 1460, EDIF300Parser.RULE_simpleName);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7272;
			this.stringToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public startPoint(): StartPointContext {
		let _localctx: StartPointContext = new StartPointContext(this._ctx, this.state);
		this.enterRule(_localctx, 1462, EDIF300Parser.RULE_startPoint);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7274;
			this.pointValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public status(): StatusContext {
		let _localctx: StatusContext = new StatusContext(this._ctx, this.state);
		this.enterRule(_localctx, 1464, EDIF300Parser.RULE_status);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7276;
			this.match(EDIF300Parser.T__597);
			this.state = 7283;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__93 || _la === EDIF300Parser.T__642 || _la === EDIF300Parser.T__663) {
				{
				this.state = 7281;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 7277;
					this.comment();
					}
					break;
				case EDIF300Parser.T__93:
					{
					this.state = 7278;
					this.copyright();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 7279;
					this.userData();
					}
					break;
				case EDIF300Parser.T__663:
					{
					this.state = 7280;
					this.written();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7285;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7286;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public step(): StepContext {
		let _localctx: StepContext = new StepContext(this._ctx, this.state);
		this.enterRule(_localctx, 1466, EDIF300Parser.RULE_step);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7288;
			this.match(EDIF300Parser.T__598);
			this.state = 7289;
			this.integerValue();
			this.state = 7290;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public string(): StringContext {
		let _localctx: StringContext = new StringContext(this._ctx, this.state);
		this.enterRule(_localctx, 1468, EDIF300Parser.RULE_string);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7292;
			this.match(EDIF300Parser.T__599);
			this.state = 7293;
			this.stringExpression();
			this.state = 7294;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringConcatenate(): StringConcatenateContext {
		let _localctx: StringConcatenateContext = new StringConcatenateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1470, EDIF300Parser.RULE_stringConcatenate);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7296;
			this.match(EDIF300Parser.T__600);
			this.state = 7300;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__111 || ((((_la - 601)) & ~0x1F) === 0 && ((1 << (_la - 601)) & ((1 << (EDIF300Parser.T__600 - 601)) | (1 << (EDIF300Parser.T__602 - 601)) | (1 << (EDIF300Parser.T__607 - 601)) | (1 << (EDIF300Parser.T__608 - 601)) | (1 << (EDIF300Parser.T__609 - 601)) | (1 << (EDIF300Parser.T__611 - 601)))) !== 0) || _la === EDIF300Parser.STRING_LITERAL) {
				{
				{
				this.state = 7297;
				this.stringExpression();
				}
				}
				this.state = 7302;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7303;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringConstant(): StringConstantContext {
		let _localctx: StringConstantContext = new StringConstantContext(this._ctx, this.state);
		this.enterRule(_localctx, 1472, EDIF300Parser.RULE_stringConstant);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7305;
			this.match(EDIF300Parser.T__601);
			this.state = 7306;
			this.constantNameDef();
			this.state = 7307;
			this.stringToken();
			this.state = 7308;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringConstantRef(): StringConstantRefContext {
		let _localctx: StringConstantRefContext = new StringConstantRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1474, EDIF300Parser.RULE_stringConstantRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7310;
			this.match(EDIF300Parser.T__602);
			this.state = 7311;
			this.constantNameRef();
			this.state = 7312;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringEqual(): StringEqualContext {
		let _localctx: StringEqualContext = new StringEqualContext(this._ctx, this.state);
		this.enterRule(_localctx, 1476, EDIF300Parser.RULE_stringEqual);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7314;
			this.match(EDIF300Parser.T__603);
			this.state = 7315;
			this.firstStringExpression();
			this.state = 7316;
			this.secondStringExpression();
			this.state = 7317;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringExpression(): StringExpressionContext {
		let _localctx: StringExpressionContext = new StringExpressionContext(this._ctx, this.state);
		this.enterRule(_localctx, 1478, EDIF300Parser.RULE_stringExpression);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7327;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__607:
				{
				this.state = 7319;
				this.stringParameterRef();
				}
				break;
			case EDIF300Parser.STRING_LITERAL:
				{
				this.state = 7320;
				this.stringToken();
				}
				break;
			case EDIF300Parser.T__602:
				{
				this.state = 7321;
				this.stringConstantRef();
				}
				break;
			case EDIF300Parser.T__600:
				{
				this.state = 7322;
				this.stringConcatenate();
				}
				break;
			case EDIF300Parser.T__611:
				{
				this.state = 7323;
				this.substring();
				}
				break;
			case EDIF300Parser.T__111:
				{
				this.state = 7324;
				this.decimalToString();
				}
				break;
			case EDIF300Parser.T__608:
				{
				this.state = 7325;
				this.stringPrefix();
				}
				break;
			case EDIF300Parser.T__609:
				{
				this.state = 7326;
				this.stringSuffix();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringLength(): StringLengthContext {
		let _localctx: StringLengthContext = new StringLengthContext(this._ctx, this.state);
		this.enterRule(_localctx, 1480, EDIF300Parser.RULE_stringLength);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7329;
			this.match(EDIF300Parser.T__604);
			this.state = 7330;
			this.stringExpression();
			this.state = 7331;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringParameter(): StringParameterContext {
		let _localctx: StringParameterContext = new StringParameterContext(this._ctx, this.state);
		this.enterRule(_localctx, 1482, EDIF300Parser.RULE_stringParameter);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7333;
			this.match(EDIF300Parser.T__605);
			this.state = 7334;
			this.parameterNameDef();
			this.state = 7339;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__599) {
				{
				this.state = 7337;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__346:
					{
					this.state = 7335;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__599:
					{
					this.state = 7336;
					this.string();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7341;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7342;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringParameterAssign(): StringParameterAssignContext {
		let _localctx: StringParameterAssignContext = new StringParameterAssignContext(this._ctx, this.state);
		this.enterRule(_localctx, 1484, EDIF300Parser.RULE_stringParameterAssign);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7344;
			this.match(EDIF300Parser.T__606);
			this.state = 7345;
			this.parameterNameRef();
			this.state = 7346;
			this.stringExpression();
			this.state = 7347;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringParameterRef(): StringParameterRefContext {
		let _localctx: StringParameterRefContext = new StringParameterRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1486, EDIF300Parser.RULE_stringParameterRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7349;
			this.match(EDIF300Parser.T__607);
			this.state = 7350;
			this.parameterNameRef();
			this.state = 7351;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringPrefix(): StringPrefixContext {
		let _localctx: StringPrefixContext = new StringPrefixContext(this._ctx, this.state);
		this.enterRule(_localctx, 1488, EDIF300Parser.RULE_stringPrefix);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7353;
			this.match(EDIF300Parser.T__608);
			this.state = 7354;
			this.stringExpression();
			this.state = 7355;
			this.substringLength();
			this.state = 7356;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringSuffix(): StringSuffixContext {
		let _localctx: StringSuffixContext = new StringSuffixContext(this._ctx, this.state);
		this.enterRule(_localctx, 1490, EDIF300Parser.RULE_stringSuffix);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7358;
			this.match(EDIF300Parser.T__609);
			this.state = 7359;
			this.stringExpression();
			this.state = 7360;
			this.substringOffset();
			this.state = 7361;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringValue(): StringValueContext {
		let _localctx: StringValueContext = new StringValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1492, EDIF300Parser.RULE_stringValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7363;
			this.stringToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public strong(): StrongContext {
		let _localctx: StrongContext = new StrongContext(this._ctx, this.state);
		this.enterRule(_localctx, 1494, EDIF300Parser.RULE_strong);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7365;
			this.match(EDIF300Parser.T__610);
			this.state = 7366;
			this.logicNameRef();
			this.state = 7367;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public subIssue(): SubIssueContext {
		let _localctx: SubIssueContext = new SubIssueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1496, EDIF300Parser.RULE_subIssue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7369;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public substring(): SubstringContext {
		let _localctx: SubstringContext = new SubstringContext(this._ctx, this.state);
		this.enterRule(_localctx, 1498, EDIF300Parser.RULE_substring);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7371;
			this.match(EDIF300Parser.T__611);
			this.state = 7372;
			this.stringExpression();
			this.state = 7373;
			this.substringLength();
			this.state = 7374;
			this.substringOffset();
			this.state = 7375;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public substringLength(): SubstringLengthContext {
		let _localctx: SubstringLengthContext = new SubstringLengthContext(this._ctx, this.state);
		this.enterRule(_localctx, 1500, EDIF300Parser.RULE_substringLength);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7377;
			this.integerExpression();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public substringOffset(): SubstringOffsetContext {
		let _localctx: SubstringOffsetContext = new SubstringOffsetContext(this._ctx, this.state);
		this.enterRule(_localctx, 1502, EDIF300Parser.RULE_substringOffset);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7379;
			this.integerExpression();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public subtrahend(): SubtrahendContext {
		let _localctx: SubtrahendContext = new SubtrahendContext(this._ctx, this.state);
		this.enterRule(_localctx, 1504, EDIF300Parser.RULE_subtrahend);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7381;
			this.integerExpression();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public symbolicLayoutUnits(): SymbolicLayoutUnitsContext {
		let _localctx: SymbolicLayoutUnitsContext = new SymbolicLayoutUnitsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1506, EDIF300Parser.RULE_symbolicLayoutUnits);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7383;
			this.match(EDIF300Parser.T__612);
			this.state = 7390;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 576)) & ~0x1F) === 0 && ((1 << (_la - 576)) & ((1 << (EDIF300Parser.T__575 - 576)) | (1 << (EDIF300Parser.T__576 - 576)) | (1 << (EDIF300Parser.T__578 - 576)) | (1 << (EDIF300Parser.T__580 - 576)))) !== 0)) {
				{
				this.state = 7388;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__575:
					{
					this.state = 7384;
					this.setAngle();
					}
					break;
				case EDIF300Parser.T__576:
					{
					this.state = 7385;
					this.setCapacitance();
					}
					break;
				case EDIF300Parser.T__578:
					{
					this.state = 7386;
					this.setDistance();
					}
					break;
				case EDIF300Parser.T__580:
					{
					this.state = 7387;
					this.setTime();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7392;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7393;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public symbolicLayoutView(): SymbolicLayoutViewContext {
		let _localctx: SymbolicLayoutViewContext = new SymbolicLayoutViewContext(this._ctx, this.state);
		this.enterRule(_localctx, 1508, EDIF300Parser.RULE_symbolicLayoutView);
		let _la: number;
		try {
			let _alt: number;
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7395;
			this.match(EDIF300Parser.T__613);
			this.state = 7396;
			this.viewNameDef();
			this.state = 7401;
			this._errHandler.sync(this);
			_alt = this.interpreter.adaptivePredict(this._input, 605, this._ctx);
			while (_alt !== 2 && _alt !== ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					{
					this.state = 7399;
					this._errHandler.sync(this);
					switch (this._input.LA(1)) {
					case EDIF300Parser.T__61:
						{
						this.state = 7397;
						this.comment();
						}
						break;
					case EDIF300Parser.T__642:
						{
						this.state = 7398;
						this.userData();
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
				}
				this.state = 7403;
				this._errHandler.sync(this);
				_alt = this.interpreter.adaptivePredict(this._input, 605, this._ctx);
			}
			this.state = 7405;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__346) {
				{
				this.state = 7404;
				this.nameInformation();
				}
			}

			this.state = 7411;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__642) {
				{
				this.state = 7409;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 7407;
					this.comment();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 7408;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7413;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7414;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public symbolPortImplementationNameDef(): SymbolPortImplementationNameDefContext {
		let _localctx: SymbolPortImplementationNameDefContext = new SymbolPortImplementationNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1510, EDIF300Parser.RULE_symbolPortImplementationNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7416;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public symbolPortImplementationNameRef(): SymbolPortImplementationNameRefContext {
		let _localctx: SymbolPortImplementationNameRefContext = new SymbolPortImplementationNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1512, EDIF300Parser.RULE_symbolPortImplementationNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7418;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public technology(): TechnologyContext {
		let _localctx: TechnologyContext = new TechnologyContext(this._ctx, this.state);
		this.enterRule(_localctx, 1514, EDIF300Parser.RULE_technology);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7420;
			this.match(EDIF300Parser.T__614);
			this.state = 7421;
			this.physicalScaling();
			this.state = 7428;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__160 || _la === EDIF300Parser.T__319 || _la === EDIF300Parser.T__642) {
				{
				this.state = 7426;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 7422;
					this.comment();
					}
					break;
				case EDIF300Parser.T__160:
					{
					this.state = 7423;
					this.figureGroup();
					}
					break;
				case EDIF300Parser.T__319:
					{
					this.state = 7424;
					this.logicDefinitions();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 7425;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7430;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7431;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public textHeight(): TextHeightContext {
		let _localctx: TextHeightContext = new TextHeightContext(this._ctx, this.state);
		this.enterRule(_localctx, 1516, EDIF300Parser.RULE_textHeight);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7433;
			this.match(EDIF300Parser.T__615);
			this.state = 7434;
			this.lengthValue();
			this.state = 7435;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public throughPoint(): ThroughPointContext {
		let _localctx: ThroughPointContext = new ThroughPointContext(this._ctx, this.state);
		this.enterRule(_localctx, 1518, EDIF300Parser.RULE_throughPoint);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7437;
			this.numberPoint();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public time(): TimeContext {
		let _localctx: TimeContext = new TimeContext(this._ctx, this.state);
		this.enterRule(_localctx, 1520, EDIF300Parser.RULE_time);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7439;
			this.match(EDIF300Parser.T__616);
			this.state = 7440;
			this.hourNumber();
			this.state = 7441;
			this.minuteNumber();
			this.state = 7442;
			this.secondNumber();
			this.state = 7443;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public timeDelay(): TimeDelayContext {
		let _localctx: TimeDelayContext = new TimeDelayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1522, EDIF300Parser.RULE_timeDelay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7445;
			this.timeValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public timeInterval(): TimeIntervalContext {
		let _localctx: TimeIntervalContext = new TimeIntervalContext(this._ctx, this.state);
		this.enterRule(_localctx, 1524, EDIF300Parser.RULE_timeInterval);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7447;
			this.match(EDIF300Parser.T__617);
			this.state = 7450;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__153:
				{
				this.state = 7448;
				this.event();
				}
				break;
			case EDIF300Parser.T__363:
				{
				this.state = 7449;
				this.offsetEvent();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 7455;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__153:
				{
				this.state = 7452;
				this.event();
				}
				break;
			case EDIF300Parser.T__363:
				{
				this.state = 7453;
				this.offsetEvent();
				}
				break;
			case EDIF300Parser.T__144:
				{
				this.state = 7454;
				this.duration();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 7457;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public timeStamp(): TimeStampContext {
		let _localctx: TimeStampContext = new TimeStampContext(this._ctx, this.state);
		this.enterRule(_localctx, 1526, EDIF300Parser.RULE_timeStamp);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7459;
			this.match(EDIF300Parser.T__618);
			this.state = 7460;
			this.date();
			this.state = 7461;
			this.time();
			this.state = 7462;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public timeValue(): TimeValueContext {
		let _localctx: TimeValueContext = new TimeValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1528, EDIF300Parser.RULE_timeValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7464;
			this.miNoMaxValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public timing(): TimingContext {
		let _localctx: TimingContext = new TimingContext(this._ctx, this.state);
		this.enterRule(_localctx, 1530, EDIF300Parser.RULE_timing);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7466;
			this.match(EDIF300Parser.T__619);
			this.state = 7467;
			this.timingNameDef();
			this.state = 7468;
			this.derivation();
			this.state = 7476;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__175 || _la === EDIF300Parser.T__402 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__642) {
				{
				this.state = 7474;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 7469;
					this.comment();
					}
					break;
				case EDIF300Parser.T__175:
					{
					this.state = 7470;
					this.forbiddenEvent();
					}
					break;
				case EDIF300Parser.T__402:
					{
					this.state = 7471;
					this.pathDelay();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 7472;
					this.property();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 7473;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7478;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7479;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public timingDisplay(): TimingDisplayContext {
		let _localctx: TimingDisplayContext = new TimingDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1532, EDIF300Parser.RULE_timingDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7481;
			this.match(EDIF300Parser.T__620);
			this.state = 7482;
			this.timingNameRef();
			this.state = 7486;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128) {
				{
				{
				this.state = 7483;
				this.display();
				}
				}
				this.state = 7488;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7489;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public timingNameDef(): TimingNameDefContext {
		let _localctx: TimingNameDefContext = new TimingNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1534, EDIF300Parser.RULE_timingNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7491;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public timingNameRef(): TimingNameRefContext {
		let _localctx: TimingNameRefContext = new TimingNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1536, EDIF300Parser.RULE_timingNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7493;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public toInteger(): ToIntegerContext {
		let _localctx: ToIntegerContext = new ToIntegerContext(this._ctx, this.state);
		this.enterRule(_localctx, 1538, EDIF300Parser.RULE_toInteger);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7495;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public topJustify(): TopJustifyContext {
		let _localctx: TopJustifyContext = new TopJustifyContext(this._ctx, this.state);
		this.enterRule(_localctx, 1540, EDIF300Parser.RULE_topJustify);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7497;
			this.match(EDIF300Parser.T__621);
			this.state = 7498;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public totalPages(): TotalPagesContext {
		let _localctx: TotalPagesContext = new TotalPagesContext(this._ctx, this.state);
		this.enterRule(_localctx, 1542, EDIF300Parser.RULE_totalPages);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7500;
			this.match(EDIF300Parser.T__622);
			this.state = 7501;
			this.integerToken();
			this.state = 7502;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public totalPagesDisplay(): TotalPagesDisplayContext {
		let _localctx: TotalPagesDisplayContext = new TotalPagesDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1544, EDIF300Parser.RULE_totalPagesDisplay);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7504;
			this.match(EDIF300Parser.T__623);
			this.state = 7508;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__4:
				{
				this.state = 7505;
				this.addDisplay();
				}
				break;
			case EDIF300Parser.T__457:
				{
				this.state = 7506;
				this.replaceDisplay();
				}
				break;
			case EDIF300Parser.T__454:
				{
				this.state = 7507;
				this.removeDisplay();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 7510;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public transform(): TransformContext {
		let _localctx: TransformContext = new TransformContext(this._ctx, this.state);
		this.enterRule(_localctx, 1546, EDIF300Parser.RULE_transform);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7512;
			this.match(EDIF300Parser.T__624);
			this.state = 7519;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__367 || ((((_la - 466)) & ~0x1F) === 0 && ((1 << (_la - 466)) & ((1 << (EDIF300Parser.T__465 - 466)) | (1 << (EDIF300Parser.T__467 - 466)) | (1 << (EDIF300Parser.T__468 - 466)))) !== 0)) {
				{
				this.state = 7517;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__367:
					{
					this.state = 7513;
					this.origin();
					}
					break;
				case EDIF300Parser.T__465:
					{
					this.state = 7514;
					this.rotation();
					}
					break;
				case EDIF300Parser.T__467:
					{
					this.state = 7515;
					this.scaleX();
					}
					break;
				case EDIF300Parser.T__468:
					{
					this.state = 7516;
					this.scaleY();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7521;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7522;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public transition(): TransitionContext {
		let _localctx: TransitionContext = new TransitionContext(this._ctx, this.state);
		this.enterRule(_localctx, 1548, EDIF300Parser.RULE_transition);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7524;
			this.match(EDIF300Parser.T__625);
			this.state = 7525;
			this.previousLogicValue();
			this.state = 7526;
			this.presentLogicValue();
			this.state = 7527;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public etrue(): EtrueContext {
		let _localctx: EtrueContext = new EtrueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1550, EDIF300Parser.RULE_etrue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7529;
			this.match(EDIF300Parser.T__626);
			this.state = 7530;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public truncate(): TruncateContext {
		let _localctx: TruncateContext = new TruncateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1552, EDIF300Parser.RULE_truncate);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7532;
			this.match(EDIF300Parser.T__627);
			this.state = 7533;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public typedValue(): TypedValueContext {
		let _localctx: TypedValueContext = new TypedValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1554, EDIF300Parser.RULE_typedValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7541;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__23:
				{
				this.state = 7535;
				this.eboolean();
				}
				break;
			case EDIF300Parser.T__247:
				{
				this.state = 7536;
				this.integer();
				}
				break;
			case EDIF300Parser.T__336:
				{
				this.state = 7537;
				this.miNoMax();
				}
				break;
			case EDIF300Parser.T__356:
				{
				this.state = 7538;
				this.number();
				}
				break;
			case EDIF300Parser.T__411:
				{
				this.state = 7539;
				this.point();
				}
				break;
			case EDIF300Parser.T__599:
				{
				this.state = 7540;
				this.string();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public typeface(): TypefaceContext {
		let _localctx: TypefaceContext = new TypefaceContext(this._ctx, this.state);
		this.enterRule(_localctx, 1556, EDIF300Parser.RULE_typeface);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7543;
			this.match(EDIF300Parser.T__628);
			this.state = 7544;
			this.fontFamily();
			this.state = 7546;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__629) {
				{
				this.state = 7545;
				this.typefaceSuffix();
				}
			}

			this.state = 7548;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public typefaceSuffix(): TypefaceSuffixContext {
		let _localctx: TypefaceSuffixContext = new TypefaceSuffixContext(this._ctx, this.state);
		this.enterRule(_localctx, 1558, EDIF300Parser.RULE_typefaceSuffix);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7550;
			this.match(EDIF300Parser.T__629);
			this.state = 7551;
			this.stringToken();
			this.state = 7552;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unconfigured(): UnconfiguredContext {
		let _localctx: UnconfiguredContext = new UnconfiguredContext(this._ctx, this.state);
		this.enterRule(_localctx, 1560, EDIF300Parser.RULE_unconfigured);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7554;
			this.match(EDIF300Parser.T__630);
			this.state = 7555;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unconstrained(): UnconstrainedContext {
		let _localctx: UnconstrainedContext = new UnconstrainedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1562, EDIF300Parser.RULE_unconstrained);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7557;
			this.match(EDIF300Parser.T__631);
			this.state = 7558;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public undefined(): UndefinedContext {
		let _localctx: UndefinedContext = new UndefinedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1564, EDIF300Parser.RULE_undefined);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7560;
			this.match(EDIF300Parser.T__632);
			this.state = 7561;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unit(): UnitContext {
		let _localctx: UnitContext = new UnitContext(this._ctx, this.state);
		this.enterRule(_localctx, 1566, EDIF300Parser.RULE_unit);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7563;
			this.match(EDIF300Parser.T__633);
			this.state = 7564;
			this.unitNameDef();
			this.state = 7565;
			this.numberOfNewUnits();
			this.state = 7566;
			this.numberOfBasicUnits();
			this.state = 7590;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__5 || _la === EDIF300Parser.T__35 || _la === EDIF300Parser.T__44 || _la === EDIF300Parser.T__96 || _la === EDIF300Parser.T__114 || _la === EDIF300Parser.T__156 || _la === EDIF300Parser.T__158 || _la === EDIF300Parser.T__205 || _la === EDIF300Parser.T__206 || ((((_la - 279)) & ~0x1F) === 0 && ((1 << (_la - 279)) & ((1 << (EDIF300Parser.T__278 - 279)) | (1 << (EDIF300Parser.T__301 - 279)) | (1 << (EDIF300Parser.T__303 - 279)))) !== 0) || _la === EDIF300Parser.T__332 || _la === EDIF300Parser.T__339 || _la === EDIF300Parser.T__364 || _la === EDIF300Parser.T__451 || _la === EDIF300Parser.T__571 || _la === EDIF300Parser.T__583 || ((((_la - 656)) & ~0x1F) === 0 && ((1 << (_la - 656)) & ((1 << (EDIF300Parser.T__655 - 656)) | (1 << (EDIF300Parser.T__657 - 656)) | (1 << (EDIF300Parser.T__660 - 656)))) !== 0)) {
				{
				this.state = 7588;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__5:
					{
					this.state = 7567;
					this.ampere();
					}
					break;
				case EDIF300Parser.T__35:
					{
					this.state = 7568;
					this.candela();
					}
					break;
				case EDIF300Parser.T__44:
					{
					this.state = 7569;
					this.celsius();
					}
					break;
				case EDIF300Parser.T__96:
					{
					this.state = 7570;
					this.coulomb();
					}
					break;
				case EDIF300Parser.T__114:
					{
					this.state = 7571;
					this.degree();
					}
					break;
				case EDIF300Parser.T__156:
					{
					this.state = 7572;
					this.fahrenheit();
					}
					break;
				case EDIF300Parser.T__158:
					{
					this.state = 7573;
					this.farad();
					}
					break;
				case EDIF300Parser.T__205:
					{
					this.state = 7574;
					this.henry();
					}
					break;
				case EDIF300Parser.T__206:
					{
					this.state = 7575;
					this.hertz();
					}
					break;
				case EDIF300Parser.T__278:
					{
					this.state = 7576;
					this.joule();
					}
					break;
				case EDIF300Parser.T__301:
					{
					this.state = 7577;
					this.kelvin();
					}
					break;
				case EDIF300Parser.T__303:
					{
					this.state = 7578;
					this.kilogram();
					}
					break;
				case EDIF300Parser.T__332:
					{
					this.state = 7579;
					this.meter();
					}
					break;
				case EDIF300Parser.T__339:
					{
					this.state = 7580;
					this.mole();
					}
					break;
				case EDIF300Parser.T__364:
					{
					this.state = 7581;
					this.ohm();
					}
					break;
				case EDIF300Parser.T__451:
					{
					this.state = 7582;
					this.radian();
					}
					break;
				case EDIF300Parser.T__571:
					{
					this.state = 7583;
					this.second();
					}
					break;
				case EDIF300Parser.T__583:
					{
					this.state = 7584;
					this.siemens();
					}
					break;
				case EDIF300Parser.T__655:
					{
					this.state = 7585;
					this.volt();
					}
					break;
				case EDIF300Parser.T__657:
					{
					this.state = 7586;
					this.watt();
					}
					break;
				case EDIF300Parser.T__660:
					{
					this.state = 7587;
					this.weber();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7592;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7593;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unitDefinitions(): UnitDefinitionsContext {
		let _localctx: UnitDefinitionsContext = new UnitDefinitionsContext(this._ctx, this.state);
		this.enterRule(_localctx, 1568, EDIF300Parser.RULE_unitDefinitions);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7595;
			this.match(EDIF300Parser.T__634);
			this.state = 7599;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__633) {
				{
				{
				this.state = 7596;
				this.unit();
				}
				}
				this.state = 7601;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7602;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unitExponent(): UnitExponentContext {
		let _localctx: UnitExponentContext = new UnitExponentContext(this._ctx, this.state);
		this.enterRule(_localctx, 1570, EDIF300Parser.RULE_unitExponent);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7604;
			this.scaledInteger();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unitNameDef(): UnitNameDefContext {
		let _localctx: UnitNameDefContext = new UnitNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1572, EDIF300Parser.RULE_unitNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7606;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unitNameRef(): UnitNameRefContext {
		let _localctx: UnitNameRefContext = new UnitNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1574, EDIF300Parser.RULE_unitNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7608;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unitRef(): UnitRefContext {
		let _localctx: UnitRefContext = new UnitRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1576, EDIF300Parser.RULE_unitRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7610;
			this.match(EDIF300Parser.T__635);
			this.state = 7611;
			this.unitNameRef();
			this.state = 7612;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unrestricted(): UnrestrictedContext {
		let _localctx: UnrestrictedContext = new UnrestrictedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1578, EDIF300Parser.RULE_unrestricted);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7614;
			this.match(EDIF300Parser.T__636);
			this.state = 7615;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unspecified(): UnspecifiedContext {
		let _localctx: UnspecifiedContext = new UnspecifiedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1580, EDIF300Parser.RULE_unspecified);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7617;
			this.match(EDIF300Parser.T__637);
			this.state = 7618;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unspecifiedDirectionPort(): UnspecifiedDirectionPortContext {
		let _localctx: UnspecifiedDirectionPortContext = new UnspecifiedDirectionPortContext(this._ctx, this.state);
		this.enterRule(_localctx, 1582, EDIF300Parser.RULE_unspecifiedDirectionPort);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7620;
			this.match(EDIF300Parser.T__638);
			this.state = 7621;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public untyped(): UntypedContext {
		let _localctx: UntypedContext = new UntypedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1584, EDIF300Parser.RULE_untyped);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7623;
			this.match(EDIF300Parser.T__639);
			this.state = 7624;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public unused(): UnusedContext {
		let _localctx: UnusedContext = new UnusedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1586, EDIF300Parser.RULE_unused);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7626;
			this.match(EDIF300Parser.T__640);
			this.state = 7627;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public usableArea(): UsableAreaContext {
		let _localctx: UsableAreaContext = new UsableAreaContext(this._ctx, this.state);
		this.enterRule(_localctx, 1588, EDIF300Parser.RULE_usableArea);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7629;
			this.match(EDIF300Parser.T__641);
			this.state = 7633;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__453) {
				{
				{
				this.state = 7630;
				this.rectangle();
				}
				}
				this.state = 7635;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7636;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public userData(): UserDataContext {
		let _localctx: UserDataContext = new UserDataContext(this._ctx, this.state);
		this.enterRule(_localctx, 1590, EDIF300Parser.RULE_userData);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7638;
			this.match(EDIF300Parser.T__642);
			this.state = 7639;
			this.userDataTag();
			this.state = 7646;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 643)) & ~0x1F) === 0 && ((1 << (_la - 643)) & ((1 << (EDIF300Parser.T__642 - 643)) | (1 << (EDIF300Parser.IDENTIFIER - 643)) | (1 << (EDIF300Parser.STRING_LITERAL - 643)) | (1 << (EDIF300Parser.DECIMAL_LITERAL - 643)))) !== 0)) {
				{
				this.state = 7644;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.IDENTIFIER:
					{
					this.state = 7640;
					this.match(EDIF300Parser.IDENTIFIER);
					}
					break;
				case EDIF300Parser.DECIMAL_LITERAL:
					{
					this.state = 7641;
					this.integerToken();
					}
					break;
				case EDIF300Parser.STRING_LITERAL:
					{
					this.state = 7642;
					this.stringToken();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 7643;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7648;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7649;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public userDataTag(): UserDataTagContext {
		let _localctx: UserDataTagContext = new UserDataTagContext(this._ctx, this.state);
		this.enterRule(_localctx, 1592, EDIF300Parser.RULE_userDataTag);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7651;
			this.match(EDIF300Parser.IDENTIFIER);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public version(): VersionContext {
		let _localctx: VersionContext = new VersionContext(this._ctx, this.state);
		this.enterRule(_localctx, 1594, EDIF300Parser.RULE_version);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7653;
			this.match(EDIF300Parser.T__643);
			this.state = 7654;
			this.stringValue();
			this.state = 7655;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public verticalJustification(): VerticalJustificationContext {
		let _localctx: VerticalJustificationContext = new VerticalJustificationContext(this._ctx, this.state);
		this.enterRule(_localctx, 1596, EDIF300Parser.RULE_verticalJustification);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7657;
			this.match(EDIF300Parser.T__644);
			this.state = 7663;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__33:
				{
				this.state = 7658;
				this.bottomJustify();
				}
				break;
			case EDIF300Parser.T__15:
				{
				this.state = 7659;
				this.baselineJustify();
				}
				break;
			case EDIF300Parser.T__333:
				{
				this.state = 7660;
				this.middleJustify();
				}
				break;
			case EDIF300Parser.T__36:
				{
				this.state = 7661;
				this.caplineJustify();
				}
				break;
			case EDIF300Parser.T__621:
				{
				this.state = 7662;
				this.topJustify();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 7665;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewGroup(): ViewGroupContext {
		let _localctx: ViewGroupContext = new ViewGroupContext(this._ctx, this.state);
		this.enterRule(_localctx, 1598, EDIF300Parser.RULE_viewGroup);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7667;
			this.match(EDIF300Parser.T__645);
			this.state = 7668;
			this.viewGroupNameDef();
			this.state = 7669;
			this.viewGroupHeader();
			this.state = 7676;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || ((((_la - 643)) & ~0x1F) === 0 && ((1 << (_la - 643)) & ((1 << (EDIF300Parser.T__642 - 643)) | (1 << (EDIF300Parser.T__648 - 643)) | (1 << (EDIF300Parser.T__653 - 643)))) !== 0)) {
				{
				this.state = 7674;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 7670;
					this.comment();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 7671;
					this.userData();
					}
					break;
				case EDIF300Parser.T__648:
					{
					this.state = 7672;
					this.viewGroupRef();
					}
					break;
				case EDIF300Parser.T__653:
					{
					this.state = 7673;
					this.viewRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7678;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7679;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewGroupHeader(): ViewGroupHeaderContext {
		let _localctx: ViewGroupHeaderContext = new ViewGroupHeaderContext(this._ctx, this.state);
		this.enterRule(_localctx, 1600, EDIF300Parser.RULE_viewGroupHeader);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7681;
			this.match(EDIF300Parser.T__646);
			this.state = 7688;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__132 || _la === EDIF300Parser.T__346 || _la === EDIF300Parser.T__442 || _la === EDIF300Parser.T__452) {
				{
				this.state = 7686;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__132:
					{
					this.state = 7682;
					this.documentation();
					}
					break;
				case EDIF300Parser.T__346:
					{
					this.state = 7683;
					this.nameInformation();
					}
					break;
				case EDIF300Parser.T__442:
					{
					this.state = 7684;
					this.property();
					}
					break;
				case EDIF300Parser.T__452:
					{
					this.state = 7685;
					this.reason();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7690;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7691;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewGroupNameCaseSensitive(): ViewGroupNameCaseSensitiveContext {
		let _localctx: ViewGroupNameCaseSensitiveContext = new ViewGroupNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 1602, EDIF300Parser.RULE_viewGroupNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7693;
			this.match(EDIF300Parser.T__647);
			this.state = 7694;
			this.booleanToken();
			this.state = 7695;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewGroupNameDef(): ViewGroupNameDefContext {
		let _localctx: ViewGroupNameDefContext = new ViewGroupNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1604, EDIF300Parser.RULE_viewGroupNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7697;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewGroupNameRef(): ViewGroupNameRefContext {
		let _localctx: ViewGroupNameRefContext = new ViewGroupNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1606, EDIF300Parser.RULE_viewGroupNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7699;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewGroupRef(): ViewGroupRefContext {
		let _localctx: ViewGroupRefContext = new ViewGroupRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1608, EDIF300Parser.RULE_viewGroupRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7701;
			this.match(EDIF300Parser.T__648);
			this.state = 7702;
			this.viewGroupNameRef();
			this.state = 7703;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewNameCaseSensitive(): ViewNameCaseSensitiveContext {
		let _localctx: ViewNameCaseSensitiveContext = new ViewNameCaseSensitiveContext(this._ctx, this.state);
		this.enterRule(_localctx, 1610, EDIF300Parser.RULE_viewNameCaseSensitive);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7705;
			this.match(EDIF300Parser.T__649);
			this.state = 7706;
			this.booleanToken();
			this.state = 7707;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewNameDef(): ViewNameDefContext {
		let _localctx: ViewNameDefContext = new ViewNameDefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1612, EDIF300Parser.RULE_viewNameDef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7709;
			this.nameDef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewNameDisplay(): ViewNameDisplayContext {
		let _localctx: ViewNameDisplayContext = new ViewNameDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1614, EDIF300Parser.RULE_viewNameDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7711;
			this.match(EDIF300Parser.T__650);
			this.state = 7716;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__131) {
				{
				this.state = 7714;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 7712;
					this.display();
					}
					break;
				case EDIF300Parser.T__131:
					{
					this.state = 7713;
					this.displayNameOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7718;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7719;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewNameRef(): ViewNameRefContext {
		let _localctx: ViewNameRefContext = new ViewNameRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1616, EDIF300Parser.RULE_viewNameRef);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7721;
			this.nameRef();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewPropertyDisplay(): ViewPropertyDisplayContext {
		let _localctx: ViewPropertyDisplayContext = new ViewPropertyDisplayContext(this._ctx, this.state);
		this.enterRule(_localctx, 1618, EDIF300Parser.RULE_viewPropertyDisplay);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7723;
			this.match(EDIF300Parser.T__651);
			this.state = 7724;
			this.propertyNameRef();
			this.state = 7729;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__128 || _la === EDIF300Parser.T__447) {
				{
				this.state = 7727;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__128:
					{
					this.state = 7725;
					this.display();
					}
					break;
				case EDIF300Parser.T__447:
					{
					this.state = 7726;
					this.propertyNameDisplay();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7731;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7732;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewPropertyOverride(): ViewPropertyOverrideContext {
		let _localctx: ViewPropertyOverrideContext = new ViewPropertyOverrideContext(this._ctx, this.state);
		this.enterRule(_localctx, 1620, EDIF300Parser.RULE_viewPropertyOverride);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7734;
			this.match(EDIF300Parser.T__652);
			this.state = 7735;
			this.propertyNameRef();
			this.state = 7738;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
			case EDIF300Parser.T__23:
			case EDIF300Parser.T__247:
			case EDIF300Parser.T__336:
			case EDIF300Parser.T__356:
			case EDIF300Parser.T__411:
			case EDIF300Parser.T__599:
				{
				this.state = 7736;
				this.typedValue();
				}
				break;
			case EDIF300Parser.T__639:
				{
				this.state = 7737;
				this.untyped();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			this.state = 7745;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__165 || _la === EDIF300Parser.T__448) {
				{
				this.state = 7743;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__61:
					{
					this.state = 7740;
					this.comment();
					}
					break;
				case EDIF300Parser.T__165:
					{
					this.state = 7741;
					this.fixed();
					}
					break;
				case EDIF300Parser.T__448:
					{
					this.state = 7742;
					this.propertyOverride();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7747;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7748;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public viewRef(): ViewRefContext {
		let _localctx: ViewRefContext = new ViewRefContext(this._ctx, this.state);
		this.enterRule(_localctx, 1622, EDIF300Parser.RULE_viewRef);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7750;
			this.match(EDIF300Parser.T__653);
			this.state = 7751;
			this.viewNameRef();
			this.state = 7753;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === EDIF300Parser.T__59) {
				{
				this.state = 7752;
				this.clusterRef();
				}
			}

			this.state = 7755;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public visible(): VisibleContext {
		let _localctx: VisibleContext = new VisibleContext(this._ctx, this.state);
		this.enterRule(_localctx, 1624, EDIF300Parser.RULE_visible);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7757;
			this.match(EDIF300Parser.T__654);
			this.state = 7758;
			this.booleanValue();
			this.state = 7759;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public volt(): VoltContext {
		let _localctx: VoltContext = new VoltContext(this._ctx, this.state);
		this.enterRule(_localctx, 1626, EDIF300Parser.RULE_volt);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7761;
			this.match(EDIF300Parser.T__655);
			this.state = 7762;
			this.unitExponent();
			this.state = 7763;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public voltageMap(): VoltageMapContext {
		let _localctx: VoltageMapContext = new VoltageMapContext(this._ctx, this.state);
		this.enterRule(_localctx, 1628, EDIF300Parser.RULE_voltageMap);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7765;
			this.match(EDIF300Parser.T__656);
			this.state = 7766;
			this.voltageValue();
			this.state = 7767;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public voltageValue(): VoltageValueContext {
		let _localctx: VoltageValueContext = new VoltageValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1630, EDIF300Parser.RULE_voltageValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7769;
			this.miNoMaxValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public watt(): WattContext {
		let _localctx: WattContext = new WattContext(this._ctx, this.state);
		this.enterRule(_localctx, 1632, EDIF300Parser.RULE_watt);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7771;
			this.match(EDIF300Parser.T__657);
			this.state = 7772;
			this.unitExponent();
			this.state = 7773;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public weak(): WeakContext {
		let _localctx: WeakContext = new WeakContext(this._ctx, this.state);
		this.enterRule(_localctx, 1634, EDIF300Parser.RULE_weak);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7775;
			this.match(EDIF300Parser.T__658);
			this.state = 7776;
			this.logicNameRef();
			this.state = 7777;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public weakJoined(): WeakJoinedContext {
		let _localctx: WeakJoinedContext = new WeakJoinedContext(this._ctx, this.state);
		this.enterRule(_localctx, 1636, EDIF300Parser.RULE_weakJoined);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7779;
			this.match(EDIF300Parser.T__659);
			this.state = 7784;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__270 || _la === EDIF300Parser.T__436) {
				{
				this.state = 7782;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__270:
					{
					this.state = 7780;
					this.interfaceJoined();
					}
					break;
				case EDIF300Parser.T__436:
					{
					this.state = 7781;
					this.portRef();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7786;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7787;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public weber(): WeberContext {
		let _localctx: WeberContext = new WeberContext(this._ctx, this.state);
		this.enterRule(_localctx, 1638, EDIF300Parser.RULE_weber);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7789;
			this.match(EDIF300Parser.T__660);
			this.state = 7790;
			this.unitExponent();
			this.state = 7791;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public widePort(): WidePortContext {
		let _localctx: WidePortContext = new WidePortContext(this._ctx, this.state);
		this.enterRule(_localctx, 1640, EDIF300Parser.RULE_widePort);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7793;
			this.match(EDIF300Parser.T__661);
			this.state = 7794;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public wideWire(): WideWireContext {
		let _localctx: WideWireContext = new WideWireContext(this._ctx, this.state);
		this.enterRule(_localctx, 1642, EDIF300Parser.RULE_wideWire);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7796;
			this.match(EDIF300Parser.T__662);
			this.state = 7797;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public written(): WrittenContext {
		let _localctx: WrittenContext = new WrittenContext(this._ctx, this.state);
		this.enterRule(_localctx, 1644, EDIF300Parser.RULE_written);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7799;
			this.match(EDIF300Parser.T__663);
			this.state = 7800;
			this.timeStamp();
			this.state = 7808;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.T__13 || _la === EDIF300Parser.T__61 || _la === EDIF300Parser.T__101 || _la === EDIF300Parser.T__441 || _la === EDIF300Parser.T__642) {
				{
				this.state = 7806;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
				case EDIF300Parser.T__13:
					{
					this.state = 7801;
					this.author();
					}
					break;
				case EDIF300Parser.T__61:
					{
					this.state = 7802;
					this.comment();
					}
					break;
				case EDIF300Parser.T__101:
					{
					this.state = 7803;
					this.dataOrigin();
					}
					break;
				case EDIF300Parser.T__441:
					{
					this.state = 7804;
					this.program();
					}
					break;
				case EDIF300Parser.T__642:
					{
					this.state = 7805;
					this.userData();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				this.state = 7810;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7811;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public xCoordinate(): XCoordinateContext {
		let _localctx: XCoordinateContext = new XCoordinateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1646, EDIF300Parser.RULE_xCoordinate);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7813;
			this.integerValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public xNumberValue(): XNumberValueContext {
		let _localctx: XNumberValueContext = new XNumberValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1648, EDIF300Parser.RULE_xNumberValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7815;
			this.numberValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public xor_(): Xor_Context {
		let _localctx: Xor_Context = new Xor_Context(this._ctx, this.state);
		this.enterRule(_localctx, 1650, EDIF300Parser.RULE_xor_);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7817;
			this.match(EDIF300Parser.T__664);
			this.state = 7821;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << EDIF300Parser.T__6) | (1 << EDIF300Parser.T__25) | (1 << EDIF300Parser.T__29))) !== 0) || _la === EDIF300Parser.T__157 || _la === EDIF300Parser.T__250 || _la === EDIF300Parser.T__307 || _la === EDIF300Parser.T__308 || _la === EDIF300Parser.T__354 || _la === EDIF300Parser.T__366 || _la === EDIF300Parser.T__603 || _la === EDIF300Parser.T__626 || _la === EDIF300Parser.T__664) {
				{
				{
				this.state = 7818;
				this.booleanExpression();
				}
				}
				this.state = 7823;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7824;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public yCoordinate(): YCoordinateContext {
		let _localctx: YCoordinateContext = new YCoordinateContext(this._ctx, this.state);
		this.enterRule(_localctx, 1652, EDIF300Parser.RULE_yCoordinate);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7826;
			this.integerValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public year(): YearContext {
		let _localctx: YearContext = new YearContext(this._ctx, this.state);
		this.enterRule(_localctx, 1654, EDIF300Parser.RULE_year);
		let _la: number;
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7828;
			this.match(EDIF300Parser.T__665);
			this.state = 7832;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === EDIF300Parser.DECIMAL_LITERAL) {
				{
				{
				this.state = 7829;
				this.yearNumber();
				}
				}
				this.state = 7834;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 7835;
			this.match(EDIF300Parser.T__1);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public yearNumber(): YearNumberContext {
		let _localctx: YearNumberContext = new YearNumberContext(this._ctx, this.state);
		this.enterRule(_localctx, 1656, EDIF300Parser.RULE_yearNumber);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7837;
			this.integerToken();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public yNumberValue(): YNumberValueContext {
		let _localctx: YNumberValueContext = new YNumberValueContext(this._ctx, this.state);
		this.enterRule(_localctx, 1658, EDIF300Parser.RULE_yNumberValue);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7839;
			this.numberValue();
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public integerToken(): IntegerTokenContext {
		let _localctx: IntegerTokenContext = new IntegerTokenContext(this._ctx, this.state);
		this.enterRule(_localctx, 1660, EDIF300Parser.RULE_integerToken);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7841;
			this.match(EDIF300Parser.DECIMAL_LITERAL);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}
	// @RuleVersion(0)
	public stringToken(): StringTokenContext {
		let _localctx: StringTokenContext = new StringTokenContext(this._ctx, this.state);
		this.enterRule(_localctx, 1662, EDIF300Parser.RULE_stringToken);
		try {
			this.enterOuterAlt(_localctx, 1);
			{
			this.state = 7843;
			this.match(EDIF300Parser.STRING_LITERAL);
			}
		}
		catch (re) {
			if (re instanceof RecognitionException) {
				_localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		}
		finally {
			this.exitRule();
		}
		return _localctx;
	}

	private static readonly _serializedATNSegments: number = 14;
	private static readonly _serializedATNSegment0: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x03\u02A0\u1EA8\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
		"#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04+\t" +
		"+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04" +
		"O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04V\tV\x04W\tW\x04" +
		"X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04\\\t\\\x04]\t]\x04^\t^\x04_\t_\x04`\t" +
		"`\x04a\ta\x04b\tb\x04c\tc\x04d\td\x04e\te\x04f\tf\x04g\tg\x04h\th\x04" +
		"i\ti\x04j\tj\x04k\tk\x04l\tl\x04m\tm\x04n\tn\x04o\to\x04p\tp\x04q\tq\x04" +
		"r\tr\x04s\ts\x04t\tt\x04u\tu\x04v\tv\x04w\tw\x04x\tx\x04y\ty\x04z\tz\x04" +
		"{\t{\x04|\t|\x04}\t}\x04~\t~\x04\x7F\t\x7F\x04\x80\t\x80\x04\x81\t\x81" +
		"\x04\x82\t\x82\x04\x83\t\x83\x04\x84\t\x84\x04\x85\t\x85\x04\x86\t\x86" +
		"\x04\x87\t\x87\x04\x88\t\x88\x04\x89\t\x89\x04\x8A\t\x8A\x04\x8B\t\x8B" +
		"\x04\x8C\t\x8C\x04\x8D\t\x8D\x04\x8E\t\x8E\x04\x8F\t\x8F\x04\x90\t\x90" +
		"\x04\x91\t\x91\x04\x92\t\x92\x04\x93\t\x93\x04\x94\t\x94\x04\x95\t\x95" +
		"\x04\x96\t\x96\x04\x97\t\x97\x04\x98\t\x98\x04\x99\t\x99\x04\x9A\t\x9A" +
		"\x04\x9B\t\x9B\x04\x9C\t\x9C\x04\x9D\t\x9D\x04\x9E\t\x9E\x04\x9F\t\x9F" +
		"\x04\xA0\t\xA0\x04\xA1\t\xA1\x04\xA2\t\xA2\x04\xA3\t\xA3\x04\xA4\t\xA4" +
		"\x04\xA5\t\xA5\x04\xA6\t\xA6\x04\xA7\t\xA7\x04\xA8\t\xA8\x04\xA9\t\xA9" +
		"\x04\xAA\t\xAA\x04\xAB\t\xAB\x04\xAC\t\xAC\x04\xAD\t\xAD\x04\xAE\t\xAE" +
		"\x04\xAF\t\xAF\x04\xB0\t\xB0\x04\xB1\t\xB1\x04\xB2\t\xB2\x04\xB3\t\xB3" +
		"\x04\xB4\t\xB4\x04\xB5\t\xB5\x04\xB6\t\xB6\x04\xB7\t\xB7\x04\xB8\t\xB8" +
		"\x04\xB9\t\xB9\x04\xBA\t\xBA\x04\xBB\t\xBB\x04\xBC\t\xBC\x04\xBD\t\xBD" +
		"\x04\xBE\t\xBE\x04\xBF\t\xBF\x04\xC0\t\xC0\x04\xC1\t\xC1\x04\xC2\t\xC2" +
		"\x04\xC3\t\xC3\x04\xC4\t\xC4\x04\xC5\t\xC5\x04\xC6\t\xC6\x04\xC7\t\xC7" +
		"\x04\xC8\t\xC8\x04\xC9\t\xC9\x04\xCA\t\xCA\x04\xCB\t\xCB\x04\xCC\t\xCC" +
		"\x04\xCD\t\xCD\x04\xCE\t\xCE\x04\xCF\t\xCF\x04\xD0\t\xD0\x04\xD1\t\xD1" +
		"\x04\xD2\t\xD2\x04\xD3\t\xD3\x04\xD4\t\xD4\x04\xD5\t\xD5\x04\xD6\t\xD6" +
		"\x04\xD7\t\xD7\x04\xD8\t\xD8\x04\xD9\t\xD9\x04\xDA\t\xDA\x04\xDB\t\xDB" +
		"\x04\xDC\t\xDC\x04\xDD\t\xDD\x04\xDE\t\xDE\x04\xDF\t\xDF\x04\xE0\t\xE0" +
		"\x04\xE1\t\xE1\x04\xE2\t\xE2\x04\xE3\t\xE3\x04\xE4\t\xE4\x04\xE5\t\xE5" +
		"\x04\xE6\t\xE6\x04\xE7\t\xE7\x04\xE8\t\xE8\x04\xE9\t\xE9\x04\xEA\t\xEA" +
		"\x04\xEB\t\xEB\x04\xEC\t\xEC\x04\xED\t\xED\x04\xEE\t\xEE\x04\xEF\t\xEF" +
		"\x04\xF0\t\xF0\x04\xF1\t\xF1\x04\xF2\t\xF2\x04\xF3\t\xF3\x04\xF4\t\xF4" +
		"\x04\xF5\t\xF5\x04\xF6\t\xF6\x04\xF7\t\xF7\x04\xF8\t\xF8\x04\xF9\t\xF9" +
		"\x04\xFA\t\xFA\x04\xFB\t\xFB\x04\xFC\t\xFC\x04\xFD\t\xFD\x04\xFE\t\xFE" +
		"\x04\xFF\t\xFF\x04\u0100\t\u0100\x04\u0101\t\u0101\x04\u0102\t\u0102\x04" +
		"\u0103\t\u0103\x04\u0104\t\u0104\x04\u0105\t\u0105\x04\u0106\t\u0106\x04" +
		"\u0107\t\u0107\x04\u0108\t\u0108\x04\u0109\t\u0109\x04\u010A\t\u010A\x04" +
		"\u010B\t\u010B\x04\u010C\t\u010C\x04\u010D\t\u010D\x04\u010E\t\u010E\x04" +
		"\u010F\t\u010F\x04\u0110\t\u0110\x04\u0111\t\u0111\x04\u0112\t\u0112\x04" +
		"\u0113\t\u0113\x04\u0114\t\u0114\x04\u0115\t\u0115\x04\u0116\t\u0116\x04" +
		"\u0117\t\u0117\x04\u0118\t\u0118\x04\u0119\t\u0119\x04\u011A\t\u011A\x04" +
		"\u011B\t\u011B\x04\u011C\t\u011C\x04\u011D\t\u011D\x04\u011E\t\u011E\x04" +
		"\u011F\t\u011F\x04\u0120\t\u0120\x04\u0121\t\u0121\x04\u0122\t\u0122\x04" +
		"\u0123\t\u0123\x04\u0124\t\u0124\x04\u0125\t\u0125\x04\u0126\t\u0126\x04" +
		"\u0127\t\u0127\x04\u0128\t\u0128\x04\u0129\t\u0129\x04\u012A\t\u012A\x04" +
		"\u012B\t\u012B\x04\u012C\t\u012C\x04\u012D\t\u012D\x04\u012E\t\u012E\x04" +
		"\u012F\t\u012F\x04\u0130\t\u0130\x04\u0131\t\u0131\x04\u0132\t\u0132\x04" +
		"\u0133\t\u0133\x04\u0134\t\u0134\x04\u0135\t\u0135\x04\u0136\t\u0136\x04" +
		"\u0137\t\u0137\x04\u0138\t\u0138\x04\u0139\t\u0139\x04\u013A\t\u013A\x04" +
		"\u013B\t\u013B\x04\u013C\t\u013C\x04\u013D\t\u013D\x04\u013E\t\u013E\x04" +
		"\u013F\t\u013F\x04\u0140\t\u0140\x04\u0141\t\u0141\x04\u0142\t\u0142\x04" +
		"\u0143\t\u0143\x04\u0144\t\u0144\x04\u0145\t\u0145\x04\u0146\t\u0146\x04" +
		"\u0147\t\u0147\x04\u0148\t\u0148\x04\u0149\t\u0149\x04\u014A\t\u014A\x04" +
		"\u014B\t\u014B\x04\u014C\t\u014C\x04\u014D\t\u014D\x04\u014E\t\u014E\x04" +
		"\u014F\t\u014F\x04\u0150\t\u0150\x04\u0151\t\u0151\x04\u0152\t\u0152\x04" +
		"\u0153\t\u0153\x04\u0154\t\u0154\x04\u0155\t\u0155\x04\u0156\t\u0156\x04" +
		"\u0157\t\u0157\x04\u0158\t\u0158\x04\u0159\t\u0159\x04\u015A\t\u015A\x04" +
		"\u015B\t\u015B\x04\u015C\t\u015C\x04\u015D\t\u015D\x04\u015E\t\u015E\x04" +
		"\u015F\t\u015F\x04\u0160\t\u0160\x04\u0161\t\u0161\x04\u0162\t\u0162\x04" +
		"\u0163\t\u0163\x04\u0164\t\u0164\x04\u0165\t\u0165\x04\u0166\t\u0166\x04" +
		"\u0167\t\u0167\x04\u0168\t\u0168\x04\u0169\t\u0169\x04\u016A\t\u016A\x04" +
		"\u016B\t\u016B\x04\u016C\t\u016C\x04\u016D\t\u016D\x04\u016E\t\u016E\x04" +
		"\u016F\t\u016F\x04\u0170\t\u0170\x04\u0171\t\u0171\x04\u0172\t\u0172\x04" +
		"\u0173\t\u0173\x04\u0174\t\u0174\x04\u0175\t\u0175\x04\u0176\t\u0176\x04" +
		"\u0177\t\u0177\x04\u0178\t\u0178\x04\u0179\t\u0179\x04\u017A\t\u017A\x04" +
		"\u017B\t\u017B\x04\u017C\t\u017C\x04\u017D\t\u017D\x04\u017E\t\u017E\x04" +
		"\u017F\t\u017F\x04\u0180\t\u0180\x04\u0181\t\u0181\x04\u0182\t\u0182\x04" +
		"\u0183\t\u0183\x04\u0184\t\u0184\x04\u0185\t\u0185\x04\u0186\t\u0186\x04" +
		"\u0187\t\u0187\x04\u0188\t\u0188\x04\u0189\t\u0189\x04\u018A\t\u018A\x04" +
		"\u018B\t\u018B\x04\u018C\t\u018C\x04\u018D\t\u018D\x04\u018E\t\u018E\x04" +
		"\u018F\t\u018F\x04\u0190\t\u0190\x04\u0191\t\u0191\x04\u0192\t\u0192\x04" +
		"\u0193\t\u0193\x04\u0194\t\u0194\x04\u0195\t\u0195\x04\u0196\t\u0196\x04" +
		"\u0197\t\u0197\x04\u0198\t\u0198\x04\u0199\t\u0199\x04\u019A\t\u019A\x04" +
		"\u019B\t\u019B\x04\u019C\t\u019C\x04\u019D\t\u019D\x04\u019E\t\u019E\x04" +
		"\u019F\t\u019F\x04\u01A0\t\u01A0\x04\u01A1\t\u01A1\x04\u01A2\t\u01A2\x04" +
		"\u01A3\t\u01A3\x04\u01A4\t\u01A4\x04\u01A5\t\u01A5\x04\u01A6\t\u01A6\x04" +
		"\u01A7\t\u01A7\x04\u01A8\t\u01A8\x04\u01A9\t\u01A9\x04\u01AA\t\u01AA\x04" +
		"\u01AB\t\u01AB\x04\u01AC\t\u01AC\x04\u01AD\t\u01AD\x04\u01AE\t\u01AE\x04" +
		"\u01AF\t\u01AF\x04\u01B0\t\u01B0\x04\u01B1\t\u01B1\x04\u01B2\t\u01B2\x04" +
		"\u01B3\t\u01B3\x04\u01B4\t\u01B4\x04\u01B5\t\u01B5\x04\u01B6\t\u01B6\x04" +
		"\u01B7\t\u01B7\x04\u01B8\t\u01B8\x04\u01B9\t\u01B9\x04\u01BA\t\u01BA\x04" +
		"\u01BB\t\u01BB\x04\u01BC\t\u01BC\x04\u01BD\t\u01BD\x04\u01BE\t\u01BE\x04" +
		"\u01BF\t\u01BF\x04\u01C0\t\u01C0\x04\u01C1\t\u01C1\x04\u01C2\t\u01C2\x04" +
		"\u01C3\t\u01C3\x04\u01C4\t\u01C4\x04\u01C5\t\u01C5\x04\u01C6\t\u01C6\x04" +
		"\u01C7\t\u01C7\x04\u01C8\t\u01C8\x04\u01C9\t\u01C9\x04\u01CA\t\u01CA\x04" +
		"\u01CB\t\u01CB\x04\u01CC\t\u01CC\x04\u01CD\t\u01CD\x04\u01CE\t\u01CE\x04" +
		"\u01CF\t\u01CF\x04\u01D0\t\u01D0\x04\u01D1\t\u01D1\x04\u01D2\t\u01D2\x04" +
		"\u01D3\t\u01D3\x04\u01D4\t\u01D4\x04\u01D5\t\u01D5\x04\u01D6\t\u01D6\x04" +
		"\u01D7\t\u01D7\x04\u01D8\t\u01D8\x04\u01D9\t\u01D9\x04\u01DA\t\u01DA\x04" +
		"\u01DB\t\u01DB\x04\u01DC\t\u01DC\x04\u01DD\t\u01DD\x04\u01DE\t\u01DE\x04" +
		"\u01DF\t\u01DF\x04\u01E0\t\u01E0\x04\u01E1\t\u01E1\x04\u01E2\t\u01E2\x04" +
		"\u01E3\t\u01E3\x04\u01E4\t\u01E4\x04\u01E5\t\u01E5\x04\u01E6\t\u01E6\x04" +
		"\u01E7\t\u01E7\x04\u01E8\t\u01E8\x04\u01E9\t\u01E9\x04\u01EA\t\u01EA\x04" +
		"\u01EB\t\u01EB\x04\u01EC\t\u01EC\x04\u01ED\t\u01ED\x04\u01EE\t\u01EE\x04" +
		"\u01EF\t\u01EF\x04\u01F0\t\u01F0\x04\u01F1\t\u01F1\x04\u01F2\t\u01F2\x04" +
		"\u01F3\t\u01F3\x04\u01F4\t\u01F4\x04\u01F5\t\u01F5\x04\u01F6\t\u01F6\x04" +
		"\u01F7\t\u01F7\x04\u01F8\t\u01F8\x04\u01F9\t\u01F9\x04\u01FA\t\u01FA\x04" +
		"\u01FB\t\u01FB\x04\u01FC\t\u01FC\x04\u01FD\t\u01FD\x04\u01FE\t\u01FE\x04" +
		"\u01FF\t\u01FF\x04\u0200\t\u0200\x04\u0201\t\u0201\x04\u0202\t\u0202\x04" +
		"\u0203\t\u0203\x04\u0204\t\u0204\x04\u0205\t\u0205\x04\u0206\t\u0206\x04" +
		"\u0207\t\u0207\x04\u0208\t\u0208\x04\u0209\t\u0209\x04\u020A\t\u020A\x04" +
		"\u020B\t\u020B\x04\u020C\t\u020C\x04\u020D\t\u020D\x04\u020E\t\u020E\x04" +
		"\u020F\t\u020F\x04\u0210\t\u0210\x04\u0211\t\u0211\x04\u0212\t\u0212\x04" +
		"\u0213\t\u0213\x04\u0214\t\u0214\x04\u0215\t\u0215\x04\u0216\t\u0216\x04" +
		"\u0217\t\u0217\x04\u0218\t\u0218\x04\u0219\t\u0219\x04\u021A\t\u021A\x04" +
		"\u021B\t\u021B\x04\u021C\t\u021C\x04\u021D\t\u021D\x04\u021E\t\u021E\x04" +
		"\u021F\t\u021F\x04\u0220\t\u0220\x04\u0221\t\u0221\x04\u0222\t\u0222\x04" +
		"\u0223\t\u0223\x04\u0224\t\u0224\x04\u0225\t\u0225\x04\u0226\t\u0226\x04" +
		"\u0227\t\u0227\x04\u0228\t\u0228\x04\u0229\t\u0229\x04\u022A\t\u022A\x04" +
		"\u022B\t\u022B\x04\u022C\t\u022C\x04\u022D\t\u022D\x04\u022E\t\u022E\x04" +
		"\u022F\t\u022F\x04\u0230\t\u0230\x04\u0231\t\u0231\x04\u0232\t\u0232\x04" +
		"\u0233\t\u0233\x04\u0234\t\u0234\x04\u0235\t\u0235\x04\u0236\t\u0236\x04" +
		"\u0237\t\u0237\x04\u0238\t\u0238\x04\u0239\t\u0239\x04\u023A\t\u023A\x04" +
		"\u023B\t\u023B\x04\u023C\t\u023C\x04\u023D\t\u023D\x04\u023E\t\u023E\x04" +
		"\u023F\t\u023F\x04\u0240\t\u0240\x04\u0241\t\u0241\x04\u0242\t\u0242\x04" +
		"\u0243\t\u0243\x04\u0244\t\u0244\x04\u0245\t\u0245\x04\u0246\t\u0246\x04" +
		"\u0247\t\u0247\x04\u0248\t\u0248\x04\u0249\t\u0249\x04\u024A\t\u024A\x04" +
		"\u024B\t\u024B\x04\u024C\t\u024C\x04\u024D\t\u024D\x04\u024E\t\u024E\x04" +
		"\u024F\t\u024F\x04\u0250\t\u0250\x04\u0251\t\u0251\x04\u0252\t\u0252\x04" +
		"\u0253\t\u0253\x04\u0254\t\u0254\x04\u0255\t\u0255\x04\u0256\t\u0256\x04" +
		"\u0257\t\u0257\x04\u0258\t\u0258\x04\u0259\t\u0259\x04\u025A\t\u025A\x04" +
		"\u025B\t\u025B\x04\u025C\t\u025C\x04\u025D\t\u025D\x04\u025E\t\u025E\x04" +
		"\u025F\t\u025F\x04\u0260\t\u0260\x04\u0261\t\u0261\x04\u0262\t\u0262\x04" +
		"\u0263\t\u0263\x04\u0264\t\u0264\x04\u0265\t\u0265\x04\u0266\t\u0266\x04" +
		"\u0267\t\u0267\x04\u0268\t\u0268\x04\u0269\t\u0269\x04\u026A\t\u026A\x04" +
		"\u026B\t\u026B\x04\u026C\t\u026C\x04\u026D\t\u026D\x04\u026E\t\u026E\x04" +
		"\u026F\t\u026F\x04\u0270\t\u0270\x04\u0271\t\u0271\x04\u0272\t\u0272\x04" +
		"\u0273\t\u0273\x04\u0274\t\u0274\x04\u0275\t\u0275\x04\u0276\t\u0276\x04" +
		"\u0277\t\u0277\x04\u0278\t\u0278\x04\u0279\t\u0279\x04\u027A\t\u027A\x04" +
		"\u027B\t\u027B\x04\u027C\t\u027C\x04\u027D\t\u027D\x04\u027E\t\u027E\x04" +
		"\u027F\t\u027F\x04\u0280\t\u0280\x04\u0281\t\u0281\x04\u0282\t\u0282\x04" +
		"\u0283\t\u0283\x04\u0284\t\u0284\x04\u0285\t\u0285\x04\u0286\t\u0286\x04" +
		"\u0287\t\u0287\x04\u0288\t\u0288\x04\u0289\t\u0289\x04\u028A\t\u028A\x04" +
		"\u028B\t\u028B\x04\u028C\t\u028C\x04\u028D\t\u028D\x04\u028E\t\u028E\x04" +
		"\u028F\t\u028F\x04\u0290\t\u0290\x04\u0291\t\u0291\x04\u0292\t\u0292\x04" +
		"\u0293\t\u0293\x04\u0294\t\u0294\x04\u0295\t\u0295\x04\u0296\t\u0296\x04" +
		"\u0297\t\u0297\x04\u0298\t\u0298\x04\u0299\t\u0299\x04\u029A\t\u029A\x04" +
		"\u029B\t\u029B\x04\u029C\t\u029C\x04\u029D\t\u029D\x04\u029E\t\u029E\x04" +
		"\u029F\t\u029F\x04\u02A0\t\u02A0\x04\u02A1\t\u02A1\x04\u02A2\t\u02A2\x04" +
		"\u02A3\t\u02A3\x04\u02A4\t\u02A4\x04\u02A5\t\u02A5\x04\u02A6\t\u02A6\x04" +
		"\u02A7\t\u02A7\x04\u02A8\t\u02A8\x04\u02A9\t\u02A9\x04\u02AA\t\u02AA\x04" +
		"\u02AB\t\u02AB\x04\u02AC\t\u02AC\x04\u02AD\t\u02AD\x04\u02AE\t\u02AE\x04" +
		"\u02AF\t\u02AF\x04\u02B0\t\u02B0\x04\u02B1\t\u02B1\x04\u02B2\t\u02B2\x04" +
		"\u02B3\t\u02B3\x04\u02B4\t\u02B4\x04\u02B5\t\u02B5\x04\u02B6\t\u02B6\x04" +
		"\u02B7\t\u02B7\x04\u02B8\t\u02B8\x04\u02B9\t\u02B9\x04\u02BA\t\u02BA\x04" +
		"\u02BB\t\u02BB\x04\u02BC\t\u02BC\x04\u02BD\t\u02BD\x04\u02BE\t\u02BE\x04" +
		"\u02BF\t\u02BF\x04\u02C0\t\u02C0\x04\u02C1\t\u02C1\x04\u02C2\t\u02C2\x04" +
		"\u02C3\t\u02C3\x04\u02C4\t\u02C4\x04\u02C5\t\u02C5\x04\u02C6\t\u02C6\x04" +
		"\u02C7\t\u02C7\x04\u02C8\t\u02C8\x04\u02C9\t\u02C9\x04\u02CA\t\u02CA\x04" +
		"\u02CB\t\u02CB\x04\u02CC\t\u02CC\x04\u02CD\t\u02CD\x04\u02CE\t\u02CE\x04" +
		"\u02CF\t\u02CF\x04\u02D0\t\u02D0\x04\u02D1\t\u02D1\x04\u02D2\t\u02D2\x04" +
		"\u02D3\t\u02D3\x04\u02D4\t\u02D4\x04\u02D5\t\u02D5\x04\u02D6\t\u02D6\x04" +
		"\u02D7\t\u02D7\x04\u02D8\t\u02D8\x04\u02D9\t\u02D9\x04\u02DA\t\u02DA\x04" +
		"\u02DB\t\u02DB\x04\u02DC\t\u02DC\x04\u02DD\t\u02DD\x04\u02DE\t\u02DE\x04" +
		"\u02DF\t\u02DF\x04\u02E0\t\u02E0\x04\u02E1\t\u02E1\x04\u02E2\t\u02E2\x04" +
		"\u02E3\t\u02E3\x04\u02E4\t\u02E4\x04\u02E5\t\u02E5\x04\u02E6\t\u02E6\x04" +
		"\u02E7\t\u02E7\x04\u02E8\t\u02E8\x04\u02E9\t\u02E9\x04\u02EA\t\u02EA\x04" +
		"\u02EB\t\u02EB\x04\u02EC\t\u02EC\x04\u02ED\t\u02ED\x04\u02EE\t\u02EE\x04" +
		"\u02EF\t\u02EF\x04\u02F0\t\u02F0\x04\u02F1\t\u02F1\x04\u02F2\t\u02F2\x04" +
		"\u02F3\t\u02F3\x04\u02F4\t\u02F4\x04\u02F5\t\u02F5\x04\u02F6\t\u02F6\x04" +
		"\u02F7\t\u02F7\x04\u02F8\t\u02F8\x04\u02F9\t\u02F9\x04\u02FA\t\u02FA\x04" +
		"\u02FB\t\u02FB\x04\u02FC\t\u02FC\x04\u02FD\t\u02FD\x04\u02FE\t\u02FE\x04" +
		"\u02FF\t\u02FF\x04\u0300\t\u0300\x04\u0301\t\u0301\x04\u0302\t\u0302\x04" +
		"\u0303\t\u0303\x04\u0304\t\u0304\x04\u0305\t\u0305\x04\u0306\t\u0306\x04" +
		"\u0307\t\u0307\x04\u0308\t\u0308\x04\u0309\t\u0309\x04\u030A\t\u030A\x04" +
		"\u030B\t\u030B\x04\u030C\t\u030C\x04\u030D\t\u030D\x04\u030E\t\u030E\x04" +
		"\u030F\t\u030F\x04\u0310\t\u0310\x04\u0311\t\u0311\x04\u0312\t\u0312\x04" +
		"\u0313\t\u0313\x04\u0314\t\u0314\x04\u0315\t\u0315\x04\u0316\t\u0316\x04" +
		"\u0317\t\u0317\x04\u0318\t\u0318\x04\u0319\t\u0319\x04\u031A\t\u031A\x04" +
		"\u031B\t\u031B\x04\u031C\t\u031C\x04\u031D\t\u031D\x04\u031E\t\u031E\x04" +
		"\u031F\t\u031F\x04\u0320\t\u0320\x04\u0321\t\u0321\x04\u0322\t\u0322\x04" +
		"\u0323\t\u0323\x04\u0324\t\u0324\x04\u0325\t\u0325\x04\u0326\t\u0326\x04" +
		"\u0327\t\u0327\x04\u0328\t\u0328\x04\u0329\t\u0329\x04\u032A\t\u032A\x04" +
		"\u032B\t\u032B\x04\u032C\t\u032C\x04\u032D\t\u032D\x04\u032E\t\u032E\x04" +
		"\u032F\t\u032F\x04\u0330\t\u0330\x04\u0331\t\u0331\x04\u0332\t\u0332\x04" +
		"\u0333\t\u0333\x04\u0334\t\u0334\x04\u0335\t\u0335\x04\u0336\t\u0336\x04" +
		"\u0337\t\u0337\x04\u0338\t\u0338\x04\u0339\t\u0339\x04\u033A\t\u033A\x04" +
		"\u033B\t\u033B\x04\u033C\t\u033C\x04\u033D\t\u033D\x04\u033E\t\u033E\x04" +
		"\u033F\t\u033F\x04\u0340\t\u0340\x04\u0341\t\u0341\x03\x02\x03\x02\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x05\x05\u0691\n\x05\x03\x05\x03\x05\x03\x06\x03\x06" +
		"\x03\x07\x03\x07\x03\b\x03\b\x07\b\u069B\n\b\f\b\x0E\b\u069E\v\b\x03\b" +
		"\x03\b\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x07\n\u06A8\n\n\f\n\x0E\n\u06AB" +
		"\v\n\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x07\f\u06B4\n\f\f\f\x0E" +
		"\f\u06B7\v\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0E\x05\x0E\u06C3\n\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03" +
		"\x11\x05\x11\u06D4\n\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x05\x16\u06E9\n\x16\x03\x16\x03\x16\x03" +
		"\x17\x03\x17\x03\x17\x03\x17\x03\x17\x07\x17\u06F2\n\x17\f\x17\x0E\x17" +
		"\u06F5\v\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x05" +
		"\x19\u06FE\n\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x07\x1A\u0707\n\x1A\f\x1A\x0E\x1A\u070A\v\x1A\x03\x1A\x03\x1A\x03\x1B" +
		"\x03\x1B\x03\x1B\x05\x1B\u0711\n\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03" +
		"\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03" +
		"\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03" +
		"!\x03!\x03!\x03!\x03!\x03!\x05!\u0732\n!\x03\"\x03\"\x03\"\x03\"\x03#" +
		"\x03#\x03#\x03#\x07#\u073C\n#\f#\x0E#\u073F\v#\x03#\x03#\x03$\x03$\x03" +
		"$\x03$\x03$\x03%\x03%\x03%\x03%\x03&\x03&\x05&\u074E\n&\x03\'\x03\'\x03" +
		"(\x03(\x03(\x03(\x03)\x03)\x03)\x03)\x03*\x03*\x03*\x05*\u075D\n*\x03" +
		"*\x03*\x03+\x03+\x03+\x03,\x03,\x03,\x03-\x03-\x03-\x03-\x03.\x03.\x03" +
		"/\x03/\x03/\x030\x030\x030\x030\x030\x030\x030\x070\u0777\n0\f0\x0E0\u077A" +
		"\v0\x030\x030\x031\x031\x031\x031\x031\x071\u0783\n1\f1\x0E1\u0786\v1" +
		"\x031\x031\x032\x032\x032\x072\u078D\n2\f2\x0E2\u0790\v2\x032\x032\x03" +
		"3\x033\x033\x033\x073\u0798\n3\f3\x0E3\u079B\v3\x033\x033\x034\x034\x03" +
		"4\x034\x034\x054\u07A4\n4\x034\x054\u07A7\n4\x034\x034\x035\x035\x035" +
		"\x035\x055\u07AF\n5\x035\x035\x035\x075\u07B4\n5\f5\x0E5\u07B7\v5\x03" +
		"5\x035\x036\x036\x036\x056\u07BE\n6\x036\x036\x037\x037\x037\x037\x03" +
		"8\x038\x038\x039\x039\x039\x039\x039\x059\u07CE\n9\x039\x039\x03:\x03" +
		":\x03:\x03:\x03;\x03;\x03;\x03;\x05;\u07DA\n;\x03;\x03;\x03<\x03<\x03" +
		"<\x03<\x03<\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03" +
		"=\x03=\x03=\x03=\x03=\x07=\u07F3\n=\f=\x0E=\u07F6\v=\x03=\x03=\x03>\x03" +
		">\x03>\x03>\x03>\x05>\u07FF\n>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x07" +
		">\u0808\n>\f>\x0E>\u080B\v>\x03>\x03>\x03?\x03?\x03?\x03?\x03@\x03@\x03" +
		"A\x03A\x03B\x03B\x03B\x03B\x03C\x03C\x03C\x03C\x03C\x07C\u0820\nC\fC\x0E" +
		"C\u0823\vC\x03C\x03C\x03D\x03D\x03D\x03D\x03E\x03E\x03F\x03F\x03G\x03" +
		"G\x03G\x03G\x07G\u0833\nG\fG\x0EG\u0836\vG\x03G\x03G\x03H\x03H\x03H\x03" +
		"H\x03H\x05H\u083F\nH\x03H\x05H\u0842\nH\x03H\x03H\x03I\x03I\x03I\x03I" +
		"\x05I\u084A\nI\x03I\x03I\x03I\x07I\u084F\nI\fI\x0EI\u0852\vI\x03I\x03" +
		"I\x03J\x03J\x03J\x05J\u0859\nJ\x03J\x03J\x03K\x03K\x03K\x03K\x03K\x03" +
		"K\x03L\x03L\x07L\u0865\nL\fL\x0EL\u0868\vL\x03L\x03L\x03M\x03M\x03M\x03" +
		"M\x03M\x03M\x03M\x07M\u0873\nM\fM\x0EM\u0876\vM\x03M\x03M\x03N\x03N\x03" +
		"N\x03N\x03O\x03O\x03O\x03O\x05O\u0882\nO\x03O\x03O\x03P\x03P\x03P\x03" +
		"P\x03P\x07P\u088B\nP\fP\x0EP\u088E\vP\x03P\x03P\x03Q\x03Q\x03Q\x03Q\x07" +
		"Q\u0896\nQ\fQ\x0EQ\u0899\vQ\x03Q\x03Q\x03R\x03R\x03R\x03R\x03R\x03S\x03" +
		"S\x03S\x03S\x03S\x07S\u08A7\nS\fS\x0ES\u08AA\vS\x03S\x03S\x03T\x03T\x07" +
		"T\u08B0\nT\fT\x0ET\u08B3\vT\x03T\x03T\x03U\x03U\x03U\x03U\x03V\x03V\x03" +
		"V\x03V\x05V\u08BF\nV\x03V\x03V\x03W\x03W\x03W\x03W\x03X\x03X\x03X\x03" +
		"X\x05X\u08CB\nX\x03X\x03X\x03Y\x03Y\x03Y\x03Y\x03Y\x03Y\x03Y\x03Y\x03" +
		"Y\x07Y\u08D8\nY\fY\x0EY\u08DB\vY\x03Y\x03Y\x03Z\x03Z\x03Z\x07Z\u08E2\n" +
		"Z\fZ\x0EZ\u08E5\vZ\x03Z\x03Z\x03[\x03[\x03[\x03[\x03[\x03[\x03[\x03[\x03" +
		"[\x07[\u08F2\n[\f[\x0E[\u08F5\v[\x03[\x03[\x03\\\x03\\\x03\\\x03\\\x03" +
		"\\\x03\\\x03\\\x03\\\x03\\\x03\\\x07\\\u0903\n\\\f\\\x0E\\\u0906\v\\\x03" +
		"\\\x03\\\x03]\x03]\x03^\x03^\x03^\x03^\x03^\x03^\x03^\x03^\x07^\u0914" +
		"\n^\f^\x0E^\u0917\v^\x03^\x03^\x03_\x03_\x03_\x05_\u091E\n_\x03_\x07_" +
		"\u0921\n_\f_\x0E_\u0924\v_\x03_\x03_\x03`\x03`\x03`\x03`\x03a\x03a\x03" +
		"b\x03b\x03c\x03c\x03c\x03c\x03d\x03d\x03d\x03d\x03d\x03d\x03d\x03d\x03" +
		"d\x07d\u093D\nd\fd\x0Ed\u0940\vd\x03d\x03d\x03e\x03e\x03e\x03e\x03e\x03" +
		"e\x03e\x03e\x07e\u094C\ne\fe\x0Ee\u094F\ve\x03e\x03e\x03f\x03f\x03f\x03" +
		"f\x03f\x03f\x03f\x07f\u095A\nf\ff\x0Ef\u095D\vf\x03f\x03f\x03g\x03g\x03" +
		"g\x03g\x03h\x03h\x07h\u0967\nh\fh\x0Eh\u096A\vh\x03h\x03h\x03i\x03i\x03" +
		"i\x05i\u0971\ni\x03i\x03i\x03j\x03j\x03j\x03j\x03j\x03j\x03j\x07j\u097C" +
		"\nj\fj\x0Ej\u097F\vj\x03j\x03j\x03k\x03k\x03k\x03k\x03k\x03k\x03k\x03" +
		"k\x07k\u098B\nk\fk\x0Ek\u098E\vk\x03k\x03k\x03";
	private static readonly _serializedATNSegment1: string =
		"l\x03l\x03m\x03m\x03n\x03n\x03n\x03n\x07n\u099A\nn\fn\x0En\u099D\vn\x03" +
		"n\x03n\x03o\x03o\x03o\x03o\x03p\x03p\x03p\x03p\x05p\u09A9\np\x03p\x03" +
		"p\x03q\x03q\x03q\x07q\u09B0\nq\fq\x0Eq\u09B3\vq\x03q\x03q\x03r\x03r\x03" +
		"r\x03r\x05r\u09BB\nr\x03r\x03r\x03s\x03s\x03s\x03s\x05s\u09C3\ns\x03s" +
		"\x03s\x03t\x03t\x03t\x03t\x03u\x03u\x03u\x03u\x03v\x03v\x07v\u09D1\nv" +
		"\fv\x0Ev\u09D4\vv\x03v\x03v\x03w\x03w\x03w\x03w\x03x\x03x\x03y\x03y\x03" +
		"y\x07y\u09E1\ny\fy\x0Ey\u09E4\vy\x03y\x03y\x03z\x03z\x03z\x05z\u09EB\n" +
		"z\x03z\x03z\x03{\x03{\x03{\x03{\x03{\x03{\x03|\x03|\x03}\x03}\x03}\x03" +
		"}\x03~\x03~\x03~\x03~\x05~\u09FF\n~\x03~\x03~\x03\x7F\x03\x7F\x03\x7F" +
		"\x03\x7F\x03\x80\x03\x80\x03\x80\x03\x80\x05\x80\u0A0B\n\x80\x03\x80\x03" +
		"\x80\x03\x81\x03\x81\x03\x81\x03\x81\x03\x82\x03\x82\x03\x82\x03\x82\x05" +
		"\x82\u0A17\n\x82\x03\x82\x03\x82\x03\x83\x03\x83\x03\x83\x03\x83\x03\x84" +
		"\x03\x84\x03\x84\x03\x84\x05\x84\u0A23\n\x84\x03\x84\x03\x84\x03\x85\x03" +
		"\x85\x03\x85\x05\x85\u0A2A\n\x85\x03\x85\x03\x85\x03\x86\x03\x86\x03\x86" +
		"\x03\x86\x03\x87\x03\x87\x03\x87\x03\x87\x03\x88\x03\x88\x03\x88\x03\x88" +
		"\x03\x89\x03\x89\x03\x89\x03\x89\x03\x8A\x03\x8A\x03\x8B\x03\x8B\x03\x8B" +
		"\x05\x8B\u0A43\n\x8B\x03\x8C\x03\x8C\x03\x8C\x05\x8C\u0A48\n\x8C\x03\x8C" +
		"\x03\x8C\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x03\x8D\x07\x8D" +
		"\u0A53\n\x8D\f\x8D\x0E\x8D\u0A56\v\x8D\x03\x8D\x03\x8D\x03\x8E\x03\x8E" +
		"\x03\x8E\x03\x8E\x03\x8F\x03\x8F\x03\x8F\x03\x8F\x05\x8F\u0A62\n\x8F\x03" +
		"\x8F\x03\x8F\x03\x90\x03\x90\x03\x90\x03\x90\x03\x90\x03\x90\x07\x90\u0A6C" +
		"\n\x90\f\x90\x0E\x90\u0A6F\v\x90\x03\x90\x03\x90\x03\x91\x03\x91\x03\x91" +
		"\x03\x91\x03\x91\x03\x91\x05\x91\u0A79\n\x91\x03\x91\x03\x91\x03\x92\x03" +
		"\x92\x03\x92\x03\x92\x03\x92\x03\x92\x03\x92\x07\x92\u0A84\n\x92\f\x92" +
		"\x0E\x92\u0A87\v\x92\x03\x92\x03\x92\x03\x93\x03\x93\x03\x93\x03\x93\x03" +
		"\x94\x03\x94\x03\x95\x03\x95\x03\x95\x03\x95\x03\x96\x03\x96\x03\x97\x03" +
		"\x97\x03\x97\x07\x97\u0A9A\n\x97\f\x97\x0E\x97\u0A9D\v\x97\x03\x97\x03" +
		"\x97\x03\x98\x03\x98\x03\x98\x03\x98\x03\x98\x03\x98\x07\x98\u0AA7\n\x98" +
		"\f\x98\x0E\x98\u0AAA\v\x98\x03\x98\x03\x98\x03\x99\x03\x99\x03\x9A\x03" +
		"\x9A\x03\x9A\x03\x9A\x05\x9A\u0AB4\n\x9A\x03\x9A\x03\x9A\x03\x9B\x03\x9B" +
		"\x03\x9B\x07\x9B\u0ABB\n\x9B\f\x9B\x0E\x9B\u0ABE\v\x9B\x03\x9B\x03\x9B" +
		"\x03\x9B\x03\x9C\x03\x9C\x03\x9C\x03\x9C\x03\x9C\x03\x9C\x03\x9C\x03\x9C" +
		"\x03\x9C\x03\x9C\x03\x9C\x03\x9C\x07\x9C\u0ACF\n\x9C\f\x9C\x0E\x9C\u0AD2" +
		"\v\x9C\x03\x9C\x03\x9C\x03\x9D\x03\x9D\x03\x9D\x03\x9D\x03\x9E\x03\x9E" +
		"\x03\x9E\x03\x9E\x03\x9E\x05\x9E\u0ADF\n\x9E\x03\x9E\x03\x9E\x03\x9F\x03" +
		"\x9F\x03\xA0\x03\xA0\x03\xA1\x03\xA1\x03\xA2\x03\xA2\x03\xA2\x03\xA2\x07" +
		"\xA2\u0AED\n\xA2\f\xA2\x0E\xA2\u0AF0\v\xA2\x03\xA2\x03\xA2\x03\xA3\x03" +
		"\xA3\x03\xA3\x03\xA3\x03\xA3\x07\xA3\u0AF9\n\xA3\f\xA3\x0E\xA3\u0AFC\v" +
		"\xA3\x03\xA3\x03\xA3\x03\xA4\x03\xA4\x03\xA4\x03\xA4\x03\xA5\x03\xA5\x03" +
		"\xA6\x03\xA6\x03\xA6\x07\xA6\u0B09\n\xA6\f\xA6\x0E\xA6\u0B0C\v\xA6\x03" +
		"\xA6\x03\xA6\x03\xA7\x03\xA7\x07\xA7\u0B12\n\xA7\f\xA7\x0E\xA7\u0B15\v" +
		"\xA7\x03\xA7\x03\xA7\x03\xA8\x03\xA8\x03\xA8\x03\xA8\x03\xA9\x03\xA9\x03" +
		"\xA9\x03\xA9\x03\xAA\x03\xAA\x03\xAA\x03\xAA\x05\xAA\u0B25\n\xAA\x03\xAA" +
		"\x03\xAA\x03\xAB\x03\xAB\x03\xAB\x03\xAB\x03\xAC\x03\xAC\x03\xAC\x03\xAC" +
		"\x05\xAC\u0B31\n\xAC\x03\xAC\x03\xAC\x03\xAD\x03\xAD\x03\xAD\x03\xAD\x03" +
		"\xAE\x03\xAE\x03\xAE\x03\xAE\x05\xAE\u0B3D\n\xAE\x03\xAE\x03\xAE\x03\xAF" +
		"\x03\xAF\x03\xAF\x03\xAF\x03\xB0\x03\xB0\x03\xB0\x03\xB0\x03\xB0\x03\xB1" +
		"\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x03\xB1\x07\xB1" +
		"\u0B53\n\xB1\f\xB1\x0E\xB1\u0B56\v\xB1\x03\xB1\x03\xB1\x03\xB2\x03\xB2" +
		"\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x03\xB2" +
		"\x03\xB2\x03\xB2\x03\xB2\x03\xB2\x07\xB2\u0B69\n\xB2\f\xB2\x0E\xB2\u0B6C" +
		"\v\xB2\x03\xB2\x03\xB2\x03\xB3\x03\xB3\x03\xB3\x03\xB3\x03\xB4\x03\xB4" +
		"\x03\xB5\x03\xB5\x03\xB6\x03\xB6\x03\xB6\x03\xB6\x03\xB6\x03\xB6\x03\xB7" +
		"\x03\xB7\x03\xB8\x03\xB8\x03\xB8\x03\xB8\x05\xB8\u0B84\n\xB8\x03\xB8\x03" +
		"\xB8\x03\xB9\x03\xB9\x03\xB9\x03\xB9\x03\xBA\x03\xBA\x03\xBA\x03\xBA\x05" +
		"\xBA\u0B90\n\xBA\x03\xBA\x03\xBA\x03\xBB\x03\xBB\x03\xBB\x03\xBB\x03\xBB" +
		"\x03\xBB\x05\xBB\u0B9A\n\xBB\x03\xBB\x03\xBB\x07\xBB\u0B9E\n\xBB\f\xBB" +
		"\x0E\xBB\u0BA1\v\xBB\x03\xBB\x03\xBB\x03\xBC\x03\xBC\x03\xBD\x03\xBD\x03" +
		"\xBD\x03\xBE\x03\xBE\x03\xBF\x03\xBF\x03\xC0\x03\xC0\x03\xC1\x03\xC1\x03" +
		"\xC2\x03\xC2\x03\xC3\x03\xC3\x03\xC4\x03\xC4\x03\xC5\x03\xC5\x03\xC6\x03" +
		"\xC6\x03\xC7\x03\xC7\x03\xC8\x03\xC8\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03" +
		"\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03" +
		"\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x03\xC9\x07" +
		"\xC9\u0BD6\n\xC9\f\xC9\x0E\xC9\u0BD9\v\xC9\x03\xC9\x03\xC9\x03\xCA\x03" +
		"\xCA\x03\xCA\x03\xCA\x03\xCB\x03\xCB\x03\xCB\x03\xCC\x03\xCC\x03\xCC\x03" +
		"\xCC\x03\xCD\x03\xCD\x03\xCD\x05\xCD\u0BEB\n\xCD\x03\xCD\x03\xCD\x03\xCD" +
		"\x03\xCD\x03\xCD\x03\xCD\x03\xCD\x03\xCD\x03\xCD\x03\xCD\x07\xCD\u0BF7" +
		"\n\xCD\f\xCD\x0E\xCD\u0BFA\v\xCD\x03\xCD\x03\xCD\x03\xCE\x03\xCE\x03\xCE" +
		"\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x03\xCE\x07\xCE\u0C08" +
		"\n\xCE\f\xCE\x0E\xCE\u0C0B\v\xCE\x03\xCE\x03\xCE\x03\xCF\x03\xCF\x03\xCF" +
		"\x03\xCF\x03\xD0\x03\xD0\x03\xD1\x03\xD1\x03\xD2\x03\xD2\x03\xD2\x03\xD2" +
		"\x03\xD2\x03\xD2\x03\xD2\x03\xD2\x07\xD2\u0C1F\n\xD2\f\xD2\x0E\xD2\u0C22" +
		"\v\xD2\x03\xD2\x03\xD2\x03\xD3\x03\xD3\x03\xD3\x03\xD3\x03\xD4\x03\xD4" +
		"\x03\xD4\x03\xD4\x03\xD5\x03\xD5\x03\xD6\x03\xD6\x03\xD7\x03\xD7\x03\xD7" +
		"\x03\xD8\x03\xD8\x03\xD8\x03\xD8\x03\xD8\x03\xD8\x03\xD8\x03\xD8\x03\xD8" +
		"\x07\xD8\u0C3E\n\xD8\f\xD8\x0E\xD8\u0C41\v\xD8\x03\xD8\x03\xD8\x03\xD9" +
		"\x03\xD9\x03\xD9\x03\xD9\x03\xDA\x03\xDA\x05\xDA\u0C4B\n\xDA\x03\xDA\x03" +
		"\xDA\x03\xDB\x03\xDB\x03\xDB\x03\xDB\x03\xDC\x03\xDC\x03\xDD\x03\xDD\x03" +
		"\xDD\x03\xDD\x03\xDE\x03\xDE\x03\xDF\x03\xDF\x03\xE0\x03\xE0\x03\xE0\x03" +
		"\xE0\x03\xE0\x03\xE0\x03\xE0\x03\xE1\x03\xE1\x03\xE1\x03\xE1\x03\xE2\x03" +
		"\xE2\x03\xE2\x07\xE2\u0C6B\n\xE2\f\xE2\x0E\xE2\u0C6E\v\xE2\x03\xE2\x03" +
		"\xE2\x03\xE3\x03\xE3\x03\xE3\x03\xE3\x03\xE4\x03\xE4\x03\xE4\x07\xE4\u0C79" +
		"\n\xE4\f\xE4\x0E\xE4\u0C7C\v\xE4\x03\xE4\x03\xE4\x03\xE5\x03\xE5\x03\xE5" +
		"\x03\xE5\x03\xE5\x03\xE5\x03\xE5\x03\xE5\x03\xE5\x03\xE5\x07\xE5\u0C8A" +
		"\n\xE5\f\xE5\x0E\xE5\u0C8D\v\xE5\x03\xE5\x03\xE5\x03\xE6\x03\xE6\x03\xE6" +
		"\x03\xE6\x03\xE6\x03\xE6\x03\xE6\x03\xE6\x03\xE6\x07\xE6\u0C9A\n\xE6\f" +
		"\xE6\x0E\xE6\u0C9D\v\xE6\x03\xE6\x03\xE6\x03\xE7\x03\xE7\x03\xE7\x03\xE7" +
		"\x03\xE7\x07\xE7\u0CA6\n\xE7\f\xE7\x0E\xE7\u0CA9\v\xE7\x03\xE7\x03\xE7" +
		"\x03\xE8\x03\xE8\x03\xE8\x03\xE8\x03\xE8\x07\xE8\u0CB2\n\xE8\f\xE8\x0E" +
		"\xE8\u0CB5\v\xE8\x03\xE8\x03\xE8\x03\xE9\x03\xE9\x03\xE9\x03\xE9\x03\xEA" +
		"\x03\xEA\x03\xEA\x03\xEA\x03\xEB\x03\xEB\x03\xEB\x03\xEB\x03\xEB\x03\xEC" +
		"\x03\xEC\x03\xEC\x03\xEC\x03\xED\x03\xED\x03\xED\x03\xED\x07\xED\u0CCE" +
		"\n\xED\f\xED\x0E\xED\u0CD1\v\xED\x03\xED\x03\xED\x03\xEE\x03\xEE\x03\xEE" +
		"\x03\xEE\x03\xEF\x03\xEF\x03\xF0\x03\xF0\x03\xF1\x03\xF1\x03\xF1\x03\xF1" +
		"\x03\xF2\x03\xF2\x03\xF3\x03\xF3\x03\xF3\x03\xF4\x03\xF4\x03\xF5\x03\xF5" +
		"\x03\xF5\x03\xF6\x03\xF6\x03\xF6\x03\xF7\x03\xF7\x03\xF7\x03\xF8\x03\xF8" +
		"\x03\xF8\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9" +
		"\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x03\xF9\x07\xF9\u0D01\n\xF9\f\xF9\x0E" +
		"\xF9\u0D04\v\xF9\x03\xF9\x03\xF9\x03\xFA\x03\xFA\x03\xFA\x03\xFA\x03\xFA" +
		"\x03\xFA\x03\xFA\x03\xFA\x07\xFA\u0D10\n\xFA\f\xFA\x0E\xFA\u0D13\v\xFA" +
		"\x03\xFA\x03\xFA\x03\xFB\x03\xFB\x03\xFB\x05\xFB\u0D1A\n\xFB\x03\xFB\x03" +
		"\xFB\x03\xFC\x03\xFC\x05\xFC\u0D20\n\xFC\x03\xFC\x03\xFC\x03\xFD\x03\xFD" +
		"\x03\xFD\x03\xFD\x03\xFD\x03\xFD\x03\xFD\x07\xFD\u0D2B\n\xFD\f\xFD\x0E" +
		"\xFD\u0D2E\v\xFD\x03\xFD\x03\xFD\x03\xFE\x03\xFE\x03\xFE\x03\xFE\x03\xFE" +
		"\x03\xFE\x03\xFE\x07\xFE\u0D39\n\xFE\f\xFE\x0E\xFE\u0D3C\v\xFE\x03\xFE" +
		"\x03\xFE\x03\xFF\x03\xFF\x03\xFF\x07\xFF\u0D43\n\xFF\f\xFF\x0E\xFF\u0D46" +
		"\v\xFF\x03\xFF\x03\xFF\x03\u0100\x03\u0100\x07\u0100\u0D4C\n\u0100\f\u0100" +
		"\x0E\u0100\u0D4F\v\u0100\x03\u0100\x03\u0100\x03\u0101\x03\u0101\x03\u0101" +
		"\x03\u0101\x03\u0102\x03\u0102\x03\u0103\x03\u0103\x03\u0103\x07\u0103" +
		"\u0D5C\n\u0103\f\u0103\x0E\u0103\u0D5F\v\u0103\x03\u0103\x03\u0103\x03" +
		"\u0104\x03\u0104\x03\u0105\x03\u0105\x03\u0105\x03\u0105\x07\u0105\u0D69" +
		"\n\u0105\f\u0105\x0E\u0105\u0D6C\v\u0105\x03\u0105\x03\u0105\x03\u0106" +
		"\x03\u0106\x03\u0106\x03\u0106\x03\u0107\x03\u0107\x03\u0107\x03\u0107" +
		"\x03\u0108\x03\u0108\x03\u0109\x03\u0109\x03\u0109\x03\u0109\x03\u010A" +
		"\x03\u010A\x03\u010A\x03\u010A\x03\u010B\x03\u010B\x03\u010B\x03\u010B" +
		"\x05\u010B\u0D86\n\u010B\x03\u010B\x03\u010B\x03\u010C\x03\u010C\x03\u010C" +
		"\x03\u010C\x03\u010C\x03\u010C\x07\u010C\u0D90\n\u010C\f\u010C\x0E\u010C" +
		"\u0D93\v\u010C\x03\u010C\x03\u010C\x03\u010D\x03\u010D\x03\u010D\x03\u010D" +
		"\x03\u010D\x07\u010D\u0D9C\n\u010D\f\u010D\x0E\u010D\u0D9F\v\u010D\x03" +
		"\u010D\x03\u010D\x03\u010E\x03\u010E\x03\u010E\x03\u010E\x03\u010F\x03" +
		"\u010F\x03\u010F\x03\u010F\x03\u0110\x03\u0110\x03\u0111\x03\u0111\x03" +
		"\u0111\x07\u0111\u0DB0\n\u0111\f\u0111\x0E\u0111\u0DB3\v\u0111\x03\u0111" +
		"\x03\u0111\x03\u0112\x03\u0112\x03\u0113\x03\u0113\x03\u0114\x03\u0114" +
		"\x03\u0115\x03\u0115\x07\u0115\u0DBF\n\u0115\f\u0115\x0E\u0115\u0DC2\v" +
		"\u0115\x03\u0115\x03\u0115\x03\u0116\x03\u0116\x03\u0116\x03\u0116\x03" +
		"\u0116\x07\u0116\u0DCB\n\u0116\f\u0116\x0E\u0116\u0DCE\v\u0116\x03\u0116" +
		"\x03\u0116\x03\u0117\x03\u0117\x03\u0117\x03\u0117\x03\u0117\x03\u0117" +
		"\x03\u0117\x03\u0117\x03\u0117\x07\u0117\u0DDB\n\u0117\f\u0117\x0E\u0117" +
		"\u0DDE\v\u0117\x03\u0117\x03\u0117\x03\u0118\x03\u0118\x03\u0118\x03\u0118" +
		"\x03\u0118\x03\u0118\x03\u0118\x03\u0118\x03\u0118\x03\u0118\x07\u0118" +
		"\u0DEC\n\u0118\f\u0118\x0E\u0118\u0DEF\v\u0118\x03\u0118\x03\u0118\x03" +
		"\u0119\x03\u0119\x03\u0119\x03\u0119\x03\u011A\x03\u011A\x07\u011A\u0DF9" +
		"\n\u011A\f\u011A\x0E\u011A\u0DFC\v\u011A\x03\u011A\x03\u011A\x03\u011B" +
		"\x03\u011B\x03\u011B\x03\u011C\x03\u011C\x03\u011C\x03\u011C\x03\u011D" +
		"\x03\u011D\x03\u011E\x03\u011E\x03\u011E\x07\u011E\u0E0C\n\u011E\f\u011E" +
		"\x0E\u011E\u0E0F\v\u011E\x03\u011E\x03\u011E\x03\u011F\x03\u011F\x03\u0120" +
		"\x03\u0120\x03\u0120\x03\u0120\x05\u0120\u0E19\n\u0120\x03\u0120\x03\u0120" +
		"\x03\u0121\x03\u0121\x03\u0122\x03\u0122\x03\u0122\x03\u0122\x05\u0122" +
		"\u0E23\n\u0122\x03\u0122\x03\u0122\x03\u0123\x03\u0123\x03\u0124\x03\u0124" +
		"\x03\u0124\x03\u0124\x03\u0125\x03\u0125\x03\u0125\x03\u0125\x05\u0125" +
		"\u0E31\n\u0125\x03\u0125\x03\u0125\x03\u0126\x03\u0126\x03\u0126\x03\u0126" +
		"\x03\u0127\x03\u0127\x03\u0127\x03\u0127\x05\u0127\u0E3D\n\u0127\x03\u0127" +
		"\x03\u0127\x03\u0128\x03\u0128\x03\u0128\x03\u0128\x03\u0129\x03\u0129" +
		"\x03\u0129\x03\u012A\x03\u012A\x05\u012A\u0E4A\n\u012A\x03\u012A\x03\u012A" +
		"\x03\u012B\x03\u012B\x03\u012B\x07\u012B\u0E51\n\u012B\f\u012B\x0E\u012B" +
		"\u0E54\v\u012B\x03\u012B\x03\u012B\x03\u012C\x03\u012C\x03\u012C\x03\u012C" +
		"\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C" +
		"\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C\x03\u012C" +
		"\x07\u012C\u0E6A\n\u012C\f\u012C\x0E\u012C\u0E6D\v\u012C\x03\u012C\x03" +
		"\u012C\x03\u012D\x03\u012D\x03\u012D\x03\u012D\x03\u012D\x03\u012E\x03" +
		"\u012E\x03\u012E\x03\u012F\x03\u012F\x03\u012F\x03\u012F\x03\u012F\x03" +
		"\u0130\x03\u0130\x03\u0130\x03\u0130\x03\u0131\x03\u0131\x03\u0132\x03" +
		"\u0132\x03\u0132\x07\u0132\u0E87\n\u0132\f\u0132\x0E\u0132\u0E8A\v\u0132" +
		"\x03\u0132\x03\u0132\x03\u0133\x03\u0133\x03\u0133\x03\u0133\x03\u0134" +
		"\x03\u0134\x03\u0134\x03\u0134\x05\u0134\u0E96\n\u0134\x03\u0134\x03\u0134" +
		"\x03\u0135\x03\u0135\x03\u0136\x03\u0136\x03\u0136\x03\u0136\x03\u0136" +
		"\x07\u0136\u0EA1\n\u0136\f\u0136\x0E\u0136\u0EA4\v\u0136\x03\u0136\x03" +
		"\u0136\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03" +
		"\u0137\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03\u0137\x03" +
		"\u0137\x07\u0137\u0EB6\n\u0137\f\u0137\x0E\u0137\u0EB9\v\u0137\x03\u0137" +
		"\x03\u0137\x03\u0138\x03\u0138\x03\u0138\x07\u0138\u0EC0\n\u0138\f\u0138" +
		"\x0E\u0138\u0EC3\v\u0138\x03\u0138\x05\u0138\u0EC6\n\u0138\x03\u0138\x07" +
		"\u0138\u0EC9\n\u0138\f\u0138\x0E\u0138\u0ECC\v\u0138\x03\u0138\x03\u0138" +
		"\x03\u0139\x03\u0139\x03\u0139\x03\u0139\x05\u0139\u0ED4\n\u0139\x03\u0139" +
		"\x03\u0139\x03\u0139\x07\u0139\u0ED9\n\u0139\f\u0139\x0E\u0139\u0EDC\v" +
		"\u0139\x03\u0139\x03\u0139\x03\u013A\x03\u013A\x03\u013A\x03\u013A\x03" +
		"\u013B\x03\u013B\x03\u013B\x03\u013B\x03\u013C\x03\u013C\x03\u013C\x03" +
		"\u013C\x05\u013C\u0EEC\n\u013C\x03\u013C\x03\u013C\x03\u013D\x03\u013D" +
		"\x03\u013D\x03\u013D\x03\u013E\x03\u013E\x03\u013E\x03\u013E\x03\u013E" +
		"\x03\u013F\x03\u013F\x03\u013F\x03\u013F\x03\u0140\x03\u0140\x03\u0140" +
		"\x03\u0140\x03\u0140\x03\u0141\x03\u0141\x03\u0141\x03\u0141\x03\u0141" +
		"\x03\u0141\x03\u0141\x03\u0141\x03\u0141\x03\u0141\x03\u0141\x03\u0141" +
		"\x03\u0141\x03\u0141\x05\u0141\u0F10\n\u0141\x03\u0142\x03\u0142\x03\u0142" +
		"\x03\u0142\x07\u0142\u0F16\n\u0142\f\u0142\x0E\u0142\u0F19\v\u0142\x03" +
		"\u0142\x03\u0142\x03\u0143\x03\u0143\x03\u0143\x03\u0143\x03\u0143\x03" +
		"\u0144\x03\u0144\x03\u0144\x03\u0144\x03\u0145\x03\u0145\x07\u0145\u0F28" +
		"\n\u0145\f\u0145\x0E\u0145\u0F2B\v\u0145\x03\u0145\x03\u0145\x03\u0146" +
		"\x03\u0146\x03\u0146\x03\u0146\x03\u0146\x03\u0147\x03\u0147\x03\u0147" +
		"\x03\u0147\x03\u0147\x03\u0148\x03\u0148\x03\u0148\x03\u0148\x03\u0148" +
		"\x03\u0149\x03\u0149\x07\u0149\u0F40\n\u0149\f\u0149\x0E\u0149\u0F43\v" +
		"\u0149\x03\u0149\x03\u0149\x03\u014A\x03\u014A\x03\u014B\x03\u014B\x03" +
		"\u014B\x03\u014B\x03\u014B\x03\u014B\x03\u014B\x03\u014B\x07\u014B\u0F51" +
		"\n\u014B\f\u014B\x0E\u014B\u0F54\v\u014B\x03\u014B\x03\u014B\x03\u014C" +
		"\x03\u014C\x03\u014C\x03\u014C\x03\u014C\x03\u014C\x03\u014C\x03\u014C" +
		"\x07\u014C\u0F60\n\u014C\f\u014C\x0E\u014C\u0F63\v\u014C\x03\u014C\x03" +
		"\u014C\x03\u014D\x03\u014D\x03\u014D\x03\u014D\x03\u014D\x03\u014D\x07" +
		"\u014D\u0F6D\n\u014D\f\u014D\x0E\u014D\u0F70\v\u014D\x03\u014D\x03\u014D" +
		"\x03\u014E\x03\u014E\x03\u014E\x07\u014E\u0F77\n\u014E\f\u014E\x0E\u014E" +
		"\u0F7A\v\u014E\x03\u014E\x03\u014E\x03\u014F\x03\u014F\x03\u0150\x03\u0150" +
		"\x03\u0151\x03\u0151\x03\u0151\x03\u0151\x03\u0151\x03\u0151\x07\u0151" +
		"\u0F88\n\u0151\f\u0151\x0E\u0151\u0F8B\v\u0151\x03\u0151\x03\u0151\x03" +
		"\u0152\x03\u0152\x03\u0152\x03\u0152\x03\u0153\x03\u0153\x03\u0154\x03" +
		"\u0154\x03\u0154\x07\u0154\u0F98\n\u0154\f\u0154\x0E\u0154\u0F9B\v\u0154" +
		"\x03\u0154\x03\u0154\x03\u0155\x03\u0155\x03\u0156\x03\u0156\x03\u0156" +
		"\x07\u0156\u0FA4\n\u0156\f\u0156\x0E\u0156\u0FA7\v\u0156\x03\u0156\x05" +
		"\u0156\u0FAA\n\u0156\x03\u0156\x07\u0156\u0FAD\n\u0156\f\u0156\x0E\u0156" +
		"\u0FB0\v\u0156\x03\u0156\x03\u0156\x03\u0157\x03\u0157\x03\u0157\x05\u0157" +
		"\u0FB7\n\u0157\x03\u0157\x03\u0157\x03\u0158\x03\u0158\x07\u0158\u0FBD" +
		"\n\u0158\f\u0158\x0E\u0158\u0FC0\v\u0158\x03\u0158\x03\u0158\x03\u0159" +
		"\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x03\u0159" +
		"\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x03\u0159\x07\u0159" +
		"\u0FD2\n\u0159\f\u0159\x0E\u0159\u0FD5\v\u0159\x03\u0159\x03\u0159\x03" +
		"\u015A\x03\u015A\x07\u015A\u0FDB\n\u015A\f\u015A\x0E\u015A\u0FDE\v\u015A" +
		"\x03\u015A\x03\u015A\x03\u015B\x03\u015B\x03\u015B\x07\u015B\u0FE5\n\u015B" +
		"\f\u015B\x0E\u015B\u0FE8\v\u015B\x03\u015B\x03\u015B\x03\u015C\x03\u015C" +
		"\x03\u015C\x03\u015C\x03\u015D\x03\u015D\x03\u015E\x03\u015E\x03\u015E" +
		"\x03\u015F\x03\u015F\x03\u0160\x03\u0160\x03\u0160\x03\u0161\x03\u0161" +
		"\x03\u0161\x03\u0162\x03\u0162\x03\u0162\x03\u0163\x03\u0163\x03\u0163" +
		"\x03\u0164\x03\u0164\x03\u0164\x03\u0164\x03\u0165\x03\u0165\x03\u0165" +
		"\x03\u0166\x03\u0166\x03\u0166\x03\u0166\x03\u0166\x03\u0167\x03\u0167" +
		"\x07\u0167\u1011\n\u0167\f\u0167\x0E\u0167\u1014\v\u0167\x03\u0167\x03" +
		"\u0167\x03\u0168\x03\u0168\x03\u0169\x03\u0169\x03\u016A\x03\u016A\x03" +
		"\u016A\x03\u016A\x03\u016B\x03\u016B\x03\u016B\x03\u016B\x03\u016B\x03" +
		"\u016B\x07\u016B\u1026\n\u016B\f\u016B\x0E\u016B\u1029\v\u016B\x03\u016B" +
		"\x03\u016B\x03\u016C\x03\u016C\x03\u016C\x03\u016C\x05\u016C\u1031\n\u016C" +
		"\x03\u016C\x03\u016C\x03\u016D\x03\u016D\x03\u016E\x03\u016E\x03\u016F" +
		"\x03\u016F\x03\u016F\x03\u016F\x03\u016F\x07\u016F\u103E\n\u016F\f\u016F" +
		"\x0E\u016F\u1041\v\u016F\x03\u016F\x03\u016F\x03\u0170\x03\u0170\x03\u0170" +
		"\x03\u0170\x03\u0170\x03\u0170\x03\u0171\x03\u0171\x03\u0171\x07\u0171" +
		"\u104E\n\u0171\f\u0171\x0E\u0171\u1051\v\u0171\x03\u0171\x03\u0171\x03" +
		"\u0172\x03\u0172\x07\u0172\u1057\n\u0172\f\u0172\x0E\u0172\u105A\v\u0172" +
		"\x03\u0172\x03\u0172\x03\u0173\x03\u0173\x03\u0173\x03\u0173\x07\u0173" +
		"\u1062\n\u0173\f\u0173\x0E\u0173\u1065\v\u0173\x03\u0173\x03\u0173\x03" +
		"\u0174\x03\u0174\x03\u0174\x03\u0174\x05\u0174\u106D\n\u0174\x03\u0174" +
		"\x03\u0174\x03\u0175\x03\u0175\x03\u0175\x03\u0176\x03\u0176\x03\u0176" +
		"\x03\u0176\x03\u0176\x03\u0176\x03\u0176\x07\u0176\u107B\n\u0176\f\u0176" +
		"\x0E\u0176\u107E\v\u0176\x03\u0176\x03\u0176\x03\u0177\x03\u0177\x03\u0177" +
		"\x03\u0178\x03\u0178\x03\u0178\x05\u0178\u1088\n\u0178\x03\u0178\x03\u0178" +
		"\x03\u0178\x03\u0178\x03\u0178\x07\u0178\u108F\n\u0178\f\u0178\x0E\u0178" +
		"\u1092\v\u0178\x03\u0178\x03\u0178\x03\u0179\x03\u0179\x03\u0179\x03\u0179" +
		"\x03\u0179\x05\u0179\u109B\n\u0179\x03\u0179\x03\u0179\x03\u017A\x03\u017A" +
		"\x07\u017A\u10A1\n\u017A\f\u017A\x0E\u017A\u10A4\v\u017A\x03\u017A\x03" +
		"\u017A\x03\u017B\x03\u017B\x03\u017B\x03\u017B\x03\u017B\x03\u017B\x07" +
		"\u017B\u10AE\n\u017B\f\u017B\x0E\u017B\u10B1\v\u017B\x03\u017B\x03\u017B" +
		"\x03\u017C\x03\u017C\x03\u017C\x03\u017C\x03\u017C\x03\u017C\x03\u017D" +
		"\x03\u017D\x03\u017D\x07\u017D\u10BE\n\u017D\f\u017D\x0E\u017D\u10C1\v" +
		"\u017D\x03\u017D\x03\u017D\x03\u017E\x03\u017E\x07\u017E\u10C7\n\u017E" +
		"\f\u017E\x0E\u017E\u10CA\v\u017E\x03\u017E\x03\u017E\x03\u017F\x03\u017F" +
		"\x03\u017F\x03\u017F\x03\u0180\x03\u0180\x03\u0180\x03\u0180\x03\u0180" +
		"\x05\u0180\u10D7\n\u0180\x03\u0180\x07\u0180\u10DA\n\u0180\f\u0180\x0E" +
		"\u0180\u10DD\v\u0180\x03\u0180\x03\u0180\x03\u0181\x03\u0181\x03\u0181" +
		"\x03\u0181\x03\u0182\x03\u0182\x03\u0182\x03\u0183\x03\u0183\x03\u0183" +
		"\x05\u0183\u10EB\n\u0183\x03\u0183\x03\u0183\x03\u0183\x03\u0183\x03\u0183" +
		"\x03\u0183\x03\u0183\x07\u0183\u10F4\n\u0183\f\u0183\x0E\u0183\u10F7\v" +
		"\u0183\x03\u0183\x03\u0183\x03\u0184\x03\u0184\x03\u0184\x03\u0185\x03" +
		"\u0185\x03\u0186\x03\u0186\x07\u0186\u1102\n\u0186\f\u0186\x0E\u0186\u1105" +
		"\v\u0186\x03\u0186\x03\u0186\x03\u0187\x03\u0187\x07\u0187\u110B\n\u0187" +
		"\f\u0187\x0E\u0187\u110E\v\u0187\x03\u0187\x03\u0187\x03\u0188\x03\u0188" +
		"\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188" +
		"\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188" +
		"\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x03\u0188\x07\u0188" +
		"\u1128\n\u0188\f\u0188\x0E\u0188\u112B\v\u0188\x03\u0188\x03\u0188\x03" +
		"\u0189\x03\u0189\x03\u0189\x03\u0189\x03\u0189\x03\u0189\x03\u0189\x03" +
		"\u0189\x03\u0189\x07\u0189\u1138\n\u0189\f\u0189\x0E\u0189\u113B\v\u0189" +
		"\x03\u0189\x03\u0189\x03\u018A\x03\u018A\x03\u018A\x03\u018A\x03\u018B" +
		"\x03\u018B\x03\u018C\x03\u018C\x03\u018D\x03\u018D\x03\u018D\x03\u018D" +
		"\x03\u018E\x03\u018E\x03\u018F\x03\u018F\x03\u0190\x03\u0190\x03\u0190" +
		"\x03\u0190\x03\u0191\x03\u0191\x03\u0191\x03\u0191\x03\u0191\x03\u0192" +
		"\x03\u0192\x03\u0192\x03\u0192\x03\u0192\x03\u0192\x03\u0192\x07\u0192" +
		"\u115F\n\u0192\f\u0192\x0E\u0192\u1162\v\u0192\x03\u0192\x03\u0192\x03" +
		"\u0193\x03\u0193\x03\u0193\x03\u0193\x03\u0194\x03\u0194\x03\u0195\x03" +
		"\u0195\x03\u0196\x03\u0196\x03\u0196\x03\u0196\x03\u0197\x03\u0197\x03" +
		"\u0197\x03\u0197\x03\u0197\x03\u0197\x03\u0197\x03\u0197\x03\u0197\x07" +
		"\u0197\u117B\n\u0197\f\u0197\x0E\u0197\u117E\v\u0197\x03\u0197\x03\u0197" +
		"\x03\u0198\x03\u0198\x03\u0198\x03\u0198\x03\u0198\x07\u0198\u1187\n\u0198" +
		"\f\u0198\x0E\u0198\u118A\v\u0198\x03\u0198\x03\u0198\x03\u0199\x03\u0199" +
		"\x03\u0199\x03\u0199\x07\u0199\u1192\n\u0199\f\u0199\x0E\u0199\u1195\v" +
		"\u0199\x03\u0199\x03\u0199\x03\u019A\x03\u019A\x07\u019A\u119B\n\u019A" +
		"\f\u019A\x0E\u019A\u119E\v\u019A\x03\u019A\x03\u019A\x03\u019B\x03\u019B" +
		"\x07\u019B\u11A4\n\u019B\f\u019B\x0E\u019B\u11A7\v\u019B\x03\u019B\x03" +
		"\u019B\x03\u019C\x03\u019C\x03\u019C\x07\u019C\u11AE\n\u019C\f\u019C\x0E" +
		"\u019C\u11B1\v\u019C\x03\u019C\x03\u019C\x03\u019D\x03\u019D\x03\u019D" +
		"\x03\u019D\x03\u019D\x07\u019D\u11BA\n\u019D\f\u019D\x0E\u019D\u11BD\v" +
		"\u019D\x03\u019D\x03\u019D\x03\u019E\x03\u019E\x03\u019F\x03\u019F\x03" +
		"\u01A0\x03\u01A0\x03\u01A0\x07\u01A0\u11C8\n\u01A0\f\u01A0\x0E\u01A0\u11CB" +
		"\v\u01A0\x03\u01A0\x03\u01A0\x03\u01A1\x03\u01A1\x03\u01A1\x05\u01A1\u11D2" +
		"\n\u01A1\x03\u01A1\x03\u01A1\x03\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03" +
		"\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03" +
		"\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x03\u01A2\x07\u01A2\u11E6\n\u01A2" +
		"\f\u01A2\x0E\u01A2\u11E9\v\u01A2\x03\u01A2\x03\u01A2\x03\u01A3\x03\u01A3" +
		"\x03\u01A3\x03\u01A4\x03\u01A4\x03\u01A5\x03\u01A5\x03\u01A6\x03\u01A6" +
		"\x03\u01A6\x03\u01A6\x03\u01A6\x07\u01A6\u11F9\n\u01A6\f\u01A6\x0E\u01A6" +
		"\u11FC\v\u01A6\x03\u01A6\x03\u01A6\x03\u01A7\x03\u01A7\x03\u01A7\x03\u01A7" +
		"\x03\u01A7\x07\u01A7\u1205\n\u01A7\f\u01A7\x0E\u01A7\u1208\v\u01A7\x03" +
		"\u01A7\x03\u01A7\x03\u01A8\x03\u01A8\x03\u01A8\x03\u01A9\x03\u01A9\x03" +
		"\u01A9\x03\u01A9\x03\u01AA\x03\u01AA\x03\u01AA\x03\u01AB\x03\u01AB\x03" +
		"\u01AB\x03\u01AC\x03\u01AC\x03\u01AC\x03\u01AC\x03\u01AD\x03\u01AD\x03" +
		"\u01AD\x03\u01AD\x03\u01AE\x03\u01AE\x05\u01AE\u1223\n\u01AE\x03\u01AF" +
		"\x03\u01AF\x03\u01B0\x03\u01B0\x03\u01B1\x03\u01B1\x03\u01B1\x03\u01B2" +
		"\x03\u01B2\x03\u01B2\x03\u01B2\x05\u01B2\u1230\n\u01B2\x03\u01B2\x03\u01B2" +
		"\x03\u01B2\x05\u01B2\u1235\n\u01B2\x03\u01B2\x03\u01B2\x03\u01B2\x05\u01B2" +
		"\u123A\n\u01B2\x03\u01B2\x03\u01B2\x03\u01B3\x03\u01B3\x03\u01B3\x03\u01B3" +
		"\x03\u01B4\x03\u01B4\x03\u01B5\x03\u01B5\x03\u01B5\x03\u01B6\x03\u01B6" +
		"\x03\u01B6\x03\u01B6\x07\u01B6\u124B\n\u01B6\f\u01B6\x0E\u01B6\u124E\v" +
		"\u01B6\x03\u01B6\x03\u01B6\x03\u01B7\x03\u01B7\x03\u01B7\x03\u01B7\x03" +
		"\u01B7\x07\u01B7\u1257\n\u01B7\f\u01B7\x0E\u01B7\u125A\v\u01B7\x03\u01B7" +
		"\x03\u01B7\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8" +
		"\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8" +
		"\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8" +
		"\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x03\u01B8\x07\u01B8\u1277\n\u01B8" +
		"\f\u01B8\x0E\u01B8\u127A\v\u01B8\x03\u01B8\x03\u01B8\x03\u01B9\x03\u01B9" +
		"\x03\u01BA\x03\u01BA\x03\u01BA\x05\u01BA\u1283\n\u01BA\x03\u01BA\x03\u01BA" +
		"\x03\u01BB\x03\u01BB\x03\u01BB\x03\u01BB\x03\u01BB\x03\u01BB\x07\u01BB" +
		"\u128D\n\u01BB\f\u01BB\x0E\u01BB\u1290\v\u01BB\x03\u01BB\x03\u01BB\x03" +
		"\u01BC\x03\u01BC\x03\u01BC\x07\u01BC\u1297\n\u01BC\f\u01BC\x0E\u01BC\u129A" +
		"\v\u01BC\x03\u01BC\x03\u01BC\x03\u01BD\x03\u01BD\x03\u01BD\x03\u01BD\x03" +
		"\u01BE\x03\u01BE\x03\u01BF\x03\u01BF\x03\u01BF\x03\u01BF\x05\u01BF\u12A8" +
		"\n\u01BF\x03\u01BF\x03\u01BF\x03\u01C0\x03\u01C0\x03\u01C0\x03\u01C1\x03" +
		"\u01C1\x03\u01C1\x03\u01C2\x03\u01C2\x03\u01C2\x03\u01C3\x03\u01C3\x03" +
		"\u01C3\x03\u01C3\x03\u01C4\x03\u01C4\x03\u01C4\x07\u01C4\u12BC\n\u01C4" +
		"\f\u01C4\x0E\u01C4\u12BF\v\u01C4\x03\u01C4\x03\u01C4\x03\u01C5\x03\u01C5" +
		"\x03\u01C5\x03\u01C5\x03\u01C6\x03\u01C6\x03\u01C6\x03\u01C7\x03\u01C7" +
		"\x03\u01C7\x03\u01C7\x03\u01C8\x03\u01C8\x05\u01C8\u12D0\n\u01C8\x03";
	private static readonly _serializedATNSegment2: string =
		"\u01C9\x03\u01C9\x03\u01CA\x03\u01CA\x03\u01CB\x03\u01CB\x03\u01CB\x03" +
		"\u01CB\x07\u01CB\u12DA\n\u01CB\f\u01CB\x0E\u01CB\u12DD\v\u01CB\x03\u01CB" +
		"\x03\u01CB\x03\u01CC\x03\u01CC\x03\u01CC\x03\u01CC\x03\u01CC\x03\u01CD" +
		"\x03\u01CD\x03\u01CD\x03\u01CD\x03\u01CE\x03\u01CE\x03\u01CE\x03\u01CE" +
		"\x03\u01CE\x03\u01CF\x03\u01CF\x03\u01D0\x03\u01D0\x03\u01D1\x03\u01D1" +
		"\x03\u01D1\x05\u01D1\u12F6\n\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1" +
		"\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1" +
		"\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1\x03\u01D1" +
		"\x07\u01D1\u130A\n\u01D1\f\u01D1\x0E\u01D1\u130D\v\u01D1\x03\u01D1\x03" +
		"\u01D1\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03" +
		"\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03\u01D2\x03" +
		"\u01D2\x03\u01D2\x03\u01D2\x07\u01D2\u1321\n\u01D2\f\u01D2\x0E\u01D2\u1324" +
		"\v\u01D2\x03\u01D2\x03\u01D2\x03\u01D3\x03\u01D3\x03\u01D3\x03\u01D3\x03" +
		"\u01D3\x03\u01D4\x03\u01D4\x03\u01D4\x03\u01D4\x03\u01D5\x03\u01D5\x03" +
		"\u01D5\x03\u01D5\x03\u01D6\x03\u01D6\x07\u01D6\u1337\n\u01D6\f\u01D6\x0E" +
		"\u01D6\u133A\v\u01D6\x03\u01D6\x03\u01D6\x03\u01D7\x03\u01D7\x03\u01D7" +
		"\x03\u01D7\x03\u01D8\x03\u01D8\x03\u01D8\x03\u01D8\x03\u01D9\x03\u01D9" +
		"\x03\u01D9\x03\u01D9\x03\u01DA\x03\u01DA\x03\u01DA\x03\u01DA\x05\u01DA" +
		"\u134E\n\u01DA\x03\u01DA\x03\u01DA\x03\u01DB\x03\u01DB\x03\u01DC\x03\u01DC" +
		"\x03\u01DC\x03\u01DC\x03\u01DC\x03\u01DC\x03\u01DC\x03\u01DC\x03\u01DC" +
		"\x07\u01DC\u135D\n\u01DC\f\u01DC\x0E\u01DC\u1360\v\u01DC\x03\u01DC\x03" +
		"\u01DC\x03\u01DD\x03\u01DD\x03\u01DD\x03\u01DD\x03\u01DD\x03\u01DD\x03" +
		"\u01DD\x03\u01DD\x03\u01DD\x03\u01DD\x07\u01DD\u136E\n\u01DD\f\u01DD\x0E" +
		"\u01DD\u1371\v\u01DD\x03\u01DD\x03\u01DD\x03\u01DE\x03\u01DE\x03\u01DE" +
		"\x03\u01DE\x03\u01DF\x03\u01DF\x03\u01DF\x03\u01E0\x03\u01E0\x05\u01E0" +
		"\u137E\n\u01E0\x03\u01E0\x03\u01E0\x03\u01E1\x03\u01E1\x03\u01E1\x07\u01E1" +
		"\u1385\n\u01E1\f\u01E1\x0E\u01E1\u1388\v\u01E1\x03\u01E1\x03\u01E1\x03" +
		"\u01E2\x03\u01E2\x03\u01E2\x03\u01E2\x03\u01E3\x03\u01E3\x03\u01E3\x03" +
		"\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03" +
		"\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03" +
		"\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x03\u01E3\x07\u01E3\u13A7" +
		"\n\u01E3\f\u01E3\x0E\u01E3\u13AA\v\u01E3\x03\u01E3\x03\u01E3\x03\u01E4" +
		"\x03\u01E4\x03\u01E4\x07\u01E4\u13B1\n\u01E4\f\u01E4\x0E\u01E4\u13B4\v" +
		"\u01E4\x03\u01E4\x03\u01E4\x03\u01E5\x03\u01E5\x03\u01E5\x03\u01E5\x03" +
		"\u01E5\x07\u01E5\u13BD\n\u01E5\f\u01E5\x0E\u01E5\u13C0\v\u01E5\x03\u01E5" +
		"\x03\u01E5\x03\u01E6\x03\u01E6\x03\u01E6\x03\u01E6\x03\u01E6\x03\u01E6" +
		"\x03\u01E6\x03\u01E6\x03\u01E6\x07\u01E6\u13CD\n\u01E6\f\u01E6\x0E\u01E6" +
		"\u13D0\v\u01E6\x03\u01E6\x03\u01E6\x03\u01E7\x03\u01E7\x03\u01E7\x05\u01E7" +
		"\u13D7\n\u01E7\x03\u01E7\x03\u01E7\x03\u01E8\x03\u01E8\x03\u01E8\x03\u01E8" +
		"\x03\u01E8\x03\u01E8\x07\u01E8\u13E1\n\u01E8\f\u01E8\x0E\u01E8\u13E4\v" +
		"\u01E8\x03\u01E8\x03\u01E8\x03\u01E9\x03\u01E9\x03\u01E9\x03\u01E9\x03" +
		"\u01E9\x03\u01E9\x03\u01E9\x03\u01E9\x03\u01E9\x07\u01E9\u13F1\n\u01E9" +
		"\f\u01E9\x0E\u01E9\u13F4\v\u01E9\x03\u01E9\x03\u01E9\x03\u01EA\x03\u01EA" +
		"\x03\u01EA\x03\u01EA\x03\u01EB\x03\u01EB\x03\u01EB\x03\u01EB\x05\u01EB" +
		"\u1400\n\u01EB\x03\u01EB\x03\u01EB\x03\u01EC\x03\u01EC\x03\u01EC\x03\u01EC" +
		"\x03\u01ED\x03\u01ED\x03\u01EE\x03\u01EE\x03\u01EF\x03\u01EF\x03\u01EF" +
		"\x03\u01EF\x07\u01EF\u1410\n\u01EF\f\u01EF\x0E\u01EF\u1413\v\u01EF\x03" +
		"\u01EF\x03\u01EF\x03\u01F0\x03\u01F0\x03\u01F0\x03\u01F0\x03\u01F1\x03" +
		"\u01F1\x03\u01F1\x03\u01F1\x03\u01F2\x03\u01F2\x03\u01F2\x03\u01F2\x03" +
		"\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x03" +
		"\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x03\u01F3\x07\u01F3\u142F\n\u01F3" +
		"\f\u01F3\x0E\u01F3\u1432\v\u01F3\x03\u01F3\x03\u01F3\x03\u01F4\x03\u01F4" +
		"\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4" +
		"\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x03\u01F4\x07\u01F4" +
		"\u1445\n\u01F4\f\u01F4\x0E\u01F4\u1448\v\u01F4\x03\u01F4\x03\u01F4\x03" +
		"\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03" +
		"\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x03\u01F5\x07\u01F5\u1459" +
		"\n\u01F5\f\u01F5\x0E\u01F5\u145C\v\u01F5\x03\u01F5\x03\u01F5\x03\u01F6" +
		"\x03\u01F6\x03\u01F6\x03\u01F6\x03\u01F6\x03\u01F6\x03\u01F6\x03\u01F6" +
		"\x03\u01F6\x03\u01F6\x07\u01F6\u146A\n\u01F6\f\u01F6\x0E\u01F6\u146D\v" +
		"\u01F6\x03\u01F6\x03\u01F6\x03\u01F7\x03\u01F7\x03\u01F7\x05\u01F7\u1474" +
		"\n\u01F7\x03\u01F7\x03\u01F7\x03\u01F8\x03\u01F8\x03\u01F8\x03\u01F8\x05" +
		"\u01F8\u147C\n\u01F8\x03\u01F8\x03\u01F8\x03\u01F9\x03\u01F9\x03\u01F9" +
		"\x03\u01F9\x03\u01F9\x05\u01F9\u1485\n\u01F9\x03\u01F9\x05\u01F9\u1488" +
		"\n\u01F9\x03\u01F9\x03\u01F9\x03\u01FA\x03\u01FA\x03\u01FA\x03\u01FA\x03" +
		"\u01FB\x03\u01FB\x03\u01FC\x03\u01FC\x03\u01FC\x03\u01FC\x05\u01FC\u1496" +
		"\n\u01FC\x03\u01FC\x03\u01FC\x03\u01FD\x03\u01FD\x03\u01FE\x03\u01FE\x03" +
		"\u01FE\x03\u01FE\x03\u01FF\x03\u01FF\x03\u01FF\x07\u01FF\u14A3\n\u01FF" +
		"\f\u01FF\x0E\u01FF\u14A6\v\u01FF\x03\u01FF\x03\u01FF\x03\u0200\x03\u0200" +
		"\x03\u0200\x05\u0200\u14AD\n\u0200\x03\u0200\x03\u0200\x03\u0201\x03\u0201" +
		"\x03\u0201\x03\u0201\x03\u0201\x07\u0201\u14B6\n\u0201\f\u0201\x0E\u0201" +
		"\u14B9\v\u0201\x03\u0201\x03\u0201\x03\u0202\x03\u0202\x03\u0202\x03\u0202" +
		"\x03\u0202\x07\u0202\u14C2\n\u0202\f\u0202\x0E\u0202\u14C5\v\u0202\x03" +
		"\u0202\x03\u0202\x03\u0203\x03\u0203\x03\u0203\x03\u0203\x07\u0203\u14CD" +
		"\n\u0203\f\u0203\x0E\u0203\u14D0\v\u0203\x03\u0203\x03\u0203\x03\u0204" +
		"\x03\u0204\x05\u0204\u14D6\n\u0204\x03\u0204\x03\u0204\x03\u0205\x03\u0205" +
		"\x03\u0205\x03\u0205\x03\u0205\x03\u0205\x03\u0205\x03\u0205\x03\u0205" +
		"\x03\u0205\x03\u0205\x07\u0205\u14E5\n\u0205\f\u0205\x0E\u0205\u14E8\v" +
		"\u0205\x03\u0205\x03\u0205\x03\u0206\x03\u0206\x03\u0206\x07\u0206\u14EF" +
		"\n\u0206\f\u0206\x0E\u0206\u14F2\v\u0206\x03\u0206\x03\u0206\x03\u0207" +
		"\x03\u0207\x07\u0207\u14F8\n\u0207\f\u0207\x0E\u0207\u14FB\v\u0207\x03" +
		"\u0207\x03\u0207\x03\u0208\x03\u0208\x03\u0208\x03\u0208\x03\u0209\x03" +
		"\u0209\x07\u0209\u1505\n\u0209\f\u0209\x0E\u0209\u1508\v\u0209\x03\u0209" +
		"\x03\u0209\x03\u020A\x03\u020A\x03\u020B\x03\u020B\x03\u020B\x03\u020B" +
		"\x03\u020C\x03\u020C\x05\u020C\u1514\n\u020C\x03\u020C\x05\u020C\u1517" +
		"\n\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x03" +
		"\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x03\u020C\x07" +
		"\u020C\u1526\n\u020C\f\u020C\x0E\u020C\u1529\v\u020C\x03\u020C\x03\u020C" +
		"\x03\u020D\x03\u020D\x03\u020D\x05\u020D\u1530\n\u020D\x03\u020D\x03\u020D" +
		"\x03\u020D\x03\u020D\x03\u020D\x03\u020D\x03\u020D\x03\u020D\x03\u020D" +
		"\x03\u020D\x07\u020D\u153C\n\u020D\f\u020D\x0E\u020D\u153F\v\u020D\x03" +
		"\u020D\x03\u020D\x03\u020E\x03\u020E\x03\u020E\x03\u020E\x03\u020E\x03" +
		"\u020E\x03\u020E\x03\u020E\x03\u020E\x03\u020E\x03\u020E\x03\u020E\x03" +
		"\u020E\x07\u020E\u1550\n\u020E\f\u020E\x0E\u020E\u1553\v\u020E\x03\u020E" +
		"\x03\u020E\x03\u020F\x03\u020F\x03\u020F\x03\u020F\x03\u020F\x03\u020F" +
		"\x03\u020F\x03\u020F\x07\u020F\u155F\n\u020F\f\u020F\x0E\u020F\u1562\v" +
		"\u020F\x03\u020F\x03\u020F\x03\u0210\x03\u0210\x03\u0210\x03\u0210\x03" +
		"\u0210\x03\u0210\x07\u0210\u156C\n\u0210\f\u0210\x0E\u0210\u156F\v\u0210" +
		"\x03\u0210\x03\u0210\x03\u0211\x03\u0211\x03\u0211\x07\u0211\u1576\n\u0211" +
		"\f\u0211\x0E\u0211\u1579\v\u0211\x03\u0211\x03\u0211\x03\u0212\x03\u0212" +
		"\x03\u0213\x03\u0213\x03\u0214\x03\u0214\x03\u0214\x03\u0214\x03\u0214" +
		"\x03\u0214\x07\u0214\u1587\n\u0214\f\u0214\x0E\u0214\u158A\v\u0214\x03" +
		"\u0214\x03\u0214\x03\u0215\x03\u0215\x03\u0215\x03\u0215\x05\u0215\u1592" +
		"\n\u0215\x03\u0216\x03\u0216\x03\u0216\x03\u0216\x03\u0216\x03\u0216\x05" +
		"\u0216\u159A\n\u0216\x03\u0217\x03\u0217\x03\u0217\x03\u0218\x03\u0218" +
		"\x03\u0218\x05\u0218\u15A2\n\u0218\x03\u0218\x03\u0218\x05\u0218\u15A6" +
		"\n\u0218\x03\u0218\x03\u0218\x03\u0219\x03\u0219\x03\u0219\x03\u0219\x03" +
		"\u0219\x07\u0219\u15AF\n\u0219\f\u0219\x0E\u0219\u15B2\v\u0219\x03\u0219" +
		"\x03\u0219\x03\u021A\x03\u021A\x07\u021A\u15B8\n\u021A\f\u021A\x0E\u021A" +
		"\u15BB\v\u021A\x03\u021A\x03\u021A\x03\u021B\x03\u021B\x03\u021B\x03\u021B" +
		"\x03\u021B\x03\u021B\x07\u021B\u15C5\n\u021B\f\u021B\x0E\u021B\u15C8\v" +
		"\u021B\x03\u021B\x03\u021B\x03\u021C\x03\u021C\x03\u021C\x07\u021C\u15CF" +
		"\n\u021C\f\u021C\x0E\u021C\u15D2\v\u021C\x03\u021C\x03\u021C\x03\u021D" +
		"\x03\u021D\x03\u021E\x03\u021E\x03\u021F\x03\u021F\x03\u021F\x03\u021F" +
		"\x03\u021F\x03\u021F\x07\u021F\u15E0\n\u021F\f\u021F\x0E\u021F\u15E3\v" +
		"\u021F\x03\u021F\x03\u021F\x03\u0220\x03\u0220\x03\u0220\x03\u0220\x03" +
		"\u0220\x03\u0221\x03\u0221\x03\u0221\x03\u0221\x03\u0222\x03\u0222\x03" +
		"\u0223\x03\u0223\x03\u0223\x07\u0223\u15F5\n\u0223\f\u0223\x0E\u0223\u15F8" +
		"\v\u0223\x03\u0223\x03\u0223\x03\u0224\x03\u0224\x03\u0224\x03\u0224\x03" +
		"\u0225\x03\u0225\x03\u0225\x03\u0225\x05\u0225\u1604\n\u0225\x03\u0225" +
		"\x03\u0225\x03\u0226\x03\u0226\x03\u0227\x03\u0227\x03\u0227\x03\u0227" +
		"\x07\u0227\u160E\n\u0227\f\u0227\x0E\u0227\u1611\v\u0227\x03\u0227\x03" +
		"\u0227\x03\u0228\x03\u0228\x03\u0228\x03\u0228\x03\u0228\x05\u0228\u161A" +
		"\n\u0228\x03\u0228\x05\u0228\u161D\n\u0228\x03\u0228\x03\u0228\x03\u0229" +
		"\x03\u0229\x03\u0229\x03\u0229\x05\u0229\u1625\n\u0229\x03\u0229\x03\u0229" +
		"\x03\u0229\x07\u0229\u162A\n\u0229\f\u0229\x0E\u0229\u162D\v\u0229\x03" +
		"\u0229\x03\u0229\x03\u022A\x03\u022A\x03\u022A\x03\u022A\x03\u022B\x03" +
		"\u022B\x07\u022B\u1637\n\u022B\f\u022B\x0E\u022B\u163A\v\u022B\x03\u022B" +
		"\x03\u022B\x03\u022C\x03\u022C\x03\u022C\x03\u022C\x03\u022D\x03\u022D" +
		"\x03\u022D\x05\u022D\u1645\n\u022D\x03\u022E\x03\u022E\x03\u022E\x05\u022E" +
		"\u164A\n\u022E\x03\u022F\x03\u022F\x03\u022F\x05\u022F\u164F\n\u022F\x03" +
		"\u022F\x03\u022F\x03\u0230\x03\u0230\x03\u0230\x03\u0230\x03\u0230\x07" +
		"\u0230\u1658\n\u0230\f\u0230\x0E\u0230\u165B\v\u0230\x03\u0230\x03\u0230" +
		"\x03\u0231\x03\u0231\x03\u0231\x05\u0231\u1662\n\u0231\x03\u0231\x03\u0231" +
		"\x03\u0232\x03\u0232\x03\u0232\x03\u0232\x05\u0232\u166A\n\u0232\x03\u0232" +
		"\x03\u0232\x03\u0232\x03\u0232\x03\u0232\x03\u0232\x07\u0232\u1672\n\u0232" +
		"\f\u0232\x0E\u0232\u1675\v\u0232\x03\u0232\x03\u0232\x03\u0233\x03\u0233" +
		"\x03\u0233\x03\u0233\x07\u0233\u167D\n\u0233\f\u0233\x0E\u0233\u1680\v" +
		"\u0233\x03\u0233\x03\u0233\x03\u0234\x03\u0234\x03\u0234\x03\u0234\x03" +
		"\u0234\x05\u0234\u1689\n\u0234\x03\u0234\x05\u0234\u168C\n\u0234\x03\u0234" +
		"\x03\u0234\x03\u0235\x03\u0235\x03\u0235\x05\u0235\u1693\n\u0235\x03\u0235" +
		"\x03\u0235\x03\u0236\x03\u0236\x03\u0236\x03\u0236\x03\u0237\x03\u0237" +
		"\x03\u0238\x03\u0238\x03\u0238\x07\u0238\u16A0\n\u0238\f\u0238\x0E\u0238" +
		"\u16A3\v\u0238\x03\u0238\x03\u0238\x03\u0239\x03\u0239\x03\u023A\x03\u023A" +
		"\x03\u023A\x03\u023A\x05\u023A\u16AD\n\u023A\x03\u023A\x03\u023A\x03\u023A" +
		"\x07\u023A\u16B2\n\u023A\f\u023A\x0E\u023A\u16B5\v\u023A\x03\u023A\x03" +
		"\u023A\x03\u023B\x03\u023B\x03\u023B\x03\u023C\x03\u023C\x03\u023C\x03" +
		"\u023C\x03\u023C\x03\u023D\x03\u023D\x03\u023E\x03\u023E\x03\u023F\x03" +
		"\u023F\x03\u023F\x03\u023F\x03\u0240\x03\u0240\x03\u0240\x03\u0240\x03" +
		"\u0241\x03\u0241\x03\u0241\x03\u0241\x03\u0241\x03\u0242\x03\u0242\x03" +
		"\u0243\x03\u0243\x03\u0243\x03\u0244\x03\u0244\x03\u0244\x03\u0244\x03" +
		"\u0245\x03\u0245\x03\u0245\x03\u0245\x05\u0245\u16DF\n\u0245\x03\u0245" +
		"\x03\u0245\x03\u0246\x03\u0246\x07\u0246\u16E5\n\u0246\f\u0246\x0E\u0246" +
		"\u16E8\v\u0246\x03\u0246\x03\u0246\x03\u0247\x03\u0247\x03\u0247\x03\u0248" +
		"\x03\u0248\x07\u0248\u16F1\n\u0248\f\u0248\x0E\u0248\u16F4\v\u0248\x03" +
		"\u0248\x03\u0248\x03\u0249\x03\u0249\x03\u0249\x03\u0249\x03\u024A\x03" +
		"\u024A\x03\u024A\x03\u024A\x05\u024A\u1700\n\u024A\x03\u024A\x03\u024A" +
		"\x03\u024B\x03\u024B\x03\u024B\x03\u024C\x03\u024C\x03\u024C\x03\u024C" +
		"\x03\u024C\x03\u024D\x03\u024D\x03\u024D\x03\u024D\x03\u024D\x03\u024E" +
		"\x03\u024E\x03\u024E\x03\u024E\x03\u024F\x03\u024F\x03\u024F\x03\u0250" +
		"\x03\u0250\x03\u0251\x03\u0251\x05\u0251\u171C\n\u0251\x03\u0252\x03\u0252" +
		"\x03\u0252\x03\u0252\x03\u0252\x03\u0253\x03\u0253\x03\u0253\x03\u0253" +
		"\x03\u0253\x03\u0254\x03\u0254\x03\u0254\x03\u0254\x03\u0254\x03\u0254" +
		"\x03\u0254\x03\u0254\x03\u0254\x03\u0254\x07\u0254\u1732\n\u0254\f\u0254" +
		"\x0E\u0254\u1735\v\u0254\x03\u0254\x03\u0254\x03\u0255\x03\u0255\x03\u0255" +
		"\x05\u0255\u173C\n\u0255\x03\u0255\x03\u0255\x03\u0256\x03\u0256\x03\u0256" +
		"\x03\u0256\x03\u0256\x07\u0256\u1745\n\u0256\f\u0256\x0E\u0256\u1748\v" +
		"\u0256\x03\u0256\x03\u0256\x03\u0257\x03\u0257\x03\u0257\x03\u0257\x03" +
		"\u0257\x03\u0257\x03\u0257\x03\u0257\x03\u0257\x03\u0257\x07\u0257\u1756" +
		"\n\u0257\f\u0257\x0E\u0257\u1759\v\u0257\x03\u0257\x03\u0257\x03\u0258" +
		"\x03\u0258\x03\u0258\x03\u0258\x03\u0258\x03\u0258\x03\u0258\x03\u0258" +
		"\x03\u0258\x03\u0258\x07\u0258\u1767\n\u0258\f\u0258\x0E\u0258\u176A\v" +
		"\u0258\x03\u0258\x03\u0258\x03\u0259\x03\u0259\x03\u0259\x03\u0259\x03" +
		"\u0259\x07\u0259\u1773\n\u0259\f\u0259\x0E\u0259\u1776\v\u0259\x03\u0259" +
		"\x03\u0259\x03\u025A\x03\u025A\x03\u025A\x03\u025A\x03\u025A\x03\u025A" +
		"\x03\u025A\x03\u025A\x03\u025A\x03\u025A\x07\u025A\u1784\n\u025A\f\u025A" +
		"\x0E\u025A\u1787\v\u025A\x03\u025A\x03\u025A\x03\u025B\x03\u025B\x03\u025B" +
		"\x05\u025B\u178E\n\u025B\x03\u025B\x03\u025B\x03\u025C\x03\u025C\x03\u025C" +
		"\x03\u025C\x03\u025C\x03\u025C\x03\u025C\x07\u025C\u1799\n\u025C\f\u025C" +
		"\x0E\u025C\u179C\v\u025C\x03\u025C\x03\u025C\x03\u025D\x03\u025D\x03\u025D" +
		"\x03\u025D\x03\u025D\x03\u025D\x03\u025D\x03\u025D\x03\u025D\x03\u025D" +
		"\x03\u025D\x07\u025D\u17AB\n\u025D\f\u025D\x0E\u025D\u17AE\v\u025D\x03" +
		"\u025D\x03\u025D\x03\u025E\x03\u025E\x03\u025E\x05\u025E\u17B5\n\u025E" +
		"\x03\u025E\x03\u025E\x03\u025F\x03\u025F\x03\u025F\x03\u025F\x03\u025F" +
		"\x03\u025F\x03\u025F\x03\u0260\x03\u0260\x05\u0260\u17C2\n\u0260\x03\u0260" +
		"\x03\u0260\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261" +
		"\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261" +
		"\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x03\u0261\x07\u0261" +
		"\u17D9\n\u0261\f\u0261\x0E\u0261\u17DC\v\u0261\x03\u0261\x03\u0261\x03" +
		"\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x03" +
		"\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x03\u0262\x07" +
		"\u0262\u17EE\n\u0262\f\u0262\x0E\u0262\u17F1\v\u0262\x03\u0262\x03\u0262" +
		"\x03\u0263\x03\u0263\x03\u0263\x03\u0263\x03\u0263\x03\u0263\x03\u0263" +
		"\x03\u0263\x03\u0263\x03\u0263\x03\u0263\x07\u0263\u1800\n\u0263\f\u0263" +
		"\x0E\u0263\u1803\v\u0263\x03\u0263\x03\u0263\x03\u0264\x03\u0264\x03\u0264" +
		"\x03\u0264\x03\u0265\x03\u0265\x03\u0265\x03\u0265\x05\u0265\u180F\n\u0265" +
		"\x03\u0265\x03\u0265\x03\u0265\x03\u0265\x03\u0265\x03\u0265\x03\u0265" +
		"\x03\u0265\x07\u0265\u1819\n\u0265\f\u0265\x0E\u0265\u181C\v\u0265\x03" +
		"\u0265\x05\u0265\u181F\n\u0265\x03\u0265\x03\u0265\x03\u0266\x03\u0266" +
		"\x03\u0266\x05\u0266\u1826\n\u0266\x03\u0266\x03\u0266\x03\u0267\x03\u0267" +
		"\x03\u0267\x03\u0267\x03\u0267\x03\u0267\x07\u0267\u1830\n\u0267\f\u0267" +
		"\x0E\u0267\u1833\v\u0267\x03\u0267\x03\u0267\x03\u0268\x03\u0268\x03\u0268" +
		"\x03\u0268\x03\u0268\x03\u0268\x03\u0268\x03\u0268\x03\u0268\x03\u0268" +
		"\x07\u0268\u1841\n\u0268\f\u0268\x0E\u0268\u1844\v\u0268\x03\u0268\x03" +
		"\u0268\x03\u0269\x03\u0269\x03\u0269\x05\u0269\u184B\n\u0269\x03\u0269" +
		"\x03\u0269\x03\u026A\x03\u026A\x03\u026A\x03\u026A\x03\u026A\x03\u026A" +
		"\x03\u026A\x03\u026B\x03\u026B\x05\u026B\u1858\n\u026B\x03\u026B\x03\u026B" +
		"\x03\u026C\x03\u026C\x03\u026C\x07\u026C\u185F\n\u026C\f\u026C\x0E\u026C" +
		"\u1862\v\u026C\x03\u026C\x03\u026C\x03\u026D\x03\u026D\x03\u026D\x03\u026D" +
		"\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D" +
		"\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x03\u026D" +
		"\x03\u026D\x03\u026D\x03\u026D\x03\u026D\x07\u026D\u187C\n\u026D\f\u026D" +
		"\x0E\u026D\u187F\v\u026D\x03\u026D\x03\u026D\x03\u026E\x03\u026E\x03\u026E" +
		"\x03\u026E\x03\u026F\x03\u026F\x03\u026F\x03\u026F\x03\u026F\x03\u026F" +
		"\x03\u026F\x07\u026F\u188E\n\u026F\f\u026F\x0E\u026F\u1891\v\u026F\x03" +
		"\u026F\x03\u026F\x03\u0270\x03\u0270\x03\u0270\x03\u0270\x03\u0270\x03" +
		"\u0270\x03\u0270\x03\u0270\x03\u0270\x07\u0270\u189E\n\u0270\f\u0270\x0E" +
		"\u0270\u18A1\v\u0270\x03\u0270\x03\u0270\x03\u0271\x03\u0271\x03\u0271" +
		"\x03\u0271\x03\u0271\x03\u0271\x03\u0271\x03\u0271\x07\u0271\u18AD\n\u0271" +
		"\f\u0271\x0E\u0271\u18B0\v\u0271\x03\u0271\x03\u0271\x03\u0272\x03\u0272" +
		"\x03\u0272\x03\u0272\x03\u0273\x03\u0273\x03\u0273\x03\u0273\x03\u0273" +
		"\x03\u0273\x03\u0273\x03\u0273\x03\u0273\x07\u0273\u18C1\n\u0273\f\u0273" +
		"\x0E\u0273\u18C4\v\u0273\x03\u0273\x03\u0273\x03\u0274\x03\u0274\x03\u0274" +
		"\x05\u0274\u18CB\n\u0274\x03\u0274\x03\u0274\x03\u0275\x03\u0275\x03\u0275" +
		"\x03\u0275\x03\u0275\x03\u0275\x03\u0275\x03\u0275\x07\u0275\u18D7\n\u0275" +
		"\f\u0275\x0E\u0275\u18DA\v\u0275\x03\u0275\x03\u0275\x03\u0276\x03\u0276" +
		"\x03\u0276\x03\u0276\x03\u0277\x03\u0277\x03\u0277\x03\u0277\x03\u0277" +
		"\x03\u0277\x03\u0277\x03\u0277\x03\u0277\x07\u0277\u18EB\n\u0277\f\u0277" +
		"\x0E\u0277\u18EE\v\u0277\x03\u0277\x03\u0277\x03\u0278\x03\u0278\x03\u0278" +
		"\x05\u0278\u18F5\n\u0278\x03\u0278\x03\u0278\x03\u0279\x03\u0279\x03\u0279" +
		"\x03\u0279\x03\u0279\x05\u0279\u18FE\n\u0279\x03\u0279\x03\u0279\x03\u0279" +
		"\x03\u0279\x03\u0279\x03\u0279\x07\u0279\u1906\n\u0279\f\u0279\x0E\u0279" +
		"\u1909\v\u0279\x03\u0279\x03\u0279\x03\u027A\x03\u027A\x03\u027A\x03\u027A" +
		"\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x03\u027B" +
		"\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x03\u027B\x07\u027B" +
		"\u191E\n\u027B\f\u027B\x0E\u027B\u1921\v\u027B\x03\u027B\x03\u027B\x03" +
		"\u027C\x03\u027C\x03\u027C\x05\u027C\u1928\n\u027C\x03\u027C\x03\u027C" +
		"\x03\u027D\x03\u027D\x03\u027D\x03\u027D\x05\u027D\u1930\n\u027D\x03\u027D" +
		"\x05\u027D\u1933\n\u027D\x03\u027D\x03\u027D\x03\u027E\x03\u027E\x03\u027E" +
		"\x03\u027E\x03\u027E\x03\u027E\x03\u027E\x03\u027E\x03\u027E\x07\u027E" +
		"\u1940\n\u027E\f\u027E\x0E\u027E\u1943\v\u027E\x03\u027E\x03\u027E\x03" +
		"\u027F\x03\u027F\x03\u027F\x05\u027F\u194A\n\u027F\x03\u027F\x03\u027F" +
		"\x03\u0280\x03\u0280\x03\u0280\x03\u0280\x03\u0280\x07\u0280\u1953\n\u0280" +
		"\f\u0280\x0E\u0280\u1956\v\u0280\x03\u0280\x03\u0280\x03\u0281\x03\u0281" +
		"\x03\u0281\x05\u0281\u195D\n\u0281\x03\u0281\x03\u0281\x03\u0281\x03\u0281" +
		"\x03\u0281\x03\u0281\x03\u0281\x03\u0281\x07\u0281\u1967\n\u0281\f\u0281" +
		"\x0E\u0281\u196A\v\u0281\x03\u0281\x03\u0281\x05\u0281\u196E\n\u0281\x03" +
		"\u0281\x03\u0281\x03\u0281\x03\u0281\x03\u0281\x03\u0281\x03\u0281\x03" +
		"\u0281\x07\u0281\u1978\n\u0281\f\u0281\x0E\u0281\u197B\v\u0281\x03\u0281" +
		"\x03\u0281\x03\u0282\x03\u0282\x03\u0282\x03\u0282\x03\u0282\x03\u0282" +
		"\x03\u0282\x03\u0282\x03\u0282\x03\u0282\x03\u0282\x07\u0282\u198A\n\u0282" +
		"\f\u0282\x0E\u0282\u198D\v\u0282\x03\u0282\x03\u0282\x03\u0283\x03\u0283" +
		"\x03\u0283\x03\u0283\x03\u0284\x03\u0284\x03\u0284\x03\u0284\x03\u0284" +
		"\x03\u0284\x03\u0284\x03\u0284\x03\u0284\x03\u0284\x03\u0284\x07\u0284" +
		"\u19A0\n\u0284\f\u0284\x0E\u0284\u19A3\v\u0284\x03\u0284\x03\u0284\x03" +
		"\u0285\x03\u0285\x03\u0285\x05\u0285\u19AA\n\u0285\x03\u0285\x03\u0285" +
		"\x03\u0286\x03\u0286\x03\u0286\x03\u0286\x03\u0286\x03\u0286\x03\u0286" +
		"\x03\u0286\x03\u0286\x03\u0286\x03\u0286\x07\u0286\u19B9\n\u0286\f\u0286" +
		"\x0E\u0286\u19BC\v\u0286\x03\u0286\x03\u0286\x03\u0287\x03\u0287\x03\u0287" +
		"\x03\u0287\x03\u0288\x03\u0288\x03\u0288\x03\u0288\x03\u0288\x03\u0288" +
		"\x03\u0288\x03\u0288\x03\u0288\x03\u0288\x03\u0288\x07\u0288\u19CF\n\u0288" +
		"\f\u0288\x0E\u0288\u19D2\v\u0288\x03\u0288\x03\u0288\x03\u0289\x03\u0289" +
		"\x03\u0289\x05\u0289\u19D9\n\u0289\x03\u0289\x03\u0289\x03\u028A\x03\u028A" +
		"\x03\u028A\x03\u028A\x03\u028A\x07\u028A\u19E2\n\u028A\f\u028A\x0E\u028A" +
		"\u19E5\v\u028A\x03\u028A\x03\u028A\x03\u028B\x03\u028B\x03\u028B\x03\u028B" +
		"\x03\u028B\x03\u028B\x03\u028B\x03\u028B\x03\u028B\x07\u028B\u19F2\n\u028B" +
		"\f\u028B\x0E\u028B\u19F5\v\u028B\x03\u028B\x03\u028B\x03\u028C\x03\u028C" +
		"\x03\u028C\x05\u028C\u19FC\n\u028C\x03\u028C\x03\u028C\x03\u028D\x03\u028D" +
		"\x03\u028D\x03\u028D\x03\u028D\x03\u028D\x03\u028D\x03\u028E\x03\u028E" +
		"\x05\u028E\u1A09\n\u028E\x03\u028E\x03\u028E\x03\u028F\x03\u028F\x03\u028F" +
		"\x07\u028F\u1A10\n\u028F\f\u028F\x0E\u028F\u1A13\v\u028F\x03\u028F\x03" +
		"\u028F\x03\u0290\x03\u0290\x03\u0290\x03\u0290\x03\u0291\x03\u0291\x03" +
		"\u0291\x03\u0291\x03\u0292\x03\u0292\x03\u0292\x03\u0293\x03\u0293\x03" +
		"\u0293\x03\u0293\x03\u0293\x03\u0293\x03\u0293\x03\u0293\x03\u0293\x03" +
		"\u0293\x03\u0293\x03\u0293\x03\u0293\x03\u0293\x07\u0293\u1A30\n\u0293" +
		"\f\u0293\x0E\u0293\u1A33\v\u0293\x03\u0293\x03\u0293\x03\u0294\x03\u0294" +
		"\x05\u0294\u1A39\n\u0294\x03\u0294\x03\u0294\x03\u0295\x03\u0295\x05\u0295" +
		"\u1A3F\n\u0295\x03\u0295\x03\u0295\x03\u0296\x03\u0296\x03\u0296\x07\u0296" +
		"\u1A46\n\u0296\f\u0296\x0E\u0296\u1A49\v\u0296\x03\u0296\x03\u0296\x03" +
		"\u0297\x03\u0297\x03\u0297\x03\u0297\x03\u0298\x03\u0298\x05\u0298\u1A53" +
		"\n\u0298\x03\u0298\x03\u0298\x03\u0299\x03\u0299\x05\u0299\u1A59\n\u0299" +
		"\x03\u0299\x03\u0299\x03\u029A\x03\u029A\x03\u029A\x03\u029B\x03\u029B" +
		"\x03\u029B\x03\u029C\x03\u029C\x03\u029C\x03\u029D\x03\u029D\x03\u029D" +
		"\x03\u029E\x03\u029E\x03\u029E\x05\u029E\u1A6C\n\u029E\x03\u029E\x03\u029E" +
		"\x03\u029F\x03\u029F\x03\u029F\x03\u02A0\x03\u02A0\x03\u02A0\x03\u02A0" +
		"\x03\u02A0\x03\u02A0\x03\u02A1\x03\u02A1\x03\u02A1\x03\u02A1\x03\u02A1" +
		"\x03\u02A1\x03\u02A1\x03\u02A1\x03\u02A1\x03\u02A1\x07\u02A1\u1A83\n\u02A1" +
		"\f\u02A1\x0E\u02A1\u1A86\v\u02A1\x03\u02A1\x03\u02A1\x03\u02A2\x03\u02A2" +
		"\x03\u02A2\x03\u02A2\x03\u02A3\x03\u02A3\x03\u02A3\x03\u02A3\x03\u02A3" +
		"\x03\u02A3\x03\u02A3\x03\u02A3\x03\u02A3\x03\u02A3\x07\u02A3\u1A98\n\u02A3" +
		"\f\u02A3\x0E\u02A3\u1A9B\v\u02A3\x03\u02A3\x03\u02A3\x03\u02A4\x03\u02A4" +
		"\x03\u02A4\x05\u02A4\u1AA2\n\u02A4\x03\u02A4\x03\u02A4\x03\u02A5\x03\u02A5" +
		"\x03\u02A5\x03\u02A5\x03\u02A5\x03\u02A5\x03\u02A5\x03\u02A5\x03\u02A5" +
		"\x07\u02A5\u1AAF\n\u02A5\f\u02A5\x0E\u02A5\u1AB2\v\u02A5\x03\u02A5\x03" +
		"\u02A5\x03\u02A6\x03\u02A6\x07\u02A6\u1AB8\n\u02A6\f\u02A6\x0E\u02A6\u1ABB" +
		"\v\u02A6\x03\u02A6\x03\u02A6\x03\u02A7\x03\u02A7\x03\u02A7\x03\u02A7\x03" +
		"\u02A7\x03\u02A7\x07\u02A7\u1AC5\n\u02A7\f\u02A7\x0E\u02A7\u1AC8\v\u02A7" +
		"\x03\u02A7\x03\u02A7\x03\u02A8\x03\u02A8\x03\u02A8\x03\u02A8\x03\u02A8" +
		"\x03\u02A8\x03\u02A8\x03\u02A8\x07\u02A8\u1AD4\n\u02A8\f\u02A8\x0E\u02A8" +
		"\u1AD7\v\u02A8\x03\u02A8\x03\u02A8\x03\u02A9\x03\u02A9\x07\u02A9\u1ADD" +
		"\n\u02A9\f\u02A9\x0E\u02A9\u1AE0\v\u02A9\x03\u02A9\x03\u02A9\x03\u02AA" +
		"\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA" +
		"\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA" +
		"\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x03\u02AA\x07\u02AA" +
		"\u1AF9\n\u02AA\f\u02AA\x0E\u02AA\u1AFC\v\u02AA\x03\u02AA\x03\u02AA\x03" +
		"\u02AB\x03\u02AB\x03\u02AB\x03\u02AB\x03\u02AB\x07\u02AB\u1B05\n\u02AB" +
		"\f\u02AB\x0E\u02AB\u1B08\v\u02AB\x03\u02AB\x03\u02AB\x03\u02AC\x03\u02AC" +
		"\x03\u02AC\x03\u02AC\x03\u02AC\x03\u02AC\x03\u02AC\x03\u02AC\x03\u02AC" +
		"\x07\u02AC\u1B15\n\u02AC\f\u02AC\x0E\u02AC\u1B18\v\u02AC\x03\u02AC\x03" +
		"\u02AC\x03\u02AD\x03\u02AD\x03\u02AD\x05\u02AD\u1B1F\n\u02AD\x03\u02AD" +
		"\x03\u02AD\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE" +
		"\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE\x03\u02AE\x07\u02AE" +
		"\u1B2F\n\u02AE\f\u02AE\x0E\u02AE\u1B32\v\u02AE\x03\u02AE\x03\u02AE\x03" +
		"\u02AF\x03\u02AF\x03\u02AF\x03\u02AF\x03\u02AF\x03\u02AF\x03\u02AF\x03" +
		"\u02AF\x07\u02AF\u1B3E\n\u02AF\f\u02AF\x0E\u02AF\u1B41\v\u02AF\x03\u02AF" +
		"\x03\u02AF\x03\u02B0\x03\u02B0\x03\u02B0\x03\u02B0\x03\u02B0\x03\u02B1" +
		"\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1" +
		"\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x03\u02B1\x07\u02B1" +
		"\u1B58\n\u02B1\f\u02B1\x0E\u02B1\u1B5B\v\u02B1\x03\u02B1\x03\u02B1\x03" +
		"\u02B2\x03\u02B2\x03\u02B2\x05\u02B2\u1B62\n\u02B2\x03\u02B2\x03\u02B2" +
		"\x03\u02B3\x03\u02B3\x03\u02B3\x03\u02B3\x03\u02B4\x03\u02B4\x03\u02B4" +
		"\x03\u02B4\x03\u02B4\x03\u02B4\x03\u02B4\x03\u02B4\x07\u02B4\u1B72\n\u02B4" +
		"\f\u02B4\x0E\u02B4\u1B75\v\u02B4\x03\u02B4\x03\u02B4\x03\u02B5\x03\u02B5" +
		"\x03\u02B5\x03\u02B5\x03\u02B5\x03\u02B5\x03\u02B5\x07\u02B5\u1B80\n\u02B5" +
		"\f\u02B5\x0E\u02B5\u1B83\v\u02B5\x03\u02B5\x03\u02B5\x03\u02B6\x03\u02B6" +
		"\x03\u02B6\x03\u02B6\x03\u02B6\x03\u02B6\x03\u02B6\x07\u02B6\u1B8E\n\u02B6" +
		"\f\u02B6\x0E\u02B6\u1B91\v\u02B6\x03\u02B6\x03\u02B6\x03\u02B7\x03\u02B7" +
		"\x03\u02B7\x03\u02B7\x03\u02B7\x03\u02B7\x03\u02B7\x03\u02B7\x07\u02B7" +
		"\u1B9D\n\u02B7\f\u02B7\x0E\u02B7\u1BA0\v\u02B7\x03\u02B7\x03\u02B7\x03" +
		"\u02B8\x03\u02B8\x03\u02B8\x03\u02B8\x05\u02B8\u1BA8\n\u02B8\x03\u02B8" +
		"\x03\u02B8\x03\u02B9\x03\u02B9\x03\u02B9\x05\u02B9\u1BAF\n\u02B9\x03\u02B9" +
		"\x03\u02B9\x03\u02BA\x03\u02BA\x03\u02BA\x03\u02BA\x03\u02BB\x03\u02BB" +
		"\x03\u02BC\x03\u02BC\x03\u02BD\x03\u02BD\x03\u02BE\x03\u02BE\x03\u02BE" +
		"\x03\u02BE\x03\u02BE\x03\u02BE\x07\u02BE\u1BC3\n\u02BE\f\u02BE\x0E\u02BE" +
		"\u1BC6\v\u02BE\x03\u02BE\x03\u02BE\x03\u02BF\x03\u02BF\x03\u02C0\x03\u02C0" +
		"\x03\u02C0\x03\u02C0\x03\u02C1\x03\u02C1\x03\u02C1\x03\u02C1\x05\u02C1" +
		"\u1BD4\n\u02C1\x03\u02C1\x03\u02C1\x03\u02C2\x03\u02C2\x03\u02C2\x03\u02C2" +
		"\x03\u02C3\x03\u02C3\x03\u02C3\x03\u02C3\x03\u02C4\x03\u02C4\x03\u02C4" +
		"\x03\u02C4\x03\u02C5\x03\u02C5\x03\u02C5\x03\u02C5\x03\u02C6\x03\u02C6" +
		"\x03\u02C6\x03\u02C6\x03\u02C7\x03\u02C7\x03\u02C7\x03\u02C7\x03\u02C8" +
		"\x03\u02C8\x03\u02C8\x03\u02C8\x03\u02C9\x03\u02C9\x03\u02C9\x03\u02C9" +
		"\x03\u02CA\x03\u02CA\x03\u02CA\x03\u02CA\x03\u02CB\x03\u02CB\x03\u02CB" +
		"\x03\u02CB\x03\u02CB\x03\u02CB\x03\u02CB\x07\u02CB\u1C03\n\u02CB\f\u02CB" +
		"\x0E\u02CB\u1C06\v\u02CB\x03\u02CB\x03\u02CB\x03\u02CC\x03";
	private static readonly _serializedATNSegment3: string =
		"\u02CC\x03\u02CC\x05\u02CC\u1C0D\n\u02CC\x03\u02CC\x03\u02CC\x03\u02CC" +
		"\x07\u02CC\u1C12\n\u02CC\f\u02CC\x0E\u02CC\u1C15\v\u02CC\x03\u02CC\x03" +
		"\u02CC\x03\u02CD\x03\u02CD\x03\u02CD\x03\u02CD\x03\u02CD\x07\u02CD\u1C1E" +
		"\n\u02CD\f\u02CD\x0E\u02CD\u1C21\v\u02CD\x03\u02CD\x03\u02CD\x03\u02CE" +
		"\x03\u02CE\x03\u02CE\x03\u02CE\x03\u02CE\x07\u02CE\u1C2A\n\u02CE\f\u02CE" +
		"\x0E\u02CE\u1C2D\v\u02CE\x03\u02CE\x03\u02CE\x03\u02CF\x03\u02CF\x03\u02CF" +
		"\x03\u02CF\x03\u02D0\x03\u02D0\x03\u02D1\x03\u02D1\x03\u02D2\x03\u02D2" +
		"\x03\u02D2\x03\u02D2\x03\u02D3\x03\u02D3\x03\u02D3\x03\u02D4\x03\u02D4" +
		"\x03\u02D4\x03\u02D4\x03\u02D4\x07\u02D4\u1C45\n\u02D4\f\u02D4\x0E\u02D4" +
		"\u1C48\v\u02D4\x03\u02D4\x03\u02D4\x03\u02D5\x03\u02D5\x03\u02D5\x07\u02D5" +
		"\u1C4F\n\u02D5\f\u02D5\x0E\u02D5\u1C52\v\u02D5\x03\u02D5\x03\u02D5\x03" +
		"\u02D6\x03\u02D6\x03\u02D6\x03\u02D6\x03\u02D6\x03\u02D7\x03\u02D7\x03" +
		"\u02D7\x03\u02D7\x03\u02D8\x03\u02D8\x03\u02D9\x03\u02D9\x03\u02DA\x03" +
		"\u02DA\x03\u02DA\x03\u02DA\x03\u02DB\x03\u02DB\x03\u02DB\x03\u02DB\x03" +
		"\u02DC\x03\u02DC\x03\u02DD\x03\u02DD\x03\u02DE\x03\u02DE\x03\u02DE\x03" +
		"\u02DE\x03\u02DE\x07\u02DE\u1C74\n\u02DE\f\u02DE\x0E\u02DE\u1C77\v\u02DE" +
		"\x03\u02DE\x03\u02DE\x03\u02DF\x03\u02DF\x03\u02DF\x03\u02DF\x03\u02E0" +
		"\x03\u02E0\x03\u02E0\x03\u02E0\x03\u02E1\x03\u02E1\x07\u02E1\u1C85\n\u02E1" +
		"\f\u02E1\x0E\u02E1\u1C88\v\u02E1\x03\u02E1\x03\u02E1\x03\u02E2\x03\u02E2" +
		"\x03\u02E2\x03\u02E2\x03\u02E2\x03\u02E3\x03\u02E3\x03\u02E3\x03\u02E3" +
		"\x03\u02E4\x03\u02E4\x03\u02E4\x03\u02E4\x03\u02E4\x03\u02E5\x03\u02E5" +
		"\x03\u02E5\x03\u02E5\x03\u02E5\x03\u02E5\x03\u02E5\x03\u02E5\x05\u02E5" +
		"\u1CA2\n\u02E5\x03\u02E6\x03\u02E6\x03\u02E6\x03\u02E6\x03\u02E7\x03\u02E7" +
		"\x03\u02E7\x03\u02E7\x07\u02E7\u1CAC\n\u02E7\f\u02E7\x0E\u02E7\u1CAF\v" +
		"\u02E7\x03\u02E7\x03\u02E7\x03\u02E8\x03\u02E8\x03\u02E8\x03\u02E8\x03" +
		"\u02E8\x03\u02E9\x03\u02E9\x03\u02E9\x03\u02E9\x03\u02EA\x03\u02EA\x03" +
		"\u02EA\x03\u02EA\x03\u02EA\x03\u02EB\x03\u02EB\x03\u02EB\x03\u02EB\x03" +
		"\u02EB\x03\u02EC\x03\u02EC\x03\u02ED\x03\u02ED\x03\u02ED\x03\u02ED\x03" +
		"\u02EE\x03\u02EE\x03\u02EF\x03\u02EF\x03\u02EF\x03\u02EF\x03\u02EF\x03" +
		"\u02EF\x03\u02F0\x03\u02F0\x03\u02F1\x03\u02F1\x03\u02F2\x03\u02F2\x03" +
		"\u02F3\x03\u02F3\x03\u02F3\x03\u02F3\x03\u02F3\x07\u02F3\u1CDF\n\u02F3" +
		"\f\u02F3\x0E\u02F3\u1CE2\v\u02F3\x03\u02F3\x03\u02F3\x03\u02F4\x03\u02F4" +
		"\x03\u02F4\x03\u02F4\x07\u02F4\u1CEA\n\u02F4\f\u02F4\x0E\u02F4\u1CED\v" +
		"\u02F4\x03\u02F4\x05\u02F4\u1CF0\n\u02F4\x03\u02F4\x03\u02F4\x07\u02F4" +
		"\u1CF4\n\u02F4\f\u02F4\x0E\u02F4\u1CF7\v\u02F4\x03\u02F4\x03\u02F4\x03" +
		"\u02F5\x03\u02F5\x03\u02F6\x03\u02F6\x03\u02F7\x03\u02F7\x03\u02F7\x03" +
		"\u02F7\x03\u02F7\x03\u02F7\x07\u02F7\u1D05\n\u02F7\f\u02F7\x0E\u02F7\u1D08" +
		"\v\u02F7\x03\u02F7\x03\u02F7\x03\u02F8\x03\u02F8\x03\u02F8\x03\u02F8\x03" +
		"\u02F9\x03\u02F9\x03\u02FA\x03\u02FA\x03\u02FA\x03\u02FA\x03\u02FA\x03" +
		"\u02FA\x03\u02FB\x03\u02FB\x03\u02FC\x03\u02FC\x03\u02FC\x05\u02FC\u1D1D" +
		"\n\u02FC\x03\u02FC\x03\u02FC\x03\u02FC\x05\u02FC\u1D22\n\u02FC\x03\u02FC" +
		"\x03\u02FC\x03\u02FD\x03\u02FD\x03\u02FD\x03\u02FD\x03\u02FD\x03\u02FE" +
		"\x03\u02FE\x03\u02FF\x03\u02FF\x03\u02FF\x03\u02FF\x03\u02FF\x03\u02FF" +
		"\x03\u02FF\x03\u02FF\x07\u02FF\u1D35\n\u02FF\f\u02FF\x0E\u02FF\u1D38\v" +
		"\u02FF\x03\u02FF\x03\u02FF\x03\u0300\x03\u0300\x03\u0300\x07\u0300\u1D3F" +
		"\n\u0300\f\u0300\x0E\u0300\u1D42\v\u0300\x03\u0300\x03\u0300\x03\u0301" +
		"\x03\u0301\x03\u0302\x03\u0302\x03\u0303\x03\u0303\x03\u0304\x03\u0304" +
		"\x03\u0304\x03\u0305\x03\u0305\x03\u0305\x03\u0305\x03\u0306\x03\u0306" +
		"\x03\u0306\x03\u0306\x05\u0306\u1D57\n\u0306\x03\u0306\x03\u0306\x03\u0307" +
		"\x03\u0307\x03\u0307\x03\u0307\x03\u0307\x07\u0307\u1D60\n\u0307\f\u0307" +
		"\x0E\u0307\u1D63\v\u0307\x03\u0307\x03\u0307\x03\u0308\x03\u0308\x03\u0308" +
		"\x03\u0308\x03\u0308\x03\u0309\x03\u0309\x03\u0309\x03\u030A\x03\u030A" +
		"\x03\u030A\x03\u030B\x03\u030B\x03\u030B\x03\u030B\x03\u030B\x03\u030B" +
		"\x05\u030B\u1D78\n\u030B\x03\u030C\x03\u030C\x03\u030C\x05\u030C\u1D7D" +
		"\n\u030C\x03\u030C\x03\u030C\x03\u030D\x03\u030D\x03\u030D\x03\u030D\x03" +
		"\u030E\x03\u030E\x03\u030E\x03\u030F\x03\u030F\x03\u030F\x03\u0310\x03" +
		"\u0310\x03\u0310\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03" +
		"\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03" +
		"\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03" +
		"\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x03\u0311\x07\u0311\u1DA7" +
		"\n\u0311\f\u0311\x0E\u0311\u1DAA\v\u0311\x03\u0311\x03\u0311\x03\u0312" +
		"\x03\u0312\x07\u0312\u1DB0\n\u0312\f\u0312\x0E\u0312\u1DB3\v\u0312\x03" +
		"\u0312\x03\u0312\x03\u0313\x03\u0313\x03\u0314\x03\u0314\x03\u0315\x03" +
		"\u0315\x03\u0316\x03\u0316\x03\u0316\x03\u0316\x03\u0317\x03\u0317\x03" +
		"\u0317\x03\u0318\x03\u0318\x03\u0318\x03\u0319\x03\u0319\x03\u0319\x03" +
		"\u031A\x03\u031A\x03\u031A\x03\u031B\x03\u031B\x03\u031B\x03\u031C\x03" +
		"\u031C\x07\u031C\u1DD2\n\u031C\f\u031C\x0E\u031C\u1DD5\v\u031C\x03\u031C" +
		"\x03\u031C\x03\u031D\x03\u031D\x03\u031D\x03\u031D\x03\u031D\x03\u031D" +
		"\x07\u031D\u1DDF\n\u031D\f\u031D\x0E\u031D\u1DE2\v\u031D\x03\u031D\x03" +
		"\u031D\x03\u031E\x03\u031E\x03\u031F\x03\u031F\x03\u031F\x03\u031F\x03" +
		"\u0320\x03\u0320\x03\u0320\x03\u0320\x03\u0320\x03\u0320\x05\u0320\u1DF2" +
		"\n\u0320\x03\u0320\x03\u0320\x03\u0321\x03\u0321\x03\u0321\x03\u0321\x03" +
		"\u0321\x03\u0321\x03\u0321\x07\u0321\u1DFD\n\u0321\f\u0321\x0E\u0321\u1E00" +
		"\v\u0321\x03\u0321\x03\u0321\x03\u0322\x03\u0322\x03\u0322\x03\u0322\x03" +
		"\u0322\x07\u0322\u1E09\n\u0322\f\u0322\x0E\u0322\u1E0C\v\u0322\x03\u0322" +
		"\x03\u0322\x03\u0323\x03\u0323\x03\u0323\x03\u0323\x03\u0324\x03\u0324" +
		"\x03\u0325\x03\u0325\x03\u0326\x03\u0326\x03\u0326\x03\u0326\x03\u0327" +
		"\x03\u0327\x03\u0327\x03\u0327\x03\u0328\x03\u0328\x03\u0329\x03\u0329" +
		"\x03\u0329\x07\u0329\u1E25\n\u0329\f\u0329\x0E\u0329\u1E28\v\u0329\x03" +
		"\u0329\x03\u0329\x03\u032A\x03\u032A\x03\u032B\x03\u032B\x03\u032B\x03" +
		"\u032B\x07\u032B\u1E32\n\u032B\f\u032B\x0E\u032B\u1E35\v\u032B\x03\u032B" +
		"\x03\u032B\x03\u032C\x03\u032C\x03\u032C\x03\u032C\x05\u032C\u1E3D\n\u032C" +
		"\x03\u032C\x03\u032C\x03\u032C\x07\u032C\u1E42\n\u032C\f\u032C\x0E\u032C" +
		"\u1E45\v\u032C\x03\u032C\x03\u032C\x03\u032D\x03\u032D\x03\u032D\x05\u032D" +
		"\u1E4C\n\u032D\x03\u032D\x03\u032D\x03\u032E\x03\u032E\x03\u032E\x03\u032E" +
		"\x03\u032F\x03\u032F\x03\u032F\x03\u032F\x03\u0330\x03\u0330\x03\u0330" +
		"\x03\u0330\x03\u0331\x03\u0331\x03\u0332\x03\u0332\x03\u0332\x03\u0332" +
		"\x03\u0333\x03\u0333\x03\u0333\x03\u0333\x03\u0334\x03\u0334\x03\u0334" +
		"\x07\u0334\u1E69\n\u0334\f\u0334\x0E\u0334\u1E6C\v\u0334\x03\u0334\x03" +
		"\u0334\x03\u0335\x03\u0335\x03\u0335\x03\u0335\x03\u0336\x03\u0336\x03" +
		"\u0336\x03\u0337\x03\u0337\x03\u0337\x03\u0338\x03\u0338\x03\u0338\x03" +
		"\u0338\x03\u0338\x03\u0338\x03\u0338\x07\u0338\u1E81\n\u0338\f\u0338\x0E" +
		"\u0338\u1E84\v\u0338\x03\u0338\x03\u0338\x03\u0339\x03\u0339\x03\u033A" +
		"\x03\u033A\x03\u033B\x03\u033B\x07\u033B\u1E8E\n\u033B\f\u033B\x0E\u033B" +
		"\u1E91\v\u033B\x03\u033B\x03\u033B\x03\u033C\x03\u033C\x03\u033D\x03\u033D" +
		"\x07\u033D\u1E99\n\u033D\f\u033D\x0E\u033D\u1E9C\v\u033D\x03\u033D\x03" +
		"\u033D\x03\u033E\x03\u033E\x03\u033F\x03\u033F\x03\u0340\x03\u0340\x03" +
		"\u0341\x03\u0341\x03\u0341\x02\x02\x02\u0342\x02\x02\x04\x02\x06\x02\b" +
		"\x02\n\x02\f\x02\x0E\x02\x10\x02\x12\x02\x14\x02\x16\x02\x18\x02\x1A\x02" +
		"\x1C\x02\x1E\x02 \x02\"\x02$\x02&\x02(\x02*\x02,\x02.\x020\x022\x024\x02" +
		"6\x028\x02:\x02<\x02>\x02@\x02B\x02D\x02F\x02H\x02J\x02L\x02N\x02P\x02" +
		"R\x02T\x02V\x02X\x02Z\x02\\\x02^\x02`\x02b\x02d\x02f\x02h\x02j\x02l\x02" +
		"n\x02p\x02r\x02t\x02v\x02x\x02z\x02|\x02~\x02\x80\x02\x82\x02\x84\x02" +
		"\x86\x02\x88\x02\x8A\x02\x8C\x02\x8E\x02\x90\x02\x92\x02\x94\x02\x96\x02" +
		"\x98\x02\x9A\x02\x9C\x02\x9E\x02\xA0\x02\xA2\x02\xA4\x02\xA6\x02\xA8\x02" +
		"\xAA\x02\xAC\x02\xAE\x02\xB0\x02\xB2\x02\xB4\x02\xB6\x02\xB8\x02\xBA\x02" +
		"\xBC\x02\xBE\x02\xC0\x02\xC2\x02\xC4\x02\xC6\x02\xC8\x02\xCA\x02\xCC\x02" +
		"\xCE\x02\xD0\x02\xD2\x02\xD4\x02\xD6\x02\xD8\x02\xDA\x02\xDC\x02\xDE\x02" +
		"\xE0\x02\xE2\x02\xE4\x02\xE6\x02\xE8\x02\xEA\x02\xEC\x02\xEE\x02\xF0\x02" +
		"\xF2\x02\xF4\x02\xF6\x02\xF8\x02\xFA\x02\xFC\x02\xFE\x02\u0100\x02\u0102" +
		"\x02\u0104\x02\u0106\x02\u0108\x02\u010A\x02\u010C\x02\u010E\x02\u0110" +
		"\x02\u0112\x02\u0114\x02\u0116\x02\u0118\x02\u011A\x02\u011C\x02\u011E" +
		"\x02\u0120\x02\u0122\x02\u0124\x02\u0126\x02\u0128\x02\u012A\x02\u012C" +
		"\x02\u012E\x02\u0130\x02\u0132\x02\u0134\x02\u0136\x02\u0138\x02\u013A" +
		"\x02\u013C\x02\u013E\x02\u0140\x02\u0142\x02\u0144\x02\u0146\x02\u0148" +
		"\x02\u014A\x02\u014C\x02\u014E\x02\u0150\x02\u0152\x02\u0154\x02\u0156" +
		"\x02\u0158\x02\u015A\x02\u015C\x02\u015E\x02\u0160\x02\u0162\x02\u0164" +
		"\x02\u0166\x02\u0168\x02\u016A\x02\u016C\x02\u016E\x02\u0170\x02\u0172" +
		"\x02\u0174\x02\u0176\x02\u0178\x02\u017A\x02\u017C\x02\u017E\x02\u0180" +
		"\x02\u0182\x02\u0184\x02\u0186\x02\u0188\x02\u018A\x02\u018C\x02\u018E" +
		"\x02\u0190\x02\u0192\x02\u0194\x02\u0196\x02\u0198\x02\u019A\x02\u019C" +
		"\x02\u019E\x02\u01A0\x02\u01A2\x02\u01A4\x02\u01A6\x02\u01A8\x02\u01AA" +
		"\x02\u01AC\x02\u01AE\x02\u01B0\x02\u01B2\x02\u01B4\x02\u01B6\x02\u01B8" +
		"\x02\u01BA\x02\u01BC\x02\u01BE\x02\u01C0\x02\u01C2\x02\u01C4\x02\u01C6" +
		"\x02\u01C8\x02\u01CA\x02\u01CC\x02\u01CE\x02\u01D0\x02\u01D2\x02\u01D4" +
		"\x02\u01D6\x02\u01D8\x02\u01DA\x02\u01DC\x02\u01DE\x02\u01E0\x02\u01E2" +
		"\x02\u01E4\x02\u01E6\x02\u01E8\x02\u01EA\x02\u01EC\x02\u01EE\x02\u01F0" +
		"\x02\u01F2\x02\u01F4\x02\u01F6\x02\u01F8\x02\u01FA\x02\u01FC\x02\u01FE" +
		"\x02\u0200\x02\u0202\x02\u0204\x02\u0206\x02\u0208\x02\u020A\x02\u020C" +
		"\x02\u020E\x02\u0210\x02\u0212\x02\u0214\x02\u0216\x02\u0218\x02\u021A" +
		"\x02\u021C\x02\u021E\x02\u0220\x02\u0222\x02\u0224\x02\u0226\x02\u0228" +
		"\x02\u022A\x02\u022C\x02\u022E\x02\u0230\x02\u0232\x02\u0234\x02\u0236" +
		"\x02\u0238\x02\u023A\x02\u023C\x02\u023E\x02\u0240\x02\u0242\x02\u0244" +
		"\x02\u0246\x02\u0248\x02\u024A\x02\u024C\x02\u024E\x02\u0250\x02\u0252" +
		"\x02\u0254\x02\u0256\x02\u0258\x02\u025A\x02\u025C\x02\u025E\x02\u0260" +
		"\x02\u0262\x02\u0264\x02\u0266\x02\u0268\x02\u026A\x02\u026C\x02\u026E" +
		"\x02\u0270\x02\u0272\x02\u0274\x02\u0276\x02\u0278\x02\u027A\x02\u027C" +
		"\x02\u027E\x02\u0280\x02\u0282\x02\u0284\x02\u0286\x02\u0288\x02\u028A" +
		"\x02\u028C\x02\u028E\x02\u0290\x02\u0292\x02\u0294\x02\u0296\x02\u0298" +
		"\x02\u029A\x02\u029C\x02\u029E\x02\u02A0\x02\u02A2\x02\u02A4\x02\u02A6" +
		"\x02\u02A8\x02\u02AA\x02\u02AC\x02\u02AE\x02\u02B0\x02\u02B2\x02\u02B4" +
		"\x02\u02B6\x02\u02B8\x02\u02BA\x02\u02BC\x02\u02BE\x02\u02C0\x02\u02C2" +
		"\x02\u02C4\x02\u02C6\x02\u02C8\x02\u02CA\x02\u02CC\x02\u02CE\x02\u02D0" +
		"\x02\u02D2\x02\u02D4\x02\u02D6\x02\u02D8\x02\u02DA\x02\u02DC\x02\u02DE" +
		"\x02\u02E0\x02\u02E2\x02\u02E4\x02\u02E6\x02\u02E8\x02\u02EA\x02\u02EC" +
		"\x02\u02EE\x02\u02F0\x02\u02F2\x02\u02F4\x02\u02F6\x02\u02F8\x02\u02FA" +
		"\x02\u02FC\x02\u02FE\x02\u0300\x02\u0302\x02\u0304\x02\u0306\x02\u0308" +
		"\x02\u030A\x02\u030C\x02\u030E\x02\u0310\x02\u0312\x02\u0314\x02\u0316" +
		"\x02\u0318\x02\u031A\x02\u031C\x02\u031E\x02\u0320\x02\u0322\x02\u0324" +
		"\x02\u0326\x02\u0328\x02\u032A\x02\u032C\x02\u032E\x02\u0330\x02\u0332" +
		"\x02\u0334\x02\u0336\x02\u0338\x02\u033A\x02\u033C\x02\u033E\x02\u0340" +
		"\x02\u0342\x02\u0344\x02\u0346\x02\u0348\x02\u034A\x02\u034C\x02\u034E" +
		"\x02\u0350\x02\u0352\x02\u0354\x02\u0356\x02\u0358\x02\u035A\x02\u035C" +
		"\x02\u035E\x02\u0360\x02\u0362\x02\u0364\x02\u0366\x02\u0368\x02\u036A" +
		"\x02\u036C\x02\u036E\x02\u0370\x02\u0372\x02\u0374\x02\u0376\x02\u0378" +
		"\x02\u037A\x02\u037C\x02\u037E\x02\u0380\x02\u0382\x02\u0384\x02\u0386" +
		"\x02\u0388\x02\u038A\x02\u038C\x02\u038E\x02\u0390\x02\u0392\x02\u0394" +
		"\x02\u0396\x02\u0398\x02\u039A\x02\u039C\x02\u039E\x02\u03A0\x02\u03A2" +
		"\x02\u03A4\x02\u03A6\x02\u03A8\x02\u03AA\x02\u03AC\x02\u03AE\x02\u03B0" +
		"\x02\u03B2\x02\u03B4\x02\u03B6\x02\u03B8\x02\u03BA\x02\u03BC\x02\u03BE" +
		"\x02\u03C0\x02\u03C2\x02\u03C4\x02\u03C6\x02\u03C8\x02\u03CA\x02\u03CC" +
		"\x02\u03CE\x02\u03D0\x02\u03D2\x02\u03D4\x02\u03D6\x02\u03D8\x02\u03DA" +
		"\x02\u03DC\x02\u03DE\x02\u03E0\x02\u03E2\x02\u03E4\x02\u03E6\x02\u03E8" +
		"\x02\u03EA\x02\u03EC\x02\u03EE\x02\u03F0\x02\u03F2\x02\u03F4\x02\u03F6" +
		"\x02\u03F8\x02\u03FA\x02\u03FC\x02\u03FE\x02\u0400\x02\u0402\x02\u0404" +
		"\x02\u0406\x02\u0408\x02\u040A\x02\u040C\x02\u040E\x02\u0410\x02\u0412" +
		"\x02\u0414\x02\u0416\x02\u0418\x02\u041A\x02\u041C\x02\u041E\x02\u0420" +
		"\x02\u0422\x02\u0424\x02\u0426\x02\u0428\x02\u042A\x02\u042C\x02\u042E" +
		"\x02\u0430\x02\u0432\x02\u0434\x02\u0436\x02\u0438\x02\u043A\x02\u043C" +
		"\x02\u043E\x02\u0440\x02\u0442\x02\u0444\x02\u0446\x02\u0448\x02\u044A" +
		"\x02\u044C\x02\u044E\x02\u0450\x02\u0452\x02\u0454\x02\u0456\x02\u0458" +
		"\x02\u045A\x02\u045C\x02\u045E\x02\u0460\x02\u0462\x02\u0464\x02\u0466" +
		"\x02\u0468\x02\u046A\x02\u046C\x02\u046E\x02\u0470\x02\u0472\x02\u0474" +
		"\x02\u0476\x02\u0478\x02\u047A\x02\u047C\x02\u047E\x02\u0480\x02\u0482" +
		"\x02\u0484\x02\u0486\x02\u0488\x02\u048A\x02\u048C\x02\u048E\x02\u0490" +
		"\x02\u0492\x02\u0494\x02\u0496\x02\u0498\x02\u049A\x02\u049C\x02\u049E" +
		"\x02\u04A0\x02\u04A2\x02\u04A4\x02\u04A6\x02\u04A8\x02\u04AA\x02\u04AC" +
		"\x02\u04AE\x02\u04B0\x02\u04B2\x02\u04B4\x02\u04B6\x02\u04B8\x02\u04BA" +
		"\x02\u04BC\x02\u04BE\x02\u04C0\x02\u04C2\x02\u04C4\x02\u04C6\x02\u04C8" +
		"\x02\u04CA\x02\u04CC\x02\u04CE\x02\u04D0\x02\u04D2\x02\u04D4\x02\u04D6" +
		"\x02\u04D8\x02\u04DA\x02\u04DC\x02\u04DE\x02\u04E0\x02\u04E2\x02\u04E4" +
		"\x02\u04E6\x02\u04E8\x02\u04EA\x02\u04EC\x02\u04EE\x02\u04F0\x02\u04F2" +
		"\x02\u04F4\x02\u04F6\x02\u04F8\x02\u04FA\x02\u04FC\x02\u04FE\x02\u0500" +
		"\x02\u0502\x02\u0504\x02\u0506\x02\u0508\x02\u050A\x02\u050C\x02\u050E" +
		"\x02\u0510\x02\u0512\x02\u0514\x02\u0516\x02\u0518\x02\u051A\x02\u051C" +
		"\x02\u051E\x02\u0520\x02\u0522\x02\u0524\x02\u0526\x02\u0528\x02\u052A" +
		"\x02\u052C\x02\u052E\x02\u0530\x02\u0532\x02\u0534\x02\u0536\x02\u0538" +
		"\x02\u053A\x02\u053C\x02\u053E\x02\u0540\x02\u0542\x02\u0544\x02\u0546" +
		"\x02\u0548\x02\u054A\x02\u054C\x02\u054E\x02\u0550\x02\u0552\x02\u0554" +
		"\x02\u0556\x02\u0558\x02\u055A\x02\u055C\x02\u055E\x02\u0560\x02\u0562" +
		"\x02\u0564\x02\u0566\x02\u0568\x02\u056A\x02\u056C\x02\u056E\x02\u0570" +
		"\x02\u0572\x02\u0574\x02\u0576\x02\u0578\x02\u057A\x02\u057C\x02\u057E" +
		"\x02\u0580\x02\u0582\x02\u0584\x02\u0586\x02\u0588\x02\u058A\x02\u058C" +
		"\x02\u058E\x02\u0590\x02\u0592\x02\u0594\x02\u0596\x02\u0598\x02\u059A" +
		"\x02\u059C\x02\u059E\x02\u05A0\x02\u05A2\x02\u05A4\x02\u05A6\x02\u05A8" +
		"\x02\u05AA\x02\u05AC\x02\u05AE\x02\u05B0\x02\u05B2\x02\u05B4\x02\u05B6" +
		"\x02\u05B8\x02\u05BA\x02\u05BC\x02\u05BE\x02\u05C0\x02\u05C2\x02\u05C4" +
		"\x02\u05C6\x02\u05C8\x02\u05CA\x02\u05CC\x02\u05CE\x02\u05D0\x02\u05D2" +
		"\x02\u05D4\x02\u05D6\x02\u05D8\x02\u05DA\x02\u05DC\x02\u05DE\x02\u05E0" +
		"\x02\u05E2\x02\u05E4\x02\u05E6\x02\u05E8\x02\u05EA\x02\u05EC\x02\u05EE" +
		"\x02\u05F0\x02\u05F2\x02\u05F4\x02\u05F6\x02\u05F8\x02\u05FA\x02\u05FC" +
		"\x02\u05FE\x02\u0600\x02\u0602\x02\u0604\x02\u0606\x02\u0608\x02\u060A" +
		"\x02\u060C\x02\u060E\x02\u0610\x02\u0612\x02\u0614\x02\u0616\x02\u0618" +
		"\x02\u061A\x02\u061C\x02\u061E\x02\u0620\x02\u0622\x02\u0624\x02\u0626" +
		"\x02\u0628\x02\u062A\x02\u062C\x02\u062E\x02\u0630\x02\u0632\x02\u0634" +
		"\x02\u0636\x02\u0638\x02\u063A\x02\u063C\x02\u063E\x02\u0640\x02\u0642" +
		"\x02\u0644\x02\u0646\x02\u0648\x02\u064A\x02\u064C\x02\u064E\x02\u0650" +
		"\x02\u0652\x02\u0654\x02\u0656\x02\u0658\x02\u065A\x02\u065C\x02\u065E" +
		"\x02\u0660\x02\u0662\x02\u0664\x02\u0666\x02\u0668\x02\u066A\x02\u066C" +
		"\x02\u066E\x02\u0670\x02\u0672\x02\u0674\x02\u0676\x02\u0678\x02\u067A" +
		"\x02\u067C\x02\u067E\x02\u0680\x02\x02\x02\x02\u2131\x02\u0682\x03\x02" +
		"\x02\x02\x04\u0684\x03\x02\x02\x02\x06\u0688\x03\x02\x02\x02\b\u068C\x03" +
		"\x02\x02\x02\n\u0694\x03\x02\x02\x02\f\u0696\x03\x02\x02\x02\x0E\u0698" +
		"\x03\x02\x02\x02\x10\u06A1\x03\x02\x02\x02\x12\u06A5\x03\x02\x02\x02\x14" +
		"\u06AE\x03\x02\x02\x02\x16\u06B0\x03\x02\x02\x02\x18\u06BA\x03\x02\x02" +
		"\x02\x1A\u06BE\x03\x02\x02\x02\x1C\u06C6\x03\x02\x02\x02\x1E\u06CC\x03" +
		"\x02\x02\x02 \u06CF\x03\x02\x02\x02\"\u06D7\x03\x02\x02\x02$\u06D9\x03" +
		"\x02\x02\x02&\u06DD\x03\x02\x02\x02(\u06E1\x03\x02\x02\x02*\u06E4\x03" +
		"\x02\x02\x02,\u06EC\x03\x02\x02\x02.\u06F8\x03\x02\x02\x020\u06FB\x03" +
		"\x02\x02\x022\u0701\x03\x02\x02\x024\u070D\x03\x02\x02\x026\u0714\x03" +
		"\x02\x02\x028\u0716\x03\x02\x02\x02:\u0719\x03\x02\x02\x02<\u071D\x03" +
		"\x02\x02\x02>\u0722\x03\x02\x02\x02@\u0731\x03\x02\x02\x02B\u0733\x03" +
		"\x02\x02\x02D\u0737\x03\x02\x02\x02F\u0742\x03\x02\x02\x02H\u0747\x03" +
		"\x02\x02\x02J\u074D\x03\x02\x02\x02L\u074F\x03\x02\x02\x02N\u0751\x03" +
		"\x02\x02\x02P\u0755\x03\x02\x02\x02R\u0759\x03\x02\x02\x02T\u0760\x03" +
		"\x02\x02\x02V\u0763\x03\x02\x02\x02X\u0766\x03\x02\x02\x02Z\u076A\x03" +
		"\x02\x02\x02\\\u076C\x03\x02\x02\x02^\u076F\x03\x02\x02\x02`\u077D\x03" +
		"\x02\x02\x02b\u0789\x03\x02\x02\x02d\u0793\x03\x02\x02\x02f\u079E\x03" +
		"\x02\x02\x02h\u07AA\x03\x02\x02\x02j\u07BA\x03\x02\x02\x02l\u07C1\x03" +
		"\x02\x02\x02n\u07C5\x03\x02\x02\x02p\u07C8\x03\x02\x02\x02r\u07D1\x03" +
		"\x02\x02\x02t\u07D5\x03\x02\x02\x02v\u07DD\x03\x02\x02\x02x\u07E2\x03" +
		"\x02\x02\x02z\u07F9\x03\x02\x02\x02|\u080E\x03\x02\x02\x02~\u0812\x03" +
		"\x02\x02\x02\x80\u0814\x03\x02\x02\x02\x82\u0816\x03\x02\x02\x02\x84\u081A" +
		"\x03\x02\x02\x02\x86\u0826\x03\x02\x02\x02\x88\u082A\x03\x02\x02\x02\x8A" +
		"\u082C\x03\x02\x02\x02\x8C\u082E\x03\x02\x02\x02\x8E\u0839\x03\x02\x02" +
		"\x02\x90\u0845\x03\x02\x02\x02\x92\u0855\x03\x02\x02\x02\x94\u085C\x03" +
		"\x02\x02\x02\x96\u0862\x03\x02\x02\x02\x98\u086B\x03\x02\x02\x02\x9A\u0879" +
		"\x03\x02\x02\x02\x9C\u087D\x03\x02\x02\x02\x9E\u0885\x03\x02\x02\x02\xA0" +
		"\u0891\x03\x02\x02\x02\xA2\u089C\x03\x02\x02\x02\xA4\u08A1\x03\x02\x02" +
		"\x02\xA6\u08AD\x03\x02\x02\x02\xA8\u08B6\x03\x02\x02\x02\xAA\u08BA\x03" +
		"\x02\x02\x02\xAC\u08C2\x03\x02\x02\x02\xAE\u08C6\x03\x02\x02\x02\xB0\u08CE" +
		"\x03\x02\x02\x02\xB2\u08DE\x03\x02\x02\x02\xB4\u08E8\x03\x02\x02\x02\xB6" +
		"\u08F8\x03\x02\x02\x02\xB8\u0909\x03\x02\x02\x02\xBA\u090B\x03\x02\x02" +
		"\x02\xBC\u091A\x03\x02\x02\x02\xBE\u0927\x03\x02\x02\x02\xC0\u092B\x03" +
		"\x02\x02\x02\xC2\u092D\x03\x02\x02\x02\xC4\u092F\x03\x02\x02\x02\xC6\u0933" +
		"\x03\x02\x02\x02\xC8\u0943\x03\x02\x02\x02\xCA\u0952\x03\x02\x02\x02\xCC" +
		"\u0960\x03\x02\x02\x02\xCE\u0964\x03\x02\x02\x02\xD0\u096D\x03\x02\x02" +
		"\x02\xD2\u0974\x03\x02\x02\x02\xD4\u0982\x03\x02\x02\x02\xD6\u0991\x03" +
		"\x02\x02\x02\xD8\u0993\x03\x02\x02\x02\xDA\u0995\x03\x02\x02\x02\xDC\u09A0" +
		"\x03\x02\x02\x02\xDE\u09A4\x03\x02\x02\x02\xE0\u09AC\x03\x02\x02\x02\xE2" +
		"\u09B6\x03\x02\x02\x02\xE4\u09BE\x03\x02\x02\x02\xE6\u09C6\x03\x02\x02" +
		"\x02\xE8\u09CA\x03\x02\x02\x02\xEA\u09CE\x03\x02\x02\x02\xEC\u09D7\x03" +
		"\x02\x02\x02\xEE\u09DB\x03\x02\x02\x02\xF0\u09DD\x03\x02\x02\x02\xF2\u09E7" +
		"\x03\x02\x02\x02\xF4\u09EE\x03\x02\x02\x02\xF6\u09F4\x03\x02\x02\x02\xF8" +
		"\u09F6\x03\x02\x02\x02\xFA\u09FA\x03\x02\x02\x02\xFC\u0A02\x03\x02\x02" +
		"\x02\xFE\u0A06\x03\x02\x02\x02\u0100\u0A0E\x03\x02\x02\x02\u0102\u0A12" +
		"\x03\x02\x02\x02\u0104\u0A1A\x03\x02\x02\x02\u0106\u0A1E\x03\x02\x02\x02" +
		"\u0108\u0A26\x03\x02\x02\x02\u010A\u0A2D\x03\x02\x02\x02\u010C\u0A31\x03" +
		"\x02\x02\x02\u010E\u0A35\x03\x02\x02\x02\u0110\u0A39\x03\x02\x02\x02\u0112" +
		"\u0A3D\x03\x02\x02\x02\u0114\u0A42\x03\x02\x02\x02\u0116\u0A44\x03\x02" +
		"\x02\x02\u0118\u0A4B\x03\x02\x02\x02\u011A\u0A59\x03\x02\x02\x02\u011C" +
		"\u0A5D\x03\x02\x02\x02\u011E\u0A65\x03\x02\x02\x02\u0120\u0A72\x03\x02" +
		"\x02\x02\u0122\u0A7C\x03\x02\x02\x02\u0124\u0A8A\x03\x02\x02\x02\u0126" +
		"\u0A8E\x03\x02\x02\x02\u0128\u0A90\x03\x02\x02\x02\u012A\u0A94\x03\x02" +
		"\x02\x02\u012C\u0A96\x03\x02\x02\x02\u012E\u0AA0\x03\x02\x02\x02\u0130" +
		"\u0AAD\x03\x02\x02\x02\u0132\u0AAF\x03\x02\x02\x02\u0134\u0AB7\x03\x02" +
		"\x02\x02\u0136\u0AC2\x03\x02\x02\x02\u0138\u0AD5\x03\x02\x02\x02\u013A" +
		"\u0AD9\x03\x02\x02\x02\u013C\u0AE2\x03\x02\x02\x02\u013E\u0AE4\x03\x02" +
		"\x02\x02\u0140\u0AE6\x03\x02\x02\x02\u0142\u0AE8\x03\x02\x02\x02\u0144" +
		"\u0AF3\x03\x02\x02\x02\u0146\u0AFF\x03\x02\x02\x02\u0148\u0B03\x03\x02" +
		"\x02\x02\u014A\u0B05\x03\x02\x02\x02\u014C\u0B0F\x03\x02\x02\x02\u014E" +
		"\u0B18\x03\x02\x02\x02\u0150\u0B1C\x03\x02\x02\x02\u0152\u0B20\x03\x02" +
		"\x02\x02\u0154\u0B28\x03\x02\x02\x02\u0156\u0B2C\x03\x02\x02\x02\u0158" +
		"\u0B34\x03\x02\x02\x02\u015A\u0B38\x03\x02\x02\x02\u015C\u0B40\x03\x02" +
		"\x02\x02\u015E\u0B44\x03\x02\x02\x02\u0160\u0B49\x03\x02\x02\x02\u0162" +
		"\u0B59\x03\x02\x02\x02\u0164\u0B6F\x03\x02\x02\x02\u0166\u0B73\x03\x02" +
		"\x02\x02\u0168\u0B75\x03\x02\x02\x02\u016A\u0B77\x03\x02\x02\x02\u016C" +
		"\u0B7D\x03\x02\x02\x02\u016E\u0B7F\x03\x02\x02\x02\u0170\u0B87\x03\x02" +
		"\x02\x02\u0172\u0B8B\x03\x02\x02\x02\u0174\u0B93\x03\x02\x02\x02\u0176" +
		"\u0BA4\x03\x02\x02\x02\u0178\u0BA6\x03\x02\x02\x02\u017A\u0BA9\x03\x02" +
		"\x02\x02\u017C\u0BAB\x03\x02\x02\x02\u017E\u0BAD\x03\x02\x02\x02\u0180" +
		"\u0BAF\x03\x02\x02\x02\u0182\u0BB1\x03\x02\x02\x02\u0184\u0BB3\x03\x02" +
		"\x02\x02\u0186\u0BB5\x03\x02\x02\x02\u0188\u0BB7\x03\x02\x02\x02\u018A" +
		"\u0BB9\x03\x02\x02\x02\u018C\u0BBB\x03\x02\x02\x02\u018E\u0BBD\x03\x02" +
		"\x02\x02\u0190\u0BBF\x03\x02\x02\x02\u0192\u0BDC\x03\x02\x02\x02\u0194" +
		"\u0BE0\x03\x02\x02\x02\u0196\u0BE3\x03\x02\x02\x02\u0198\u0BE7\x03\x02" +
		"\x02\x02\u019A\u0BFD\x03\x02\x02\x02\u019C\u0C0E\x03\x02\x02\x02\u019E" +
		"\u0C12\x03\x02\x02\x02\u01A0\u0C14\x03\x02\x02\x02\u01A2\u0C16\x03\x02" +
		"\x02\x02\u01A4\u0C25\x03\x02\x02\x02\u01A6\u0C29\x03\x02\x02\x02\u01A8" +
		"\u0C2D\x03\x02\x02\x02\u01AA\u0C2F\x03\x02\x02\x02\u01AC\u0C31\x03\x02" +
		"\x02\x02\u01AE\u0C34\x03\x02\x02\x02\u01B0\u0C44\x03\x02\x02\x02\u01B2" +
		"\u0C48\x03\x02\x02\x02\u01B4\u0C4E\x03\x02\x02\x02\u01B6\u0C52\x03\x02" +
		"\x02\x02\u01B8\u0C54\x03\x02\x02\x02\u01BA\u0C58\x03\x02\x02\x02\u01BC" +
		"\u0C5A\x03\x02\x02\x02\u01BE\u0C5C\x03\x02\x02\x02\u01C0\u0C63\x03\x02" +
		"\x02\x02\u01C2\u0C67\x03\x02\x02\x02\u01C4\u0C71\x03\x02\x02\x02\u01C6" +
		"\u0C75\x03\x02\x02\x02\u01C8\u0C7F\x03\x02\x02\x02\u01CA\u0C90\x03\x02" +
		"\x02\x02\u01CC\u0CA0\x03\x02\x02\x02\u01CE\u0CAC\x03\x02\x02\x02\u01D0" +
		"\u0CB8\x03\x02\x02\x02\u01D2\u0CBC\x03\x02\x02\x02\u01D4\u0CC0\x03\x02" +
		"\x02\x02\u01D6\u0CC5\x03\x02\x02\x02\u01D8\u0CC9\x03\x02\x02\x02\u01DA" +
		"\u0CD4\x03\x02\x02\x02\u01DC\u0CD8\x03\x02\x02\x02\u01DE\u0CDA\x03\x02" +
		"\x02\x02\u01E0\u0CDC\x03\x02\x02\x02\u01E2\u0CE0\x03\x02\x02\x02\u01E4" +
		"\u0CE2\x03\x02\x02\x02\u01E6\u0CE5\x03\x02\x02\x02\u01E8\u0CE7\x03\x02" +
		"\x02\x02\u01EA\u0CEA\x03\x02\x02\x02\u01EC\u0CED\x03\x02\x02\x02\u01EE" +
		"\u0CF0\x03\x02\x02\x02\u01F0\u0CF3\x03\x02\x02\x02\u01F2\u0D07\x03\x02" +
		"\x02\x02\u01F4\u0D16\x03\x02\x02\x02\u01F6\u0D1D\x03\x02\x02\x02\u01F8" +
		"\u0D23\x03\x02\x02\x02\u01FA\u0D31\x03\x02\x02\x02\u01FC\u0D3F\x03\x02" +
		"\x02\x02\u01FE\u0D49\x03\x02\x02\x02\u0200\u0D52\x03\x02\x02\x02\u0202" +
		"\u0D56\x03\x02\x02\x02\u0204\u0D58\x03\x02\x02\x02\u0206\u0D62\x03\x02" +
		"\x02\x02\u0208\u0D64\x03\x02\x02\x02\u020A\u0D6F\x03\x02\x02\x02\u020C" +
		"\u0D73\x03\x02\x02\x02\u020E\u0D77\x03\x02\x02\x02\u0210\u0D79\x03\x02" +
		"\x02\x02\u0212\u0D7D\x03\x02\x02\x02\u0214\u0D81\x03\x02\x02\x02\u0216" +
		"\u0D89\x03\x02\x02\x02\u0218\u0D96\x03\x02\x02\x02\u021A\u0DA2\x03\x02" +
		"\x02\x02\u021C\u0DA6\x03\x02\x02\x02\u021E\u0DAA\x03\x02\x02\x02\u0220" +
		"\u0DAC\x03\x02\x02\x02\u0222\u0DB6\x03\x02\x02\x02\u0224\u0DB8\x03\x02" +
		"\x02\x02\u0226\u0DBA\x03\x02\x02\x02\u0228\u0DBC\x03\x02\x02\x02\u022A" +
		"\u0DC5\x03\x02\x02\x02\u022C\u0DD1\x03\x02\x02\x02\u022E\u0DE1\x03\x02" +
		"\x02\x02\u0230\u0DF2\x03\x02\x02\x02\u0232\u0DF6\x03\x02\x02\x02\u0234" +
		"\u0DFF\x03\x02\x02\x02\u0236\u0E02\x03\x02\x02\x02\u0238\u0E06\x03\x02" +
		"\x02\x02\u023A\u0E08\x03\x02\x02\x02\u023C\u0E12\x03\x02\x02\x02\u023E" +
		"\u0E14\x03\x02\x02\x02\u0240\u0E1C\x03\x02\x02\x02\u0242\u0E1E\x03\x02" +
		"\x02\x02\u0244\u0E26\x03\x02\x02\x02\u0246\u0E28\x03\x02\x02\x02\u0248" +
		"\u0E2C\x03\x02\x02\x02\u024A\u0E34\x03\x02\x02\x02\u024C\u0E38\x03\x02" +
		"\x02\x02\u024E\u0E40\x03\x02\x02\x02\u0250\u0E44\x03\x02\x02\x02\u0252" +
		"\u0E47\x03\x02\x02\x02\u0254\u0E4D\x03\x02\x02\x02\u0256\u0E57\x03\x02" +
		"\x02\x02\u0258\u0E70\x03\x02\x02\x02\u025A\u0E75\x03\x02\x02\x02\u025C" +
		"\u0E78\x03\x02\x02\x02\u025E\u0E7D\x03\x02\x02\x02\u0260\u0E81\x03\x02" +
		"\x02\x02\u0262\u0E83\x03\x02\x02\x02\u0264\u0E8D\x03\x02\x02\x02\u0266" +
		"\u0E91\x03\x02\x02\x02\u0268\u0E99\x03\x02\x02\x02\u026A\u0E9B\x03\x02" +
		"\x02\x02\u026C\u0EA7\x03\x02\x02\x02\u026E\u0EBC\x03\x02\x02\x02\u0270" +
		"\u0ECF\x03\x02\x02\x02\u0272\u0EDF\x03\x02\x02\x02\u0274\u0EE3\x03\x02" +
		"\x02\x02\u0276\u0EE7\x03\x02\x02\x02\u0278\u0EEF\x03\x02\x02\x02\u027A" +
		"\u0EF3\x03\x02\x02\x02\u027C\u0EF8\x03\x02\x02\x02\u027E\u0EFC\x03\x02" +
		"\x02\x02\u0280\u0F0F\x03\x02\x02\x02\u0282\u0F11";
	private static readonly _serializedATNSegment4: string =
		"\x03\x02\x02\x02\u0284\u0F1C\x03\x02\x02\x02\u0286\u0F21\x03\x02\x02\x02" +
		"\u0288\u0F25\x03\x02\x02\x02\u028A\u0F2E\x03\x02\x02\x02\u028C\u0F33\x03" +
		"\x02\x02\x02\u028E\u0F38\x03\x02\x02\x02\u0290\u0F3D\x03\x02\x02\x02\u0292" +
		"\u0F46\x03\x02\x02\x02\u0294\u0F48\x03\x02\x02\x02\u0296\u0F57\x03\x02" +
		"\x02\x02\u0298\u0F66\x03\x02\x02\x02\u029A\u0F73\x03\x02\x02\x02\u029C" +
		"\u0F7D\x03\x02\x02\x02\u029E\u0F7F\x03\x02\x02\x02\u02A0\u0F81\x03\x02" +
		"\x02\x02\u02A2\u0F8E\x03\x02\x02\x02\u02A4\u0F92\x03\x02\x02\x02\u02A6" +
		"\u0F94\x03\x02\x02\x02\u02A8\u0F9E\x03\x02\x02\x02\u02AA\u0FA0\x03\x02" +
		"\x02\x02\u02AC\u0FB3\x03\x02\x02\x02\u02AE\u0FBA\x03\x02\x02\x02\u02B0" +
		"\u0FC3\x03\x02\x02\x02\u02B2\u0FD8\x03\x02\x02\x02\u02B4\u0FE1\x03\x02" +
		"\x02\x02\u02B6\u0FEB\x03\x02\x02\x02\u02B8\u0FEF\x03\x02\x02\x02\u02BA" +
		"\u0FF1\x03\x02\x02\x02\u02BC\u0FF4\x03\x02\x02\x02\u02BE\u0FF6\x03\x02" +
		"\x02\x02\u02C0\u0FF9\x03\x02\x02\x02\u02C2\u0FFC\x03\x02\x02\x02\u02C4" +
		"\u0FFF\x03\x02\x02\x02\u02C6\u1002\x03\x02\x02\x02\u02C8\u1006\x03\x02" +
		"\x02\x02\u02CA\u1009\x03\x02\x02\x02\u02CC\u100E\x03\x02\x02\x02\u02CE" +
		"\u1017\x03\x02\x02\x02\u02D0\u1019\x03\x02\x02\x02\u02D2\u101B\x03\x02" +
		"\x02\x02\u02D4\u101F\x03\x02\x02\x02\u02D6\u102C\x03\x02\x02\x02\u02D8" +
		"\u1034\x03\x02\x02\x02\u02DA\u1036\x03\x02\x02\x02\u02DC\u1038\x03\x02" +
		"\x02\x02\u02DE\u1044\x03\x02\x02\x02\u02E0\u104A\x03\x02\x02\x02\u02E2" +
		"\u1054\x03\x02\x02\x02\u02E4\u105D\x03\x02\x02\x02\u02E6\u1068\x03\x02" +
		"\x02\x02\u02E8\u1070\x03\x02\x02\x02\u02EA\u1073\x03\x02\x02\x02\u02EC" +
		"\u1081\x03\x02\x02\x02\u02EE\u1084\x03\x02\x02\x02\u02F0\u1095\x03\x02" +
		"\x02\x02\u02F2\u109E\x03\x02\x02\x02\u02F4\u10A7\x03\x02\x02\x02\u02F6" +
		"\u10B4\x03\x02\x02\x02\u02F8\u10BA\x03\x02\x02\x02\u02FA\u10C4\x03\x02" +
		"\x02\x02\u02FC\u10CD\x03\x02\x02\x02\u02FE\u10D1\x03\x02\x02\x02\u0300" +
		"\u10E0\x03\x02\x02\x02\u0302\u10E4\x03\x02\x02\x02\u0304\u10E7\x03\x02" +
		"\x02\x02\u0306\u10FA\x03\x02\x02\x02\u0308\u10FD\x03\x02\x02\x02\u030A" +
		"\u10FF\x03\x02\x02\x02\u030C\u1108\x03\x02\x02\x02\u030E\u1111\x03\x02" +
		"\x02\x02\u0310\u112E\x03\x02\x02\x02\u0312\u113E\x03\x02\x02\x02\u0314" +
		"\u1142\x03\x02\x02\x02\u0316\u1144\x03\x02\x02\x02\u0318\u1146\x03\x02" +
		"\x02\x02\u031A\u114A\x03\x02\x02\x02\u031C\u114C\x03\x02\x02\x02\u031E" +
		"\u114E\x03\x02\x02\x02\u0320\u1152\x03\x02\x02\x02\u0322\u1157\x03\x02" +
		"\x02\x02\u0324\u1165\x03\x02\x02\x02\u0326\u1169\x03\x02\x02\x02\u0328" +
		"\u116B\x03\x02\x02\x02\u032A\u116D\x03\x02\x02\x02\u032C\u1171\x03\x02" +
		"\x02\x02\u032E\u1181\x03\x02\x02\x02\u0330\u118D\x03\x02\x02\x02\u0332" +
		"\u1198\x03\x02\x02\x02\u0334\u11A1\x03\x02\x02\x02\u0336\u11AA\x03\x02" +
		"\x02\x02\u0338\u11B4\x03\x02\x02\x02\u033A\u11C0\x03\x02\x02\x02\u033C" +
		"\u11C2\x03\x02\x02\x02\u033E\u11C4\x03\x02\x02\x02\u0340\u11CE\x03\x02" +
		"\x02\x02\u0342\u11D5\x03\x02\x02\x02\u0344\u11EC\x03\x02\x02\x02\u0346" +
		"\u11EF\x03\x02\x02\x02\u0348\u11F1\x03\x02\x02\x02\u034A\u11F3\x03\x02" +
		"\x02\x02\u034C\u11FF\x03\x02\x02\x02\u034E\u120B\x03\x02\x02\x02\u0350" +
		"\u120E\x03\x02\x02\x02\u0352\u1212\x03\x02\x02\x02\u0354\u1215\x03\x02" +
		"\x02\x02\u0356\u1218\x03\x02\x02\x02\u0358\u121C\x03\x02\x02\x02\u035A" +
		"\u1222\x03\x02\x02\x02\u035C\u1224\x03\x02\x02\x02\u035E\u1226\x03\x02" +
		"\x02\x02\u0360\u1228\x03\x02\x02\x02\u0362\u122B\x03\x02\x02\x02\u0364" +
		"\u123D\x03\x02\x02\x02\u0366\u1241\x03\x02\x02\x02\u0368\u1243\x03\x02" +
		"\x02\x02\u036A\u1246\x03\x02\x02\x02\u036C\u1251\x03\x02\x02\x02\u036E" +
		"\u125D\x03\x02\x02\x02\u0370\u127D\x03\x02\x02\x02\u0372\u127F\x03\x02" +
		"\x02\x02\u0374\u1286\x03\x02\x02\x02\u0376\u1293\x03\x02\x02\x02\u0378" +
		"\u129D\x03\x02\x02\x02\u037A\u12A1\x03\x02\x02\x02\u037C\u12A3\x03\x02" +
		"\x02\x02\u037E\u12AB\x03\x02\x02\x02\u0380\u12AE\x03\x02\x02\x02\u0382" +
		"\u12B1\x03\x02\x02\x02\u0384\u12B4\x03\x02\x02\x02\u0386\u12B8\x03\x02" +
		"\x02\x02\u0388\u12C2\x03\x02\x02\x02\u038A\u12C6\x03\x02\x02\x02\u038C" +
		"\u12C9\x03\x02\x02\x02\u038E\u12CF\x03\x02\x02\x02\u0390\u12D1\x03\x02" +
		"\x02\x02\u0392\u12D3\x03\x02\x02\x02\u0394\u12D5\x03\x02\x02\x02\u0396" +
		"\u12E0\x03\x02\x02\x02\u0398\u12E5\x03\x02\x02\x02\u039A\u12E9\x03\x02" +
		"\x02\x02\u039C\u12EE\x03\x02\x02\x02\u039E\u12F0\x03\x02\x02\x02\u03A0" +
		"\u12F2\x03\x02\x02\x02\u03A2\u1310\x03\x02\x02\x02\u03A4\u1327\x03\x02" +
		"\x02\x02\u03A6\u132C\x03\x02\x02\x02\u03A8\u1330\x03\x02\x02\x02\u03AA" +
		"\u1334\x03\x02\x02\x02\u03AC\u133D\x03\x02\x02\x02\u03AE\u1341\x03\x02" +
		"\x02\x02\u03B0\u1345\x03\x02\x02\x02\u03B2\u1349\x03\x02\x02\x02\u03B4" +
		"\u1351\x03\x02\x02\x02\u03B6\u1353\x03\x02\x02\x02\u03B8\u1363\x03\x02" +
		"\x02\x02\u03BA\u1374\x03\x02\x02\x02\u03BC\u1378\x03\x02\x02\x02\u03BE" +
		"\u137B\x03\x02\x02\x02\u03C0\u1381\x03\x02\x02\x02\u03C2\u138B\x03\x02" +
		"\x02\x02\u03C4\u138F\x03\x02\x02\x02\u03C6\u13AD\x03\x02\x02\x02\u03C8" +
		"\u13B7\x03\x02\x02\x02\u03CA\u13C3\x03\x02\x02\x02\u03CC\u13D3\x03\x02" +
		"\x02\x02\u03CE\u13DA\x03\x02\x02\x02\u03D0\u13E7\x03\x02\x02\x02\u03D2" +
		"\u13F7\x03\x02\x02\x02\u03D4\u13FB\x03\x02\x02\x02\u03D6\u1403\x03\x02" +
		"\x02\x02\u03D8\u1407\x03\x02\x02\x02\u03DA\u1409\x03\x02\x02\x02\u03DC" +
		"\u140B\x03\x02\x02\x02\u03DE\u1416\x03\x02\x02\x02\u03E0\u141A\x03\x02" +
		"\x02\x02\u03E2\u141E\x03\x02\x02\x02\u03E4\u1422\x03\x02\x02\x02\u03E6" +
		"\u1435\x03\x02\x02\x02\u03E8\u144B\x03\x02\x02\x02\u03EA\u145F\x03\x02" +
		"\x02\x02\u03EC\u1470\x03\x02\x02\x02\u03EE\u1477\x03\x02\x02\x02\u03F0" +
		"\u147F\x03\x02\x02\x02\u03F2\u148B\x03\x02\x02\x02\u03F4\u148F\x03\x02" +
		"\x02\x02\u03F6\u1491\x03\x02\x02\x02\u03F8\u1499\x03\x02\x02\x02\u03FA" +
		"\u149B\x03\x02\x02\x02\u03FC\u149F\x03\x02\x02\x02\u03FE\u14A9\x03\x02" +
		"\x02\x02\u0400\u14B0\x03\x02\x02\x02\u0402\u14BC\x03\x02\x02\x02\u0404" +
		"\u14C8\x03\x02\x02\x02\u0406\u14D3\x03\x02\x02\x02\u0408\u14D9\x03\x02" +
		"\x02\x02\u040A\u14EB\x03\x02\x02\x02\u040C\u14F5\x03\x02\x02\x02\u040E" +
		"\u14FE\x03\x02\x02\x02\u0410\u1502\x03\x02\x02\x02\u0412\u150B\x03\x02" +
		"\x02\x02\u0414\u150D\x03\x02\x02\x02\u0416\u1511\x03\x02\x02\x02\u0418" +
		"\u152C\x03\x02\x02\x02\u041A\u1542\x03\x02\x02\x02\u041C\u1556\x03\x02" +
		"\x02\x02\u041E\u1565\x03\x02\x02\x02\u0420\u1572\x03\x02\x02\x02\u0422" +
		"\u157C\x03\x02\x02\x02\u0424\u157E\x03\x02\x02\x02\u0426\u1580\x03\x02" +
		"\x02\x02\u0428\u1591\x03\x02\x02\x02\u042A\u1599\x03\x02\x02\x02\u042C" +
		"\u159B\x03\x02\x02\x02\u042E\u159E\x03\x02\x02\x02\u0430\u15A9\x03\x02" +
		"\x02\x02\u0432\u15B5\x03\x02\x02\x02\u0434\u15BE\x03\x02\x02\x02\u0436" +
		"\u15CB\x03\x02\x02\x02\u0438\u15D5\x03\x02\x02\x02\u043A\u15D7\x03\x02" +
		"\x02\x02\u043C\u15D9\x03\x02\x02\x02\u043E\u15E6\x03\x02\x02\x02\u0440" +
		"\u15EB\x03\x02\x02\x02\u0442\u15EF\x03\x02\x02\x02\u0444\u15F1\x03\x02" +
		"\x02\x02\u0446\u15FB\x03\x02\x02\x02\u0448\u15FF\x03\x02\x02\x02\u044A" +
		"\u1607\x03\x02\x02\x02\u044C\u1609\x03\x02\x02\x02\u044E\u1614\x03\x02" +
		"\x02\x02\u0450\u1620\x03\x02\x02\x02\u0452\u1630\x03\x02\x02\x02\u0454" +
		"\u1634\x03\x02\x02\x02\u0456\u163D\x03\x02\x02\x02\u0458\u1644\x03\x02" +
		"\x02\x02\u045A\u1649\x03\x02\x02\x02\u045C\u164B\x03\x02\x02\x02\u045E" +
		"\u1652\x03\x02\x02\x02\u0460\u165E\x03\x02\x02\x02\u0462\u1665\x03\x02" +
		"\x02\x02\u0464\u1678\x03\x02\x02\x02\u0466\u1683\x03\x02\x02\x02\u0468" +
		"\u168F\x03\x02\x02\x02\u046A\u1696\x03\x02\x02\x02\u046C\u169A\x03\x02" +
		"\x02\x02\u046E\u169C\x03\x02\x02\x02\u0470\u16A6\x03\x02\x02\x02\u0472" +
		"\u16A8\x03\x02\x02\x02\u0474\u16B8\x03\x02\x02\x02\u0476\u16BB\x03\x02" +
		"\x02\x02\u0478\u16C0\x03\x02\x02\x02\u047A\u16C2\x03\x02\x02\x02\u047C" +
		"\u16C4\x03\x02\x02\x02\u047E\u16C8\x03\x02\x02\x02\u0480\u16CC\x03\x02" +
		"\x02\x02\u0482\u16D1\x03\x02\x02\x02\u0484\u16D3\x03\x02\x02\x02\u0486" +
		"\u16D6\x03\x02\x02\x02\u0488\u16DA\x03\x02\x02\x02\u048A\u16E2\x03\x02" +
		"\x02\x02\u048C\u16EB\x03\x02\x02\x02\u048E\u16EE\x03\x02\x02\x02\u0490" +
		"\u16F7\x03\x02\x02\x02\u0492\u16FB\x03\x02\x02\x02\u0494\u1703\x03\x02" +
		"\x02\x02\u0496\u1706\x03\x02\x02\x02\u0498\u170B\x03\x02\x02\x02\u049A" +
		"\u1710\x03\x02\x02\x02\u049C\u1714\x03\x02\x02\x02\u049E\u1717\x03\x02" +
		"\x02\x02\u04A0\u171B\x03\x02\x02\x02\u04A2\u171D\x03\x02\x02\x02\u04A4" +
		"\u1722\x03\x02\x02\x02\u04A6\u1727\x03\x02\x02\x02\u04A8\u1738\x03\x02" +
		"\x02\x02\u04AA\u173F\x03\x02\x02\x02\u04AC\u174B\x03\x02\x02\x02\u04AE" +
		"\u175C\x03\x02\x02\x02\u04B0\u176D\x03\x02\x02\x02\u04B2\u1779\x03\x02" +
		"\x02\x02\u04B4\u178A\x03\x02\x02\x02\u04B6\u1791\x03\x02\x02\x02\u04B8" +
		"\u179F\x03\x02\x02\x02\u04BA\u17B1\x03\x02\x02\x02\u04BC\u17B8\x03\x02" +
		"\x02\x02\u04BE\u17BF\x03\x02\x02\x02\u04C0\u17C5\x03\x02\x02\x02\u04C2" +
		"\u17DF\x03\x02\x02\x02\u04C4\u17F4\x03\x02\x02\x02\u04C6\u1806\x03\x02" +
		"\x02\x02\u04C8\u180A\x03\x02\x02\x02\u04CA\u1822\x03\x02\x02\x02\u04CC" +
		"\u1829\x03\x02\x02\x02\u04CE\u1836\x03\x02\x02\x02\u04D0\u1847\x03\x02" +
		"\x02\x02\u04D2\u184E\x03\x02\x02\x02\u04D4\u1855\x03\x02\x02\x02\u04D6" +
		"\u185B\x03\x02\x02\x02\u04D8\u1865\x03\x02\x02\x02\u04DA\u1882\x03\x02" +
		"\x02\x02\u04DC\u1886\x03\x02\x02\x02\u04DE\u1894\x03\x02\x02\x02\u04E0" +
		"\u18A4\x03\x02\x02\x02\u04E2\u18B3\x03\x02\x02\x02\u04E4\u18B7\x03\x02" +
		"\x02\x02\u04E6\u18C7\x03\x02\x02\x02\u04E8\u18CE\x03\x02\x02\x02\u04EA" +
		"\u18DD\x03\x02\x02\x02\u04EC\u18E1\x03\x02\x02\x02\u04EE\u18F1\x03\x02" +
		"\x02\x02\u04F0\u18F8\x03\x02\x02\x02\u04F2\u190C\x03\x02\x02\x02\u04F4" +
		"\u1910\x03\x02\x02\x02\u04F6\u1924\x03\x02\x02\x02\u04F8\u192B\x03\x02" +
		"\x02\x02\u04FA\u1936\x03\x02\x02\x02\u04FC\u1946\x03\x02\x02\x02\u04FE" +
		"\u194D\x03\x02\x02\x02\u0500\u1959\x03\x02\x02\x02\u0502\u197E\x03\x02" +
		"\x02\x02\u0504\u1990\x03\x02\x02\x02\u0506\u1994\x03\x02\x02\x02\u0508" +
		"\u19A6\x03\x02\x02\x02\u050A\u19AD\x03\x02\x02\x02\u050C\u19BF\x03\x02" +
		"\x02\x02\u050E\u19C3\x03\x02\x02\x02\u0510\u19D5\x03\x02\x02\x02\u0512" +
		"\u19DC\x03\x02\x02\x02\u0514\u19E8\x03\x02\x02\x02\u0516\u19F8\x03\x02" +
		"\x02\x02\u0518\u19FF\x03\x02\x02\x02\u051A\u1A06\x03\x02\x02\x02\u051C" +
		"\u1A0C\x03\x02\x02\x02\u051E\u1A16\x03\x02\x02\x02\u0520\u1A1A\x03\x02" +
		"\x02\x02\u0522\u1A1E\x03\x02\x02\x02\u0524\u1A21\x03\x02\x02\x02\u0526" +
		"\u1A36\x03\x02\x02\x02\u0528\u1A3C\x03\x02\x02\x02\u052A\u1A42\x03\x02" +
		"\x02\x02\u052C\u1A4C\x03\x02\x02\x02\u052E\u1A50\x03\x02\x02\x02\u0530" +
		"\u1A56\x03\x02\x02\x02\u0532\u1A5C\x03\x02\x02\x02\u0534\u1A5F\x03\x02" +
		"\x02\x02\u0536\u1A62\x03\x02\x02\x02\u0538\u1A65\x03\x02\x02\x02\u053A" +
		"\u1A68\x03\x02\x02\x02\u053C\u1A6F\x03\x02\x02\x02\u053E\u1A72\x03\x02" +
		"\x02\x02\u0540\u1A78\x03\x02\x02\x02\u0542\u1A89\x03\x02\x02\x02\u0544" +
		"\u1A8D\x03\x02\x02\x02\u0546\u1A9E\x03\x02\x02\x02\u0548\u1AA5\x03\x02" +
		"\x02\x02\u054A\u1AB5\x03\x02\x02\x02\u054C\u1ABE\x03\x02\x02\x02\u054E" +
		"\u1ACB\x03\x02\x02\x02\u0550\u1ADA\x03\x02\x02\x02\u0552\u1AE3\x03\x02" +
		"\x02\x02\u0554\u1AFF\x03\x02\x02\x02\u0556\u1B0B\x03\x02\x02\x02\u0558" +
		"\u1B1B\x03\x02\x02\x02\u055A\u1B22\x03\x02\x02\x02\u055C\u1B35\x03\x02" +
		"\x02\x02\u055E\u1B44\x03\x02\x02\x02\u0560\u1B49\x03\x02\x02\x02\u0562" +
		"\u1B5E\x03\x02\x02\x02\u0564\u1B65\x03\x02\x02\x02\u0566\u1B69\x03\x02" +
		"\x02\x02\u0568\u1B78\x03\x02\x02\x02\u056A\u1B86\x03\x02\x02\x02\u056C" +
		"\u1B94\x03\x02\x02\x02\u056E\u1BA3\x03\x02\x02\x02\u0570\u1BAB\x03\x02" +
		"\x02\x02\u0572\u1BB2\x03\x02\x02\x02\u0574\u1BB6\x03\x02\x02\x02\u0576" +
		"\u1BB8\x03\x02\x02\x02\u0578\u1BBA\x03\x02\x02\x02\u057A\u1BBC\x03\x02" +
		"\x02\x02\u057C\u1BC9\x03\x02\x02\x02\u057E\u1BCB\x03\x02\x02\x02\u0580" +
		"\u1BCF\x03\x02\x02\x02\u0582\u1BD7\x03\x02\x02\x02\u0584\u1BDB\x03\x02" +
		"\x02\x02\u0586\u1BDF\x03\x02\x02\x02\u0588\u1BE3\x03\x02\x02\x02\u058A" +
		"\u1BE7\x03\x02\x02\x02\u058C\u1BEB\x03\x02\x02\x02\u058E\u1BEF\x03\x02" +
		"\x02\x02\u0590\u1BF3\x03\x02\x02\x02\u0592\u1BF7\x03\x02\x02\x02\u0594" +
		"\u1BFB\x03\x02\x02\x02\u0596\u1C09\x03\x02\x02\x02\u0598\u1C18\x03\x02" +
		"\x02\x02\u059A\u1C24\x03\x02\x02\x02\u059C\u1C30\x03\x02\x02\x02\u059E" +
		"\u1C34\x03\x02\x02\x02\u05A0\u1C36\x03\x02\x02\x02\u05A2\u1C38\x03\x02" +
		"\x02\x02\u05A4\u1C3C\x03\x02\x02\x02\u05A6\u1C3F\x03\x02\x02\x02\u05A8" +
		"\u1C4B\x03\x02\x02\x02\u05AA\u1C55\x03\x02\x02\x02\u05AC\u1C5A\x03\x02" +
		"\x02\x02\u05AE\u1C5E\x03\x02\x02\x02\u05B0\u1C60\x03\x02\x02\x02\u05B2" +
		"\u1C62\x03\x02\x02\x02\u05B4\u1C66\x03\x02\x02\x02\u05B6\u1C6A\x03\x02" +
		"\x02\x02\u05B8\u1C6C\x03\x02\x02\x02\u05BA\u1C6E\x03\x02\x02\x02\u05BC" +
		"\u1C7A\x03\x02\x02\x02\u05BE\u1C7E\x03\x02\x02\x02\u05C0\u1C82\x03\x02" +
		"\x02\x02\u05C2\u1C8B\x03\x02\x02\x02\u05C4\u1C90\x03\x02\x02\x02\u05C6" +
		"\u1C94\x03\x02\x02\x02\u05C8\u1CA1\x03\x02\x02\x02\u05CA\u1CA3\x03\x02" +
		"\x02\x02\u05CC\u1CA7\x03\x02\x02\x02\u05CE\u1CB2\x03\x02\x02\x02\u05D0" +
		"\u1CB7\x03\x02\x02\x02\u05D2\u1CBB\x03\x02\x02\x02\u05D4\u1CC0\x03\x02" +
		"\x02\x02\u05D6\u1CC5\x03\x02\x02\x02\u05D8\u1CC7\x03\x02\x02\x02\u05DA" +
		"\u1CCB\x03\x02\x02\x02\u05DC\u1CCD\x03\x02\x02\x02\u05DE\u1CD3\x03\x02" +
		"\x02\x02\u05E0\u1CD5\x03\x02\x02\x02\u05E2\u1CD7\x03\x02\x02\x02\u05E4" +
		"\u1CD9\x03\x02\x02\x02\u05E6\u1CE5\x03\x02\x02\x02\u05E8\u1CFA\x03\x02" +
		"\x02\x02\u05EA\u1CFC\x03\x02\x02\x02\u05EC\u1CFE\x03\x02\x02\x02\u05EE" +
		"\u1D0B\x03\x02\x02\x02\u05F0\u1D0F\x03\x02\x02\x02\u05F2\u1D11\x03\x02" +
		"\x02\x02\u05F4\u1D17\x03\x02\x02\x02\u05F6\u1D19\x03\x02\x02\x02\u05F8" +
		"\u1D25\x03\x02\x02\x02\u05FA\u1D2A\x03\x02\x02\x02\u05FC\u1D2C\x03\x02" +
		"\x02\x02\u05FE\u1D3B\x03\x02\x02\x02\u0600\u1D45\x03\x02\x02\x02\u0602" +
		"\u1D47\x03\x02\x02\x02\u0604\u1D49\x03\x02\x02\x02\u0606\u1D4B\x03\x02" +
		"\x02\x02\u0608\u1D4E\x03\x02\x02\x02\u060A\u1D52\x03\x02\x02\x02\u060C" +
		"\u1D5A\x03\x02\x02\x02\u060E\u1D66\x03\x02\x02\x02\u0610\u1D6B\x03\x02" +
		"\x02\x02\u0612\u1D6E\x03\x02\x02\x02\u0614\u1D77\x03\x02\x02\x02\u0616" +
		"\u1D79\x03\x02\x02\x02\u0618\u1D80\x03\x02\x02\x02\u061A\u1D84\x03\x02" +
		"\x02\x02\u061C\u1D87\x03\x02\x02\x02\u061E\u1D8A\x03\x02\x02\x02\u0620" +
		"\u1D8D\x03\x02\x02\x02\u0622\u1DAD\x03\x02\x02\x02\u0624\u1DB6\x03\x02" +
		"\x02\x02\u0626\u1DB8\x03\x02\x02\x02\u0628\u1DBA\x03\x02\x02\x02\u062A" +
		"\u1DBC\x03\x02\x02\x02\u062C\u1DC0\x03\x02\x02\x02\u062E\u1DC3\x03\x02" +
		"\x02\x02\u0630\u1DC6\x03\x02\x02\x02\u0632\u1DC9\x03\x02\x02\x02\u0634" +
		"\u1DCC\x03\x02\x02\x02\u0636\u1DCF\x03\x02\x02\x02\u0638\u1DD8\x03\x02" +
		"\x02\x02\u063A\u1DE5\x03\x02\x02\x02\u063C\u1DE7\x03\x02\x02\x02\u063E" +
		"\u1DEB\x03\x02\x02\x02\u0640\u1DF5\x03\x02\x02\x02\u0642\u1E03\x03\x02" +
		"\x02\x02\u0644\u1E0F\x03\x02\x02\x02\u0646\u1E13\x03\x02\x02\x02\u0648" +
		"\u1E15\x03\x02\x02\x02\u064A\u1E17\x03\x02\x02\x02\u064C\u1E1B\x03\x02" +
		"\x02\x02\u064E\u1E1F\x03\x02\x02\x02\u0650\u1E21\x03\x02\x02\x02\u0652" +
		"\u1E2B\x03\x02\x02\x02\u0654\u1E2D\x03\x02\x02\x02\u0656\u1E38\x03\x02" +
		"\x02\x02\u0658\u1E48\x03\x02\x02\x02\u065A\u1E4F\x03\x02\x02\x02\u065C" +
		"\u1E53\x03\x02\x02\x02\u065E\u1E57\x03\x02\x02\x02\u0660\u1E5B\x03\x02" +
		"\x02\x02\u0662\u1E5D\x03\x02\x02\x02\u0664\u1E61\x03\x02\x02\x02\u0666" +
		"\u1E65\x03\x02\x02\x02\u0668\u1E6F\x03\x02\x02\x02\u066A\u1E73\x03\x02" +
		"\x02\x02\u066C\u1E76\x03\x02\x02\x02\u066E\u1E79\x03\x02\x02\x02\u0670" +
		"\u1E87\x03\x02\x02\x02\u0672\u1E89\x03\x02\x02\x02\u0674\u1E8B\x03\x02" +
		"\x02\x02\u0676\u1E94\x03\x02\x02\x02\u0678\u1E96\x03\x02\x02\x02\u067A" +
		"\u1E9F\x03\x02\x02\x02\u067C\u1EA1\x03\x02\x02\x02\u067E\u1EA3\x03\x02" +
		"\x02\x02\u0680\u1EA5\x03\x02\x02\x02\u0682\u0683\x05\u0160\xB1\x02\u0683" +
		"\x03\x03\x02\x02\x02\u0684\u0685\x07\x03\x02\x02\u0685\u0686\x05\u0280" +
		"\u0141\x02\u0686\u0687\x07\x04\x02\x02\u0687\x05\x03\x02\x02\x02\u0688" +
		"\u0689\x07\x05\x02\x02\u0689\u068A\x05Z.\x02\u068A\u068B\x07\x04\x02\x02" +
		"\u068B\x07\x03\x02\x02\x02\u068C\u0690\x07\x06\x02\x02\u068D\u0691\x05" +
		"\x0E\b\x02\u068E\u0691\x05\u048A\u0246\x02\u068F\u0691\x05\u0484\u0243" +
		"\x02\u0690\u068D\x03\x02\x02\x02\u0690\u068E\x03\x02\x02\x02\u0690\u068F" +
		"\x03\x02\x02\x02\u0691\u0692\x03\x02\x02\x02\u0692\u0693\x07\x04\x02\x02" +
		"\u0693\t\x03\x02\x02\x02\u0694\u0695\x05Z.\x02\u0695\v\x03\x02\x02\x02" +
		"\u0696\u0697\x05\u05FA\u02FE\x02\u0697\r\x03\x02\x02\x02\u0698\u069C\x07" +
		"\x07\x02\x02\u0699\u069B\x05\u0134\x9B\x02\u069A\u0699\x03\x02\x02\x02" +
		"\u069B\u069E\x03\x02\x02\x02\u069C\u069A\x03\x02\x02\x02\u069C\u069D\x03" +
		"\x02\x02\x02\u069D\u069F\x03\x02\x02\x02\u069E\u069C\x03\x02\x02\x02\u069F" +
		"\u06A0\x07\x04\x02\x02\u06A0\x0F\x03\x02\x02\x02\u06A1\u06A2\x07\b\x02" +
		"\x02\u06A2\u06A3\x05\u0624\u0313\x02\u06A3\u06A4\x07\x04\x02\x02\u06A4" +
		"\x11\x03\x02\x02\x02\u06A5\u06A9\x07\t\x02\x02\u06A6\u06A8\x05@!\x02\u06A7" +
		"\u06A6\x03\x02\x02\x02\u06A8\u06AB\x03\x02\x02\x02\u06A9\u06A7\x03\x02" +
		"\x02\x02\u06A9\u06AA\x03\x02\x02\x02\u06AA\u06AC\x03\x02\x02\x02\u06AB" +
		"\u06A9\x03\x02\x02\x02\u06AC\u06AD\x07\x04\x02\x02\u06AD\x13\x03\x02\x02" +
		"\x02\u06AE\u06AF\x05\u039C\u01CF\x02\u06AF\x15\x03\x02\x02\x02\u06B0\u06B1" +
		"\x07\n\x02\x02\u06B1\u06B5\x05\u05D6\u02EC\x02\u06B2\u06B4\x05\u0134\x9B" +
		"\x02\u06B3\u06B2\x03\x02\x02\x02\u06B4\u06B7\x03\x02\x02\x02\u06B5\u06B3" +
		"\x03\x02\x02\x02\u06B5\u06B6\x03\x02\x02\x02\u06B6\u06B8\x03\x02\x02\x02" +
		"\u06B7\u06B5\x03\x02\x02\x02\u06B8\u06B9\x07\x04\x02\x02\u06B9\x17\x03" +
		"\x02\x02\x02\u06BA\u06BB\x07\v\x02\x02\u06BB\u06BC\x05\xF4{\x02\u06BC" +
		"\u06BD\x07\x04\x02\x02\u06BD\x19\x03\x02\x02\x02\u06BE\u06C2\x07\f\x02" +
		"\x02\u06BF\u06C3\x05\x0E\b\x02\u06C0\u06C3\x05\u048A\u0246\x02\u06C1\u06C3" +
		"\x05\u0484\u0243\x02\u06C2\u06BF\x03\x02\x02\x02\u06C2\u06C0\x03\x02\x02" +
		"\x02\u06C2\u06C1\x03\x02\x02\x02\u06C3\u06C4\x03\x02\x02\x02\u06C4\u06C5" +
		"\x07\x04\x02\x02\u06C5\x1B\x03\x02\x02\x02\u06C6\u06C7\x07\r\x02\x02\u06C7" +
		"\u06C8\x05\u05B8\u02DD\x02\u06C8\u06C9\x05\u05F0\u02F9\x02\u06C9\u06CA" +
		"\x05\u016C\xB7\x02\u06CA\u06CB\x07\x04\x02\x02\u06CB\x1D\x03\x02\x02\x02" +
		"\u06CC\u06CD\x07\x0E\x02\x02\u06CD\u06CE\x07\x04\x02\x02\u06CE\x1F\x03" +
		"\x02\x02\x02\u06CF\u06D3\x07\x0F\x02\x02\u06D0\u06D4\x05\x0E\b\x02\u06D1" +
		"\u06D4\x05\u048A\u0246\x02\u06D2\u06D4\x05\u0484\u0243\x02\u06D3\u06D0" +
		"\x03\x02\x02\x02\u06D3\u06D1\x03\x02\x02\x02\u06D3\u06D2\x03\x02\x02\x02" +
		"\u06D4\u06D5\x03\x02\x02\x02\u06D5\u06D6\x07\x04\x02\x02\u06D6!\x03\x02" +
		"\x02\x02\u06D7\u06D8\x05\u0412\u020A\x02\u06D8#\x03\x02\x02\x02\u06D9" +
		"\u06DA\x07\x10\x02\x02\u06DA\u06DB\x05\u0680\u0341\x02\u06DB\u06DC\x07" +
		"\x04\x02\x02\u06DC%\x03\x02\x02\x02\u06DD\u06DE\x07\x11\x02\x02\u06DE" +
		"\u06DF\x05\x94K\x02\u06DF\u06E0\x07\x04\x02\x02\u06E0\'\x03\x02\x02\x02" +
		"\u06E1\u06E2\x07\x12\x02\x02\u06E2\u06E3\x07\x04\x02\x02\u06E3)\x03\x02" +
		"\x02\x02\u06E4\u06E8\x07\x13\x02\x02\u06E5\u06E9\x05\u033C\u019F\x02\u06E6" +
		"\u06E9\x05\u0330\u0199\x02\u06E7\u06E9\x05\u033E\u01A0\x02\u06E8\u06E5" +
		"\x03\x02\x02\x02\u06E8\u06E6\x03\x02\x02\x02\u06E8\u06E7\x03\x02\x02\x02" +
		"\u06E9\u06EA\x03\x02\x02\x02\u06EA\u06EB\x07\x04\x02\x02\u06EB+\x03\x02" +
		"\x02\x02\u06EC\u06ED\x07\x14\x02\x02\u06ED\u06F3\x05\u064E\u0328\x02\u06EE" +
		"\u06F2\x05\x96L\x02\u06EF\u06F2\x05\u0376\u01BC\x02\u06F0\u06F2\x05\u0638" +
		"\u031D\x02\u06F1\u06EE\x03\x02\x02\x02\u06F1\u06EF\x03\x02\x02\x02\u06F1" +
		"\u06F0\x03\x02\x02\x02\u06F2\u06F5\x03\x02\x02\x02\u06F3\u06F1\x03\x02" +
		"\x02\x02\u06F3\u06F4\x03\x02\x02\x02\u06F4\u06F6\x03\x02\x02\x02\u06F5" +
		"\u06F3\x03\x02\x02\x02\u06F6\u06F7\x07\x04\x02\x02\u06F7-\x03\x02\x02" +
		"\x02\u06F8\u06F9\x07\x15\x02\x02\u06F9\u06FA\x07\x04\x02\x02\u06FA/\x03" +
		"\x02\x02\x02\u06FB\u06FD\x07\x16\x02\x02\u06FC\u06FE\x052\x1A\x02\u06FD" +
		"\u06FC\x03\x02\x02\x02\u06FD\u06FE\x03\x02\x02\x02\u06FE\u06FF\x03\x02" +
		"\x02\x02\u06FF\u0700\x07\x04\x02\x02\u07001\x03\x02\x02\x02\u0701\u0708" +
		"\x07\x17\x02\x02\u0702\u0707\x05\xF8}\x02\u0703\u0707\x05\xFC\x7F\x02" +
		"\u0704\u0707\x05\u0100\x81\x02\u0705\u0707\x05\u0104\x83\x02\u0706\u0702" +
		"\x03\x02\x02\x02\u0706\u0703\x03\x02\x02\x02\u0706\u0704\x03\x02\x02\x02" +
		"\u0706\u0705\x03\x02\x02\x02\u0707\u070A\x03\x02\x02\x02\u0708\u0706\x03" +
		"\x02\x02\x02\u0708\u0709\x03\x02\x02\x02\u0709\u070B\x03\x02\x02\x02\u070A" +
		"\u0708\x03\x02\x02\x02\u070B\u070C\x07\x04\x02\x02\u070C3\x03\x02\x02" +
		"\x02\u070D\u0710\x07\x18\x02\x02\u070E\u0711\x05\u0344\u01A3\x02\u070F" +
		"\u0711\x05\u0368\u01B5\x02\u0710\u070E\x03\x02\x02\x02\u0710\u070F\x03" +
		"\x02\x02\x02\u0711\u0712\x03\x02\x02\x02\u0712\u0713\x07\x04\x02\x02\u0713" +
		"5\x03\x02\x02\x02\u0714\u0715\x05\u04A0\u0251\x02\u07157\x03\x02\x02\x02" +
		"\u0716\u0717\x07\x19\x02\x02\u0717\u0718\x07\x04\x02\x02\u07189\x03\x02" +
		"\x02\x02\u0719\u071A\x07\x1A\x02\x02\u071A\u071B\x05@!\x02\u071B\u071C" +
		"\x07\x04\x02\x02\u071C;\x03\x02\x02\x02\u071D\u071E\x07\x1B\x02\x02\u071E" +
		"\u071F\x05\xD6l\x02\u071F\u0720\x05J&\x02\u0720\u0721\x07\x04\x02\x02" +
		"\u0721=\x03\x02\x02\x02\u0722\u0723\x07\x1C\x02\x02\u0723\u0724\x05\xD8" +
		"m\x02\u0724\u0725\x07\x04\x02\x02\u0725?\x03\x02\x02\x02\u0726\u0732\x05" +
		"\x12\n\x02\u0727\u0732\x05H%\x02\u0728\u0732\x05J&\x02\u0729\u0732\x05" +
		"\u05C6\u02E4\x02\u072A\u0732\x05\u027E\u0140\x02\u072B\u0732\x05\u030A" +
		"\u0186\x02\u072C\u0732\x05\u030C\u0187\x02\u072D\u0732\x05\u0388\u01C5" +
		"\x02\u072E\u0732\x05\u03AA\u01D6\x02\u072F\u0732\x05\u0674\u033B\x02\u0730" +
		"\u0732\x05> \x02\u0731\u0726\x03\x02\x02\x02\u0731\u0727\x03\x02\x02\x02" +
		"\u0731\u0728\x03\x02\x02\x02\u0731\u0729\x03\x02\x02\x02\u0731\u072A\x03" +
		"\x02\x02\x02\u0731\u072B\x03\x02\x02\x02\u0731\u072C\x03\x02\x02\x02\u0731" +
		"\u072D\x03\x02\x02\x02\u0731\u072E\x03\x02\x02\x02\u0731\u072F\x03\x02" +
		"\x02\x02\u0731\u0730\x03\x02\x02\x02\u0732A\x03\x02\x02\x02\u0733\u0734" +
		"\x07\x1D\x02\x02\u0734\u0735\x05L\'\x02\u0735\u0736\x07\x04\x02\x02\u0736" +
		"C\x03\x02\x02\x02\u0737\u0738\x07\x1E\x02\x02\u0738\u073D\x05\u03F4\u01FB" +
		"\x02\u0739\u073C\x05:\x1E\x02\u073A\u073C\x05\u0376\u01BC\x02\u073B\u0739" +
		"\x03\x02\x02\x02\u073B\u073A\x03\x02\x02\x02\u073C\u073F\x03\x02\x02\x02" +
		"\u073D\u073B\x03\x02\x02\x02\u073D\u073E\x03\x02\x02\x02\u073E\u0740\x03" +
		"\x02\x02\x02\u073F\u073D\x03\x02\x02\x02\u0740\u0741\x07\x04\x02\x02\u0741" +
		"E\x03\x02\x02\x02\u0742\u0743\x07\x1F\x02\x02\u0743\u0744\x05\u03F8\u01FD" +
		"\x02\u0744\u0745\x05@!\x02\u0745\u0746\x07\x04\x02\x02\u0746G\x03\x02" +
		"\x02\x02\u0747\u0748\x07 \x02\x02\u0748\u0749\x05\u03F8\u01FD\x02\u0749" +
		"\u074A\x07\x04\x02\x02\u074AI\x03\x02\x02\x02\u074B\u074E\x05\u0194\xCB" +
		"\x02\u074C\u074E\x05\u0610\u0309\x02\u074D\u074B\x03\x02\x02\x02\u074D" +
		"\u074C\x03\x02\x02\x02\u074EK\x03\x02\x02\x02\u074F\u0750\x05J&\x02\u0750" +
		"M\x03\x02\x02\x02\u0751\u0752\x07!\x02\x02\u0752\u0753\x05\u040A\u0206" +
		"\x02\u0753\u0754\x07\x04\x02\x02\u0754O\x03\x02\x02\x02\u0755\u0756\x07" +
		"\"\x02\x02\u0756\u0757\x05L\'\x02\u0757\u0758\x07\x04\x02\x02\u0758Q\x03" +
		"\x02\x02\x02\u0759\u075C\x07#\x02\x02\u075A\u075D\x05\u0308\u0185\x02" +
		"\u075B\u075D\x05\u0354\u01AB\x02\u075C\u075A\x03\x02\x02\x02\u075C\u075B" +
		"\x03\x02\x02\x02\u075D\u075E\x03\x02\x02\x02\u075E\u075F\x07\x04\x02\x02" +
		"\u075FS\x03\x02\x02\x02\u0760\u0761\x07$\x02\x02\u0761\u0762\x07\x04\x02" +
		"\x02\u0762U\x03\x02\x02\x02\u0763\u0764\x07%\x02\x02\u0764\u0765\x07\x04" +
		"\x02\x02\u0765W\x03\x02\x02\x02\u0766\u0767\x07&\x02\x02\u0767\u0768\x05" +
		"\u0624\u0313\x02\u0768\u0769\x07\x04\x02\x02\u0769Y\x03\x02\x02\x02\u076A" +
		"\u076B\x05\u035A\u01AE\x02\u076B[\x03\x02\x02\x02\u076C\u076D\x07\'\x02" +
		"\x02\u076D\u076E\x07\x04\x02\x02\u076E]\x03\x02\x02\x02\u076F\u0770\x07" +
		"(\x02\x02\u0770\u0771\x05\u031A\u018E\x02\u0771\u0778\x05`1\x02\u0772" +
		"\u0777\x05x=\x02\u0773\u0777\x05\x96L\x02\u0774\u0777\x05\u0638\u031D" +
		"\x02\u0775\u0777\x05\u0640\u0321\x02\u0776\u0772\x03\x02\x02\x02\u0776" +
		"\u0773\x03\x02\x02\x02\u0776\u0774\x03\x02\x02\x02\u0776\u0775\x03\x02" +
		"\x02\x02\u0777\u077A\x03\x02\x02\x02\u0778\u0776\x03\x02\x02\x02\u0778" +
		"\u0779\x03\x02\x02\x02\u0779\u077B\x03\x02\x02\x02\u077A\u0778\x03\x02" +
		"\x02\x02\u077B\u077C\x07\x04\x02\x02\u077C_\x03\x02\x02\x02\u077D\u0784" +
		"\x07)\x02\x02\u077E\u0783\x05\u0142\xA2\x02\u077F\u0783\x05\u0376\u01BC" +
		"\x02\u0780\u0783\x05\u0462\u0232\x02\u0781\u0783\x05\u05BA\u02DE\x02\u0782" +
		"\u077E\x03\x02\x02\x02\u0782\u077F\x03\x02\x02\x02\u0782\u0780\x03\x02" +
		"\x02\x02\u0782\u0781\x03\x02\x02\x02\u0783\u0786\x03\x02\x02\x02\u0784" +
		"\u0782\x03\x02\x02\x02\u0784\u0785\x03\x02\x02\x02\u0785\u0787\x03\x02" +
		"\x02\x02\u0786\u0784\x03\x02\x02\x02\u0787\u0788\x07\x04\x02\x02\u0788" +
		"a\x03\x02\x02\x02\u0789\u078E\x07*\x02\x02\u078A\u078D\x05\u0134\x9B\x02" +
		"\u078B\u078D\x05\u013A\x9E\x02\u078C\u078A\x03\x02\x02\x02\u078C\u078B" +
		"\x03\x02\x02\x02\u078D\u0790\x03\x02\x02\x02\u078E\u078C\x03\x02\x02\x02" +
		"\u078E\u078F\x03\x02\x02\x02\u078F\u0791\x03\x02\x02\x02\u0790\u078E\x03" +
		"\x02\x02\x02\u0791\u0792\x07\x04\x02\x02\u0792c\x03\x02\x02\x02\u0793" +
		"\u0794\x07+\x02\x02\u0794\u0799\x05\u0470\u0239\x02\u0795\u0798\x05\u0134" +
		"\x9B\x02\u0796\u0798\x05\u046E\u0238\x02\u0797\u0795\x03\x02";
	private static readonly _serializedATNSegment5: string =
		"\x02\x02\u0797\u0796\x03\x02\x02\x02\u0798\u079B\x03\x02\x02\x02\u0799" +
		"\u0797\x03\x02\x02\x02\u0799\u079A\x03\x02\x02\x02\u079A\u079C\x03\x02" +
		"\x02\x02\u079B\u0799\x03\x02\x02\x02\u079C\u079D\x07\x04\x02\x02\u079D" +
		"e\x03\x02\x02\x02\u079E\u079F\x07,\x02\x02\u079F\u07A3\x05\u0470\u0239" +
		"\x02\u07A0\u07A4\x05\x0E\b\x02\u07A1\u07A4\x05\u048A\u0246\x02\u07A2\u07A4" +
		"\x05\u0484\u0243\x02\u07A3\u07A0\x03\x02\x02\x02\u07A3\u07A1\x03\x02\x02" +
		"\x02\u07A3\u07A2\x03\x02\x02\x02\u07A4\u07A6\x03\x02\x02\x02\u07A5\u07A7" +
		"\x05\u046E\u0238\x02\u07A6\u07A5\x03\x02\x02\x02\u07A6\u07A7\x03\x02\x02" +
		"\x02\u07A7\u07A8\x03\x02\x02\x02\u07A8\u07A9\x07\x04\x02\x02\u07A9g\x03" +
		"\x02\x02\x02\u07AA\u07AB\x07-\x02\x02\u07AB\u07AE\x05\u0470\u0239\x02" +
		"\u07AC\u07AF\x05\u0614\u030B\x02\u07AD\u07AF\x05\u0632\u031A\x02\u07AE" +
		"\u07AC\x03\x02\x02\x02\u07AE\u07AD\x03\x02\x02\x02\u07AF\u07B5\x03\x02" +
		"\x02\x02\u07B0\u07B4\x05\x96L\x02\u07B1\u07B4\x05\u01AC\xD7\x02\u07B2" +
		"\u07B4\x05\u0472\u023A\x02\u07B3\u07B0\x03\x02\x02\x02\u07B3\u07B1\x03" +
		"\x02\x02\x02\u07B3\u07B2\x03\x02\x02\x02\u07B4\u07B7\x03\x02\x02\x02\u07B5" +
		"\u07B3\x03\x02\x02\x02\u07B5\u07B6\x03\x02\x02\x02\u07B6\u07B8\x03\x02" +
		"\x02\x02\u07B7\u07B5\x03\x02\x02\x02\u07B8\u07B9\x07\x04\x02\x02\u07B9" +
		"i\x03\x02\x02\x02\u07BA\u07BB\x07.\x02\x02\u07BB\u07BD\x05\u031C\u018F" +
		"\x02\u07BC\u07BE\x05\u031E\u0190\x02\u07BD\u07BC\x03\x02\x02\x02\u07BD" +
		"\u07BE\x03\x02\x02\x02\u07BE\u07BF\x03\x02\x02\x02\u07BF\u07C0\x07\x04" +
		"\x02\x02\u07C0k\x03\x02\x02\x02\u07C1\u07C2\x07/\x02\x02\u07C2\u07C3\x05" +
		"\u0624\u0313\x02\u07C3\u07C4\x07\x04\x02\x02\u07C4m\x03\x02\x02\x02\u07C5" +
		"\u07C6\x070\x02\x02\u07C6\u07C7\x07\x04\x02\x02\u07C7o\x03\x02\x02\x02" +
		"\u07C8\u07CD\x071\x02\x02\u07C9\u07CE\x05\x1E\x10\x02\u07CA\u07CE\x05" +
		"\u02B6\u015C\x02\u07CB\u07CE\x05\u02C0\u0161\x02\u07CC\u07CE\x05\u02C2" +
		"\u0162\x02\u07CD\u07C9\x03\x02\x02\x02\u07CD\u07CA\x03\x02\x02\x02\u07CD" +
		"\u07CB\x03\x02\x02\x02\u07CD\u07CC\x03\x02\x02\x02\u07CE\u07CF\x03\x02" +
		"\x02\x02\u07CF\u07D0\x07\x04\x02\x02\u07D0q\x03\x02\x02\x02\u07D1\u07D2" +
		"\x072\x02\x02\u07D2\u07D3\x05\xF4{\x02\u07D3\u07D4\x07\x04\x02\x02\u07D4" +
		"s\x03\x02\x02\x02\u07D5\u07D9\x073\x02\x02\u07D6\u07DA\x05\x0E\b\x02\u07D7" +
		"\u07DA\x05\u048A\u0246\x02\u07D8\u07DA\x05\u0484\u0243\x02\u07D9\u07D6" +
		"\x03\x02\x02\x02\u07D9\u07D7\x03\x02\x02\x02\u07D9\u07D8\x03\x02\x02\x02" +
		"\u07DA\u07DB\x03\x02\x02\x02\u07DB\u07DC\x07\x04\x02\x02\u07DCu\x03\x02" +
		"\x02\x02\u07DD\u07DE\x074\x02\x02\u07DE\u07DF\x05\u0478\u023D\x02\u07DF" +
		"\u07E0\x05\u047A\u023E\x02\u07E0\u07E1\x07\x04\x02\x02\u07E1w\x03\x02" +
		"\x02\x02\u07E2\u07E3\x075\x02\x02\u07E3\u07E4\x05\x88E\x02\u07E4\u07E5" +
		"\x05\u02B0\u0159\x02\u07E5\u07F4\x05\x84C\x02\u07E6\u07F3\x05\u0552\u02AA" +
		"\x02\u07E7\u07F3\x05\u056A\u02B6\x02\u07E8\u07F3\x05,\x17\x02\u07E9\u07F3" +
		"\x05z>\x02\u07EA\u07F3\x05\x96L\x02\u07EB\u07F3\x05\xD2j\x02\u07EC\u07F3" +
		"\x05\u010A\x86\x02\u07ED\u07F3\x05\u0638\u031D\x02\u07EE\u07F3\x05\u0338" +
		"\u019D\x02\u07EF\u07F3\x05\u034C\u01A7\x02\u07F0\u07F3\x05\u0402\u0202" +
		"\x02\u07F1\u07F3\x05\u05E6\u02F4\x02\u07F2\u07E6\x03\x02\x02\x02\u07F2" +
		"\u07E7\x03\x02\x02\x02\u07F2\u07E8\x03\x02\x02\x02\u07F2\u07E9\x03\x02" +
		"\x02\x02\u07F2\u07EA\x03\x02\x02\x02\u07F2\u07EB\x03\x02\x02\x02\u07F2" +
		"\u07EC\x03\x02\x02\x02\u07F2\u07ED\x03\x02\x02\x02\u07F2\u07EE\x03\x02" +
		"\x02\x02\u07F2\u07EF\x03\x02\x02\x02\u07F2\u07F0\x03\x02\x02\x02\u07F2" +
		"\u07F1\x03\x02\x02\x02\u07F3\u07F6\x03\x02\x02\x02\u07F4\u07F2\x03\x02" +
		"\x02\x02\u07F4\u07F5\x03\x02\x02\x02\u07F5\u07F7\x03\x02\x02\x02\u07F6" +
		"\u07F4\x03\x02\x02\x02\u07F7\u07F8\x07\x04\x02\x02\u07F8y\x03\x02\x02" +
		"\x02\u07F9\u07FA\x076\x02\x02\u07FA\u07FE\x05~@\x02\u07FB\u07FF\x05\u0658" +
		"\u032D\x02\u07FC\u07FF\x05\u0302\u0182\x02\u07FD\u07FF\x05\u061A\u030E" +
		"\x02\u07FE\u07FB\x03\x02\x02\x02\u07FE\u07FC\x03\x02\x02\x02\u07FE\u07FD" +
		"\x03\x02\x02\x02\u07FF\u0809\x03\x02\x02\x02\u0800\u0808\x05\x96L\x02" +
		"\u0801\u0808\x05\u01D8\xED\x02\u0802\u0808\x05\u020C\u0107\x02\u0803\u0808" +
		"\x05\u0376\u01BC\x02\u0804\u0808\x05\u0258\u012D\x02\u0805\u0808\x05\u0462" +
		"\u0232\x02\u0806\u0808\x05\u0638\u031D\x02\u0807\u0800\x03\x02\x02\x02" +
		"\u0807\u0801\x03\x02\x02\x02\u0807\u0802\x03\x02\x02\x02\u0807\u0803\x03" +
		"\x02\x02\x02\u0807\u0804\x03\x02\x02\x02\u0807\u0805\x03\x02\x02\x02\u0807" +
		"\u0806\x03\x02\x02\x02\u0808\u080B\x03\x02\x02\x02\u0809\u0807\x03\x02" +
		"\x02\x02\u0809\u080A\x03\x02\x02\x02\u080A\u080C\x03\x02\x02\x02\u080B" +
		"\u0809\x03\x02\x02\x02\u080C\u080D\x07\x04\x02\x02\u080D{\x03\x02\x02" +
		"\x02\u080E\u080F\x077\x02\x02\u080F\u0810\x05J&\x02\u0810\u0811\x07\x04" +
		"\x02\x02\u0811}\x03\x02\x02\x02\u0812\u0813\x05\u0370\u01B9\x02\u0813" +
		"\x7F\x03\x02\x02\x02\u0814\u0815\x05\u037A\u01BE\x02\u0815\x81\x03\x02" +
		"\x02\x02\u0816\u0817\x078\x02\x02\u0817\u0818\x05\x80A\x02\u0818\u0819" +
		"\x07\x04\x02\x02\u0819\x83\x03\x02\x02\x02\u081A\u0821\x079\x02\x02\u081B" +
		"\u0820\x05\u0142\xA2\x02\u081C\u0820\x05\u0376\u01BC\x02\u081D\u0820\x05" +
		"\u0462\u0232\x02\u081E\u0820\x05\u05BA\u02DE\x02\u081F\u081B\x03\x02\x02" +
		"\x02\u081F\u081C\x03\x02\x02\x02\u081F\u081D\x03\x02\x02\x02\u081F\u081E" +
		"\x03\x02\x02\x02\u0820\u0823\x03\x02\x02\x02\u0821\u081F\x03\x02\x02\x02" +
		"\u0821\u0822\x03\x02\x02\x02\u0822\u0824\x03\x02\x02\x02\u0823\u0821\x03" +
		"\x02\x02\x02\u0824\u0825\x07\x04\x02\x02\u0825\x85\x03\x02\x02\x02\u0826" +
		"\u0827\x07:\x02\x02\u0827\u0828\x05J&\x02\u0828\u0829\x07\x04\x02\x02" +
		"\u0829\x87\x03\x02\x02\x02\u082A\u082B\x05\u0370\u01B9\x02\u082B\x89\x03" +
		"\x02\x02\x02\u082C\u082D\x05\u037A\u01BE\x02\u082D\x8B\x03\x02\x02\x02" +
		"\u082E\u082F\x07;\x02\x02\u082F\u0834\x05\u0470\u0239\x02\u0830\u0833" +
		"\x05\u0134\x9B\x02\u0831\u0833\x05\u046E\u0238\x02\u0832\u0830\x03\x02" +
		"\x02\x02\u0832\u0831\x03\x02\x02\x02\u0833\u0836\x03\x02\x02\x02\u0834" +
		"\u0832\x03\x02\x02\x02\u0834\u0835\x03\x02\x02\x02\u0835\u0837\x03\x02" +
		"\x02\x02\u0836\u0834\x03\x02\x02\x02\u0837\u0838\x07\x04\x02\x02\u0838" +
		"\x8D\x03\x02\x02\x02\u0839\u083A\x07<\x02\x02\u083A\u083E\x05\u0470\u0239" +
		"\x02\u083B\u083F\x05\x0E\b\x02\u083C\u083F\x05\u048A\u0246\x02\u083D\u083F" +
		"\x05\u0484\u0243\x02\u083E\u083B\x03\x02\x02\x02\u083E\u083C\x03\x02\x02" +
		"\x02\u083E\u083D\x03\x02\x02\x02\u083F\u0841\x03\x02\x02\x02\u0840\u0842" +
		"\x05\u046E\u0238\x02\u0841\u0840\x03\x02\x02\x02\u0841\u0842\x03\x02\x02" +
		"\x02\u0842\u0843\x03\x02\x02\x02\u0843\u0844\x07\x04\x02\x02\u0844\x8F" +
		"\x03\x02\x02\x02\u0845\u0846\x07=\x02\x02\u0846\u0849\x05\u0470\u0239" +
		"\x02\u0847\u084A\x05\u0614\u030B\x02\u0848\u084A\x05\u0632\u031A\x02\u0849" +
		"\u0847\x03\x02\x02\x02\u0849\u0848\x03\x02\x02\x02\u084A\u0850\x03\x02" +
		"\x02\x02\u084B\u084F\x05\x96L\x02\u084C\u084F\x05\u01AC\xD7\x02\u084D" +
		"\u084F\x05\u0472\u023A\x02\u084E\u084B\x03\x02\x02\x02\u084E\u084C\x03" +
		"\x02\x02\x02\u084E\u084D\x03\x02\x02\x02\u084F\u0852\x03\x02\x02\x02\u0850" +
		"\u084E\x03\x02\x02\x02\u0850\u0851\x03\x02\x02\x02\u0851\u0853\x03\x02" +
		"\x02\x02\u0852\u0850\x03\x02\x02\x02\u0853\u0854\x07\x04\x02\x02\u0854" +
		"\x91\x03\x02\x02\x02\u0855\u0856\x07>\x02\x02\u0856\u0858\x05\x8AF\x02" +
		"\u0857\u0859\x05j6\x02\u0858\u0857\x03\x02\x02\x02\u0858\u0859\x03\x02" +
		"\x02\x02\u0859\u085A\x03\x02\x02\x02\u085A\u085B\x07\x04\x02\x02\u085B" +
		"\x93\x03\x02\x02\x02\u085C\u085D\x07?\x02\x02\u085D\u085E\x05\u0482\u0242" +
		"\x02\u085E\u085F\x05\u020E\u0108\x02\u085F\u0860\x056\x1C\x02\u0860\u0861" +
		"\x07\x04\x02\x02\u0861\x95\x03\x02\x02\x02\u0862\u0866\x07@\x02\x02\u0863" +
		"\u0865\x05\u0680\u0341\x02\u0864\u0863\x03\x02\x02\x02\u0865\u0868\x03" +
		"\x02\x02\x02\u0866\u0864\x03\x02\x02\x02\u0866\u0867\x03\x02\x02\x02\u0867" +
		"\u0869\x03\x02\x02\x02\u0868\u0866\x03\x02\x02\x02\u0869\u086A\x07\x04" +
		"\x02\x02\u086A\x97\x03\x02\x02\x02\u086B\u0874\x07A\x02\x02\u086C\u0873" +
		"\x05\x16\f\x02\u086D\u0873\x05\x96L\x02\u086E\u0873\x05\u0198\xCD\x02" +
		"\u086F\u0873\x05\u03AE\u01D8\x02\u0870\u0873\x05\u0464\u0233\x02\u0871" +
		"\u0873\x05\u0638\u031D\x02\u0872\u086C\x03\x02\x02\x02\u0872\u086D\x03" +
		"\x02\x02\x02\u0872\u086E\x03\x02\x02\x02\u0872\u086F\x03\x02\x02\x02\u0872" +
		"\u0870\x03\x02\x02\x02\u0872\u0871\x03\x02\x02\x02\u0873\u0876\x03\x02" +
		"\x02\x02\u0874\u0872\x03\x02\x02\x02\u0874\u0875\x03\x02\x02\x02\u0875" +
		"\u0877\x03\x02\x02\x02\u0876\u0874\x03\x02\x02\x02\u0877\u0878\x07\x04" +
		"\x02\x02\u0878\x99\x03\x02\x02\x02\u0879\u087A\x07B\x02\x02\u087A\u087B" +
		"\x05\u0680\u0341\x02\u087B\u087C\x07\x04\x02\x02\u087C\x9B\x03\x02\x02" +
		"\x02\u087D\u0881\x07C\x02\x02\u087E\u0882\x05\x0E\b\x02\u087F\u0882\x05" +
		"\u048A\u0246\x02\u0880\u0882\x05\u0484\u0243\x02\u0881\u087E\x03\x02\x02" +
		"\x02\u0881\u087F\x03\x02\x02\x02\u0881\u0880\x03\x02\x02\x02\u0882\u0883" +
		"\x03\x02\x02\x02\u0883\u0884\x07\x04\x02\x02\u0884\x9D\x03\x02\x02\x02" +
		"\u0885\u088C\x07D\x02\x02\u0886\u088B\x05\xA0Q\x02\u0887\u088B\x05\u0372" +
		"\u01BA\x02\u0888\u088B\x05\u0378\u01BD\x02\u0889\u088B\x05\u05B6\u02DC" +
		"\x02\u088A\u0886\x03\x02\x02\x02\u088A\u0887\x03\x02\x02\x02\u088A\u0888" +
		"\x03\x02\x02\x02\u088A\u0889\x03\x02\x02\x02\u088B\u088E\x03\x02\x02\x02" +
		"\u088C\u088A\x03\x02\x02\x02\u088C\u088D\x03\x02\x02\x02\u088D\u088F\x03" +
		"\x02\x02\x02\u088E\u088C\x03\x02\x02\x02\u088F\u0890\x07\x04\x02\x02\u0890" +
		"\x9F\x03\x02\x02\x02\u0891\u0897\x07E\x02\x02\u0892\u0896\x05\xA0Q\x02" +
		"\u0893\u0896\x05\u0378\u01BD\x02\u0894\u0896\x05\u05B6\u02DC\x02\u0895" +
		"\u0892\x03\x02\x02\x02\u0895\u0893\x03\x02\x02\x02\u0895\u0894\x03\x02" +
		"\x02\x02\u0896\u0899\x03\x02\x02\x02\u0897\u0895\x03\x02\x02\x02\u0897" +
		"\u0898\x03\x02\x02\x02\u0898\u089A\x03\x02\x02\x02\u0899\u0897\x03\x02" +
		"\x02\x02\u089A\u089B\x07\x04\x02\x02\u089B\xA1\x03\x02\x02\x02\u089C\u089D" +
		"\x07F\x02\x02\u089D\u089E\x05\u01F4\xFB\x02\u089E\u089F\x05\u060C\u0307" +
		"\x02\u089F\u08A0\x07\x04\x02\x02\u08A0\xA3\x03\x02\x02\x02\u08A1\u08A8" +
		"\x07G\x02\x02\u08A2\u08A7\x05\xA0Q\x02\u08A3\u08A7\x05\u0372\u01BA\x02" +
		"\u08A4\u08A7\x05\u0378\u01BD\x02\u08A5\u08A7\x05\u05B6\u02DC\x02\u08A6" +
		"\u08A2\x03\x02\x02\x02\u08A6\u08A3\x03\x02\x02\x02\u08A6\u08A4\x03\x02" +
		"\x02\x02\u08A6\u08A5\x03\x02\x02\x02\u08A7\u08AA\x03\x02\x02\x02\u08A8" +
		"\u08A6\x03\x02\x02\x02\u08A8\u08A9\x03\x02\x02\x02\u08A9\u08AB\x03\x02" +
		"\x02\x02\u08AA\u08A8\x03\x02\x02\x02\u08AB\u08AC\x07\x04\x02\x02\u08AC" +
		"\xA5\x03\x02\x02\x02\u08AD\u08B1\x07H\x02\x02\u08AE\u08B0\x05\u033C\u019F" +
		"\x02\u08AF\u08AE\x03\x02\x02\x02\u08B0\u08B3\x03\x02\x02\x02\u08B1\u08AF" +
		"\x03\x02\x02\x02\u08B1\u08B2\x03\x02\x02\x02\u08B2\u08B4\x03\x02\x02\x02" +
		"\u08B3\u08B1\x03\x02\x02\x02\u08B4\u08B5\x07\x04\x02\x02\u08B5\xA7\x03" +
		"\x02\x02\x02\u08B6\u08B7\x07I\x02\x02\u08B7\u08B8\x05@!\x02\u08B8\u08B9" +
		"\x07\x04\x02\x02\u08B9\xA9\x03\x02\x02\x02\u08BA\u08BE\x07J\x02\x02\u08BB" +
		"\u08BF\x05\x0E\b\x02\u08BC\u08BF\x05\u048A\u0246\x02\u08BD\u08BF\x05\u0484" +
		"\u0243\x02\u08BE\u08BB\x03\x02\x02\x02\u08BE\u08BC\x03\x02\x02\x02\u08BE" +
		"\u08BD\x03\x02\x02\x02\u08BF\u08C0\x03\x02\x02\x02\u08C0\u08C1\x07\x04" +
		"\x02\x02\u08C1\xAB\x03\x02\x02\x02\u08C2\u08C3\x07K\x02\x02\u08C3\u08C4" +
		"\x05\u0280\u0141\x02\u08C4\u08C5\x07\x04\x02\x02\u08C5\xAD\x03\x02\x02" +
		"\x02\u08C6\u08CA\x07L\x02\x02\u08C7\u08CB\x05\x0E\b\x02\u08C8\u08CB\x05" +
		"\u048A\u0246\x02\u08C9\u08CB\x05\u0484\u0243\x02\u08CA\u08C7\x03\x02\x02" +
		"\x02\u08CA\u08C8\x03\x02\x02\x02\u08CA\u08C9\x03\x02\x02\x02\u08CB\u08CC" +
		"\x03\x02\x02\x02\u08CC\u08CD\x07\x04\x02\x02\u08CD\xAF\x03\x02\x02\x02" +
		"\u08CE\u08CF\x07M\x02\x02\u08CF\u08D0\x05\u02A4\u0153\x02\u08D0\u08D1" +
		"\x05\u05A2\u02D2\x02\u08D1\u08D2\x05\u02A0\u0151\x02\u08D2\u08D9\x05\xB2" +
		"Z\x02\u08D3\u08D8\x05\x96L\x02\u08D4\u08D8\x05\xB4[\x02\u08D5\u08D8\x05" +
		"\xC8e\x02\u08D6\u08D8\x05\u0638\u031D\x02\u08D7\u08D3\x03\x02\x02\x02" +
		"\u08D7\u08D4\x03\x02\x02\x02\u08D7\u08D5\x03\x02\x02\x02\u08D7\u08D6\x03" +
		"\x02\x02\x02\u08D8\u08DB\x03\x02\x02\x02\u08D9\u08D7\x03\x02\x02\x02\u08D9" +
		"\u08DA\x03\x02\x02\x02\u08DA\u08DC\x03\x02\x02\x02\u08DB\u08D9\x03\x02" +
		"\x02\x02\u08DC\u08DD\x07\x04\x02\x02\u08DD\xB1\x03\x02\x02\x02\u08DE\u08DF" +
		"\x07N\x02\x02\u08DF\u08E3\x05\u0430\u0219\x02\u08E0\u08E2\x05\xC4c\x02" +
		"\u08E1\u08E0\x03\x02\x02\x02\u08E2\u08E5\x03\x02\x02\x02\u08E3\u08E1\x03" +
		"\x02\x02\x02\u08E3\u08E4\x03\x02\x02\x02\u08E4\u08E6\x03\x02\x02\x02\u08E5" +
		"\u08E3\x03\x02\x02\x02\u08E6\u08E7\x07\x04\x02\x02\u08E7\xB3\x03\x02\x02" +
		"\x02\u08E8\u08E9\x07O\x02\x02\u08E9\u08EA\x05\u02A4\u0153\x02\u08EA\u08EB" +
		"\x05\u05A2\u02D2\x02\u08EB\u08EC\x05\u02A0\u0151\x02\u08EC\u08F3\x05\xB2" +
		"Z\x02\u08ED\u08F2\x05\x96L\x02\u08EE\u08F2\x05\xB4[\x02\u08EF\u08F2\x05" +
		"\xC8e\x02\u08F0\u08F2\x05\u0638\u031D\x02\u08F1\u08ED\x03\x02\x02\x02" +
		"\u08F1\u08EE\x03\x02\x02\x02\u08F1\u08EF\x03\x02\x02\x02\u08F1\u08F0\x03" +
		"\x02\x02\x02\u08F2\u08F5\x03\x02\x02\x02\u08F3\u08F1\x03\x02\x02\x02\u08F3" +
		"\u08F4\x03\x02\x02\x02\u08F4\u08F6\x03\x02\x02\x02\u08F5\u08F3\x03\x02" +
		"\x02\x02\u08F6\u08F7\x07\x04\x02\x02\u08F7\xB5\x03\x02\x02\x02\u08F8\u08F9" +
		"\x07P\x02\x02\u08F9\u08FA\x05\xB8]\x02\u08FA\u0904\x05\u01E0\xF1\x02\u08FB" +
		"\u0903\x05\x96L\x02\u08FC\u0903\x05\xB0Y\x02\u08FD\u0903\x05\xB6\\\x02" +
		"\u08FE\u0903\x05\xBA^\x02\u08FF\u0903\x05\xBE`\x02\u0900\u0903\x05\u05FC" +
		"\u02FF\x02\u0901\u0903\x05\u0638\u031D\x02\u0902\u08FB\x03\x02\x02\x02" +
		"\u0902\u08FC\x03\x02\x02\x02\u0902\u08FD\x03\x02\x02\x02\u0902\u08FE\x03" +
		"\x02\x02\x02\u0902\u08FF\x03\x02\x02\x02\u0902\u0900\x03\x02\x02\x02\u0902" +
		"\u0901\x03\x02\x02\x02\u0903\u0906\x03\x02\x02\x02\u0904\u0902\x03\x02" +
		"\x02\x02\u0904\u0905\x03\x02\x02\x02\u0905\u0907\x03\x02\x02\x02\u0906" +
		"\u0904\x03\x02\x02\x02\u0907\u0908\x07\x04\x02\x02\u0908\xB7\x03\x02\x02" +
		"\x02\u0909\u090A\x05\u0370\u01B9\x02\u090A\xB9\x03\x02\x02\x02\u090B\u090C" +
		"\x07Q\x02\x02\u090C\u090D\x05\u02A4\u0153\x02\u090D\u090E\x05\u05B2\u02DA" +
		"\x02\u090E\u090F\x05\u02A0\u0151\x02\u090F\u0915\x05\xBC_\x02\u0910\u0914" +
		"\x05\x96L\x02\u0911\u0914\x05\xCAf\x02\u0912\u0914\x05\u0638\u031D\x02" +
		"\u0913\u0910\x03\x02\x02\x02\u0913\u0911\x03\x02\x02\x02\u0913\u0912\x03" +
		"\x02\x02\x02\u0914\u0917\x03\x02\x02\x02\u0915\u0913\x03\x02\x02\x02\u0915" +
		"\u0916\x03\x02\x02\x02\u0916\u0918\x03\x02\x02\x02\u0917\u0915\x03\x02" +
		"\x02\x02\u0918\u0919\x07\x04\x02\x02\u0919\xBB\x03\x02\x02\x02\u091A\u091D" +
		"\x07R\x02\x02\u091B\u091E\x05\u0430\u0219\x02\u091C\u091E\x05\u02C4\u0163" +
		"\x02\u091D\u091B\x03\x02\x02\x02\u091D\u091C\x03\x02\x02\x02\u091E\u0922" +
		"\x03\x02\x02\x02\u091F\u0921\x05\xC4c\x02\u0920\u091F\x03\x02\x02\x02" +
		"\u0921\u0924\x03\x02\x02\x02\u0922\u0920\x03\x02\x02\x02\u0922\u0923\x03" +
		"\x02\x02\x02\u0923\u0925\x03\x02\x02\x02\u0924\u0922\x03\x02\x02\x02\u0925" +
		"\u0926\x07\x04\x02\x02\u0926\xBD\x03\x02\x02\x02\u0927\u0928\x07S\x02" +
		"\x02\u0928\u0929\x05\xC0a\x02\u0929\u092A\x07\x04\x02\x02\u092A\xBF\x03" +
		"\x02\x02\x02\u092B\u092C\x05\u0370\u01B9\x02\u092C\xC1\x03\x02\x02\x02" +
		"\u092D\u092E\x05\u037A\u01BE\x02\u092E\xC3\x03\x02\x02\x02\u092F\u0930" +
		"\x07T\x02\x02\u0930\u0931\x05\xC2b\x02\u0931\u0932\x07\x04\x02\x02\u0932" +
		"\xC5\x03\x02\x02\x02\u0933\u093E\x07U\x02\x02\u0934\u093D\x05\x96L\x02" +
		"\u0935\u093D\x05\xB0Y\x02\u0936\u093D\x05\xB6\\\x02\u0937\u093D\x05\xBA" +
		"^\x02\u0938\u093D\x05\xBE`\x02\u0939\u093D\x05\u0322\u0192\x02\u093A\u093D" +
		"\x05\u05FC\u02FF\x02\u093B\u093D\x05\u0638\u031D\x02\u093C\u0934\x03\x02" +
		"\x02\x02\u093C\u0935\x03\x02\x02\x02\u093C\u0936\x03\x02\x02\x02\u093C" +
		"\u0937\x03\x02\x02\x02\u093C\u0938\x03\x02\x02\x02\u093C\u0939\x03\x02" +
		"\x02\x02\u093C\u093A\x03\x02\x02\x02\u093C\u093B\x03\x02\x02\x02\u093D" +
		"\u0940\x03\x02\x02\x02\u093E\u093C\x03\x02\x02\x02\u093E\u093F\x03\x02" +
		"\x02\x02\u093F\u0941\x03\x02\x02\x02\u0940\u093E\x03\x02\x02\x02\u0941" +
		"\u0942\x07\x04\x02\x02\u0942\xC7\x03\x02\x02\x02\u0943\u0944\x07V\x02" +
		"\x02\u0944\u0945\x05\u02A4\u0153\x02\u0945\u0946\x05\u02A0\u0151\x02\u0946" +
		"\u094D\x05\xB2Z\x02\u0947\u094C\x05\x96L\x02\u0948\u094C\x05\xB4[\x02" +
		"\u0949\u094C\x05\xC8e\x02\u094A\u094C\x05\u0638\u031D\x02\u094B\u0947" +
		"\x03\x02\x02\x02\u094B\u0948\x03\x02\x02\x02\u094B\u0949\x03\x02\x02\x02" +
		"\u094B\u094A\x03\x02\x02\x02\u094C\u094F\x03\x02\x02\x02\u094D\u094B\x03" +
		"\x02\x02\x02\u094D\u094E\x03\x02\x02\x02\u094E\u0950\x03\x02\x02\x02\u094F" +
		"\u094D\x03\x02\x02\x02\u0950\u0951\x07\x04\x02\x02\u0951\xC9\x03\x02\x02" +
		"\x02\u0952\u0953\x07W\x02\x02\u0953\u0954\x05\u02A4\u0153\x02\u0954\u0955" +
		"\x05\u02A0\u0151\x02\u0955\u095B\x05\xBC_\x02\u0956\u095A\x05\x96L\x02" +
		"\u0957\u095A\x05\xCAf\x02\u0958\u095A\x05\u0638\u031D\x02\u0959\u0956" +
		"\x03\x02\x02\x02\u0959\u0957\x03\x02\x02\x02\u0959\u0958\x03\x02\x02\x02" +
		"\u095A\u095D\x03\x02\x02\x02\u095B\u0959\x03\x02\x02\x02\u095B\u095C\x03" +
		"\x02\x02\x02\u095C\u095E\x03\x02\x02\x02\u095D\u095B\x03\x02\x02\x02\u095E" +
		"\u095F\x07\x04\x02\x02\u095F\xCB\x03\x02\x02\x02\u0960\u0961\x07X\x02" +
		"\x02\u0961\u0962\x05\u05C8\u02E5\x02\u0962\u0963\x07\x04\x02\x02\u0963" +
		"\xCD\x03\x02\x02\x02\u0964\u0968\x07Y\x02\x02\u0965\u0967\x05\u0134\x9B" +
		"\x02\u0966\u0965\x03\x02\x02\x02\u0967\u096A\x03\x02\x02\x02\u0968\u0966" +
		"\x03\x02\x02\x02\u0968\u0969\x03\x02\x02\x02\u0969\u096B\x03\x02\x02\x02" +
		"\u096A\u0968\x03\x02\x02\x02\u096B\u096C\x07\x04\x02\x02\u096C\xCF\x03" +
		"\x02\x02\x02\u096D\u0970\x07Z\x02\x02\u096E\u0971\x05\u0584\u02C3\x02" +
		"\u096F\u0971\x05\u058C\u02C7\x02\u0970\u096E\x03\x02\x02\x02\u0970\u096F" +
		"\x03\x02\x02\x02\u0970\u0971\x03\x02\x02\x02\u0971\u0972\x03\x02\x02\x02" +
		"\u0972\u0973\x07\x04\x02\x02\u0973\xD1\x03\x02\x02\x02\u0974\u0975\x07" +
		"[\x02\x02\u0975\u0976\x05\u064E\u0328\x02\u0976\u0977\x05\xD4k\x02\u0977" +
		"\u0978\x05\u032C\u0197\x02\u0978\u097D\x05\xC6d\x02\u0979\u097C\x05\x96" +
		"L\x02\u097A\u097C\x05\u0638\u031D\x02\u097B\u0979\x03\x02\x02\x02\u097B" +
		"\u097A\x03\x02\x02\x02\u097C\u097F\x03\x02\x02\x02\u097D\u097B\x03\x02" +
		"\x02\x02\u097D\u097E\x03\x02\x02\x02\u097E\u0980\x03\x02\x02\x02\u097F" +
		"\u097D\x03\x02\x02\x02\u0980\u0981\x07\x04\x02\x02\u0981\xD3\x03\x02\x02" +
		"\x02\u0982\u0983\x07\\\x02\x02\u0983\u098C\x05\xD0i\x02\u0984\u098B\x05" +
		"\u0116\x8C\x02\u0985\u098B\x05\u0142\xA2\x02\u0986\u098B\x05\u0376\u01BC" +
		"\x02\u0987\u098B\x05\u045C\u022F\x02\u0988\u098B\x05\u0462\u0232\x02\u0989" +
		"\u098B\x05\u05BA\u02DE\x02\u098A\u0984\x03\x02\x02\x02\u098A\u0985\x03" +
		"\x02\x02\x02\u098A\u0986\x03\x02\x02\x02\u098A\u0987\x03\x02\x02\x02\u098A" +
		"\u0988\x03\x02\x02\x02\u098A\u0989\x03\x02\x02\x02\u098B\u098E\x03\x02" +
		"\x02\x02\u098C\u098A\x03\x02\x02\x02\u098C\u098D\x03\x02\x02\x02\u098D" +
		"\u098F\x03\x02\x02\x02\u098E\u098C\x03\x02\x02\x02\u098F\u0990\x07\x04" +
		"\x02\x02\u0990\xD5\x03\x02\x02\x02\u0991\u0992\x05\u0370\u01B9\x02\u0992" +
		"\xD7\x03\x02\x02\x02\u0993\u0994\x05\u037A\u01BE\x02\u0994\xD9\x03\x02" +
		"\x02\x02\u0995\u099B\x07]\x02\x02\u0996\u099A\x05<\x1F\x02\u0997\u099A" +
		"\x05\u027A\u013E\x02\u0998\u099A\x05\u05C2\u02E2\x02\u0999\u0996\x03\x02" +
		"\x02\x02\u0999\u0997\x03\x02\x02\x02\u0999\u0998\x03\x02\x02\x02\u099A" +
		"\u099D\x03\x02\x02\x02\u099B\u0999\x03\x02\x02\x02\u099B\u099C\x03\x02" +
		"\x02\x02\u099C\u099E\x03\x02\x02\x02\u099D\u099B\x03\x02\x02\x02\u099E" +
		"\u099F\x07\x04\x02\x02\u099F\xDB\x03\x02\x02\x02\u09A0\u09A1\x07^\x02" +
		"\x02\u09A1\u09A2\x05\u0680\u0341\x02\u09A2\u09A3\x07\x04\x02\x02\u09A3" +
		"\xDD\x03\x02\x02\x02\u09A4\u09A8\x07_\x02\x02\u09A5\u09A9\x05\x0E\b\x02" +
		"\u09A6\u09A9\x05\u048A\u0246\x02\u09A7\u09A9\x05\u0484\u0243\x02\u09A8" +
		"\u09A5\x03\x02\x02\x02\u09A8\u09A6\x03\x02\x02\x02\u09A8\u09A7\x03\x02" +
		"\x02\x02\u09A9\u09AA\x03\x02\x02\x02\u09AA\u09AB\x07\x04\x02\x02\u09AB" +
		"\xDF\x03\x02\x02\x02\u09AC\u09AD\x07`\x02\x02\u09AD\u09B1\x05\u0678\u033D" +
		"\x02\u09AE\u09B0\x05\u0680\u0341\x02\u09AF\u09AE\x03\x02\x02\x02\u09B0" +
		"\u09B3\x03\x02\x02\x02\u09B1\u09AF\x03\x02\x02\x02\u09B1\u09B2\x03\x02" +
		"\x02\x02\u09B2\u09B4\x03\x02\x02\x02\u09B3\u09B1\x03\x02\x02\x02\u09B4" +
		"\u09B5\x07\x04\x02\x02\u09B5\xE1\x03\x02\x02\x02\u09B6\u09BA\x07a\x02" +
		"\x02\u09B7\u09BB\x05\x0E\b\x02\u09B8\u09BB\x05\u048A\u0246\x02\u09B9\u09BB" +
		"\x05\u0484\u0243\x02\u09BA\u09B7\x03\x02\x02\x02\u09BA\u09B8\x03\x02\x02" +
		"\x02\u09BA\u09B9\x03\x02\x02\x02\u09BB\u09BC\x03\x02\x02\x02\u09BC\u09BD" +
		"\x07\x04\x02\x02\u09BD\xE3\x03\x02\x02\x02\u09BE\u09C2\x07b\x02\x02\u09BF" +
		"\u09C3\x05\u0612\u030A\x02\u09C0\u09C3\x05\u049C\u024F\x02\u09C1\u09C3" +
		"\x05\u0178\xBD\x02\u09C2\u09BF\x03\x02\x02\x02\u09C2\u09C0\x03\x02\x02" +
		"\x02\u09C2\u09C1\x03\x02\x02\x02\u09C3\u09C4\x03\x02\x02\x02\u09C4\u09C5" +
		"\x07\x04\x02\x02\u09C5\xE5\x03\x02\x02\x02\u09C6\u09C7\x07c\x02\x02\u09C7" +
		"\u09C8\x05\u0624\u0313\x02\u09C8\u09C9\x07\x04\x02\x02\u09C9\xE7\x03\x02" +
		"\x02\x02\u09CA\u09CB\x07d\x02\x02\u09CB\u09CC\x05\u0292\u014A\x02\u09CC" +
		"\u09CD\x07\x04\x02\x02\u09CD\xE9\x03\x02\x02\x02\u09CE\u09D2\x07e\x02" +
		"\x02\u09CF\u09D1\x05\u0134\x9B\x02\u09D0\u09CF\x03\x02\x02\x02\u09D1\u09D4" +
		"\x03\x02\x02\x02\u09D2\u09D0\x03\x02\x02\x02\u09D2\u09D3\x03\x02\x02\x02" +
		"\u09D3\u09D5\x03\x02\x02\x02\u09D4\u09D2\x03\x02\x02\x02\u09D5\u09D6\x07" +
		"\x04\x02\x02\u09D6\xEB\x03\x02\x02\x02\u09D7\u09D8\x07f\x02\x02\u09D8" +
		"\u09D9\x05\xEEx\x02\u09D9\u09DA\x07\x04\x02\x02\u09DA\xED\x03\x02\x02" +
		"\x02\u09DB\u09DC\x05\u035A\u01AE\x02\u09DC\xEF\x03\x02\x02\x02\u09DD\u09E2" +
		"\x07g\x02\x02\u09DE\u09E1\x05\x1C\x0F\x02\u09DF\u09E1\x05\u0412\u020A" +
		"\x02\u09E0\u09DE\x03\x02\x02\x02\u09E0\u09DF\x03\x02\x02\x02\u09E1\u09E4" +
		"\x03\x02\x02\x02\u09E2\u09E0\x03\x02\x02\x02\u09E2\u09E3\x03\x02\x02\x02" +
		"\u09E3\u09E5\x03\x02\x02\x02\u09E4\u09E2\x03\x02\x02\x02\u09E5\u09E6\x07" +
		"\x04\x02\x02\u09E6\xF1\x03\x02\x02\x02\u09E7\u09E8\x07h\x02\x02\u09E8" +
		"\u09EA\x05\u0680\u0341\x02\u09E9\u09EB\x05\u063C\u031F\x02\u09EA\u09E9" +
		"\x03\x02\x02\x02\u09EA\u09EB\x03\x02\x02\x02\u09EB\u09EC\x03\x02\x02\x02" +
		"\u09EC\u09ED\x07\x04\x02\x02\u09ED\xF3\x03\x02\x02\x02\u09EE\u09EF\x07" +
		"i\x02\x02\u09EF\u09F0\x05\u067A\u033E\x02\u09F0\u09F1\x05\u0366\u01B4" +
		"\x02\u09F1\u09F2\x05\xF6|\x02\u09F2\u09F3\x07\x04\x02\x02\u09F3\xF5\x03" +
		"\x02\x02\x02\u09F4\u09F5\x05\u067E\u0340\x02\u09F5\xF7\x03\x02\x02\x02" +
		"\u09F6\u09F7\x07j\x02\x02\u09F7\u09F8\x05\u039C\u01CF\x02\u09F8\u09F9" +
		"\x07\x04\x02\x02\u09F9\xF9\x03\x02\x02\x02\u09FA\u09FE\x07k\x02\x02\u09FB" +
		"\u09FF\x05\x0E\b\x02\u09FC\u09FF\x05\u048A\u0246\x02\u09FD\u09FF\x05\u0484" +
		"\u0243\x02\u09FE\u09FB\x03\x02\x02\x02\u09FE\u09FC\x03\x02\x02\x02\u09FE" +
		"\u09FD\x03\x02\x02\x02\u09FF\u0A00\x03\x02\x02\x02\u0A00\u0A01\x07\x04" +
		"\x02\x02\u0A01\xFB\x03\x02\x02\x02\u0A02\u0A03\x07l\x02\x02\u0A03\u0A04" +
		"\x05\u039C\u01CF\x02\u0A04\u0A05\x07\x04\x02\x02\u0A05\xFD\x03\x02\x02" +
		"\x02\u0A06\u0A0A\x07m\x02\x02\u0A07\u0A0B\x05\x0E\b\x02\u0A08\u0A0B\x05" +
		"\u048A\u0246\x02\u0A09\u0A0B\x05\u0484\u0243\x02\u0A0A\u0A07\x03\x02\x02" +
		"\x02\u0A0A\u0A08\x03\x02\x02\x02\u0A0A\u0A09\x03\x02\x02\x02\u0A0B\u0A0C" +
		"\x03\x02\x02\x02\u0A0C\u0A0D\x07\x04\x02\x02\u0A0D\xFF\x03\x02\x02\x02" +
		"\u0A0E\u0A0F\x07n\x02\x02\u0A0F\u0A10\x05\u039C\u01CF\x02\u0A10\u0A11" +
		"\x07\x04\x02\x02\u0A11\u0101\x03\x02\x02\x02\u0A12\u0A16\x07o\x02\x02" +
		"\u0A13\u0A17\x05\x0E\b\x02\u0A14\u0A17\x05\u048A\u0246\x02\u0A15\u0A17" +
		"\x05\u0484\u0243\x02\u0A16\u0A13\x03\x02\x02\x02\u0A16\u0A14\x03\x02\x02" +
		"\x02\u0A16\u0A15\x03\x02\x02\x02\u0A17\u0A18\x03\x02\x02\x02\u0A18\u0A19" +
		"\x07\x04\x02\x02\u0A19\u0103\x03\x02\x02\x02\u0A1A\u0A1B\x07p\x02\x02" +
		"\u0A1B\u0A1C\x05\u039C\u01CF\x02\u0A1C\u0A1D\x07\x04\x02\x02\u0A1D\u0105" +
		"\x03\x02\x02\x02\u0A1E\u0A22\x07q\x02\x02\u0A1F\u0A23\x05\x0E\b\x02\u0A20" +
		"\u0A23\x05\u048A\u0246\x02\u0A21\u0A23\x05\u0484\u0243\x02\u0A22\u0A1F" +
		"\x03\x02\x02\x02\u0A22\u0A20\x03\x02\x02\x02\u0A22\u0A21\x03\x02\x02\x02" +
		"\u0A23\u0A24\x03\x02\x02\x02\u0A24\u0A25\x07\x04\x02\x02\u0A25\u0107\x03" +
		"\x02\x02\x02\u0A26\u0A27\x07r\x02\x02\u0A27\u0A29\x05\u0280\u0141\x02" +
		"\u0A28\u0A2A\x05\u0356\u01AC\x02\u0A29\u0A28\x03\x02\x02\x02\u0A29\u0A2A" +
		"\x03\x02\x02\x02\u0A2A\u0A2B\x03\x02\x02\x02\u0A2B\u0A2C\x07\x04\x02\x02" +
		"\u0A2C\u0109\x03\x02\x02\x02\u0A2D\u0A2E\x07s\x02\x02\u0A2E\u0A2F\x05" +
		"\x80A\x02\u0A2F\u0A30\x07\x04\x02\x02\u0A30\u010B\x03\x02\x02\x02\u0A31" +
		"\u0A32\x07t\x02\x02\u0A32\u0A33\x05\u020A\u0106\x02\u0A33\u0A34\x07\x04" +
		"\x02\x02\u0A34\u010D\x03\x02\x02\x02\u0A35\u0A36\x07u\x02\x02\u0A36\u0A37" +
		"\x05\u0624\u0313\x02\u0A37\u0A38\x07\x04\x02\x02\u0A38\u010F\x03\x02\x02" +
		"\x02\u0A39\u0A3A\x07v\x02\x02\u0A3A\u0A3B\x05\u05F4\u02FB\x02\u0A3B\u0A3C" +
		"\x07\x04\x02\x02\u0A3C\u0111\x03\x02\x02\x02\u0A3D\u0A3E\x05\u0292\u014A" +
		"\x02\u0A3E\u0113\x03\x02\x02\x02\u0A3F\u0A43\x05V,\x02\u0A40\u0A43\x05" +
		"\u034E\u01A8\x02\u0A41\u0A43\x05\u048C\u0247\x02\u0A42\u0A3F\x03\x02\x02" +
		"\x02\u0A42\u0A40\x03\x02\x02\x02\u0A42\u0A41\x03\x02\x02\x02\u0A43\u0115" +
		"\x03\x02\x02\x02\u0A44\u0A45\x07w\x02\x02\u0A45\u0A47\x05\u0658\u032D" +
		"\x02";
	private static readonly _serializedATNSegment6: string =
		"\u0A46\u0A48\x05\u047E\u0240\x02\u0A47\u0A46\x03\x02\x02\x02\u0A47\u0A48" +
		"\x03\x02\x02\x02\u0A48\u0A49\x03\x02\x02\x02\u0A49\u0A4A\x07\x04\x02\x02" +
		"\u0A4A\u0117\x03\x02\x02\x02\u0A4B\u0A4C\x07x\x02\x02\u0A4C\u0A4D\x05" +
		"\u012A\x96\x02\u0A4D\u0A4E\x05j6\x02\u0A4E\u0A54\x05\u011E\x90\x02\u0A4F" +
		"\u0A53\x05\x96L\x02\u0A50\u0A53\x05\u0120\x91\x02\u0A51\u0A53\x05\u0638" +
		"\u031D\x02\u0A52\u0A4F\x03\x02\x02\x02\u0A52\u0A50\x03\x02\x02\x02\u0A52" +
		"\u0A51\x03\x02\x02\x02\u0A53\u0A56\x03\x02\x02\x02\u0A54\u0A52\x03\x02" +
		"\x02\x02\u0A54\u0A55\x03\x02\x02\x02\u0A55\u0A57\x03\x02\x02\x02\u0A56" +
		"\u0A54\x03\x02\x02\x02\u0A57\u0A58\x07\x04\x02\x02\u0A58\u0119\x03\x02" +
		"\x02\x02\u0A59\u0A5A\x07y\x02\x02\u0A5A\u0A5B\x05\u05D6\u02EC\x02\u0A5B" +
		"\u0A5C\x07\x04\x02\x02\u0A5C\u011B\x03\x02\x02\x02\u0A5D\u0A61\x07z\x02" +
		"\x02\u0A5E\u0A62\x05\x0E\b\x02\u0A5F\u0A62\x05\u048A\u0246\x02\u0A60\u0A62" +
		"\x05\u0484\u0243\x02\u0A61\u0A5E\x03\x02\x02\x02\u0A61\u0A5F\x03\x02\x02" +
		"\x02\u0A61\u0A60\x03\x02\x02\x02\u0A62\u0A63\x03\x02\x02\x02\u0A63\u0A64" +
		"\x07\x04\x02\x02\u0A64\u011D\x03\x02\x02\x02\u0A65\u0A66\x07{\x02\x02" +
		"\u0A66\u0A6D\x05\u012C\x97\x02\u0A67\u0A6C\x05\u0142\xA2\x02\u0A68\u0A6C" +
		"\x05\u0376\u01BC\x02\u0A69\u0A6C\x05\u0462\u0232\x02\u0A6A\u0A6C\x05\u05BA" +
		"\u02DE\x02\u0A6B\u0A67\x03\x02\x02\x02\u0A6B\u0A68\x03\x02\x02\x02\u0A6B" +
		"\u0A69\x03\x02\x02\x02\u0A6B\u0A6A\x03\x02\x02\x02\u0A6C\u0A6F\x03\x02" +
		"\x02\x02\u0A6D\u0A6B\x03\x02\x02\x02\u0A6D\u0A6E\x03\x02\x02\x02\u0A6E" +
		"\u0A70\x03\x02\x02\x02\u0A6F\u0A6D\x03\x02\x02\x02\u0A70\u0A71\x07\x04" +
		"\x02\x02\u0A71\u011F\x03\x02\x02\x02\u0A72\u0A73\x07|\x02\x02\u0A73\u0A74" +
		"\x05\u0126\x94\x02\u0A74\u0A75\x05\x92J\x02\u0A75\u0A76\x05\x82B\x02\u0A76" +
		"\u0A78\x05\u0122\x92\x02\u0A77\u0A79\x05\u03A2\u01D2\x02\u0A78\u0A77\x03" +
		"\x02\x02\x02\u0A78\u0A79\x03\x02\x02\x02\u0A79\u0A7A\x03\x02\x02\x02\u0A7A" +
		"\u0A7B\x07\x04\x02\x02\u0A7B\u0121\x03\x02\x02\x02\u0A7C\u0A85\x07}\x02" +
		"\x02\u0A7D\u0A84\x05F$\x02\u0A7E\u0A84\x05\u0284\u0143\x02\u0A7F\u0A84" +
		"\x05\u0376\u01BC\x02\u0A80\u0A84\x05\u0396\u01CC\x02\u0A81\u0A84\x05\u0462" +
		"\u0232\x02\u0A82\u0A84\x05\u05CE\u02E8\x02\u0A83\u0A7D\x03\x02\x02\x02" +
		"\u0A83\u0A7E\x03\x02\x02\x02\u0A83\u0A7F\x03\x02\x02\x02\u0A83\u0A80\x03" +
		"\x02\x02\x02\u0A83\u0A81\x03\x02\x02\x02\u0A83\u0A82\x03\x02\x02\x02\u0A84" +
		"\u0A87\x03\x02\x02\x02\u0A85\u0A83\x03\x02\x02\x02\u0A85\u0A86\x03\x02" +
		"\x02\x02\u0A86\u0A88\x03\x02\x02\x02\u0A87\u0A85\x03\x02\x02\x02\u0A88" +
		"\u0A89\x07\x04\x02\x02\u0A89\u0123\x03\x02\x02\x02\u0A8A\u0A8B\x07~\x02" +
		"\x02\u0A8B\u0A8C\x05J&\x02\u0A8C\u0A8D\x07\x04\x02\x02\u0A8D\u0125\x03" +
		"\x02\x02\x02\u0A8E\u0A8F\x05\u0370\u01B9\x02\u0A8F\u0127\x03\x02\x02\x02" +
		"\u0A90\u0A91\x07\x7F\x02\x02\u0A91\u0A92\x05J&\x02\u0A92\u0A93\x07\x04" +
		"\x02\x02\u0A93\u0129\x03\x02\x02\x02\u0A94\u0A95\x05\u0370\u01B9\x02\u0A95" +
		"\u012B\x03\x02\x02\x02\u0A96\u0A9B\x07\x80\x02\x02\u0A97\u0A9A\x05\u0584" +
		"\u02C3\x02\u0A98\u0A9A\x05\u058C\u02C7\x02\u0A99\u0A97\x03\x02\x02\x02" +
		"\u0A99\u0A98\x03\x02\x02\x02\u0A9A\u0A9D\x03\x02\x02\x02\u0A9B\u0A99\x03" +
		"\x02\x02\x02\u0A9B\u0A9C\x03\x02\x02\x02\u0A9C\u0A9E\x03\x02\x02\x02\u0A9D" +
		"\u0A9B\x03\x02\x02\x02\u0A9E\u0A9F\x07\x04\x02\x02\u0A9F\u012D\x03\x02" +
		"\x02\x02\u0AA0\u0AA1\x07\x81\x02\x02\u0AA1\u0AA8\x05\u0130\x99\x02\u0AA2" +
		"\u0AA7\x05\x16\f\x02\u0AA3\u0AA7\x05\x96L\x02\u0AA4\u0AA7\x05\u0198\xCD" +
		"\x02\u0AA5\u0AA7\x05\u0638\u031D\x02\u0AA6\u0AA2\x03\x02\x02\x02\u0AA6" +
		"\u0AA3\x03\x02\x02\x02\u0AA6\u0AA4\x03\x02\x02\x02\u0AA6\u0AA5\x03\x02" +
		"\x02\x02\u0AA7\u0AAA\x03\x02\x02\x02\u0AA8\u0AA6\x03\x02\x02\x02\u0AA8" +
		"\u0AA9\x03\x02\x02\x02\u0AA9\u0AAB\x03\x02\x02\x02\u0AAA\u0AA8\x03\x02" +
		"\x02\x02\u0AAB\u0AAC\x07\x04\x02\x02\u0AAC\u012F\x03\x02\x02\x02\u0AAD" +
		"\u0AAE\x05\u0370\u01B9\x02\u0AAE\u0131\x03\x02\x02\x02\u0AAF\u0AB3\x07" +
		"\x82\x02\x02\u0AB0\u0AB4\x05\u0254\u012B\x02\u0AB1\u0AB4\x05\u03C0\u01E1" +
		"\x02\u0AB2\u0AB4\x052\x1A\x02\u0AB3\u0AB0\x03\x02\x02\x02\u0AB3\u0AB1" +
		"\x03\x02\x02\x02\u0AB3\u0AB2\x03\x02\x02\x02\u0AB4\u0AB5\x03\x02\x02\x02" +
		"\u0AB5\u0AB6\x07\x04\x02\x02\u0AB6\u0133\x03\x02\x02\x02\u0AB7\u0ABC\x07" +
		"\x83\x02\x02\u0AB8\u0ABB\x05\u01A0\xD1\x02\u0AB9\u0ABB\x05\u01A2\xD2\x02" +
		"\u0ABA\u0AB8\x03\x02\x02\x02\u0ABA\u0AB9\x03\x02\x02\x02\u0ABB\u0ABE\x03" +
		"\x02\x02\x02\u0ABC\u0ABA\x03\x02\x02\x02\u0ABC\u0ABD\x03\x02\x02\x02\u0ABD" +
		"\u0ABF\x03\x02\x02\x02\u0ABE\u0ABC\x03\x02\x02\x02\u0ABF\u0AC0\x05\u060C" +
		"\u0307\x02\u0AC0\u0AC1\x07\x04\x02\x02\u0AC1\u0135\x03\x02\x02\x02\u0AC2" +
		"\u0AD0\x07\x84\x02\x02\u0AC3\u0ACF\x05N(\x02\u0AC4\u0ACF\x05P)\x02\u0AC5" +
		"\u0ACF\x05R*\x02\u0AC6\u0ACF\x05\x94K\x02\u0AC7\u0ACF\x05\u01A4\xD3\x02" +
		"\u0AC8\u0ACF\x05\u01A6\xD4\x02\u0AC9\u0ACF\x05\u01C0\xE1\x02\u0ACA\u0ACF" +
		"\x05\u0214\u010B\x02\u0ACB\u0ACF\x05\u05EE\u02F8\x02\u0ACC\u0ACF\x05\u063E" +
		"\u0320\x02\u0ACD\u0ACF\x05\u065A\u032E\x02\u0ACE\u0AC3\x03\x02\x02\x02" +
		"\u0ACE\u0AC4\x03\x02\x02\x02\u0ACE\u0AC5\x03\x02\x02\x02\u0ACE\u0AC6\x03" +
		"\x02\x02\x02\u0ACE\u0AC7\x03\x02\x02\x02\u0ACE\u0AC8\x03\x02\x02\x02\u0ACE" +
		"\u0AC9\x03\x02\x02\x02\u0ACE\u0ACA\x03\x02\x02\x02\u0ACE\u0ACB\x03\x02" +
		"\x02\x02\u0ACE\u0ACC\x03\x02\x02\x02\u0ACE\u0ACD\x03\x02\x02\x02\u0ACF" +
		"\u0AD2\x03\x02\x02\x02\u0AD0\u0ACE\x03\x02\x02\x02\u0AD0\u0AD1\x03\x02" +
		"\x02\x02\u0AD1\u0AD3\x03\x02\x02\x02\u0AD2\u0AD0\x03\x02\x02\x02\u0AD3" +
		"\u0AD4\x07\x04\x02\x02\u0AD4\u0137\x03\x02\x02\x02\u0AD5\u0AD6\x07\x85" +
		"\x02\x02\u0AD6\u0AD7\x05\u0680\u0341\x02\u0AD7\u0AD8\x07\x04\x02\x02\u0AD8" +
		"\u0139\x03\x02\x02\x02\u0AD9\u0ADA\x07\x86\x02\x02\u0ADA\u0ADE\x05\u0680" +
		"\u0341\x02\u0ADB\u0ADF\x05\x0E\b\x02\u0ADC\u0ADF\x05\u048A\u0246\x02\u0ADD" +
		"\u0ADF\x05\u0484\u0243\x02\u0ADE\u0ADB\x03\x02\x02\x02\u0ADE\u0ADC\x03" +
		"\x02\x02\x02\u0ADE\u0ADD\x03\x02\x02\x02\u0ADF\u0AE0\x03\x02\x02\x02\u0AE0" +
		"\u0AE1\x07\x04\x02\x02\u0AE1\u013B\x03\x02\x02\x02\u0AE2\u0AE3\x05\u0292" +
		"\u014A\x02\u0AE3\u013D\x03\x02\x02\x02\u0AE4\u0AE5\x05\u0280\u0141\x02" +
		"\u0AE5\u013F\x03\x02\x02\x02\u0AE6\u0AE7\x05\u0280\u0141\x02\u0AE7\u0141" +
		"\x03\x02\x02\x02\u0AE8\u0AE9\x07\x87\x02\x02\u0AE9\u0AEA\x05\u0148\xA5" +
		"\x02\u0AEA\u0AEE\x05\u0144\xA3\x02\u0AEB\u0AED\x05\u057A\u02BE\x02\u0AEC" +
		"\u0AEB\x03\x02\x02\x02\u0AED\u0AF0\x03\x02\x02\x02\u0AEE\u0AEC\x03\x02" +
		"\x02\x02\u0AEE\u0AEF\x03\x02\x02\x02\u0AEF\u0AF1\x03\x02\x02\x02\u0AF0" +
		"\u0AEE\x03\x02\x02\x02\u0AF1\u0AF2\x07\x04\x02\x02\u0AF2\u0143\x03\x02" +
		"\x02\x02\u0AF3\u0AF4\x07\x88\x02\x02\u0AF4\u0AFA\x05\u014A\xA6\x02\u0AF5" +
		"\u0AF9\x05&\x14\x02\u0AF6\u0AF9\x05\u0376\u01BC\x02\u0AF7\u0AF9\x05\u05BA" +
		"\u02DE\x02\u0AF8\u0AF5\x03\x02\x02\x02\u0AF8\u0AF6\x03\x02\x02\x02\u0AF8" +
		"\u0AF7\x03\x02\x02\x02\u0AF9\u0AFC\x03\x02\x02\x02\u0AFA\u0AF8\x03\x02" +
		"\x02\x02\u0AFA\u0AFB\x03\x02\x02\x02\u0AFB\u0AFD\x03\x02\x02\x02\u0AFC" +
		"\u0AFA\x03\x02\x02\x02\u0AFD\u0AFE\x07\x04\x02\x02\u0AFE\u0145\x03\x02" +
		"\x02\x02\u0AFF\u0B00\x07\x89\x02\x02\u0B00\u0B01\x05J&\x02\u0B01\u0B02" +
		"\x07\x04\x02\x02\u0B02\u0147\x03\x02\x02\x02\u0B03\u0B04\x05\u0370\u01B9" +
		"\x02\u0B04\u0149\x03\x02\x02\x02\u0B05\u0B0A\x07\x8A\x02\x02\u0B06\u0B09" +
		"\x05\u0582\u02C2\x02\u0B07\u0B09\x05\u0588\u02C5\x02\u0B08\u0B06\x03\x02" +
		"\x02\x02\u0B08\u0B07\x03\x02\x02\x02\u0B09\u0B0C\x03\x02\x02\x02\u0B0A" +
		"\u0B08\x03\x02\x02\x02\u0B0A\u0B0B\x03\x02\x02\x02\u0B0B\u0B0D\x03\x02" +
		"\x02\x02\u0B0C\u0B0A\x03\x02\x02\x02\u0B0D\u0B0E\x07\x04\x02\x02\u0B0E" +
		"\u014B\x03\x02\x02\x02\u0B0F\u0B13\x07\x8B\x02\x02\u0B10\u0B12\x05\u033C" +
		"\u019F\x02\u0B11\u0B10\x03\x02\x02\x02\u0B12\u0B15\x03\x02\x02\x02\u0B13" +
		"\u0B11\x03\x02\x02\x02\u0B13\u0B14\x03\x02\x02\x02\u0B14\u0B16\x03\x02" +
		"\x02\x02\u0B15\u0B13\x03\x02\x02\x02\u0B16\u0B17\x07\x04\x02\x02\u0B17" +
		"\u014D\x03\x02\x02\x02\u0B18\u0B19\x07\x8C\x02\x02\u0B19\u0B1A\x05\u0412" +
		"\u020A\x02\u0B1A\u0B1B\x07\x04\x02\x02\u0B1B\u014F\x03\x02\x02\x02\u0B1C" +
		"\u0B1D\x07\x8D\x02\x02\u0B1D\u0B1E\x05\u0680\u0341\x02\u0B1E\u0B1F\x07" +
		"\x04\x02\x02\u0B1F\u0151\x03\x02\x02\x02\u0B20\u0B24\x07\x8E\x02\x02\u0B21" +
		"\u0B25\x05\x0E\b\x02\u0B22\u0B25\x05\u048A\u0246\x02\u0B23\u0B25\x05\u0484" +
		"\u0243\x02\u0B24\u0B21\x03\x02\x02\x02\u0B24\u0B22\x03\x02\x02\x02\u0B24" +
		"\u0B23\x03\x02\x02\x02\u0B25\u0B26\x03\x02\x02\x02\u0B26\u0B27\x07\x04" +
		"\x02\x02\u0B27\u0153\x03\x02\x02\x02\u0B28\u0B29\x07\x8F\x02\x02\u0B29" +
		"\u0B2A\x05\u0680\u0341\x02\u0B2A\u0B2B\x07\x04\x02\x02\u0B2B\u0155\x03" +
		"\x02\x02\x02\u0B2C\u0B30\x07\x90\x02\x02\u0B2D\u0B31\x05\x0E\b\x02\u0B2E" +
		"\u0B31\x05\u048A\u0246\x02\u0B2F\u0B31\x05\u0484\u0243\x02\u0B30\u0B2D" +
		"\x03\x02\x02\x02\u0B30\u0B2E\x03\x02\x02\x02\u0B30\u0B2F\x03\x02\x02\x02" +
		"\u0B31\u0B32\x03\x02\x02\x02\u0B32\u0B33\x07\x04\x02\x02\u0B33\u0157\x03" +
		"\x02\x02\x02\u0B34\u0B35\x07\x91\x02\x02\u0B35\u0B36\x05\u0680\u0341\x02" +
		"\u0B36\u0B37\x07\x04\x02\x02\u0B37\u0159\x03\x02\x02\x02\u0B38\u0B3C\x07" +
		"\x92\x02\x02\u0B39\u0B3D\x05\x0E\b\x02\u0B3A\u0B3D\x05\u048A\u0246\x02" +
		"\u0B3B\u0B3D\x05\u0484\u0243\x02\u0B3C\u0B39\x03\x02\x02\x02\u0B3C\u0B3A" +
		"\x03\x02\x02\x02\u0B3C\u0B3B\x03\x02\x02\x02\u0B3D\u0B3E\x03\x02\x02\x02" +
		"\u0B3E\u0B3F\x07\x04\x02\x02\u0B3F\u015B\x03\x02\x02\x02\u0B40\u0B41\x07" +
		"\x93\x02\x02\u0B41\u0B42\x05\u05FA\u02FE\x02\u0B42\u0B43\x07\x04\x02\x02" +
		"\u0B43\u015D\x03\x02\x02\x02\u0B44\u0B45\x07\x94\x02\x02\u0B45\u0B46\x05" +
		"\u0346\u01A4\x02\u0B46\u0B47\x05\u0176\xBC\x02\u0B47\u0B48\x07\x04\x02" +
		"\x02\u0B48\u015F\x03\x02\x02\x02\u0B49\u0B4A\x07\x95\x02\x02\u0B4A\u0B4B" +
		"\x05\u0168\xB5\x02\u0B4B\u0B4C\x05\u016A\xB6\x02\u0B4C\u0B54\x05\u0162" +
		"\xB2\x02\u0B4D\u0B53\x05\u030E\u0188\x02\u0B4E\u0B53\x05\u0118\x8D\x02" +
		"\u0B4F\u0B53\x05\x96L\x02\u0B50\u0B53\x05\u0190\xC9\x02\u0B51\u0B53\x05" +
		"\u0638\u031D\x02\u0B52\u0B4D\x03\x02\x02\x02\u0B52\u0B4E\x03\x02\x02\x02" +
		"\u0B52\u0B4F\x03\x02\x02\x02\u0B52\u0B50\x03\x02\x02\x02\u0B52\u0B51\x03" +
		"\x02\x02\x02\u0B53\u0B56\x03\x02\x02\x02\u0B54\u0B52\x03\x02\x02\x02\u0B54" +
		"\u0B55\x03\x02\x02\x02\u0B55\u0B57\x03\x02\x02\x02\u0B56\u0B54\x03\x02" +
		"\x02\x02\u0B57\u0B58\x07\x04\x02\x02\u0B58\u0161\x03\x02\x02\x02\u0B59" +
		"\u0B5A\x07\x96\x02\x02\u0B5A\u0B5B\x05\u0164\xB3\x02\u0B5B\u0B5C\x05\u02FE" +
		"\u0180\x02\u0B5C\u0B5D\x05\u0622\u0312\x02\u0B5D\u0B5E\x05\u01B2\xDA\x02" +
		"\u0B5E\u0B6A\x05\u0406\u0204\x02\u0B5F\u0B69\x05p9\x02\u0B60\u0B69\x05" +
		"\xDAn\x02\u0B61\u0B69\x05\u0142\xA2\x02\u0B62\u0B69\x05\u01FC\xFF\x02" +
		"\u0B63\u0B69\x05\u036E\u01B8\x02\u0B64\u0B69\x05\u0376\u01BC\x02\u0B65" +
		"\u0B69\x05\u0408\u0205\x02\u0B66\u0B69\x05\u0462\u0232\x02\u0B67\u0B69" +
		"\x05\u05BA\u02DE\x02\u0B68\u0B5F\x03\x02\x02\x02\u0B68\u0B60\x03\x02\x02" +
		"\x02\u0B68\u0B61\x03\x02\x02\x02\u0B68\u0B62\x03\x02\x02\x02\u0B68\u0B63" +
		"\x03\x02\x02\x02\u0B68\u0B64\x03\x02\x02\x02\u0B68\u0B65\x03\x02\x02\x02" +
		"\u0B68\u0B66\x03\x02\x02\x02\u0B68\u0B67\x03\x02\x02\x02\u0B69\u0B6C\x03" +
		"\x02\x02\x02\u0B6A\u0B68\x03\x02\x02\x02\u0B6A\u0B6B\x03\x02\x02\x02\u0B6B" +
		"\u0B6D\x03\x02\x02\x02\u0B6C\u0B6A\x03\x02\x02\x02\u0B6D\u0B6E\x07\x04" +
		"\x02\x02\u0B6E\u0163\x03\x02\x02\x02\u0B6F\u0B70\x07\x97\x02\x02\u0B70" +
		"\u0B71\x05\u0166\xB4\x02\u0B71\u0B72\x07\x04\x02\x02\u0B72\u0165\x03\x02" +
		"\x02\x02\u0B73\u0B74\x05\u067E\u0340\x02\u0B74\u0167\x03\x02\x02\x02\u0B75" +
		"\u0B76\x05\u0370\u01B9\x02\u0B76\u0169\x03\x02\x02\x02\u0B77\u0B78\x07" +
		"\x98\x02\x02\u0B78\u0B79\x05\u0348\u01A5\x02\u0B79\u0B7A\x05\u02BC\u015F" +
		"\x02\u0B7A\u0B7B\x05\u05DA\u02EE\x02\u0B7B\u0B7C\x07\x04\x02\x02\u0B7C" +
		"\u016B\x03\x02\x02\x02\u0B7D\u0B7E\x05\u0412\u020A\x02\u0B7E\u016D\x03" +
		"\x02\x02\x02\u0B7F\u0B83\x07\x99\x02\x02\u0B80\u0B84\x05\u0612\u030A\x02" +
		"\u0B81\u0B84\x05\u049C\u024F\x02\u0B82\u0B84\x05\u0178\xBD\x02\u0B83\u0B80" +
		"\x03\x02\x02\x02\u0B83\u0B81\x03\x02\x02\x02\u0B83\u0B82\x03\x02\x02\x02" +
		"\u0B84\u0B85\x03\x02\x02\x02\u0B85\u0B86\x07\x04\x02\x02\u0B86\u016F\x03" +
		"\x02\x02\x02\u0B87\u0B88\x07\x9A\x02\x02\u0B88\u0B89\x05\xF4{\x02\u0B89" +
		"\u0B8A\x07\x04\x02\x02\u0B8A\u0171\x03\x02\x02\x02\u0B8B\u0B8F\x07\x9B" +
		"\x02\x02\u0B8C\u0B90\x05\x0E\b\x02\u0B8D\u0B90\x05\u048A\u0246\x02\u0B8E" +
		"\u0B90\x05\u0484\u0243\x02\u0B8F\u0B8C\x03\x02\x02\x02\u0B8F\u0B8D\x03" +
		"\x02\x02\x02\u0B8F\u0B8E\x03\x02\x02\x02\u0B90\u0B91\x03\x02\x02\x02\u0B91" +
		"\u0B92\x07\x04\x02\x02\u0B92\u0173\x03\x02\x02\x02\u0B93\u0B99\x07\x9C" +
		"\x02\x02\u0B94\u0B9A\x05\u0452\u022A\x02\u0B95\u0B9A\x05\u0432\u021A\x02" +
		"\u0B96\u0B9A\x05\u0454\u022B\x02\u0B97\u0B9A\x05\u02AC\u0157\x02\u0B98" +
		"\u0B9A\x05\u02AE\u0158\x02\u0B99\u0B94\x03\x02\x02\x02\u0B99\u0B95\x03" +
		"\x02\x02\x02\u0B99\u0B96\x03\x02\x02\x02\u0B99\u0B97\x03\x02\x02\x02\u0B99" +
		"\u0B98\x03\x02\x02\x02\u0B9A\u0B9F\x03\x02\x02\x02\u0B9B\u0B9E\x05*\x16" +
		"\x02\u0B9C\u0B9E\x05\u060E\u0308\x02\u0B9D\u0B9B\x03\x02\x02\x02\u0B9D" +
		"\u0B9C\x03\x02\x02\x02\u0B9E\u0BA1\x03\x02\x02\x02\u0B9F\u0B9D\x03\x02" +
		"\x02\x02\u0B9F\u0BA0\x03\x02\x02\x02\u0BA0\u0BA2\x03\x02\x02\x02\u0BA1" +
		"\u0B9F\x03\x02\x02\x02\u0BA2\u0BA3\x07\x04\x02\x02\u0BA3\u0175\x03\x02" +
		"\x02\x02\u0BA4\u0BA5\x05\u067E\u0340\x02\u0BA5\u0177\x03\x02\x02\x02\u0BA6" +
		"\u0BA7\x07\x9D\x02\x02\u0BA7\u0BA8\x07\x04\x02\x02\u0BA8\u0179\x03\x02" +
		"\x02\x02\u0BA9\u0BAA\x05\u01D4\xEB\x02\u0BAA\u017B\x03\x02\x02\x02\u0BAB" +
		"\u0BAC\x05\u01DE\xF0\x02\u0BAC\u017D\x03\x02\x02\x02\u0BAD\u0BAE\x05\u0268" +
		"\u0135\x02\u0BAE\u017F\x03\x02\x02\x02\u0BAF\u0BB0\x05\u025C\u012F\x02" +
		"\u0BB0\u0181\x03\x02\x02\x02\u0BB1\u0BB2\x05\u02A8\u0155\x02\u0BB2\u0183" +
		"\x03\x02\x02\x02\u0BB3\u0BB4\x05\u03DA\u01EE\x02\u0BB4\u0185\x03\x02\x02" +
		"\x02\u0BB5\u0BB6\x05\u044A\u0226\x02\u0BB6\u0187\x03\x02\x02\x02\u0BB7" +
		"\u0BB8\x05\u043E\u0220\x02\u0BB8\u0189\x03\x02\x02\x02\u0BB9\u0BBA\x05" +
		"\u05B0\u02D9\x02\u0BBA\u018B\x03\x02\x02\x02\u0BBB\u0BBC\x05\u05A0\u02D1" +
		"\x02\u0BBC\u018D\x03\x02\x02\x02\u0BBD\u0BBE\x05\u05AA\u02D6\x02\u0BBE" +
		"\u018F\x03\x02\x02\x02\u0BBF\u0BC0\x07\x9E\x02\x02\u0BC0\u0BC1\x05\u0314" +
		"\u018B\x02\u0BC1\u0BD7\x05\u0310\u0189\x02\u0BC2\u0BD6\x05^0\x02\u0BC3" +
		"\u0BD6\x05\x96L\x02\u0BC4\u0BD6\x05\u01F0\xF9\x02\u0BC5\u0BD6\x05\u03CA" +
		"\u01E6\x02\u0BC6\u0BD6\x05\u03EA\u01F6\x02\u0BC7\u0BD6\x05\u04B2\u025A" +
		"\x02\u0BC8\u0BD6\x05\u04B8\u025D\x02\u0BC9\u0BD6\x05\u04C8\u0265\x02\u0BCA" +
		"\u0BD6\x05\u04CE\u0268\x02\u0BCB\u0BD6\x05\u04E4\u0273\x02\u0BCC\u0BD6" +
		"\x05\u04EC\u0277\x02\u0BCD\u0BD6\x05\u04F4\u027B\x02\u0BCE\u0BD6\x05\u0506" +
		"\u0284\x02\u0BCF\u0BD6\x05\u050E\u0288\x02\u0BD0\u0BD6\x05\u0514\u028B" +
		"\x02\u0BD1\u0BD6\x05\u0544\u02A3\x02\u0BD2\u0BD6\x05\u0556\u02AC\x02\u0BD3" +
		"\u0BD6\x05\u0560\u02B1\x02\u0BD4\u0BD6\x05\u0638\u031D\x02\u0BD5\u0BC2" +
		"\x03\x02\x02\x02\u0BD5\u0BC3\x03\x02\x02\x02\u0BD5\u0BC4\x03\x02\x02\x02" +
		"\u0BD5\u0BC5\x03\x02\x02\x02\u0BD5\u0BC6\x03\x02\x02\x02\u0BD5\u0BC7\x03" +
		"\x02\x02\x02\u0BD5\u0BC8\x03\x02\x02\x02\u0BD5\u0BC9\x03\x02\x02\x02\u0BD5" +
		"\u0BCA\x03\x02\x02\x02\u0BD5\u0BCB\x03\x02\x02\x02\u0BD5\u0BCC\x03\x02" +
		"\x02\x02\u0BD5\u0BCD\x03\x02\x02\x02\u0BD5\u0BCE\x03\x02\x02\x02\u0BD5" +
		"\u0BCF\x03\x02\x02\x02\u0BD5\u0BD0\x03\x02\x02\x02\u0BD5\u0BD1\x03\x02" +
		"\x02\x02\u0BD5\u0BD2\x03\x02\x02\x02\u0BD5\u0BD3\x03\x02\x02\x02\u0BD5" +
		"\u0BD4\x03\x02\x02\x02\u0BD6\u0BD9\x03\x02\x02\x02\u0BD7\u0BD5\x03\x02" +
		"\x02\x02\u0BD7\u0BD8\x03\x02\x02\x02\u0BD8\u0BDA\x03\x02\x02\x02\u0BD9" +
		"\u0BD7\x03\x02\x02\x02\u0BDA\u0BDB\x07\x04\x02\x02\u0BDB\u0191\x03\x02" +
		"\x02\x02\u0BDC\u0BDD\x07\x9F\x02\x02\u0BDD\u0BDE\x05\u0624\u0313\x02\u0BDE" +
		"\u0BDF\x07\x04\x02\x02\u0BDF\u0193\x03\x02\x02\x02\u0BE0\u0BE1\x07\xA0" +
		"\x02\x02\u0BE1\u0BE2\x07\x04\x02\x02\u0BE2\u0195\x03\x02\x02\x02\u0BE3" +
		"\u0BE4\x07\xA1\x02\x02\u0BE4\u0BE5\x05\u0624\u0313\x02\u0BE5\u0BE6\x07" +
		"\x04\x02\x02\u0BE6\u0197\x03\x02\x02\x02\u0BE7\u0BEA\x07\xA2\x02\x02\u0BE8" +
		"\u0BEB\x05\u01A0\xD1\x02\u0BE9\u0BEB\x05\u01A2\xD2\x02\u0BEA\u0BE8\x03" +
		"\x02\x02\x02\u0BEA\u0BE9\x03\x02\x02\x02\u0BEB\u0BF8\x03\x02\x02\x02\u0BEC" +
		"\u0BF7\x05v<\x02\u0BED\u0BF7\x05\x96L\x02\u0BEE\u0BF7\x05\xA2R\x02\u0BEF" +
		"\u0BF7\x05\u014E\xA8\x02\u0BF0\u0BF7\x05\u03A8\u01D5\x02\u0BF1\u0BF7\x05" +
		"\u03FA\u01FE\x02\u0BF2\u0BF7\x05\u0414\u020B\x02\u0BF3\u0BF7\x05\u0480" +
		"\u0241\x02\u0BF4\u0BF7\x05\u0590\u02C9\x02\u0BF5\u0BF7\x05\u0638\u031D" +
		"\x02\u0BF6\u0BEC\x03\x02\x02\x02\u0BF6\u0BED\x03\x02\x02\x02\u0BF6\u0BEE" +
		"\x03\x02\x02\x02\u0BF6\u0BEF\x03\x02\x02\x02\u0BF6\u0BF0\x03\x02\x02\x02" +
		"\u0BF6\u0BF1\x03\x02\x02\x02\u0BF6\u0BF2\x03\x02\x02\x02\u0BF6\u0BF3\x03" +
		"\x02\x02\x02\u0BF6\u0BF4\x03\x02\x02\x02\u0BF6\u0BF5\x03\x02\x02\x02\u0BF7" +
		"\u0BFA\x03\x02\x02\x02\u0BF8\u0BF6\x03\x02\x02\x02\u0BF8\u0BF9\x03\x02" +
		"\x02\x02\u0BF9\u0BFB\x03\x02\x02\x02\u0BFA\u0BF8\x03\x02\x02\x02\u0BFB" +
		"\u0BFC\x07\x04\x02\x02\u0BFC\u0199\x03\x02\x02\x02\u0BFD\u0BFE\x07\xA3" +
		"\x02\x02\u0BFE\u0C09\x05\u019E\xD0\x02\u0BFF\u0C08\x05\x96L\x02\u0C00" +
		"\u0C08\x05\xE4s\x02\u0C01\u0C08\x05\u0136\x9C\x02\u0C02\u0C08\x05\u016E" +
		"\xB8\x02\u0C03\u0C08\x05\u0376\u01BC\x02\u0C04\u0C08\x05\u03FE\u0200\x02" +
		"\u0C05\u0C08\x05\u0462\u0232\x02\u0C06\u0C08\x05\u0638\u031D\x02\u0C07" +
		"\u0BFF\x03\x02\x02\x02\u0C07\u0C00\x03\x02\x02\x02\u0C07\u0C01\x03\x02" +
		"\x02\x02\u0C07\u0C02\x03\x02\x02\x02\u0C07\u0C03\x03\x02\x02\x02\u0C07" +
		"\u0C04\x03\x02\x02\x02\u0C07\u0C05\x03\x02\x02\x02\u0C07\u0C06\x03\x02" +
		"\x02\x02\u0C08\u0C0B\x03\x02\x02\x02\u0C09\u0C07\x03\x02\x02\x02\u0C09" +
		"\u0C0A\x03\x02\x02\x02\u0C0A\u0C0C\x03\x02\x02\x02\u0C0B\u0C09\x03\x02" +
		"\x02\x02\u0C0C\u0C0D\x07\x04\x02\x02\u0C0D\u019B\x03\x02\x02\x02\u0C0E" +
		"\u0C0F\x07\xA4\x02\x02\u0C0F\u0C10\x05J&\x02\u0C10\u0C11\x07\x04\x02\x02" +
		"\u0C11\u019D\x03\x02\x02\x02\u0C12\u0C13\x05\u0370\u01B9\x02\u0C13\u019F" +
		"\x03\x02\x02\x02\u0C14\u0C15\x05\u037A\u01BE\x02\u0C15\u01A1\x03\x02\x02" +
		"\x02\u0C16\u0C17\x07\xA5\x02\x02\u0C17\u0C20\x05\u01A0\xD1\x02\u0C18\u0C1F" +
		"\x05\x96L\x02\u0C19\u0C1F\x05\xE4s\x02\u0C1A\u0C1F\x05\u0136\x9C\x02\u0C1B" +
		"\u0C1F\x05\u016E\xB8\x02\u0C1C\u0C1F\x05\u03FE\u0200\x02\u0C1D\u0C1F\x05" +
		"\u0472\u023A\x02\u0C1E\u0C18\x03\x02\x02\x02\u0C1E\u0C19\x03\x02\x02\x02" +
		"\u0C1E\u0C1A\x03\x02\x02\x02\u0C1E\u0C1B\x03\x02\x02\x02\u0C1E\u0C1C\x03" +
		"\x02\x02\x02\u0C1E\u0C1D\x03\x02\x02\x02\u0C1F\u0C22\x03\x02\x02\x02\u0C20" +
		"\u0C1E\x03\x02\x02\x02\u0C20\u0C21\x03\x02\x02\x02\u0C21\u0C23\x03\x02" +
		"\x02\x02\u0C22\u0C20\x03\x02\x02\x02\u0C23\u0C24\x07\x04\x02\x02\u0C24" +
		"\u01A3\x03\x02\x02\x02\u0C25\u0C26\x07\xA6\x02\x02\u0C26\u0C27\x05\u040A" +
		"\u0206\x02\u0C27\u0C28\x07\x04\x02\x02\u0C28\u01A5\x03\x02\x02\x02\u0C29" +
		"\u0C2A\x07\xA7\x02\x02\u0C2A\u0C2B\x05L\'\x02\u0C2B\u0C2C\x07\x04\x02" +
		"\x02\u0C2C\u01A7\x03\x02\x02\x02\u0C2D\u0C2E\x05\u0280\u0141\x02\u0C2E" +
		"\u01A9\x03\x02\x02\x02\u0C2F\u0C30\x05\u05C8\u02E5\x02\u0C30\u01AB\x03" +
		"\x02\x02\x02\u0C31\u0C32\x07\xA8\x02\x02\u0C32\u0C33\x07\x04\x02\x02\u0C33" +
		"\u01AD\x03\x02\x02\x02\u0C34\u0C35\x07\xA9\x02\x02\u0C35\u0C36\x05\u01BA" +
		"\xDE\x02\u0C36\u0C37\x05\u0616\u030C\x02\u0C37\u0C3F\x05\u01BE\xE0\x02" +
		"\u0C38\u0C3E\x058\x1D\x02\u0C39\u0C3E\x05\u02BE\u0160\x02\u0C3A\u0C3E" +
		"\x05\u0462\u0232\x02\u0C3B\u0C3E\x05\u0474\u023B\x02\u0C3C\u0C3E\x05\u0638" +
		"\u031D\x02\u0C3D\u0C38\x03\x02\x02\x02\u0C3D\u0C39\x03\x02\x02\x02\u0C3D" +
		"\u0C3A\x03\x02\x02\x02\u0C3D\u0C3B\x03\x02\x02\x02\u0C3D\u0C3C\x03\x02" +
		"\x02\x02\u0C3E\u0C41\x03\x02\x02\x02\u0C3F\u0C3D\x03\x02\x02\x02\u0C3F" +
		"\u0C40\x03\x02\x02\x02\u0C40\u0C42\x03\x02\x02\x02\u0C41\u0C3F\x03\x02" +
		"\x02\x02\u0C42\u0C43\x07\x04\x02\x02\u0C43\u01AF\x03\x02\x02\x02\u0C44" +
		"\u0C45\x07\xAA\x02\x02\u0C45\u0C46\x05\u0308\u0185\x02\u0C46\u0C47\x07" +
		"\x04\x02\x02\u0C47\u01B1\x03\x02\x02\x02\u0C48\u0C4A\x07\xAB\x02\x02\u0C49" +
		"\u0C4B\x05\u01C2\xE2\x02\u0C4A\u0C49\x03\x02\x02\x02\u0C4A\u0C4B\x03\x02" +
		"\x02\x02\u0C4B\u0C4C\x03\x02\x02\x02\u0C4C\u0C4D\x07\x04\x02\x02\u0C4D" +
		"\u01B3\x03\x02\x02\x02\u0C4E\u0C4F\x07\xAC\x02\x02\u0C4F\u0C50\x05\u0308" +
		"\u0185\x02\u0C50\u0C51\x07\x04\x02\x02\u0C51\u01B5\x03\x02\x02\x02\u0C52" +
		"\u0C53\x05\u0680\u0341\x02\u0C53\u01B7\x03\x02\x02\x02\u0C54\u0C55\x07" +
		"\xAD\x02\x02\u0C55\u0C56\x05\u0308\u0185\x02\u0C56\u0C57\x07\x04\x02\x02" +
		"\u0C57\u01B9\x03\x02\x02\x02\u0C58\u0C59\x05\u0370\u01B9\x02\u0C59\u01BB" +
		"\x03\x02\x02\x02\u0C5A\u0C5B\x05\u037A\u01BE\x02\u0C5B\u01BD\x03\x02\x02" +
		"\x02\u0C5C\u0C5D\x07\xAE\x02\x02\u0C5D\u0C5E\x05\u01B8\xDD\x02\u0C5E\u0C5F" +
		"\x05\u01B4\xDB\x02\u0C5F\u0C60\x05\u01B0\xD9\x02\u0C60\u0C61\x05\u01C4" +
		"\xE3\x02\u0C61\u0C62\x07\x04\x02\x02\u0C62\u01BF\x03\x02\x02\x02\u0C63" +
		"\u0C64\x07\xAF\x02\x02\u0C64\u0C65\x05\u01BC\xDF\x02\u0C65\u0C66\x07\x04" +
		"\x02\x02\u0C66\u01C1\x03\x02\x02\x02\u0C67\u0C68\x07\xB0\x02\x02\u0C68" +
		"\u0C6C\x05\u0588\u02C5\x02\u0C69\u0C6B\x05\u01AE\xD8\x02\u0C6A\u0C69\x03" +
		"\x02\x02\x02\u0C6B\u0C6E\x03\x02\x02\x02\u0C6C\u0C6A\x03\x02\x02\x02\u0C6C" +
		"\u0C6D\x03\x02\x02\x02\u0C6D\u0C6F\x03\x02\x02\x02\u0C6E\u0C6C\x03\x02" +
		"\x02\x02\u0C6F\u0C70\x07\x04\x02\x02\u0C70\u01C3\x03\x02\x02\x02\u0C71" +
		"\u0C72\x07\xB1\x02\x02\u0C72\u0C73\x05\u0308\u0185\x02\u0C73\u0C74\x07" +
		"\x04\x02\x02\u0C74\u01C5\x03\x02\x02\x02\u0C75\u0C76\x07\xB2\x02\x02\u0C76" +
		"\u0C7A\x05\u05F6\u02FC\x02\u0C77\u0C79\x05\u0174\xBB\x02\u0C78\u0C77\x03" +
		"\x02\x02\x02\u0C79\u0C7C\x03\x02\x02\x02\u0C7A\u0C78\x03\x02\x02\x02\u0C7A" +
		"\u0C7B\x03\x02\x02\x02\u0C7B\u0C7D\x03\x02\x02\x02\u0C7C\u0C7A\x03\x02" +
		"\x02\x02\u0C7D\u0C7E\x07\x04\x02\x02\u0C7E\u01C7\x03\x02\x02\x02\u0C7F" +
		"\u0C80\x07\xB3\x02\x02\u0C80\u0C81\x05\u01DC\xEF\x02\u0C81\u0C82\x05\u0486" +
		"\u0244\x02\u0C82\u0C83\x05\u01CC\xE7\x02\u0C83\u0C8B\x05\u032C\u0197\x02" +
		"\u0C84\u0C8A\x05\x96L\x02\u0C85\u0C8A\x05\u0142\xA2\x02\u0C86\u0C8A\x05" +
		"\u0376\u01BC\x02\u0C87\u0C8A\x05\u0462\u0232\x02\u0C88\u0C8A\x05\u0638" +
		"\u031D\x02\u0C89\u0C84\x03\x02\x02\x02\u0C89\u0C85\x03\x02\x02\x02\u0C89" +
		"\u0C86\x03\x02\x02\x02\u0C89\u0C87\x03\x02\x02\x02\u0C89\u0C88\x03\x02" +
		"\x02\x02\u0C8A\u0C8D\x03\x02\x02\x02\u0C8B\u0C89\x03\x02\x02\x02\u0C8B" +
		"\u0C8C\x03\x02\x02\x02\u0C8C\u0C8E\x03\x02\x02\x02\u0C8D\u0C8B\x03\x02" +
		"\x02\x02\u0C8E\u0C8F\x07\x04\x02\x02\u0C8F\u01C9\x03\x02\x02\x02\u0C90" +
		"\u0C91\x07\xB4\x02\x02\u0C91\u0C9B\x05\u017A\xBE\x02\u0C92\u0C9A\x05\x96" +
		"L\x02\u0C93\u0C9A\x05\u01CA\xE6\x02\u0C94\u0C9A\x05\u022E\u0118\x02\u0C95" +
		"\u0C9A\x05\u0294\u014B\x02\u0C96\u0C9A\x05\u0304\u0183\x02\u0C97\u0C9A" +
		"\x05\u03A0\u01D1\x02\u0C98\u0C9A\x05\u03B8\u01DD\x02\u0C99\u0C92\x03\x02" +
		"\x02\x02\u0C99\u0C93\x03\x02\x02\x02\u0C99\u0C94\x03\x02\x02\x02\u0C99" +
		"\u0C95\x03\x02\x02\x02\u0C99\u0C96\x03\x02\x02\x02\u0C99\u0C97\x03\x02" +
		"\x02\x02\u0C99\u0C98\x03\x02\x02\x02\u0C9A\u0C9D\x03\x02\x02\x02\u0C9B" +
		"\u0C99\x03\x02\x02\x02\u0C9B\u0C9C\x03\x02\x02\x02\u0C9C\u0C9E\x03\x02" +
		"\x02\x02\u0C9D\u0C9B\x03\x02\x02\x02\u0C9E\u0C9F\x07\x04\x02\x02\u0C9F" +
		"\u01CB\x03\x02\x02\x02\u0CA0\u0CA1\x07\xB5\x02\x02\u0CA1\u0CA7\x05\u0240" +
		"\u0121\x02\u0CA2\u0CA6\x05\u0246\u0124\x02\u0CA3\u0CA6\x05\u024A\u0126" +
		"\x02\u0CA4\u0CA6\x05\u0376\u01BC\x02\u0CA5\u0CA2\x03\x02\x02\x02\u0CA5" +
		"\u0CA3\x03\x02\x02\x02\u0CA5\u0CA4\x03\x02\x02\x02\u0CA6\u0CA9\x03\x02" +
		"\x02\x02\u0CA7\u0CA5\x03\x02\x02\x02\u0CA7\u0CA8\x03\x02\x02\x02\u0CA8" +
		"\u0CAA\x03\x02\x02\x02\u0CA9\u0CA7\x03\x02\x02\x02\u0CAA\u0CAB\x07\x04" +
		"\x02\x02\u0CAB\u01CD\x03\x02\x02\x02\u0CAC\u0CB3\x07\xB6\x02\x02\u0CAD" +
		"\u0CB2\x05\u023E\u0120\x02\u0CAE\u0CB2\x05\u0242\u0122\x02\u0CAF\u0CB2" +
		"\x05\u0248\u0125\x02\u0CB0\u0CB2\x05\u024C\u0127\x02\u0CB1\u0CAD\x03\x02" +
		"\x02\x02\u0CB1\u0CAE\x03\x02\x02\x02\u0CB1\u0CAF\x03\x02\x02\x02\u0CB1" +
		"\u0CB0\x03\x02\x02\x02\u0CB2\u0CB5\x03\x02\x02\x02\u0CB3\u0CB1\x03\x02" +
		"\x02\x02\u0CB3\u0CB4\x03\x02\x02\x02\u0CB4\u0CB6\x03\x02\x02\x02\u0CB5" +
		"\u0CB3\x03\x02\x02\x02\u0CB6\u0CB7\x07\x04\x02\x02\u0CB7\u01CF\x03\x02" +
		"\x02\x02\u0CB8\u0CB9\x07\xB7\x02\x02\u0CB9\u0CBA\x05J&\x02\u0CBA\u0CBB" +
		"\x07\x04\x02\x02\u0CBB\u01D1\x03\x02\x02\x02\u0CBC\u0CBD\x07\xB8\x02\x02" +
		"\u0CBD\u0CBE\x05\u0244\u0123\x02\u0CBE\u0CBF\x07\x04\x02\x02\u0CBF\u01D3" +
		"\x03\x02\x02\x02\u0CC0\u0CC1\x07\xB9\x02\x02\u0CC1\u0CC2\x05\u01DE\xF0" +
		"\x02\u0CC2\u0CC3\x05\u024E\u0128\x02\u0CC3\u0CC4\x07\x04\x02\x02\u0CC4" +
		"\u01D5\x03\x02\x02\x02\u0CC5\u0CC6\x07\xBA\x02\x02\u0CC6\u0CC7\x05\u01DE" +
		"\xF0\x02\u0CC7\u0CC8\x07\x04\x02\x02\u0CC8\u01D7\x03\x02\x02\x02\u0CC9" +
		"\u0CCA\x07\xBB\x02\x02\u0CCA\u0CCF\x05\u01DE\xF0\x02\u0CCB\u0CCE\x05\u01D8" +
		"\xED\x02\u0CCC\u0CCE\x05\u0258\u012D\x02\u0CCD\u0CCB\x03\x02\x02\x02\u0CCD" +
		"\u0CCC\x03\x02\x02\x02\u0CCE\u0CD1\x03\x02\x02\x02\u0CCF\u0CCD\x03\x02" +
		"\x02\x02\u0CCF\u0CD0\x03\x02\x02\x02\u0CD0\u0CD2\x03\x02\x02\x02\u0CD1" +
		"\u0CCF\x03\x02\x02\x02\u0CD2\u0CD3\x07\x04\x02\x02\u0CD3\u01D9\x03\x02" +
		"\x02\x02\u0CD4\u0CD5\x07\xBC\x02\x02\u0CD5\u0CD6\x05J&\x02\u0CD6\u0CD7" +
		"\x07\x04\x02\x02\u0CD7\u01DB\x03\x02\x02\x02\u0CD8\u0CD9\x05\u0370\u01B9" +
		"\x02\u0CD9\u01DD\x03\x02\x02\x02\u0CDA\u0CDB\x05\u037A\u01BE\x02\u0CDB" +
		"\u01DF\x03\x02\x02\x02\u0CDC\u0CDD\x07\xBD\x02\x02\u0CDD\u0CDE\x05\u01DE" +
		"\xF0\x02\u0CDE\u0CDF\x07\x04\x02\x02\u0CDF\u01E1\x03\x02\x02\x02\u0CE0" +
		"\u0CE1\x05\u035A\u01AE\x02\u0CE1\u01E3\x03\x02\x02\x02\u0CE2\u0CE3\x07" +
		"\xBE\x02\x02\u0CE3\u0CE4\x07\x04\x02\x02\u0CE4\u01E5\x03\x02\x02\x02\u0CE5" +
		"\u0CE6\x05\u067E\u0340\x02\u0CE6\u01E7\x03\x02\x02\x02\u0CE7\u0CE8\x07" +
		"\xBF\x02\x02\u0CE8\u0CE9\x07\x04\x02\x02\u0CE9\u01E9\x03\x02\x02\x02\u0CEA" +
		"\u0CEB\x07\xC0\x02\x02\u0CEB\u0CEC\x07\x04\x02\x02\u0CEC\u01EB\x03\x02" +
		"\x02\x02\u0CED\u0CEE\x07\xC1\x02\x02\u0CEE\u0CEF\x07\x04\x02\x02\u0CEF" +
		"\u01ED\x03\x02\x02\x02\u0CF0\u0CF1\x07\xC2\x02\x02\u0CF1\u0CF2";
	private static readonly _serializedATNSegment7: string =
		"\x07\x04\x02\x02\u0CF2\u01EF\x03\x02\x02\x02\u0CF3\u0CF4\x07\xC3\x02\x02" +
		"\u0CF4\u0CF5\x05\u031A\u018E\x02\u0CF5\u0D02\x05\u01F2\xFA\x02\u0CF6\u0D01" +
		"\x05v<\x02\u0CF7\u0D01\x05\x96L\x02\u0CF8\u0D01\x05\xA2R\x02\u0CF9\u0D01" +
		"\x05\u014E\xA8\x02\u0CFA\u0D01\x05\u03A8\u01D5\x02\u0CFB\u0D01\x05\u03FA" +
		"\u01FE\x02\u0CFC\u0D01\x05\u0414\u020B\x02\u0CFD\u0D01\x05\u0480\u0241" +
		"\x02\u0CFE\u0D01\x05\u0590\u02C9\x02\u0CFF\u0D01\x05\u0638\u031D\x02\u0D00" +
		"\u0CF6\x03\x02\x02\x02\u0D00\u0CF7\x03\x02\x02\x02\u0D00\u0CF8\x03\x02" +
		"\x02\x02\u0D00\u0CF9\x03\x02\x02\x02\u0D00\u0CFA\x03\x02\x02\x02\u0D00" +
		"\u0CFB\x03\x02\x02\x02\u0D00\u0CFC\x03\x02\x02\x02\u0D00\u0CFD\x03\x02" +
		"\x02\x02\u0D00\u0CFE\x03\x02\x02\x02\u0D00\u0CFF\x03\x02\x02\x02\u0D01" +
		"\u0D04\x03\x02\x02\x02\u0D02\u0D00\x03\x02\x02\x02\u0D02\u0D03\x03\x02" +
		"\x02\x02\u0D03\u0D05\x03\x02\x02\x02\u0D04\u0D02\x03\x02\x02\x02\u0D05" +
		"\u0D06\x07\x04\x02\x02\u0D06\u01F1\x03\x02\x02\x02\u0D07\u0D08\x07\xC4" +
		"\x02\x02\u0D08\u0D11\x05\u01F6\xFC\x02\u0D09\u0D10\x05&\x14\x02\u0D0A" +
		"\u0D10\x05\u0142\xA2\x02\u0D0B\u0D10\x05\u0376\u01BC\x02\u0D0C\u0D10\x05" +
		"\u03AE\u01D8\x02\u0D0D\u0D10\x05\u0462\u0232\x02\u0D0E\u0D10\x05\u05BA" +
		"\u02DE\x02\u0D0F\u0D09\x03\x02\x02\x02\u0D0F\u0D0A\x03\x02\x02\x02\u0D0F" +
		"\u0D0B\x03\x02\x02\x02\u0D0F\u0D0C\x03\x02\x02\x02\u0D0F\u0D0D\x03\x02" +
		"\x02\x02\u0D0F\u0D0E\x03\x02\x02\x02\u0D10\u0D13\x03\x02\x02\x02\u0D11" +
		"\u0D0F\x03\x02\x02\x02\u0D11\u0D12\x03\x02\x02\x02\u0D12\u0D14\x03\x02" +
		"\x02\x02\u0D13\u0D11\x03\x02\x02\x02\u0D14\u0D15\x07\x04\x02\x02\u0D15" +
		"\u01F3\x03\x02\x02\x02\u0D16\u0D17\x07\xC5\x02\x02\u0D17\u0D19\x05\u031C" +
		"\u018F\x02\u0D18\u0D1A\x05\u031E\u0190\x02\u0D19\u0D18\x03\x02\x02\x02" +
		"\u0D19\u0D1A\x03\x02\x02\x02\u0D1A\u0D1B\x03\x02\x02\x02\u0D1B\u0D1C\x07" +
		"\x04\x02\x02\u0D1C\u01F5\x03\x02\x02\x02\u0D1D\u0D1F\x07\xC6\x02\x02\u0D1E" +
		"\u0D20\x05\u0582\u02C2\x02\u0D1F\u0D1E\x03\x02\x02\x02\u0D1F\u0D20\x03" +
		"\x02\x02\x02\u0D20\u0D21\x03\x02\x02\x02\u0D21\u0D22\x07\x04\x02\x02\u0D22" +
		"\u01F7\x03\x02\x02\x02\u0D23\u0D24\x07\xC7\x02\x02\u0D24\u0D2C\x05\u0202" +
		"\u0102\x02\u0D25\u0D2B\x05\x96L\x02\u0D26\u0D2B\x05\u0376\u01BC\x02\u0D27" +
		"\u0D2B\x05\u0462\u0232\x02\u0D28\u0D2B\x05\u04C2\u0262\x02\u0D29\u0D2B" +
		"\x05\u0638\u031D\x02\u0D2A\u0D25\x03\x02\x02\x02\u0D2A\u0D26\x03\x02\x02" +
		"\x02\u0D2A\u0D27\x03\x02\x02\x02\u0D2A\u0D28\x03\x02\x02\x02\u0D2A\u0D29" +
		"\x03\x02\x02\x02\u0D2B\u0D2E\x03\x02\x02\x02\u0D2C\u0D2A\x03\x02\x02\x02" +
		"\u0D2C\u0D2D\x03\x02\x02\x02\u0D2D\u0D2F\x03\x02\x02\x02\u0D2E\u0D2C\x03" +
		"\x02\x02\x02\u0D2F\u0D30\x07\x04\x02\x02\u0D30\u01F9\x03\x02\x02\x02\u0D31" +
		"\u0D32\x07\xC8\x02\x02\u0D32\u0D33\x05\u0202\u0102\x02\u0D33\u0D3A\x05" +
		"\u01FE\u0100\x02\u0D34\u0D39\x05\x96L\x02\u0D35\u0D39\x05\u0376\u01BC" +
		"\x02\u0D36\u0D39\x05\u0462\u0232\x02\u0D37\u0D39\x05\u0638\u031D\x02\u0D38" +
		"\u0D34\x03\x02\x02\x02\u0D38\u0D35\x03\x02\x02\x02\u0D38\u0D36\x03\x02" +
		"\x02\x02\u0D38\u0D37\x03\x02\x02\x02\u0D39\u0D3C\x03\x02\x02\x02\u0D3A" +
		"\u0D38\x03\x02\x02\x02\u0D3A\u0D3B\x03\x02\x02\x02\u0D3B\u0D3D\x03\x02" +
		"\x02\x02\u0D3C\u0D3A\x03\x02\x02\x02\u0D3D\u0D3E\x07\x04\x02\x02\u0D3E" +
		"\u01FB\x03\x02\x02\x02\u0D3F\u0D44\x07\xC9\x02\x02\u0D40\u0D43\x05\u01F8" +
		"\xFD\x02\u0D41\u0D43\x05\u01FA\xFE\x02\u0D42\u0D40\x03\x02\x02\x02\u0D42" +
		"\u0D41\x03\x02\x02\x02\u0D43\u0D46\x03\x02\x02\x02\u0D44\u0D42\x03\x02" +
		"\x02\x02\u0D44\u0D45\x03\x02\x02\x02\u0D45\u0D47\x03\x02\x02\x02\u0D46" +
		"\u0D44\x03\x02\x02\x02\u0D47\u0D48\x07\x04\x02\x02\u0D48\u01FD\x03\x02" +
		"\x02\x02\u0D49\u0D4D\x07\xCA\x02\x02\u0D4A\u0D4C\x05\u020A\u0106\x02\u0D4B" +
		"\u0D4A\x03\x02\x02\x02\u0D4C\u0D4F\x03\x02\x02\x02\u0D4D\u0D4B\x03\x02" +
		"\x02\x02\u0D4D\u0D4E\x03\x02\x02\x02\u0D4E\u0D50\x03\x02\x02\x02\u0D4F" +
		"\u0D4D\x03\x02\x02\x02\u0D50\u0D51\x07\x04\x02\x02\u0D51\u01FF\x03\x02" +
		"\x02\x02\u0D52\u0D53\x07\xCB\x02\x02\u0D53\u0D54\x05J&\x02\u0D54\u0D55" +
		"\x07\x04\x02\x02\u0D55\u0201\x03\x02\x02\x02\u0D56\u0D57\x05\u0370\u01B9" +
		"\x02\u0D57\u0203\x03\x02\x02\x02\u0D58\u0D5D\x07\xCC\x02\x02\u0D59\u0D5C" +
		"\x05\u0134\x9B\x02\u0D5A\u0D5C\x05\u013A\x9E\x02\u0D5B\u0D59\x03\x02\x02" +
		"\x02\u0D5B\u0D5A\x03\x02\x02\x02\u0D5C\u0D5F\x03\x02\x02\x02\u0D5D\u0D5B" +
		"\x03\x02\x02\x02\u0D5D\u0D5E\x03\x02\x02\x02\u0D5E\u0D60\x03\x02\x02\x02" +
		"\u0D5F\u0D5D\x03\x02\x02\x02\u0D60\u0D61\x07\x04\x02\x02\u0D61\u0205\x03" +
		"\x02\x02\x02\u0D62\u0D63\x05\u037A\u01BE\x02\u0D63\u0207\x03\x02\x02\x02" +
		"\u0D64\u0D65\x07\xCD\x02\x02\u0D65\u0D6A\x05\u0470\u0239\x02\u0D66\u0D69" +
		"\x05\u0134\x9B\x02\u0D67\u0D69\x05\u046E\u0238\x02\u0D68\u0D66\x03\x02" +
		"\x02\x02\u0D68\u0D67\x03\x02\x02\x02\u0D69\u0D6C\x03\x02\x02\x02\u0D6A" +
		"\u0D68\x03\x02\x02\x02\u0D6A\u0D6B\x03\x02\x02\x02\u0D6B\u0D6D\x03\x02" +
		"\x02\x02\u0D6C\u0D6A\x03\x02\x02\x02\u0D6D\u0D6E\x07\x04\x02\x02\u0D6E" +
		"\u0209\x03\x02\x02\x02\u0D6F\u0D70\x07\xCE\x02\x02\u0D70\u0D71\x05\u0206" +
		"\u0104\x02\u0D71\u0D72\x07\x04\x02\x02\u0D72\u020B\x03\x02\x02\x02\u0D73" +
		"\u0D74\x07\xCF\x02\x02\u0D74\u0D75\x05\u0206\u0104\x02\u0D75\u0D76\x07" +
		"\x04\x02\x02\u0D76\u020D\x03\x02\x02\x02\u0D77\u0D78\x05\u04A0\u0251\x02" +
		"\u0D78\u020F\x03\x02\x02\x02\u0D79\u0D7A\x07\xD0\x02\x02\u0D7A\u0D7B\x05" +
		"\u0624\u0313\x02\u0D7B\u0D7C\x07\x04\x02\x02\u0D7C\u0211\x03\x02\x02\x02" +
		"\u0D7D\u0D7E\x07\xD1\x02\x02\u0D7E\u0D7F\x05\u0624\u0313\x02\u0D7F\u0D80" +
		"\x07\x04\x02\x02\u0D80\u0213\x03\x02\x02\x02\u0D81\u0D85\x07\xD2\x02\x02" +
		"\u0D82\u0D86\x05\u0306\u0184\x02\u0D83\u0D86\x05n8\x02\u0D84\u0D86\x05" +
		"\u0494\u024B\x02\u0D85\u0D82\x03\x02\x02\x02\u0D85\u0D83\x03\x02\x02\x02" +
		"\u0D85\u0D84\x03\x02\x02\x02\u0D86\u0D87\x03\x02\x02\x02\u0D87\u0D88\x07" +
		"\x04\x02\x02\u0D88\u0215\x03\x02\x02\x02\u0D89\u0D8A\x07\xD3\x02\x02\u0D8A" +
		"\u0D91\x05\u0412\u020A\x02\u0D8B\u0D90\x05\u0218\u010D\x02\u0D8C\u0D90" +
		"\x05\u0220\u0111\x02\u0D8D\u0D90\x05\u0376\u01BC\x02\u0D8E\u0D90\x05\u056E" +
		"\u02B8\x02\u0D8F\u0D8B\x03\x02\x02\x02\u0D8F\u0D8C\x03\x02\x02\x02\u0D8F" +
		"\u0D8D\x03\x02\x02\x02\u0D8F\u0D8E\x03\x02\x02\x02\u0D90\u0D93\x03\x02" +
		"\x02\x02\u0D91\u0D8F\x03\x02\x02\x02\u0D91\u0D92\x03\x02\x02\x02\u0D92" +
		"\u0D94\x03\x02\x02\x02\u0D93\u0D91\x03\x02\x02\x02\u0D94\u0D95\x07\x04" +
		"\x02\x02\u0D95\u0217\x03\x02\x02\x02\u0D96\u0D9D\x07\xD4\x02\x02\u0D97" +
		"\u0D9C\x05\u01E4\xF3\x02\u0D98\u0D9C\x05\u01E8\xF5\x02\u0D99\u0D9C\x05" +
		"\u01EA\xF6\x02\u0D9A\u0D9C\x05\u01EC\xF7\x02\u0D9B\u0D97\x03\x02\x02\x02" +
		"\u0D9B\u0D98\x03\x02\x02\x02\u0D9B\u0D99\x03\x02\x02\x02\u0D9B\u0D9A\x03" +
		"\x02\x02\x02\u0D9C\u0D9F\x03\x02\x02\x02\u0D9D\u0D9B\x03\x02\x02\x02\u0D9D" +
		"\u0D9E\x03\x02\x02\x02\u0D9E\u0DA0\x03\x02\x02\x02\u0D9F\u0D9D\x03\x02" +
		"\x02\x02\u0DA0\u0DA1\x07\x04\x02\x02\u0DA1\u0219\x03\x02\x02\x02\u0DA2" +
		"\u0DA3\x07\xD5\x02\x02\u0DA3\u0DA4\x05\u0308\u0185\x02\u0DA4\u0DA5\x07" +
		"\x04\x02\x02\u0DA5\u021B\x03\x02\x02\x02\u0DA6\u0DA7\x07\xD6\x02\x02\u0DA7" +
		"\u0DA8\x05J&\x02\u0DA8\u0DA9\x07\x04\x02\x02\u0DA9\u021D\x03\x02\x02\x02" +
		"\u0DAA\u0DAB\x05\u0370\u01B9\x02\u0DAB\u021F\x03\x02\x02\x02\u0DAC\u0DB1" +
		"\x07\xD7\x02\x02\u0DAD\u0DB0\x05\u0134\x9B\x02\u0DAE\u0DB0\x05\u013A\x9E" +
		"\x02\u0DAF\u0DAD\x03\x02\x02\x02\u0DAF\u0DAE\x03\x02\x02\x02\u0DB0\u0DB3" +
		"\x03\x02\x02\x02\u0DB1\u0DAF\x03\x02\x02\x02\u0DB1\u0DB2\x03\x02\x02\x02" +
		"\u0DB2\u0DB4\x03\x02\x02\x02\u0DB3\u0DB1\x03\x02\x02\x02\u0DB4\u0DB5\x07" +
		"\x04\x02\x02\u0DB5\u0221\x03\x02\x02\x02\u0DB6\u0DB7\x05\u037A\u01BE\x02" +
		"\u0DB7\u0223\x03\x02\x02\x02\u0DB8\u0DB9\x05\u067E\u0340\x02\u0DB9\u0225" +
		"\x03\x02\x02\x02\u0DBA\u0DBB\x05\u0680\u0341\x02\u0DBB\u0227\x03\x02\x02" +
		"\x02\u0DBC\u0DC0\x07\xD8\x02\x02\u0DBD\u0DBF\x05\u067E\u0340\x02\u0DBE" +
		"\u0DBD\x03\x02\x02\x02\u0DBF\u0DC2\x03\x02\x02\x02\u0DC0\u0DBE\x03\x02" +
		"\x02\x02\u0DC0\u0DC1\x03\x02\x02\x02\u0DC1\u0DC3\x03\x02\x02\x02\u0DC2" +
		"\u0DC0\x03\x02\x02\x02\u0DC3\u0DC4\x07\x04\x02\x02\u0DC4\u0229\x03\x02" +
		"\x02\x02\u0DC5\u0DC6\x07\xD9\x02\x02\u0DC6\u0DC7\x05\u0226\u0114\x02\u0DC7" +
		"\u0DCC\x05\u0678\u033D\x02\u0DC8\u0DCB\x05\x96L\x02\u0DC9\u0DCB\x05\u0228" +
		"\u0115\x02\u0DCA\u0DC8\x03\x02\x02\x02\u0DCA\u0DC9\x03\x02\x02\x02\u0DCB" +
		"\u0DCE\x03\x02\x02\x02\u0DCC\u0DCA\x03\x02\x02\x02\u0DCC\u0DCD\x03\x02" +
		"\x02\x02\u0DCD\u0DCF\x03\x02\x02\x02\u0DCE\u0DCC\x03\x02\x02\x02\u0DCF" +
		"\u0DD0\x07\x04\x02\x02\u0DD0\u022B\x03\x02\x02\x02\u0DD1\u0DD2\x07\xDA" +
		"\x02\x02\u0DD2\u0DD3\x05\u01DC\xEF\x02\u0DD3\u0DD4\x05\xA8U\x02\u0DD4" +
		"\u0DDC\x05\u032C\u0197\x02\u0DD5\u0DDB\x05\x96L\x02\u0DD6\u0DDB\x05\u0376" +
		"\u01BC\x02\u0DD7\u0DDB\x05\u0142\xA2\x02\u0DD8\u0DDB\x05\u0462\u0232\x02" +
		"\u0DD9\u0DDB\x05\u0638\u031D\x02\u0DDA\u0DD5\x03\x02\x02\x02\u0DDA\u0DD6" +
		"\x03\x02\x02\x02\u0DDA\u0DD7\x03\x02\x02\x02\u0DDA\u0DD8\x03\x02\x02\x02" +
		"\u0DDA\u0DD9\x03\x02\x02\x02\u0DDB\u0DDE\x03\x02\x02\x02\u0DDC\u0DDA\x03" +
		"\x02\x02\x02\u0DDC\u0DDD\x03\x02\x02\x02\u0DDD\u0DDF\x03\x02\x02\x02\u0DDE" +
		"\u0DDC\x03\x02\x02\x02\u0DDF\u0DE0\x07\x04\x02\x02\u0DE0\u022D\x03\x02" +
		"\x02\x02\u0DE1\u0DE2\x07\xDB\x02\x02\u0DE2\u0DED\x05\u017C\xBF\x02\u0DE3" +
		"\u0DEC\x05\x96L\x02\u0DE4\u0DEC\x05\u01CA\xE6\x02\u0DE5\u0DEC\x05\u022E" +
		"\u0118\x02\u0DE6\u0DEC\x05\u0294\u014B\x02\u0DE7\u0DEC\x05\u0304\u0183" +
		"\x02\u0DE8\u0DEC\x05\u03A0\u01D1\x02\u0DE9\u0DEC\x05\u03B8\u01DD\x02\u0DEA" +
		"\u0DEC\x05\u0472\u023A\x02\u0DEB\u0DE3\x03\x02\x02\x02\u0DEB\u0DE4\x03" +
		"\x02\x02\x02\u0DEB\u0DE5\x03\x02\x02\x02\u0DEB\u0DE6\x03\x02\x02\x02\u0DEB" +
		"\u0DE7\x03\x02\x02\x02\u0DEB\u0DE8\x03\x02\x02\x02\u0DEB\u0DE9\x03\x02" +
		"\x02\x02\u0DEB\u0DEA\x03\x02\x02\x02\u0DEC\u0DEF\x03\x02\x02\x02\u0DED" +
		"\u0DEB\x03\x02\x02\x02\u0DED\u0DEE\x03\x02\x02\x02\u0DEE\u0DF0\x03\x02" +
		"\x02\x02\u0DEF\u0DED\x03\x02\x02\x02\u0DF0\u0DF1\x07\x04\x02\x02\u0DF1" +
		"\u022F\x03\x02\x02\x02\u0DF2\u0DF3\x07\xDC\x02\x02\u0DF3\u0DF4\x05\u01DE" +
		"\xF0\x02\u0DF4\u0DF5\x07\x04\x02\x02\u0DF5\u0231\x03\x02\x02\x02\u0DF6" +
		"\u0DFA\x07\xDD\x02\x02\u0DF7\u0DF9\x05\u0230\u0119\x02\u0DF8\u0DF7\x03" +
		"\x02\x02\x02\u0DF9\u0DFC\x03\x02\x02\x02\u0DFA\u0DF8\x03\x02\x02\x02\u0DFA" +
		"\u0DFB\x03\x02\x02\x02\u0DFB\u0DFD\x03\x02\x02\x02\u0DFC\u0DFA\x03\x02" +
		"\x02\x02\u0DFD\u0DFE\x07\x04\x02\x02\u0DFE\u0233\x03\x02\x02\x02\u0DFF" +
		"\u0E00\x07\xDE\x02\x02\u0E00\u0E01\x07\x04\x02\x02\u0E01\u0235\x03\x02" +
		"\x02\x02\u0E02\u0E03\x07\xDF\x02\x02\u0E03\u0E04\x05J&\x02\u0E04\u0E05" +
		"\x07\x04\x02\x02\u0E05\u0237\x03\x02\x02\x02\u0E06\u0E07\x05\u0370\u01B9" +
		"\x02\u0E07\u0239\x03\x02\x02\x02\u0E08\u0E0D\x07\xE0\x02\x02\u0E09\u0E0C" +
		"\x05\u0134\x9B\x02\u0E0A\u0E0C\x05\u013A\x9E\x02\u0E0B\u0E09\x03\x02\x02" +
		"\x02\u0E0B\u0E0A\x03\x02\x02\x02\u0E0C\u0E0F\x03\x02\x02\x02\u0E0D\u0E0B" +
		"\x03\x02\x02\x02\u0E0D\u0E0E\x03\x02\x02\x02\u0E0E\u0E10\x03\x02\x02\x02" +
		"\u0E0F\u0E0D\x03\x02\x02\x02\u0E10\u0E11\x07\x04\x02\x02\u0E11\u023B\x03" +
		"\x02\x02\x02\u0E12\u0E13\x05\u037A\u01BE\x02\u0E13\u023D\x03\x02\x02\x02" +
		"\u0E14\u0E18\x07\xE1\x02\x02\u0E15\u0E19\x05\x0E\b\x02\u0E16\u0E19\x05" +
		"\u048A\u0246\x02\u0E17\u0E19\x05\u0484\u0243\x02\u0E18\u0E15\x03\x02\x02" +
		"\x02\u0E18\u0E16\x03\x02\x02\x02\u0E18\u0E17\x03\x02\x02\x02\u0E19\u0E1A" +
		"\x03\x02\x02\x02\u0E1A\u0E1B\x07\x04\x02\x02\u0E1B\u023F\x03\x02\x02\x02" +
		"\u0E1C\u0E1D\x05\u0370\u01B9\x02\u0E1D\u0241\x03\x02\x02\x02\u0E1E\u0E22" +
		"\x07\xE2\x02\x02\u0E1F\u0E23\x05\x0E\b\x02\u0E20\u0E23\x05\u048A\u0246" +
		"\x02\u0E21\u0E23\x05\u0484\u0243\x02\u0E22\u0E1F\x03\x02\x02\x02\u0E22" +
		"\u0E20\x03\x02\x02\x02\u0E22\u0E21\x03\x02\x02\x02\u0E23\u0E24\x03\x02" +
		"\x02\x02\u0E24\u0E25\x07\x04\x02\x02\u0E25\u0243\x03\x02\x02\x02\u0E26" +
		"\u0E27\x05\u037A\u01BE\x02\u0E27\u0245\x03\x02\x02\x02\u0E28\u0E29\x07" +
		"\xE3\x02\x02\u0E29\u0E2A\x05\u0280\u0141\x02\u0E2A\u0E2B\x07\x04\x02\x02" +
		"\u0E2B\u0247\x03\x02\x02\x02\u0E2C\u0E30\x07\xE4\x02\x02\u0E2D\u0E31\x05" +
		"\x0E\b\x02\u0E2E\u0E31\x05\u048A\u0246\x02\u0E2F\u0E31\x05\u0484\u0243" +
		"\x02\u0E30\u0E2D\x03\x02\x02\x02\u0E30\u0E2E\x03\x02\x02\x02\u0E30\u0E2F" +
		"\x03\x02\x02\x02\u0E31\u0E32\x03\x02\x02\x02\u0E32\u0E33\x07\x04\x02\x02" +
		"\u0E33\u0249\x03\x02\x02\x02\u0E34\u0E35\x07\xE5\x02\x02\u0E35\u0E36\x05" +
		"\u0280\u0141\x02\u0E36\u0E37\x07\x04\x02\x02\u0E37\u024B\x03\x02\x02\x02" +
		"\u0E38\u0E3C\x07\xE6\x02\x02\u0E39\u0E3D\x05\x0E\b\x02\u0E3A\u0E3D\x05" +
		"\u048A\u0246\x02\u0E3B\u0E3D\x05\u0484\u0243\x02\u0E3C\u0E39\x03\x02\x02" +
		"\x02\u0E3C\u0E3A\x03\x02\x02\x02\u0E3C\u0E3B\x03\x02\x02\x02\u0E3D\u0E3E" +
		"\x03\x02\x02\x02\u0E3E\u0E3F\x07\x04\x02\x02\u0E3F\u024D\x03\x02\x02\x02" +
		"\u0E40\u0E41\x07\xE7\x02\x02\u0E41\u0E42\x05\u067E\u0340\x02\u0E42\u0E43" +
		"\x07\x04\x02\x02\u0E43\u024F\x03\x02\x02\x02\u0E44\u0E45\x07\xE8\x02\x02" +
		"\u0E45\u0E46\x07\x04\x02\x02\u0E46\u0251\x03\x02\x02\x02\u0E47\u0E49\x07" +
		"\xE9\x02\x02\u0E48\u0E4A\x05\u0254\u012B\x02\u0E49\u0E48\x03\x02\x02\x02" +
		"\u0E49\u0E4A\x03\x02\x02\x02\u0E4A\u0E4B\x03\x02\x02\x02\u0E4B\u0E4C\x07" +
		"\x04\x02\x02\u0E4C\u0253\x03\x02\x02\x02\u0E4D\u0E52\x07\xEA\x02\x02\u0E4E" +
		"\u0E51\x05\xFC\x7F\x02\u0E4F\u0E51\x05\u0100\x81\x02\u0E50\u0E4E\x03\x02" +
		"\x02\x02\u0E50\u0E4F\x03\x02\x02\x02\u0E51\u0E54\x03\x02\x02\x02\u0E52" +
		"\u0E50\x03\x02\x02\x02\u0E52\u0E53\x03\x02\x02\x02\u0E53\u0E55\x03\x02" +
		"\x02\x02\u0E54\u0E52\x03\x02\x02\x02\u0E55\u0E56\x07\x04\x02\x02\u0E56" +
		"\u0255\x03\x02\x02\x02\u0E57\u0E58\x07\xEB\x02\x02\u0E58\u0E59\x05\u0260" +
		"\u0131\x02\u0E59\u0E6B\x05\x92J\x02\u0E5A\u0E6A\x05F$\x02\u0E5B\u0E6A" +
		"\x05h5\x02\u0E5C\u0E6A\x05\x90I\x02\u0E5D\u0E6A\x05\x96L\x02\u0E5E\u0E6A" +
		"\x05\u011A\x8E\x02\u0E5F\u0E6A\x05\u0264\u0133\x02\u0E60\u0E6A\x05\u026C" +
		"\u0137\x02\u0E61\u0E6A\x05\u0274\u013B\x02\u0E62\u0E6A\x05\u0284\u0143" +
		"\x02\u0E63\u0E6A\x05\u0376\u01BC\x02\u0E64\u0E6A\x05\u0396\u01CC\x02\u0E65" +
		"\u0E6A\x05\u0462\u0232\x02\u0E66\u0E6A\x05\u05CE\u02E8\x02\u0E67\u0E6A" +
		"\x05\u05FC\u02FF\x02\u0E68\u0E6A\x05\u0638\u031D\x02\u0E69\u0E5A\x03\x02" +
		"\x02\x02\u0E69\u0E5B\x03\x02\x02\x02\u0E69\u0E5C\x03\x02\x02\x02\u0E69" +
		"\u0E5D\x03\x02\x02\x02\u0E69\u0E5E\x03\x02\x02\x02\u0E69\u0E5F\x03\x02" +
		"\x02\x02\u0E69\u0E60\x03\x02\x02\x02\u0E69\u0E61\x03\x02\x02\x02\u0E69" +
		"\u0E62\x03\x02\x02\x02\u0E69\u0E63\x03\x02\x02\x02\u0E69\u0E64\x03\x02" +
		"\x02\x02\u0E69\u0E65\x03\x02\x02\x02\u0E69\u0E66\x03\x02\x02\x02\u0E69" +
		"\u0E67\x03\x02\x02\x02\u0E69\u0E68\x03\x02\x02\x02\u0E6A\u0E6D\x03\x02" +
		"\x02\x02\u0E6B\u0E69\x03\x02\x02\x02\u0E6B\u0E6C\x03\x02\x02\x02\u0E6C" +
		"\u0E6E\x03\x02\x02\x02\u0E6D\u0E6B\x03\x02\x02\x02\u0E6E\u0E6F\x07\x04" +
		"\x02\x02\u0E6F\u0257\x03\x02\x02\x02\u0E70\u0E71\x07\xEC\x02\x02\u0E71" +
		"\u0E72\x05\u0268\u0135\x02\u0E72\u0E73\x05\x82B\x02\u0E73\u0E74\x07\x04" +
		"\x02\x02\u0E74\u0259\x03\x02\x02\x02\u0E75\u0E76\x07\xED\x02\x02\u0E76" +
		"\u0E77\x07\x04\x02\x02\u0E77\u025B\x03\x02\x02\x02\u0E78\u0E79\x07\xEE" +
		"\x02\x02\u0E79\u0E7A\x05\u0268\u0135\x02\u0E7A\u0E7B\x05\u024E\u0128\x02" +
		"\u0E7B\u0E7C\x07\x04\x02\x02\u0E7C\u025D\x03\x02\x02\x02\u0E7D\u0E7E\x07" +
		"\xEF\x02\x02\u0E7E\u0E7F\x05J&\x02\u0E7F\u0E80\x07\x04\x02\x02\u0E80\u025F" +
		"\x03\x02\x02\x02\u0E81\u0E82\x05\u0370\u01B9\x02\u0E82\u0261\x03\x02\x02" +
		"\x02\u0E83\u0E88\x07\xF0\x02\x02\u0E84\u0E87\x05\u0134\x9B\x02\u0E85\u0E87" +
		"\x05\u013A\x9E\x02\u0E86\u0E84\x03\x02\x02\x02\u0E86\u0E85\x03\x02\x02" +
		"\x02\u0E87\u0E8A\x03\x02\x02\x02\u0E88\u0E86\x03\x02\x02\x02\u0E88\u0E89" +
		"\x03\x02\x02\x02\u0E89\u0E8B\x03\x02\x02\x02\u0E8A\u0E88\x03\x02\x02\x02" +
		"\u0E8B\u0E8C\x07\x04\x02\x02\u0E8C\u0263\x03\x02\x02\x02\u0E8D\u0E8E\x07" +
		"\xF1\x02\x02\u0E8E\u0E8F\x05\u05C8\u02E5\x02\u0E8F\u0E90\x07\x04\x02\x02" +
		"\u0E90\u0265\x03\x02\x02\x02\u0E91\u0E95\x07\xF2\x02\x02\u0E92\u0E96\x05" +
		"\x0E\b\x02\u0E93\u0E96\x05\u048A\u0246\x02\u0E94\u0E96\x05\u0484\u0243" +
		"\x02\u0E95\u0E92\x03\x02\x02\x02\u0E95\u0E93\x03\x02\x02\x02\u0E95\u0E94" +
		"\x03\x02\x02\x02\u0E96\u0E97\x03\x02\x02\x02\u0E97\u0E98\x07\x04\x02\x02" +
		"\u0E98\u0267\x03\x02\x02\x02\u0E99\u0E9A\x05\u037A\u01BE\x02\u0E9A\u0269" +
		"\x03\x02\x02\x02\u0E9B\u0E9C\x07\xF3\x02\x02\u0E9C\u0E9D\x05\u05EA\u02F6" +
		"\x02\u0E9D\u0EA2\x05\u0452\u022A\x02\u0E9E\u0EA1\x05\u044E\u0228\x02\u0E9F" +
		"\u0EA1\x05\u041A\u020E\x02\u0EA0\u0E9E\x03\x02\x02\x02\u0EA0\u0E9F\x03" +
		"\x02\x02\x02\u0EA1\u0EA4\x03\x02\x02\x02\u0EA2\u0EA0\x03\x02\x02\x02\u0EA2" +
		"\u0EA3\x03\x02\x02\x02\u0EA3\u0EA5\x03\x02\x02\x02\u0EA4\u0EA2\x03\x02" +
		"\x02\x02\u0EA5\u0EA6\x07\x04\x02\x02\u0EA6\u026B\x03\x02\x02\x02\u0EA7" +
		"\u0EA8\x07\xF4\x02\x02\u0EA8\u0EB7\x05\u0186\xC4\x02\u0EA9\u0EB6\x05\x06" +
		"\x04\x02\u0EAA\u0EB6\x05\x96L\x02\u0EAB\u0EB6\x05\xACW\x02\u0EAC\u0EB6" +
		"\x05\u011A\x8E\x02\u0EAD\u0EB6\x05\u0132\x9A\x02\u0EAE\u0EB6\x05\u041E" +
		"\u0210\x02\u0EAF\u0EB6\x05\u0426\u0214\x02\u0EB0\u0EB6\x05\u0434\u021B" +
		"\x02\u0EB1\u0EB6\x05\u043C\u021F\x02\u0EB2\u0EB6\x05\u0450\u0229\x02\u0EB3" +
		"\u0EB6\x05\u0462\u0232\x02\u0EB4\u0EB6\x05\u0634\u031B\x02\u0EB5\u0EA9" +
		"\x03\x02\x02\x02\u0EB5\u0EAA\x03\x02\x02\x02\u0EB5\u0EAB\x03\x02\x02\x02" +
		"\u0EB5\u0EAC\x03\x02\x02\x02\u0EB5\u0EAD\x03\x02\x02\x02\u0EB5\u0EAE\x03" +
		"\x02\x02\x02\u0EB5\u0EAF\x03\x02\x02\x02\u0EB5\u0EB0\x03\x02\x02\x02\u0EB5" +
		"\u0EB1\x03\x02\x02\x02\u0EB5\u0EB2\x03\x02\x02\x02\u0EB5\u0EB3\x03\x02" +
		"\x02\x02\u0EB5\u0EB4\x03\x02\x02\x02\u0EB6\u0EB9\x03\x02\x02\x02\u0EB7" +
		"\u0EB5\x03\x02\x02\x02\u0EB7\u0EB8\x03\x02\x02\x02\u0EB8\u0EBA\x03\x02" +
		"\x02\x02\u0EB9\u0EB7\x03\x02\x02\x02\u0EBA\u0EBB\x07\x04\x02\x02\u0EBB" +
		"\u026D\x03\x02\x02\x02\u0EBC\u0EBD\x07\xF5\x02\x02\u0EBD\u0EC1\x05\u0470" +
		"\u0239\x02\u0EBE\u0EC0\x05\u0134\x9B\x02\u0EBF\u0EBE\x03\x02\x02\x02\u0EC0" +
		"\u0EC3\x03\x02\x02\x02\u0EC1\u0EBF\x03\x02\x02\x02\u0EC1\u0EC2\x03\x02" +
		"\x02\x02\u0EC2\u0EC5\x03\x02\x02\x02\u0EC3\u0EC1\x03\x02\x02\x02\u0EC4" +
		"\u0EC6\x05\u046E\u0238\x02\u0EC5\u0EC4\x03\x02\x02\x02\u0EC5\u0EC6\x03" +
		"\x02\x02\x02\u0EC6\u0ECA\x03\x02\x02\x02\u0EC7\u0EC9\x05\u0134\x9B\x02" +
		"\u0EC8\u0EC7\x03\x02\x02\x02\u0EC9\u0ECC\x03\x02\x02\x02\u0ECA\u0EC8\x03" +
		"\x02\x02\x02\u0ECA\u0ECB\x03\x02\x02\x02\u0ECB\u0ECD\x03\x02\x02\x02\u0ECC" +
		"\u0ECA\x03\x02\x02\x02\u0ECD\u0ECE\x07\x04\x02\x02\u0ECE\u026F\x03\x02" +
		"\x02\x02\u0ECF\u0ED0\x07\xF6\x02\x02\u0ED0\u0ED3\x05\u0470\u0239\x02\u0ED1" +
		"\u0ED4\x05\u0614\u030B\x02\u0ED2\u0ED4\x05\u0632\u031A\x02\u0ED3\u0ED1" +
		"\x03\x02\x02\x02\u0ED3\u0ED2\x03\x02\x02\x02\u0ED4\u0EDA\x03\x02\x02\x02" +
		"\u0ED5\u0ED9\x05\x96L\x02\u0ED6\u0ED9\x05\u01AC\xD7\x02\u0ED7\u0ED9\x05" +
		"\u0472\u023A\x02\u0ED8\u0ED5\x03\x02\x02\x02\u0ED8\u0ED6\x03\x02\x02\x02" +
		"\u0ED8\u0ED7\x03\x02\x02\x02\u0ED9\u0EDC\x03\x02\x02\x02\u0EDA\u0ED8\x03" +
		"\x02\x02\x02\u0EDA\u0EDB\x03\x02\x02\x02\u0EDB\u0EDD\x03\x02\x02\x02\u0EDC" +
		"\u0EDA\x03\x02\x02\x02\u0EDD\u0EDE\x07\x04\x02\x02\u0EDE\u0271\x03\x02" +
		"\x02\x02\u0EDF\u0EE0\x07\xF7\x02\x02\u0EE0\u0EE1\x05\u0268\u0135\x02\u0EE1" +
		"\u0EE2\x07\x04\x02\x02\u0EE2\u0273\x03\x02\x02\x02\u0EE3\u0EE4\x07\xF8" +
		"\x02\x02\u0EE4\u0EE5\x05\u0280\u0141\x02\u0EE5\u0EE6\x07\x04\x02\x02\u0EE6" +
		"\u0275\x03\x02\x02\x02\u0EE7\u0EEB\x07\xF9\x02\x02\u0EE8\u0EEC\x05\x0E" +
		"\b\x02\u0EE9\u0EEC\x05\u048A\u0246\x02\u0EEA\u0EEC\x05\u0484\u0243\x02" +
		"\u0EEB\u0EE8\x03\x02\x02\x02\u0EEB\u0EE9\x03\x02\x02\x02\u0EEB\u0EEA\x03" +
		"\x02\x02\x02\u0EEC\u0EED\x03\x02\x02\x02\u0EED\u0EEE\x07\x04\x02\x02\u0EEE" +
		"\u0277\x03\x02\x02\x02\u0EEF\u0EF0\x07\xFA\x02\x02\u0EF0\u0EF1\x05\u0280" +
		"\u0141\x02\u0EF1\u0EF2\x07\x04\x02\x02\u0EF2\u0279\x03\x02\x02\x02\u0EF3" +
		"\u0EF4\x07\xFB\x02\x02\u0EF4\u0EF5\x05\xD6l\x02\u0EF5\u0EF6\x05\u067E" +
		"\u0340\x02\u0EF6\u0EF7\x07\x04\x02\x02\u0EF7\u027B\x03\x02\x02\x02\u0EF8" +
		"\u0EF9\x07\xFC\x02\x02\u0EF9\u0EFA\x05\xD8m\x02\u0EFA\u0EFB\x07\x04\x02" +
		"\x02\u0EFB\u027D\x03\x02\x02\x02\u0EFC\u0EFD\x07\xFD\x02\x02\u0EFD\u0EFE" +
		"\x05\u01A8\xD5\x02\u0EFE\u0EFF\x05\u0574\u02BB\x02\u0EFF\u0F00\x07\x04" +
		"\x02\x02\u0F00\u027F\x03\x02\x02\x02\u0F01\u0F10\x05\u0286\u0144\x02\u0F02" +
		"\u0F10\x05\u067E\u0340\x02\u0F03\u0F10\x05\u0288\u0145\x02\u0F04\u0F10" +
		"\x05\u028E\u0148\x02\u0F05\u0F10\x05\u0290\u0149\x02\u0F06\u0F10\x05\u028C" +
		"\u0147\x02\u0F07\u0F10\x05\u028A\u0146\x02\u0F08\u0F10\x05\u05CA\u02E6" +
		"\x02\u0F09\u0F10\x05\u027C\u013F\x02\u0F0A\u0F10\x05\u01D2\xEA\x02\u0F0B" +
		"\u0F10\x05\u042C\u0217\x02\u0F0C\u0F10\x05\u05A4\u02D3\x02\u0F0D\u0F10" +
		"\x05\x04\x03\x02\u0F0E\u0F10\x05\u025A\u012E\x02\u0F0F\u0F01\x03\x02\x02" +
		"\x02\u0F0F\u0F02\x03\x02\x02\x02\u0F0F\u0F03\x03\x02\x02\x02\u0F0F\u0F04" +
		"\x03\x02\x02\x02\u0F0F\u0F05\x03\x02\x02\x02\u0F0F\u0F06\x03\x02\x02\x02" +
		"\u0F0F\u0F07\x03\x02\x02\x02\u0F0F\u0F08\x03\x02\x02\x02\u0F0F\u0F09\x03" +
		"\x02\x02\x02\u0F0F\u0F0A\x03\x02\x02\x02\u0F0F\u0F0B\x03\x02\x02\x02\u0F0F" +
		"\u0F0C\x03\x02\x02\x02\u0F0F\u0F0D\x03\x02\x02\x02\u0F0F\u0F0E\x03\x02" +
		"\x02\x02\u0F10\u0281\x03\x02\x02\x02\u0F11\u0F12\x07\xFE\x02\x02\u0F12" +
		"\u0F17\x05\u03F4\u01FB\x02\u0F13\u0F16\x05\u0278\u013D\x02\u0F14\u0F16" +
		"\x05\u0376\u01BC\x02\u0F15\u0F13\x03\x02\x02\x02\u0F15\u0F14\x03\x02\x02" +
		"\x02\u0F16\u0F19\x03\x02\x02\x02\u0F17\u0F15\x03\x02\x02\x02\u0F17\u0F18" +
		"\x03\x02\x02\x02\u0F18\u0F1A\x03\x02\x02\x02\u0F19\u0F17\x03\x02\x02\x02" +
		"\u0F1A\u0F1B\x07\x04\x02\x02\u0F1B\u0283\x03\x02\x02\x02\u0F1C\u0F1D\x07" +
		"\xFF\x02\x02\u0F1D\u0F1E\x05\u03F8\u01FD\x02\u0F1E\u0F1F\x05\u0280\u0141" +
		"\x02\u0F1F\u0F20\x07\x04\x02\x02\u0F20\u0285\x03\x02\x02\x02\u0F21\u0F22" +
		"\x07\u0100\x02\x02\u0F22\u0F23\x05\u03F8\u01FD\x02\u0F23\u0F24\x07\x04" +
		"\x02\x02\u0F24\u0287\x03\x02\x02\x02\u0F25\u0F29\x07\u0101\x02\x02\u0F26" +
		"\u0F28\x05\u0280\u0141\x02\u0F27\u0F26\x03\x02\x02\x02\u0F28\u0F2B\x03" +
		"\x02\x02\x02\u0F29\u0F27\x03\x02\x02\x02\u0F29\u0F2A\x03\x02\x02\x02\u0F2A" +
		"\u0F2C\x03\x02\x02\x02\u0F2B\u0F29\x03\x02\x02\x02\u0F2C\u0F2D\x07\x04" +
		"\x02\x02\u0F2D\u0289\x03\x02\x02\x02\u0F2E\u0F2F\x07\u0102\x02\x02\u0F2F" +
		"\u0F30\x05\u013E\xA0\x02\u0F30\u0F31\x05\u0140\xA1\x02\u0F31\u0F32\x07" +
		"\x04\x02\x02\u0F32\u028B\x03\x02\x02\x02\u0F33\u0F34\x07\u0103\x02\x02" +
		"\u0F34\u0F35\x05\u013E\xA0\x02\u0F35\u0F36\x05\u0140\xA1\x02\u0F36\u0F37" +
		"\x07\x04\x02\x02\u0F37\u028D\x03\x02\x02\x02\u0F38\u0F39\x07\u0104\x02" +
		"\x02\u0F39\u0F3A\x05\u035C\u01AF\x02\u0F3A\u0F3B\x05\u05E2\u02F2\x02\u0F3B" +
		"\u0F3C\x07\x04\x02\x02\u0F3C\u028F\x03\x02\x02\x02\u0F3D\u0F41\x07\u0105" +
		"\x02\x02\u0F3E\u0F40\x05\u0280\u0141\x02\u0F3F\u0F3E\x03\x02\x02\x02\u0F40" +
		"\u0F43\x03\x02\x02\x02\u0F41\u0F3F\x03\x02\x02\x02\u0F41\u0F42\x03\x02" +
		"\x02\x02\u0F42\u0F44\x03\x02\x02\x02\u0F43\u0F41\x03\x02\x02\x02\u0F44" +
		"\u0F45\x07\x04\x02\x02\u0F45\u0291\x03\x02\x02\x02\u0F46\u0F47\x05\u067E" +
		"\u0340\x02\u0F47\u0293\x03\x02\x02\x02\u0F48\u0F49\x07\u0106\x02\x02\u0F49" +
		"\u0F52\x05\u0182\xC2\x02\u0F4A\u0F51\x05\x96L\x02\u0F4B\u0F51\x05\u0294" +
		"\u014B\x02\u0F4C\u0F51\x05\xE8u\x02\u0F4D\u0F51\x05\u0298\u014D\x02\u0F4E" +
		"\u0F51\x05\u0462\u0232\x02\u0F4F\u0F51\x05\u0472\u023A\x02\u0F50\u0F4A" +
		"\x03\x02\x02\x02\u0F50\u0F4B\x03\x02\x02\x02\u0F50\u0F4C\x03\x02\x02\x02" +
		"\u0F50\u0F4D\x03\x02\x02\x02\u0F50\u0F4E\x03\x02\x02\x02\u0F50\u0F4F\x03" +
		"\x02\x02\x02\u0F51\u0F54\x03\x02\x02\x02\u0F52\u0F50\x03\x02\x02\x02\u0F52" +
		"\u0F53\x03\x02\x02\x02\u0F53\u0F55\x03\x02\x02\x02\u0F54\u0F52\x03\x02" +
		"\x02\x02\u0F55\u0F56\x07\x04\x02\x02\u0F56\u0295\x03\x02\x02\x02\u0F57" +
		"\u0F58\x07\u0107\x02\x02\u0F58\u0F61\x05\"\x12\x02\u0F59\u0F60\x05\x16" +
		"\f\x02\u0F5A\u0F60\x05\xCEh\x02\u0F5B\u0F60\x05\xEAv\x02\u0F5C\u0F60\x05" +
		"\u029A\u014E\x02\u0F5D\u0F60\x05\u02A6\u0154\x02\u0F5E\u0F60\x05\u02AA" +
		"\u0156\x02\u0F5F\u0F59\x03\x02\x02\x02\u0F5F\u0F5A\x03\x02\x02\x02\u0F5F" +
		"\u0F5B\x03\x02\x02\x02\u0F5F\u0F5C\x03\x02\x02\x02\u0F5F\u0F5D\x03\x02" +
		"\x02\x02\u0F5F\u0F5E\x03\x02\x02\x02\u0F60\u0F63\x03\x02\x02\x02\u0F61" +
		"\u0F5F\x03\x02\x02\x02\u0F61\u0F62\x03\x02\x02\x02\u0F62\u0F64\x03\x02" +
		"\x02\x02\u0F63\u0F61\x03\x02\x02\x02\u0F64\u0F65\x07\x04\x02\x02\u0F65" +
		"\u0297\x03\x02\x02\x02\u0F66\u0F67\x07\u0108\x02\x02\u0F67\u0F68\x05\u029C" +
		"\u014F\x02\u0F68\u0F69\x05\u0114\x8B\x02\u0F69\u0F6E\x05\u0110\x89\x02" +
		"\u0F6A\u0F6D\x05*\x16\x02\u0F6B\u0F6D\x05\u060E\u0308\x02\u0F6C\u0F6A" +
		"\x03\x02\x02\x02\u0F6C\u0F6B\x03\x02\x02\x02\u0F6D\u0F70\x03\x02\x02\x02" +
		"\u0F6E\u0F6C\x03\x02\x02\x02\u0F6E\u0F6F\x03\x02\x02\x02\u0F6F\u0F71\x03" +
		"\x02\x02\x02\u0F70\u0F6E\x03\x02\x02\x02\u0F71\u0F72\x07\x04\x02\x02\u0F72" +
		"\u0299\x03\x02\x02\x02\u0F73\u0F74\x07\u0109\x02\x02\u0F74\u0F78\x05\u029E" +
		"\u0150\x02\u0F75\u0F77\x05\u0134\x9B\x02\u0F76\u0F75\x03\x02\x02\x02\u0F77" +
		"\u0F7A\x03\x02\x02\x02\u0F78\u0F76\x03\x02\x02\x02\u0F78\u0F79\x03\x02" +
		"\x02\x02\u0F79\u0F7B\x03\x02\x02\x02\u0F7A\u0F78\x03\x02\x02\x02\u0F7B" +
		"\u0F7C\x07\x04\x02\x02\u0F7C\u029B\x03\x02\x02\x02\u0F7D\u0F7E\x05\u0370" +
		"\u01B9\x02\u0F7E\u029D\x03\x02\x02\x02\u0F7F\u0F80\x05\u037A\u01BE\x02" +
		"\u0F80\u029F\x03\x02\x02\x02\u0F81\u0F89\x07\u010A\x02\x02\u0F82\u0F88" +
		"\x05\xE8u\x02\u0F83\u0F88\x05\u0142\xA2\x02\u0F84\u0F88\x05\u0298\u014D" +
		"\x02\u0F85\u0F88\x05\u0376\u01BC\x02\u0F86\u0F88\x05\u0462\u0232\x02\u0F87" +
		"\u0F82\x03\x02\x02\x02\u0F87\u0F83\x03\x02\x02\x02\u0F87\u0F84\x03\x02" +
		"\x02\x02\u0F87\u0F85\x03\x02\x02\x02\u0F87\u0F86\x03\x02\x02\x02\u0F88" +
		"\u0F8B\x03\x02\x02\x02\u0F89\u0F87\x03\x02\x02\x02\u0F89\u0F8A\x03\x02" +
		"\x02\x02\u0F8A\u0F8C\x03\x02\x02\x02\u0F8B\u0F89\x03\x02\x02\x02\u0F8C" +
		"\u0F8D\x07\x04\x02\x02\u0F8D\u02A1\x03\x02\x02\x02\u0F8E\u0F8F\x07\u010B" +
		"\x02\x02\u0F8F\u0F90\x05J&\x02\u0F90\u0F91\x07\x04\x02\x02\u0F91\u02A3" +
		"\x03\x02\x02\x02\u0F92\u0F93\x05\u0370\u01B9\x02\u0F93\u02A5\x03\x02\x02" +
		"\x02\u0F94\u0F99\x07\u010C\x02\x02\u0F95\u0F98\x05\u0134\x9B\x02\u0F96" +
		"\u0F98\x05\u013A\x9E\x02\u0F97\u0F95\x03\x02";
	private static readonly _serializedATNSegment8: string =
		"\x02\x02\u0F97\u0F96\x03\x02\x02\x02\u0F98\u0F9B\x03\x02\x02\x02\u0F99" +
		"\u0F97\x03\x02\x02\x02\u0F99\u0F9A\x03\x02\x02\x02\u0F9A\u0F9C\x03\x02" +
		"\x02\x02\u0F9B\u0F99\x03\x02\x02\x02\u0F9C\u0F9D\x07\x04\x02\x02\u0F9D" +
		"\u02A7\x03\x02\x02\x02\u0F9E\u0F9F\x05\u037A\u01BE\x02\u0F9F\u02A9\x03" +
		"\x02\x02\x02\u0FA0\u0FA1\x07\u010D\x02\x02\u0FA1\u0FA5\x05\u0470\u0239" +
		"\x02\u0FA2\u0FA4\x05\u0134\x9B\x02\u0FA3\u0FA2\x03\x02\x02\x02\u0FA4\u0FA7" +
		"\x03\x02\x02\x02\u0FA5\u0FA3\x03\x02\x02\x02\u0FA5\u0FA6\x03\x02\x02\x02" +
		"\u0FA6\u0FA9\x03\x02\x02\x02\u0FA7\u0FA5\x03\x02\x02\x02\u0FA8\u0FAA\x05" +
		"\u046E\u0238\x02\u0FA9\u0FA8\x03\x02\x02\x02\u0FA9\u0FAA\x03\x02\x02\x02" +
		"\u0FAA\u0FAE\x03\x02\x02\x02\u0FAB\u0FAD\x05\u0134\x9B\x02\u0FAC\u0FAB" +
		"\x03\x02\x02\x02\u0FAD\u0FB0\x03\x02\x02\x02\u0FAE\u0FAC\x03\x02\x02\x02" +
		"\u0FAE\u0FAF\x03\x02\x02\x02\u0FAF\u0FB1\x03\x02\x02\x02\u0FB0\u0FAE\x03" +
		"\x02\x02\x02\u0FB1\u0FB2\x07\x04\x02\x02\u0FB2\u02AB\x03\x02\x02\x02\u0FB3" +
		"\u0FB4\x07\u010E\x02\x02\u0FB4\u0FB6\x05\u02A8\u0155\x02\u0FB5\u0FB7\x05" +
		"\u03DE\u01F0\x02\u0FB6\u0FB5\x03\x02\x02\x02\u0FB6\u0FB7\x03\x02\x02\x02" +
		"\u0FB7\u0FB8\x03\x02\x02\x02\u0FB8\u0FB9\x07\x04\x02\x02\u0FB9\u02AD\x03" +
		"\x02\x02\x02\u0FBA\u0FBE\x07\u010F\x02\x02\u0FBB\u0FBD\x05\u02AC\u0157" +
		"\x02\u0FBC\u0FBB\x03\x02\x02\x02\u0FBD\u0FC0\x03\x02\x02\x02\u0FBE\u0FBC" +
		"\x03\x02\x02\x02\u0FBE\u0FBF\x03\x02\x02\x02\u0FBF\u0FC1\x03\x02\x02\x02" +
		"\u0FC0\u0FBE\x03\x02\x02\x02\u0FC1\u0FC2\x07\x04\x02\x02\u0FC2\u02AF\x03" +
		"\x02\x02\x02\u0FC3\u0FC4\x07\u0110\x02\x02\u0FC4\u0FD3\x05\u02B4\u015B" +
		"\x02\u0FC5\u0FD2\x05\u011A\x8E\x02\u0FC6\u0FD2\x05D#\x02\u0FC7\u0FD2\x05" +
		"\u0282\u0142\x02\u0FC8\u0FD2\x05\u02B2\u015A\x02\u0FC9\u0FD2\x05\u036A" +
		"\u01B6\x02\u0FCA\u0FD2\x05\u0394\u01CB\x02\u0FCB\u0FD2\x05\u0404\u0203" +
		"\x02\u0FCC\u0FD2\x05\u0416\u020C\x02\u0FCD\u0FD2\x05\u041C\u020F\x02\u0FCE" +
		"\u0FD2\x05\u05CC\u02E7\x02\u0FCF\u0FD2\x05\u05FC\u02FF\x02\u0FD0\u0FD2" +
		"\x05\u0666\u0334\x02\u0FD1\u0FC5\x03\x02\x02\x02\u0FD1\u0FC6\x03\x02\x02" +
		"\x02\u0FD1\u0FC7\x03\x02\x02\x02\u0FD1\u0FC8\x03\x02\x02\x02\u0FD1\u0FC9" +
		"\x03\x02\x02\x02\u0FD1\u0FCA\x03\x02\x02\x02\u0FD1\u0FCB\x03\x02\x02\x02" +
		"\u0FD1\u0FCC\x03\x02\x02\x02\u0FD1\u0FCD\x03\x02\x02\x02\u0FD1\u0FCE\x03" +
		"\x02\x02\x02\u0FD1\u0FCF\x03\x02\x02\x02\u0FD1\u0FD0\x03\x02\x02\x02\u0FD2" +
		"\u0FD5\x03\x02\x02\x02\u0FD3\u0FD1\x03\x02\x02\x02\u0FD3\u0FD4\x03\x02" +
		"\x02\x02\u0FD4\u0FD6\x03\x02\x02\x02\u0FD5\u0FD3\x03\x02\x02\x02\u0FD6" +
		"\u0FD7\x07\x04\x02\x02\u0FD7\u02B1\x03\x02\x02\x02\u0FD8\u0FDC\x07\u0111" +
		"\x02\x02\u0FD9\u0FDB\x05\u0452\u022A\x02\u0FDA\u0FD9\x03\x02\x02\x02\u0FDB" +
		"\u0FDE\x03\x02\x02\x02\u0FDC\u0FDA\x03\x02\x02\x02\u0FDC\u0FDD\x03\x02" +
		"\x02\x02\u0FDD\u0FDF\x03\x02\x02\x02\u0FDE\u0FDC\x03\x02\x02\x02\u0FDF" +
		"\u0FE0\x07\x04\x02\x02\u0FE0\u02B3\x03\x02\x02\x02\u0FE1\u0FE6\x07\u0112" +
		"\x02\x02\u0FE2\u0FE5\x05\u0584\u02C3\x02\u0FE3\u0FE5\x05\u058C\u02C7\x02" +
		"\u0FE4\u0FE2\x03\x02\x02\x02\u0FE4\u0FE3\x03\x02\x02\x02\u0FE5\u0FE8\x03" +
		"\x02\x02\x02\u0FE6\u0FE4\x03\x02\x02\x02\u0FE6\u0FE7\x03\x02\x02\x02\u0FE7" +
		"\u0FE9\x03\x02\x02\x02\u0FE8\u0FE6\x03\x02\x02\x02\u0FE9\u0FEA\x07\x04" +
		"\x02\x02\u0FEA\u02B5\x03\x02\x02\x02\u0FEB\u0FEC\x07\u0113\x02\x02\u0FEC" +
		"\u0FED\x05\u02B8\u015D\x02\u0FED\u0FEE\x07\x04\x02\x02\u0FEE\u02B7\x03" +
		"\x02\x02\x02\u0FEF\u0FF0\x05\u067E\u0340\x02\u0FF0\u02B9\x03\x02\x02\x02" +
		"\u0FF1\u0FF2\x07\u0114\x02\x02\u0FF2\u0FF3\x07\x04\x02\x02\u0FF3\u02BB" +
		"\x03\x02\x02\x02\u0FF4\u0FF5\x05\u067E\u0340\x02\u0FF5\u02BD\x03\x02\x02" +
		"\x02\u0FF6\u0FF7\x07\u0115\x02\x02\u0FF7\u0FF8\x07\x04\x02\x02\u0FF8\u02BF" +
		"\x03\x02\x02\x02\u0FF9\u0FFA\x07\u0116\x02\x02\u0FFA\u0FFB\x07\x04\x02" +
		"\x02\u0FFB\u02C1\x03\x02\x02\x02\u0FFC\u0FFD\x07\u0117\x02\x02\u0FFD\u0FFE" +
		"\x07\x04\x02\x02\u0FFE\u02C3\x03\x02\x02\x02\u0FFF\u1000\x07\u0118\x02" +
		"\x02\u1000\u1001\x07\x04\x02\x02\u1001\u02C5\x03\x02\x02\x02\u1002\u1003" +
		"\x07\u0119\x02\x02\u1003\u1004\x05\u0624\u0313\x02\u1004\u1005\x07\x04" +
		"\x02\x02\u1005\u02C7\x03\x02\x02\x02\u1006\u1007\x07\u011A\x02\x02\u1007" +
		"\u1008\x07\x04\x02\x02\u1008\u02C9\x03\x02\x02\x02\u1009\u100A\x07\u011B" +
		"\x02\x02\u100A\u100B\x05\u02CE\u0168\x02\u100B\u100C\x05\u02D0\u0169\x02" +
		"\u100C\u100D\x07\x04\x02\x02\u100D\u02CB\x03\x02\x02\x02\u100E\u1012\x07" +
		"\u011C\x02\x02\u100F\u1011\x05\u02CA\u0166\x02\u1010\u100F\x03\x02\x02" +
		"\x02\u1011\u1014\x03\x02\x02\x02\u1012\u1010\x03\x02\x02\x02\u1012\u1013" +
		"\x03\x02\x02\x02\u1013\u1015\x03\x02\x02\x02\u1014\u1012\x03\x02\x02\x02" +
		"\u1015\u1016\x07\x04\x02\x02\u1016\u02CD\x03\x02\x02\x02\u1017\u1018\x07" +
		"\u029D\x02\x02\u1018\u02CF\x03\x02\x02\x02\u1019\u101A\x07\u029D\x02\x02" +
		"\u101A\u02D1\x03\x02\x02\x02\u101B\u101C\x07\u011D\x02\x02\u101C\u101D" +
		"\x05\u02DA\u016E\x02\u101D\u101E\x07\x04\x02\x02\u101E\u02D3\x03\x02\x02" +
		"\x02\u101F\u1020\x07\u011E\x02\x02\u1020\u1027\x05\u02D0\u0169\x02\u1021" +
		"\u1026\x05\x96L\x02\u1022\u1026\x05\u02D2\u016A\x02\u1023\u1026\x05\u02D4" +
		"\u016B\x02\u1024\u1026\x05\u02E4\u0173\x02\u1025\u1021\x03\x02\x02\x02" +
		"\u1025\u1022\x03\x02\x02\x02\u1025\u1023\x03\x02\x02\x02\u1025\u1024\x03" +
		"\x02\x02\x02\u1026\u1029\x03\x02\x02\x02\u1027\u1025\x03\x02\x02\x02\u1027" +
		"\u1028\x03\x02\x02\x02\u1028\u102A\x03\x02\x02\x02\u1029\u1027\x03\x02" +
		"\x02\x02\u102A\u102B\x07\x04\x02\x02\u102B\u02D5\x03\x02\x02\x02\u102C" +
		"\u102D\x07\u011F\x02\x02\u102D\u1030\x05\u02D8\u016D\x02\u102E\u1031\x05" +
		"\u02E6\u0174\x02\u102F\u1031\x05\u02E8\u0175\x02\u1030\u102E\x03\x02\x02" +
		"\x02\u1030\u102F\x03\x02\x02\x02\u1031\u1032\x03\x02\x02\x02\u1032\u1033" +
		"\x07\x04\x02\x02\u1033\u02D7\x03\x02\x02\x02\u1034\u1035\x07\u029D\x02" +
		"\x02\u1035\u02D9\x03\x02\x02\x02\u1036\u1037\x07\u029D\x02\x02\u1037\u02DB" +
		"\x03\x02\x02\x02\u1038\u103F\x07\u0120\x02\x02\u1039\u103E\x05\x96L\x02" +
		"\u103A\u103E\x05\u02D2\u016A\x02\u103B\u103E\x05\u02D4\u016B\x02\u103C" +
		"\u103E\x05\u02E4\u0173\x02\u103D\u1039\x03\x02\x02\x02\u103D\u103A\x03" +
		"\x02\x02\x02\u103D\u103B\x03\x02\x02\x02\u103D\u103C\x03\x02\x02\x02\u103E" +
		"\u1041\x03\x02\x02\x02\u103F\u103D\x03\x02\x02\x02\u103F\u1040\x03\x02" +
		"\x02\x02\u1040\u1042\x03\x02\x02\x02\u1041\u103F\x03\x02\x02\x02\u1042" +
		"\u1043\x07\x04\x02\x02\u1043\u02DD\x03\x02\x02\x02\u1044\u1045\x07\u0121" +
		"\x02\x02\u1045\u1046\x05\u02CE\u0168\x02\u1046\u1047\x05\u02E2\u0172\x02" +
		"\u1047\u1048\x05\u02DC\u016F\x02\u1048\u1049\x07\x04\x02\x02\u1049\u02DF" +
		"\x03\x02\x02\x02\u104A\u104F\x07\u0122\x02\x02\u104B\u104E\x05\u02CA\u0166" +
		"\x02\u104C\u104E\x05\u02DE\u0170\x02\u104D\u104B\x03\x02\x02\x02\u104D" +
		"\u104C\x03\x02\x02\x02\u104E\u1051\x03\x02\x02\x02\u104F\u104D\x03\x02" +
		"\x02\x02\u104F\u1050\x03\x02\x02\x02\u1050\u1052\x03\x02\x02\x02\u1051" +
		"\u104F\x03\x02\x02\x02\u1052\u1053\x07\x04\x02\x02\u1053\u02E1\x03\x02" +
		"\x02\x02\u1054\u1058\x07\u0123\x02\x02\u1055\u1057\x05\u02D6\u016C\x02" +
		"\u1056\u1055\x03\x02\x02\x02\u1057\u105A\x03\x02\x02\x02\u1058\u1056\x03" +
		"\x02\x02\x02\u1058\u1059\x03\x02\x02\x02\u1059\u105B\x03\x02\x02\x02\u105A" +
		"\u1058\x03\x02\x02\x02\u105B\u105C\x07\x04\x02\x02\u105C\u02E3\x03\x02" +
		"\x02\x02\u105D\u1063\x07\u0124\x02\x02\u105E\u1062\x07\u029D\x02\x02\u105F" +
		"\u1062\x05\u067E\u0340\x02\u1060\u1062\x05\u0680\u0341\x02\u1061\u105E" +
		"\x03\x02\x02\x02\u1061\u105F\x03\x02\x02\x02\u1061\u1060\x03\x02\x02\x02" +
		"\u1062\u1065\x03\x02\x02\x02\u1063\u1061\x03\x02\x02\x02\u1063\u1064\x03" +
		"\x02\x02\x02\u1064\u1066\x03\x02\x02\x02\u1065\u1063\x03\x02\x02\x02\u1066" +
		"\u1067\x07\x04\x02\x02\u1067\u02E5\x03\x02\x02\x02\u1068\u106C\x07\u0125" +
		"\x02\x02\u1069\u106D\x05\u02E4\u0173\x02\u106A\u106D\x05\u02D2\u016A\x02" +
		"\u106B\u106D\x05\u02D4\u016B\x02\u106C\u1069\x03\x02\x02\x02\u106C\u106A" +
		"\x03\x02\x02\x02\u106C\u106B\x03\x02\x02\x02\u106D\u106E\x03\x02\x02\x02" +
		"\u106E\u106F\x07\x04\x02\x02\u106F\u02E7\x03\x02\x02\x02\u1070\u1071\x07" +
		"\u0126\x02\x02\u1071\u1072\x07\x04\x02\x02\u1072\u02E9\x03\x02\x02\x02" +
		"\u1073\u1074\x07\u0127\x02\x02\u1074\u107C\x05\u02D0\u0169\x02\u1075\u107B" +
		"\x05\x96L\x02\u1076\u107B\x05\u02D2\u016A\x02\u1077\u107B\x05\u02E4\u0173" +
		"\x02\u1078\u107B\x05\u02EA\u0176\x02\u1079\u107B\x05\u02EE\u0178\x02\u107A" +
		"\u1075\x03\x02\x02\x02\u107A\u1076\x03\x02\x02\x02\u107A\u1077\x03\x02" +
		"\x02\x02\u107A\u1078\x03\x02\x02\x02\u107A\u1079\x03\x02\x02\x02\u107B" +
		"\u107E\x03\x02\x02\x02\u107C\u107A\x03\x02\x02\x02\u107C\u107D\x03\x02" +
		"\x02\x02\u107D\u107F\x03\x02\x02\x02\u107E\u107C\x03\x02\x02\x02\u107F" +
		"\u1080\x07\x04\x02\x02\u1080\u02EB\x03\x02\x02\x02\u1081\u1082\x07\u0128" +
		"\x02\x02\u1082\u1083\x07\x04\x02\x02\u1083\u02ED\x03\x02\x02\x02\u1084" +
		"\u1087\x07\u0129\x02\x02\u1085\u1088\x05\u02DA\u016E\x02\u1086\u1088\x05" +
		"\u02F2\u017A\x02\u1087\u1085\x03\x02\x02\x02\u1087\u1086\x03\x02\x02\x02" +
		"\u1088\u1090\x03\x02\x02\x02\u1089\u108F\x05\x96L\x02\u108A\u108F\x05" +
		"\u02D2\u016A\x02\u108B\u108F\x05\u02E4\u0173\x02\u108C\u108F\x05\u02EA" +
		"\u0176\x02\u108D\u108F\x05\u02EE\u0178\x02\u108E\u1089\x03\x02\x02\x02" +
		"\u108E\u108A\x03\x02\x02\x02\u108E\u108B\x03\x02\x02\x02\u108E\u108C\x03" +
		"\x02\x02\x02\u108E\u108D\x03\x02\x02\x02\u108F\u1092\x03\x02\x02\x02\u1090" +
		"\u108E\x03\x02\x02\x02\u1090\u1091\x03\x02\x02\x02\u1091\u1093\x03\x02" +
		"\x02\x02\u1092\u1090\x03\x02\x02\x02\u1093\u1094\x07\x04\x02\x02\u1094" +
		"\u02EF\x03\x02\x02\x02\u1095\u1096\x07\u012A\x02\x02\u1096\u109A\x05\u02D8" +
		"\u016D\x02\u1097\u109B\x05\u02E6\u0174\x02\u1098\u109B\x05\u02E8\u0175" +
		"\x02\u1099\u109B\x05\u02EC\u0177\x02\u109A\u1097\x03\x02\x02\x02\u109A" +
		"\u1098\x03\x02\x02\x02\u109A\u1099\x03\x02\x02\x02\u109B\u109C\x03\x02" +
		"\x02\x02\u109C\u109D\x07\x04\x02\x02\u109D\u02F1\x03\x02\x02\x02\u109E" +
		"\u10A2\x07\u012B\x02\x02\u109F\u10A1\x05\u02DA\u016E\x02\u10A0\u109F\x03" +
		"\x02\x02\x02\u10A1\u10A4\x03\x02\x02\x02\u10A2\u10A0\x03\x02\x02\x02\u10A2" +
		"\u10A3\x03\x02\x02\x02\u10A3\u10A5\x03\x02\x02\x02\u10A4\u10A2\x03\x02" +
		"\x02\x02\u10A5\u10A6\x07\x04\x02\x02\u10A6\u02F3\x03\x02\x02\x02\u10A7" +
		"\u10AF\x07\u012C\x02\x02\u10A8\u10AE\x05\x96L\x02\u10A9\u10AE\x05\u02D2" +
		"\u016A\x02\u10AA\u10AE\x05\u02D4\u016B\x02\u10AB\u10AE\x05\u02E4\u0173" +
		"\x02\u10AC\u10AE\x05\u02EE\u0178\x02\u10AD\u10A8\x03\x02\x02\x02\u10AD" +
		"\u10A9\x03\x02\x02\x02\u10AD\u10AA\x03\x02\x02\x02\u10AD\u10AB\x03\x02" +
		"\x02\x02\u10AD\u10AC\x03\x02\x02\x02\u10AE\u10B1\x03\x02\x02\x02\u10AF" +
		"\u10AD\x03\x02\x02\x02\u10AF\u10B0\x03\x02\x02\x02\u10B0\u10B2\x03\x02" +
		"\x02\x02\u10B1\u10AF\x03\x02\x02\x02\u10B2\u10B3\x07\x04\x02\x02\u10B3" +
		"\u02F5\x03\x02\x02\x02\u10B4\u10B5\x07\u012D\x02\x02\u10B5\u10B6\x05\u02CE" +
		"\u0168\x02\u10B6\u10B7\x05\u02FA\u017E\x02\u10B7\u10B8\x05\u02F4\u017B" +
		"\x02\u10B8\u10B9\x07\x04\x02\x02\u10B9\u02F7\x03\x02\x02\x02\u10BA\u10BF" +
		"\x07\u012E\x02\x02\u10BB\u10BE\x05\u02CA\u0166\x02\u10BC\u10BE\x05\u02F6" +
		"\u017C\x02\u10BD\u10BB\x03\x02\x02\x02\u10BD\u10BC\x03\x02\x02\x02\u10BE" +
		"\u10C1\x03\x02\x02\x02\u10BF\u10BD\x03\x02\x02\x02\u10BF\u10C0\x03\x02" +
		"\x02\x02\u10C0\u10C2\x03\x02\x02\x02\u10C1\u10BF\x03\x02\x02\x02\u10C2" +
		"\u10C3\x07\x04\x02\x02\u10C3\u02F9\x03\x02\x02\x02\u10C4\u10C8\x07\u012F" +
		"\x02\x02\u10C5\u10C7\x05\u02F0\u0179\x02\u10C6\u10C5\x03\x02\x02\x02\u10C7" +
		"\u10CA\x03\x02\x02\x02\u10C8\u10C6\x03\x02\x02\x02\u10C8\u10C9\x03\x02" +
		"\x02\x02\u10C9\u10CB\x03\x02\x02\x02\u10CA\u10C8\x03\x02\x02\x02\u10CB" +
		"\u10CC\x07\x04\x02\x02\u10CC\u02FB\x03\x02\x02\x02\u10CD\u10CE\x07\u0130" +
		"\x02\x02\u10CE\u10CF\x05\u0624\u0313\x02\u10CF\u10D0\x07\x04\x02\x02\u10D0" +
		"\u02FD\x03\x02\x02\x02\u10D1\u10D6\x07\u0131\x02\x02\u10D2\u10D7\x05\u02C8" +
		"\u0165\x02\u10D3\u10D7\x05\u02CC\u0167\x02\u10D4\u10D7\x05\u02E0\u0171" +
		"\x02\u10D5\u10D7\x05\u02F8\u017D\x02\u10D6\u10D2\x03\x02\x02\x02\u10D6" +
		"\u10D3\x03\x02\x02\x02\u10D6\u10D4\x03\x02\x02\x02\u10D6\u10D5\x03\x02" +
		"\x02\x02\u10D7\u10DB\x03\x02\x02\x02\u10D8\u10DA\x05\x96L\x02\u10D9\u10D8" +
		"\x03\x02\x02\x02\u10DA\u10DD\x03\x02\x02\x02\u10DB\u10D9\x03\x02\x02\x02" +
		"\u10DB\u10DC\x03\x02\x02\x02\u10DC\u10DE\x03\x02\x02\x02\u10DD\u10DB\x03" +
		"\x02\x02\x02\u10DE\u10DF\x07\x04\x02\x02\u10DF\u02FF\x03\x02\x02\x02\u10E0" +
		"\u10E1\x07\u0132\x02\x02\u10E1\u10E2\x05\u0624\u0313\x02\u10E2\u10E3\x07" +
		"\x04\x02\x02\u10E3\u0301\x03\x02\x02\x02\u10E4\u10E5\x07\u0133\x02\x02" +
		"\u10E5\u10E6\x07\x04\x02\x02\u10E6\u0303\x03\x02\x02\x02\u10E7\u10EA\x07" +
		"\u0134\x02\x02\u10E8\u10EB\x05\u017E\xC0\x02\u10E9\u10EB\x05\u0180\xC1" +
		"\x02\u10EA\u10E8\x03\x02\x02\x02\u10EA\u10E9\x03\x02\x02\x02\u10EB\u10F5" +
		"\x03\x02\x02\x02\u10EC\u10F4\x05h5\x02\u10ED\u10F4\x05\x90I\x02\u10EE" +
		"\u10F4\x05\x96L\x02\u10EF\u10F4\x05\u011A\x8E\x02\u10F0\u10F4\x05\u0270" +
		"\u0139\x02\u10F1\u10F4\x05\u0418\u020D\x02\u10F2\u10F4\x05\u0462\u0232" +
		"\x02\u10F3\u10EC\x03\x02\x02\x02\u10F3\u10ED\x03\x02\x02\x02\u10F3\u10EE" +
		"\x03\x02\x02\x02\u10F3\u10EF\x03\x02\x02\x02\u10F3\u10F0\x03\x02\x02\x02" +
		"\u10F3\u10F1\x03\x02\x02\x02\u10F3\u10F2\x03\x02\x02\x02\u10F4\u10F7\x03" +
		"\x02\x02\x02\u10F5\u10F3\x03\x02\x02\x02\u10F5\u10F6\x03\x02\x02\x02\u10F6" +
		"\u10F8\x03\x02\x02\x02\u10F7\u10F5\x03\x02\x02\x02\u10F8\u10F9\x07\x04" +
		"\x02\x02\u10F9\u0305\x03\x02\x02\x02\u10FA\u10FB\x07\u0135\x02\x02\u10FB" +
		"\u10FC\x07\x04\x02\x02\u10FC\u0307\x03\x02\x02\x02\u10FD\u10FE\x05\u013C" +
		"\x9F\x02\u10FE\u0309\x03\x02\x02\x02\u10FF\u1103\x07\u0136\x02\x02\u1100" +
		"\u1102\x05\u0280\u0141\x02\u1101\u1100\x03\x02\x02\x02\u1102\u1105\x03" +
		"\x02\x02\x02\u1103\u1101\x03\x02\x02\x02\u1103\u1104\x03\x02\x02\x02\u1104" +
		"\u1106\x03\x02\x02\x02\u1105\u1103\x03\x02\x02\x02\u1106\u1107\x07\x04" +
		"\x02\x02\u1107\u030B\x03\x02\x02\x02\u1108\u110C\x07\u0137\x02\x02\u1109" +
		"\u110B\x05\u0280\u0141\x02\u110A\u1109\x03\x02\x02\x02\u110B\u110E\x03" +
		"\x02\x02\x02\u110C\u110A\x03\x02\x02\x02\u110C\u110D\x03\x02\x02\x02\u110D" +
		"\u110F\x03\x02\x02\x02\u110E\u110C\x03\x02\x02\x02\u110F\u1110\x07\x04" +
		"\x02\x02\u1110\u030D\x03\x02\x02\x02\u1111\u1112\x07\u0138\x02\x02\u1112" +
		"\u1113\x05\u0314\u018B\x02\u1113\u1129\x05\u0310\u0189\x02\u1114\u1128" +
		"\x05^0\x02\u1115\u1128\x05\u04E4\u0273\x02\u1116\u1128\x05\u04EC\u0277" +
		"\x02\u1117\u1128\x05\u04C8\u0265\x02\u1118\u1128\x05\u04F4\u027B\x02\u1119" +
		"\u1128\x05\u0506\u0284\x02\u111A\u1128\x05\u050E\u0288\x02\u111B\u1128" +
		"\x05\u0544\u02A3\x02\u111C\u1128\x05\u0556\u02AC\x02\u111D\u1128\x05\u0560" +
		"\u02B1\x02\u111E\u1128\x05\u03CA\u01E6\x02\u111F\u1128\x05\u03EA\u01F6" +
		"\x02\u1120\u1128\x05\x96L\x02\u1121\u1128\x05\u01F0\xF9\x02\u1122\u1128" +
		"\x05\u04B2\u025A\x02\u1123\u1128\x05\u04B8\u025D\x02\u1124\u1128\x05\u04CE" +
		"\u0268\x02\u1125\u1128\x05\u0514\u028B\x02\u1126\u1128\x05\u0638\u031D" +
		"\x02\u1127\u1114\x03\x02\x02\x02\u1127\u1115\x03\x02\x02\x02\u1127\u1116" +
		"\x03\x02\x02\x02\u1127\u1117\x03\x02\x02\x02\u1127\u1118\x03\x02\x02\x02" +
		"\u1127\u1119\x03\x02\x02\x02\u1127\u111A\x03\x02\x02\x02\u1127\u111B\x03" +
		"\x02\x02\x02\u1127\u111C\x03\x02\x02\x02\u1127\u111D\x03\x02\x02\x02\u1127" +
		"\u111E\x03\x02\x02\x02\u1127\u111F\x03\x02\x02\x02\u1127\u1120\x03\x02" +
		"\x02\x02\u1127\u1121\x03\x02\x02\x02\u1127\u1122\x03\x02\x02\x02\u1127" +
		"\u1123\x03\x02\x02\x02\u1127\u1124\x03\x02\x02\x02\u1127\u1125\x03\x02" +
		"\x02\x02\u1127\u1126\x03\x02\x02\x02\u1128\u112B\x03\x02\x02\x02\u1129" +
		"\u1127\x03\x02\x02\x02\u1129\u112A\x03\x02\x02\x02\u112A\u112C\x03\x02" +
		"\x02\x02\u112B\u1129\x03\x02\x02\x02\u112C\u112D\x07\x04\x02\x02\u112D" +
		"\u030F\x03\x02\x02\x02\u112E\u112F\x07\u0139\x02\x02\u112F\u1130\x05\u0164" +
		"\xB3\x02\u1130\u1131\x05\u036E\u01B8\x02\u1131\u1139\x05\u05EC\u02F7\x02" +
		"\u1132\u1138\x05&\x14\x02\u1133\u1138\x05\u0142\xA2\x02\u1134\u1138\x05" +
		"\u0376\u01BC\x02\u1135\u1138\x05\u0462\u0232\x02\u1136\u1138\x05\u05BA" +
		"\u02DE\x02\u1137\u1132\x03\x02\x02\x02\u1137\u1133\x03\x02\x02\x02\u1137" +
		"\u1134\x03\x02\x02\x02\u1137\u1135\x03\x02\x02\x02\u1137\u1136\x03\x02" +
		"\x02\x02\u1138\u113B\x03\x02\x02\x02\u1139\u1137\x03\x02\x02\x02\u1139" +
		"\u113A\x03\x02\x02\x02\u113A\u113C\x03\x02\x02\x02\u113B\u1139\x03\x02" +
		"\x02\x02\u113C\u113D\x07\x04\x02\x02\u113D\u0311\x03\x02\x02\x02\u113E" +
		"\u113F\x07\u013A\x02\x02\u113F\u1140\x05J&\x02\u1140\u1141\x07\x04\x02" +
		"\x02\u1141\u0313\x03\x02\x02\x02\u1142\u1143\x05\u0370\u01B9\x02\u1143" +
		"\u0315\x03\x02\x02\x02\u1144\u1145\x05\u037A\u01BE\x02\u1145\u0317\x03" +
		"\x02\x02\x02\u1146\u1147\x07\u013B\x02\x02\u1147\u1148\x05J&\x02\u1148" +
		"\u1149\x07\x04\x02\x02\u1149\u0319\x03\x02\x02\x02\u114A\u114B\x05\u0370" +
		"\u01B9\x02\u114B\u031B\x03\x02\x02\x02\u114C\u114D\x05\u037A\u01BE\x02" +
		"\u114D\u031D\x03\x02\x02\x02\u114E\u114F\x07\u013C\x02\x02\u114F\u1150" +
		"\x05\u0316\u018C\x02\u1150\u1151\x07\x04\x02\x02\u1151\u031F\x03\x02\x02" +
		"\x02\u1152\u1153\x07\u013D\x02\x02\u1153\u1154\x05\f\x07\x02\u1154\u1155" +
		"\x05\n\x06\x02\u1155\u1156\x07\x04\x02\x02\u1156\u0321\x03\x02\x02\x02" +
		"\u1157\u1158\x07\u013E\x02\x02\u1158\u1159\x05\u0326\u0194\x02\u1159\u1160" +
		"\x05\u0432\u021A\x02\u115A\u115F\x05\x96L\x02\u115B\u115F\x05\u0376\u01BC" +
		"\x02\u115C\u115F\x05\u0462\u0232\x02\u115D\u115F\x05\u0638\u031D\x02\u115E" +
		"\u115A\x03\x02\x02\x02\u115E\u115B\x03\x02\x02\x02\u115E\u115C\x03\x02" +
		"\x02\x02\u115E\u115D\x03\x02\x02\x02\u115F\u1162\x03\x02\x02\x02\u1160" +
		"\u115E\x03\x02\x02\x02\u1160\u1161\x03\x02\x02\x02\u1161\u1163\x03\x02" +
		"\x02\x02\u1162\u1160\x03\x02\x02\x02\u1163\u1164\x07\x04\x02\x02\u1164" +
		"\u0323\x03\x02\x02\x02\u1165\u1166\x07\u013F\x02\x02\u1166\u1167\x05J" +
		"&\x02\u1167\u1168\x07\x04\x02\x02\u1168\u0325\x03\x02\x02\x02\u1169\u116A" +
		"\x05\u0370\u01B9\x02\u116A\u0327\x03\x02\x02\x02\u116B\u116C\x05\u037A" +
		"\u01BE\x02\u116C\u0329\x03\x02\x02\x02\u116D\u116E\x07\u0140\x02\x02\u116E" +
		"\u116F\x05\u0328\u0195\x02\u116F\u1170\x07\x04\x02\x02\u1170\u032B\x03" +
		"\x02\x02\x02\u1171\u117C\x07\u0141\x02\x02\u1172\u117B\x05\x96L\x02\u1173" +
		"\u117B\x05\u01C8\xE5\x02\u1174\u117B\x05\u022C\u0117\x02\u1175\u117B\x05" +
		"\u0256\u012C\x02\u1176\u117B\x05\u03B6\u01DC\x02\u1177\u117B\x05\u0594" +
		"\u02CB\x02\u1178\u117B\x05\u0598\u02CD\x02\u1179\u117B\x05\u0638\u031D" +
		"\x02\u117A\u1172\x03\x02\x02\x02\u117A\u1173\x03\x02\x02\x02\u117A\u1174" +
		"\x03\x02\x02\x02\u117A\u1175\x03\x02\x02\x02\u117A\u1176\x03\x02\x02\x02" +
		"\u117A\u1177\x03\x02\x02\x02\u117A\u1178\x03\x02\x02\x02\u117A\u1179\x03" +
		"\x02\x02\x02\u117B\u117E\x03\x02\x02\x02\u117C\u117A\x03\x02\x02\x02\u117C" +
		"\u117D\x03\x02\x02\x02\u117D\u117F\x03\x02\x02\x02\u117E\u117C\x03\x02" +
		"\x02\x02\u117F\u1180\x07\x04\x02\x02\u1180\u032D\x03\x02\x02\x02\u1181" +
		"\u1182\x07\u0142\x02\x02\u1182\u1183\x05\u058E\u02C8\x02\u1183\u1188\x05" +
		"\u0586\u02C4\x02\u1184\u1187\x05\x96L\x02\u1185\u1187\x05\u0342\u01A2" +
		"\x02\u1186\u1184\x03\x02\x02\x02\u1186\u1185\x03\x02\x02\x02\u1187\u118A" +
		"\x03\x02\x02\x02\u1188\u1186\x03\x02\x02\x02\u1188\u1189\x03\x02\x02\x02" +
		"\u1189\u118B\x03\x02\x02\x02\u118A\u1188\x03\x02\x02\x02\u118B\u118C\x07" +
		"\x04\x02\x02\u118C\u032F\x03\x02\x02\x02\u118D\u1193\x07\u0143\x02\x02" +
		"\u118E\u1192\x05\u0234\u011B\x02\u118F\u1192\x05\u033C\u019F\x02\u1190" +
		"\u1192\x05\u033E\u01A0\x02\u1191\u118E\x03\x02\x02\x02\u1191\u118F\x03" +
		"\x02\x02\x02\u1191\u1190\x03\x02\x02\x02\u1192\u1195\x03\x02\x02\x02\u1193" +
		"\u1191\x03\x02\x02\x02\u1193\u1194\x03\x02\x02\x02\u1194\u1196\x03\x02" +
		"\x02\x02\u1195\u1193\x03\x02\x02\x02\u1196\u1197\x07\x04\x02\x02\u1197" +
		"\u0331\x03\x02\x02\x02\u1198\u119C\x07\u0144\x02\x02\u1199\u119B\x05\u0340" +
		"\u01A1\x02\u119A\u1199\x03\x02\x02\x02\u119B\u119E\x03\x02\x02\x02\u119C" +
		"\u119A\x03\x02\x02\x02\u119C\u119D\x03\x02\x02\x02\u119D\u119F\x03\x02" +
		"\x02\x02\u119E\u119C\x03\x02\x02\x02\u119F\u11A0\x07\x04\x02\x02\u11A0" +
		"\u0333\x03\x02\x02\x02\u11A1\u11A5\x07\u0145\x02\x02\u11A2\u11A4\x05\u0340" +
		"\u01A1\x02\u11A3\u11A2\x03\x02\x02\x02\u11A4\u11A7\x03\x02\x02\x02\u11A5" +
		"\u11A3\x03\x02\x02\x02\u11A5\u11A6\x03\x02\x02\x02\u11A6\u11A8\x03\x02" +
		"\x02\x02\u11A7\u11A5\x03\x02\x02\x02\u11A8\u11A9\x07\x04\x02\x02\u11A9" +
		"\u0335\x03\x02\x02\x02\u11AA\u11AF\x07\u0146\x02\x02\u11AB\u11AE\x05\u0584" +
		"\u02C3\x02\u11AC\u11AE\x05\u058C\u02C7\x02\u11AD\u11AB\x03\x02\x02\x02" +
		"\u11AD\u11AC\x03\x02\x02\x02\u11AE\u11B1\x03\x02\x02\x02\u11AF\u11AD\x03" +
		"\x02\x02\x02\u11AF\u11B0\x03\x02\x02\x02\u11B0\u11B2\x03\x02\x02\x02\u11B1" +
		"\u11AF\x03\x02\x02\x02\u11B2\u11B3\x07\x04\x02\x02\u11B3\u0337\x03\x02" +
		"\x02\x02\u11B4\u11B5\x07\u0147\x02\x02\u11B5\u11BB\x05\u064E\u0328\x02" +
		"\u11B6\u11BA\x05\x96L\x02\u11B7\u11BA\x05\u0376\u01BC\x02\u11B8\u11BA" +
		"\x05\u0638\u031D\x02\u11B9\u11B6\x03\x02\x02\x02\u11B9\u11B7\x03\x02\x02" +
		"\x02\u11B9\u11B8\x03\x02\x02\x02\u11BA\u11BD\x03\x02\x02\x02\u11BB\u11B9" +
		"\x03\x02\x02\x02\u11BB\u11BC\x03\x02\x02\x02\u11BC\u11BE\x03\x02\x02\x02" +
		"\u11BD\u11BB\x03\x02\x02\x02\u11BE\u11BF\x07\x04\x02\x02\u11BF\u0339\x03" +
		"\x02\x02\x02\u11C0\u11C1\x05\u0370\u01B9\x02\u11C1\u033B\x03\x02\x02\x02" +
		"\u11C2\u11C3\x05\u037A\u01BE\x02\u11C3\u033D\x03\x02\x02\x02\u11C4\u11C9" +
		"\x07\u0148\x02\x02\u11C5\u11C8\x05\u0330\u0199\x02\u11C6\u11C8\x05\u033C" +
		"\u019F\x02\u11C7\u11C5\x03\x02\x02\x02\u11C7\u11C6\x03\x02\x02\x02\u11C8" +
		"\u11CB\x03\x02\x02\x02\u11C9\u11C7\x03\x02\x02\x02\u11C9\u11CA\x03\x02" +
		"\x02\x02\u11CA\u11CC\x03\x02\x02\x02\u11CB\u11C9\x03\x02\x02\x02\u11CC" +
		"\u11CD\x07\x04\x02\x02\u11CD\u033F\x03\x02\x02\x02\u11CE\u11CF\x07\u0149" +
		"\x02\x02\u11CF\u11D1\x05\u033C\u019F\x02\u11D0\u11D2\x05\u031E\u0190\x02" +
		"\u11D1\u11D0\x03\x02\x02\x02\u11D1\u11D2\x03\x02\x02\x02\u11D2\u11D3\x03" +
		"\x02\x02\x02\u11D3\u11D4\x07\x04\x02\x02\u11D4\u0341\x03\x02\x02\x02\u11D5" +
		"\u11D6\x07\u014A\x02\x02\u11D6\u11E7\x05\u033A\u019E\x02\u11D7\u11E6\x05" +
		"B\"\x02\u11D8\u11E6\x05\x96L\x02\u11D9\u11E6\x05\xA6T\x02\u11DA\u11E6" +
		"\x05\xECw\x02\u11DB\u11E6\x05\u014C\xA7\x02\u11DC\u11E6\x05\u02BA\u015E" +
		"\x02\u11DD\u11E6\x05\u0332\u019A\x02\u11DE\u11E6\x05\u0334\u019B\x02\u11DF" +
		"\u11E6\x05\u0376\u01BC\x02\u11E0\u11E6\x05\u0462\u0232\x02\u11E1\u11E6" +
		"\x05\u048E\u0248\x02\u11E2\u11E6\x05\u05D8\u02ED\x02\u11E3\u11E6\x05\u065E" +
		"\u0330\x02\u11E4\u11E6\x05\u0664\u0333\x02\u11E5\u11D7\x03\x02\x02\x02" +
		"\u11E5\u11D8\x03\x02\x02\x02\u11E5\u11D9\x03\x02\x02\x02\u11E5\u11DA\x03" +
		"\x02\x02\x02\u11E5\u11DB\x03\x02\x02\x02\u11E5\u11DC\x03\x02\x02\x02\u11E5" +
		"\u11DD\x03\x02\x02\x02\u11E5\u11DE\x03\x02\x02\x02\u11E5\u11DF\x03\x02" +
		"\x02\x02\u11E5\u11E0\x03\x02\x02\x02\u11E5\u11E1\x03\x02\x02\x02\u11E5" +
		"\u11E2\x03\x02\x02\x02\u11E5\u11E3\x03\x02\x02\x02\u11E5\u11E4\x03\x02" +
		"\x02\x02\u11E6\u11E9\x03\x02\x02\x02\u11E7\u11E5\x03\x02\x02\x02\u11E7" +
		"\u11E8\x03\x02\x02\x02\u11E8\u11EA\x03\x02\x02\x02\u11E9\u11E7\x03\x02" +
		"\x02\x02\u11EA\u11EB\x07\x04\x02\x02\u11EB\u0343\x03\x02\x02\x02\u11EC" +
		"\u11ED\x07\u014B\x02\x02\u11ED\u11EE\x07\x04\x02\x02\u11EE\u0345\x03\x02" +
		"\x02\x02\u11EF\u11F0\x05\u067E\u0340\x02\u11F0\u0347\x03\x02\x02\x02\u11F1" +
		"\u11F2\x05\u067E\u0340\x02\u11F2\u0349\x03\x02\x02\x02\u11F3\u11FA\x07" +
		"\u014C\x02\x02\u11F4\u11F9\x05\u0582\u02C2\x02\u11F5\u11F9\x05\u0584\u02C3" +
		"\x02\u11F6\u11F9\x05\u0588\u02C5\x02\u11F7\u11F9\x05\u058C\u02C7\x02\u11F8" +
		"\u11F4\x03\x02\x02\x02\u11F8\u11F5\x03\x02\x02\x02\u11F8\u11F6\x03\x02" +
		"\x02\x02\u11F8\u11F7\x03\x02\x02\x02\u11F9\u11FC\x03\x02\x02\x02\u11FA" +
		"\u11F8\x03\x02\x02\x02\u11FA\u11FB\x03\x02\x02\x02\u11FB\u11FD\x03\x02" +
		"\x02\x02\u11FC\u11FA\x03\x02\x02\x02\u11FD\u11FE\x07\x04\x02\x02\u11FE" +
		"\u034B\x03\x02\x02\x02\u11FF\u1200\x07\u014D\x02\x02\u1200\u1206\x05\u064E" +
		"\u0328\x02\u1201\u1205\x05\x96L\x02\u1202\u1205\x05\u0376\u01BC\x02\u1203" +
		"\u1205\x05\u0638\u031D\x02\u1204\u1201\x03\x02\x02\x02\u1204\u1202\x03" +
		"\x02\x02\x02\u1204\u1203\x03\x02\x02\x02\u1205\u1208\x03\x02\x02\x02\u1206" +
		"\u1204\x03\x02\x02\x02\u1206\u1207\x03\x02\x02\x02\u1207\u1209\x03\x02" +
		"\x02\x02\u1208\u1206\x03\x02\x02\x02\u1209\u120A\x07\x04\x02\x02\u120A" +
		"\u034D\x03\x02\x02\x02\u120B\u120C\x07\u014E\x02\x02\u120C\u120D\x07\x04" +
		"\x02\x02\u120D\u034F\x03\x02\x02\x02\u120E\u120F\x07\u014F\x02\x02\u120F" +
		"\u1210\x05\u0624\u0313\x02\u1210\u1211\x07\x04\x02\x02\u1211\u0351\x03" +
		"\x02\x02\x02\u1212\u1213\x07\u0150\x02\x02\u1213\u1214\x07\x04\x02\x02" +
		"\u1214\u0353\x03\x02\x02\x02\u1215\u1216\x07\u0151\x02\x02\u1216\u1217" +
		"\x07\x04\x02\x02\u1217\u0355\x03\x02\x02\x02\u1218\u1219\x07\u0152\x02" +
		"\x02\u1219\u121A\x05\u05DE\u02F0\x02\u121A\u121B\x07\x04\x02\x02\u121B" +
		"\u0357\x03\x02\x02\x02\u121C\u121D\x07\u0153\x02\x02\u121D\u121E\x05\u035A" +
		"\u01AE\x02\u121E\u121F\x07\x04\x02\x02\u121F\u0359\x03\x02\x02\x02\u1220" +
		"\u1223\x05\u039C\u01CF\x02\u1221\u1223\x05\u0362\u01B2\x02\u1222\u1220" +
		"\x03\x02\x02\x02\u1222\u1221\x03\x02\x02\x02\u1223\u035B\x03\x02\x02\x02" +
		"\u1224\u1225\x05\u0280\u0141\x02\u1225\u035D\x03\x02\x02\x02\u1226\u1227" +
		"\x05\u067E\u0340\x02\u1227\u035F\x03\x02\x02\x02\u1228\u1229\x07\u0154" +
		"\x02\x02\u1229\u122A\x07\x04\x02\x02\u122A\u0361\x03\x02\x02\x02\u122B" +
		"\u122F\x07\u0155\x02\x02\u122C\u1230\x05\u039C\u01CF\x02\u122D\u1230\x05" +
		"\u061E\u0310\x02\u122E\u1230\x05\u061C\u030F\x02\u122F\u122C\x03\x02\x02" +
		"\x02\u122F\u122D\x03\x02\x02\x02\u122F\u122E\x03\x02\x02\x02\u1230\u1234" +
		"\x03\x02\x02\x02\u1231\u1235\x05\u039C\u01CF\x02\u1232\u1235\x05\u061E" +
		"\u0310\x02\u1233\u1235\x05\u061C\u030F\x02\u1234\u1231\x03\x02\x02\x02" +
		"\u1234\u1232\x03\x02\x02\x02\u1234\u1233\x03\x02\x02\x02\u1235\u1239\x03" +
		"\x02\x02\x02\u1236\u123A\x05\u039C\u01CF\x02\u1237\u123A\x05\u061E\u0310" +
		"\x02\u1238\u123A\x05\u061C\u030F\x02\u1239\u1236\x03\x02\x02\x02\u1239" +
		"\u1237\x03\x02\x02\x02\u1239\u1238\x03\x02\x02\x02\u123A\u123B\x03\x02" +
		"\x02\x02\u123B\u123C\x07\x04\x02\x02\u123C\u0363\x03\x02\x02\x02\u123D" +
		"\u123E\x07\u0156\x02\x02";
	private static readonly _serializedATNSegment9: string =
		"\u123E\u123F\x05\u0624\u0313\x02\u123F\u1240\x07\x04\x02\x02\u1240\u0365" +
		"\x03\x02\x02\x02\u1241\u1242\x05\u067E\u0340\x02\u1242\u0367\x03\x02\x02" +
		"\x02\u1243\u1244\x07\u0157\x02\x02\u1244\u1245\x07\x04\x02\x02\u1245\u0369" +
		"\x03\x02\x02\x02\u1246\u124C\x07\u0158\x02\x02\u1247\u124B\x05\u02B2\u015A" +
		"\x02\u1248\u124B\x05\u0452\u022A\x02\u1249\u124B\x05\u0666\u0334\x02\u124A" +
		"\u1247\x03\x02\x02\x02\u124A\u1248\x03\x02\x02\x02\u124A\u1249\x03\x02" +
		"\x02\x02\u124B\u124E\x03\x02\x02\x02\u124C\u124A\x03\x02\x02\x02\u124C" +
		"\u124D\x03\x02\x02\x02\u124D\u124F\x03\x02\x02\x02\u124E\u124C\x03\x02" +
		"\x02\x02\u124F\u1250\x07\x04\x02\x02\u1250\u036B\x03\x02\x02\x02\u1251" +
		"\u1252\x07\u0159\x02\x02\u1252\u1258\x05\u03B4\u01DB\x02\u1253\u1257\x05" +
		"\u0138\x9D\x02\u1254\u1257\x05\u01EE\xF8\x02\u1255\u1257\x05\u037C\u01BF" +
		"\x02\u1256\u1253\x03\x02\x02\x02\u1256\u1254\x03\x02\x02\x02\u1256\u1255" +
		"\x03\x02\x02\x02\u1257\u125A\x03\x02\x02\x02\u1258\u1256\x03\x02\x02\x02" +
		"\u1258\u1259\x03\x02\x02\x02\u1259\u125B\x03\x02\x02\x02\u125A\u1258\x03" +
		"\x02\x02\x02\u125B\u125C\x07\x04\x02\x02\u125C\u036D\x03\x02\x02\x02\u125D" +
		"\u1278\x07\u015A\x02\x02\u125E\u1277\x05|?\x02\u125F\u1277\x05\x86D\x02" +
		"\u1260\u1277\x05\u0124\x93\x02\u1261\u1277\x05\u0128\x95\x02\u1262\u1277" +
		"\x05\u0146\xA4\x02\u1263\u1277\x05\u019C\xCF\x02\u1264\u1277\x05\u01D0" +
		"\xE9\x02\u1265\u1277\x05\u01DA\xEE\x02\u1266\u1277\x05\u0200\u0101\x02" +
		"\u1267\u1277\x05\u021C\u010F\x02\u1268\u1277\x05\u0236\u011C\x02\u1269" +
		"\u1277\x05\u025E\u0130\x02\u126A\u1277\x05\u02A2\u0152\x02\u126B\u1277" +
		"\x05\u0312\u018A\x02\u126C\u1277\x05\u0318\u018D\x02\u126D\u1277\x05\u0324" +
		"\u0193\x02\u126E\u1277\x05\u03D6\u01EC\x02\u126F\u1277\x05\u03F2\u01FA" +
		"\x02\u1270\u1277\x05\u0440\u0221\x02\u1271\u1277\x05\u046A\u0236\x02\u1272" +
		"\u1277\x05\u059C\u02CF\x02\u1273\u1277\x05\u05AC\u02D7\x02\u1274\u1277" +
		"\x05\u0644\u0323\x02\u1275\u1277\x05\u064C\u0327\x02\u1276\u125E\x03\x02" +
		"\x02\x02\u1276\u125F\x03\x02\x02\x02\u1276\u1260\x03\x02\x02\x02\u1276" +
		"\u1261\x03\x02\x02\x02\u1276\u1262\x03\x02\x02\x02\u1276\u1263\x03\x02" +
		"\x02\x02\u1276\u1264\x03\x02\x02\x02\u1276\u1265\x03\x02\x02\x02\u1276" +
		"\u1266\x03\x02\x02\x02\u1276\u1267\x03\x02\x02\x02\u1276\u1268\x03\x02" +
		"\x02\x02\u1276\u1269\x03\x02\x02\x02\u1276\u126A\x03\x02\x02\x02\u1276" +
		"\u126B\x03\x02\x02\x02\u1276\u126C\x03\x02\x02\x02\u1276\u126D\x03\x02" +
		"\x02\x02\u1276\u126E\x03\x02\x02\x02\u1276\u126F\x03\x02\x02\x02\u1276" +
		"\u1270\x03\x02\x02\x02\u1276\u1271\x03\x02\x02\x02\u1276\u1272\x03\x02" +
		"\x02\x02\u1276\u1273\x03\x02\x02\x02\u1276\u1274\x03\x02\x02\x02\u1276" +
		"\u1275\x03\x02\x02\x02\u1277\u127A\x03\x02\x02\x02\u1278\u1276\x03\x02" +
		"\x02\x02\u1278\u1279\x03\x02\x02\x02\u1279\u127B\x03\x02\x02\x02\u127A" +
		"\u1278\x03\x02\x02\x02\u127B\u127C\x07\x04\x02\x02\u127C\u036F\x03\x02" +
		"\x02\x02\u127D\u127E\x07\u029D\x02\x02\u127E\u0371\x03\x02\x02\x02\u127F" +
		"\u1280\x07\u015B\x02\x02\u1280\u1282\x05\u0374\u01BB\x02\u1281\u1283\x05" +
		"4\x1B\x02\u1282\u1281\x03\x02\x02\x02\u1282\u1283\x03\x02\x02\x02\u1283" +
		"\u1284\x03\x02\x02\x02\u1284\u1285\x07\x04\x02\x02\u1285\u0373\x03\x02" +
		"\x02\x02\u1286\u128E\x07\u015C\x02\x02\u1287\u128D\x05\x9EP\x02\u1288" +
		"\u128D\x05\xA4S\x02\u1289\u128D\x05\u0292\u014A\x02\u128A\u128D\x05\u0580" +
		"\u02C1\x02\u128B\u128D\x05\u05B6\u02DC\x02\u128C\u1287\x03\x02\x02\x02" +
		"\u128C\u1288\x03\x02\x02\x02\u128C\u1289\x03\x02\x02\x02\u128C\u128A\x03" +
		"\x02\x02\x02\u128C\u128B\x03\x02\x02\x02\u128D\u1290\x03\x02\x02\x02\u128E" +
		"\u128C\x03\x02\x02\x02\u128E\u128F\x03\x02\x02\x02\u128F\u1291\x03\x02" +
		"\x02\x02\u1290\u128E\x03\x02\x02\x02\u1291\u1292\x07\x04\x02\x02\u1292" +
		"\u0375\x03\x02\x02\x02\u1293\u1294\x07\u015D\x02\x02\u1294\u1298\x05\u045E" +
		"\u0230\x02\u1295\u1297\x05\u036C\u01B7\x02\u1296\u1295\x03\x02\x02\x02" +
		"\u1297\u129A\x03\x02\x02\x02\u1298\u1296\x03\x02\x02\x02\u1298\u1299\x03" +
		"\x02\x02\x02\u1299\u129B\x03\x02\x02\x02\u129A\u1298\x03\x02\x02\x02\u129B" +
		"\u129C\x07\x04\x02\x02\u129C\u0377\x03\x02\x02\x02\u129D\u129E\x07\u015E" +
		"\x02\x02\u129E\u129F\x05\u0680\u0341\x02\u129F\u12A0\x07\x04\x02\x02\u12A0" +
		"\u0379\x03\x02\x02\x02\u12A1\u12A2\x07\u029D\x02\x02\u12A2\u037B\x03\x02" +
		"\x02\x02\u12A3\u12A7\x07\u015F\x02\x02\u12A4\u12A8\x05\u05B6\u02DC\x02" +
		"\u12A5\u12A8\x05\xA4S\x02\u12A6\u12A8\x05\x9EP\x02\u12A7\u12A4\x03\x02" +
		"\x02\x02\u12A7\u12A5\x03\x02\x02\x02\u12A7\u12A6\x03\x02\x02\x02\u12A8" +
		"\u12A9\x03\x02\x02\x02\u12A9\u12AA\x07\x04\x02\x02\u12AA\u037D\x03\x02" +
		"\x02\x02\u12AB\u12AC\x07\u0160\x02\x02\u12AC\u12AD\x07\x04\x02\x02\u12AD" +
		"\u037F\x03\x02\x02\x02\u12AE\u12AF\x07\u0161\x02\x02\u12AF\u12B0\x07\x04" +
		"\x02\x02\u12B0\u0381\x03\x02\x02\x02\u12B1\u12B2\x07\u0162\x02\x02\u12B2" +
		"\u12B3\x07\x04\x02\x02\u12B3\u0383\x03\x02\x02\x02\u12B4\u12B5\x07\u0163" +
		"\x02\x02\u12B5\u12B6\x05\u0308\u0185\x02\u12B6\u12B7\x07\x04\x02\x02\u12B7" +
		"\u0385\x03\x02\x02\x02\u12B8\u12BD\x07\u0164\x02\x02\u12B9\u12BC\x05\u0404" +
		"\u0203\x02\u12BA\u12BC\x05\u0452\u022A\x02\u12BB\u12B9\x03\x02\x02\x02" +
		"\u12BB\u12BA\x03\x02\x02\x02\u12BC\u12BF\x03\x02\x02\x02\u12BD\u12BB\x03" +
		"\x02\x02\x02\u12BD\u12BE\x03\x02\x02\x02\u12BE\u12C0\x03\x02\x02\x02\u12BF" +
		"\u12BD\x03\x02\x02\x02\u12C0\u12C1\x07\x04\x02\x02\u12C1\u0387\x03\x02" +
		"\x02\x02\u12C2\u12C3\x07\u0165\x02\x02\u12C3\u12C4\x05@!\x02\u12C4\u12C5" +
		"\x07\x04\x02\x02\u12C5\u0389\x03\x02\x02\x02\u12C6\u12C7\x07\u0166\x02" +
		"\x02\u12C7\u12C8\x07\x04\x02\x02\u12C8\u038B\x03\x02\x02\x02\u12C9\u12CA" +
		"\x07\u0167\x02\x02\u12CA\u12CB\x05\u038E\u01C8\x02\u12CB\u12CC\x07\x04" +
		"\x02\x02\u12CC\u038D\x03\x02\x02\x02\u12CD\u12D0\x05\u039C\u01CF\x02\u12CE" +
		"\u12D0\x05\u0398\u01CD\x02\u12CF\u12CD\x03\x02\x02\x02\u12CF\u12CE\x03" +
		"\x02\x02\x02\u12D0\u038F\x03\x02\x02\x02\u12D1\u12D2\x05\u04A0\u0251\x02" +
		"\u12D2\u0391\x03\x02\x02\x02\u12D3\u12D4\x05\u04A0\u0251\x02\u12D4\u0393" +
		"\x03\x02\x02\x02\u12D5\u12D6\x07\u0168\x02\x02\u12D6\u12DB\x05\u03F4\u01FB" +
		"\x02\u12D7\u12DA\x05\u0376\u01BC\x02\u12D8\u12DA\x05\u038C\u01C7\x02\u12D9" +
		"\u12D7\x03\x02\x02\x02\u12D9\u12D8\x03\x02\x02\x02\u12DA\u12DD\x03\x02" +
		"\x02\x02\u12DB\u12D9\x03\x02\x02\x02\u12DB\u12DC\x03\x02\x02\x02\u12DC" +
		"\u12DE\x03\x02\x02\x02\u12DD\u12DB\x03\x02\x02\x02\u12DE\u12DF\x07\x04" +
		"\x02\x02\u12DF\u0395\x03\x02\x02\x02\u12E0\u12E1\x07\u0169\x02\x02\u12E1" +
		"\u12E2\x05\u03F8\u01FD\x02\u12E2\u12E3\x05\u038E\u01C8\x02\u12E3\u12E4" +
		"\x07\x04\x02\x02\u12E4\u0397\x03\x02\x02\x02\u12E5\u12E6\x07\u016A\x02" +
		"\x02\u12E6\u12E7\x05\u03F8\u01FD\x02\u12E7\u12E8\x07\x04\x02\x02\u12E8" +
		"\u0399\x03\x02\x02\x02\u12E9\u12EA\x07\u016B\x02\x02\u12EA\u12EB\x05\u0672" +
		"\u033A\x02\u12EB\u12EC\x05\u067C\u033F\x02\u12EC\u12ED\x07\x04\x02\x02" +
		"\u12ED\u039B\x03\x02\x02\x02\u12EE\u12EF\x05\u04A0\u0251\x02\u12EF\u039D" +
		"\x03\x02\x02\x02\u12F0\u12F1\x05\u0292\u014A\x02\u12F1\u039F\x03\x02\x02" +
		"\x02\u12F2\u12F5\x07\u016C\x02\x02\u12F3\u12F6\x05\u017E\xC0\x02\u12F4" +
		"\u12F6\x05\u0180\xC1\x02\u12F5\u12F3\x03\x02\x02\x02\u12F5\u12F4\x03\x02" +
		"\x02\x02\u12F6\u130B\x03\x02\x02\x02\u12F7\u130A\x05h5\x02\u12F8\u130A" +
		"\x05\x90I\x02\u12F9\u130A\x05\x96L\x02\u12FA\u130A\x05\u011A\x8E\x02\u12FB" +
		"\u130A\x05\u01CA\xE6\x02\u12FC\u130A\x05\u022E\u0118\x02\u12FD\u130A\x05" +
		"\u0270\u0139\x02\u12FE\u130A\x05\u0294\u014B\x02\u12FF\u130A\x05\u0304" +
		"\u0183\x02\u1300\u130A\x05\u03A0\u01D1\x02\u1301\u130A\x05\u03B8\u01DD" +
		"\x02\u1302\u130A\x05\u03C6\u01E4\x02\u1303\u130A\x05\u0418\u020D\x02\u1304" +
		"\u130A\x05\u0462\u0232\x02\u1305\u130A\x05\u0596\u02CC\x02\u1306\u130A" +
		"\x05\u059A\u02CE\x02\u1307\u130A\x05\u05FC\u02FF\x02\u1308\u130A\x05\u0656" +
		"\u032C\x02\u1309\u12F7\x03\x02\x02\x02\u1309\u12F8\x03\x02\x02\x02\u1309" +
		"\u12F9\x03\x02\x02\x02\u1309\u12FA\x03\x02\x02\x02\u1309\u12FB\x03\x02" +
		"\x02\x02\u1309\u12FC\x03\x02\x02\x02\u1309\u12FD\x03\x02\x02\x02\u1309" +
		"\u12FE\x03\x02\x02\x02\u1309\u12FF\x03\x02\x02\x02\u1309\u1300\x03\x02" +
		"\x02\x02\u1309\u1301\x03\x02\x02\x02\u1309\u1302\x03\x02\x02\x02\u1309" +
		"\u1303\x03\x02\x02\x02\u1309\u1304\x03\x02\x02\x02\u1309\u1305\x03\x02" +
		"\x02\x02\u1309\u1306\x03\x02\x02\x02\u1309\u1307\x03\x02\x02\x02\u1309" +
		"\u1308\x03\x02\x02\x02\u130A\u130D\x03\x02\x02\x02\u130B\u1309\x03\x02" +
		"\x02\x02\u130B\u130C\x03\x02\x02\x02\u130C\u130E\x03\x02\x02\x02\u130D" +
		"\u130B\x03\x02\x02\x02\u130E\u130F\x07\x04\x02\x02\u130F\u03A1\x03\x02" +
		"\x02\x02\u1310\u1322\x07\u016D\x02\x02\u1311\u1321\x05h5\x02\u1312\u1321" +
		"\x05\x90I\x02\u1313\u1321\x05\x96L\x02\u1314\u1321\x05\u01CA\xE6\x02\u1315" +
		"\u1321\x05\u022E\u0118\x02\u1316\u1321\x05\u0294\u014B\x02\u1317\u1321" +
		"\x05\u0304\u0183\x02\u1318\u1321\x05\u03A0\u01D1\x02\u1319\u1321\x05\u03B8" +
		"\u01DD\x02\u131A\u1321\x05\u03C6\u01E4\x02\u131B\u1321\x05\u0418\u020D" +
		"\x02\u131C\u1321\x05\u0596\u02CC\x02\u131D\u1321\x05\u059A\u02CE\x02\u131E" +
		"\u1321\x05\u05FC\u02FF\x02\u131F\u1321\x05\u0656\u032C\x02\u1320\u1311" +
		"\x03\x02\x02\x02\u1320\u1312\x03\x02\x02\x02\u1320\u1313\x03\x02\x02\x02" +
		"\u1320\u1314\x03\x02\x02\x02\u1320\u1315\x03\x02\x02\x02\u1320\u1316\x03" +
		"\x02\x02\x02\u1320\u1317\x03\x02\x02\x02\u1320\u1318\x03\x02\x02\x02\u1320" +
		"\u1319\x03\x02\x02\x02\u1320\u131A\x03\x02\x02\x02\u1320\u131B\x03\x02" +
		"\x02\x02\u1320\u131C\x03\x02\x02\x02\u1320\u131D\x03\x02\x02\x02\u1320" +
		"\u131E\x03\x02\x02\x02\u1320\u131F\x03\x02\x02\x02\u1321\u1324\x03\x02" +
		"\x02\x02\u1322\u1320\x03\x02\x02\x02\u1322\u1323\x03\x02\x02\x02\u1323" +
		"\u1325\x03\x02\x02\x02\u1324\u1322\x03\x02\x02\x02\u1325\u1326\x07\x04" +
		"\x02\x02\u1326\u03A3\x03\x02\x02\x02\u1327\u1328\x07\u016E\x02\x02\u1328" +
		"\u1329\x05\u0174\xBB\x02\u1329\u132A\x05\u039C\u01CF\x02\u132A\u132B\x07" +
		"\x04\x02\x02\u132B\u03A5\x03\x02\x02\x02\u132C\u132D\x07\u016F\x02\x02" +
		"\u132D\u132E\x05\u0624\u0313\x02\u132E\u132F\x07\x04\x02\x02\u132F\u03A7" +
		"\x03\x02\x02\x02\u1330\u1331\x07\u0170\x02\x02\u1331\u1332\x05\xF0y\x02" +
		"\u1332\u1333\x07\x04\x02\x02\u1333\u03A9\x03\x02\x02\x02\u1334\u1338\x07" +
		"\u0171\x02\x02\u1335\u1337\x05@!\x02\u1336\u1335\x03\x02\x02\x02\u1337" +
		"\u133A\x03\x02\x02\x02\u1338\u1336\x03\x02\x02\x02\u1338\u1339\x03\x02" +
		"\x02\x02\u1339\u133B\x03\x02\x02\x02\u133A\u1338\x03\x02\x02\x02\u133B" +
		"\u133C\x07\x04\x02\x02\u133C\u03AB\x03\x02\x02\x02\u133D\u133E\x07\u0172" +
		"\x02\x02\u133E\u133F\x05\u0412\u020A\x02\u133F\u1340\x07\x04\x02\x02\u1340" +
		"\u03AD\x03\x02\x02\x02\u1341\u1342\x07\u0173\x02\x02\u1342\u1343\x05\u0480" +
		"\u0241\x02\u1343\u1344\x07\x04\x02\x02\u1344\u03AF\x03\x02\x02\x02\u1345" +
		"\u1346\x07\u0174\x02\x02\u1346\u1347\x05\xF4{\x02\u1347\u1348\x07\x04" +
		"\x02\x02\u1348\u03B1\x03\x02\x02\x02\u1349\u134D\x07\u0175\x02\x02\u134A" +
		"\u134E\x05\x0E\b\x02\u134B\u134E\x05\u048A\u0246\x02\u134C\u134E\x05\u0484" +
		"\u0243\x02\u134D\u134A\x03\x02\x02\x02\u134D\u134B\x03\x02\x02\x02\u134D" +
		"\u134C\x03\x02\x02\x02\u134E\u134F\x03\x02\x02\x02\u134F\u1350\x07\x04" +
		"\x02\x02\u1350\u03B3\x03\x02\x02\x02\u1351\u1352\x05\u0680\u0341\x02\u1352" +
		"\u03B5\x03\x02\x02\x02\u1353\u1354\x07\u0176\x02\x02\u1354\u1355\x05\u01DC" +
		"\xEF\x02\u1355\u1356\x05\u0232\u011A\x02\u1356\u135E\x05\u032C\u0197\x02" +
		"\u1357\u135D\x05\x96L\x02\u1358\u135D\x05\u0142\xA2\x02\u1359\u135D\x05" +
		"\u0376\u01BC\x02\u135A\u135D\x05\u0462\u0232\x02\u135B\u135D\x05\u0638" +
		"\u031D\x02\u135C\u1357\x03\x02\x02\x02\u135C\u1358\x03\x02\x02\x02\u135C" +
		"\u1359\x03\x02\x02\x02\u135C\u135A\x03\x02\x02\x02\u135C\u135B\x03\x02" +
		"\x02\x02\u135D\u1360\x03\x02\x02\x02\u135E\u135C\x03\x02\x02\x02\u135E" +
		"\u135F\x03\x02\x02\x02\u135F\u1361\x03\x02\x02\x02\u1360\u135E\x03\x02" +
		"\x02\x02\u1361\u1362\x07\x04\x02\x02\u1362\u03B7\x03\x02\x02\x02\u1363" +
		"\u1364\x07\u0177\x02\x02\u1364\u136F\x05\u017C\xBF\x02\u1365\u136E\x05" +
		"\x96L\x02\u1366\u136E\x05\u01CA\xE6\x02\u1367\u136E\x05\u022E\u0118\x02" +
		"\u1368\u136E\x05\u0294\u014B\x02\u1369\u136E\x05\u0304\u0183\x02\u136A" +
		"\u136E\x05\u03A0\u01D1\x02\u136B\u136E\x05\u03B8\u01DD\x02\u136C\u136E" +
		"\x05\u0472\u023A\x02\u136D\u1365\x03\x02\x02\x02\u136D\u1366\x03\x02\x02" +
		"\x02\u136D\u1367\x03\x02\x02\x02\u136D\u1368\x03\x02\x02\x02\u136D\u1369" +
		"\x03\x02\x02\x02\u136D\u136A\x03\x02\x02\x02\u136D\u136B\x03\x02\x02\x02" +
		"\u136D\u136C\x03\x02\x02\x02\u136E\u1371\x03\x02\x02\x02\u136F\u136D\x03" +
		"\x02\x02\x02\u136F\u1370\x03\x02\x02\x02\u1370\u1372\x03\x02\x02\x02\u1371" +
		"\u136F\x03\x02\x02\x02\u1372\u1373\x07\x04\x02\x02\u1373\u03B9\x03\x02" +
		"\x02\x02\u1374\u1375\x07\u0178\x02\x02\u1375\u1376\x05\u01DE\xF0\x02\u1376" +
		"\u1377\x07\x04\x02\x02\u1377\u03BB\x03\x02\x02\x02\u1378\u1379\x07\u0179" +
		"\x02\x02\u1379\u137A\x07\x04\x02\x02\u137A\u03BD\x03\x02\x02\x02\u137B" +
		"\u137D\x07\u017A\x02\x02\u137C\u137E\x05\u03C0\u01E1\x02\u137D\u137C\x03" +
		"\x02\x02\x02\u137D\u137E\x03\x02\x02\x02\u137E\u137F\x03\x02\x02\x02\u137F" +
		"\u1380\x07\x04\x02\x02\u1380\u03BF\x03\x02\x02\x02\u1381\u1386\x07\u017B" +
		"\x02\x02\u1382\u1385\x05\xF8}\x02\u1383\u1385\x05\u0104\x83\x02\u1384" +
		"\u1382\x03\x02\x02\x02\u1384\u1383\x03\x02\x02\x02\u1385\u1388\x03\x02" +
		"\x02\x02\u1386\u1384\x03\x02\x02\x02\u1386\u1387\x03\x02\x02\x02\u1387" +
		"\u1389\x03\x02\x02\x02\u1388\u1386\x03\x02\x02\x02\u1389\u138A\x07\x04" +
		"\x02\x02\u138A\u03C1\x03\x02\x02\x02\u138B\u138C\x07\u017C\x02\x02\u138C" +
		"\u138D\x05\u05D6\u02EC\x02\u138D\u138E\x07\x04\x02\x02\u138E\u03C3\x03" +
		"\x02\x02\x02\u138F\u1390\x07\u017D\x02\x02\u1390\u1391\x05\u03D8\u01ED" +
		"\x02\u1391\u13A8\x05\u03D0\u01E9\x02\u1392\u13A7\x05d3\x02\u1393\u13A7" +
		"\x05\x8CG\x02\u1394\u13A7\x05\x96L\x02\u1395\u13A7\x05\u0322\u0192\x02" +
		"\u1396\u13A7\x05\u03CE\u01E8\x02\u1397\u13A7\x05\u03E4\u01F3\x02\u1398" +
		"\u13A7\x05\u0464\u0233\x02\u1399\u13A7\x05\u04A6\u0254\x02\u139A\u13A7" +
		"\x05\u04BC\u025F\x02\u139B\u13A7\x05\u04C4\u0263\x02\u139C\u13A7\x05\u04D2" +
		"\u026A\x02\u139D\u13A7\x05\u04D8\u026D\x02\u139E\u13A7\x05\u04F0\u0279" +
		"\x02\u139F\u13A7\x05\u04FA\u027E\x02\u13A0\u13A7\x05\u0502\u0282\x02\u13A1" +
		"\u13A7\x05\u050A\u0286\x02\u13A2\u13A7\x05\u0518\u028D\x02\u13A3\u13A7" +
		"\x05\u0540\u02A1\x02\u13A4\u13A7\x05\u0638\u031D\x02\u13A5\u13A7\x05\u0654" +
		"\u032B\x02\u13A6\u1392\x03\x02\x02\x02\u13A6\u1393\x03\x02\x02\x02\u13A6" +
		"\u1394\x03\x02\x02\x02\u13A6\u1395\x03\x02\x02\x02\u13A6\u1396\x03\x02" +
		"\x02\x02\u13A6\u1397\x03\x02\x02\x02\u13A6\u1398\x03\x02\x02\x02\u13A6" +
		"\u1399\x03\x02\x02\x02\u13A6\u139A\x03\x02\x02\x02\u13A6\u139B\x03\x02" +
		"\x02\x02\u13A6\u139C\x03\x02\x02\x02\u13A6\u139D\x03\x02\x02\x02\u13A6" +
		"\u139E\x03\x02\x02\x02\u13A6\u139F\x03\x02\x02\x02\u13A6\u13A0\x03\x02" +
		"\x02\x02\u13A6\u13A1\x03\x02\x02\x02\u13A6\u13A2\x03\x02\x02\x02\u13A6" +
		"\u13A3\x03\x02\x02\x02\u13A6\u13A4\x03\x02\x02\x02\u13A6\u13A5\x03\x02" +
		"\x02\x02\u13A7\u13AA\x03\x02\x02\x02\u13A8\u13A6\x03\x02\x02\x02\u13A8" +
		"\u13A9\x03\x02\x02\x02\u13A9\u13AB\x03\x02\x02\x02\u13AA\u13A8\x03\x02" +
		"\x02\x02\u13AB\u13AC\x07\x04\x02\x02\u13AC\u03C5\x03\x02\x02\x02\u13AD" +
		"\u13AE\x07\u017E\x02\x02\u13AE\u13B2\x05\u0184\xC3\x02\u13AF\u13B1\x05" +
		"\u0294\u014B\x02\u13B0\u13AF\x03\x02\x02\x02\u13B1\u13B4\x03\x02\x02\x02" +
		"\u13B2\u13B0\x03\x02\x02\x02\u13B2\u13B3\x03\x02\x02\x02\u13B3\u13B5\x03" +
		"\x02\x02\x02\u13B4\u13B2\x03\x02\x02\x02\u13B5\u13B6\x07\x04\x02\x02\u13B6" +
		"\u03C7\x03\x02\x02\x02\u13B7\u13B8\x07\u017F\x02\x02\u13B8\u13B9\x05\u03CC" +
		"\u01E7\x02\u13B9\u13BE\x05\u060C\u0307\x02\u13BA\u13BD\x05\u0466\u0234" +
		"\x02\u13BB\u13BD\x05\u0472\u023A\x02\u13BC\u13BA\x03\x02\x02\x02\u13BC" +
		"\u13BB\x03\x02\x02\x02\u13BD\u13C0\x03\x02\x02\x02\u13BE\u13BC\x03\x02" +
		"\x02\x02\u13BE\u13BF\x03\x02\x02\x02\u13BF\u13C1\x03\x02\x02\x02\u13C0" +
		"\u13BE\x03\x02\x02\x02\u13C1\u13C2\x07\x04\x02\x02\u13C2\u03C9\x03\x02" +
		"\x02\x02\u13C3\u13C4\x07\u0180\x02\x02\u13C4\u13C5\x05\u031A\u018E\x02" +
		"\u13C5\u13C6\x05\u0566\u02B4\x02\u13C6\u13CE\x05\u0636\u031C\x02\u13C7" +
		"\u13CD\x05\x16\f\x02\u13C8\u13CD\x05\x98M\x02\u13C9\u13CD\x05\u0198\xCD" +
		"\x02\u13CA\u13CD\x05\u0464\u0233\x02\u13CB\u13CD\x05\u04B0\u0259\x02\u13CC" +
		"\u13C7\x03\x02\x02\x02\u13CC\u13C8\x03\x02\x02\x02\u13CC\u13C9\x03\x02" +
		"\x02\x02\u13CC\u13CA\x03\x02\x02\x02\u13CC\u13CB\x03\x02\x02\x02\u13CD" +
		"\u13D0\x03\x02\x02\x02\u13CE\u13CC\x03\x02\x02\x02\u13CE\u13CF\x03\x02" +
		"\x02\x02\u13CF\u13D1\x03\x02\x02\x02\u13D0\u13CE\x03\x02\x02\x02\u13D1" +
		"\u13D2\x07\x04\x02\x02\u13D2\u03CB\x03\x02\x02\x02\u13D3\u13D4\x07\u0181" +
		"\x02\x02\u13D4\u13D6\x05\u031C\u018F\x02\u13D5\u13D7\x05\u031E\u0190\x02" +
		"\u13D6\u13D5\x03\x02\x02\x02\u13D6\u13D7\x03\x02\x02\x02\u13D7\u13D8\x03" +
		"\x02\x02\x02\u13D8\u13D9\x07\x04\x02\x02\u13D9\u03CD\x03\x02\x02\x02\u13DA" +
		"\u13E2\x07\u0182\x02\x02\u13DB\u13E1\x05\x16\f\x02\u13DC\u13E1\x05\x96" +
		"L\x02\u13DD\u13E1\x05\u0198\xCD\x02\u13DE\u13E1\x05\u04B0\u0259\x02\u13DF" +
		"\u13E1\x05\u0638\u031D\x02\u13E0\u13DB\x03\x02\x02\x02\u13E0\u13DC\x03" +
		"\x02\x02\x02\u13E0\u13DD\x03\x02\x02\x02\u13E0\u13DE\x03\x02\x02\x02\u13E0" +
		"\u13DF\x03\x02\x02\x02\u13E1\u13E4\x03\x02\x02\x02\u13E2\u13E0\x03\x02" +
		"\x02\x02\u13E2\u13E3\x03\x02\x02\x02\u13E3\u13E5\x03\x02\x02\x02\u13E4" +
		"\u13E2\x03\x02\x02\x02\u13E5\u13E6\x07\x04\x02\x02\u13E6\u03CF\x03\x02" +
		"\x02\x02\u13E7\u13F2\x07\u0183\x02\x02\u13E8\u13F1\x05&\x14\x02\u13E9" +
		"\u13F1\x05\u0142\xA2\x02\u13EA\u13F1\x05\u0376\u01BC\x02\u13EB\u13F1\x05" +
		"\u03AE\u01D8\x02\u13EC\u13F1\x05\u03C8\u01E5\x02\u13ED\u13F1\x05\u03E0" +
		"\u01F1\x02\u13EE\u13F1\x05\u0462\u0232\x02\u13EF\u13F1\x05\u05BA\u02DE" +
		"\x02\u13F0\u13E8\x03\x02\x02\x02\u13F0\u13E9\x03\x02\x02\x02\u13F0\u13EA" +
		"\x03\x02\x02\x02\u13F0\u13EB\x03\x02\x02\x02\u13F0\u13EC\x03\x02\x02\x02" +
		"\u13F0\u13ED\x03\x02\x02\x02\u13F0\u13EE\x03\x02\x02\x02\u13F0\u13EF\x03" +
		"\x02\x02\x02\u13F1\u13F4\x03\x02\x02\x02\u13F2\u13F0\x03\x02\x02\x02\u13F2" +
		"\u13F3\x03\x02\x02\x02\u13F3\u13F5\x03\x02\x02\x02\u13F4\u13F2\x03\x02" +
		"\x02\x02\u13F5\u13F6\x07\x04\x02\x02\u13F6\u03D1\x03\x02\x02\x02\u13F7" +
		"\u13F8\x07\u0184\x02\x02\u13F8\u13F9\x05\u0680\u0341\x02\u13F9\u13FA\x07" +
		"\x04\x02\x02\u13FA\u03D3\x03\x02\x02\x02\u13FB\u13FF\x07\u0185\x02\x02" +
		"\u13FC\u1400\x05\x0E\b\x02\u13FD\u1400\x05\u048A\u0246\x02\u13FE\u1400" +
		"\x05\u0484\u0243\x02\u13FF\u13FC\x03\x02\x02\x02\u13FF\u13FD\x03\x02\x02" +
		"\x02\u13FF\u13FE\x03\x02\x02\x02\u1400\u1401\x03\x02\x02\x02\u1401\u1402" +
		"\x07\x04\x02\x02\u1402\u03D5\x03\x02\x02\x02\u1403\u1404\x07\u0186\x02" +
		"\x02\u1404\u1405\x05J&\x02\u1405\u1406\x07\x04\x02\x02\u1406\u03D7\x03" +
		"\x02\x02\x02\u1407\u1408\x05\u0370\u01B9\x02\u1408\u03D9\x03\x02\x02\x02" +
		"\u1409\u140A\x05\u037A\u01BE\x02\u140A\u03DB\x03\x02\x02\x02\u140B\u140C" +
		"\x07\u0187\x02\x02\u140C\u1411\x05\u0470\u0239\x02\u140D\u1410\x05\u0134" +
		"\x9B\x02\u140E\u1410\x05\u046E\u0238\x02\u140F\u140D\x03\x02\x02\x02\u140F" +
		"\u140E\x03\x02\x02\x02\u1410\u1413\x03\x02\x02\x02\u1411\u140F\x03\x02" +
		"\x02\x02\u1411\u1412\x03\x02\x02\x02\u1412\u1414\x03\x02\x02\x02\u1413" +
		"\u1411\x03\x02\x02\x02\u1414\u1415\x07\x04\x02\x02\u1415\u03DD\x03\x02" +
		"\x02\x02\u1416\u1417\x07\u0188\x02\x02\u1417\u1418\x05\u03DA\u01EE\x02" +
		"\u1418\u1419\x07\x04\x02\x02\u1419\u03DF\x03\x02\x02\x02\u141A\u141B\x07" +
		"\u0189\x02\x02\u141B\u141C\x05\u0480\u0241\x02\u141C\u141D\x07\x04\x02" +
		"\x02\u141D\u03E1\x03\x02\x02\x02\u141E\u141F\x07\u018A\x02\x02\u141F\u1420" +
		"\x05\u0680\u0341\x02\u1420\u1421\x07\x04\x02\x02\u1421\u03E3\x03\x02\x02" +
		"\x02\u1422\u1423\x07\u018B\x02\x02\u1423\u1424\x05\u0238\u011D\x02\u1424" +
		"\u1425\x05\u03EC\u01F7\x02\u1425\u1430\x05\u060C\u0307\x02\u1426\u142F" +
		"\x05\u0376\u01BC\x02\u1427\u142F\x05\u03DC\u01EF\x02\u1428\u142F\x05\u03E6" +
		"\u01F4\x02\u1429\u142F\x05\u03E8\u01F5\x02\u142A\u142F\x05\u0462\u0232" +
		"\x02\u142B\u142F\x05\u0464\u0233\x02\u142C\u142F\x05\u0466\u0234\x02\u142D" +
		"\u142F\x05\u0472\u023A\x02\u142E\u1426\x03\x02\x02\x02\u142E\u1427\x03" +
		"\x02\x02\x02\u142E\u1428\x03\x02\x02\x02\u142E\u1429\x03\x02\x02\x02\u142E" +
		"\u142A\x03\x02\x02\x02\u142E\u142B\x03\x02\x02\x02\u142E\u142C\x03\x02" +
		"\x02\x02\u142E\u142D\x03\x02\x02\x02\u142F\u1432\x03\x02\x02\x02\u1430" +
		"\u142E\x03\x02\x02\x02\u1430\u1431\x03\x02\x02\x02\u1431\u1433\x03\x02" +
		"\x02\x02\u1432\u1430\x03\x02\x02\x02\u1433\u1434\x07\x04\x02\x02\u1434" +
		"\u03E5\x03\x02\x02\x02\u1435\u1446\x07\u018C\x02\x02\u1436\u1445\x05\x1A" +
		"\x0E\x02\u1437\u1445\x05t;\x02\u1438\u1445\x05\x9CO\x02\u1439\u1445\x05" +
		"\xDEp\x02\u143A\u1445\x05\xE2r\x02\u143B\u1445\x05\u0152\xAA\x02\u143C" +
		"\u1445\x05\u0156\xAC\x02\u143D\u1445\x05\u015A\xAE\x02\u143E\u1445\x05" +
		"\u0172\xBA\x02\u143F\u1445\x05\u03B2\u01DA\x02\u1440\u1445\x05\u03D4\u01EB" +
		"\x02\u1441\u1445\x05\u03EE\u01F8\x02\u1442\u1445\x05\u0492\u024A\x02\u1443" +
		"\u1445\x05\u060A\u0306\x02\u1444\u1436\x03\x02\x02\x02\u1444\u1437\x03" +
		"\x02\x02\x02\u1444\u1438\x03\x02\x02\x02\u1444\u1439\x03\x02\x02\x02\u1444" +
		"\u143A\x03\x02\x02\x02\u1444\u143B\x03\x02\x02\x02\u1444\u143C\x03\x02" +
		"\x02\x02\u1444\u143D\x03\x02\x02\x02\u1444\u143E\x03\x02\x02\x02\u1444" +
		"\u143F\x03\x02\x02\x02\u1444\u1440\x03\x02\x02\x02\u1444\u1441\x03\x02" +
		"\x02\x02\u1444\u1442\x03\x02\x02\x02\u1444\u1443\x03\x02\x02\x02\u1445" +
		"\u1448\x03\x02\x02\x02\u1446\u1444\x03\x02\x02\x02\u1446\u1447\x03\x02" +
		"\x02\x02\u1447\u1449\x03\x02\x02\x02\u1448\u1446\x03\x02\x02\x02\u1449" +
		"\u144A\x07\x04\x02\x02\u144A\u03E7\x03\x02\x02\x02\u144B\u145A\x07\u018D" +
		"\x02\x02\u144C\u1459\x05\x18\r\x02\u144D\u1459\x05r:\x02\u144E\u1459\x05" +
		"\x9AN\x02\u144F\u1459\x05\xDCo\x02\u1450\u1459\x05\u0150\xA9\x02\u1451" +
		"\u1459\x05\u0154\xAB\x02\u1452\u1459\x05\u0158\xAD\x02\u1453\u1459\x05" +
		"\u0170\xB9\x02\u1454\u1459\x05\u03B0\u01D9\x02\u1455\u1459\x05\u03D2\u01EA" +
		"\x02\u1456\u1459\x05\u03E2\u01F2\x02\u1457\u1459\x05\u0490\u0249\x02\u1458" +
		"\u144C\x03\x02\x02\x02\u1458\u144D\x03\x02\x02\x02\u1458\u144E\x03\x02" +
		"\x02\x02\u1458\u144F\x03\x02\x02\x02\u1458\u1450\x03\x02\x02\x02\u1458" +
		"\u1451\x03\x02\x02\x02\u1458\u1452\x03\x02\x02\x02\u1458\u1453\x03\x02" +
		"\x02\x02\u1458\u1454\x03\x02\x02\x02\u1458\u1455\x03\x02\x02\x02\u1458" +
		"\u1456\x03\x02\x02\x02\u1458\u1457\x03\x02\x02\x02\u1459\u145C\x03\x02" +
		"\x02\x02\u145A\u1458\x03\x02\x02\x02\u145A\u145B\x03\x02\x02\x02\u145B" +
		"\u145D\x03\x02\x02\x02\u145C\u145A\x03\x02\x02\x02\u145D\u145E\x07\x04" +
		"\x02\x02\u145E\u03E9\x03\x02\x02\x02\u145F\u1460\x07\u018E\x02\x02\u1460" +
		"\u1461\x05\u031A\u018E\x02\u1461\u146B\x05\u0566\u02B4\x02\u1462\u146A" +
		"\x05\x16\f\x02\u1463\u146A\x05\x98M\x02\u1464\u146A\x05\u0198\xCD\x02" +
		"\u1465\u146A\x05\u03E6\u01F4\x02\u1466\u146A\x05\u03E8\u01F5\x02\u1467" +
		"\u146A\x05\u0464\u0233\x02\u1468\u146A\x05\u04B0\u0259\x02\u1469\u1462" +
		"\x03\x02\x02\x02\u1469\u1463\x03\x02\x02\x02\u1469\u1464\x03\x02\x02\x02" +
		"\u1469\u1465\x03\x02\x02\x02\u1469\u1466\x03\x02\x02\x02\u1469\u1467\x03" +
		"\x02\x02\x02\u1469\u1468\x03\x02\x02\x02\u146A\u146D\x03\x02\x02\x02\u146B" +
		"\u1469\x03\x02\x02\x02\u146B\u146C\x03\x02\x02\x02\u146C\u146E\x03\x02" +
		"\x02\x02\u146D\u146B\x03\x02\x02\x02\u146E\u146F\x07\x04\x02\x02\u146F" +
		"\u03EB\x03\x02\x02\x02\u1470\u1471\x07\u018F\x02\x02\u1471\u1473\x05\u031C" +
		"\u018F\x02\u1472\u1474\x05\u031E\u0190\x02\u1473\u1472\x03\x02\x02\x02" +
		"\u1473\u1474\x03\x02\x02\x02\u1474\u1475\x03\x02\x02\x02\u1475\u1476\x07" +
		"\x04\x02\x02\u1476\u03ED\x03\x02\x02\x02\u1477\u147B\x07\u0190\x02\x02" +
		"\u1478\u147C\x05\x0E\b\x02\u1479\u147C\x05\u048A\u0246\x02\u147A\u147C" +
		"\x05\u0484\u0243\x02\u147B\u1478\x03\x02\x02\x02\u147B\u1479\x03\x02\x02" +
		"\x02\u147B\u147A\x03\x02\x02\x02\u147C\u147D\x03\x02\x02\x02\u147D\u147E" +
		"\x07\x04\x02\x02\u147E\u03EF\x03\x02\x02\x02\u147F\u1480\x07\u0191\x02" +
		"\x02\u1480\u1484\x05\u03F8\u01FD\x02\u1481\u1485\x05\x0E\b\x02\u1482\u1485" +
		"\x05\u048A\u0246\x02\u1483\u1485\x05\u0484\u0243\x02\u1484\u1481\x03\x02" +
		"\x02\x02\u1484\u1482\x03\x02\x02\x02\u1484\u1483\x03\x02\x02\x02\u1485" +
		"\u1487\x03\x02\x02\x02\u1486\u1488\x05\u03F6\u01FC\x02\u1487\u1486\x03" +
		"\x02\x02\x02\u1487\u1488\x03\x02\x02\x02\u1488\u1489\x03\x02\x02\x02\u1489" +
		"\u148A\x07\x04\x02\x02\u148A\u03F1\x03\x02\x02\x02\u148B\u148C\x07\u0192" +
		"\x02\x02\u148C\u148D\x05J&\x02\u148D\u148E\x07\x04\x02\x02\u148E\u03F3" +
		"\x03\x02\x02\x02\u148F\u1490\x05\u0370\u01B9\x02\u1490\u03F5\x03\x02\x02" +
		"\x02\u1491\u1495\x07\u0193\x02\x02\u1492\u1496\x05\x0E\b\x02\u1493\u1496" +
		"\x05\u048A\u0246\x02\u1494\u1496\x05\u0484\u0243\x02\u1495\u1492\x03\x02" +
		"\x02\x02\u1495\u1493\x03\x02\x02\x02\u1495\u1494\x03\x02\x02\x02\u1496" +
		"\u1497\x03\x02\x02\x02\u1497\u1498\x07\x04\x02\x02\u1498\u03F7\x03\x02" +
		"\x02\x02\u1499\u149A\x05\u037A\u01BE\x02\u149A\u03F9\x03\x02\x02\x02\u149B" +
		"\u149C\x07\u0194\x02\x02\u149C\u149D\x05\u0410\u0209\x02\u149D\u149E\x07" +
		"\x04\x02\x02\u149E\u03FB\x03\x02\x02\x02\u149F\u14A0\x07\u0195\x02\x02" +
		"\u14A0\u14A4\x05\u0110\x89\x02\u14A1\u14A3\x05\u0174\xBB\x02\u14A2\u14A1" +
		"\x03\x02\x02\x02\u14A3\u14A6\x03\x02\x02\x02\u14A4\u14A2\x03\x02\x02\x02" +
		"\u14A4\u14A5\x03\x02\x02\x02\u14A5\u14A7\x03\x02\x02\x02\u14A6\u14A4\x03" +
		"\x02\x02\x02\u14A7\u14A8\x07\x04\x02\x02\u14A8\u03FD\x03\x02\x02\x02\u14A9" +
		"\u14AC\x07\u0196\x02\x02\u14AA\u14AD\x05\u0308\u0185\x02\u14AB\u14AD\x05" +
		"\u0354\u01AB\x02\u14AC\u14AA\x03\x02\x02\x02\u14AC\u14AB\x03\x02\x02\x02" +
		"\u14AD\u14AE\x03\x02\x02\x02\u14AE\u14AF\x07\x04\x02\x02\u14AF\u03FF\x03" +
		"\x02\x02\x02\u14B0\u14B7\x07\u0197\x02\x02\u14B1\u14B6\x05\u0582\u02C2" +
		"\x02\u14B2\u14B6\x05\u0584\u02C3\x02\u14B3\u14B6\x05\u0588\u02C5\x02\u14B4" +
		"\u14B6\x05\u058C\u02C7\x02\u14B5\u14B1\x03\x02\x02\x02\u14B5\u14B2\x03" +
		"\x02\x02\x02\u14B5\u14B3\x03\x02\x02\x02\u14B5\u14B4\x03\x02\x02\x02\u14B6" +
		"\u14B9\x03\x02\x02\x02\u14B7\u14B5\x03\x02\x02\x02\u14B7\u14B8\x03\x02" +
		"\x02\x02\u14B8\u14BA\x03\x02\x02\x02\u14B9\u14B7";
	private static readonly _serializedATNSegment10: string =
		"\x03\x02\x02\x02\u14BA\u14BB\x07\x04\x02\x02\u14BB\u0401\x03\x02\x02\x02" +
		"\u14BC\u14BD\x07\u0198\x02\x02\u14BD\u14C3\x05\u064E\u0328\x02\u14BE\u14C2" +
		"\x05\x96L\x02\u14BF\u14C2\x05\u0376\u01BC\x02\u14C0\u14C2\x05\u0638\u031D" +
		"\x02\u14C1\u14BE\x03\x02\x02\x02\u14C1\u14BF\x03\x02\x02\x02\u14C1\u14C0" +
		"\x03\x02\x02\x02\u14C2\u14C5\x03\x02\x02\x02\u14C3\u14C1\x03\x02\x02\x02" +
		"\u14C3\u14C4\x03\x02\x02\x02\u14C4\u14C6\x03\x02\x02\x02\u14C5\u14C3\x03" +
		"\x02\x02\x02\u14C6\u14C7\x07\x04\x02\x02\u14C7\u0403\x03\x02\x02\x02\u14C8" +
		"\u14CE\x07\u0199\x02\x02\u14C9\u14CD\x05\u0386\u01C4\x02\u14CA\u14CD\x05" +
		"\u0404\u0203\x02\u14CB\u14CD\x05\u0452\u022A\x02\u14CC\u14C9\x03\x02\x02" +
		"\x02\u14CC\u14CA\x03\x02\x02\x02\u14CC\u14CB\x03\x02\x02\x02\u14CD\u14D0" +
		"\x03\x02\x02\x02\u14CE\u14CC\x03\x02\x02\x02\u14CE\u14CF\x03\x02\x02\x02" +
		"\u14CF\u14D1\x03\x02\x02\x02\u14D0\u14CE\x03\x02\x02\x02\u14D1\u14D2\x07" +
		"\x04\x02\x02\u14D2\u0405\x03\x02\x02\x02\u14D3\u14D5\x07\u019A\x02\x02" +
		"\u14D4\u14D6\x05\u053E\u02A0\x02\u14D5\u14D4\x03\x02\x02\x02\u14D5\u14D6" +
		"\x03\x02\x02\x02\u14D6\u14D7\x03\x02\x02\x02\u14D7\u14D8\x07\x04\x02\x02" +
		"\u14D8\u0407\x03\x02\x02\x02\u14D9\u14E6\x07\u019B\x02\x02\u14DA\u14E5" +
		"\x05\x96L\x02\u14DB\u14E5\x05\xD0i\x02\u14DC\u14E5\x05\u014A\xA6\x02\u14DD" +
		"\u14E5\x05\u01F6\xFC\x02\u14DE\u14E5\x05\u02B4\u015B\x02\u14DF\u14E5\x05" +
		"\u0336\u019C\x02\u14E0\u14E5\x05\u034A\u01A6\x02\u14E1\u14E5\x05\u0400" +
		"\u0201\x02\u14E2\u14E5\x05\u0568\u02B5\x02\u14E3\u14E5\x05\u05E4\u02F3" +
		"\x02\u14E4\u14DA\x03\x02\x02\x02\u14E4\u14DB\x03\x02\x02\x02\u14E4\u14DC" +
		"\x03\x02\x02\x02\u14E4\u14DD\x03\x02\x02\x02\u14E4\u14DE\x03\x02\x02\x02" +
		"\u14E4\u14DF\x03\x02\x02\x02\u14E4\u14E0\x03\x02\x02\x02\u14E4\u14E1\x03" +
		"\x02\x02\x02\u14E4\u14E2\x03\x02\x02\x02\u14E4\u14E3\x03\x02\x02\x02\u14E5" +
		"\u14E8\x03\x02\x02\x02\u14E6\u14E4\x03\x02\x02\x02\u14E6\u14E7\x03\x02" +
		"\x02\x02\u14E7\u14E9\x03\x02\x02\x02\u14E8\u14E6\x03\x02\x02\x02\u14E9" +
		"\u14EA\x07\x04\x02\x02\u14EA\u0409\x03\x02\x02\x02\u14EB\u14EC\x07\u019C" +
		"\x02\x02\u14EC\u14F0\x05\u049E\u0250\x02\u14ED\u14EF\x05\u040C\u0207\x02" +
		"\u14EE\u14ED\x03\x02\x02\x02\u14EF\u14F2\x03\x02\x02\x02\u14F0\u14EE\x03" +
		"\x02\x02\x02\u14F0\u14F1\x03\x02\x02\x02\u14F1\u14F3\x03\x02\x02\x02\u14F2" +
		"\u14F0\x03\x02\x02\x02\u14F3\u14F4\x07\x04\x02\x02\u14F4\u040B\x03\x02" +
		"\x02\x02\u14F5\u14F9\x07\u019D\x02\x02\u14F6\u14F8\x05J&\x02\u14F7\u14F6" +
		"\x03\x02\x02\x02\u14F8\u14FB\x03\x02\x02\x02\u14F9\u14F7\x03\x02\x02\x02" +
		"\u14F9\u14FA\x03\x02\x02\x02\u14FA\u14FC\x03\x02\x02\x02\u14FB\u14F9\x03" +
		"\x02\x02\x02\u14FC\u14FD\x07\x04\x02\x02\u14FD\u040D\x03\x02\x02\x02\u14FE" +
		"\u14FF\x07\u019E\x02\x02\u14FF\u1500\x05\u0412\u020A\x02\u1500\u1501\x07" +
		"\x04\x02\x02\u1501\u040F\x03\x02\x02\x02\u1502\u1506\x07\u019F\x02\x02" +
		"\u1503\u1505\x05\u0412\u020A\x02\u1504\u1503\x03\x02\x02\x02\u1505\u1508" +
		"\x03\x02\x02\x02\u1506\u1504\x03\x02\x02\x02\u1506\u1507\x03\x02\x02\x02" +
		"\u1507\u1509\x03\x02\x02\x02\u1508\u1506\x03\x02\x02\x02\u1509\u150A\x07" +
		"\x04\x02\x02\u150A\u0411\x03\x02\x02\x02\u150B\u150C\x05\u0476\u023C\x02" +
		"\u150C\u0413\x03\x02\x02\x02\u150D\u150E\x07\u01A0\x02\x02\u150E\u150F" +
		"\x05\u0410\u0209\x02\u150F\u1510\x07\x04\x02\x02\u1510\u0415\x03\x02\x02" +
		"\x02\u1511\u1513\x07\u01A1\x02\x02\u1512\u1514\x05\u0442\u0222\x02\u1513" +
		"\u1512\x03\x02\x02\x02\u1513\u1514\x03\x02\x02\x02\u1514\u1516\x03\x02" +
		"\x02\x02\u1515\u1517\x05\u0428\u0215\x02\u1516\u1515\x03\x02\x02\x02\u1516" +
		"\u1517\x03\x02\x02\x02\u1517\u1527\x03\x02\x02\x02\u1518\u1526\x05\x06" +
		"\x04\x02\u1519\u1526\x05\x96L\x02\u151A\u1526\x05\u010C\x87\x02\u151B" +
		"\u1526\x05\u011A\x8E\x02\u151C\u1526\x05\u0376\u01BC\x02\u151D\u1526\x05" +
		"\u041E\u0210\x02\u151E\u1526\x05\u0434\u021B\x02\u151F\u1526\x05\u0446" +
		"\u0224\x02\u1520\u1526\x05\u0456\u022C\x02\u1521\u1526\x05\u0462\u0232" +
		"\x02\u1522\u1526\x05\u0524\u0293\x02\u1523\u1526\x05\u0634\u031B\x02\u1524" +
		"\u1526\x05\u0638\u031D\x02\u1525\u1518\x03\x02\x02\x02\u1525\u1519\x03" +
		"\x02\x02\x02\u1525\u151A\x03\x02\x02\x02\u1525\u151B\x03\x02\x02\x02\u1525" +
		"\u151C\x03\x02\x02\x02\u1525\u151D\x03\x02\x02\x02\u1525\u151E\x03\x02" +
		"\x02\x02\u1525\u151F\x03\x02\x02\x02\u1525\u1520\x03\x02\x02\x02\u1525" +
		"\u1521\x03\x02\x02\x02\u1525\u1522\x03\x02\x02\x02\u1525\u1523\x03\x02" +
		"\x02\x02\u1525\u1524\x03\x02\x02\x02\u1526\u1529\x03\x02\x02\x02\u1527" +
		"\u1525\x03\x02\x02\x02\u1527\u1528\x03\x02\x02\x02\u1528\u152A\x03\x02" +
		"\x02\x02\u1529\u1527\x03\x02\x02\x02\u152A\u152B\x07\x04\x02\x02\u152B" +
		"\u0417\x03\x02\x02\x02\u152C\u152F\x07\u01A2\x02\x02\u152D\u1530\x05\u0186" +
		"\xC4\x02\u152E\u1530\x05\u0188\xC5\x02\u152F\u152D\x03\x02\x02\x02\u152F" +
		"\u152E\x03\x02\x02\x02\u1530\u153D\x03\x02\x02\x02\u1531\u153C\x05\x06" +
		"\x04\x02\u1532\u153C\x05\x96L\x02\u1533\u153C\x05\u011A\x8E\x02\u1534" +
		"\u153C\x05\u0132\x9A\x02\u1535\u153C\x05\u041E\u0210\x02\u1536\u153C\x05" +
		"\u0426\u0214\x02\u1537\u153C\x05\u0434\u021B\x02\u1538\u153C\x05\u043C" +
		"\u021F\x02\u1539\u153C\x05\u0450\u0229\x02\u153A\u153C\x05\u0462\u0232" +
		"\x02\u153B\u1531\x03\x02\x02\x02\u153B\u1532\x03\x02\x02\x02\u153B\u1533" +
		"\x03\x02\x02\x02\u153B\u1534\x03\x02\x02\x02\u153B\u1535\x03\x02\x02\x02" +
		"\u153B\u1536\x03\x02\x02\x02\u153B\u1537\x03\x02\x02\x02\u153B\u1538\x03" +
		"\x02\x02\x02\u153B\u1539\x03\x02\x02\x02\u153B\u153A\x03\x02\x02\x02\u153C" +
		"\u153F\x03\x02\x02\x02\u153D\u153B\x03\x02\x02\x02\u153D\u153E\x03\x02" +
		"\x02\x02\u153E\u1540\x03\x02\x02\x02\u153F\u153D\x03\x02\x02\x02\u1540" +
		"\u1541\x07\x04\x02\x02\u1541\u0419\x03\x02\x02\x02\u1542\u1551\x07\u01A3" +
		"\x02\x02\u1543\u1550\x05\b\x05\x02\u1544\u1550\x05\xAEX\x02\u1545\u1550" +
		"\x05\xFA~\x02\u1546\u1550\x05\xFE\x80\x02\u1547\u1550\x05\u0102\x82\x02" +
		"\u1548\u1550\x05\u0106\x84\x02\u1549\u1550\x05\u011C\x8F\x02\u154A\u1550" +
		"\x05\u0420\u0211\x02\u154B\u1550\x05\u0436\u021C\x02\u154C\u1550\x05\u0444" +
		"\u0223\x02\u154D\u1550\x05\u0448\u0225\x02\u154E\u1550\x05\u044C\u0227" +
		"\x02\u154F\u1543\x03\x02\x02\x02\u154F\u1544\x03\x02\x02\x02\u154F\u1545" +
		"\x03\x02\x02\x02\u154F\u1546\x03\x02\x02\x02\u154F\u1547\x03\x02\x02\x02" +
		"\u154F\u1548\x03\x02\x02\x02\u154F\u1549\x03\x02\x02\x02\u154F\u154A\x03" +
		"\x02\x02\x02\u154F\u154B\x03\x02\x02\x02\u154F\u154C\x03\x02\x02\x02\u154F" +
		"\u154D\x03\x02\x02\x02\u154F\u154E\x03\x02\x02\x02\u1550\u1553\x03\x02" +
		"\x02\x02\u1551\u154F\x03\x02\x02\x02\u1551\u1552\x03\x02\x02\x02\u1552" +
		"\u1554\x03\x02\x02\x02\u1553\u1551\x03\x02\x02\x02\u1554\u1555\x07\x04" +
		"\x02\x02\u1555\u041B\x03\x02\x02\x02\u1556\u1557\x07\u01A4\x02\x02\u1557" +
		"\u1558\x05\u0442\u0222\x02\u1558\u1560\x05\u0432\u021A\x02\u1559\u155F" +
		"\x05\x96L\x02\u155A\u155F\x05\u0376\u01BC\x02\u155B\u155F\x05\u0462\u0232" +
		"\x02\u155C\u155F\x05\u0638\u031D\x02\u155D\u155F\x05\u011A\x8E\x02\u155E" +
		"\u1559\x03\x02\x02\x02\u155E\u155A\x03\x02\x02\x02\u155E\u155B\x03\x02" +
		"\x02\x02\u155E\u155C\x03\x02\x02\x02\u155E\u155D\x03\x02\x02\x02\u155F" +
		"\u1562\x03\x02\x02\x02\u1560\u155E\x03\x02\x02\x02\u1560\u1561\x03\x02" +
		"\x02\x02\u1561\u1563\x03\x02\x02\x02\u1562\u1560\x03\x02\x02\x02\u1563" +
		"\u1564\x07\x04\x02\x02\u1564\u041D\x03\x02\x02\x02\u1565\u1566\x07\u01A5" +
		"\x02\x02\u1566\u1567\x05\u0422\u0212\x02\u1567\u1568\x05\u0114\x8B\x02" +
		"\u1568\u156D\x05\u0110\x89\x02\u1569\u156C\x05*\x16\x02\u156A\u156C\x05" +
		"\u060E\u0308\x02\u156B\u1569\x03\x02\x02\x02\u156B\u156A\x03\x02\x02\x02" +
		"\u156C\u156F\x03\x02\x02\x02\u156D\u156B\x03\x02\x02\x02\u156D\u156E\x03" +
		"\x02\x02\x02\u156E\u1570\x03\x02\x02\x02\u156F\u156D\x03\x02\x02\x02\u1570" +
		"\u1571\x07\x04\x02\x02\u1571\u041F\x03\x02\x02\x02\u1572\u1573\x07\u01A6" +
		"\x02\x02\u1573\u1577\x05\u0424\u0213\x02\u1574\u1576\x05\u0134\x9B\x02" +
		"\u1575\u1574\x03\x02\x02\x02\u1576\u1579\x03\x02\x02\x02\u1577\u1575\x03" +
		"\x02\x02\x02\u1577\u1578\x03\x02\x02\x02\u1578\u157A\x03\x02\x02\x02\u1579" +
		"\u1577\x03\x02\x02\x02\u157A\u157B\x07\x04\x02\x02\u157B\u0421\x03\x02" +
		"\x02\x02\u157C\u157D\x05\u0370\u01B9\x02\u157D\u0423\x03\x02\x02\x02\u157E" +
		"\u157F\x05\u037A\u01BE\x02\u157F\u0425\x03\x02\x02\x02\u1580\u1581\x07" +
		"\u01A7\x02\x02\u1581\u1582\x05\u0424\u0213\x02\u1582\u1583\x05\u0114\x8B" +
		"\x02\u1583\u1588\x05\u0110\x89\x02\u1584\u1587\x05*\x16\x02\u1585\u1587" +
		"\x05\u060E\u0308\x02\u1586\u1584\x03\x02\x02\x02\u1586\u1585\x03\x02\x02" +
		"\x02\u1587\u158A\x03\x02\x02\x02\u1588\u1586\x03\x02\x02\x02\u1588\u1589" +
		"\x03\x02\x02\x02\u1589\u158B\x03\x02\x02\x02\u158A\u1588\x03\x02\x02\x02" +
		"\u158B\u158C\x07\x04\x02\x02\u158C\u0427\x03\x02\x02\x02\u158D\u1592\x05" +
		"\u0252\u012A\x02\u158E\u1592\x05\u03BE\u01E0\x02\u158F\u1592\x050\x19" +
		"\x02\u1590\u1592\x05\u0630\u0319\x02\u1591\u158D\x03\x02\x02\x02\u1591" +
		"\u158E\x03\x02\x02\x02\u1591\u158F\x03\x02\x02\x02\u1591\u1590\x03\x02" +
		"\x02\x02\u1592\u0429\x03\x02\x02\x02\u1593\u159A\x05\u0250\u0129\x02\u1594" +
		"\u159A\x05\u03BC\u01DF\x02\u1595\u159A\x05.\x18\x02\u1596\u159A\x05\u062E" +
		"\u0318\x02\u1597\u159A\x05\u062C\u0317\x02\u1598\u159A\x05\u0360\u01B1" +
		"\x02\u1599\u1593\x03\x02\x02\x02\u1599\u1594\x03\x02\x02\x02\u1599\u1595" +
		"\x03\x02\x02\x02\u1599\u1596\x03\x02\x02\x02\u1599\u1597\x03\x02\x02\x02" +
		"\u1599\u1598\x03\x02\x02\x02\u159A\u042B\x03\x02\x02\x02\u159B\u159C\x07" +
		"\u01A8\x02\x02\u159C\u159D\x07\x04\x02\x02\u159D\u042D\x03\x02\x02\x02" +
		"\u159E\u15A1\x07\u01A9\x02\x02\u159F\u15A2\x05\u044A\u0226\x02\u15A0\u15A2" +
		"\x05\u043E\u0220\x02\u15A1\u159F\x03\x02\x02\x02\u15A1\u15A0\x03\x02\x02" +
		"\x02\u15A2\u15A5\x03\x02\x02\x02\u15A3\u15A6\x05\u0272\u013A\x02\u15A4" +
		"\u15A6\x05\u025C\u012F\x02\u15A5\u15A3\x03\x02\x02\x02\u15A5\u15A4\x03" +
		"\x02\x02\x02\u15A6\u15A7\x03\x02\x02\x02\u15A7\u15A8\x07\x04\x02\x02\u15A8" +
		"\u042F\x03\x02\x02\x02\u15A9\u15B0\x07\u01AA\x02\x02\u15AA\u15AF\x05\u020A" +
		"\u0106\x02\u15AB\u15AF\x05\u032A\u0196\x02\u15AC\u15AF\x05\u042E\u0218" +
		"\x02\u15AD\u15AF\x05\u0452\u022A\x02\u15AE\u15AA\x03\x02\x02\x02\u15AE" +
		"\u15AB\x03\x02\x02\x02\u15AE\u15AC\x03\x02\x02\x02\u15AE\u15AD\x03\x02" +
		"\x02\x02\u15AF\u15B2\x03\x02\x02\x02\u15B0\u15AE\x03\x02\x02\x02\u15B0" +
		"\u15B1\x03\x02\x02\x02\u15B1\u15B3\x03\x02\x02\x02\u15B2\u15B0\x03\x02" +
		"\x02\x02\u15B3\u15B4\x07\x04\x02\x02\u15B4\u0431\x03\x02\x02\x02\u15B5" +
		"\u15B9\x07\u01AB\x02\x02\u15B6\u15B8\x05\u0452\u022A\x02\u15B7\u15B6\x03" +
		"\x02\x02\x02\u15B8\u15BB\x03\x02\x02\x02\u15B9\u15B7\x03\x02\x02\x02\u15B9" +
		"\u15BA\x03\x02\x02\x02\u15BA\u15BC\x03\x02\x02\x02\u15BB\u15B9\x03\x02" +
		"\x02\x02\u15BC\u15BD\x07\x04\x02\x02\u15BD\u0433\x03\x02\x02\x02\u15BE" +
		"\u15BF\x07\u01AC\x02\x02\u15BF\u15C0\x05\u0438\u021D\x02\u15C0\u15C1\x05" +
		"\u0114\x8B\x02\u15C1\u15C6\x05\u0320\u0191\x02\u15C2\u15C5\x05*\x16\x02" +
		"\u15C3\u15C5\x05\u060E\u0308\x02\u15C4\u15C2\x03\x02\x02\x02\u15C4\u15C3" +
		"\x03\x02\x02\x02\u15C5\u15C8\x03\x02\x02\x02\u15C6\u15C4\x03\x02\x02\x02" +
		"\u15C6\u15C7\x03\x02\x02\x02\u15C7\u15C9\x03\x02\x02\x02\u15C8\u15C6\x03" +
		"\x02\x02\x02\u15C9\u15CA\x07\x04\x02\x02\u15CA\u0435\x03\x02\x02\x02\u15CB" +
		"\u15CC\x07\u01AD\x02\x02\u15CC\u15D0\x05\u043A\u021E\x02\u15CD\u15CF\x05" +
		"\u0134\x9B\x02\u15CE\u15CD\x03\x02\x02\x02\u15CF\u15D2\x03\x02\x02\x02" +
		"\u15D0\u15CE\x03\x02\x02\x02\u15D0\u15D1\x03\x02\x02\x02\u15D1\u15D3\x03" +
		"\x02\x02\x02\u15D2\u15D0\x03\x02\x02\x02\u15D3\u15D4\x07\x04\x02\x02\u15D4" +
		"\u0437\x03\x02\x02\x02\u15D5\u15D6\x05\u0370\u01B9\x02\u15D6\u0439\x03" +
		"\x02\x02\x02\u15D7\u15D8\x05\u037A\u01BE\x02\u15D8\u043B\x03\x02\x02\x02" +
		"\u15D9\u15DA\x07\u01AE\x02\x02\u15DA\u15DB\x05\u043A\u021E\x02\u15DB\u15DC" +
		"\x05\u0114\x8B\x02\u15DC\u15E1\x05\u0320\u0191\x02\u15DD\u15E0\x05*\x16" +
		"\x02\u15DE\u15E0\x05\u060E\u0308\x02\u15DF\u15DD\x03\x02\x02\x02\u15DF" +
		"\u15DE\x03\x02\x02\x02\u15E0\u15E3\x03\x02\x02\x02\u15E1\u15DF\x03\x02" +
		"\x02\x02\u15E1\u15E2\x03\x02\x02\x02\u15E2\u15E4\x03\x02\x02\x02\u15E3" +
		"\u15E1\x03\x02\x02\x02\u15E4\u15E5\x07\x04\x02\x02\u15E5\u043D\x03\x02" +
		"\x02\x02\u15E6\u15E7\x07\u01AF\x02\x02\u15E7\u15E8\x05\u044A\u0226\x02" +
		"\u15E8\u15E9\x05\u024E\u0128\x02\u15E9\u15EA\x07\x04\x02\x02\u15EA\u043F" +
		"\x03\x02\x02\x02\u15EB\u15EC\x07\u01B0\x02\x02\u15EC\u15ED\x05J&\x02\u15ED" +
		"\u15EE\x07\x04\x02\x02\u15EE\u0441\x03\x02\x02\x02\u15EF\u15F0\x05\u0370" +
		"\u01B9\x02\u15F0\u0443\x03\x02\x02\x02\u15F1\u15F6\x07\u01B1\x02\x02\u15F2" +
		"\u15F5\x05\u0134\x9B\x02\u15F3\u15F5\x05\u013A\x9E\x02\u15F4\u15F2\x03" +
		"\x02\x02\x02\u15F4\u15F3\x03\x02\x02\x02\u15F5\u15F8\x03\x02\x02\x02\u15F6" +
		"\u15F4\x03\x02\x02\x02\u15F6\u15F7\x03\x02\x02\x02\u15F7\u15F9\x03\x02" +
		"\x02\x02\u15F8\u15F6\x03\x02\x02\x02\u15F9\u15FA\x07\x04\x02\x02\u15FA" +
		"\u0445\x03\x02\x02\x02\u15FB\u15FC\x07\u01B2\x02\x02\u15FC\u15FD\x05\u05C8" +
		"\u02E5\x02\u15FD\u15FE\x07\x04\x02\x02\u15FE\u0447\x03\x02\x02\x02\u15FF" +
		"\u1603\x07\u01B3\x02\x02\u1600\u1604\x05\x0E\b\x02\u1601\u1604\x05\u048A" +
		"\u0246\x02\u1602\u1604\x05\u0484\u0243\x02\u1603\u1600\x03\x02\x02\x02" +
		"\u1603\u1601\x03\x02\x02\x02\u1603\u1602\x03\x02\x02\x02\u1604\u1605\x03" +
		"\x02\x02\x02\u1605\u1606\x07\x04\x02\x02\u1606\u0449\x03\x02\x02\x02\u1607" +
		"\u1608\x05\u037A\u01BE\x02\u1608\u044B\x03\x02\x02\x02\u1609\u160A\x07" +
		"\u01B4\x02\x02\u160A\u160F\x05\u0470\u0239\x02\u160B\u160E\x05\u0134\x9B" +
		"\x02\u160C\u160E\x05\u046E\u0238\x02\u160D\u160B\x03\x02\x02\x02\u160D" +
		"\u160C\x03\x02\x02\x02\u160E\u1611\x03\x02\x02\x02\u160F\u160D\x03\x02" +
		"\x02\x02\u160F\u1610\x03\x02\x02\x02\u1610\u1612\x03\x02\x02\x02\u1611" +
		"\u160F\x03\x02\x02\x02\u1612\u1613\x07\x04\x02\x02\u1613\u044D\x03\x02" +
		"\x02\x02\u1614\u1615\x07\u01B5\x02\x02\u1615\u1619\x05\u0470\u0239\x02" +
		"\u1616\u161A\x05\x0E\b\x02\u1617\u161A\x05\u048A\u0246\x02\u1618\u161A" +
		"\x05\u0484\u0243\x02\u1619\u1616\x03\x02\x02\x02\u1619\u1617\x03\x02\x02" +
		"\x02\u1619\u1618\x03\x02\x02\x02\u161A\u161C\x03\x02\x02\x02\u161B\u161D" +
		"\x05\u046E\u0238\x02\u161C\u161B\x03\x02\x02\x02\u161C\u161D\x03\x02\x02" +
		"\x02\u161D\u161E\x03\x02\x02\x02\u161E\u161F\x07\x04\x02\x02\u161F\u044F" +
		"\x03\x02\x02\x02\u1620\u1621\x07\u01B6\x02\x02\u1621\u1624\x05\u0470\u0239" +
		"\x02\u1622\u1625\x05\u0614\u030B\x02\u1623\u1625\x05\u0632\u031A\x02\u1624" +
		"\u1622\x03\x02\x02\x02\u1624\u1623\x03\x02\x02\x02\u1625\u162B\x03\x02" +
		"\x02\x02\u1626\u162A\x05\x96L\x02\u1627\u162A\x05\u01AC\xD7\x02\u1628" +
		"\u162A\x05\u0472\u023A\x02\u1629\u1626\x03\x02\x02\x02\u1629\u1627\x03" +
		"\x02\x02\x02\u1629\u1628\x03\x02\x02\x02\u162A\u162D\x03\x02\x02\x02\u162B" +
		"\u1629\x03\x02\x02\x02\u162B\u162C\x03\x02\x02\x02\u162C\u162E\x03\x02" +
		"\x02\x02\u162D\u162B\x03\x02\x02\x02\u162E\u162F\x07\x04\x02\x02\u162F" +
		"\u0451\x03\x02\x02\x02\u1630\u1631\x07\u01B7\x02\x02\u1631\u1632\x05\u044A" +
		"\u0226\x02\u1632\u1633\x07\x04\x02\x02\u1633\u0453\x03\x02\x02\x02\u1634" +
		"\u1638\x07\u01B8\x02\x02\u1635\u1637\x05\u0452\u022A\x02\u1636\u1635\x03" +
		"\x02\x02\x02\u1637\u163A\x03\x02\x02\x02\u1638\u1636\x03\x02\x02\x02\u1638" +
		"\u1639\x03\x02\x02\x02\u1639\u163B\x03\x02\x02\x02\u163A\u1638\x03\x02" +
		"\x02\x02\u163B\u163C\x07\x04\x02\x02\u163C\u0455\x03\x02\x02\x02\u163D" +
		"\u163E\x07\u01B9\x02\x02\u163E\u163F\x05\u0280\u0141\x02\u163F\u1640\x07" +
		"\x04\x02\x02\u1640\u0457\x03\x02\x02\x02\u1641\u1645\x05\u033C\u019F\x02" +
		"\u1642\u1645\x05\u0330\u0199\x02\u1643\u1645\x05\u033E\u01A0\x02\u1644" +
		"\u1641\x03\x02\x02\x02\u1644\u1642\x03\x02\x02\x02\u1644\u1643\x03\x02" +
		"\x02\x02\u1645\u0459\x03\x02\x02\x02\u1646\u164A\x05\u033C\u019F\x02\u1647" +
		"\u164A\x05\u0330\u0199\x02\u1648\u164A\x05\u033E\u01A0\x02\u1649\u1646" +
		"\x03\x02\x02\x02\u1649\u1647\x03\x02\x02\x02\u1649\u1648\x03\x02\x02\x02" +
		"\u164A\u045B\x03\x02\x02\x02\u164B\u164C\x07\u01BA\x02\x02\u164C\u164E" +
		"\x05\u0658\u032D\x02\u164D\u164F\x05\u047E\u0240\x02\u164E\u164D\x03\x02" +
		"\x02\x02\u164E\u164F\x03\x02\x02\x02\u164F\u1650\x03\x02\x02\x02\u1650" +
		"\u1651\x07\x04\x02\x02\u1651\u045D\x03\x02\x02\x02\u1652\u1653\x07\u01BB" +
		"\x02\x02\u1653\u1659\x05\u03B4\u01DB\x02\u1654\u1658\x05\u0138\x9D\x02" +
		"\u1655\u1658\x05\u01EE\xF8\x02\u1656\u1658\x05\u037C\u01BF\x02\u1657\u1654" +
		"\x03\x02\x02\x02\u1657\u1655\x03\x02\x02\x02\u1657\u1656\x03\x02\x02\x02" +
		"\u1658\u165B\x03\x02\x02\x02\u1659\u1657\x03\x02\x02\x02\u1659\u165A\x03" +
		"\x02\x02\x02\u165A\u165C\x03\x02\x02\x02\u165B\u1659\x03\x02\x02\x02\u165C" +
		"\u165D\x07\x04\x02\x02\u165D\u045F\x03\x02\x02\x02\u165E\u165F\x07\u01BC" +
		"\x02\x02\u165F\u1661\x05\u05D6\u02EC\x02\u1660\u1662\x05\u063C\u031F\x02" +
		"\u1661\u1660\x03\x02\x02\x02\u1661\u1662\x03\x02\x02\x02\u1662\u1663\x03" +
		"\x02\x02\x02\u1663\u1664\x07\x04\x02\x02\u1664\u0461\x03\x02\x02\x02\u1665" +
		"\u1666\x07\u01BD\x02\x02\u1666\u1669\x05\u046C\u0237\x02\u1667\u166A\x05" +
		"\u0614\u030B\x02\u1668\u166A\x05\u0632\u031A\x02\u1669\u1667\x03\x02\x02" +
		"\x02\u1669\u1668\x03\x02\x02\x02\u166A\u1673\x03\x02\x02\x02\u166B\u1672" +
		"\x05\x96L\x02\u166C\u1672\x05\u0376\u01BC\x02\u166D\u1672\x05\u03C2\u01E2" +
		"\x02\u166E\u1672\x05\u0462\u0232\x02\u166F\u1672\x05\u0468\u0235\x02\u1670" +
		"\u1672\x05\u062A\u0316\x02\u1671\u166B\x03\x02\x02\x02\u1671\u166C\x03" +
		"\x02\x02\x02\u1671\u166D\x03\x02\x02\x02\u1671\u166E\x03\x02\x02\x02\u1671" +
		"\u166F\x03\x02\x02\x02\u1671\u1670\x03\x02\x02\x02\u1672\u1675\x03\x02" +
		"\x02\x02\u1673\u1671\x03\x02\x02\x02\u1673\u1674\x03\x02\x02\x02\u1674" +
		"\u1676\x03\x02\x02\x02\u1675\u1673\x03\x02\x02\x02\u1676\u1677\x07\x04" +
		"\x02\x02\u1677\u0463\x03\x02\x02\x02\u1678\u1679\x07\u01BE\x02\x02\u1679" +
		"\u167E\x05\u0470\u0239\x02\u167A\u167D\x05\u0134\x9B\x02\u167B\u167D\x05" +
		"\u046E\u0238\x02\u167C\u167A\x03\x02\x02\x02\u167C\u167B\x03\x02\x02\x02" +
		"\u167D\u1680\x03\x02\x02\x02\u167E\u167C\x03\x02\x02\x02\u167E\u167F\x03" +
		"\x02\x02\x02\u167F\u1681\x03\x02\x02\x02\u1680\u167E\x03\x02\x02\x02\u1681" +
		"\u1682\x07\x04\x02\x02\u1682\u0465\x03\x02\x02\x02\u1683\u1684\x07\u01BF" +
		"\x02\x02\u1684\u1688\x05\u0470\u0239\x02\u1685\u1689\x05\x0E\b\x02\u1686" +
		"\u1689\x05\u048A\u0246\x02\u1687\u1689\x05\u0484\u0243\x02\u1688\u1685" +
		"\x03\x02\x02\x02\u1688\u1686\x03\x02\x02\x02\u1688\u1687\x03\x02\x02\x02" +
		"\u1689\u168B\x03\x02\x02\x02\u168A\u168C\x05\u046E\u0238\x02\u168B\u168A" +
		"\x03\x02\x02\x02\u168B\u168C\x03\x02\x02\x02\u168C\u168D\x03\x02\x02\x02" +
		"\u168D\u168E\x07\x04\x02\x02\u168E\u0467\x03\x02\x02\x02\u168F\u1692\x07" +
		"\u01C0\x02\x02\u1690\u1693\x05\u01AC\xD7\x02\u1691\u1693\x05\u038A\u01C6" +
		"\x02\u1692\u1690\x03\x02\x02\x02\u1692\u1691\x03\x02\x02\x02\u1693\u1694" +
		"\x03\x02\x02\x02\u1694\u1695\x07\x04\x02\x02\u1695\u0469\x03\x02\x02\x02" +
		"\u1696\u1697\x07\u01C1\x02\x02\u1697\u1698\x05J&\x02\u1698\u1699\x07\x04" +
		"\x02\x02\u1699\u046B\x03\x02\x02\x02\u169A\u169B\x05\u0370\u01B9\x02\u169B" +
		"\u046D\x03\x02\x02\x02\u169C\u16A1\x07\u01C2\x02\x02\u169D\u16A0\x05\u0134" +
		"\x9B\x02\u169E\u16A0\x05\u013A\x9E\x02\u169F\u169D\x03\x02\x02\x02\u169F" +
		"\u169E\x03\x02\x02\x02\u16A0\u16A3\x03\x02\x02\x02\u16A1\u169F\x03\x02" +
		"\x02\x02\u16A1\u16A2\x03\x02\x02\x02\u16A2\u16A4\x03\x02\x02\x02\u16A3" +
		"\u16A1\x03\x02\x02\x02\u16A4\u16A5\x07\x04\x02\x02\u16A5\u046F\x03\x02" +
		"\x02\x02\u16A6\u16A7\x05\u037A\u01BE\x02\u16A7\u0471\x03\x02\x02\x02\u16A8" +
		"\u16A9\x07\u01C3\x02\x02\u16A9\u16AC\x05\u0470\u0239\x02\u16AA\u16AD\x05" +
		"\u0614\u030B\x02\u16AB\u16AD\x05\u0632\u031A\x02\u16AC\u16AA\x03\x02\x02" +
		"\x02\u16AC\u16AB\x03\x02\x02\x02\u16AD\u16B3\x03\x02\x02\x02\u16AE\u16B2" +
		"\x05\x96L\x02\u16AF\u16B2\x05\u01AC\xD7\x02\u16B0\u16B2\x05\u0472\u023A" +
		"\x02\u16B1\u16AE\x03\x02\x02\x02\u16B1\u16AF\x03\x02\x02\x02\u16B1\u16B0" +
		"\x03\x02\x02\x02\u16B2\u16B5\x03\x02\x02\x02\u16B3\u16B1\x03\x02\x02\x02" +
		"\u16B3\u16B4\x03\x02\x02\x02\u16B4\u16B6\x03\x02\x02\x02\u16B5\u16B3\x03" +
		"\x02\x02\x02\u16B6\u16B7\x07\x04\x02\x02\u16B7\u0473\x03\x02\x02\x02\u16B8" +
		"\u16B9\x07\u01C4\x02\x02\u16B9\u16BA\x07\x04\x02\x02\u16BA\u0475\x03\x02" +
		"\x02\x02\u16BB\u16BC\x07\u01C5\x02\x02\u16BC\u16BD\x05\u0670\u0339\x02" +
		"\u16BD\u16BE\x05\u0676\u033C\x02\u16BE\u16BF\x07\x04\x02\x02\u16BF\u0477" +
		"\x03\x02\x02\x02\u16C0\u16C1\x05\u0412\u020A\x02\u16C1\u0479\x03\x02\x02" +
		"\x02\u16C2\u16C3\x05\u0412\u020A\x02\u16C3\u047B\x03\x02\x02\x02\u16C4" +
		"\u16C5\x07\u01C6\x02\x02\u16C5\u16C6\x05\u0624\u0313\x02\u16C6\u16C7\x07" +
		"\x04\x02\x02\u16C7\u047D\x03\x02\x02\x02\u16C8\u16C9\x07\u01C7\x02\x02" +
		"\u16C9\u16CA\x05\u0680\u0341\x02\u16CA\u16CB\x07\x04\x02\x02\u16CB\u047F" +
		"\x03\x02\x02\x02\u16CC\u16CD\x07\u01C8\x02\x02\u16CD\u16CE\x05\u0478\u023D" +
		"\x02\u16CE\u16CF\x05\u047A\u023E\x02\u16CF\u16D0\x07\x04\x02\x02\u16D0" +
		"\u0481\x03\x02\x02\x02\u16D1\u16D2\x05\u04A0\u0251\x02\u16D2\u0483\x03" +
		"\x02\x02\x02\u16D3\u16D4\x07\u01C9\x02\x02\u16D4\u16D5\x07\x04\x02\x02" +
		"\u16D5\u0485\x03\x02\x02\x02\u16D6\u16D7\x07\u01CA\x02\x02\u16D7\u16D8" +
		"\x05\u0280\u0141\x02\u16D8\u16D9\x07\x04\x02\x02\u16D9\u0487\x03\x02\x02" +
		"\x02\u16DA\u16DE\x07\u01CB\x02\x02\u16DB\u16DF\x05\x0E\b\x02\u16DC\u16DF" +
		"\x05\u048A\u0246\x02\u16DD\u16DF\x05\u0484\u0243\x02\u16DE\u16DB\x03\x02" +
		"\x02\x02\u16DE\u16DC\x03\x02\x02\x02\u16DE\u16DD\x03\x02\x02\x02\u16DF" +
		"\u16E0\x03\x02\x02\x02\u16E0\u16E1\x07\x04\x02\x02\u16E1\u0489\x03\x02" +
		"\x02\x02\u16E2\u16E6\x07\u01CC\x02\x02\u16E3\u16E5\x05\u0134\x9B\x02\u16E4" +
		"\u16E3\x03\x02\x02\x02\u16E5\u16E8\x03\x02\x02\x02\u16E6\u16E4\x03\x02" +
		"\x02\x02\u16E6\u16E7\x03\x02\x02\x02\u16E7\u16E9\x03\x02\x02\x02\u16E8" +
		"\u16E6\x03\x02\x02\x02\u16E9\u16EA\x07\x04\x02\x02\u16EA\u048B\x03\x02" +
		"\x02\x02\u16EB\u16EC\x07\u01CD\x02\x02\u16EC\u16ED\x07\x04\x02\x02\u16ED" +
		"\u048D\x03\x02\x02\x02\u16EE\u16F2\x07\u01CE\x02\x02\u16EF\u16F1\x05\u033C" +
		"\u019F\x02\u16F0\u16EF\x03\x02\x02\x02\u16F1\u16F4\x03\x02\x02\x02\u16F2" +
		"\u16F0\x03\x02\x02\x02\u16F2\u16F3\x03\x02\x02\x02\u16F3\u16F5\x03\x02" +
		"\x02\x02\u16F4\u16F2\x03\x02\x02\x02\u16F5\u16F6\x07\x04\x02\x02\u16F6" +
		"\u048F\x03\x02\x02\x02\u16F7\u16F8\x07\u01CF\x02\x02\u16F8\u16F9\x05\u0680" +
		"\u0341\x02\u16F9\u16FA\x07\x04\x02\x02\u16FA\u0491\x03\x02\x02\x02\u16FB" +
		"\u16FF\x07\u01D0\x02\x02\u16FC\u1700\x05\x0E\b\x02\u16FD\u1700\x05\u048A" +
		"\u0246\x02\u16FE\u1700\x05\u0484\u0243\x02\u16FF\u16FC\x03\x02\x02\x02" +
		"\u16FF\u16FD\x03\x02\x02\x02\u16FF\u16FE\x03\x02\x02\x02\u1700\u1701\x03" +
		"\x02\x02\x02\u1701\u1702\x07\x04\x02\x02\u1702\u0493\x03\x02\x02\x02\u1703" +
		"\u1704\x07\u01D1\x02\x02\u1704\u1705\x07\x04\x02\x02\u1705\u0495\x03\x02" +
		"\x02\x02\u1706\u1707\x07\u01D2\x02\x02\u1707\u1708\x05\u021E\u0110\x02" +
		"\u1708\u1709\x05\u0216\u010C\x02\u1709\u170A\x07\x04\x02\x02\u170A\u0497" +
		"\x03\x02\x02\x02\u170B\u170C\x07\u01D3\x02\x02\u170C\u170D\x05\u0222\u0112" +
		"\x02\u170D\u170E\x05\u0542\u02A2\x02\u170E\u170F\x07\x04\x02\x02\u170F" +
		"\u0499\x03\x02\x02\x02\u1710\u1711\x07\u01D4\x02\x02\u1711\u1712\x05\x14" +
		"\v\x02\u1712\u1713\x07\x04\x02\x02\u1713\u049B\x03\x02\x02\x02\u1714\u1715" +
		"\x07\u01D5\x02\x02\u1715\u1716\x07\x04\x02\x02\u1716\u049D\x03\x02\x02" +
		"\x02\u1717\u1718\x05\u067E\u0340\x02\u1718\u049F\x03\x02\x02\x02\u1719" +
		"\u171C\x05\u067E\u0340\x02\u171A\u171C\x05\u015E\xB0\x02\u171B\u1719\x03" +
		"\x02\x02\x02\u171B\u171A\x03\x02\x02\x02\u171C\u04A1\x03\x02\x02\x02\u171D" +
		"\u171E\x07\u01D6\x02\x02\u171E\u171F\x05\u039E\u01D0\x02\u171F\u1720\x05" +
		"\u0112\x8A\x02\u1720\u1721\x07\x04\x02\x02\u1721\u04A3\x03\x02\x02\x02" +
		"\u1722\u1723\x07\u01D7\x02\x02\u1723\u1724\x05\u039E\u01D0\x02\u1724\u1725" +
		"\x05\u0112\x8A\x02\u1725\u1726\x07\x04\x02\x02\u1726\u04A5\x03\x02\x02" +
		"\x02\u1727\u1728\x07\u01D8\x02\x02\u1728\u1729\x05\u02A4\u0153\x02\u1729" +
		"\u172A\x05\u05A2\u02D2\x02\u172A\u172B\x05\u04DE\u0270\x02\u172B\u1733" +
		"\x05\u04AC\u0257\x02\u172C\u1732\x05\x96L\x02\u172D\u1732\x05\u04A8\u0255" +
		"\x02\u172E\u1732\x05\u04AE\u0258\x02\u172F\u1732\x05\u04DC\u026F\x02\u1730" +
		"\u1732\x05\u0638\u031D\x02\u1731\u172C\x03\x02\x02\x02\u1731\u172D\x03" +
		"\x02\x02\x02\u1731\u172E\x03\x02\x02\x02\u1731\u172F\x03\x02\x02\x02\u1731" +
		"\u1730\x03\x02\x02\x02\u1732\u1735\x03\x02\x02\x02\u1733\u1731\x03\x02" +
		"\x02\x02\u1733\u1734\x03\x02\x02\x02\u1734\u1736\x03\x02\x02\x02\u1735" +
		"\u1733\x03\x02\x02\x02\u1736\u1737\x07\x04\x02\x02\u1737\u04A7\x03\x02" +
		"\x02\x02\u1738\u173B\x07\u01D9\x02\x02\u1739\u173C\x05\u04AA\u0256\x02" +
		"\u173A\u173C\x05\u054A\u02A6\x02\u173B\u1739\x03\x02\x02\x02\u173B\u173A" +
		"\x03\x02\x02\x02\u173C\u173D\x03\x02\x02\x02\u173D\u173E\x07\x04\x02\x02" +
		"\u173E\u04A9\x03\x02\x02\x02\u173F\u1746\x07\u01DA\x02\x02\u1740\u1745" +
		"\x05\x96L\x02\u1741\u1745\x05\u0198\xCD\x02\u1742\u1745\x05\u04B0\u0259" +
		"\x02\u1743\u1745\x05\u0638\u031D\x02\u1744\u1740\x03\x02\x02\x02\u1744" +
		"\u1741\x03\x02\x02\x02\u1744\u1742\x03\x02\x02\x02\u1744\u1743\x03\x02" +
		"\x02\x02\u1745\u1748\x03\x02\x02\x02\u1746\u1744\x03\x02\x02\x02\u1746" +
		"\u1747\x03\x02\x02\x02\u1747\u1749\x03\x02\x02\x02\u1748\u1746\x03\x02" +
		"\x02\x02\u1749\u174A\x07\x04\x02\x02\u174A\u04AB\x03\x02\x02\x02\u174B" +
		"\u1757\x07\u01DB\x02\x02\u174C\u1756\x05\u0430\u0219\x02\u174D\u1756\x05" +
		"\u0498\u024D\x02\u174E\u1756\x05\u04C6\u0264\x02\u174F\u1756\x05\u04E2" +
		"\u0272\x02\u1750\u1756\x05\u04EA\u0276\x02\u1751\u1756\x05\u04F2\u027A" +
		"\x02\u1752\u1756\x05\u0504\u0283\x02\u1753\u1756\x05\u050C\u0287\x02\u1754" +
		"\u1756\x05\u055E\u02B0\x02\u1755\u174C\x03\x02\x02\x02\u1755\u174D\x03" +
		"\x02\x02\x02\u1755\u174E\x03\x02\x02\x02\u1755\u174F\x03\x02\x02\x02\u1755" +
		"\u1750\x03\x02\x02\x02\u1755\u1751\x03\x02\x02\x02\u1755\u1752\x03\x02" +
		"\x02\x02\u1755\u1753\x03\x02\x02\x02\u1755\u1754\x03\x02\x02\x02\u1756" +
		"\u1759\x03\x02\x02\x02\u1757\u1755\x03\x02\x02\x02\u1757\u1758\x03\x02" +
		"\x02\x02\u1758\u175A\x03\x02\x02\x02\u1759\u1757\x03\x02\x02\x02\u175A" +
		"\u175B\x07\x04\x02\x02\u175B\u04AD\x03\x02\x02\x02\u175C\u175D\x07\u01DC" +
		"\x02\x02\u175D\u175E\x05\u02A4\u0153\x02\u175E\u175F\x05\u05A2";
	private static readonly _serializedATNSegment11: string =
		"\u02D2\x02\u175F\u1760\x05\u04DE\u0270\x02\u1760\u1768\x05\u04AC\u0257" +
		"\x02\u1761\u1767\x05\x96L\x02\u1762\u1767\x05\u04A8\u0255\x02\u1763\u1767" +
		"\x05\u04AE\u0258\x02\u1764\u1767\x05\u04DC\u026F\x02\u1765\u1767\x05\u0638" +
		"\u031D\x02\u1766\u1761\x03\x02\x02\x02\u1766\u1762\x03\x02\x02\x02\u1766" +
		"\u1763\x03\x02\x02\x02\u1766\u1764\x03\x02\x02\x02\u1766\u1765\x03\x02" +
		"\x02\x02\u1767\u176A\x03\x02\x02\x02\u1768\u1766\x03\x02\x02\x02\u1768" +
		"\u1769\x03\x02\x02\x02\u1769\u176B\x03\x02\x02\x02\u176A\u1768\x03\x02" +
		"\x02\x02\u176B\u176C\x07\x04\x02\x02\u176C\u04AF\x03\x02\x02\x02\u176D" +
		"\u176E\x07\u01DD\x02\x02\u176E\u176F\x05\u04B4\u025B\x02\u176F\u1774\x05" +
		"\u060C\u0307\x02\u1770\u1773\x05\u0466\u0234\x02\u1771\u1773\x05\u0472" +
		"\u023A\x02\u1772\u1770\x03\x02\x02\x02\u1772\u1771\x03\x02\x02\x02\u1773" +
		"\u1776\x03\x02\x02\x02\u1774\u1772\x03\x02\x02\x02\u1774\u1775\x03\x02" +
		"\x02\x02\u1775\u1777\x03\x02\x02\x02\u1776\u1774\x03\x02\x02\x02\u1777" +
		"\u1778\x07\x04\x02\x02\u1778\u04B1\x03\x02\x02\x02\u1779\u177A\x07\u01DE" +
		"\x02\x02\u177A\u177B\x05\u031A\u018E\x02\u177B\u1785\x05\u0566\u02B4\x02" +
		"\u177C\u1784\x05\x16\f\x02\u177D\u1784\x05\x96L\x02\u177E\u1784\x05\x98" +
		"M\x02\u177F\u1784\x05\u0198\xCD\x02\u1780\u1784\x05\u0464\u0233\x02\u1781" +
		"\u1784\x05\u04B0\u0259\x02\u1782\u1784\x05\u0638\u031D\x02\u1783\u177C" +
		"\x03\x02\x02\x02\u1783\u177D\x03\x02\x02\x02\u1783\u177E\x03\x02\x02\x02" +
		"\u1783\u177F\x03\x02\x02\x02\u1783\u1780\x03\x02\x02\x02\u1783\u1781\x03" +
		"\x02\x02\x02\u1783\u1782\x03\x02\x02\x02\u1784\u1787\x03\x02\x02\x02\u1785" +
		"\u1783\x03\x02\x02\x02\u1785\u1786\x03\x02\x02\x02\u1786\u1788\x03\x02" +
		"\x02\x02\u1787\u1785\x03\x02\x02\x02\u1788\u1789\x07\x04\x02\x02\u1789" +
		"\u04B3\x03\x02\x02\x02\u178A\u178B\x07\u01DF\x02\x02\u178B\u178D\x05\u031C" +
		"\u018F\x02\u178C\u178E\x05\u031E\u0190\x02\u178D\u178C\x03\x02\x02\x02" +
		"\u178D\u178E\x03\x02\x02\x02\u178E\u178F\x03\x02\x02\x02\u178F\u1790\x07" +
		"\x04\x02\x02\u1790\u04B5\x03\x02\x02\x02\u1791\u1792\x07\u01E0\x02\x02" +
		"\u1792\u1793\x05\u04BA\u025E\x02\u1793\u179A\x05\u060C\u0307\x02\u1794" +
		"\u1799\x05\u01CE\xE8\x02\u1795\u1799\x05\u0466\u0234\x02\u1796\u1799\x05" +
		"\u0472\u023A\x02\u1797\u1799\x05\u0488\u0245\x02\u1798\u1794\x03\x02\x02" +
		"\x02\u1798\u1795\x03\x02\x02\x02\u1798\u1796\x03\x02\x02\x02\u1798\u1797" +
		"\x03\x02\x02\x02\u1799\u179C\x03\x02\x02\x02\u179A\u1798\x03\x02\x02\x02" +
		"\u179A\u179B\x03\x02\x02\x02\u179B\u179D\x03\x02\x02\x02\u179C\u179A\x03" +
		"\x02\x02\x02\u179D\u179E\x07\x04\x02\x02\u179E\u04B7\x03\x02\x02\x02\u179F" +
		"\u17A0\x07\u01E1\x02\x02\u17A0\u17A1\x05\u031A\u018E\x02\u17A1\u17A2\x05" +
		"\u0566\u02B4\x02\u17A2\u17AC\x05\u0636\u031C\x02\u17A3\u17AB\x05\x16\f" +
		"\x02\u17A4\u17AB\x05\x98M\x02\u17A5\u17AB\x05\u0198\xCD\x02\u17A6\u17AB" +
		"\x05\u01CE\xE8\x02\u17A7\u17AB\x05\u0464\u0233\x02\u17A8\u17AB\x05\u0488" +
		"\u0245\x02\u17A9\u17AB\x05\u04B0\u0259\x02\u17AA\u17A3\x03\x02\x02\x02" +
		"\u17AA\u17A4\x03\x02\x02\x02\u17AA\u17A5\x03\x02\x02\x02\u17AA\u17A6\x03" +
		"\x02\x02\x02\u17AA\u17A7\x03\x02\x02\x02\u17AA\u17A8\x03\x02\x02\x02\u17AA" +
		"\u17A9\x03\x02\x02\x02\u17AB\u17AE\x03\x02\x02\x02\u17AC\u17AA\x03\x02" +
		"\x02\x02\u17AC\u17AD\x03\x02\x02\x02\u17AD\u17AF\x03\x02\x02\x02\u17AE" +
		"\u17AC\x03\x02\x02\x02\u17AF\u17B0\x07\x04\x02\x02\u17B0\u04B9\x03\x02" +
		"\x02\x02\u17B1\u17B2\x07\u01E2\x02\x02\u17B2\u17B4\x05\u031C\u018F\x02" +
		"\u17B3\u17B5\x05\u031E\u0190\x02\u17B4\u17B3\x03\x02\x02\x02\u17B4\u17B5" +
		"\x03\x02\x02\x02\u17B5\u17B6\x03\x02\x02\x02\u17B6\u17B7\x07\x04\x02\x02" +
		"\u17B7\u04BB\x03\x02\x02\x02\u17B8\u17B9\x07\u01E3\x02\x02\u17B9\u17BA" +
		"\x05\u0238\u011D\x02\u17BA\u17BB\x05\u01D6\xEC\x02\u17BB\u17BC\x05\u04BE" +
		"\u0260\x02\u17BC\u17BD\x05\u04C0\u0261\x02\u17BD\u17BE\x07\x04\x02\x02" +
		"\u17BE\u04BD\x03\x02\x02\x02\u17BF\u17C1\x07\u01E4\x02\x02\u17C0\u17C2" +
		"\x05\u04B6\u025C\x02\u17C1\u17C0\x03\x02\x02\x02\u17C1\u17C2\x03\x02\x02" +
		"\x02\u17C2\u17C3\x03\x02\x02\x02\u17C3\u17C4\x07\x04\x02\x02\u17C4\u04BF" +
		"\x03\x02\x02\x02\u17C5\u17DA\x07\u01E5\x02\x02\u17C6\u17D9\x05d3\x02\u17C7" +
		"\u17D9\x05\x8CG\x02\u17C8\u17D9\x05\x96L\x02\u17C9\u17D9\x05\x98M\x02" +
		"\u17CA\u17D9\x05\u0464\u0233\x02\u17CB\u17D9\x05\u04A6\u0254\x02\u17CC" +
		"\u17D9\x05\u04BC\u025F\x02\u17CD\u17D9\x05\u04C4\u0263\x02\u17CE\u17D9" +
		"\x05\u04D2\u026A\x02\u17CF\u17D9\x05\u04D8\u026D\x02\u17D0\u17D9\x05\u04F0" +
		"\u0279\x02\u17D1\u17D9\x05\u04FA\u027E\x02\u17D2\u17D9\x05\u0502\u0282" +
		"\x02\u17D3\u17D9\x05\u050A\u0286\x02\u17D4\u17D9\x05\u0518\u028D\x02\u17D5" +
		"\u17D9\x05\u0540\u02A1\x02\u17D6\u17D9\x05\u0638\u031D\x02\u17D7\u17D9" +
		"\x05\u0654\u032B\x02\u17D8\u17C6\x03\x02\x02\x02\u17D8\u17C7\x03\x02\x02" +
		"\x02\u17D8\u17C8\x03\x02\x02\x02\u17D8\u17C9\x03\x02\x02\x02\u17D8\u17CA" +
		"\x03\x02\x02\x02\u17D8\u17CB\x03\x02\x02\x02\u17D8\u17CC\x03\x02\x02\x02" +
		"\u17D8\u17CD\x03\x02\x02\x02\u17D8\u17CE\x03\x02\x02\x02\u17D8\u17CF\x03" +
		"\x02\x02\x02\u17D8\u17D0\x03\x02\x02\x02\u17D8\u17D1\x03\x02\x02\x02\u17D8" +
		"\u17D2\x03\x02\x02\x02\u17D8\u17D3\x03\x02\x02\x02\u17D8\u17D4\x03\x02" +
		"\x02\x02\u17D8\u17D5\x03\x02\x02\x02\u17D8\u17D6\x03\x02\x02\x02\u17D8" +
		"\u17D7\x03\x02\x02\x02\u17D9\u17DC\x03\x02\x02\x02\u17DA\u17D8\x03\x02" +
		"\x02\x02\u17DA\u17DB\x03\x02\x02\x02\u17DB\u17DD\x03\x02\x02\x02\u17DC" +
		"\u17DA\x03\x02\x02\x02\u17DD\u17DE\x07\x04\x02\x02\u17DE\u04C1\x03\x02" +
		"\x02\x02\u17DF\u17EF\x07\u01E6\x02\x02\u17E0\u17EE\x05\u022A\u0116\x02" +
		"\u17E1\u17EE\x05\u051C\u028F\x02\u17E2\u17EE\x05\u0522\u0292\x02\u17E3" +
		"\u17EE\x05\u0526\u0294\x02\u17E4\u17EE\x05\u0528\u0295\x02\u17E5\u17EE" +
		"\x05\u052A\u0296\x02\u17E6\u17EE\x05\u052E\u0298\x02\u17E7\u17EE\x05\u0530" +
		"\u0299\x02\u17E8\u17EE\x05\u0532\u029A\x02\u17E9\u17EE\x05\u0534\u029B" +
		"\x02\u17EA\u17EE\x05\u0536\u029C\x02\u17EB\u17EE\x05\u0538\u029D\x02\u17EC" +
		"\u17EE\x05\u053C\u029F\x02\u17ED\u17E0\x03\x02\x02\x02\u17ED\u17E1\x03" +
		"\x02\x02\x02\u17ED\u17E2\x03\x02\x02\x02\u17ED\u17E3\x03\x02\x02\x02\u17ED" +
		"\u17E4\x03\x02\x02\x02\u17ED\u17E5\x03\x02\x02\x02\u17ED\u17E6\x03\x02" +
		"\x02\x02\u17ED\u17E7\x03\x02\x02\x02\u17ED\u17E8\x03\x02\x02\x02\u17ED" +
		"\u17E9\x03\x02\x02\x02\u17ED\u17EA\x03\x02\x02\x02\u17ED\u17EB\x03\x02" +
		"\x02\x02\u17ED\u17EC\x03\x02\x02\x02\u17EE\u17F1\x03\x02\x02\x02\u17EF" +
		"\u17ED\x03\x02\x02\x02\u17EF\u17F0\x03\x02\x02\x02\u17F0\u17F2\x03\x02" +
		"\x02\x02\u17F1\u17EF\x03\x02\x02\x02\u17F2\u17F3\x07\x04\x02\x02\u17F3" +
		"\u04C3\x03\x02\x02\x02\u17F4\u17F5\x07\u01E7\x02\x02\u17F5\u17F6\x05\u0238" +
		"\u011D\x02\u17F6\u17F7\x05\u04CA\u0266\x02\u17F7\u17F8\x05\u020A\u0106" +
		"\x02\u17F8\u1801\x05\u060C\u0307\x02\u17F9\u1800\x05\u0204\u0103\x02\u17FA" +
		"\u1800\x05\u0208\u0105\x02\u17FB\u1800\x05\u023A\u011E\x02\u17FC\u1800" +
		"\x05\u0376\u01BC\x02\u17FD\u1800\x05\u0466\u0234\x02\u17FE\u1800\x05\u0472" +
		"\u023A\x02\u17FF\u17F9\x03\x02\x02\x02\u17FF\u17FA\x03\x02\x02\x02\u17FF" +
		"\u17FB\x03\x02\x02\x02\u17FF\u17FC\x03\x02\x02\x02\u17FF\u17FD\x03\x02" +
		"\x02\x02\u17FF\u17FE\x03\x02\x02\x02\u1800\u1803\x03\x02\x02\x02\u1801" +
		"\u17FF\x03\x02\x02\x02\u1801\u1802\x03\x02\x02\x02\u1802\u1804\x03\x02" +
		"\x02\x02\u1803\u1801\x03\x02\x02\x02\u1804\u1805\x07\x04\x02\x02\u1805" +
		"\u04C5\x03\x02\x02\x02\u1806\u1807\x07\u01E8\x02\x02\u1807\u1808\x05\u023C" +
		"\u011F\x02\u1808\u1809\x07\x04\x02\x02\u1809\u04C7\x03\x02\x02\x02\u180A" +
		"\u180B\x07\u01E9\x02\x02\u180B\u180C\x05\u031A\u018E\x02\u180C\u180E\x05" +
		"\u0566\u02B4\x02\u180D\u180F\x05\u0216\u010C\x02\u180E\u180D\x03\x02\x02" +
		"\x02\u180E\u180F\x03\x02\x02\x02\u180F\u181A\x03\x02\x02\x02\u1810\u1819" +
		"\x05\x16\f\x02\u1811\u1819\x05\x98M\x02\u1812\u1819\x05\u0198\xCD\x02" +
		"\u1813\u1819\x05\u0204\u0103\x02\u1814\u1819\x05\u023A\u011E\x02\u1815" +
		"\u1819\x05\u0464\u0233\x02\u1816\u1819\x05\u04B0\u0259\x02\u1817\u1819" +
		"\x05\u04C2\u0262\x02\u1818\u1810\x03\x02\x02\x02\u1818\u1811\x03\x02\x02" +
		"\x02\u1818\u1812\x03\x02\x02\x02\u1818\u1813\x03\x02\x02\x02\u1818\u1814" +
		"\x03\x02\x02\x02\u1818\u1815\x03\x02\x02\x02\u1818\u1816\x03\x02\x02\x02" +
		"\u1818\u1817\x03\x02\x02\x02\u1819\u181C\x03\x02\x02\x02\u181A\u1818\x03" +
		"\x02\x02\x02\u181A\u181B\x03\x02\x02\x02\u181B\u181E\x03\x02\x02\x02\u181C" +
		"\u181A\x03\x02\x02\x02\u181D\u181F\x05\u0216\u010C\x02\u181E\u181D\x03" +
		"\x02\x02\x02\u181E\u181F\x03\x02\x02\x02\u181F\u1820\x03\x02\x02\x02\u1820" +
		"\u1821\x07\x04\x02\x02\u1821\u04C9\x03\x02\x02\x02\u1822\u1823\x07\u01EA" +
		"\x02\x02\u1823\u1825\x05\u031C\u018F\x02\u1824\u1826\x05\u031E\u0190\x02" +
		"\u1825\u1824\x03\x02\x02\x02\u1825\u1826\x03\x02\x02\x02\u1826\u1827\x03" +
		"\x02\x02\x02\u1827\u1828\x07\x04\x02\x02\u1828\u04CB\x03\x02\x02\x02\u1829" +
		"\u182A\x07\u01EB\x02\x02\u182A\u182B\x05\u04D0\u0269\x02\u182B\u1831\x05" +
		"\u060C\u0307\x02\u182C\u1830\x05\xAAV\x02\u182D\u1830\x05\u0466\u0234" +
		"\x02\u182E\u1830\x05\u0472\u023A\x02\u182F\u182C\x03\x02\x02\x02\u182F" +
		"\u182D\x03\x02\x02\x02\u182F\u182E\x03\x02\x02\x02\u1830\u1833\x03\x02" +
		"\x02\x02\u1831\u182F\x03\x02\x02\x02\u1831\u1832\x03\x02\x02\x02\u1832" +
		"\u1834\x03\x02\x02\x02\u1833\u1831\x03\x02\x02\x02\u1834\u1835\x07\x04" +
		"\x02\x02\u1835\u04CD\x03\x02\x02\x02\u1836\u1837\x07\u01EC\x02\x02\u1837" +
		"\u1838\x05\u031A\u018E\x02\u1838\u1839\x05\u0566\u02B4\x02\u1839\u1842" +
		"\x05\u0636\u031C\x02\u183A\u1841\x05\x16\f\x02\u183B\u1841\x05\x98M\x02" +
		"\u183C\u1841\x05\xAAV\x02\u183D\u1841\x05\u0198\xCD\x02\u183E\u1841\x05" +
		"\u0464\u0233\x02\u183F\u1841\x05\u04B0\u0259\x02\u1840\u183A\x03\x02\x02" +
		"\x02\u1840\u183B\x03\x02\x02\x02\u1840\u183C\x03\x02\x02\x02\u1840\u183D" +
		"\x03\x02\x02\x02\u1840\u183E\x03\x02\x02\x02\u1840\u183F\x03\x02\x02\x02" +
		"\u1841\u1844\x03\x02\x02\x02\u1842\u1840\x03\x02\x02\x02\u1842\u1843\x03" +
		"\x02\x02\x02\u1843\u1845\x03\x02\x02\x02\u1844\u1842\x03\x02\x02\x02\u1845" +
		"\u1846\x07\x04\x02\x02\u1846\u04CF\x03\x02\x02\x02\u1847\u1848\x07\u01ED" +
		"\x02\x02\u1848\u184A\x05\u031C\u018F\x02\u1849\u184B\x05\u031E\u0190\x02" +
		"\u184A\u1849\x03\x02\x02\x02\u184A\u184B\x03\x02\x02\x02\u184B\u184C\x03" +
		"\x02\x02\x02\u184C\u184D\x07\x04\x02\x02\u184D\u04D1\x03\x02\x02\x02\u184E" +
		"\u184F\x07\u01EE\x02\x02\u184F\u1850\x05\u0238\u011D\x02\u1850\u1851\x05" +
		"\u0230\u0119\x02\u1851\u1852\x05\u04D4\u026B\x02\u1852\u1853\x05\u04C0" +
		"\u0261\x02\u1853\u1854\x07\x04\x02\x02\u1854\u04D3\x03\x02\x02\x02\u1855" +
		"\u1857\x07\u01EF\x02\x02\u1856\u1858\x05\u04CC\u0267\x02\u1857\u1856\x03" +
		"\x02\x02\x02\u1857\u1858\x03\x02\x02\x02\u1858\u1859\x03\x02\x02\x02\u1859" +
		"\u185A\x07\x04\x02\x02\u185A\u04D5\x03\x02\x02\x02\u185B\u1860\x07\u01F0" +
		"\x02\x02\u185C\u185F\x05\u03C4\u01E3\x02\u185D\u185F\x05\u0608\u0305\x02" +
		"\u185E\u185C\x03\x02\x02\x02\u185E\u185D\x03\x02\x02\x02\u185F\u1862\x03" +
		"\x02\x02\x02\u1860\u185E\x03\x02\x02\x02\u1860\u1861\x03\x02\x02\x02\u1861" +
		"\u1863\x03\x02\x02\x02\u1862\u1860\x03\x02\x02\x02\u1863\u1864\x07\x04" +
		"\x02\x02\u1864\u04D7\x03\x02\x02\x02\u1865\u1866\x07\u01F1\x02\x02\u1866" +
		"\u1867\x05\u0238\u011D\x02\u1867\u1868\x05\u0272\u013A\x02\u1868\u1869" +
		"\x05\u0564\u02B3\x02\u1869\u187D\x05\u060C\u0307\x02\u186A\u187C\x05b" +
		"2\x02\u186B\u187C\x05f4\x02\u186C\u187C\x05\x8EH\x02\u186D\u187C\x05\u011C" +
		"\x8F\x02\u186E\u187C\x05\u023A\u011E\x02\u186F\u187C\x05\u0262\u0132\x02" +
		"\u1870\u187C\x05\u0266\u0134\x02\u1871\u187C\x05\u026A\u0136\x02\u1872" +
		"\u187C\x05\u026E\u0138\x02\u1873\u187C\x05\u0276\u013C\x02\u1874\u187C" +
		"\x05\u0376\u01BC\x02\u1875\u187C\x05\u03CE\u01E8\x02\u1876\u187C\x05\u03F0" +
		"\u01F9\x02\u1877\u187C\x05\u0466\u0234\x02\u1878\u187C\x05\u0472\u023A" +
		"\x02\u1879\u187C\x05\u05FE\u0300\x02\u187A\u187C\x05\u0650\u0329\x02\u187B" +
		"\u186A\x03\x02\x02\x02\u187B\u186B\x03\x02\x02\x02\u187B\u186C\x03\x02" +
		"\x02\x02\u187B\u186D\x03\x02\x02\x02\u187B\u186E\x03\x02\x02\x02\u187B" +
		"\u186F\x03\x02\x02\x02\u187B\u1870\x03\x02\x02\x02\u187B\u1871\x03\x02" +
		"\x02\x02\u187B\u1872\x03\x02\x02\x02\u187B\u1873\x03\x02\x02\x02\u187B" +
		"\u1874\x03\x02\x02\x02\u187B\u1875\x03\x02\x02\x02\u187B\u1876\x03\x02" +
		"\x02\x02\u187B\u1877\x03\x02\x02\x02\u187B\u1878\x03\x02\x02\x02\u187B" +
		"\u1879\x03\x02\x02\x02\u187B\u187A\x03\x02\x02\x02\u187C\u187F\x03\x02" +
		"\x02\x02\u187D\u187B\x03\x02\x02\x02\u187D\u187E\x03\x02\x02\x02\u187E" +
		"\u1880\x03\x02\x02\x02\u187F\u187D\x03\x02\x02\x02\u1880\u1881\x07\x04" +
		"\x02\x02\u1881\u04D9\x03\x02\x02\x02\u1882\u1883\x07\u01F2\x02\x02\u1883" +
		"\u1884\x05\u023C\u011F\x02\u1884\u1885\x07\x04\x02\x02\u1885\u04DB\x03" +
		"\x02\x02\x02\u1886\u188F\x07\u01F3\x02\x02\u1887\u188E\x05\xCEh\x02\u1888" +
		"\u188E\x05\xEAv\x02\u1889\u188E\x05\u0296\u014C\x02\u188A\u188E\x05\u029A" +
		"\u014E\x02\u188B\u188E\x05\u02A6\u0154\x02\u188C\u188E\x05\u02AA\u0156" +
		"\x02\u188D\u1887\x03\x02\x02\x02\u188D\u1888\x03\x02\x02\x02\u188D\u1889" +
		"\x03\x02\x02\x02\u188D\u188A\x03\x02\x02\x02\u188D\u188B\x03\x02\x02\x02" +
		"\u188D\u188C\x03\x02\x02\x02\u188E\u1891\x03\x02\x02\x02\u188F\u188D\x03" +
		"\x02\x02\x02\u188F\u1890\x03\x02\x02\x02\u1890\u1892\x03\x02\x02\x02\u1891" +
		"\u188F\x03\x02\x02\x02\u1892\u1893\x07\x04\x02\x02\u1893\u04DD\x03\x02" +
		"\x02\x02\u1894\u189F\x07\u01F4\x02\x02\u1895\u189E\x05\xE8u\x02\u1896" +
		"\u189E\x05\u0142\xA2\x02\u1897\u189E\x05\u0298\u014D\x02\u1898\u189E\x05" +
		"\u0376\u01BC\x02\u1899\u189E\x05\u0462\u0232\x02\u189A\u189E\x05\u04E0" +
		"\u0271\x02\u189B\u189E\x05\u04E8\u0275\x02\u189C\u189E\x05\u0570\u02B9" +
		"\x02\u189D\u1895\x03\x02\x02\x02\u189D\u1896\x03\x02\x02\x02\u189D\u1897" +
		"\x03\x02\x02\x02\u189D\u1898\x03\x02\x02\x02\u189D\u1899\x03\x02\x02\x02" +
		"\u189D\u189A\x03\x02\x02\x02\u189D\u189B\x03\x02\x02\x02\u189D\u189C\x03" +
		"\x02\x02\x02\u189E\u18A1\x03\x02\x02\x02\u189F\u189D\x03\x02\x02\x02\u189F" +
		"\u18A0\x03\x02\x02\x02\u18A0\u18A2\x03\x02\x02\x02\u18A1\u189F\x03\x02" +
		"\x02\x02\u18A2\u18A3\x07\x04\x02\x02\u18A3\u04DF\x03\x02\x02\x02\u18A4" +
		"\u18A5\x07\u01F5\x02\x02\u18A5\u18A6\x05\u0238\u011D\x02\u18A6\u18A7\x05" +
		"\u04E6\u0274\x02\u18A7\u18AE\x05\u060C\u0307\x02\u18A8\u18AD\x05\u023A" +
		"\u011E\x02\u18A9\u18AD\x05\u0376\u01BC\x02\u18AA\u18AD\x05\u0466\u0234" +
		"\x02\u18AB\u18AD\x05\u0472\u023A\x02\u18AC\u18A8\x03\x02\x02\x02\u18AC" +
		"\u18A9\x03\x02\x02\x02\u18AC\u18AA\x03\x02\x02\x02\u18AC\u18AB\x03\x02" +
		"\x02\x02\u18AD\u18B0\x03\x02\x02\x02\u18AE\u18AC\x03\x02\x02\x02\u18AE" +
		"\u18AF\x03\x02\x02\x02\u18AF\u18B1\x03\x02\x02\x02\u18B0\u18AE\x03\x02" +
		"\x02\x02\u18B1\u18B2\x07\x04\x02\x02\u18B2\u04E1\x03\x02\x02\x02\u18B3" +
		"\u18B4\x07\u01F6\x02\x02\u18B4\u18B5\x05\u023C\u011F\x02\u18B5\u18B6\x07" +
		"\x04\x02\x02\u18B6\u04E3\x03\x02\x02\x02\u18B7\u18B8\x07\u01F7\x02\x02" +
		"\u18B8\u18B9\x05\u031A\u018E\x02\u18B9\u18BA\x05\u0566\u02B4\x02\u18BA" +
		"\u18C2\x05\u0216\u010C\x02\u18BB\u18C1\x05\x98M\x02\u18BC\u18C1\x05\u0198" +
		"\xCD\x02\u18BD\u18C1\x05\u023A\u011E\x02\u18BE\u18C1\x05\u0464\u0233\x02" +
		"\u18BF\u18C1\x05\u04B0\u0259\x02\u18C0\u18BB\x03\x02\x02\x02\u18C0\u18BC" +
		"\x03\x02\x02\x02\u18C0\u18BD\x03\x02\x02\x02\u18C0\u18BE\x03\x02\x02\x02" +
		"\u18C0\u18BF\x03\x02\x02\x02\u18C1\u18C4\x03\x02\x02\x02\u18C2\u18C0\x03" +
		"\x02\x02\x02\u18C2\u18C3\x03\x02\x02\x02\u18C3\u18C5\x03\x02\x02\x02\u18C4" +
		"\u18C2\x03\x02\x02\x02\u18C5\u18C6\x07\x04\x02\x02\u18C6\u04E5\x03\x02" +
		"\x02\x02\u18C7\u18C8\x07\u01F8\x02\x02\u18C8\u18CA\x05\u031C\u018F\x02" +
		"\u18C9\u18CB\x05\u031E\u0190\x02\u18CA\u18C9\x03\x02\x02\x02\u18CA\u18CB" +
		"\x03\x02\x02\x02\u18CB\u18CC\x03\x02\x02\x02\u18CC\u18CD\x07\x04\x02\x02" +
		"\u18CD\u04E7\x03\x02\x02\x02\u18CE\u18CF\x07\u01F9\x02\x02\u18CF\u18D0" +
		"\x05\u0238\u011D\x02\u18D0\u18D1\x05\u04EE\u0278\x02\u18D1\u18D8\x05\u060C" +
		"\u0307\x02\u18D2\u18D7\x05\u023A\u011E\x02\u18D3\u18D7\x05\u0376\u01BC" +
		"\x02\u18D4\u18D7\x05\u0466\u0234\x02\u18D5\u18D7\x05\u0472\u023A\x02\u18D6" +
		"\u18D2\x03\x02\x02\x02\u18D6\u18D3\x03\x02\x02\x02\u18D6\u18D4\x03\x02" +
		"\x02\x02\u18D6\u18D5\x03\x02\x02\x02\u18D7\u18DA\x03\x02\x02\x02\u18D8" +
		"\u18D6\x03\x02\x02\x02\u18D8\u18D9\x03\x02\x02\x02\u18D9\u18DB\x03\x02" +
		"\x02\x02\u18DA\u18D8\x03\x02\x02\x02\u18DB\u18DC\x07\x04\x02\x02\u18DC" +
		"\u04E9\x03\x02\x02\x02\u18DD\u18DE\x07\u01FA\x02\x02\u18DE\u18DF\x05\u023C" +
		"\u011F\x02\u18DF\u18E0\x07\x04\x02\x02\u18E0\u04EB\x03\x02\x02\x02\u18E1" +
		"\u18E2\x07\u01FB\x02\x02\u18E2\u18E3\x05\u031A\u018E\x02\u18E3\u18E4\x05" +
		"\u0566\u02B4\x02\u18E4\u18EC\x05\u0216\u010C\x02\u18E5\u18EB\x05\x98M" +
		"\x02\u18E6\u18EB\x05\u0198\xCD\x02\u18E7\u18EB\x05\u023A\u011E\x02\u18E8" +
		"\u18EB\x05\u0464\u0233\x02\u18E9\u18EB\x05\u04B0\u0259\x02\u18EA\u18E5" +
		"\x03\x02\x02\x02\u18EA\u18E6\x03\x02\x02\x02\u18EA\u18E7\x03\x02\x02\x02" +
		"\u18EA\u18E8\x03\x02\x02\x02\u18EA\u18E9\x03\x02\x02\x02\u18EB\u18EE\x03" +
		"\x02\x02\x02\u18EC\u18EA\x03\x02\x02\x02\u18EC\u18ED\x03\x02\x02\x02\u18ED" +
		"\u18EF\x03\x02\x02\x02\u18EE\u18EC\x03\x02\x02\x02\u18EF\u18F0\x07\x04" +
		"\x02\x02\u18F0\u04ED\x03\x02\x02\x02\u18F1\u18F2\x07\u01FC\x02\x02\u18F2" +
		"\u18F4\x05\u031C\u018F\x02\u18F3\u18F5\x05\u031E\u0190\x02\u18F4\u18F3" +
		"\x03\x02\x02\x02\u18F4\u18F5\x03\x02\x02\x02\u18F5\u18F6\x03\x02\x02\x02" +
		"\u18F6\u18F7\x07\x04\x02\x02\u18F7\u04EF\x03\x02\x02\x02\u18F8\u18F9\x07" +
		"\u01FD\x02\x02\u18F9\u18FA\x05\u0238\u011D\x02\u18FA\u18FD\x05\u04F6\u027C" +
		"\x02\u18FB\u18FE\x05\u0452\u022A\x02\u18FC\u18FE\x05\u032A\u0196\x02\u18FD" +
		"\u18FB\x03\x02\x02\x02\u18FD\u18FC\x03\x02\x02\x02\u18FE\u18FF\x03\x02" +
		"\x02\x02\u18FF\u1907\x05\u060C\u0307\x02\u1900\u1906\x05\u023A\u011E\x02" +
		"\u1901\u1906\x05\u0376\u01BC\x02\u1902\u1906\x05\u041A\u020E\x02\u1903" +
		"\u1906\x05\u0466\u0234\x02\u1904\u1906\x05\u0472\u023A\x02\u1905\u1900" +
		"\x03\x02\x02\x02\u1905\u1901\x03\x02\x02\x02\u1905\u1902\x03\x02\x02\x02" +
		"\u1905\u1903\x03\x02\x02\x02\u1905\u1904\x03\x02\x02\x02\u1906\u1909\x03" +
		"\x02\x02\x02\u1907\u1905\x03\x02\x02\x02\u1907\u1908\x03\x02\x02\x02\u1908" +
		"\u190A\x03\x02\x02\x02\u1909\u1907\x03\x02\x02\x02\u190A\u190B\x07\x04" +
		"\x02\x02\u190B\u04F1\x03\x02\x02\x02\u190C\u190D\x07\u01FE\x02\x02\u190D" +
		"\u190E\x05\u023C\u011F\x02\u190E\u190F\x07\x04\x02\x02\u190F\u04F3\x03" +
		"\x02\x02\x02\u1910\u1911\x07\u01FF\x02\x02\u1911\u1912\x05\u031A\u018E" +
		"\x02\u1912\u1913\x05\u0566\u02B4\x02\u1913\u1914\x05\u0216\u010C\x02\u1914" +
		"\u191F\x05\u042A\u0216\x02\u1915\u191E\x05\x16\f\x02\u1916\u191E\x05\x98" +
		"M\x02\u1917\u191E\x05\u0198\xCD\x02\u1918\u191E\x05\u023A\u011E\x02\u1919" +
		"\u191E\x05\u041A\u020E\x02\u191A\u191E\x05\u0464\u0233\x02\u191B\u191E" +
		"\x05\u04B0\u0259\x02\u191C\u191E\x05\u053A\u029E\x02\u191D\u1915\x03\x02" +
		"\x02\x02\u191D\u1916\x03\x02\x02\x02\u191D\u1917\x03\x02\x02\x02\u191D" +
		"\u1918\x03\x02\x02\x02\u191D\u1919\x03\x02\x02\x02\u191D\u191A\x03\x02" +
		"\x02\x02\u191D\u191B\x03\x02\x02\x02\u191D\u191C\x03\x02\x02\x02\u191E" +
		"\u1921\x03\x02\x02\x02\u191F\u191D\x03\x02\x02\x02\u191F\u1920\x03\x02" +
		"\x02\x02\u1920\u1922\x03\x02\x02\x02\u1921\u191F\x03\x02\x02\x02\u1922" +
		"\u1923\x07\x04\x02\x02\u1923\u04F5\x03\x02\x02\x02\u1924\u1925\x07\u0200" +
		"\x02\x02\u1925\u1927\x05\u031C\u018F\x02\u1926\u1928\x05\u031E\u0190\x02" +
		"\u1927\u1926\x03\x02\x02\x02\u1927\u1928\x03\x02\x02\x02\u1928\u1929\x03" +
		"\x02\x02\x02\u1929\u192A\x07\x04\x02\x02\u192A\u04F7\x03\x02\x02\x02\u192B" +
		"\u192C\x07\u0201\x02\x02\u192C\u192F\x05\u0588\u02C5\x02\u192D\u1930\x05" +
		"\u021A\u010E\x02\u192E\u1930\x05\u0382\u01C2\x02\u192F\u192D\x03\x02\x02" +
		"\x02\u192F\u192E\x03\x02\x02\x02\u1930\u1932\x03\x02\x02\x02\u1931\u1933" +
		"\x05\u0384\u01C3\x02\u1932\u1931\x03\x02\x02\x02\u1932\u1933\x03\x02\x02" +
		"\x02\u1933\u1934\x03\x02\x02\x02\u1934\u1935\x07\x04\x02\x02\u1935\u04F9" +
		"\x03\x02\x02\x02\u1936\u1937\x07\u0202\x02\x02\u1937\u1938\x05\u02A4\u0153" +
		"\x02\u1938\u1939\x05\u05B2\u02DA\x02\u1939\u193A\x05\u04DE\u0270\x02\u193A" +
		"\u1941\x05\u0500\u0281\x02\u193B\u1940\x05\x96L\x02\u193C\u1940\x05\u04DC" +
		"\u026F\x02\u193D\u1940\x05\u04FC\u027F\x02\u193E\u1940\x05\u0638\u031D" +
		"\x02\u193F\u193B\x03\x02\x02\x02\u193F\u193C\x03\x02\x02\x02\u193F\u193D" +
		"\x03\x02\x02\x02\u193F\u193E\x03\x02\x02\x02\u1940\u1943\x03\x02\x02\x02" +
		"\u1941\u193F\x03\x02\x02\x02\u1941\u1942\x03\x02\x02\x02\u1942\u1944\x03" +
		"\x02\x02\x02\u1943\u1941\x03\x02\x02\x02\u1944\u1945\x07\x04\x02\x02\u1945" +
		"\u04FB\x03\x02\x02\x02\u1946\u1949\x07\u0203\x02\x02\u1947\u194A\x05\u04FE" +
		"\u0280\x02\u1948\u194A\x05\u0550\u02A9\x02\u1949\u1947\x03\x02\x02\x02" +
		"\u1949\u1948\x03\x02\x02\x02\u194A\u194B\x03\x02\x02\x02\u194B\u194C\x07" +
		"\x04\x02\x02\u194C\u04FD\x03\x02\x02\x02\u194D\u1954\x07\u0204\x02\x02" +
		"\u194E\u1953\x05\x96L\x02\u194F\u1953\x05\u0198\xCD\x02\u1950\u1953\x05" +
		"\u04B0\u0259\x02\u1951\u1953\x05\u0638\u031D\x02\u1952\u194E\x03\x02\x02" +
		"\x02\u1952\u194F\x03\x02\x02\x02\u1952\u1950\x03\x02\x02\x02\u1952\u1951" +
		"\x03\x02\x02\x02\u1953\u1956\x03\x02\x02\x02\u1954\u1952\x03\x02\x02\x02" +
		"\u1954\u1955\x03\x02\x02\x02\u1955\u1957\x03\x02\x02\x02\u1956\u1954\x03" +
		"\x02\x02\x02\u1957\u1958\x07\x04\x02\x02\u1958\u04FF\x03\x02\x02\x02\u1959" +
		"\u195C\x07\u0205\x02\x02\u195A\u195D\x05\u0430\u0219\x02\u195B\u195D\x05" +
		"\u02C4\u0163\x02\u195C\u195A\x03\x02\x02\x02\u195C\u195B\x03\x02\x02\x02" +
		"\u195C\u195D\x03\x02\x02\x02\u195D\u1968\x03\x02\x02\x02\u195E\u1967\x05" +
		"\u0498\u024D\x02\u195F\u1967\x05\u04C6\u0264\x02\u1960\u1967\x05\u04E2" +
		"\u0272\x02\u1961\u1967\x05\u04EA\u0276\x02\u1962\u1967\x05\u04F2\u027A" +
		"\x02\u1963\u1967\x05\u0504\u0283\x02\u1964\u1967\x05\u050C\u0287\x02\u1965" +
		"\u1967\x05\u055E\u02B0\x02\u1966\u195E\x03\x02\x02\x02\u1966\u195F\x03" +
		"\x02\x02\x02\u1966\u1960\x03\x02\x02\x02\u1966\u1961\x03\x02\x02\x02\u1966" +
		"\u1962\x03\x02\x02\x02\u1966\u1963\x03\x02\x02\x02\u1966\u1964\x03\x02" +
		"\x02\x02\u1966\u1965\x03\x02\x02\x02\u1967\u196A\x03\x02\x02\x02\u1968" +
		"\u1966\x03\x02\x02\x02\u1968\u1969\x03\x02\x02\x02\u1969\u196D\x03\x02" +
		"\x02\x02\u196A\u1968\x03\x02\x02\x02\u196B\u196E\x05\u0430\u0219\x02\u196C" +
		"\u196E\x05\u02C4\u0163\x02\u196D\u196B\x03\x02\x02\x02\u196D\u196C\x03" +
		"\x02\x02\x02\u196D\u196E\x03\x02\x02\x02\u196E\u1979\x03\x02\x02\x02\u196F" +
		"\u1978\x05\u0498\u024D\x02\u1970\u1978\x05\u04C6\u0264\x02\u1971\u1978" +
		"\x05\u04E2\u0272\x02\u1972\u1978\x05\u04EA\u0276\x02\u1973\u1978\x05\u04F2" +
		"\u027A\x02\u1974\u1978\x05\u0504\u0283\x02\u1975\u1978\x05\u050C\u0287" +
		"\x02\u1976\u1978\x05\u055E\u02B0\x02\u1977\u196F\x03\x02\x02\x02\u1977" +
		"\u1970\x03\x02\x02\x02\u1977\u1971\x03\x02\x02\x02\u1977\u1972\x03\x02" +
		"\x02\x02\u1977\u1973\x03\x02\x02\x02\u1977\u1974\x03\x02\x02\x02\u1977" +
		"\u1975\x03\x02\x02\x02\u1977\u1976\x03\x02\x02\x02\u1978\u197B\x03\x02" +
		"\x02\x02\u1979\u1977\x03\x02\x02\x02\u1979\u197A\x03\x02\x02\x02\u197A" +
		"\u197C\x03\x02\x02\x02\u197B\u1979\x03\x02\x02\x02\u197C\u197D\x07\x04" +
		"\x02\x02\u197D\u0501\x03\x02\x02\x02\u197E\u197F\x07\u0206\x02\x02\u197F" +
		"\u1980\x05\u0238\u011D\x02\u1980\u1981\x05\u0508\u0285\x02\u1981\u198B" +
		"\x05\u060C\u0307\x02\u1982\u198A\x05 \x11\x02\u1983\u198A\x05\u023A\u011E" +
		"\x02\u1984\u198A\x05\u0376\u01BC\x02\u1985\u198A\x05\u0462\u0232\x02\u1986" +
		"\u198A\x05\u0464\u0233\x02\u1987\u198A\x05\u0466\u0234\x02\u1988\u198A" +
		"\x05\u0472\u023A\x02\u1989\u1982\x03\x02\x02\x02\u1989\u1983\x03\x02\x02" +
		"\x02\u1989\u1984\x03\x02\x02\x02\u1989\u1985\x03\x02\x02\x02\u1989\u1986" +
		"\x03\x02\x02\x02\u1989\u1987\x03\x02\x02\x02\u1989\u1988\x03\x02\x02\x02" +
		"\u198A\u198D\x03\x02\x02\x02\u198B\u1989\x03\x02\x02\x02\u198B\u198C\x03" +
		"\x02\x02\x02\u198C\u198E\x03\x02\x02\x02\u198D\u198B\x03\x02\x02\x02\u198E" +
		"\u198F\x07\x04\x02\x02\u198F\u0503\x03\x02\x02\x02\u1990\u1991\x07\u0207" +
		"\x02\x02\u1991\u1992\x05\u023C\u011F\x02\u1992\u1993\x07\x04\x02\x02\u1993" +
		"\u0505\x03\x02\x02\x02\u1994\u1995\x07\u0208\x02\x02\u1995\u1996\x05\u031A" +
		"\u018E\x02\u1996\u1997\x05\u0566\u02B4\x02\u1997\u19A1\x05\u0216\u010C" +
		"\x02\u1998\u19A0\x05\x16\f\x02\u1999\u19A0\x05 \x11\x02\u199A\u19A0\x05" +
		"\x98M\x02\u199B\u19A0\x05\u0198\xCD\x02\u199C\u19A0\x05\u023A\u011E\x02" +
		"\u199D\u19A0\x05\u0464\u0233\x02\u199E\u19A0\x05\u04B0\u0259\x02\u199F" +
		"\u1998\x03\x02\x02\x02\u199F\u1999\x03\x02\x02\x02\u199F\u199A\x03\x02" +
		"\x02\x02\u199F\u199B\x03\x02\x02\x02\u199F\u199C\x03\x02\x02\x02\u199F" +
		"\u199D\x03\x02\x02\x02\u199F\u199E\x03\x02\x02\x02\u19A0\u19A3\x03\x02" +
		"\x02\x02\u19A1\u199F\x03\x02\x02\x02\u19A1\u19A2\x03\x02\x02\x02\u19A2" +
		"\u19A4\x03\x02\x02\x02\u19A3\u19A1\x03\x02\x02\x02\u19A4\u19A5\x07\x04" +
		"\x02\x02\u19A5\u0507\x03\x02\x02\x02\u19A6\u19A7\x07\u0209\x02\x02\u19A7" +
		"\u19A9\x05\u031C\u018F\x02\u19A8\u19AA\x05\u031E\u0190\x02\u19A9\u19A8" +
		"\x03\x02\x02\x02\u19A9\u19AA\x03\x02\x02\x02\u19AA\u19AB\x03\x02\x02\x02" +
		"\u19AB\u19AC\x07\x04\x02\x02\u19AC\u0509\x03\x02\x02\x02\u19AD\u19AE\x07" +
		"\u020A\x02\x02\u19AE\u19AF\x05\u0238\u011D\x02\u19AF\u19B0\x05\u0510\u0289" +
		"\x02\u19B0\u19BA\x05\u060C\u0307\x02\u19B1\u19B9\x05 \x11\x02\u19B2\u19B9" +
		"\x05\u023A\u011E\x02\u19B3\u19B9\x05\u0376\u01BC\x02\u19B4\u19B9\x05\u0462" +
		"\u0232\x02\u19B5\u19B9\x05\u0464\u0233\x02\u19B6\u19B9\x05\u0466\u0234" +
		"\x02\u19B7\u19B9\x05\u0472\u023A\x02\u19B8\u19B1\x03\x02\x02\x02\u19B8" +
		"\u19B2\x03\x02\x02\x02\u19B8\u19B3\x03\x02\x02\x02\u19B8\u19B4\x03\x02" +
		"\x02\x02\u19B8\u19B5\x03\x02\x02\x02\u19B8\u19B6\x03\x02\x02\x02\u19B8" +
		"\u19B7\x03\x02\x02\x02\u19B9\u19BC\x03\x02\x02\x02\u19BA\u19B8\x03\x02" +
		"\x02\x02\u19BA\u19BB\x03\x02\x02\x02\u19BB\u19BD\x03\x02\x02\x02\u19BC" +
		"\u19BA\x03\x02\x02\x02\u19BD\u19BE\x07\x04\x02\x02\u19BE\u050B\x03\x02" +
		"\x02\x02\u19BF\u19C0\x07\u020B\x02\x02\u19C0\u19C1\x05\u023C\u011F\x02" +
		"\u19C1\u19C2\x07\x04\x02\x02\u19C2\u050D\x03\x02\x02\x02\u19C3\u19C4\x07" +
		"\u020C\x02\x02\u19C4\u19C5\x05\u031A\u018E\x02\u19C5\u19C6\x05\u0566\u02B4" +
		"\x02\u19C6\u19D0\x05\u0216\u010C\x02\u19C7\u19CF\x05\x16\f\x02\u19C8\u19CF" +
		"\x05 \x11\x02\u19C9\u19CF\x05\x98M\x02\u19CA\u19CF\x05\u0198\xCD\x02\u19CB" +
		"\u19CF\x05\u023A\u011E\x02\u19CC\u19CF\x05\u0464\u0233\x02\u19CD\u19CF" +
		"\x05\u04B0\u0259\x02\u19CE\u19C7\x03\x02\x02\x02\u19CE\u19C8\x03\x02\x02" +
		"\x02";
	private static readonly _serializedATNSegment12: string =
		"\u19CE\u19C9\x03\x02\x02\x02\u19CE\u19CA\x03\x02\x02\x02\u19CE\u19CB\x03" +
		"\x02\x02\x02\u19CE\u19CC\x03\x02\x02\x02\u19CE\u19CD\x03\x02\x02\x02\u19CF" +
		"\u19D2\x03\x02\x02\x02\u19D0\u19CE\x03\x02\x02\x02\u19D0\u19D1\x03\x02" +
		"\x02\x02\u19D1\u19D3\x03\x02\x02\x02\u19D2\u19D0\x03\x02\x02\x02\u19D3" +
		"\u19D4\x07\x04\x02\x02\u19D4\u050F\x03\x02\x02\x02\u19D5\u19D6\x07\u020D" +
		"\x02\x02\u19D6\u19D8\x05\u031C\u018F\x02\u19D7\u19D9\x05\u031E\u0190\x02" +
		"\u19D8\u19D7\x03\x02\x02\x02\u19D8\u19D9\x03\x02\x02\x02\u19D9\u19DA\x03" +
		"\x02\x02\x02\u19DA\u19DB\x07\x04\x02\x02\u19DB\u0511\x03\x02\x02\x02\u19DC" +
		"\u19DD\x07\u020E\x02\x02\u19DD\u19DE\x05\u0516\u028C\x02\u19DE\u19E3\x05" +
		"\u060C\u0307\x02\u19DF\u19E2\x05\u0466\u0234\x02\u19E0\u19E2\x05\u0472" +
		"\u023A\x02\u19E1\u19DF\x03\x02\x02\x02\u19E1\u19E0\x03\x02\x02\x02\u19E2" +
		"\u19E5\x03\x02\x02\x02\u19E3\u19E1\x03\x02\x02\x02\u19E3\u19E4\x03\x02" +
		"\x02\x02\u19E4\u19E6\x03\x02\x02\x02\u19E5\u19E3\x03\x02\x02\x02\u19E6" +
		"\u19E7\x07\x04\x02\x02\u19E7\u0513\x03\x02\x02\x02\u19E8\u19E9\x07\u020F" +
		"\x02\x02\u19E9\u19EA\x05\u031A\u018E\x02\u19EA\u19EB\x05\u0566\u02B4\x02" +
		"\u19EB\u19F3\x05\u0636\u031C\x02\u19EC\u19F2\x05\x16\f\x02\u19ED\u19F2" +
		"\x05\x98M\x02\u19EE\u19F2\x05\u0198\xCD\x02\u19EF\u19F2\x05\u0464\u0233" +
		"\x02\u19F0\u19F2\x05\u04B0\u0259\x02\u19F1\u19EC\x03\x02\x02\x02\u19F1" +
		"\u19ED\x03\x02\x02\x02\u19F1\u19EE\x03\x02\x02\x02\u19F1\u19EF\x03\x02" +
		"\x02\x02\u19F1\u19F0\x03\x02\x02\x02\u19F2\u19F5\x03\x02\x02\x02\u19F3" +
		"\u19F1\x03\x02\x02\x02\u19F3\u19F4\x03\x02\x02\x02\u19F4\u19F6\x03\x02" +
		"\x02\x02\u19F5\u19F3\x03\x02\x02\x02\u19F6\u19F7\x07\x04\x02\x02\u19F7" +
		"\u0515\x03\x02\x02\x02\u19F8\u19F9\x07\u0210\x02\x02\u19F9\u19FB\x05\u031C" +
		"\u018F\x02\u19FA\u19FC\x05\u031E\u0190\x02\u19FB\u19FA\x03\x02\x02\x02" +
		"\u19FB\u19FC\x03\x02\x02\x02\u19FC\u19FD\x03\x02\x02\x02\u19FD\u19FE\x07" +
		"\x04\x02\x02\u19FE\u0517\x03\x02\x02\x02\u19FF\u1A00\x07\u0211\x02\x02" +
		"\u1A00\u1A01\x05\u0238\u011D\x02\u1A01\u1A02\x05\u03BA\u01DE\x02\u1A02" +
		"\u1A03\x05\u051A\u028E\x02\u1A03\u1A04\x05\u04C0\u0261\x02\u1A04\u1A05" +
		"\x07\x04\x02\x02\u1A05\u0519\x03\x02\x02\x02\u1A06\u1A08\x07\u0212\x02" +
		"\x02\u1A07\u1A09\x05\u0512\u028A\x02\u1A08\u1A07\x03\x02\x02\x02\u1A08" +
		"\u1A09\x03\x02\x02\x02\u1A09\u1A0A\x03\x02\x02\x02\u1A0A\u1A0B\x07\x04" +
		"\x02\x02\u1A0B\u051B\x03\x02\x02\x02\u1A0C\u1A11\x07\u0213\x02\x02\u1A0D" +
		"\u1A10\x05\u051E\u0290\x02\u1A0E\u1A10\x05\u0520\u0291\x02\u1A0F\u1A0D" +
		"\x03\x02\x02\x02\u1A0F\u1A0E\x03\x02\x02\x02\u1A10\u1A13\x03\x02\x02\x02" +
		"\u1A11\u1A0F\x03\x02\x02\x02\u1A11\u1A12\x03\x02\x02\x02\u1A12\u1A14\x03" +
		"\x02\x02\x02\u1A13\u1A11\x03\x02\x02\x02\u1A14\u1A15\x07\x04\x02\x02\u1A15" +
		"\u051D\x03\x02\x02\x02\u1A16\u1A17\x07\u0214\x02\x02\u1A17\u1A18\x05\u01E2" +
		"\xF2\x02\u1A18\u1A19\x07\x04\x02\x02\u1A19\u051F\x03\x02\x02\x02\u1A1A" +
		"\u1A1B\x07\u0215\x02\x02\u1A1B\u1A1C\x05\u0660\u0331\x02\u1A1C\u1A1D\x07" +
		"\x04\x02\x02\u1A1D\u0521\x03\x02\x02\x02\u1A1E\u1A1F\x07\u0216\x02\x02" +
		"\u1A1F\u1A20\x07\x04\x02\x02\u1A20\u0523\x03\x02\x02\x02\u1A21\u1A31\x07" +
		"\u0217\x02\x02\u1A22\u1A30\x05\u022A\u0116\x02\u1A23\u1A30\x05\u051C\u028F" +
		"\x02\u1A24\u1A30\x05\u0522\u0292\x02\u1A25\u1A30\x05\u0526\u0294\x02\u1A26" +
		"\u1A30\x05\u0528\u0295\x02\u1A27\u1A30\x05\u052A\u0296\x02\u1A28\u1A30" +
		"\x05\u052E\u0298\x02\u1A29\u1A30\x05\u0530\u0299\x02\u1A2A\u1A30\x05\u0532" +
		"\u029A\x02\u1A2B\u1A30\x05\u0534\u029B\x02\u1A2C\u1A30\x05\u0536\u029C" +
		"\x02\u1A2D\u1A30\x05\u0538\u029D\x02\u1A2E\u1A30\x05\u053C\u029F\x02\u1A2F" +
		"\u1A22\x03\x02\x02\x02\u1A2F\u1A23\x03\x02\x02\x02\u1A2F\u1A24\x03\x02" +
		"\x02\x02\u1A2F\u1A25\x03\x02\x02\x02\u1A2F\u1A26\x03\x02\x02\x02\u1A2F" +
		"\u1A27\x03\x02\x02\x02\u1A2F\u1A28\x03\x02\x02\x02\u1A2F\u1A29\x03\x02" +
		"\x02\x02\u1A2F\u1A2A\x03\x02\x02\x02\u1A2F\u1A2B\x03\x02\x02\x02\u1A2F" +
		"\u1A2C\x03\x02\x02\x02\u1A2F\u1A2D\x03\x02\x02\x02\u1A2F\u1A2E\x03\x02" +
		"\x02\x02\u1A30\u1A33\x03\x02\x02\x02\u1A31\u1A2F\x03\x02\x02\x02\u1A31" +
		"\u1A32\x03\x02\x02\x02\u1A32\u1A34\x03\x02\x02\x02\u1A33\u1A31\x03\x02" +
		"\x02\x02\u1A34\u1A35\x07\x04\x02\x02\u1A35\u0525\x03\x02\x02\x02\u1A36" +
		"\u1A38\x07\u0218\x02\x02\u1A37\u1A39\x05\u0522\u0292\x02\u1A38\u1A37\x03" +
		"\x02\x02\x02\u1A38\u1A39\x03\x02\x02\x02\u1A39\u1A3A\x03\x02\x02\x02\u1A3A" +
		"\u1A3B\x07\x04\x02\x02\u1A3B\u0527\x03\x02\x02\x02\u1A3C\u1A3E\x07\u0219" +
		"\x02\x02\u1A3D\u1A3F\x05\u022A\u0116\x02\u1A3E\u1A3D\x03\x02\x02\x02\u1A3E" +
		"\u1A3F\x03\x02\x02\x02\u1A3F\u1A40\x03\x02\x02\x02\u1A40\u1A41\x07\x04" +
		"\x02\x02\u1A41\u0529\x03\x02\x02\x02\u1A42\u1A47\x07\u021A\x02\x02\u1A43" +
		"\u1A46\x05\u0522\u0292\x02\u1A44\u1A46\x05\u052C\u0297\x02\u1A45\u1A43" +
		"\x03\x02\x02\x02\u1A45\u1A44\x03\x02\x02\x02\u1A46\u1A49\x03\x02\x02\x02" +
		"\u1A47\u1A45\x03\x02\x02\x02\u1A47\u1A48\x03\x02\x02\x02\u1A48\u1A4A\x03" +
		"\x02\x02\x02\u1A49\u1A47\x03\x02\x02\x02\u1A4A\u1A4B\x07\x04\x02\x02\u1A4B" +
		"\u052B\x03\x02\x02\x02\u1A4C\u1A4D\x07\u021B\x02\x02\u1A4D\u1A4E\x05\u0660" +
		"\u0331\x02\u1A4E\u1A4F\x07\x04\x02\x02\u1A4F\u052D\x03\x02\x02\x02\u1A50" +
		"\u1A52\x07\u021C\x02\x02\u1A51\u1A53\x05\u0522\u0292\x02\u1A52\u1A51\x03" +
		"\x02\x02\x02\u1A52\u1A53\x03\x02\x02\x02\u1A53\u1A54\x03\x02\x02\x02\u1A54" +
		"\u1A55\x07\x04\x02\x02\u1A55\u052F\x03\x02\x02\x02\u1A56\u1A58\x07\u021D" +
		"\x02\x02\u1A57\u1A59\x05\u0522\u0292\x02\u1A58\u1A57\x03\x02\x02\x02\u1A58" +
		"\u1A59\x03\x02\x02\x02\u1A59\u1A5A\x03\x02\x02\x02\u1A5A\u1A5B\x07\x04" +
		"\x02\x02\u1A5B\u0531\x03\x02\x02\x02\u1A5C\u1A5D\x07\u021E\x02\x02\u1A5D" +
		"\u1A5E\x07\x04\x02\x02\u1A5E\u0533\x03\x02\x02\x02\u1A5F\u1A60\x07\u021F" +
		"\x02\x02\u1A60\u1A61\x07\x04\x02\x02\u1A61\u0535\x03\x02\x02\x02\u1A62" +
		"\u1A63\x07\u0220\x02\x02\u1A63\u1A64\x07\x04\x02\x02\u1A64\u0537\x03\x02" +
		"\x02\x02\u1A65\u1A66\x07\u0221\x02\x02\u1A66\u1A67\x07\x04\x02\x02\u1A67" +
		"\u0539\x03\x02\x02\x02\u1A68\u1A6B\x07\u0222\x02\x02\u1A69\u1A6C\x05\u037E" +
		"\u01C0\x02\u1A6A\u1A6C\x05\u066A\u0336\x02\u1A6B\u1A69\x03\x02\x02\x02" +
		"\u1A6B\u1A6A\x03\x02\x02\x02\u1A6C\u1A6D\x03\x02\x02\x02\u1A6D\u1A6E\x07" +
		"\x04\x02\x02\u1A6E\u053B\x03\x02\x02\x02\u1A6F\u1A70\x07\u0223\x02\x02" +
		"\u1A70\u1A71\x07\x04\x02\x02\u1A71\u053D\x03\x02\x02\x02\u1A72\u1A73\x07" +
		"\u0224\x02\x02\u1A73\u1A74\x05\u04F8\u027D\x02\u1A74\u1A75\x05\u01C0\xE1" +
		"\x02\u1A75\u1A76\x05\u05EE\u02F8\x02\u1A76\u1A77\x07\x04\x02\x02\u1A77" +
		"\u053F\x03\x02\x02\x02\u1A78\u1A79\x07\u0225\x02\x02\u1A79\u1A7A\x05\u0238" +
		"\u011D\x02\u1A7A\u1A7B\x05\u0546\u02A4\x02\u1A7B\u1A84\x05\u060C\u0307" +
		"\x02\u1A7C\u1A83\x05\u023A\u011E\x02\u1A7D\u1A83\x05\u0376\u01BC\x02\u1A7E" +
		"\u1A83\x05\u0462\u0232\x02\u1A7F\u1A83\x05\u0464\u0233\x02\u1A80\u1A83" +
		"\x05\u0466\u0234\x02\u1A81\u1A83\x05\u0472\u023A\x02\u1A82\u1A7C\x03\x02" +
		"\x02\x02\u1A82\u1A7D\x03\x02\x02\x02\u1A82\u1A7E\x03\x02\x02\x02\u1A82" +
		"\u1A7F\x03\x02\x02\x02\u1A82\u1A80\x03\x02\x02\x02\u1A82\u1A81\x03\x02" +
		"\x02\x02\u1A83\u1A86\x03\x02\x02\x02\u1A84\u1A82\x03\x02\x02\x02\u1A84" +
		"\u1A85\x03\x02\x02\x02\u1A85\u1A87\x03\x02\x02\x02\u1A86\u1A84\x03\x02" +
		"\x02\x02\u1A87\u1A88\x07\x04\x02\x02\u1A88\u0541\x03\x02\x02\x02\u1A89" +
		"\u1A8A\x07\u0226\x02\x02\u1A8A\u1A8B\x05\u023C\u011F\x02\u1A8B\u1A8C\x07" +
		"\x04\x02\x02\u1A8C\u0543\x03\x02\x02\x02\u1A8D\u1A8E\x07\u0227\x02\x02" +
		"\u1A8E\u1A8F\x05\u031A\u018E\x02\u1A8F\u1A99\x05\u0566\u02B4\x02\u1A90" +
		"\u1A98\x05\x16\f\x02\u1A91\u1A98\x05\x98M\x02\u1A92\u1A98\x05\u0198\xCD" +
		"\x02\u1A93\u1A98\x05\u023A\u011E\x02\u1A94\u1A98\x05\u0464\u0233\x02\u1A95" +
		"\u1A98\x05\u0496\u024C\x02\u1A96\u1A98\x05\u04B0\u0259\x02\u1A97\u1A90" +
		"\x03\x02\x02\x02\u1A97\u1A91\x03\x02\x02\x02\u1A97\u1A92\x03\x02\x02\x02" +
		"\u1A97\u1A93\x03\x02\x02\x02\u1A97\u1A94\x03\x02\x02\x02\u1A97\u1A95\x03" +
		"\x02\x02\x02\u1A97\u1A96\x03\x02\x02\x02\u1A98\u1A9B\x03\x02\x02\x02\u1A99" +
		"\u1A97\x03\x02\x02\x02\u1A99\u1A9A\x03\x02\x02\x02\u1A9A\u1A9C\x03\x02" +
		"\x02\x02\u1A9B\u1A99\x03\x02\x02\x02\u1A9C\u1A9D\x07\x04\x02\x02\u1A9D" +
		"\u0545\x03\x02\x02\x02\u1A9E\u1A9F\x07\u0228\x02\x02\u1A9F\u1AA1\x05\u031C" +
		"\u018F\x02\u1AA0\u1AA2\x05\u031E\u0190\x02\u1AA1\u1AA0\x03\x02\x02\x02" +
		"\u1AA1\u1AA2\x03\x02\x02\x02\u1AA2\u1AA3\x03\x02\x02\x02\u1AA3\u1AA4\x07" +
		"\x04\x02\x02\u1AA4\u0547\x03\x02\x02\x02\u1AA5\u1AA6\x07\u0229\x02\x02" +
		"\u1AA6\u1AA7\x05\u02A4\u0153\x02\u1AA7\u1AA8\x05\u054C\u02A7\x02\u1AA8" +
		"\u1AB0\x05\u04AC\u0257\x02\u1AA9\u1AAF\x05\x96L\x02\u1AAA\u1AAF\x05\u04A8" +
		"\u0255\x02\u1AAB\u1AAF\x05\u04AE\u0258\x02\u1AAC\u1AAF\x05\u04DC\u026F" +
		"\x02\u1AAD\u1AAF\x05\u0638\u031D\x02\u1AAE\u1AA9\x03\x02\x02\x02\u1AAE" +
		"\u1AAA\x03\x02\x02\x02\u1AAE\u1AAB\x03\x02\x02\x02\u1AAE\u1AAC\x03\x02" +
		"\x02\x02\u1AAE\u1AAD\x03\x02\x02\x02\u1AAF\u1AB2\x03\x02\x02\x02\u1AB0" +
		"\u1AAE\x03\x02\x02\x02\u1AB0\u1AB1\x03\x02\x02\x02\u1AB1\u1AB3\x03\x02" +
		"\x02\x02\u1AB2\u1AB0\x03\x02\x02\x02\u1AB3\u1AB4\x07\x04\x02\x02\u1AB4" +
		"\u0549\x03\x02\x02\x02\u1AB5\u1AB9\x07\u022A\x02\x02\u1AB6\u1AB8\x05\u0548" +
		"\u02A5\x02\u1AB7\u1AB6\x03\x02\x02\x02\u1AB8\u1ABB\x03\x02\x02\x02\u1AB9" +
		"\u1AB7\x03\x02\x02\x02\u1AB9\u1ABA\x03\x02\x02\x02\u1ABA\u1ABC\x03\x02" +
		"\x02\x02\u1ABB\u1AB9\x03\x02\x02\x02\u1ABC\u1ABD\x07\x04\x02\x02\u1ABD" +
		"\u054B\x03\x02\x02\x02\u1ABE\u1AC6\x07\u022B\x02\x02\u1ABF\u1AC5\x05\xE8" +
		"u\x02\u1AC0\u1AC5\x05\u0142\xA2\x02\u1AC1\u1AC5\x05\u0298\u014D\x02\u1AC2" +
		"\u1AC5\x05\u0376\u01BC\x02\u1AC3\u1AC5\x05\u0462\u0232\x02\u1AC4\u1ABF" +
		"\x03\x02\x02\x02\u1AC4\u1AC0\x03\x02\x02\x02\u1AC4\u1AC1\x03\x02\x02\x02" +
		"\u1AC4\u1AC2\x03\x02\x02\x02\u1AC4\u1AC3\x03\x02\x02\x02\u1AC5\u1AC8\x03" +
		"\x02\x02\x02\u1AC6\u1AC4\x03\x02\x02\x02\u1AC6\u1AC7\x03\x02\x02\x02\u1AC7" +
		"\u1AC9\x03\x02\x02\x02\u1AC8\u1AC6\x03\x02\x02\x02\u1AC9\u1ACA\x07\x04" +
		"\x02\x02\u1ACA\u054D\x03\x02\x02\x02\u1ACB\u1ACC\x07\u022C\x02\x02\u1ACC" +
		"\u1ACD\x05\u02A4\u0153\x02\u1ACD\u1ACE\x05\u054C\u02A7\x02\u1ACE\u1AD5" +
		"\x05\u0500\u0281\x02\u1ACF\u1AD4\x05\x96L\x02\u1AD0\u1AD4\x05\u04DC\u026F" +
		"\x02\u1AD1\u1AD4\x05\u04FC\u027F\x02\u1AD2\u1AD4\x05\u0638\u031D\x02\u1AD3" +
		"\u1ACF\x03\x02\x02\x02\u1AD3\u1AD0\x03\x02\x02\x02\u1AD3\u1AD1\x03\x02" +
		"\x02\x02\u1AD3\u1AD2\x03\x02\x02\x02\u1AD4\u1AD7\x03\x02\x02\x02\u1AD5" +
		"\u1AD3\x03\x02\x02\x02\u1AD5\u1AD6\x03\x02\x02\x02\u1AD6\u1AD8\x03\x02" +
		"\x02\x02\u1AD7\u1AD5\x03\x02\x02\x02\u1AD8\u1AD9\x07\x04\x02\x02\u1AD9" +
		"\u054F\x03\x02\x02\x02\u1ADA\u1ADE\x07\u022D\x02\x02\u1ADB\u1ADD\x05\u054E" +
		"\u02A8\x02\u1ADC\u1ADB\x03\x02\x02\x02\u1ADD\u1AE0\x03\x02\x02\x02\u1ADE" +
		"\u1ADC\x03\x02\x02\x02\u1ADE\u1ADF\x03\x02\x02\x02\u1ADF\u1AE1\x03\x02" +
		"\x02\x02\u1AE0\u1ADE\x03\x02\x02\x02\u1AE1\u1AE2\x07\x04\x02\x02\u1AE2" +
		"\u0551\x03\x02\x02\x02\u1AE3\u1AE4\x07\u022E\x02\x02\u1AE4\u1AE5\x05\u064E" +
		"\u0328\x02\u1AE5\u1AFA\x05\u055A\u02AE\x02\u1AE6\u1AF9\x05\x16\f\x02\u1AE7" +
		"\u1AF9\x05b2\x02\u1AE8\u1AF9\x05d3\x02\u1AE9\u1AF9\x05\x8CG\x02\u1AEA" +
		"\u1AF9\x05\x96L\x02\u1AEB\u1AF9\x05\x98M\x02\u1AEC\u1AF9\x05\u011C\x8F" +
		"\x02\u1AED\u1AF9\x05\u0198\xCD\x02\u1AEE\u1AF9\x05\u023A\u011E\x02\u1AEF" +
		"\u1AF9\x05\u0262\u0132\x02\u1AF0\u1AF9\x05\u0266\u0134\x02\u1AF1\u1AF9" +
		"\x05\u0276\u013C\x02\u1AF2\u1AF9\x05\u03F0\u01F9\x02\u1AF3\u1AF9\x05\u0464" +
		"\u0233\x02\u1AF4\u1AF9\x05\u04B0\u0259\x02\u1AF5\u1AF9\x05\u055C\u02AF" +
		"\x02\u1AF6\u1AF9\x05\u0638\u031D\x02\u1AF7\u1AF9\x05\u0650\u0329\x02\u1AF8" +
		"\u1AE6\x03\x02\x02\x02\u1AF8\u1AE7\x03\x02\x02\x02\u1AF8\u1AE8\x03\x02" +
		"\x02\x02\u1AF8\u1AE9\x03\x02\x02\x02\u1AF8\u1AEA\x03\x02\x02\x02\u1AF8" +
		"\u1AEB\x03\x02\x02\x02\u1AF8\u1AEC\x03\x02\x02\x02\u1AF8\u1AED\x03\x02" +
		"\x02\x02\u1AF8\u1AEE\x03\x02\x02\x02\u1AF8\u1AEF\x03\x02\x02\x02\u1AF8" +
		"\u1AF0\x03\x02\x02\x02\u1AF8\u1AF1\x03\x02\x02\x02\u1AF8\u1AF2\x03\x02" +
		"\x02\x02\u1AF8\u1AF3\x03\x02\x02\x02\u1AF8\u1AF4\x03\x02\x02\x02\u1AF8" +
		"\u1AF5\x03\x02\x02\x02\u1AF8\u1AF6\x03\x02\x02\x02\u1AF8\u1AF7\x03\x02" +
		"\x02\x02\u1AF9\u1AFC\x03\x02\x02\x02\u1AFA\u1AF8\x03\x02\x02\x02\u1AFA" +
		"\u1AFB\x03\x02\x02\x02\u1AFB\u1AFD\x03\x02\x02\x02\u1AFC\u1AFA\x03\x02" +
		"\x02\x02\u1AFD\u1AFE\x07\x04\x02\x02\u1AFE\u0553\x03\x02\x02\x02\u1AFF" +
		"\u1B00\x07\u022F\x02\x02\u1B00\u1B01\x05\u0558\u02AD\x02\u1B01\u1B06\x05" +
		"\u060C\u0307\x02\u1B02\u1B05\x05\u0466\u0234\x02\u1B03\u1B05\x05\u0472" +
		"\u023A\x02\u1B04\u1B02\x03\x02\x02\x02\u1B04\u1B03\x03\x02\x02\x02\u1B05" +
		"\u1B08\x03\x02\x02\x02\u1B06\u1B04\x03\x02\x02\x02\u1B06\u1B07\x03\x02" +
		"\x02\x02\u1B07\u1B09\x03\x02\x02\x02\u1B08\u1B06\x03\x02\x02\x02\u1B09" +
		"\u1B0A\x07\x04\x02\x02\u1B0A\u0555\x03\x02\x02\x02\u1B0B\u1B0C\x07\u0230" +
		"\x02\x02\u1B0C\u1B0D\x05\u031A\u018E\x02\u1B0D\u1B0E\x05\u0566\u02B4\x02" +
		"\u1B0E\u1B16\x05\u0636\u031C\x02\u1B0F\u1B15\x05\x16\f\x02\u1B10\u1B15" +
		"\x05\x98M\x02\u1B11\u1B15\x05\u0198\xCD\x02\u1B12\u1B15\x05\u0464\u0233" +
		"\x02\u1B13\u1B15\x05\u04B0\u0259\x02\u1B14\u1B0F\x03\x02\x02\x02\u1B14" +
		"\u1B10\x03\x02\x02\x02\u1B14\u1B11\x03\x02\x02\x02\u1B14\u1B12\x03\x02" +
		"\x02\x02\u1B14\u1B13\x03\x02\x02\x02\u1B15\u1B18\x03\x02\x02\x02\u1B16" +
		"\u1B14\x03\x02\x02\x02\u1B16\u1B17\x03\x02\x02\x02\u1B17\u1B19\x03\x02" +
		"\x02\x02\u1B18\u1B16\x03\x02\x02\x02\u1B19\u1B1A\x07\x04\x02\x02\u1B1A" +
		"\u0557\x03\x02\x02\x02\u1B1B\u1B1C\x07\u0231\x02\x02\u1B1C\u1B1E\x05\u031C" +
		"\u018F\x02\u1B1D\u1B1F\x05\u031E\u0190\x02\u1B1E\u1B1D\x03\x02\x02\x02" +
		"\u1B1E\u1B1F\x03\x02\x02\x02\u1B1F\u1B20\x03\x02\x02\x02\u1B20\u1B21\x07" +
		"\x04\x02\x02\u1B21\u0559\x03\x02\x02\x02\u1B22\u1B23\x07\u0232\x02\x02" +
		"\u1B23\u1B30\x05\u0568\u02B5\x02\u1B24\u1B2F\x05&\x14\x02\u1B25\u1B2F" +
		"\x05\u0116\x8C\x02\u1B26\u1B2F\x05\u0142\xA2\x02\u1B27\u1B2F\x05\u0376" +
		"\u01BC\x02\u1B28\u1B2F\x05\u03AE\u01D8\x02\u1B29\u1B2F\x05\u03E0\u01F1" +
		"\x02\u1B2A\u1B2F\x05\u045C\u022F\x02\u1B2B\u1B2F\x05\u0462\u0232\x02\u1B2C" +
		"\u1B2F\x05\u0554\u02AB\x02\u1B2D\u1B2F\x05\u05BA\u02DE\x02\u1B2E\u1B24" +
		"\x03\x02\x02\x02\u1B2E\u1B25\x03\x02\x02\x02\u1B2E\u1B26\x03\x02\x02\x02" +
		"\u1B2E\u1B27\x03\x02\x02\x02\u1B2E\u1B28\x03\x02\x02\x02\u1B2E\u1B29\x03" +
		"\x02\x02\x02\u1B2E\u1B2A\x03\x02\x02\x02\u1B2E\u1B2B\x03\x02\x02\x02\u1B2E" +
		"\u1B2C\x03\x02\x02\x02\u1B2E\u1B2D\x03\x02\x02\x02\u1B2F\u1B32\x03\x02" +
		"\x02\x02\u1B30\u1B2E\x03\x02\x02\x02\u1B30\u1B31\x03\x02\x02\x02\u1B31" +
		"\u1B33\x03\x02\x02\x02\u1B32\u1B30\x03\x02\x02\x02\u1B33\u1B34\x07\x04" +
		"\x02\x02\u1B34\u055B\x03\x02\x02\x02\u1B35\u1B36\x07\u0233\x02\x02\u1B36" +
		"\u1B37\x05\u05E8\u02F5\x02\u1B37\u1B38\x05\u0452\u022A\x02\u1B38\u1B39" +
		"\x05\u0562\u02B2\x02\u1B39\u1B3F\x05\u060C\u0307\x02\u1B3A\u1B3E\x05\u041A" +
		"\u020E\x02\u1B3B\u1B3E\x05\u0466\u0234\x02\u1B3C\u1B3E\x05\u0472\u023A" +
		"\x02\u1B3D\u1B3A\x03\x02\x02\x02\u1B3D\u1B3B\x03\x02\x02\x02\u1B3D\u1B3C" +
		"\x03\x02\x02\x02\u1B3E\u1B41\x03\x02\x02\x02\u1B3F\u1B3D\x03\x02\x02\x02" +
		"\u1B3F\u1B40\x03\x02\x02\x02\u1B40\u1B42\x03\x02\x02\x02\u1B41\u1B3F\x03" +
		"\x02\x02\x02\u1B42\u1B43\x07\x04\x02\x02\u1B43\u055D\x03\x02\x02\x02\u1B44" +
		"\u1B45\x07\u0234\x02\x02\u1B45\u1B46\x05\u05EA\u02F6\x02\u1B46\u1B47\x05" +
		"\u04DA\u026E\x02\u1B47\u1B48\x07\x04\x02\x02\u1B48\u055F\x03\x02\x02\x02" +
		"\u1B49\u1B4A\x07\u0235\x02\x02\u1B4A\u1B4B\x05\u031A\u018E\x02\u1B4B\u1B4C" +
		"\x05\u0566\u02B4\x02\u1B4C\u1B4D\x05\u0216\u010C\x02\u1B4D\u1B59\x05\u042A" +
		"\u0216\x02\u1B4E\u1B58\x05\x16\f\x02\u1B4F\u1B58\x05\x98M\x02\u1B50\u1B58" +
		"\x05\u0198\xCD\x02\u1B51\u1B58\x05\u023A\u011E\x02\u1B52\u1B58\x05\u041A" +
		"\u020E\x02\u1B53\u1B58\x05\u0464\u0233\x02\u1B54\u1B58\x05\u04B0\u0259" +
		"\x02\u1B55\u1B58\x05\u0524\u0293\x02\u1B56\u1B58\x05\u053A\u029E\x02\u1B57" +
		"\u1B4E\x03\x02\x02\x02\u1B57\u1B4F\x03\x02\x02\x02\u1B57\u1B50\x03\x02" +
		"\x02\x02\u1B57\u1B51\x03\x02\x02\x02\u1B57\u1B52\x03\x02\x02\x02\u1B57" +
		"\u1B53\x03\x02\x02\x02\u1B57\u1B54\x03\x02\x02\x02\u1B57\u1B55\x03\x02" +
		"\x02\x02\u1B57\u1B56\x03\x02\x02\x02\u1B58\u1B5B\x03\x02\x02\x02\u1B59" +
		"\u1B57\x03\x02\x02\x02\u1B59\u1B5A\x03\x02\x02\x02\u1B5A\u1B5C\x03\x02" +
		"\x02\x02\u1B5B\u1B59\x03\x02\x02\x02\u1B5C\u1B5D\x07\x04\x02\x02\u1B5D" +
		"\u0561\x03\x02\x02\x02\u1B5E\u1B5F\x07\u0236\x02\x02\u1B5F\u1B61\x05\u031C" +
		"\u018F\x02\u1B60\u1B62\x05\u031E\u0190\x02\u1B61\u1B60\x03\x02\x02\x02" +
		"\u1B61\u1B62\x03\x02\x02\x02\u1B62\u1B63\x03\x02\x02\x02\u1B63\u1B64\x07" +
		"\x04\x02\x02\u1B64\u0563\x03\x02\x02\x02\u1B65\u1B66\x07\u0237\x02\x02" +
		"\u1B66\u1B67\x05\u0652\u032A\x02\u1B67\u1B68\x07\x04\x02\x02\u1B68\u0565" +
		"\x03\x02\x02\x02\u1B69\u1B6A\x07\u0238\x02\x02\u1B6A\u1B73\x05\u0568\u02B5" +
		"\x02\u1B6B\u1B72\x05&\x14\x02\u1B6C\u1B72\x05\u0142\xA2\x02\u1B6D\u1B72" +
		"\x05\u0376\u01BC\x02\u1B6E\u1B72\x05\u03AE\u01D8\x02\u1B6F\u1B72\x05\u0462" +
		"\u0232\x02\u1B70\u1B72\x05\u05BA\u02DE\x02\u1B71\u1B6B\x03\x02\x02\x02" +
		"\u1B71\u1B6C\x03\x02\x02\x02\u1B71\u1B6D\x03\x02\x02\x02\u1B71\u1B6E\x03" +
		"\x02\x02\x02\u1B71\u1B6F\x03\x02\x02\x02\u1B71\u1B70\x03\x02\x02\x02\u1B72" +
		"\u1B75\x03\x02\x02\x02\u1B73\u1B71\x03\x02\x02\x02\u1B73\u1B74\x03\x02" +
		"\x02\x02\u1B74\u1B76\x03\x02\x02\x02\u1B75\u1B73\x03\x02\x02\x02\u1B76" +
		"\u1B77\x07\x04\x02\x02\u1B77\u0567\x03\x02\x02\x02\u1B78\u1B81\x07\u0239" +
		"\x02\x02\u1B79\u1B80\x05\u04F8\u027D\x02\u1B7A\u1B80\x05\u0582\u02C2\x02" +
		"\u1B7B\u1B80\x05\u0584\u02C3\x02\u1B7C\u1B80\x05\u058A\u02C6\x02\u1B7D" +
		"\u1B80\x05\u058C\u02C7\x02\u1B7E\u1B80\x05\u058E\u02C8\x02\u1B7F\u1B79" +
		"\x03\x02\x02\x02\u1B7F\u1B7A\x03\x02\x02\x02\u1B7F\u1B7B\x03\x02\x02\x02" +
		"\u1B7F\u1B7C\x03\x02\x02\x02\u1B7F\u1B7D\x03\x02\x02\x02\u1B7F\u1B7E\x03" +
		"\x02\x02\x02\u1B80\u1B83\x03\x02\x02\x02\u1B81\u1B7F\x03\x02\x02\x02\u1B81" +
		"\u1B82\x03\x02\x02\x02\u1B82\u1B84\x03\x02\x02\x02\u1B83\u1B81\x03\x02" +
		"\x02\x02\u1B84\u1B85\x07\x04\x02\x02\u1B85\u0569\x03\x02\x02\x02\u1B86" +
		"\u1B87\x07\u023A\x02\x02\u1B87\u1B88\x05\u064E\u0328\x02\u1B88\u1B89\x05" +
		"\u056C\u02B7\x02\u1B89\u1B8A\x05\u032C\u0197\x02\u1B8A\u1B8F\x05\u04D6" +
		"\u026C\x02\u1B8B\u1B8E\x05\x96L\x02\u1B8C\u1B8E\x05\u0638\u031D\x02\u1B8D" +
		"\u1B8B\x03\x02\x02\x02\u1B8D\u1B8C\x03\x02\x02\x02\u1B8E\u1B91\x03\x02" +
		"\x02\x02\u1B8F\u1B8D\x03\x02\x02\x02\u1B8F\u1B90\x03\x02\x02\x02\u1B90" +
		"\u1B92\x03\x02\x02\x02\u1B91\u1B8F\x03\x02\x02\x02\u1B92\u1B93\x07\x04" +
		"\x02\x02\u1B93\u056B\x03\x02\x02\x02\u1B94\u1B95\x07\u023B\x02\x02\u1B95" +
		"\u1B9E\x05\u0568\u02B5\x02\u1B96\u1B9D\x05\u0116\x8C\x02\u1B97\u1B9D\x05" +
		"\u0142\xA2\x02\u1B98\u1B9D\x05\u0376\u01BC\x02\u1B99\u1B9D\x05\u045C\u022F" +
		"\x02\u1B9A\u1B9D\x05\u0462\u0232\x02\u1B9B\u1B9D\x05\u05BA\u02DE\x02\u1B9C" +
		"\u1B96\x03\x02\x02\x02\u1B9C\u1B97\x03\x02\x02\x02\u1B9C\u1B98\x03\x02" +
		"\x02\x02\u1B9C\u1B99\x03\x02\x02\x02\u1B9C\u1B9A\x03\x02\x02\x02\u1B9C" +
		"\u1B9B\x03\x02\x02\x02\u1B9D\u1BA0\x03\x02\x02\x02\u1B9E\u1B9C\x03\x02" +
		"\x02\x02\u1B9E\u1B9F\x03\x02\x02\x02\u1B9F\u1BA1\x03\x02\x02\x02\u1BA0" +
		"\u1B9E\x03\x02\x02\x02\u1BA1\u1BA2\x07\x04\x02\x02\u1BA2\u056D\x03\x02" +
		"\x02\x02\u1BA3\u1BA7\x07\u023C\x02\x02\u1BA4\u1BA8\x05\u0380\u01C1\x02" +
		"\u1BA5\u1BA8\x05\u066C\u0337\x02\u1BA6\u1BA8\x05\u062C\u0317\x02\u1BA7" +
		"\u1BA4\x03\x02\x02\x02\u1BA7\u1BA5\x03\x02\x02\x02\u1BA7\u1BA6\x03\x02" +
		"\x02\x02\u1BA8\u1BA9\x03\x02\x02\x02\u1BA9\u1BAA\x07\x04\x02\x02\u1BAA" +
		"\u056F\x03\x02\x02\x02\u1BAB\u1BAE\x07\u023D\x02\x02\u1BAC\u1BAF\x05\u0380" +
		"\u01C1\x02\u1BAD\u1BAF\x05\u066C\u0337\x02\u1BAE\u1BAC\x03\x02\x02\x02" +
		"\u1BAE\u1BAD\x03\x02\x02\x02\u1BAF\u1BB0\x03\x02\x02\x02\u1BB0\u1BB1\x07" +
		"\x04\x02\x02\u1BB1\u0571\x03\x02\x02\x02\u1BB2\u1BB3\x07\u023E\x02\x02" +
		"\u1BB3\u1BB4\x05\u0624\u0313\x02\u1BB4\u1BB5\x07\x04\x02\x02\u1BB5\u0573" +
		"\x03\x02\x02\x02\u1BB6\u1BB7\x05\u0280\u0141\x02\u1BB7\u0575\x03\x02\x02" +
		"\x02\u1BB8\u1BB9\x05\u067E\u0340\x02\u1BB9\u0577\x03\x02\x02\x02\u1BBA" +
		"\u1BBB\x05\u05C8\u02E5\x02\u1BBB\u0579\x03\x02\x02\x02\u1BBC\u1BBD\x07" +
		"\u023F\x02\x02\u1BBD\u1BBE\x05\u057C\u02BF\x02\u1BBE\u1BC4\x05\u057E\u02C0" +
		"\x02\u1BBF\u1BC3\x05\u012E\x98\x02\u1BC0\u1BC3\x05\u057A\u02BE\x02\u1BC1" +
		"\u1BC3\x05\u05D6\u02EC\x02\u1BC2\u1BBF\x03\x02\x02\x02\u1BC2\u1BC0\x03" +
		"\x02\x02\x02\u1BC2\u1BC1\x03\x02\x02\x02\u1BC3\u1BC6\x03\x02\x02\x02\u1BC4" +
		"\u1BC2\x03\x02\x02\x02\u1BC4\u1BC5\x03\x02\x02\x02\u1BC5\u1BC7\x03\x02" +
		"\x02\x02\u1BC6\u1BC4\x03\x02\x02\x02\u1BC7\u1BC8\x07\x04\x02\x02\u1BC8" +
		"\u057B\x03\x02\x02\x02\u1BC9\u1BCA\x05\u0370\u01B9\x02\u1BCA\u057D\x03" +
		"\x02\x02\x02\u1BCB\u1BCC\x07\u0240\x02\x02\u1BCC\u1BCD\x05\u0680\u0341" +
		"\x02\u1BCD\u1BCE\x07\x04\x02\x02\u1BCE\u057F\x03\x02\x02\x02\u1BCF\u1BD0" +
		"\x07\u0241\x02\x02\u1BD0\u1BD1\x05\u01E6\xF4\x02\u1BD1\u1BD3\x05\u0604" +
		"\u0303\x02\u1BD2\u1BD4\x05\u05BC\u02DF\x02\u1BD3\u1BD2\x03\x02\x02\x02" +
		"\u1BD3\u1BD4\x03\x02\x02\x02\u1BD4\u1BD5\x03\x02\x02\x02\u1BD5\u1BD6\x07" +
		"\x04\x02\x02\u1BD6\u0581\x03\x02\x02\x02\u1BD7\u1BD8\x07\u0242\x02\x02" +
		"\u1BD8\u1BD9\x05\u062A\u0316\x02\u1BD9\u1BDA\x07\x04\x02\x02\u1BDA\u0583" +
		"\x03\x02\x02\x02\u1BDB\u1BDC\x07\u0243\x02\x02\u1BDC\u1BDD\x05\u062A\u0316" +
		"\x02\u1BDD\u1BDE\x07\x04\x02\x02\u1BDE\u0585\x03\x02\x02\x02\u1BDF\u1BE0" +
		"\x07\u0244\x02\x02\u1BE0\u1BE1\x05\u062A\u0316\x02\u1BE1\u1BE2\x07\x04" +
		"\x02\x02\u1BE2\u0587\x03\x02\x02\x02\u1BE3\u1BE4\x07\u0245\x02\x02\u1BE4" +
		"\u1BE5\x05\u062A\u0316\x02\u1BE5\u1BE6\x07\x04\x02\x02\u1BE6\u0589\x03" +
		"\x02\x02\x02\u1BE7\u1BE8\x07\u0246\x02\x02\u1BE8\u1BE9\x05\u062A\u0316" +
		"\x02\u1BE9\u1BEA\x07\x04\x02\x02\u1BEA\u058B\x03\x02\x02\x02\u1BEB\u1BEC" +
		"\x07\u0247\x02\x02\u1BEC\u1BED\x05\u062A\u0316\x02\u1BED\u1BEE\x07\x04" +
		"\x02\x02\u1BEE\u058D\x03\x02\x02\x02\u1BEF\u1BF0\x07\u0248\x02\x02\u1BF0" +
		"\u1BF1\x05\u062A\u0316\x02\u1BF1\u1BF2\x07\x04\x02\x02\u1BF2\u058F\x03" +
		"\x02\x02\x02\u1BF3\u1BF4\x07\u0249\x02\x02\u1BF4\u1BF5\x05\xF0y\x02\u1BF5" +
		"\u1BF6\x07\x04\x02\x02\u1BF6\u0591\x03\x02\x02\x02\u1BF7\u1BF8\x07\u024A" +
		"\x02\x02\u1BF8\u1BF9\x05\u0624\u0313\x02\u1BF9\u1BFA\x07\x04\x02\x02\u1BFA" +
		"\u0593\x03\x02\x02\x02\u1BFB\u1BFC\x07\u024B\x02\x02\u1BFC\u1BFD\x05\u05AE" +
		"\u02D8\x02\u1BFD\u1C04\x05\u05A6\u02D4\x02\u1BFE\u1C03\x05\xCCg\x02\u1BFF" +
		"\u1C03\x05\u0376\u01BC\x02\u1C00\u1C03\x05\u0462\u0232\x02\u1C01\u1C03" +
		"\x05\u05B4\u02DB\x02\u1C02\u1BFE\x03\x02\x02\x02\u1C02\u1BFF\x03\x02\x02" +
		"\x02\u1C02\u1C00\x03\x02\x02\x02\u1C02\u1C01\x03\x02\x02\x02\u1C03\u1C06" +
		"\x03\x02\x02\x02\u1C04\u1C02\x03\x02\x02\x02\u1C04\u1C05\x03\x02\x02\x02" +
		"\u1C05\u1C07\x03\x02\x02\x02\u1C06\u1C04\x03\x02\x02\x02\u1C07\u1C08\x07" +
		"\x04\x02\x02\u1C08\u0595\x03\x02\x02\x02\u1C09\u1C0C\x07\u024C\x02\x02" +
		"\u1C0A\u1C0D\x05\u018A\xC6\x02\u1C0B\u1C0D\x05\u018E\xC8\x02\u1C0C\u1C0A" +
		"\x03\x02\x02\x02\u1C0C\u1C0B\x03\x02\x02\x02\u1C0D\u1C13\x03\x02\x02\x02" +
		"\u1C0E\u1C12\x05\x96L\x02\u1C0F\u1C12\x05\u0462\u0232\x02\u1C10\u1C12" +
		"\x05\u0472\u023A\x02\u1C11\u1C0E\x03\x02\x02\x02\u1C11\u1C0F\x03\x02\x02" +
		"\x02\u1C11\u1C10\x03\x02\x02\x02\u1C12\u1C15\x03\x02\x02\x02\u1C13\u1C11" +
		"\x03\x02\x02\x02\u1C13\u1C14\x03\x02\x02\x02\u1C14\u1C16\x03\x02\x02\x02" +
		"\u1C15\u1C13\x03\x02\x02\x02\u1C16\u1C17\x07\x04\x02\x02\u1C17\u0597\x03" +
		"\x02\x02\x02\u1C18\u1C19\x07\u024D\x02\x02\u1C19\u1C1A\x05\u059E\u02D0" +
		"\x02\u1C1A\u1C1F\x05\u05A8\u02D5\x02\u1C1B\u1C1E\x05\u0462\u0232\x02\u1C1C" +
		"\u1C1E\x05\u0376\u01BC\x02\u1C1D\u1C1B\x03\x02\x02\x02\u1C1D\u1C1C\x03" +
		"\x02\x02\x02\u1C1E\u1C21\x03\x02\x02\x02\u1C1F\u1C1D\x03\x02\x02\x02\u1C1F" +
		"\u1C20\x03\x02\x02\x02\u1C20\u1C22\x03\x02\x02\x02\u1C21\u1C1F\x03\x02" +
		"\x02\x02\u1C22\u1C23\x07\x04\x02\x02\u1C23\u0599\x03\x02\x02\x02\u1C24" +
		"\u1C25\x07\u024E\x02\x02\u1C25\u1C2B\x05\u018C\xC7\x02\u1C26\u1C2A\x05" +
		"\x96L\x02\u1C27\u1C2A\x05\u0462\u0232\x02\u1C28\u1C2A\x05\u0472\u023A" +
		"\x02\u1C29\u1C26\x03\x02\x02\x02\u1C29\u1C27\x03\x02\x02\x02\u1C29\u1C28" +
		"\x03\x02\x02\x02\u1C2A\u1C2D\x03\x02\x02\x02\u1C2B\u1C29\x03\x02\x02\x02" +
		"\u1C2B\u1C2C\x03\x02\x02\x02\u1C2C\u1C2E\x03\x02\x02\x02\u1C2D\u1C2B\x03" +
		"\x02\x02\x02\u1C2E\u1C2F\x07\x04\x02\x02\u1C2F\u059B\x03\x02\x02\x02\u1C30" +
		"\u1C31\x07\u024F\x02\x02\u1C31\u1C32\x05J&\x02\u1C32\u1C33\x07\x04\x02" +
		"\x02\u1C33\u059D\x03\x02\x02\x02\u1C34\u1C35\x05\u0370\u01B9\x02\u1C35" +
		"\u059F\x03\x02\x02\x02\u1C36\u1C37\x05\u037A\u01BE\x02\u1C37\u05A1\x03" +
		"\x02\x02\x02\u1C38\u1C39\x07\u0250\x02\x02\u1C39\u1C3A\x05\u05A0\u02D1" +
		"\x02\u1C3A\u1C3B\x07\x04\x02\x02\u1C3B\u05A3\x03\x02\x02\x02\u1C3C\u1C3D" +
		"\x07\u0251\x02\x02\u1C3D\u1C3E\x07\x04\x02\x02\u1C3E\u05A5\x03\x02\x02" +
		"\x02\u1C3F\u1C46\x07\u0252\x02\x02\u1C40\u1C45\x05\u020A\u0106\x02\u1C41" +
		"\u1C45\x05\u042E\u0218\x02\u1C42\u1C45\x05\u043E\u0220\x02\u1C43\u1C45" +
		"\x05\u0452\u022A\x02\u1C44\u1C40\x03\x02\x02\x02\u1C44\u1C41\x03\x02\x02" +
		"\x02\u1C44\u1C42\x03\x02\x02\x02\u1C44\u1C43\x03\x02\x02\x02\u1C45\u1C48" +
		"\x03\x02\x02\x02\u1C46\u1C44\x03\x02\x02\x02\u1C46\u1C47\x03\x02\x02\x02" +
		"\u1C47\u1C49\x03\x02\x02\x02\u1C48\u1C46\x03\x02\x02\x02\u1C49\u1C4A\x07" +
		"\x04\x02\x02\u1C4A\u05A7\x03\x02\x02\x02\u1C4B\u1C50\x07\u0253\x02\x02" +
		"\u1C4C\u1C4F\x05\u05A2\u02D2\x02\u1C4D\u1C4F\x05\u05B2\u02DA\x02\u1C4E" +
		"\u1C4C\x03\x02\x02\x02\u1C4E\u1C4D\x03\x02\x02\x02\u1C4F\u1C52\x03\x02" +
		"\x02\x02\u1C50\u1C4E\x03\x02\x02\x02\u1C50\u1C51\x03\x02\x02\x02\u1C51" +
		"\u1C53\x03\x02\x02\x02\u1C52\u1C50\x03\x02\x02\x02\u1C53\u1C54\x07\x04" +
		"\x02\x02\u1C54\u05A9\x03\x02\x02\x02\u1C55\u1C56\x07\u0254\x02\x02\u1C56" +
		"\u1C57\x05\u05B0\u02D9\x02\u1C57\u1C58\x05\u024E\u0128\x02\u1C58\u1C59" +
		"\x07\x04\x02\x02\u1C59\u05AB\x03\x02\x02\x02\u1C5A\u1C5B\x07\u0255\x02" +
		"\x02\u1C5B\u1C5C\x05J&\x02\u1C5C\u1C5D\x07\x04\x02\x02\u1C5D\u05AD\x03" +
		"\x02\x02\x02\u1C5E\u1C5F\x05\u0370\u01B9\x02\u1C5F\u05AF\x03\x02\x02\x02" +
		"\u1C60\u1C61\x05\u037A\u01BE\x02\u1C61\u05B1\x03\x02\x02\x02\u1C62\u1C63" +
		"\x07\u0256\x02\x02\u1C63\u1C64\x05\u05B0\u02D9\x02\u1C64\u1C65\x07\x04" +
		"\x02\x02\u1C65\u05B3\x03\x02\x02\x02\u1C66\u1C67\x07\u0257\x02\x02\u1C67" +
		"\u1C68\x05\u0280\u0141\x02\u1C68\u1C69\x07\x04\x02\x02\u1C69\u05B5\x03" +
		"\x02\x02\x02\u1C6A\u1C6B\x05\u0680\u0341\x02\u1C6B\u05B7\x03\x02\x02\x02" +
		"\u1C6C\u1C6D\x05\u0412\u020A\x02\u1C6D\u05B9";
	private static readonly _serializedATNSegment13: string =
		"\x03\x02\x02\x02\u1C6E\u1C75\x07\u0258\x02\x02\u1C6F\u1C74\x05\x96L\x02" +
		"\u1C70\u1C74\x05\xE0q\x02\u1C71\u1C74\x05\u0638\u031D\x02\u1C72\u1C74" +
		"\x05\u066E\u0338\x02\u1C73\u1C6F\x03\x02\x02\x02\u1C73\u1C70\x03\x02\x02" +
		"\x02\u1C73\u1C71\x03\x02\x02\x02\u1C73\u1C72\x03\x02\x02\x02\u1C74\u1C77" +
		"\x03\x02\x02\x02\u1C75\u1C73\x03\x02\x02\x02\u1C75\u1C76\x03\x02\x02\x02" +
		"\u1C76\u1C78\x03\x02\x02\x02\u1C77\u1C75\x03\x02\x02\x02\u1C78\u1C79\x07" +
		"\x04\x02\x02\u1C79\u05BB\x03\x02\x02\x02\u1C7A\u1C7B\x07\u0259\x02\x02" +
		"\u1C7B\u1C7C\x05\u0292\u014A\x02\u1C7C\u1C7D\x07\x04\x02\x02\u1C7D\u05BD" +
		"\x03\x02\x02\x02\u1C7E\u1C7F\x07\u025A\x02\x02\u1C7F\u1C80\x05\u05C8\u02E5" +
		"\x02\u1C80\u1C81\x07\x04\x02\x02\u1C81\u05BF\x03\x02\x02\x02\u1C82\u1C86" +
		"\x07\u025B\x02\x02\u1C83\u1C85\x05\u05C8\u02E5\x02\u1C84\u1C83\x03\x02" +
		"\x02\x02\u1C85\u1C88\x03\x02\x02\x02\u1C86\u1C84\x03\x02\x02\x02\u1C86" +
		"\u1C87\x03\x02\x02\x02\u1C87\u1C89\x03\x02\x02\x02\u1C88\u1C86\x03\x02" +
		"\x02\x02\u1C89\u1C8A\x07\x04\x02\x02\u1C8A\u05C1\x03\x02\x02\x02\u1C8B" +
		"\u1C8C\x07\u025C\x02\x02\u1C8C\u1C8D\x05\xD6l\x02\u1C8D\u1C8E\x05\u0680" +
		"\u0341\x02\u1C8E\u1C8F\x07\x04\x02\x02\u1C8F\u05C3\x03\x02\x02\x02\u1C90" +
		"\u1C91\x07\u025D\x02\x02\u1C91\u1C92\x05\xD8m\x02\u1C92\u1C93\x07\x04" +
		"\x02\x02\u1C93\u05C5\x03\x02\x02\x02\u1C94\u1C95\x07\u025E\x02\x02\u1C95" +
		"\u1C96\x05\u01AA\xD6\x02\u1C96\u1C97\x05\u0578\u02BD\x02\u1C97\u1C98\x07" +
		"\x04\x02\x02\u1C98\u05C7\x03\x02\x02\x02\u1C99\u1CA2\x05\u05D0\u02E9\x02" +
		"\u1C9A\u1CA2\x05\u0680\u0341\x02\u1C9B\u1CA2\x05\u05C4\u02E3\x02\u1C9C" +
		"\u1CA2\x05\u05C0\u02E1\x02\u1C9D\u1CA2\x05\u05DC\u02EF\x02\u1C9E\u1CA2" +
		"\x05\u0108\x85\x02\u1C9F\u1CA2\x05\u05D2\u02EA\x02\u1CA0\u1CA2\x05\u05D4" +
		"\u02EB\x02\u1CA1\u1C99\x03\x02\x02\x02\u1CA1\u1C9A\x03\x02\x02\x02\u1CA1" +
		"\u1C9B\x03\x02\x02\x02\u1CA1\u1C9C\x03\x02\x02\x02\u1CA1\u1C9D\x03\x02" +
		"\x02\x02\u1CA1\u1C9E\x03\x02\x02\x02\u1CA1\u1C9F\x03\x02\x02\x02\u1CA1" +
		"\u1CA0\x03\x02\x02\x02\u1CA2\u05C9\x03\x02\x02\x02\u1CA3\u1CA4\x07\u025F" +
		"\x02\x02\u1CA4\u1CA5\x05\u05C8\u02E5\x02\u1CA5\u1CA6\x07\x04\x02\x02\u1CA6" +
		"\u05CB\x03\x02\x02\x02\u1CA7\u1CA8\x07\u0260\x02\x02\u1CA8\u1CAD\x05\u03F4" +
		"\u01FB\x02\u1CA9\u1CAC\x05\u0376\u01BC\x02\u1CAA\u1CAC\x05\u05BE\u02E0" +
		"\x02\u1CAB\u1CA9\x03\x02\x02\x02\u1CAB\u1CAA\x03\x02\x02\x02\u1CAC\u1CAF" +
		"\x03\x02\x02\x02\u1CAD\u1CAB\x03\x02\x02\x02\u1CAD\u1CAE\x03\x02\x02\x02" +
		"\u1CAE\u1CB0\x03\x02\x02\x02\u1CAF\u1CAD\x03\x02\x02\x02\u1CB0\u1CB1\x07" +
		"\x04\x02\x02\u1CB1\u05CD\x03\x02\x02\x02\u1CB2\u1CB3\x07\u0261\x02\x02" +
		"\u1CB3\u1CB4\x05\u03F8\u01FD\x02\u1CB4\u1CB5\x05\u05C8\u02E5\x02\u1CB5" +
		"\u1CB6\x07\x04\x02\x02\u1CB6\u05CF\x03\x02\x02\x02\u1CB7\u1CB8\x07\u0262" +
		"\x02\x02\u1CB8\u1CB9\x05\u03F8\u01FD\x02\u1CB9\u1CBA\x07\x04\x02\x02\u1CBA" +
		"\u05D1\x03\x02\x02\x02\u1CBB\u1CBC\x07\u0263\x02\x02\u1CBC\u1CBD\x05\u05C8" +
		"\u02E5\x02\u1CBD\u1CBE\x05\u05DE\u02F0\x02\u1CBE\u1CBF\x07\x04\x02\x02" +
		"\u1CBF\u05D3\x03\x02\x02\x02\u1CC0\u1CC1\x07\u0264\x02\x02\u1CC1\u1CC2" +
		"\x05\u05C8\u02E5\x02\u1CC2\u1CC3\x05\u05E0\u02F1\x02\u1CC3\u1CC4\x07\x04" +
		"\x02\x02\u1CC4\u05D5\x03\x02\x02\x02\u1CC5\u1CC6\x05\u0680\u0341\x02\u1CC6" +
		"\u05D7\x03\x02\x02\x02\u1CC7\u1CC8\x07\u0265\x02\x02\u1CC8\u1CC9\x05\u033C" +
		"\u019F\x02\u1CC9\u1CCA\x07\x04\x02\x02\u1CCA\u05D9\x03\x02\x02\x02\u1CCB" +
		"\u1CCC\x05\u067E\u0340\x02\u1CCC\u05DB\x03\x02\x02\x02\u1CCD\u1CCE\x07" +
		"\u0266\x02\x02\u1CCE\u1CCF\x05\u05C8\u02E5\x02\u1CCF\u1CD0\x05\u05DE\u02F0" +
		"\x02\u1CD0\u1CD1\x05\u05E0\u02F1\x02\u1CD1\u1CD2\x07\x04\x02\x02\u1CD2" +
		"\u05DD\x03\x02\x02\x02\u1CD3\u1CD4\x05\u0280\u0141\x02\u1CD4\u05DF\x03" +
		"\x02\x02\x02\u1CD5\u1CD6\x05\u0280\u0141\x02\u1CD6\u05E1\x03\x02\x02\x02" +
		"\u1CD7\u1CD8\x05\u0280\u0141\x02\u1CD8\u05E3\x03\x02\x02\x02\u1CD9\u1CE0" +
		"\x07\u0267\x02\x02\u1CDA\u1CDF\x05\u0582\u02C2\x02\u1CDB\u1CDF\x05\u0584" +
		"\u02C3\x02\u1CDC\u1CDF\x05\u0588\u02C5\x02\u1CDD\u1CDF\x05\u058C\u02C7" +
		"\x02\u1CDE\u1CDA\x03\x02\x02\x02\u1CDE\u1CDB\x03\x02\x02\x02\u1CDE\u1CDC" +
		"\x03\x02\x02\x02\u1CDE\u1CDD\x03\x02\x02\x02\u1CDF\u1CE2\x03\x02\x02\x02" +
		"\u1CE0\u1CDE\x03\x02\x02\x02\u1CE0\u1CE1\x03\x02\x02\x02\u1CE1\u1CE3\x03" +
		"\x02\x02\x02\u1CE2\u1CE0\x03\x02\x02\x02\u1CE3\u1CE4\x07\x04\x02\x02\u1CE4" +
		"\u05E5\x03\x02\x02\x02\u1CE5\u1CE6\x07\u0268\x02\x02\u1CE6\u1CEB\x05\u064E" +
		"\u0328\x02\u1CE7\u1CEA\x05\x96L\x02\u1CE8\u1CEA\x05\u0638\u031D\x02\u1CE9" +
		"\u1CE7\x03\x02\x02\x02\u1CE9\u1CE8\x03\x02\x02\x02\u1CEA\u1CED\x03\x02" +
		"\x02\x02\u1CEB\u1CE9\x03\x02\x02\x02\u1CEB\u1CEC\x03\x02\x02\x02\u1CEC" +
		"\u1CEF\x03\x02\x02\x02\u1CED\u1CEB\x03\x02\x02\x02\u1CEE\u1CF0\x05\u0376" +
		"\u01BC\x02\u1CEF\u1CEE\x03\x02\x02\x02\u1CEF\u1CF0\x03\x02\x02\x02\u1CF0" +
		"\u1CF5\x03\x02\x02\x02\u1CF1\u1CF4\x05\x96L\x02\u1CF2\u1CF4\x05\u0638" +
		"\u031D\x02\u1CF3\u1CF1\x03\x02\x02\x02\u1CF3\u1CF2\x03\x02\x02\x02\u1CF4" +
		"\u1CF7\x03\x02\x02\x02\u1CF5\u1CF3\x03\x02\x02\x02\u1CF5\u1CF6\x03\x02" +
		"\x02\x02\u1CF6\u1CF8\x03\x02\x02\x02\u1CF7\u1CF5\x03\x02\x02\x02\u1CF8" +
		"\u1CF9\x07\x04\x02\x02\u1CF9\u05E7\x03\x02\x02\x02\u1CFA\u1CFB\x05\u0370" +
		"\u01B9\x02\u1CFB\u05E9\x03\x02\x02\x02\u1CFC\u1CFD\x05\u037A\u01BE\x02" +
		"\u1CFD\u05EB\x03\x02\x02\x02\u1CFE\u1CFF\x07\u0269\x02\x02\u1CFF\u1D06" +
		"\x05\u0408\u0205\x02\u1D00\u1D05\x05\x96L\x02\u1D01\u1D05\x05\u019A\xCE" +
		"\x02\u1D02\u1D05\x05\u032E\u0198\x02\u1D03\u1D05\x05\u0638\u031D\x02\u1D04" +
		"\u1D00\x03\x02\x02\x02\u1D04\u1D01\x03\x02\x02\x02\u1D04\u1D02\x03\x02" +
		"\x02\x02\u1D04\u1D03\x03\x02\x02\x02\u1D05\u1D08\x03\x02\x02\x02\u1D06" +
		"\u1D04\x03\x02\x02\x02\u1D06\u1D07\x03\x02\x02\x02\u1D07\u1D09\x03\x02" +
		"\x02\x02\u1D08\u1D06\x03\x02\x02\x02\u1D09\u1D0A\x07\x04\x02\x02\u1D0A" +
		"\u05ED\x03\x02\x02\x02\u1D0B\u1D0C\x07\u026A\x02\x02\u1D0C\u1D0D\x05\u0308" +
		"\u0185\x02\u1D0D\u1D0E\x07\x04\x02\x02\u1D0E\u05EF\x03\x02\x02\x02\u1D0F" +
		"\u1D10\x05\u039A\u01CE\x02\u1D10\u05F1\x03\x02\x02\x02\u1D11\u1D12\x07" +
		"\u026B\x02\x02\u1D12\u1D13\x05\u0224\u0113\x02\u1D13\u1D14\x05\u035E\u01B0" +
		"\x02\u1D14\u1D15\x05\u0576\u02BC\x02\u1D15\u1D16\x07\x04\x02\x02\u1D16" +
		"\u05F3\x03\x02\x02\x02\u1D17\u1D18\x05\u05FA\u02FE\x02\u1D18\u05F5\x03" +
		"\x02\x02\x02\u1D19\u1D1C\x07\u026C\x02\x02\u1D1A\u1D1D\x05\u0174\xBB\x02" +
		"\u1D1B\u1D1D\x05\u03A4\u01D3\x02\u1D1C\u1D1A\x03\x02\x02\x02\u1D1C\u1D1B" +
		"\x03\x02\x02\x02\u1D1D\u1D21\x03\x02\x02\x02\u1D1E\u1D22\x05\u0174\xBB" +
		"\x02\u1D1F\u1D22\x05\u03A4\u01D3\x02\u1D20\u1D22\x05\u015C\xAF\x02\u1D21" +
		"\u1D1E\x03\x02\x02\x02\u1D21\u1D1F\x03\x02\x02\x02\u1D21\u1D20\x03\x02" +
		"\x02\x02\u1D22\u1D23\x03\x02\x02\x02\u1D23\u1D24\x07\x04\x02\x02\u1D24" +
		"\u05F7\x03\x02\x02\x02\u1D25\u1D26\x07\u026D\x02\x02\u1D26\u1D27\x05\xF4" +
		"{\x02\u1D27\u1D28\x05\u05F2\u02FA\x02\u1D28\u1D29\x07\x04\x02\x02\u1D29" +
		"\u05F9\x03\x02\x02\x02\u1D2A\u1D2B\x05\u035A\u01AE\x02\u1D2B\u05FB\x03" +
		"\x02\x02\x02\u1D2C\u1D2D\x07\u026E\x02\x02\u1D2D\u1D2E\x05\u0600\u0301" +
		"\x02\u1D2E\u1D36\x05\u0114\x8B\x02\u1D2F\u1D35\x05\x96L\x02\u1D30\u1D35" +
		"\x05\u01C6\xE4\x02\u1D31\u1D35\x05\u03FC\u01FF\x02\u1D32\u1D35\x05\u0462" +
		"\u0232\x02\u1D33\u1D35\x05\u0638\u031D\x02\u1D34\u1D2F\x03\x02\x02\x02" +
		"\u1D34\u1D30\x03\x02\x02\x02\u1D34\u1D31\x03\x02\x02\x02\u1D34\u1D32\x03" +
		"\x02\x02\x02\u1D34\u1D33\x03\x02\x02\x02\u1D35\u1D38\x03\x02\x02\x02\u1D36" +
		"\u1D34\x03\x02\x02\x02\u1D36\u1D37\x03\x02\x02\x02\u1D37\u1D39\x03\x02" +
		"\x02\x02\u1D38\u1D36\x03\x02\x02\x02\u1D39\u1D3A\x07\x04\x02\x02\u1D3A" +
		"\u05FD\x03\x02\x02\x02\u1D3B\u1D3C\x07\u026F\x02\x02\u1D3C\u1D40\x05\u0602" +
		"\u0302\x02\u1D3D\u1D3F\x05\u0134\x9B\x02\u1D3E\u1D3D\x03\x02\x02\x02\u1D3F" +
		"\u1D42\x03\x02\x02\x02\u1D40\u1D3E\x03\x02\x02\x02\u1D40\u1D41\x03\x02" +
		"\x02\x02\u1D41\u1D43\x03\x02\x02\x02\u1D42\u1D40\x03\x02\x02\x02\u1D43" +
		"\u1D44\x07\x04\x02\x02\u1D44\u05FF\x03\x02\x02\x02\u1D45\u1D46\x05\u0370" +
		"\u01B9\x02\u1D46\u0601\x03\x02\x02\x02\u1D47\u1D48\x05\u037A\u01BE\x02" +
		"\u1D48\u0603\x03\x02\x02\x02\u1D49\u1D4A\x05\u067E\u0340\x02\u1D4A\u0605" +
		"\x03\x02\x02\x02\u1D4B\u1D4C\x07\u0270\x02\x02\u1D4C\u1D4D\x07\x04\x02" +
		"\x02\u1D4D\u0607\x03\x02\x02\x02\u1D4E\u1D4F\x07\u0271\x02\x02\u1D4F\u1D50" +
		"\x05\u067E\u0340\x02\u1D50\u1D51\x07\x04\x02\x02\u1D51\u0609\x03\x02\x02" +
		"\x02\u1D52\u1D56\x07\u0272\x02\x02\u1D53\u1D57\x05\x0E\b\x02\u1D54\u1D57" +
		"\x05\u048A\u0246\x02\u1D55\u1D57\x05\u0484\u0243\x02\u1D56\u1D53\x03\x02" +
		"\x02\x02\u1D56\u1D54\x03\x02\x02\x02\u1D56\u1D55\x03\x02\x02\x02\u1D57" +
		"\u1D58\x03\x02\x02\x02\u1D58\u1D59\x07\x04\x02\x02\u1D59\u060B\x03\x02" +
		"\x02\x02\u1D5A\u1D61\x07\u0273\x02\x02\u1D5B\u1D60\x05\u03AC\u01D7\x02" +
		"\u1D5C\u1D60\x05\u049A\u024E\x02\u1D5D\u1D60\x05\u04A2\u0252\x02\u1D5E" +
		"\u1D60\x05\u04A4\u0253\x02\u1D5F\u1D5B\x03\x02\x02\x02\u1D5F\u1D5C\x03" +
		"\x02\x02\x02\u1D5F\u1D5D\x03\x02\x02\x02\u1D5F\u1D5E\x03\x02\x02\x02\u1D60" +
		"\u1D63\x03\x02\x02\x02\u1D61\u1D5F\x03\x02\x02\x02\u1D61\u1D62\x03\x02" +
		"\x02\x02\u1D62\u1D64\x03\x02\x02\x02\u1D63\u1D61\x03\x02\x02\x02\u1D64" +
		"\u1D65\x07\x04\x02\x02\u1D65\u060D\x03\x02\x02\x02\u1D66\u1D67\x07\u0274" +
		"\x02\x02\u1D67\u1D68\x05\u045A\u022E\x02\u1D68\u1D69\x05\u0458\u022D\x02" +
		"\u1D69\u1D6A\x07\x04\x02\x02\u1D6A\u060F\x03\x02\x02\x02\u1D6B\u1D6C\x07" +
		"\u0275\x02\x02\u1D6C\u1D6D\x07\x04\x02\x02\u1D6D\u0611\x03\x02\x02\x02" +
		"\u1D6E\u1D6F\x07\u0276\x02\x02\u1D6F\u1D70\x07\x04\x02\x02\u1D70\u0613" +
		"\x03\x02\x02\x02\u1D71\u1D78\x05:\x1E\x02\u1D72\u1D78\x05\u0278\u013D" +
		"\x02\u1D73\u1D78\x05\u0358\u01AD\x02\u1D74\u1D78\x05\u038C\u01C7\x02\u1D75" +
		"\u1D78\x05\u040E\u0208\x02\u1D76\u1D78\x05\u05BE\u02E0\x02\u1D77\u1D71" +
		"\x03\x02\x02\x02\u1D77\u1D72\x03\x02\x02\x02\u1D77\u1D73\x03\x02\x02\x02" +
		"\u1D77\u1D74\x03\x02\x02\x02\u1D77\u1D75\x03\x02\x02\x02\u1D77\u1D76\x03" +
		"\x02\x02\x02\u1D78\u0615\x03\x02\x02\x02\u1D79\u1D7A\x07\u0277\x02\x02" +
		"\u1D7A\u1D7C\x05\u01B6\xDC\x02\u1D7B\u1D7D\x05\u0618\u030D\x02\u1D7C\u1D7B" +
		"\x03\x02\x02\x02\u1D7C\u1D7D\x03\x02\x02\x02\u1D7D\u1D7E\x03\x02\x02\x02" +
		"\u1D7E\u1D7F\x07\x04\x02\x02\u1D7F\u0617\x03\x02\x02\x02\u1D80\u1D81\x07" +
		"\u0278\x02\x02\u1D81\u1D82\x05\u0680\u0341\x02\u1D82\u1D83\x07\x04\x02" +
		"\x02\u1D83\u0619\x03\x02\x02\x02\u1D84\u1D85\x07\u0279\x02\x02\u1D85\u1D86" +
		"\x07\x04\x02\x02\u1D86\u061B\x03\x02\x02\x02\u1D87\u1D88\x07\u027A\x02" +
		"\x02\u1D88\u1D89\x07\x04\x02\x02\u1D89\u061D\x03\x02\x02\x02\u1D8A\u1D8B" +
		"\x07\u027B\x02\x02\u1D8B\u1D8C\x07\x04\x02\x02\u1D8C\u061F\x03\x02\x02" +
		"\x02\u1D8D\u1D8E\x07\u027C\x02\x02\u1D8E\u1D8F\x05\u0626\u0314\x02\u1D8F" +
		"\u1D90\x05\u0392\u01CA\x02\u1D90\u1DA8\x05\u0390\u01C9\x02\u1D91\u1DA7" +
		"\x05\x10\t\x02\u1D92\u1DA7\x05X-\x02\u1D93\u1DA7\x05l7\x02\u1D94\u1DA7" +
		"\x05\xE6t\x02\u1D95\u1DA7\x05\u010E\x88\x02\u1D96\u1DA7\x05\u0192\xCA" +
		"\x02\u1D97\u1DA7\x05\u0196\xCC\x02\u1D98\u1DA7\x05\u0210\u0109\x02\u1D99" +
		"\u1DA7\x05\u0212\u010A\x02\u1D9A\u1DA7\x05\u02C6\u0164\x02\u1D9B\u1DA7" +
		"\x05\u02FC\u017F\x02\u1D9C\u1DA7\x05\u0300\u0181\x02\u1D9D\u1DA7\x05\u0350" +
		"\u01A9\x02\u1D9E\u1DA7\x05\u0364\u01B3\x02\u1D9F\u1DA7\x05\u03A6\u01D4" +
		"\x02\u1DA0\u1DA7\x05\u047C\u023F\x02\u1DA1\u1DA7\x05\u0572\u02BA\x02\u1DA2" +
		"\u1DA7\x05\u0592\u02CA\x02\u1DA3\u1DA7\x05\u065C\u032F\x02\u1DA4\u1DA7" +
		"\x05\u0662\u0332\x02\u1DA5\u1DA7\x05\u0668\u0335\x02\u1DA6\u1D91\x03\x02" +
		"\x02\x02\u1DA6\u1D92\x03\x02\x02\x02\u1DA6\u1D93\x03\x02\x02\x02\u1DA6" +
		"\u1D94\x03\x02\x02\x02\u1DA6\u1D95\x03\x02\x02\x02\u1DA6\u1D96\x03\x02" +
		"\x02\x02\u1DA6\u1D97\x03\x02\x02\x02\u1DA6\u1D98\x03\x02\x02\x02\u1DA6" +
		"\u1D99\x03\x02\x02\x02\u1DA6\u1D9A\x03\x02\x02\x02\u1DA6\u1D9B\x03\x02" +
		"\x02\x02\u1DA6\u1D9C\x03\x02\x02\x02\u1DA6\u1D9D\x03\x02\x02\x02\u1DA6" +
		"\u1D9E\x03\x02\x02\x02\u1DA6\u1D9F\x03\x02\x02\x02\u1DA6\u1DA0\x03\x02" +
		"\x02\x02\u1DA6\u1DA1\x03\x02\x02\x02\u1DA6\u1DA2\x03\x02\x02\x02\u1DA6" +
		"\u1DA3\x03\x02\x02\x02\u1DA6\u1DA4\x03\x02\x02\x02\u1DA6\u1DA5\x03\x02" +
		"\x02\x02\u1DA7\u1DAA\x03\x02\x02\x02\u1DA8\u1DA6\x03\x02\x02\x02\u1DA8" +
		"\u1DA9\x03\x02\x02\x02\u1DA9\u1DAB\x03\x02\x02\x02\u1DAA\u1DA8\x03\x02" +
		"\x02\x02\u1DAB\u1DAC\x07\x04\x02\x02\u1DAC\u0621\x03\x02\x02\x02\u1DAD" +
		"\u1DB1\x07\u027D\x02\x02\u1DAE\u1DB0\x05\u0620\u0311\x02\u1DAF\u1DAE\x03" +
		"\x02\x02\x02\u1DB0\u1DB3\x03\x02\x02\x02\u1DB1\u1DAF\x03\x02\x02\x02\u1DB1" +
		"\u1DB2\x03\x02\x02\x02\u1DB2\u1DB4\x03\x02\x02\x02\u1DB3\u1DB1\x03\x02" +
		"\x02\x02\u1DB4\u1DB5\x07\x04\x02\x02\u1DB5\u0623\x03\x02\x02\x02\u1DB6" +
		"\u1DB7\x05\u04A0\u0251\x02\u1DB7\u0625\x03\x02\x02\x02\u1DB8\u1DB9\x05" +
		"\u0370\u01B9\x02\u1DB9\u0627\x03\x02\x02\x02\u1DBA\u1DBB\x05\u037A\u01BE" +
		"\x02\u1DBB\u0629\x03\x02\x02\x02\u1DBC\u1DBD\x07\u027E\x02\x02\u1DBD\u1DBE" +
		"\x05\u0628\u0315\x02\u1DBE\u1DBF\x07\x04\x02\x02\u1DBF\u062B\x03\x02\x02" +
		"\x02\u1DC0\u1DC1\x07\u027F\x02\x02\u1DC1\u1DC2\x07\x04\x02\x02\u1DC2\u062D" +
		"\x03\x02\x02\x02\u1DC3\u1DC4\x07\u0280\x02\x02\u1DC4\u1DC5\x07\x04\x02" +
		"\x02\u1DC5\u062F\x03\x02\x02\x02\u1DC6\u1DC7\x07\u0281\x02\x02\u1DC7\u1DC8" +
		"\x07\x04\x02\x02\u1DC8\u0631\x03\x02\x02\x02\u1DC9\u1DCA\x07\u0282\x02" +
		"\x02\u1DCA\u1DCB\x07\x04\x02\x02\u1DCB\u0633\x03\x02\x02\x02\u1DCC\u1DCD" +
		"\x07\u0283\x02\x02\u1DCD\u1DCE\x07\x04\x02\x02\u1DCE\u0635\x03\x02\x02" +
		"\x02\u1DCF\u1DD3\x07\u0284\x02\x02\u1DD0\u1DD2\x05\u0480\u0241\x02\u1DD1" +
		"\u1DD0\x03\x02\x02\x02\u1DD2\u1DD5\x03\x02\x02\x02\u1DD3\u1DD1\x03\x02" +
		"\x02\x02\u1DD3\u1DD4\x03\x02\x02\x02\u1DD4\u1DD6\x03\x02\x02\x02\u1DD5" +
		"\u1DD3\x03\x02\x02\x02\u1DD6\u1DD7\x07\x04\x02\x02\u1DD7\u0637\x03\x02" +
		"\x02\x02\u1DD8\u1DD9\x07\u0285\x02\x02\u1DD9\u1DE0\x05\u063A\u031E\x02" +
		"\u1DDA\u1DDF\x07\u029D\x02\x02\u1DDB\u1DDF\x05\u067E\u0340\x02\u1DDC\u1DDF" +
		"\x05\u0680\u0341\x02\u1DDD\u1DDF\x05\u0638\u031D\x02\u1DDE\u1DDA\x03\x02" +
		"\x02\x02\u1DDE\u1DDB\x03\x02\x02\x02\u1DDE\u1DDC\x03\x02\x02\x02\u1DDE" +
		"\u1DDD\x03\x02\x02\x02\u1DDF\u1DE2\x03\x02\x02\x02\u1DE0\u1DDE\x03\x02" +
		"\x02\x02\u1DE0\u1DE1\x03\x02\x02\x02\u1DE1\u1DE3\x03\x02\x02\x02\u1DE2" +
		"\u1DE0\x03\x02\x02\x02\u1DE3\u1DE4\x07\x04\x02\x02\u1DE4\u0639\x03\x02" +
		"\x02\x02\u1DE5\u1DE6\x07\u029D\x02\x02\u1DE6\u063B\x03\x02\x02\x02\u1DE7" +
		"\u1DE8\x07\u0286\x02\x02\u1DE8\u1DE9\x05\u05D6\u02EC\x02\u1DE9\u1DEA\x07" +
		"\x04\x02\x02\u1DEA\u063D\x03\x02\x02\x02\u1DEB\u1DF1\x07\u0287\x02\x02" +
		"\u1DEC\u1DF2\x05T+\x02\u1DED\u1DF2\x05(\x15\x02\u1DEE\u1DF2\x05\u0352" +
		"\u01AA\x02\u1DEF\u1DF2\x05\\/\x02\u1DF0\u1DF2\x05\u0606\u0304\x02\u1DF1" +
		"\u1DEC\x03\x02\x02\x02\u1DF1\u1DED\x03\x02\x02\x02\u1DF1\u1DEE\x03\x02" +
		"\x02\x02\u1DF1\u1DEF\x03\x02\x02\x02\u1DF1\u1DF0\x03\x02\x02\x02\u1DF2" +
		"\u1DF3\x03\x02\x02\x02\u1DF3\u1DF4\x07\x04\x02\x02\u1DF4\u063F\x03\x02" +
		"\x02\x02\u1DF5\u1DF6\x07\u0288\x02\x02\u1DF6\u1DF7\x05\u0646\u0324\x02" +
		"\u1DF7\u1DFE\x05\u0642\u0322\x02\u1DF8\u1DFD\x05\x96L\x02\u1DF9\u1DFD" +
		"\x05\u0638\u031D\x02\u1DFA\u1DFD\x05\u064A\u0326\x02\u1DFB\u1DFD\x05\u0658" +
		"\u032D\x02\u1DFC\u1DF8\x03\x02\x02\x02\u1DFC\u1DF9\x03\x02\x02\x02\u1DFC" +
		"\u1DFA\x03\x02\x02\x02\u1DFC\u1DFB\x03\x02\x02\x02\u1DFD\u1E00\x03\x02" +
		"\x02\x02\u1DFE\u1DFC\x03\x02\x02\x02\u1DFE\u1DFF\x03\x02\x02\x02\u1DFF" +
		"\u1E01\x03\x02\x02\x02\u1E00\u1DFE\x03\x02\x02\x02\u1E01\u1E02\x07\x04" +
		"\x02\x02\u1E02\u0641\x03\x02\x02\x02\u1E03\u1E0A\x07\u0289\x02\x02\u1E04" +
		"\u1E09\x05\u0142\xA2\x02\u1E05\u1E09\x05\u0376\u01BC\x02\u1E06\u1E09\x05" +
		"\u0462\u0232\x02\u1E07\u1E09\x05\u047E\u0240\x02\u1E08\u1E04\x03\x02\x02" +
		"\x02\u1E08\u1E05\x03\x02\x02\x02\u1E08\u1E06\x03\x02\x02\x02\u1E08\u1E07" +
		"\x03\x02\x02\x02\u1E09\u1E0C\x03\x02\x02\x02\u1E0A\u1E08\x03\x02\x02\x02" +
		"\u1E0A\u1E0B\x03\x02\x02\x02\u1E0B\u1E0D\x03\x02\x02\x02\u1E0C\u1E0A\x03" +
		"\x02\x02\x02\u1E0D\u1E0E\x07\x04\x02\x02\u1E0E\u0643\x03\x02\x02\x02\u1E0F" +
		"\u1E10\x07\u028A\x02\x02\u1E10\u1E11\x05J&\x02\u1E11\u1E12\x07\x04\x02" +
		"\x02\u1E12\u0645\x03\x02\x02\x02\u1E13\u1E14\x05\u0370\u01B9\x02\u1E14" +
		"\u0647\x03\x02\x02\x02\u1E15\u1E16\x05\u037A\u01BE\x02\u1E16\u0649\x03" +
		"\x02\x02\x02\u1E17\u1E18\x07\u028B\x02\x02\u1E18\u1E19\x05\u0648\u0325" +
		"\x02\u1E19\u1E1A\x07\x04\x02\x02\u1E1A\u064B\x03\x02\x02\x02\u1E1B\u1E1C" +
		"\x07\u028C\x02\x02\u1E1C\u1E1D\x05J&\x02\u1E1D\u1E1E\x07\x04\x02\x02\u1E1E" +
		"\u064D\x03\x02\x02\x02\u1E1F\u1E20\x05\u0370\u01B9\x02\u1E20\u064F\x03" +
		"\x02\x02\x02\u1E21\u1E26\x07\u028D\x02\x02\u1E22\u1E25\x05\u0134\x9B\x02" +
		"\u1E23\u1E25\x05\u013A\x9E\x02\u1E24\u1E22\x03\x02\x02\x02\u1E24\u1E23" +
		"\x03\x02\x02\x02\u1E25\u1E28\x03\x02\x02\x02\u1E26\u1E24\x03\x02\x02\x02" +
		"\u1E26\u1E27\x03\x02\x02\x02\u1E27\u1E29\x03\x02\x02\x02\u1E28\u1E26\x03" +
		"\x02\x02\x02\u1E29\u1E2A\x07\x04\x02\x02\u1E2A\u0651\x03\x02\x02\x02\u1E2B" +
		"\u1E2C\x05\u037A\u01BE\x02\u1E2C\u0653\x03\x02\x02\x02\u1E2D\u1E2E\x07" +
		"\u028E\x02\x02\u1E2E\u1E33\x05\u0470\u0239\x02\u1E2F\u1E32\x05\u0134\x9B" +
		"\x02\u1E30\u1E32\x05\u046E\u0238\x02\u1E31\u1E2F\x03\x02\x02\x02\u1E31" +
		"\u1E30\x03\x02\x02\x02\u1E32\u1E35\x03\x02\x02\x02\u1E33\u1E31\x03\x02" +
		"\x02\x02\u1E33\u1E34\x03\x02\x02\x02\u1E34\u1E36\x03\x02\x02\x02\u1E35" +
		"\u1E33\x03\x02\x02\x02\u1E36\u1E37\x07\x04\x02\x02\u1E37\u0655\x03\x02" +
		"\x02\x02\u1E38\u1E39\x07\u028F\x02\x02\u1E39\u1E3C\x05\u0470\u0239\x02" +
		"\u1E3A\u1E3D\x05\u0614\u030B\x02\u1E3B\u1E3D\x05\u0632\u031A\x02\u1E3C" +
		"\u1E3A\x03\x02\x02\x02\u1E3C\u1E3B\x03\x02\x02\x02\u1E3D\u1E43\x03\x02" +
		"\x02\x02\u1E3E\u1E42\x05\x96L\x02\u1E3F\u1E42\x05\u01AC\xD7\x02\u1E40" +
		"\u1E42\x05\u0472\u023A\x02\u1E41\u1E3E\x03\x02\x02\x02\u1E41\u1E3F\x03" +
		"\x02\x02\x02\u1E41\u1E40\x03\x02\x02\x02\u1E42\u1E45\x03\x02\x02\x02\u1E43" +
		"\u1E41\x03\x02\x02\x02\u1E43\u1E44\x03\x02\x02\x02\u1E44\u1E46\x03\x02" +
		"\x02\x02\u1E45\u1E43\x03\x02\x02\x02\u1E46\u1E47\x07\x04\x02\x02\u1E47" +
		"\u0657\x03\x02\x02\x02\u1E48\u1E49\x07\u0290\x02\x02\u1E49\u1E4B\x05\u0652" +
		"\u032A\x02\u1E4A\u1E4C\x05\x92J\x02\u1E4B\u1E4A\x03\x02\x02\x02\u1E4B" +
		"\u1E4C\x03\x02\x02\x02\u1E4C\u1E4D\x03\x02\x02\x02\u1E4D\u1E4E\x07\x04" +
		"\x02\x02\u1E4E\u0659\x03\x02\x02\x02\u1E4F\u1E50\x07\u0291\x02\x02\u1E50" +
		"\u1E51\x05L\'\x02\u1E51\u1E52\x07\x04\x02\x02\u1E52\u065B\x03\x02\x02" +
		"\x02\u1E53\u1E54\x07\u0292\x02\x02\u1E54\u1E55\x05\u0624\u0313\x02\u1E55" +
		"\u1E56\x07\x04\x02\x02\u1E56\u065D\x03\x02\x02\x02\u1E57\u1E58\x07\u0293" +
		"\x02\x02\u1E58\u1E59\x05\u0660\u0331\x02\u1E59\u1E5A\x07\x04\x02\x02\u1E5A" +
		"\u065F\x03\x02\x02\x02\u1E5B\u1E5C\x05\u035A\u01AE\x02\u1E5C\u0661\x03" +
		"\x02\x02\x02\u1E5D\u1E5E\x07\u0294\x02\x02\u1E5E\u1E5F\x05\u0624\u0313" +
		"\x02\u1E5F\u1E60\x07\x04\x02\x02\u1E60\u0663\x03\x02\x02\x02\u1E61\u1E62" +
		"\x07\u0295\x02\x02\u1E62\u1E63\x05\u033C\u019F\x02\u1E63\u1E64\x07\x04" +
		"\x02\x02\u1E64\u0665\x03\x02\x02\x02\u1E65\u1E6A\x07\u0296\x02\x02\u1E66" +
		"\u1E69\x05\u02B2\u015A\x02\u1E67\u1E69\x05\u0452\u022A\x02\u1E68\u1E66" +
		"\x03\x02\x02\x02\u1E68\u1E67\x03\x02\x02\x02\u1E69\u1E6C\x03\x02\x02\x02" +
		"\u1E6A\u1E68\x03\x02\x02\x02\u1E6A\u1E6B\x03\x02\x02\x02\u1E6B\u1E6D\x03" +
		"\x02\x02\x02\u1E6C\u1E6A\x03\x02\x02\x02\u1E6D\u1E6E\x07\x04\x02\x02\u1E6E" +
		"\u0667\x03\x02\x02\x02\u1E6F\u1E70\x07\u0297\x02\x02\u1E70\u1E71\x05\u0624" +
		"\u0313\x02\u1E71\u1E72\x07\x04\x02\x02\u1E72\u0669\x03\x02\x02\x02\u1E73" +
		"\u1E74\x07\u0298\x02\x02\u1E74\u1E75\x07\x04\x02\x02\u1E75\u066B\x03\x02" +
		"\x02\x02\u1E76\u1E77\x07\u0299\x02\x02\u1E77\u1E78\x07\x04\x02\x02\u1E78" +
		"\u066D\x03\x02\x02\x02\u1E79\u1E7A\x07\u029A\x02\x02\u1E7A\u1E82\x05\u05F8" +
		"\u02FD\x02\u1E7B\u1E81\x05$\x13\x02\u1E7C\u1E81\x05\x96L\x02\u1E7D\u1E81" +
		"\x05\xF2z\x02\u1E7E\u1E81\x05\u0460\u0231\x02\u1E7F\u1E81\x05\u0638\u031D" +
		"\x02\u1E80\u1E7B\x03\x02\x02\x02\u1E80\u1E7C\x03\x02\x02\x02\u1E80\u1E7D" +
		"\x03\x02\x02\x02\u1E80\u1E7E\x03\x02\x02\x02\u1E80\u1E7F\x03\x02\x02\x02" +
		"\u1E81\u1E84\x03\x02\x02\x02\u1E82\u1E80\x03\x02\x02\x02\u1E82\u1E83\x03" +
		"\x02\x02\x02\u1E83\u1E85\x03\x02\x02\x02\u1E84\u1E82\x03\x02\x02\x02\u1E85" +
		"\u1E86\x07\x04\x02\x02\u1E86\u066F\x03\x02\x02\x02\u1E87\u1E88\x05\u0292" +
		"\u014A\x02\u1E88\u0671\x03\x02\x02\x02\u1E89\u1E8A\x05\u039C\u01CF\x02" +
		"\u1E8A\u0673\x03\x02\x02\x02\u1E8B\u1E8F\x07\u029B\x02\x02\u1E8C\u1E8E" +
		"\x05@!\x02\u1E8D\u1E8C\x03\x02\x02\x02\u1E8E\u1E91\x03\x02\x02\x02\u1E8F" +
		"\u1E8D\x03\x02\x02\x02\u1E8F\u1E90\x03\x02\x02\x02\u1E90\u1E92\x03\x02" +
		"\x02\x02\u1E91\u1E8F\x03\x02\x02\x02\u1E92\u1E93\x07\x04\x02\x02\u1E93" +
		"\u0675\x03\x02\x02\x02\u1E94\u1E95\x05\u0292\u014A\x02\u1E95\u0677\x03" +
		"\x02\x02\x02\u1E96\u1E9A\x07\u029C\x02\x02\u1E97\u1E99\x05\u067A\u033E" +
		"\x02\u1E98\u1E97\x03\x02\x02\x02\u1E99\u1E9C\x03\x02\x02\x02\u1E9A\u1E98" +
		"\x03\x02\x02\x02\u1E9A\u1E9B\x03\x02\x02\x02\u1E9B\u1E9D\x03\x02\x02\x02" +
		"\u1E9C\u1E9A\x03\x02\x02\x02\u1E9D\u1E9E\x07\x04\x02\x02\u1E9E\u0679\x03" +
		"\x02\x02\x02\u1E9F\u1EA0\x05\u067E\u0340\x02\u1EA0\u067B\x03\x02\x02\x02" +
		"\u1EA1\u1EA2\x05\u039C\u01CF\x02\u1EA2\u067D\x03\x02\x02\x02\u1EA3\u1EA4" +
		"\x07\u029F\x02\x02\u1EA4\u067F\x03\x02\x02\x02\u1EA5\u1EA6\x07\u029E\x02" +
		"\x02\u1EA6\u0681\x03\x02\x02\x02\u0288\u0690\u069C\u06A9\u06B5\u06C2\u06D3" +
		"\u06E8\u06F1\u06F3\u06FD\u0706\u0708\u0710\u0731\u073B\u073D\u074D\u075C" +
		"\u0776\u0778\u0782\u0784\u078C\u078E\u0797\u0799\u07A3\u07A6\u07AE\u07B3" +
		"\u07B5\u07BD\u07CD\u07D9\u07F2\u07F4\u07FE\u0807\u0809\u081F\u0821\u0832" +
		"\u0834\u083E\u0841\u0849\u084E\u0850\u0858\u0866\u0872\u0874\u0881\u088A" +
		"\u088C\u0895\u0897\u08A6\u08A8\u08B1\u08BE\u08CA\u08D7\u08D9\u08E3\u08F1" +
		"\u08F3\u0902\u0904\u0913\u0915\u091D\u0922\u093C\u093E\u094B\u094D\u0959" +
		"\u095B\u0968\u0970\u097B\u097D\u098A\u098C\u0999\u099B\u09A8\u09B1\u09BA" +
		"\u09C2\u09D2\u09E0\u09E2\u09EA\u09FE\u0A0A\u0A16\u0A22\u0A29\u0A42\u0A47" +
		"\u0A52\u0A54\u0A61\u0A6B\u0A6D\u0A78\u0A83\u0A85\u0A99\u0A9B\u0AA6\u0AA8" +
		"\u0AB3\u0ABA\u0ABC\u0ACE\u0AD0\u0ADE\u0AEE\u0AF8\u0AFA\u0B08\u0B0A\u0B13" +
		"\u0B24\u0B30\u0B3C\u0B52\u0B54\u0B68\u0B6A\u0B83\u0B8F\u0B99\u0B9D\u0B9F" +
		"\u0BD5\u0BD7\u0BEA\u0BF6\u0BF8\u0C07\u0C09\u0C1E\u0C20\u0C3D\u0C3F\u0C4A" +
		"\u0C6C\u0C7A\u0C89\u0C8B\u0C99\u0C9B\u0CA5\u0CA7\u0CB1\u0CB3\u0CCD\u0CCF" +
		"\u0D00\u0D02\u0D0F\u0D11\u0D19\u0D1F\u0D2A\u0D2C\u0D38\u0D3A\u0D42\u0D44" +
		"\u0D4D\u0D5B\u0D5D\u0D68\u0D6A\u0D85\u0D8F\u0D91\u0D9B\u0D9D\u0DAF\u0DB1" +
		"\u0DC0\u0DCA\u0DCC\u0DDA\u0DDC\u0DEB\u0DED\u0DFA\u0E0B\u0E0D\u0E18\u0E22" +
		"\u0E30\u0E3C\u0E49\u0E50\u0E52\u0E69\u0E6B\u0E86\u0E88\u0E95\u0EA0\u0EA2" +
		"\u0EB5\u0EB7\u0EC1\u0EC5\u0ECA\u0ED3\u0ED8\u0EDA\u0EEB\u0F0F\u0F15\u0F17" +
		"\u0F29\u0F41\u0F50\u0F52\u0F5F\u0F61\u0F6C\u0F6E\u0F78\u0F87\u0F89\u0F97" +
		"\u0F99\u0FA5\u0FA9\u0FAE\u0FB6\u0FBE\u0FD1\u0FD3\u0FDC\u0FE4\u0FE6\u1012" +
		"\u1025\u1027\u1030\u103D\u103F\u104D\u104F\u1058\u1061\u1063\u106C\u107A" +
		"\u107C\u1087\u108E\u1090\u109A\u10A2\u10AD\u10AF\u10BD\u10BF\u10C8\u10D6" +
		"\u10DB\u10EA\u10F3\u10F5\u1103\u110C\u1127\u1129\u1137\u1139\u115E\u1160" +
		"\u117A\u117C\u1186\u1188\u1191\u1193\u119C\u11A5\u11AD\u11AF\u11B9\u11BB" +
		"\u11C7\u11C9\u11D1\u11E5\u11E7\u11F8\u11FA\u1204\u1206\u1222\u122F\u1234" +
		"\u1239\u124A\u124C\u1256\u1258\u1276\u1278\u1282\u128C\u128E\u1298\u12A7" +
		"\u12BB\u12BD\u12CF\u12D9\u12DB\u12F5\u1309\u130B\u1320\u1322\u1338\u134D" +
		"\u135C\u135E\u136D\u136F\u137D\u1384\u1386\u13A6\u13A8\u13B2\u13BC\u13BE" +
		"\u13CC\u13CE\u13D6\u13E0\u13E2\u13F0\u13F2\u13FF\u140F\u1411\u142E\u1430" +
		"\u1444\u1446\u1458\u145A\u1469\u146B\u1473\u147B\u1484\u1487\u1495\u14A4" +
		"\u14AC\u14B5\u14B7\u14C1\u14C3\u14CC\u14CE\u14D5\u14E4\u14E6\u14F0\u14F9" +
		"\u1506\u1513\u1516\u1525\u1527\u152F\u153B\u153D\u154F\u1551\u155E\u1560" +
		"\u156B\u156D\u1577\u1586\u1588\u1591\u1599\u15A1\u15A5\u15AE\u15B0\u15B9" +
		"\u15C4\u15C6\u15D0\u15DF\u15E1\u15F4\u15F6\u1603\u160D\u160F\u1619\u161C" +
		"\u1624\u1629\u162B\u1638\u1644\u1649\u164E\u1657\u1659\u1661\u1669\u1671" +
		"\u1673\u167C\u167E\u1688\u168B\u1692\u169F\u16A1\u16AC\u16B1\u16B3\u16DE" +
		"\u16E6\u16F2\u16FF\u171B\u1731\u1733\u173B\u1744\u1746\u1755\u1757\u1766" +
		"\u1768\u1772\u1774\u1783\u1785\u178D\u1798\u179A\u17AA\u17AC\u17B4\u17C1" +
		"\u17D8\u17DA\u17ED\u17EF\u17FF\u1801\u180E\u1818\u181A\u181E\u1825\u182F" +
		"\u1831\u1840\u1842\u184A\u1857\u185E\u1860\u187B\u187D\u188D\u188F\u189D" +
		"\u189F\u18AC\u18AE\u18C0\u18C2\u18CA\u18D6\u18D8\u18EA\u18EC\u18F4\u18FD" +
		"\u1905\u1907\u191D\u191F\u1927\u192F\u1932\u193F\u1941\u1949\u1952\u1954" +
		"\u195C\u1966\u1968\u196D\u1977\u1979\u1989\u198B\u199F\u19A1\u19A9\u19B8" +
		"\u19BA\u19CE\u19D0\u19D8\u19E1\u19E3\u19F1\u19F3\u19FB\u1A08\u1A0F\u1A11" +
		"\u1A2F\u1A31\u1A38\u1A3E\u1A45\u1A47\u1A52\u1A58\u1A6B\u1A82\u1A84\u1A97" +
		"\u1A99\u1AA1\u1AAE\u1AB0\u1AB9\u1AC4\u1AC6\u1AD3\u1AD5\u1ADE\u1AF8\u1AFA" +
		"\u1B04\u1B06\u1B14\u1B16\u1B1E\u1B2E\u1B30\u1B3D\u1B3F\u1B57\u1B59\u1B61" +
		"\u1B71\u1B73\u1B7F\u1B81\u1B8D\u1B8F\u1B9C\u1B9E\u1BA7\u1BAE\u1BC2\u1BC4" +
		"\u1BD3\u1C02\u1C04\u1C0C\u1C11\u1C13\u1C1D\u1C1F\u1C29\u1C2B\u1C44\u1C46" +
		"\u1C4E\u1C50\u1C73\u1C75\u1C86\u1CA1\u1CAB\u1CAD\u1CDE\u1CE0\u1CE9\u1CEB" +
		"\u1CEF\u1CF3\u1CF5\u1D04\u1D06\u1D1C\u1D21\u1D34\u1D36\u1D40\u1D56\u1D5F" +
		"\u1D61\u1D77\u1D7C\u1DA6\u1DA8\u1DB1\u1DD3\u1DDE\u1DE0\u1DF1\u1DFC\u1DFE" +
		"\u1E08\u1E0A\u1E24\u1E26\u1E31\u1E33\u1E3C\u1E41\u1E43\u1E4B\u1E68\u1E6A" +
		"\u1E80\u1E82\u1E8F\u1E9A";
	public static readonly _serializedATN: string = Utils.join(
		[
			EDIF300Parser._serializedATNSegment0,
			EDIF300Parser._serializedATNSegment1,
			EDIF300Parser._serializedATNSegment2,
			EDIF300Parser._serializedATNSegment3,
			EDIF300Parser._serializedATNSegment4,
			EDIF300Parser._serializedATNSegment5,
			EDIF300Parser._serializedATNSegment6,
			EDIF300Parser._serializedATNSegment7,
			EDIF300Parser._serializedATNSegment8,
			EDIF300Parser._serializedATNSegment9,
			EDIF300Parser._serializedATNSegment10,
			EDIF300Parser._serializedATNSegment11,
			EDIF300Parser._serializedATNSegment12,
			EDIF300Parser._serializedATNSegment13,
		],
		"",
	);
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!EDIF300Parser.__ATN) {
			EDIF300Parser.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(EDIF300Parser._serializedATN));
		}

		return EDIF300Parser.__ATN;
	}

}

export class GoalContext extends ParserRuleContext {
	public edif(): EdifContext {
		return this.getRuleContext(0, EdifContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_goal; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGoal) {
			listener.enterGoal(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGoal) {
			listener.exitGoal(this);
		}
	}
}


export class AbsoluteContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_absolute; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAbsolute) {
			listener.enterAbsolute(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAbsolute) {
			listener.exitAbsolute(this);
		}
	}
}


export class AcLoadContext extends ParserRuleContext {
	public capacitanceValue(): CapacitanceValueContext {
		return this.getRuleContext(0, CapacitanceValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_acLoad; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAcLoad) {
			listener.enterAcLoad(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAcLoad) {
			listener.exitAcLoad(this);
		}
	}
}


export class AcLoadDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_acLoadDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAcLoadDisplay) {
			listener.enterAcLoadDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAcLoadDisplay) {
			listener.exitAcLoadDisplay(this);
		}
	}
}


export class AcLoadFactorCapacitanceContext extends ParserRuleContext {
	public capacitanceValue(): CapacitanceValueContext {
		return this.getRuleContext(0, CapacitanceValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_acLoadFactorCapacitance; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAcLoadFactorCapacitance) {
			listener.enterAcLoadFactorCapacitance(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAcLoadFactorCapacitance) {
			listener.exitAcLoadFactorCapacitance(this);
		}
	}
}


export class AcLoadFactorTimeContext extends ParserRuleContext {
	public timeValue(): TimeValueContext {
		return this.getRuleContext(0, TimeValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_acLoadFactorTime; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAcLoadFactorTime) {
			listener.enterAcLoadFactorTime(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAcLoadFactorTime) {
			listener.exitAcLoadFactorTime(this);
		}
	}
}


export class AddDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_addDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAddDisplay) {
			listener.enterAddDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAddDisplay) {
			listener.exitAddDisplay(this);
		}
	}
}


export class AmpereContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ampere; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAmpere) {
			listener.enterAmpere(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAmpere) {
			listener.exitAmpere(this);
		}
	}
}


export class And_Context extends ParserRuleContext {
	public booleanExpression(): BooleanExpressionContext[];
	public booleanExpression(i: number): BooleanExpressionContext;
	public booleanExpression(i?: number): BooleanExpressionContext | BooleanExpressionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BooleanExpressionContext);
		} else {
			return this.getRuleContext(i, BooleanExpressionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_and_; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAnd_) {
			listener.enterAnd_(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAnd_) {
			listener.exitAnd_(this);
		}
	}
}


export class AngleValueContext extends ParserRuleContext {
	public numberValue(): NumberValueContext {
		return this.getRuleContext(0, NumberValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_angleValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAngleValue) {
			listener.enterAngleValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAngleValue) {
			listener.exitAngleValue(this);
		}
	}
}


export class AnnotateContext extends ParserRuleContext {
	public stringValue(): StringValueContext {
		return this.getRuleContext(0, StringValueContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_annotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAnnotate) {
			listener.enterAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAnnotate) {
			listener.exitAnnotate(this);
		}
	}
}


export class ApprovedDateContext extends ParserRuleContext {
	public date(): DateContext {
		return this.getRuleContext(0, DateContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_approvedDate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterApprovedDate) {
			listener.enterApprovedDate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitApprovedDate) {
			listener.exitApprovedDate(this);
		}
	}
}


export class ApprovedDateDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_approvedDateDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterApprovedDateDisplay) {
			listener.enterApprovedDateDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitApprovedDateDisplay) {
			listener.exitApprovedDateDisplay(this);
		}
	}
}


export class ArcContext extends ParserRuleContext {
	public startPoint(): StartPointContext {
		return this.getRuleContext(0, StartPointContext);
	}
	public throughPoint(): ThroughPointContext {
		return this.getRuleContext(0, ThroughPointContext);
	}
	public endPoint(): EndPointContext {
		return this.getRuleContext(0, EndPointContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_arc; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterArc) {
			listener.enterArc(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitArc) {
			listener.exitArc(this);
		}
	}
}


export class AsciiContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ascii; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAscii) {
			listener.enterAscii(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAscii) {
			listener.exitAscii(this);
		}
	}
}


export class AssociatedInterconnectNameDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_associatedInterconnectNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAssociatedInterconnectNameDisplay) {
			listener.enterAssociatedInterconnectNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAssociatedInterconnectNameDisplay) {
			listener.exitAssociatedInterconnectNameDisplay(this);
		}
	}
}


export class AttachmentPointContext extends ParserRuleContext {
	public pointValue(): PointValueContext {
		return this.getRuleContext(0, PointValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_attachmentPoint; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAttachmentPoint) {
			listener.enterAttachmentPoint(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAttachmentPoint) {
			listener.exitAttachmentPoint(this);
		}
	}
}


export class AuthorContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_author; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterAuthor) {
			listener.enterAuthor(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitAuthor) {
			listener.exitAuthor(this);
		}
	}
}


export class BackgroundColorContext extends ParserRuleContext {
	public color(): ColorContext {
		return this.getRuleContext(0, ColorContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_backgroundColor; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBackgroundColor) {
			listener.enterBackgroundColor(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBackgroundColor) {
			listener.exitBackgroundColor(this);
		}
	}
}


export class BaselineJustifyContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_baselineJustify; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBaselineJustify) {
			listener.enterBaselineJustify(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBaselineJustify) {
			listener.exitBaselineJustify(this);
		}
	}
}


export class BecomesContext extends ParserRuleContext {
	public logicNameRef(): LogicNameRefContext | undefined {
		return this.tryGetRuleContext(0, LogicNameRefContext);
	}
	public logicList(): LogicListContext | undefined {
		return this.tryGetRuleContext(0, LogicListContext);
	}
	public logicOneOf(): LogicOneOfContext | undefined {
		return this.tryGetRuleContext(0, LogicOneOfContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_becomes; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBecomes) {
			listener.enterBecomes(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBecomes) {
			listener.exitBecomes(this);
		}
	}
}


export class BehaviorViewContext extends ParserRuleContext {
	public viewNameDef(): ViewNameDefContext {
		return this.getRuleContext(0, ViewNameDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_behaviorView; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBehaviorView) {
			listener.enterBehaviorView(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBehaviorView) {
			listener.exitBehaviorView(this);
		}
	}
}


export class BidirectionalContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_bidirectional; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBidirectional) {
			listener.enterBidirectional(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBidirectional) {
			listener.exitBidirectional(this);
		}
	}
}


export class BidirectionalPortContext extends ParserRuleContext {
	public bidirectionalPortAttributes(): BidirectionalPortAttributesContext | undefined {
		return this.tryGetRuleContext(0, BidirectionalPortAttributesContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_bidirectionalPort; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBidirectionalPort) {
			listener.enterBidirectionalPort(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBidirectionalPort) {
			listener.exitBidirectionalPort(this);
		}
	}
}


export class BidirectionalPortAttributesContext extends ParserRuleContext {
	public dcFanInLoad(): DcFanInLoadContext[];
	public dcFanInLoad(i: number): DcFanInLoadContext;
	public dcFanInLoad(i?: number): DcFanInLoadContext | DcFanInLoadContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcFanInLoadContext);
		} else {
			return this.getRuleContext(i, DcFanInLoadContext);
		}
	}
	public dcFanOutLoad(): DcFanOutLoadContext[];
	public dcFanOutLoad(i: number): DcFanOutLoadContext;
	public dcFanOutLoad(i?: number): DcFanOutLoadContext | DcFanOutLoadContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcFanOutLoadContext);
		} else {
			return this.getRuleContext(i, DcFanOutLoadContext);
		}
	}
	public dcMaxFanIn(): DcMaxFanInContext[];
	public dcMaxFanIn(i: number): DcMaxFanInContext;
	public dcMaxFanIn(i?: number): DcMaxFanInContext | DcMaxFanInContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcMaxFanInContext);
		} else {
			return this.getRuleContext(i, DcMaxFanInContext);
		}
	}
	public dcMaxFanOut(): DcMaxFanOutContext[];
	public dcMaxFanOut(i: number): DcMaxFanOutContext;
	public dcMaxFanOut(i?: number): DcMaxFanOutContext | DcMaxFanOutContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcMaxFanOutContext);
		} else {
			return this.getRuleContext(i, DcMaxFanOutContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_bidirectionalPortAttributes; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBidirectionalPortAttributes) {
			listener.enterBidirectionalPortAttributes(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBidirectionalPortAttributes) {
			listener.exitBidirectionalPortAttributes(this);
		}
	}
}


export class BitOrderContext extends ParserRuleContext {
	public lsbToMsb(): LsbToMsbContext | undefined {
		return this.tryGetRuleContext(0, LsbToMsbContext);
	}
	public msbToLsb(): MsbToLsbContext | undefined {
		return this.tryGetRuleContext(0, MsbToLsbContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_bitOrder; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBitOrder) {
			listener.enterBitOrder(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBitOrder) {
			listener.exitBitOrder(this);
		}
	}
}


export class BlueContext extends ParserRuleContext {
	public scaledInteger(): ScaledIntegerContext {
		return this.getRuleContext(0, ScaledIntegerContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_blue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBlue) {
			listener.enterBlue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBlue) {
			listener.exitBlue(this);
		}
	}
}


export class BoldStyleContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_boldStyle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBoldStyle) {
			listener.enterBoldStyle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBoldStyle) {
			listener.exitBoldStyle(this);
		}
	}
}


export class EbooleanContext extends ParserRuleContext {
	public booleanExpression(): BooleanExpressionContext {
		return this.getRuleContext(0, BooleanExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_eboolean; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEboolean) {
			listener.enterEboolean(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEboolean) {
			listener.exitEboolean(this);
		}
	}
}


export class BooleanConstantContext extends ParserRuleContext {
	public constantNameDef(): ConstantNameDefContext {
		return this.getRuleContext(0, ConstantNameDefContext);
	}
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_booleanConstant; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBooleanConstant) {
			listener.enterBooleanConstant(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBooleanConstant) {
			listener.exitBooleanConstant(this);
		}
	}
}


export class BooleanConstantRefContext extends ParserRuleContext {
	public constantNameRef(): ConstantNameRefContext {
		return this.getRuleContext(0, ConstantNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_booleanConstantRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBooleanConstantRef) {
			listener.enterBooleanConstantRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBooleanConstantRef) {
			listener.exitBooleanConstantRef(this);
		}
	}
}


export class BooleanExpressionContext extends ParserRuleContext {
	public and_(): And_Context | undefined {
		return this.tryGetRuleContext(0, And_Context);
	}
	public booleanParameterRef(): BooleanParameterRefContext | undefined {
		return this.tryGetRuleContext(0, BooleanParameterRefContext);
	}
	public booleanToken(): BooleanTokenContext | undefined {
		return this.tryGetRuleContext(0, BooleanTokenContext);
	}
	public stringEqual(): StringEqualContext | undefined {
		return this.tryGetRuleContext(0, StringEqualContext);
	}
	public integerEqual(): IntegerEqualContext | undefined {
		return this.tryGetRuleContext(0, IntegerEqualContext);
	}
	public lessThan(): LessThanContext | undefined {
		return this.tryGetRuleContext(0, LessThanContext);
	}
	public lessThanOrEqual(): LessThanOrEqualContext | undefined {
		return this.tryGetRuleContext(0, LessThanOrEqualContext);
	}
	public not_(): Not_Context | undefined {
		return this.tryGetRuleContext(0, Not_Context);
	}
	public or_(): Or_Context | undefined {
		return this.tryGetRuleContext(0, Or_Context);
	}
	public xor_(): Xor_Context | undefined {
		return this.tryGetRuleContext(0, Xor_Context);
	}
	public booleanConstantRef(): BooleanConstantRefContext | undefined {
		return this.tryGetRuleContext(0, BooleanConstantRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_booleanExpression; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBooleanExpression) {
			listener.enterBooleanExpression(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBooleanExpression) {
			listener.exitBooleanExpression(this);
		}
	}
}


export class BooleanMapContext extends ParserRuleContext {
	public booleanValue(): BooleanValueContext {
		return this.getRuleContext(0, BooleanValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_booleanMap; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBooleanMap) {
			listener.enterBooleanMap(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBooleanMap) {
			listener.exitBooleanMap(this);
		}
	}
}


export class BooleanParameterContext extends ParserRuleContext {
	public parameterNameDef(): ParameterNameDefContext {
		return this.getRuleContext(0, ParameterNameDefContext);
	}
	public eboolean(): EbooleanContext[];
	public eboolean(i: number): EbooleanContext;
	public eboolean(i?: number): EbooleanContext | EbooleanContext[] {
		if (i === undefined) {
			return this.getRuleContexts(EbooleanContext);
		} else {
			return this.getRuleContext(i, EbooleanContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_booleanParameter; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBooleanParameter) {
			listener.enterBooleanParameter(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBooleanParameter) {
			listener.exitBooleanParameter(this);
		}
	}
}


export class BooleanParameterAssignContext extends ParserRuleContext {
	public parameterNameRef(): ParameterNameRefContext {
		return this.getRuleContext(0, ParameterNameRefContext);
	}
	public booleanExpression(): BooleanExpressionContext {
		return this.getRuleContext(0, BooleanExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_booleanParameterAssign; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBooleanParameterAssign) {
			listener.enterBooleanParameterAssign(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBooleanParameterAssign) {
			listener.exitBooleanParameterAssign(this);
		}
	}
}


export class BooleanParameterRefContext extends ParserRuleContext {
	public parameterNameRef(): ParameterNameRefContext {
		return this.getRuleContext(0, ParameterNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_booleanParameterRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBooleanParameterRef) {
			listener.enterBooleanParameterRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBooleanParameterRef) {
			listener.exitBooleanParameterRef(this);
		}
	}
}


export class BooleanTokenContext extends ParserRuleContext {
	public efalse(): EfalseContext | undefined {
		return this.tryGetRuleContext(0, EfalseContext);
	}
	public etrue(): EtrueContext | undefined {
		return this.tryGetRuleContext(0, EtrueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_booleanToken; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBooleanToken) {
			listener.enterBooleanToken(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBooleanToken) {
			listener.exitBooleanToken(this);
		}
	}
}


export class BooleanValueContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_booleanValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBooleanValue) {
			listener.enterBooleanValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBooleanValue) {
			listener.exitBooleanValue(this);
		}
	}
}


export class BorderPatternContext extends ParserRuleContext {
	public pixelPattern(): PixelPatternContext {
		return this.getRuleContext(0, PixelPatternContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_borderPattern; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBorderPattern) {
			listener.enterBorderPattern(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBorderPattern) {
			listener.exitBorderPattern(this);
		}
	}
}


export class BorderPatternVisibleContext extends ParserRuleContext {
	public booleanValue(): BooleanValueContext {
		return this.getRuleContext(0, BooleanValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_borderPatternVisible; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBorderPatternVisible) {
			listener.enterBorderPatternVisible(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBorderPatternVisible) {
			listener.exitBorderPatternVisible(this);
		}
	}
}


export class BorderWidthContext extends ParserRuleContext {
	public lengthValue(): LengthValueContext | undefined {
		return this.tryGetRuleContext(0, LengthValueContext);
	}
	public minimalWidth(): MinimalWidthContext | undefined {
		return this.tryGetRuleContext(0, MinimalWidthContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_borderWidth; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBorderWidth) {
			listener.enterBorderWidth(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBorderWidth) {
			listener.exitBorderWidth(this);
		}
	}
}


export class BottomJustifyContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_bottomJustify; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterBottomJustify) {
			listener.enterBottomJustify(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitBottomJustify) {
			listener.exitBottomJustify(this);
		}
	}
}


export class CalculatedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_calculated; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCalculated) {
			listener.enterCalculated(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCalculated) {
			listener.exitCalculated(this);
		}
	}
}


export class CandelaContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_candela; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCandela) {
			listener.enterCandela(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCandela) {
			listener.exitCandela(this);
		}
	}
}


export class CapacitanceValueContext extends ParserRuleContext {
	public miNoMaxValue(): MiNoMaxValueContext {
		return this.getRuleContext(0, MiNoMaxValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_capacitanceValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCapacitanceValue) {
			listener.enterCapacitanceValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCapacitanceValue) {
			listener.exitCapacitanceValue(this);
		}
	}
}


export class CaplineJustifyContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_caplineJustify; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCaplineJustify) {
			listener.enterCaplineJustify(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCaplineJustify) {
			listener.exitCaplineJustify(this);
		}
	}
}


export class CellContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public cellHeader(): CellHeaderContext {
		return this.getRuleContext(0, CellHeaderContext);
	}
	public cluster(): ClusterContext[];
	public cluster(i: number): ClusterContext;
	public cluster(i?: number): ClusterContext | ClusterContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterContext);
		} else {
			return this.getRuleContext(i, ClusterContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	public viewGroup(): ViewGroupContext[];
	public viewGroup(i: number): ViewGroupContext;
	public viewGroup(i?: number): ViewGroupContext | ViewGroupContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewGroupContext);
		} else {
			return this.getRuleContext(i, ViewGroupContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_cell; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCell) {
			listener.enterCell(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCell) {
			listener.exitCell(this);
		}
	}
}


export class CellHeaderContext extends ParserRuleContext {
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_cellHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCellHeader) {
			listener.enterCellHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCellHeader) {
			listener.exitCellHeader(this);
		}
	}
}


export class CellNameDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public displayNameOverride(): DisplayNameOverrideContext[];
	public displayNameOverride(i: number): DisplayNameOverrideContext;
	public displayNameOverride(i?: number): DisplayNameOverrideContext | DisplayNameOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameOverrideContext);
		} else {
			return this.getRuleContext(i, DisplayNameOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_cellNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCellNameDisplay) {
			listener.enterCellNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCellNameDisplay) {
			listener.exitCellNameDisplay(this);
		}
	}
}


export class CellPropertyDisplayContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public propertyNameDisplay(): PropertyNameDisplayContext[];
	public propertyNameDisplay(i: number): PropertyNameDisplayContext;
	public propertyNameDisplay(i?: number): PropertyNameDisplayContext | PropertyNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyNameDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyNameDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_cellPropertyDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCellPropertyDisplay) {
			listener.enterCellPropertyDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCellPropertyDisplay) {
			listener.exitCellPropertyDisplay(this);
		}
	}
}


export class CellPropertyDisplayOverrideContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	public propertyNameDisplay(): PropertyNameDisplayContext | undefined {
		return this.tryGetRuleContext(0, PropertyNameDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_cellPropertyDisplayOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCellPropertyDisplayOverride) {
			listener.enterCellPropertyDisplayOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCellPropertyDisplayOverride) {
			listener.exitCellPropertyDisplayOverride(this);
		}
	}
}


export class CellPropertyOverrideContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public typedValue(): TypedValueContext | undefined {
		return this.tryGetRuleContext(0, TypedValueContext);
	}
	public untyped(): UntypedContext | undefined {
		return this.tryGetRuleContext(0, UntypedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public fixed(): FixedContext[];
	public fixed(i: number): FixedContext;
	public fixed(i?: number): FixedContext | FixedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FixedContext);
		} else {
			return this.getRuleContext(i, FixedContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_cellPropertyOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCellPropertyOverride) {
			listener.enterCellPropertyOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCellPropertyOverride) {
			listener.exitCellPropertyOverride(this);
		}
	}
}


export class CellRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_cellRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCellRef) {
			listener.enterCellRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCellRef) {
			listener.exitCellRef(this);
		}
	}
}


export class CelsiusContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_celsius; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCelsius) {
			listener.enterCelsius(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCelsius) {
			listener.exitCelsius(this);
		}
	}
}


export class CenterJustifyContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_centerJustify; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCenterJustify) {
			listener.enterCenterJustify(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCenterJustify) {
			listener.exitCenterJustify(this);
		}
	}
}


export class CharacterEncodingContext extends ParserRuleContext {
	public ascii(): AsciiContext | undefined {
		return this.tryGetRuleContext(0, AsciiContext);
	}
	public iso8859(): Iso8859Context | undefined {
		return this.tryGetRuleContext(0, Iso8859Context);
	}
	public jisx0201(): Jisx0201Context | undefined {
		return this.tryGetRuleContext(0, Jisx0201Context);
	}
	public jisx0208(): Jisx0208Context | undefined {
		return this.tryGetRuleContext(0, Jisx0208Context);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_characterEncoding; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCharacterEncoding) {
			listener.enterCharacterEncoding(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCharacterEncoding) {
			listener.exitCharacterEncoding(this);
		}
	}
}


export class CheckDateContext extends ParserRuleContext {
	public date(): DateContext {
		return this.getRuleContext(0, DateContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_checkDate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCheckDate) {
			listener.enterCheckDate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCheckDate) {
			listener.exitCheckDate(this);
		}
	}
}


export class CheckDateDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_checkDateDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCheckDateDisplay) {
			listener.enterCheckDateDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCheckDateDisplay) {
			listener.exitCheckDateDisplay(this);
		}
	}
}


export class CircleContext extends ParserRuleContext {
	public pt1(): Pt1Context {
		return this.getRuleContext(0, Pt1Context);
	}
	public pt2(): Pt2Context {
		return this.getRuleContext(0, Pt2Context);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_circle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCircle) {
			listener.enterCircle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCircle) {
			listener.exitCircle(this);
		}
	}
}


export class ClusterContext extends ParserRuleContext {
	public clusterNameDef(): ClusterNameDefContext {
		return this.getRuleContext(0, ClusterNameDefContext);
	}
	public einterface(): EinterfaceContext {
		return this.getRuleContext(0, EinterfaceContext);
	}
	public clusterHeader(): ClusterHeaderContext {
		return this.getRuleContext(0, ClusterHeaderContext);
	}
	public schematicSymbol(): SchematicSymbolContext[];
	public schematicSymbol(i: number): SchematicSymbolContext;
	public schematicSymbol(i?: number): SchematicSymbolContext | SchematicSymbolContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSymbolContext);
		} else {
			return this.getRuleContext(i, SchematicSymbolContext);
		}
	}
	public schematicView(): SchematicViewContext[];
	public schematicView(i: number): SchematicViewContext;
	public schematicView(i?: number): SchematicViewContext | SchematicViewContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicViewContext);
		} else {
			return this.getRuleContext(i, SchematicViewContext);
		}
	}
	public behaviorView(): BehaviorViewContext[];
	public behaviorView(i: number): BehaviorViewContext;
	public behaviorView(i?: number): BehaviorViewContext | BehaviorViewContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BehaviorViewContext);
		} else {
			return this.getRuleContext(i, BehaviorViewContext);
		}
	}
	public clusterConfiguration(): ClusterConfigurationContext[];
	public clusterConfiguration(i: number): ClusterConfigurationContext;
	public clusterConfiguration(i?: number): ClusterConfigurationContext | ClusterConfigurationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterConfigurationContext);
		} else {
			return this.getRuleContext(i, ClusterConfigurationContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public connectivityView(): ConnectivityViewContext[];
	public connectivityView(i: number): ConnectivityViewContext;
	public connectivityView(i?: number): ConnectivityViewContext | ConnectivityViewContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityViewContext);
		} else {
			return this.getRuleContext(i, ConnectivityViewContext);
		}
	}
	public defaultClusterConfiguration(): DefaultClusterConfigurationContext[];
	public defaultClusterConfiguration(i: number): DefaultClusterConfigurationContext;
	public defaultClusterConfiguration(i?: number): DefaultClusterConfigurationContext | DefaultClusterConfigurationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DefaultClusterConfigurationContext);
		} else {
			return this.getRuleContext(i, DefaultClusterConfigurationContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	public logicModelView(): LogicModelViewContext[];
	public logicModelView(i: number): LogicModelViewContext;
	public logicModelView(i?: number): LogicModelViewContext | LogicModelViewContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicModelViewContext);
		} else {
			return this.getRuleContext(i, LogicModelViewContext);
		}
	}
	public maskLayoutView(): MaskLayoutViewContext[];
	public maskLayoutView(i: number): MaskLayoutViewContext;
	public maskLayoutView(i?: number): MaskLayoutViewContext | MaskLayoutViewContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MaskLayoutViewContext);
		} else {
			return this.getRuleContext(i, MaskLayoutViewContext);
		}
	}
	public pcbLayoutView(): PcbLayoutViewContext[];
	public pcbLayoutView(i: number): PcbLayoutViewContext;
	public pcbLayoutView(i?: number): PcbLayoutViewContext | PcbLayoutViewContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PcbLayoutViewContext);
		} else {
			return this.getRuleContext(i, PcbLayoutViewContext);
		}
	}
	public symbolicLayoutView(): SymbolicLayoutViewContext[];
	public symbolicLayoutView(i: number): SymbolicLayoutViewContext;
	public symbolicLayoutView(i?: number): SymbolicLayoutViewContext | SymbolicLayoutViewContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SymbolicLayoutViewContext);
		} else {
			return this.getRuleContext(i, SymbolicLayoutViewContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_cluster; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCluster) {
			listener.enterCluster(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCluster) {
			listener.exitCluster(this);
		}
	}
}


export class ClusterConfigurationContext extends ParserRuleContext {
	public clusterConfigurationNameDef(): ClusterConfigurationNameDefContext {
		return this.getRuleContext(0, ClusterConfigurationNameDefContext);
	}
	public viewRef(): ViewRefContext | undefined {
		return this.tryGetRuleContext(0, ViewRefContext);
	}
	public leaf(): LeafContext | undefined {
		return this.tryGetRuleContext(0, LeafContext);
	}
	public unconfigured(): UnconfiguredContext | undefined {
		return this.tryGetRuleContext(0, UnconfiguredContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public frameConfiguration(): FrameConfigurationContext[];
	public frameConfiguration(i: number): FrameConfigurationContext;
	public frameConfiguration(i?: number): FrameConfigurationContext | FrameConfigurationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FrameConfigurationContext);
		} else {
			return this.getRuleContext(i, FrameConfigurationContext);
		}
	}
	public globalPortScope(): GlobalPortScopeContext[];
	public globalPortScope(i: number): GlobalPortScopeContext;
	public globalPortScope(i?: number): GlobalPortScopeContext | GlobalPortScopeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortScopeContext);
		} else {
			return this.getRuleContext(i, GlobalPortScopeContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public instanceConfiguration(): InstanceConfigurationContext[];
	public instanceConfiguration(i: number): InstanceConfigurationContext;
	public instanceConfiguration(i?: number): InstanceConfigurationContext | InstanceConfigurationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceConfigurationContext);
		} else {
			return this.getRuleContext(i, InstanceConfigurationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterConfiguration; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterConfiguration) {
			listener.enterClusterConfiguration(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterConfiguration) {
			listener.exitClusterConfiguration(this);
		}
	}
}


export class ClusterConfigurationNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterConfigurationNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterConfigurationNameCaseSensitive) {
			listener.enterClusterConfigurationNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterConfigurationNameCaseSensitive) {
			listener.exitClusterConfigurationNameCaseSensitive(this);
		}
	}
}


export class ClusterConfigurationNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterConfigurationNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterConfigurationNameDef) {
			listener.enterClusterConfigurationNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterConfigurationNameDef) {
			listener.exitClusterConfigurationNameDef(this);
		}
	}
}


export class ClusterConfigurationNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterConfigurationNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterConfigurationNameRef) {
			listener.enterClusterConfigurationNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterConfigurationNameRef) {
			listener.exitClusterConfigurationNameRef(this);
		}
	}
}


export class ClusterConfigurationRefContext extends ParserRuleContext {
	public clusterConfigurationNameRef(): ClusterConfigurationNameRefContext {
		return this.getRuleContext(0, ClusterConfigurationNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterConfigurationRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterConfigurationRef) {
			listener.enterClusterConfigurationRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterConfigurationRef) {
			listener.exitClusterConfigurationRef(this);
		}
	}
}


export class ClusterHeaderContext extends ParserRuleContext {
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterHeader) {
			listener.enterClusterHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterHeader) {
			listener.exitClusterHeader(this);
		}
	}
}


export class ClusterNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterNameCaseSensitive) {
			listener.enterClusterNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterNameCaseSensitive) {
			listener.exitClusterNameCaseSensitive(this);
		}
	}
}


export class ClusterNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterNameDef) {
			listener.enterClusterNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterNameDef) {
			listener.exitClusterNameDef(this);
		}
	}
}


export class ClusterNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterNameRef) {
			listener.enterClusterNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterNameRef) {
			listener.exitClusterNameRef(this);
		}
	}
}


export class ClusterPropertyDisplayContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public propertyNameDisplay(): PropertyNameDisplayContext[];
	public propertyNameDisplay(i: number): PropertyNameDisplayContext;
	public propertyNameDisplay(i?: number): PropertyNameDisplayContext | PropertyNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyNameDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyNameDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterPropertyDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterPropertyDisplay) {
			listener.enterClusterPropertyDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterPropertyDisplay) {
			listener.exitClusterPropertyDisplay(this);
		}
	}
}


export class ClusterPropertyDisplayOverrideContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	public propertyNameDisplay(): PropertyNameDisplayContext | undefined {
		return this.tryGetRuleContext(0, PropertyNameDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterPropertyDisplayOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterPropertyDisplayOverride) {
			listener.enterClusterPropertyDisplayOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterPropertyDisplayOverride) {
			listener.exitClusterPropertyDisplayOverride(this);
		}
	}
}


export class ClusterPropertyOverrideContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public typedValue(): TypedValueContext | undefined {
		return this.tryGetRuleContext(0, TypedValueContext);
	}
	public untyped(): UntypedContext | undefined {
		return this.tryGetRuleContext(0, UntypedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public fixed(): FixedContext[];
	public fixed(i: number): FixedContext;
	public fixed(i?: number): FixedContext | FixedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FixedContext);
		} else {
			return this.getRuleContext(i, FixedContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterPropertyOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterPropertyOverride) {
			listener.enterClusterPropertyOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterPropertyOverride) {
			listener.exitClusterPropertyOverride(this);
		}
	}
}


export class ClusterRefContext extends ParserRuleContext {
	public clusterNameRef(): ClusterNameRefContext {
		return this.getRuleContext(0, ClusterNameRefContext);
	}
	public cellRef(): CellRefContext | undefined {
		return this.tryGetRuleContext(0, CellRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_clusterRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterClusterRef) {
			listener.enterClusterRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitClusterRef) {
			listener.exitClusterRef(this);
		}
	}
}


export class ColorContext extends ParserRuleContext {
	public red(): RedContext {
		return this.getRuleContext(0, RedContext);
	}
	public green(): GreenContext {
		return this.getRuleContext(0, GreenContext);
	}
	public blue(): BlueContext {
		return this.getRuleContext(0, BlueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_color; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterColor) {
			listener.enterColor(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitColor) {
			listener.exitColor(this);
		}
	}
}


export class CommentContext extends ParserRuleContext {
	public stringToken(): StringTokenContext[];
	public stringToken(i: number): StringTokenContext;
	public stringToken(i?: number): StringTokenContext | StringTokenContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringTokenContext);
		} else {
			return this.getRuleContext(i, StringTokenContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_comment; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterComment) {
			listener.enterComment(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitComment) {
			listener.exitComment(this);
		}
	}
}


export class CommentGraphicsContext extends ParserRuleContext {
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public originalBoundingBox(): OriginalBoundingBoxContext[];
	public originalBoundingBox(i: number): OriginalBoundingBoxContext;
	public originalBoundingBox(i?: number): OriginalBoundingBoxContext | OriginalBoundingBoxContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OriginalBoundingBoxContext);
		} else {
			return this.getRuleContext(i, OriginalBoundingBoxContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_commentGraphics; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCommentGraphics) {
			listener.enterCommentGraphics(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCommentGraphics) {
			listener.exitCommentGraphics(this);
		}
	}
}


export class CompanyNameContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_companyName; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCompanyName) {
			listener.enterCompanyName(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCompanyName) {
			listener.exitCompanyName(this);
		}
	}
}


export class CompanyNameDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_companyNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCompanyNameDisplay) {
			listener.enterCompanyNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCompanyNameDisplay) {
			listener.exitCompanyNameDisplay(this);
		}
	}
}


export class ComplementedNameContext extends ParserRuleContext {
	public complementedNamePart(): ComplementedNamePartContext[];
	public complementedNamePart(i: number): ComplementedNamePartContext;
	public complementedNamePart(i?: number): ComplementedNamePartContext | ComplementedNamePartContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ComplementedNamePartContext);
		} else {
			return this.getRuleContext(i, ComplementedNamePartContext);
		}
	}
	public nameDimension(): NameDimensionContext[];
	public nameDimension(i: number): NameDimensionContext;
	public nameDimension(i?: number): NameDimensionContext | NameDimensionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameDimensionContext);
		} else {
			return this.getRuleContext(i, NameDimensionContext);
		}
	}
	public namePartSeparator(): NamePartSeparatorContext[];
	public namePartSeparator(i: number): NamePartSeparatorContext;
	public namePartSeparator(i?: number): NamePartSeparatorContext | NamePartSeparatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NamePartSeparatorContext);
		} else {
			return this.getRuleContext(i, NamePartSeparatorContext);
		}
	}
	public simpleName(): SimpleNameContext[];
	public simpleName(i: number): SimpleNameContext;
	public simpleName(i?: number): SimpleNameContext | SimpleNameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SimpleNameContext);
		} else {
			return this.getRuleContext(i, SimpleNameContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_complementedName; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterComplementedName) {
			listener.enterComplementedName(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitComplementedName) {
			listener.exitComplementedName(this);
		}
	}
}


export class ComplementedNamePartContext extends ParserRuleContext {
	public complementedNamePart(): ComplementedNamePartContext[];
	public complementedNamePart(i: number): ComplementedNamePartContext;
	public complementedNamePart(i?: number): ComplementedNamePartContext | ComplementedNamePartContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ComplementedNamePartContext);
		} else {
			return this.getRuleContext(i, ComplementedNamePartContext);
		}
	}
	public namePartSeparator(): NamePartSeparatorContext[];
	public namePartSeparator(i: number): NamePartSeparatorContext;
	public namePartSeparator(i?: number): NamePartSeparatorContext | NamePartSeparatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NamePartSeparatorContext);
		} else {
			return this.getRuleContext(i, NamePartSeparatorContext);
		}
	}
	public simpleName(): SimpleNameContext[];
	public simpleName(i: number): SimpleNameContext;
	public simpleName(i?: number): SimpleNameContext | SimpleNameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SimpleNameContext);
		} else {
			return this.getRuleContext(i, SimpleNameContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_complementedNamePart; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterComplementedNamePart) {
			listener.enterComplementedNamePart(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitComplementedNamePart) {
			listener.exitComplementedNamePart(this);
		}
	}
}


export class ComplexGeometryContext extends ParserRuleContext {
	public geometryMacroRef(): GeometryMacroRefContext {
		return this.getRuleContext(0, GeometryMacroRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_complexGeometry; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterComplexGeometry) {
			listener.enterComplexGeometry(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitComplexGeometry) {
			listener.exitComplexGeometry(this);
		}
	}
}


export class ComplexNameContext extends ParserRuleContext {
	public complementedNamePart(): ComplementedNamePartContext[];
	public complementedNamePart(i: number): ComplementedNamePartContext;
	public complementedNamePart(i?: number): ComplementedNamePartContext | ComplementedNamePartContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ComplementedNamePartContext);
		} else {
			return this.getRuleContext(i, ComplementedNamePartContext);
		}
	}
	public nameDimension(): NameDimensionContext[];
	public nameDimension(i: number): NameDimensionContext;
	public nameDimension(i?: number): NameDimensionContext | NameDimensionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameDimensionContext);
		} else {
			return this.getRuleContext(i, NameDimensionContext);
		}
	}
	public namePartSeparator(): NamePartSeparatorContext[];
	public namePartSeparator(i: number): NamePartSeparatorContext;
	public namePartSeparator(i?: number): NamePartSeparatorContext | NamePartSeparatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NamePartSeparatorContext);
		} else {
			return this.getRuleContext(i, NamePartSeparatorContext);
		}
	}
	public simpleName(): SimpleNameContext[];
	public simpleName(i: number): SimpleNameContext;
	public simpleName(i?: number): SimpleNameContext | SimpleNameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SimpleNameContext);
		} else {
			return this.getRuleContext(i, SimpleNameContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_complexName; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterComplexName) {
			listener.enterComplexName(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitComplexName) {
			listener.exitComplexName(this);
		}
	}
}


export class CompoundContext extends ParserRuleContext {
	public logicNameRef(): LogicNameRefContext[];
	public logicNameRef(i: number): LogicNameRefContext;
	public logicNameRef(i?: number): LogicNameRefContext | LogicNameRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicNameRefContext);
		} else {
			return this.getRuleContext(i, LogicNameRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_compound; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCompound) {
			listener.enterCompound(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCompound) {
			listener.exitCompound(this);
		}
	}
}


export class ConditionContext extends ParserRuleContext {
	public booleanExpression(): BooleanExpressionContext {
		return this.getRuleContext(0, BooleanExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_condition; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCondition) {
			listener.enterCondition(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCondition) {
			listener.exitCondition(this);
		}
	}
}


export class ConditionDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_conditionDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConditionDisplay) {
			listener.enterConditionDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConditionDisplay) {
			listener.exitConditionDisplay(this);
		}
	}
}


export class ConnectedSignalIndexGeneratorContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectedSignalIndexGenerator; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectedSignalIndexGenerator) {
			listener.enterConnectedSignalIndexGenerator(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectedSignalIndexGenerator) {
			listener.exitConnectedSignalIndexGenerator(this);
		}
	}
}


export class ConnectedSignalIndexGeneratorDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectedSignalIndexGeneratorDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectedSignalIndexGeneratorDisplay) {
			listener.enterConnectedSignalIndexGeneratorDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectedSignalIndexGeneratorDisplay) {
			listener.exitConnectedSignalIndexGeneratorDisplay(this);
		}
	}
}


export class ConnectivityBusContext extends ParserRuleContext {
	public interconnectNameDef(): InterconnectNameDefContext {
		return this.getRuleContext(0, InterconnectNameDefContext);
	}
	public signalGroupRef(): SignalGroupRefContext {
		return this.getRuleContext(0, SignalGroupRefContext);
	}
	public interconnectHeader(): InterconnectHeaderContext {
		return this.getRuleContext(0, InterconnectHeaderContext);
	}
	public connectivityBusJoined(): ConnectivityBusJoinedContext {
		return this.getRuleContext(0, ConnectivityBusJoinedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public connectivityBusSlice(): ConnectivityBusSliceContext[];
	public connectivityBusSlice(i: number): ConnectivityBusSliceContext;
	public connectivityBusSlice(i?: number): ConnectivityBusSliceContext | ConnectivityBusSliceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityBusSliceContext);
		} else {
			return this.getRuleContext(i, ConnectivityBusSliceContext);
		}
	}
	public connectivitySubBus(): ConnectivitySubBusContext[];
	public connectivitySubBus(i: number): ConnectivitySubBusContext;
	public connectivitySubBus(i?: number): ConnectivitySubBusContext | ConnectivitySubBusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivitySubBusContext);
		} else {
			return this.getRuleContext(i, ConnectivitySubBusContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityBus; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityBus) {
			listener.enterConnectivityBus(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityBus) {
			listener.exitConnectivityBus(this);
		}
	}
}


export class ConnectivityBusJoinedContext extends ParserRuleContext {
	public portJoined(): PortJoinedContext {
		return this.getRuleContext(0, PortJoinedContext);
	}
	public connectivityRipperRef(): ConnectivityRipperRefContext[];
	public connectivityRipperRef(i: number): ConnectivityRipperRefContext;
	public connectivityRipperRef(i?: number): ConnectivityRipperRefContext | ConnectivityRipperRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityRipperRefContext);
		} else {
			return this.getRuleContext(i, ConnectivityRipperRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityBusJoined; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityBusJoined) {
			listener.enterConnectivityBusJoined(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityBusJoined) {
			listener.exitConnectivityBusJoined(this);
		}
	}
}


export class ConnectivityBusSliceContext extends ParserRuleContext {
	public interconnectNameDef(): InterconnectNameDefContext {
		return this.getRuleContext(0, InterconnectNameDefContext);
	}
	public signalGroupRef(): SignalGroupRefContext {
		return this.getRuleContext(0, SignalGroupRefContext);
	}
	public interconnectHeader(): InterconnectHeaderContext {
		return this.getRuleContext(0, InterconnectHeaderContext);
	}
	public connectivityBusJoined(): ConnectivityBusJoinedContext {
		return this.getRuleContext(0, ConnectivityBusJoinedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public connectivityBusSlice(): ConnectivityBusSliceContext[];
	public connectivityBusSlice(i: number): ConnectivityBusSliceContext;
	public connectivityBusSlice(i?: number): ConnectivityBusSliceContext | ConnectivityBusSliceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityBusSliceContext);
		} else {
			return this.getRuleContext(i, ConnectivityBusSliceContext);
		}
	}
	public connectivitySubBus(): ConnectivitySubBusContext[];
	public connectivitySubBus(i: number): ConnectivitySubBusContext;
	public connectivitySubBus(i?: number): ConnectivitySubBusContext | ConnectivitySubBusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivitySubBusContext);
		} else {
			return this.getRuleContext(i, ConnectivitySubBusContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityBusSlice; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityBusSlice) {
			listener.enterConnectivityBusSlice(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityBusSlice) {
			listener.exitConnectivityBusSlice(this);
		}
	}
}


export class ConnectivityFrameStructureContext extends ParserRuleContext {
	public connectivityFrameStructureNameDef(): ConnectivityFrameStructureNameDefContext {
		return this.getRuleContext(0, ConnectivityFrameStructureNameDefContext);
	}
	public frameRef(): FrameRefContext {
		return this.getRuleContext(0, FrameRefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public connectivityBus(): ConnectivityBusContext[];
	public connectivityBus(i: number): ConnectivityBusContext;
	public connectivityBus(i?: number): ConnectivityBusContext | ConnectivityBusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityBusContext);
		} else {
			return this.getRuleContext(i, ConnectivityBusContext);
		}
	}
	public connectivityFrameStructure(): ConnectivityFrameStructureContext[];
	public connectivityFrameStructure(i: number): ConnectivityFrameStructureContext;
	public connectivityFrameStructure(i?: number): ConnectivityFrameStructureContext | ConnectivityFrameStructureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityFrameStructureContext);
		} else {
			return this.getRuleContext(i, ConnectivityFrameStructureContext);
		}
	}
	public connectivityNet(): ConnectivityNetContext[];
	public connectivityNet(i: number): ConnectivityNetContext;
	public connectivityNet(i?: number): ConnectivityNetContext | ConnectivityNetContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityNetContext);
		} else {
			return this.getRuleContext(i, ConnectivityNetContext);
		}
	}
	public connectivityRipper(): ConnectivityRipperContext[];
	public connectivityRipper(i: number): ConnectivityRipperContext;
	public connectivityRipper(i?: number): ConnectivityRipperContext | ConnectivityRipperContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityRipperContext);
		} else {
			return this.getRuleContext(i, ConnectivityRipperContext);
		}
	}
	public timing(): TimingContext[];
	public timing(i: number): TimingContext;
	public timing(i?: number): TimingContext | TimingContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TimingContext);
		} else {
			return this.getRuleContext(i, TimingContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityFrameStructure; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityFrameStructure) {
			listener.enterConnectivityFrameStructure(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityFrameStructure) {
			listener.exitConnectivityFrameStructure(this);
		}
	}
}


export class ConnectivityFrameStructureNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityFrameStructureNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityFrameStructureNameDef) {
			listener.enterConnectivityFrameStructureNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityFrameStructureNameDef) {
			listener.exitConnectivityFrameStructureNameDef(this);
		}
	}
}


export class ConnectivityNetContext extends ParserRuleContext {
	public interconnectNameDef(): InterconnectNameDefContext {
		return this.getRuleContext(0, InterconnectNameDefContext);
	}
	public signalRef(): SignalRefContext {
		return this.getRuleContext(0, SignalRefContext);
	}
	public interconnectHeader(): InterconnectHeaderContext {
		return this.getRuleContext(0, InterconnectHeaderContext);
	}
	public connectivityNetJoined(): ConnectivityNetJoinedContext {
		return this.getRuleContext(0, ConnectivityNetJoinedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public connectivitySubNet(): ConnectivitySubNetContext[];
	public connectivitySubNet(i: number): ConnectivitySubNetContext;
	public connectivitySubNet(i?: number): ConnectivitySubNetContext | ConnectivitySubNetContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivitySubNetContext);
		} else {
			return this.getRuleContext(i, ConnectivitySubNetContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityNet; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityNet) {
			listener.enterConnectivityNet(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityNet) {
			listener.exitConnectivityNet(this);
		}
	}
}


export class ConnectivityNetJoinedContext extends ParserRuleContext {
	public portJoined(): PortJoinedContext | undefined {
		return this.tryGetRuleContext(0, PortJoinedContext);
	}
	public joinedAsSignal(): JoinedAsSignalContext | undefined {
		return this.tryGetRuleContext(0, JoinedAsSignalContext);
	}
	public connectivityRipperRef(): ConnectivityRipperRefContext[];
	public connectivityRipperRef(i: number): ConnectivityRipperRefContext;
	public connectivityRipperRef(i?: number): ConnectivityRipperRefContext | ConnectivityRipperRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityRipperRefContext);
		} else {
			return this.getRuleContext(i, ConnectivityRipperRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityNetJoined; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityNetJoined) {
			listener.enterConnectivityNetJoined(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityNetJoined) {
			listener.exitConnectivityNetJoined(this);
		}
	}
}


export class ConnectivityRipperContext extends ParserRuleContext {
	public connectivityRipperNameDef(): ConnectivityRipperNameDefContext {
		return this.getRuleContext(0, ConnectivityRipperNameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityRipper; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityRipper) {
			listener.enterConnectivityRipper(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityRipper) {
			listener.exitConnectivityRipper(this);
		}
	}
}


export class ConnectivityRipperNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityRipperNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityRipperNameDef) {
			listener.enterConnectivityRipperNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityRipperNameDef) {
			listener.exitConnectivityRipperNameDef(this);
		}
	}
}


export class ConnectivityRipperNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityRipperNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityRipperNameRef) {
			listener.enterConnectivityRipperNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityRipperNameRef) {
			listener.exitConnectivityRipperNameRef(this);
		}
	}
}


export class ConnectivityRipperRefContext extends ParserRuleContext {
	public connectivityRipperNameRef(): ConnectivityRipperNameRefContext {
		return this.getRuleContext(0, ConnectivityRipperNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityRipperRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityRipperRef) {
			listener.enterConnectivityRipperRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityRipperRef) {
			listener.exitConnectivityRipperRef(this);
		}
	}
}


export class ConnectivityStructureContext extends ParserRuleContext {
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public connectivityBus(): ConnectivityBusContext[];
	public connectivityBus(i: number): ConnectivityBusContext;
	public connectivityBus(i?: number): ConnectivityBusContext | ConnectivityBusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityBusContext);
		} else {
			return this.getRuleContext(i, ConnectivityBusContext);
		}
	}
	public connectivityFrameStructure(): ConnectivityFrameStructureContext[];
	public connectivityFrameStructure(i: number): ConnectivityFrameStructureContext;
	public connectivityFrameStructure(i?: number): ConnectivityFrameStructureContext | ConnectivityFrameStructureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityFrameStructureContext);
		} else {
			return this.getRuleContext(i, ConnectivityFrameStructureContext);
		}
	}
	public connectivityNet(): ConnectivityNetContext[];
	public connectivityNet(i: number): ConnectivityNetContext;
	public connectivityNet(i?: number): ConnectivityNetContext | ConnectivityNetContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityNetContext);
		} else {
			return this.getRuleContext(i, ConnectivityNetContext);
		}
	}
	public connectivityRipper(): ConnectivityRipperContext[];
	public connectivityRipper(i: number): ConnectivityRipperContext;
	public connectivityRipper(i?: number): ConnectivityRipperContext | ConnectivityRipperContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityRipperContext);
		} else {
			return this.getRuleContext(i, ConnectivityRipperContext);
		}
	}
	public localPortGroup(): LocalPortGroupContext[];
	public localPortGroup(i: number): LocalPortGroupContext;
	public localPortGroup(i?: number): LocalPortGroupContext | LocalPortGroupContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LocalPortGroupContext);
		} else {
			return this.getRuleContext(i, LocalPortGroupContext);
		}
	}
	public timing(): TimingContext[];
	public timing(i: number): TimingContext;
	public timing(i?: number): TimingContext | TimingContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TimingContext);
		} else {
			return this.getRuleContext(i, TimingContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityStructure; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityStructure) {
			listener.enterConnectivityStructure(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityStructure) {
			listener.exitConnectivityStructure(this);
		}
	}
}


export class ConnectivitySubBusContext extends ParserRuleContext {
	public interconnectNameDef(): InterconnectNameDefContext {
		return this.getRuleContext(0, InterconnectNameDefContext);
	}
	public interconnectHeader(): InterconnectHeaderContext {
		return this.getRuleContext(0, InterconnectHeaderContext);
	}
	public connectivityBusJoined(): ConnectivityBusJoinedContext {
		return this.getRuleContext(0, ConnectivityBusJoinedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public connectivityBusSlice(): ConnectivityBusSliceContext[];
	public connectivityBusSlice(i: number): ConnectivityBusSliceContext;
	public connectivityBusSlice(i?: number): ConnectivityBusSliceContext | ConnectivityBusSliceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityBusSliceContext);
		} else {
			return this.getRuleContext(i, ConnectivityBusSliceContext);
		}
	}
	public connectivitySubBus(): ConnectivitySubBusContext[];
	public connectivitySubBus(i: number): ConnectivitySubBusContext;
	public connectivitySubBus(i?: number): ConnectivitySubBusContext | ConnectivitySubBusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivitySubBusContext);
		} else {
			return this.getRuleContext(i, ConnectivitySubBusContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivitySubBus; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivitySubBus) {
			listener.enterConnectivitySubBus(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivitySubBus) {
			listener.exitConnectivitySubBus(this);
		}
	}
}


export class ConnectivitySubNetContext extends ParserRuleContext {
	public interconnectNameDef(): InterconnectNameDefContext {
		return this.getRuleContext(0, InterconnectNameDefContext);
	}
	public interconnectHeader(): InterconnectHeaderContext {
		return this.getRuleContext(0, InterconnectHeaderContext);
	}
	public connectivityNetJoined(): ConnectivityNetJoinedContext {
		return this.getRuleContext(0, ConnectivityNetJoinedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public connectivitySubNet(): ConnectivitySubNetContext[];
	public connectivitySubNet(i: number): ConnectivitySubNetContext;
	public connectivitySubNet(i?: number): ConnectivitySubNetContext | ConnectivitySubNetContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivitySubNetContext);
		} else {
			return this.getRuleContext(i, ConnectivitySubNetContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivitySubNet; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivitySubNet) {
			listener.enterConnectivitySubNet(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivitySubNet) {
			listener.exitConnectivitySubNet(this);
		}
	}
}


export class ConnectivityTagGeneratorContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityTagGenerator; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityTagGenerator) {
			listener.enterConnectivityTagGenerator(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityTagGenerator) {
			listener.exitConnectivityTagGenerator(this);
		}
	}
}


export class ConnectivityTagGeneratorDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityTagGeneratorDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityTagGeneratorDisplay) {
			listener.enterConnectivityTagGeneratorDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityTagGeneratorDisplay) {
			listener.exitConnectivityTagGeneratorDisplay(this);
		}
	}
}


export class ConnectivityUnitsContext extends ParserRuleContext {
	public setCapacitance(): SetCapacitanceContext | undefined {
		return this.tryGetRuleContext(0, SetCapacitanceContext);
	}
	public setTime(): SetTimeContext | undefined {
		return this.tryGetRuleContext(0, SetTimeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityUnits) {
			listener.enterConnectivityUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityUnits) {
			listener.exitConnectivityUnits(this);
		}
	}
}


export class ConnectivityViewContext extends ParserRuleContext {
	public viewNameDef(): ViewNameDefContext {
		return this.getRuleContext(0, ViewNameDefContext);
	}
	public connectivityViewHeader(): ConnectivityViewHeaderContext {
		return this.getRuleContext(0, ConnectivityViewHeaderContext);
	}
	public logicalConnectivity(): LogicalConnectivityContext {
		return this.getRuleContext(0, LogicalConnectivityContext);
	}
	public connectivityStructure(): ConnectivityStructureContext {
		return this.getRuleContext(0, ConnectivityStructureContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityView; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityView) {
			listener.enterConnectivityView(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityView) {
			listener.exitConnectivityView(this);
		}
	}
}


export class ConnectivityViewHeaderContext extends ParserRuleContext {
	public connectivityUnits(): ConnectivityUnitsContext {
		return this.getRuleContext(0, ConnectivityUnitsContext);
	}
	public derivedFrom(): DerivedFromContext[];
	public derivedFrom(i: number): DerivedFromContext;
	public derivedFrom(i?: number): DerivedFromContext | DerivedFromContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DerivedFromContext);
		} else {
			return this.getRuleContext(i, DerivedFromContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public previousVersion(): PreviousVersionContext[];
	public previousVersion(i: number): PreviousVersionContext;
	public previousVersion(i?: number): PreviousVersionContext | PreviousVersionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PreviousVersionContext);
		} else {
			return this.getRuleContext(i, PreviousVersionContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_connectivityViewHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConnectivityViewHeader) {
			listener.enterConnectivityViewHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConnectivityViewHeader) {
			listener.exitConnectivityViewHeader(this);
		}
	}
}


export class ConstantNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_constantNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConstantNameDef) {
			listener.enterConstantNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConstantNameDef) {
			listener.exitConstantNameDef(this);
		}
	}
}


export class ConstantNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_constantNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConstantNameRef) {
			listener.enterConstantNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConstantNameRef) {
			listener.exitConstantNameRef(this);
		}
	}
}


export class ConstantValuesContext extends ParserRuleContext {
	public booleanConstant(): BooleanConstantContext[];
	public booleanConstant(i: number): BooleanConstantContext;
	public booleanConstant(i?: number): BooleanConstantContext | BooleanConstantContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BooleanConstantContext);
		} else {
			return this.getRuleContext(i, BooleanConstantContext);
		}
	}
	public integerConstant(): IntegerConstantContext[];
	public integerConstant(i: number): IntegerConstantContext;
	public integerConstant(i?: number): IntegerConstantContext | IntegerConstantContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerConstantContext);
		} else {
			return this.getRuleContext(i, IntegerConstantContext);
		}
	}
	public stringConstant(): StringConstantContext[];
	public stringConstant(i: number): StringConstantContext;
	public stringConstant(i?: number): StringConstantContext | StringConstantContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringConstantContext);
		} else {
			return this.getRuleContext(i, StringConstantContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_constantValues; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterConstantValues) {
			listener.enterConstantValues(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitConstantValues) {
			listener.exitConstantValues(this);
		}
	}
}


export class ContractContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_contract; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterContract) {
			listener.enterContract(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitContract) {
			listener.exitContract(this);
		}
	}
}


export class ContractDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_contractDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterContractDisplay) {
			listener.enterContractDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitContractDisplay) {
			listener.exitContractDisplay(this);
		}
	}
}


export class CopyrightContext extends ParserRuleContext {
	public year(): YearContext {
		return this.getRuleContext(0, YearContext);
	}
	public stringToken(): StringTokenContext[];
	public stringToken(i: number): StringTokenContext;
	public stringToken(i?: number): StringTokenContext | StringTokenContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringTokenContext);
		} else {
			return this.getRuleContext(i, StringTokenContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_copyright; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCopyright) {
			listener.enterCopyright(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCopyright) {
			listener.exitCopyright(this);
		}
	}
}


export class CopyrightDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_copyrightDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCopyrightDisplay) {
			listener.enterCopyrightDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCopyrightDisplay) {
			listener.exitCopyrightDisplay(this);
		}
	}
}


export class CornerTypeContext extends ParserRuleContext {
	public truncate(): TruncateContext | undefined {
		return this.tryGetRuleContext(0, TruncateContext);
	}
	public round(): RoundContext | undefined {
		return this.tryGetRuleContext(0, RoundContext);
	}
	public extend(): ExtendContext | undefined {
		return this.tryGetRuleContext(0, ExtendContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_cornerType; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCornerType) {
			listener.enterCornerType(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCornerType) {
			listener.exitCornerType(this);
		}
	}
}


export class CoulombContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_coulomb; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCoulomb) {
			listener.enterCoulomb(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCoulomb) {
			listener.exitCoulomb(this);
		}
	}
}


export class CriticalityContext extends ParserRuleContext {
	public integerValue(): IntegerValueContext {
		return this.getRuleContext(0, IntegerValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_criticality; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCriticality) {
			listener.enterCriticality(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCriticality) {
			listener.exitCriticality(this);
		}
	}
}


export class CriticalityDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_criticalityDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCriticalityDisplay) {
			listener.enterCriticalityDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCriticalityDisplay) {
			listener.exitCriticalityDisplay(this);
		}
	}
}


export class CurrentMapContext extends ParserRuleContext {
	public currentValue(): CurrentValueContext {
		return this.getRuleContext(0, CurrentValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_currentMap; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCurrentMap) {
			listener.enterCurrentMap(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCurrentMap) {
			listener.exitCurrentMap(this);
		}
	}
}


export class CurrentValueContext extends ParserRuleContext {
	public miNoMaxValue(): MiNoMaxValueContext {
		return this.getRuleContext(0, MiNoMaxValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_currentValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCurrentValue) {
			listener.enterCurrentValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCurrentValue) {
			listener.exitCurrentValue(this);
		}
	}
}


export class CurveContext extends ParserRuleContext {
	public arc(): ArcContext[];
	public arc(i: number): ArcContext;
	public arc(i?: number): ArcContext | ArcContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ArcContext);
		} else {
			return this.getRuleContext(i, ArcContext);
		}
	}
	public pointValue(): PointValueContext[];
	public pointValue(i: number): PointValueContext;
	public pointValue(i?: number): PointValueContext | PointValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PointValueContext);
		} else {
			return this.getRuleContext(i, PointValueContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_curve; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterCurve) {
			listener.enterCurve(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitCurve) {
			listener.exitCurve(this);
		}
	}
}


export class DataOriginContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	public version(): VersionContext | undefined {
		return this.tryGetRuleContext(0, VersionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dataOrigin; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDataOrigin) {
			listener.enterDataOrigin(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDataOrigin) {
			listener.exitDataOrigin(this);
		}
	}
}


export class DateContext extends ParserRuleContext {
	public yearNumber(): YearNumberContext {
		return this.getRuleContext(0, YearNumberContext);
	}
	public monthNumber(): MonthNumberContext {
		return this.getRuleContext(0, MonthNumberContext);
	}
	public dayNumber(): DayNumberContext {
		return this.getRuleContext(0, DayNumberContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_date; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDate) {
			listener.enterDate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDate) {
			listener.exitDate(this);
		}
	}
}


export class DayNumberContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dayNumber; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDayNumber) {
			listener.enterDayNumber(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDayNumber) {
			listener.exitDayNumber(this);
		}
	}
}


export class DcFanInLoadContext extends ParserRuleContext {
	public numberValue(): NumberValueContext {
		return this.getRuleContext(0, NumberValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dcFanInLoad; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDcFanInLoad) {
			listener.enterDcFanInLoad(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDcFanInLoad) {
			listener.exitDcFanInLoad(this);
		}
	}
}


export class DcFanInLoadDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dcFanInLoadDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDcFanInLoadDisplay) {
			listener.enterDcFanInLoadDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDcFanInLoadDisplay) {
			listener.exitDcFanInLoadDisplay(this);
		}
	}
}


export class DcFanOutLoadContext extends ParserRuleContext {
	public numberValue(): NumberValueContext {
		return this.getRuleContext(0, NumberValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dcFanOutLoad; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDcFanOutLoad) {
			listener.enterDcFanOutLoad(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDcFanOutLoad) {
			listener.exitDcFanOutLoad(this);
		}
	}
}


export class DcFanOutLoadDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dcFanOutLoadDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDcFanOutLoadDisplay) {
			listener.enterDcFanOutLoadDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDcFanOutLoadDisplay) {
			listener.exitDcFanOutLoadDisplay(this);
		}
	}
}


export class DcMaxFanInContext extends ParserRuleContext {
	public numberValue(): NumberValueContext {
		return this.getRuleContext(0, NumberValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dcMaxFanIn; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDcMaxFanIn) {
			listener.enterDcMaxFanIn(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDcMaxFanIn) {
			listener.exitDcMaxFanIn(this);
		}
	}
}


export class DcMaxFanInDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dcMaxFanInDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDcMaxFanInDisplay) {
			listener.enterDcMaxFanInDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDcMaxFanInDisplay) {
			listener.exitDcMaxFanInDisplay(this);
		}
	}
}


export class DcMaxFanOutContext extends ParserRuleContext {
	public numberValue(): NumberValueContext {
		return this.getRuleContext(0, NumberValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dcMaxFanOut; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDcMaxFanOut) {
			listener.enterDcMaxFanOut(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDcMaxFanOut) {
			listener.exitDcMaxFanOut(this);
		}
	}
}


export class DcMaxFanOutDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dcMaxFanOutDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDcMaxFanOutDisplay) {
			listener.enterDcMaxFanOutDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDcMaxFanOutDisplay) {
			listener.exitDcMaxFanOutDisplay(this);
		}
	}
}


export class DecimalToStringContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	public minimumStringLength(): MinimumStringLengthContext | undefined {
		return this.tryGetRuleContext(0, MinimumStringLengthContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_decimalToString; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDecimalToString) {
			listener.enterDecimalToString(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDecimalToString) {
			listener.exitDecimalToString(this);
		}
	}
}


export class DefaultClusterConfigurationContext extends ParserRuleContext {
	public clusterConfigurationNameRef(): ClusterConfigurationNameRefContext {
		return this.getRuleContext(0, ClusterConfigurationNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_defaultClusterConfiguration; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDefaultClusterConfiguration) {
			listener.enterDefaultClusterConfiguration(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDefaultClusterConfiguration) {
			listener.exitDefaultClusterConfiguration(this);
		}
	}
}


export class DefaultConnectionContext extends ParserRuleContext {
	public globalPortRef(): GlobalPortRefContext {
		return this.getRuleContext(0, GlobalPortRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_defaultConnection; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDefaultConnection) {
			listener.enterDefaultConnection(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDefaultConnection) {
			listener.exitDefaultConnection(this);
		}
	}
}


export class DegreeContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_degree; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDegree) {
			listener.enterDegree(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDegree) {
			listener.exitDegree(this);
		}
	}
}


export class DelayContext extends ParserRuleContext {
	public timeDelay(): TimeDelayContext {
		return this.getRuleContext(0, TimeDelayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_delay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDelay) {
			listener.enterDelay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDelay) {
			listener.exitDelay(this);
		}
	}
}


export class DenominatorContext extends ParserRuleContext {
	public integerValue(): IntegerValueContext {
		return this.getRuleContext(0, IntegerValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_denominator; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDenominator) {
			listener.enterDenominator(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDenominator) {
			listener.exitDenominator(this);
		}
	}
}


export class DerivationContext extends ParserRuleContext {
	public calculated(): CalculatedContext | undefined {
		return this.tryGetRuleContext(0, CalculatedContext);
	}
	public measured(): MeasuredContext | undefined {
		return this.tryGetRuleContext(0, MeasuredContext);
	}
	public required(): RequiredContext | undefined {
		return this.tryGetRuleContext(0, RequiredContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_derivation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDerivation) {
			listener.enterDerivation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDerivation) {
			listener.exitDerivation(this);
		}
	}
}


export class DerivedFromContext extends ParserRuleContext {
	public viewRef(): ViewRefContext {
		return this.getRuleContext(0, ViewRefContext);
	}
	public reason(): ReasonContext | undefined {
		return this.tryGetRuleContext(0, ReasonContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_derivedFrom; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDerivedFrom) {
			listener.enterDerivedFrom(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDerivedFrom) {
			listener.exitDerivedFrom(this);
		}
	}
}


export class DesignContext extends ParserRuleContext {
	public designNameDef(): DesignNameDefContext {
		return this.getRuleContext(0, DesignNameDefContext);
	}
	public cellRef(): CellRefContext {
		return this.getRuleContext(0, CellRefContext);
	}
	public designHeader(): DesignHeaderContext {
		return this.getRuleContext(0, DesignHeaderContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public designHierarchy(): DesignHierarchyContext[];
	public designHierarchy(i: number): DesignHierarchyContext;
	public designHierarchy(i?: number): DesignHierarchyContext | DesignHierarchyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignHierarchyContext);
		} else {
			return this.getRuleContext(i, DesignHierarchyContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_design; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesign) {
			listener.enterDesign(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesign) {
			listener.exitDesign(this);
		}
	}
}


export class DesignatorContext extends ParserRuleContext {
	public stringValue(): StringValueContext {
		return this.getRuleContext(0, StringValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_designator; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesignator) {
			listener.enterDesignator(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesignator) {
			listener.exitDesignator(this);
		}
	}
}


export class DesignatorDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_designatorDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesignatorDisplay) {
			listener.enterDesignatorDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesignatorDisplay) {
			listener.exitDesignatorDisplay(this);
		}
	}
}


export class DesignHeaderContext extends ParserRuleContext {
	public designUnits(): DesignUnitsContext {
		return this.getRuleContext(0, DesignUnitsContext);
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_designHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesignHeader) {
			listener.enterDesignHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesignHeader) {
			listener.exitDesignHeader(this);
		}
	}
}


export class DesignHierarchyContext extends ParserRuleContext {
	public designHierarchyNameDef(): DesignHierarchyNameDefContext {
		return this.getRuleContext(0, DesignHierarchyNameDefContext);
	}
	public clusterRef(): ClusterRefContext {
		return this.getRuleContext(0, ClusterRefContext);
	}
	public clusterConfigurationRef(): ClusterConfigurationRefContext {
		return this.getRuleContext(0, ClusterConfigurationRefContext);
	}
	public designHierarchyHeader(): DesignHierarchyHeaderContext {
		return this.getRuleContext(0, DesignHierarchyHeaderContext);
	}
	public occurrenceHierarchyAnnotate(): OccurrenceHierarchyAnnotateContext | undefined {
		return this.tryGetRuleContext(0, OccurrenceHierarchyAnnotateContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_designHierarchy; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesignHierarchy) {
			listener.enterDesignHierarchy(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesignHierarchy) {
			listener.exitDesignHierarchy(this);
		}
	}
}


export class DesignHierarchyHeaderContext extends ParserRuleContext {
	public booleanParameterAssign(): BooleanParameterAssignContext[];
	public booleanParameterAssign(i: number): BooleanParameterAssignContext;
	public booleanParameterAssign(i?: number): BooleanParameterAssignContext | BooleanParameterAssignContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BooleanParameterAssignContext);
		} else {
			return this.getRuleContext(i, BooleanParameterAssignContext);
		}
	}
	public integerParameterAssign(): IntegerParameterAssignContext[];
	public integerParameterAssign(i: number): IntegerParameterAssignContext;
	public integerParameterAssign(i?: number): IntegerParameterAssignContext | IntegerParameterAssignContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerParameterAssignContext);
		} else {
			return this.getRuleContext(i, IntegerParameterAssignContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public numberParameterAssign(): NumberParameterAssignContext[];
	public numberParameterAssign(i: number): NumberParameterAssignContext;
	public numberParameterAssign(i?: number): NumberParameterAssignContext | NumberParameterAssignContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NumberParameterAssignContext);
		} else {
			return this.getRuleContext(i, NumberParameterAssignContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public stringParameterAssign(): StringParameterAssignContext[];
	public stringParameterAssign(i: number): StringParameterAssignContext;
	public stringParameterAssign(i?: number): StringParameterAssignContext | StringParameterAssignContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringParameterAssignContext);
		} else {
			return this.getRuleContext(i, StringParameterAssignContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_designHierarchyHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesignHierarchyHeader) {
			listener.enterDesignHierarchyHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesignHierarchyHeader) {
			listener.exitDesignHierarchyHeader(this);
		}
	}
}


export class DesignHierarchyNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_designHierarchyNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesignHierarchyNameCaseSensitive) {
			listener.enterDesignHierarchyNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesignHierarchyNameCaseSensitive) {
			listener.exitDesignHierarchyNameCaseSensitive(this);
		}
	}
}


export class DesignHierarchyNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_designHierarchyNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesignHierarchyNameDef) {
			listener.enterDesignHierarchyNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesignHierarchyNameDef) {
			listener.exitDesignHierarchyNameDef(this);
		}
	}
}


export class DesignNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_designNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesignNameCaseSensitive) {
			listener.enterDesignNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesignNameCaseSensitive) {
			listener.exitDesignNameCaseSensitive(this);
		}
	}
}


export class DesignNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_designNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesignNameDef) {
			listener.enterDesignNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesignNameDef) {
			listener.exitDesignNameDef(this);
		}
	}
}


export class DesignUnitsContext extends ParserRuleContext {
	public setCapacitance(): SetCapacitanceContext[];
	public setCapacitance(i: number): SetCapacitanceContext;
	public setCapacitance(i?: number): SetCapacitanceContext | SetCapacitanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetCapacitanceContext);
		} else {
			return this.getRuleContext(i, SetCapacitanceContext);
		}
	}
	public setTime(): SetTimeContext[];
	public setTime(i: number): SetTimeContext;
	public setTime(i?: number): SetTimeContext | SetTimeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetTimeContext);
		} else {
			return this.getRuleContext(i, SetTimeContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_designUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDesignUnits) {
			listener.enterDesignUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDesignUnits) {
			listener.exitDesignUnits(this);
		}
	}
}


export class DiagramContext extends ParserRuleContext {
	public diagramNameDef(): DiagramNameDefContext {
		return this.getRuleContext(0, DiagramNameDefContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_diagram; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDiagram) {
			listener.enterDiagram(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDiagram) {
			listener.exitDiagram(this);
		}
	}
}


export class DiagramNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_diagramNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDiagramNameDef) {
			listener.enterDiagramNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDiagramNameDef) {
			listener.exitDiagramNameDef(this);
		}
	}
}


export class DirectionalPortAttributeOverrideContext extends ParserRuleContext {
	public inputPortAttributes(): InputPortAttributesContext | undefined {
		return this.tryGetRuleContext(0, InputPortAttributesContext);
	}
	public outputPortAttributes(): OutputPortAttributesContext | undefined {
		return this.tryGetRuleContext(0, OutputPortAttributesContext);
	}
	public bidirectionalPortAttributes(): BidirectionalPortAttributesContext | undefined {
		return this.tryGetRuleContext(0, BidirectionalPortAttributesContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_directionalPortAttributeOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDirectionalPortAttributeOverride) {
			listener.enterDirectionalPortAttributeOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDirectionalPortAttributeOverride) {
			listener.exitDirectionalPortAttributeOverride(this);
		}
	}
}


export class DisplayContext extends ParserRuleContext {
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public figureGroupNameRef(): FigureGroupNameRefContext[];
	public figureGroupNameRef(i: number): FigureGroupNameRefContext;
	public figureGroupNameRef(i?: number): FigureGroupNameRefContext | FigureGroupNameRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureGroupNameRefContext);
		} else {
			return this.getRuleContext(i, FigureGroupNameRefContext);
		}
	}
	public figureGroupOverride(): FigureGroupOverrideContext[];
	public figureGroupOverride(i: number): FigureGroupOverrideContext;
	public figureGroupOverride(i?: number): FigureGroupOverrideContext | FigureGroupOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureGroupOverrideContext);
		} else {
			return this.getRuleContext(i, FigureGroupOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_display; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDisplay) {
			listener.enterDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDisplay) {
			listener.exitDisplay(this);
		}
	}
}


export class DisplayAttributesContext extends ParserRuleContext {
	public borderPattern(): BorderPatternContext[];
	public borderPattern(i: number): BorderPatternContext;
	public borderPattern(i?: number): BorderPatternContext | BorderPatternContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BorderPatternContext);
		} else {
			return this.getRuleContext(i, BorderPatternContext);
		}
	}
	public borderPatternVisible(): BorderPatternVisibleContext[];
	public borderPatternVisible(i: number): BorderPatternVisibleContext;
	public borderPatternVisible(i?: number): BorderPatternVisibleContext | BorderPatternVisibleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BorderPatternVisibleContext);
		} else {
			return this.getRuleContext(i, BorderPatternVisibleContext);
		}
	}
	public borderWidth(): BorderWidthContext[];
	public borderWidth(i: number): BorderWidthContext;
	public borderWidth(i?: number): BorderWidthContext | BorderWidthContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BorderWidthContext);
		} else {
			return this.getRuleContext(i, BorderWidthContext);
		}
	}
	public color(): ColorContext[];
	public color(i: number): ColorContext;
	public color(i?: number): ColorContext | ColorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ColorContext);
		} else {
			return this.getRuleContext(i, ColorContext);
		}
	}
	public fillPattern(): FillPatternContext[];
	public fillPattern(i: number): FillPatternContext;
	public fillPattern(i?: number): FillPatternContext | FillPatternContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FillPatternContext);
		} else {
			return this.getRuleContext(i, FillPatternContext);
		}
	}
	public fillPatternVisible(): FillPatternVisibleContext[];
	public fillPatternVisible(i: number): FillPatternVisibleContext;
	public fillPatternVisible(i?: number): FillPatternVisibleContext | FillPatternVisibleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FillPatternVisibleContext);
		} else {
			return this.getRuleContext(i, FillPatternVisibleContext);
		}
	}
	public fontRef(): FontRefContext[];
	public fontRef(i: number): FontRefContext;
	public fontRef(i?: number): FontRefContext | FontRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FontRefContext);
		} else {
			return this.getRuleContext(i, FontRefContext);
		}
	}
	public horizontalJustification(): HorizontalJustificationContext[];
	public horizontalJustification(i: number): HorizontalJustificationContext;
	public horizontalJustification(i?: number): HorizontalJustificationContext | HorizontalJustificationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(HorizontalJustificationContext);
		} else {
			return this.getRuleContext(i, HorizontalJustificationContext);
		}
	}
	public textHeight(): TextHeightContext[];
	public textHeight(i: number): TextHeightContext;
	public textHeight(i?: number): TextHeightContext | TextHeightContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TextHeightContext);
		} else {
			return this.getRuleContext(i, TextHeightContext);
		}
	}
	public verticalJustification(): VerticalJustificationContext[];
	public verticalJustification(i: number): VerticalJustificationContext;
	public verticalJustification(i?: number): VerticalJustificationContext | VerticalJustificationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(VerticalJustificationContext);
		} else {
			return this.getRuleContext(i, VerticalJustificationContext);
		}
	}
	public visible(): VisibleContext[];
	public visible(i: number): VisibleContext;
	public visible(i?: number): VisibleContext | VisibleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(VisibleContext);
		} else {
			return this.getRuleContext(i, VisibleContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_displayAttributes; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDisplayAttributes) {
			listener.enterDisplayAttributes(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDisplayAttributes) {
			listener.exitDisplayAttributes(this);
		}
	}
}


export class DisplayNameContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_displayName; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDisplayName) {
			listener.enterDisplayName(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDisplayName) {
			listener.exitDisplayName(this);
		}
	}
}


export class DisplayNameOverrideContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_displayNameOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDisplayNameOverride) {
			listener.enterDisplayNameOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDisplayNameOverride) {
			listener.exitDisplayNameOverride(this);
		}
	}
}


export class DistanceValueContext extends ParserRuleContext {
	public integerValue(): IntegerValueContext {
		return this.getRuleContext(0, IntegerValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_distanceValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDistanceValue) {
			listener.enterDistanceValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDistanceValue) {
			listener.exitDistanceValue(this);
		}
	}
}


export class DividendContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dividend; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDividend) {
			listener.enterDividend(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDividend) {
			listener.exitDividend(this);
		}
	}
}


export class DivisorContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_divisor; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDivisor) {
			listener.enterDivisor(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDivisor) {
			listener.exitDivisor(this);
		}
	}
}


export class DocumentationContext extends ParserRuleContext {
	public documentationNameDef(): DocumentationNameDefContext {
		return this.getRuleContext(0, DocumentationNameDefContext);
	}
	public documentationHeader(): DocumentationHeaderContext {
		return this.getRuleContext(0, DocumentationHeaderContext);
	}
	public section(): SectionContext[];
	public section(i: number): SectionContext;
	public section(i?: number): SectionContext | SectionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SectionContext);
		} else {
			return this.getRuleContext(i, SectionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_documentation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDocumentation) {
			listener.enterDocumentation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDocumentation) {
			listener.exitDocumentation(this);
		}
	}
}


export class DocumentationHeaderContext extends ParserRuleContext {
	public documentationUnits(): DocumentationUnitsContext {
		return this.getRuleContext(0, DocumentationUnitsContext);
	}
	public backgroundColor(): BackgroundColorContext[];
	public backgroundColor(i: number): BackgroundColorContext;
	public backgroundColor(i?: number): BackgroundColorContext | BackgroundColorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BackgroundColorContext);
		} else {
			return this.getRuleContext(i, BackgroundColorContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_documentationHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDocumentationHeader) {
			listener.enterDocumentationHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDocumentationHeader) {
			listener.exitDocumentationHeader(this);
		}
	}
}


export class DocumentationNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_documentationNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDocumentationNameCaseSensitive) {
			listener.enterDocumentationNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDocumentationNameCaseSensitive) {
			listener.exitDocumentationNameCaseSensitive(this);
		}
	}
}


export class DocumentationNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_documentationNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDocumentationNameDef) {
			listener.enterDocumentationNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDocumentationNameDef) {
			listener.exitDocumentationNameDef(this);
		}
	}
}


export class DocumentationUnitsContext extends ParserRuleContext {
	public setAngle(): SetAngleContext[];
	public setAngle(i: number): SetAngleContext;
	public setAngle(i?: number): SetAngleContext | SetAngleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetAngleContext);
		} else {
			return this.getRuleContext(i, SetAngleContext);
		}
	}
	public setDistance(): SetDistanceContext[];
	public setDistance(i: number): SetDistanceContext;
	public setDistance(i?: number): SetDistanceContext | SetDistanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetDistanceContext);
		} else {
			return this.getRuleContext(i, SetDistanceContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_documentationUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDocumentationUnits) {
			listener.enterDocumentationUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDocumentationUnits) {
			listener.exitDocumentationUnits(this);
		}
	}
}


export class DominatesContext extends ParserRuleContext {
	public logicNameRef(): LogicNameRefContext[];
	public logicNameRef(i: number): LogicNameRefContext;
	public logicNameRef(i?: number): LogicNameRefContext | LogicNameRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicNameRefContext);
		} else {
			return this.getRuleContext(i, LogicNameRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dominates; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDominates) {
			listener.enterDominates(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDominates) {
			listener.exitDominates(this);
		}
	}
}


export class DotContext extends ParserRuleContext {
	public pointValue(): PointValueContext {
		return this.getRuleContext(0, PointValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_dot; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDot) {
			listener.enterDot(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDot) {
			listener.exitDot(this);
		}
	}
}


export class DrawingDescriptionContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_drawingDescription; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDrawingDescription) {
			listener.enterDrawingDescription(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDrawingDescription) {
			listener.exitDrawingDescription(this);
		}
	}
}


export class DrawingDescriptionDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_drawingDescriptionDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDrawingDescriptionDisplay) {
			listener.enterDrawingDescriptionDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDrawingDescriptionDisplay) {
			listener.exitDrawingDescriptionDisplay(this);
		}
	}
}


export class DrawingIdentificationContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_drawingIdentification; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDrawingIdentification) {
			listener.enterDrawingIdentification(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDrawingIdentification) {
			listener.exitDrawingIdentification(this);
		}
	}
}


export class DrawingIdentificationDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_drawingIdentificationDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDrawingIdentificationDisplay) {
			listener.enterDrawingIdentificationDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDrawingIdentificationDisplay) {
			listener.exitDrawingIdentificationDisplay(this);
		}
	}
}


export class DrawingSizeContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_drawingSize; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDrawingSize) {
			listener.enterDrawingSize(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDrawingSize) {
			listener.exitDrawingSize(this);
		}
	}
}


export class DrawingSizeDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_drawingSizeDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDrawingSizeDisplay) {
			listener.enterDrawingSizeDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDrawingSizeDisplay) {
			listener.exitDrawingSizeDisplay(this);
		}
	}
}


export class DurationContext extends ParserRuleContext {
	public timeValue(): TimeValueContext {
		return this.getRuleContext(0, TimeValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_duration; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterDuration) {
			listener.enterDuration(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitDuration) {
			listener.exitDuration(this);
		}
	}
}


export class EContext extends ParserRuleContext {
	public mantissa(): MantissaContext {
		return this.getRuleContext(0, MantissaContext);
	}
	public exponent(): ExponentContext {
		return this.getRuleContext(0, ExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_e; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterE) {
			listener.enterE(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitE) {
			listener.exitE(this);
		}
	}
}


export class EdifContext extends ParserRuleContext {
	public edifNameDef(): EdifNameDefContext {
		return this.getRuleContext(0, EdifNameDefContext);
	}
	public edifVersion(): EdifVersionContext {
		return this.getRuleContext(0, EdifVersionContext);
	}
	public edifHeader(): EdifHeaderContext {
		return this.getRuleContext(0, EdifHeaderContext);
	}
	public library(): LibraryContext[];
	public library(i: number): LibraryContext;
	public library(i?: number): LibraryContext | LibraryContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LibraryContext);
		} else {
			return this.getRuleContext(i, LibraryContext);
		}
	}
	public design(): DesignContext[];
	public design(i: number): DesignContext;
	public design(i?: number): DesignContext | DesignContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignContext);
		} else {
			return this.getRuleContext(i, DesignContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public external(): ExternalContext[];
	public external(i: number): ExternalContext;
	public external(i?: number): ExternalContext | ExternalContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ExternalContext);
		} else {
			return this.getRuleContext(i, ExternalContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_edif; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEdif) {
			listener.enterEdif(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEdif) {
			listener.exitEdif(this);
		}
	}
}


export class EdifHeaderContext extends ParserRuleContext {
	public edifLevel(): EdifLevelContext {
		return this.getRuleContext(0, EdifLevelContext);
	}
	public keywordMap(): KeywordMapContext {
		return this.getRuleContext(0, KeywordMapContext);
	}
	public unitDefinitions(): UnitDefinitionsContext {
		return this.getRuleContext(0, UnitDefinitionsContext);
	}
	public fontDefinitions(): FontDefinitionsContext {
		return this.getRuleContext(0, FontDefinitionsContext);
	}
	public physicalDefaults(): PhysicalDefaultsContext {
		return this.getRuleContext(0, PhysicalDefaultsContext);
	}
	public characterEncoding(): CharacterEncodingContext[];
	public characterEncoding(i: number): CharacterEncodingContext;
	public characterEncoding(i?: number): CharacterEncodingContext | CharacterEncodingContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CharacterEncodingContext);
		} else {
			return this.getRuleContext(i, CharacterEncodingContext);
		}
	}
	public constantValues(): ConstantValuesContext[];
	public constantValues(i: number): ConstantValuesContext;
	public constantValues(i?: number): ConstantValuesContext | ConstantValuesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConstantValuesContext);
		} else {
			return this.getRuleContext(i, ConstantValuesContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public globalPortDefinitions(): GlobalPortDefinitionsContext[];
	public globalPortDefinitions(i: number): GlobalPortDefinitionsContext;
	public globalPortDefinitions(i?: number): GlobalPortDefinitionsContext | GlobalPortDefinitionsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortDefinitionsContext);
		} else {
			return this.getRuleContext(i, GlobalPortDefinitionsContext);
		}
	}
	public nameCaseSensitivity(): NameCaseSensitivityContext[];
	public nameCaseSensitivity(i: number): NameCaseSensitivityContext;
	public nameCaseSensitivity(i?: number): NameCaseSensitivityContext | NameCaseSensitivityContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameCaseSensitivityContext);
		} else {
			return this.getRuleContext(i, NameCaseSensitivityContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public physicalScaling(): PhysicalScalingContext[];
	public physicalScaling(i: number): PhysicalScalingContext;
	public physicalScaling(i?: number): PhysicalScalingContext | PhysicalScalingContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PhysicalScalingContext);
		} else {
			return this.getRuleContext(i, PhysicalScalingContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_edifHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEdifHeader) {
			listener.enterEdifHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEdifHeader) {
			listener.exitEdifHeader(this);
		}
	}
}


export class EdifLevelContext extends ParserRuleContext {
	public edifLevelValue(): EdifLevelValueContext {
		return this.getRuleContext(0, EdifLevelValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_edifLevel; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEdifLevel) {
			listener.enterEdifLevel(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEdifLevel) {
			listener.exitEdifLevel(this);
		}
	}
}


export class EdifLevelValueContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_edifLevelValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEdifLevelValue) {
			listener.enterEdifLevelValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEdifLevelValue) {
			listener.exitEdifLevelValue(this);
		}
	}
}


export class EdifNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_edifNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEdifNameDef) {
			listener.enterEdifNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEdifNameDef) {
			listener.exitEdifNameDef(this);
		}
	}
}


export class EdifVersionContext extends ParserRuleContext {
	public mark(): MarkContext {
		return this.getRuleContext(0, MarkContext);
	}
	public issue(): IssueContext {
		return this.getRuleContext(0, IssueContext);
	}
	public subIssue(): SubIssueContext {
		return this.getRuleContext(0, SubIssueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_edifVersion; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEdifVersion) {
			listener.enterEdifVersion(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEdifVersion) {
			listener.exitEdifVersion(this);
		}
	}
}


export class EndPointContext extends ParserRuleContext {
	public pointValue(): PointValueContext {
		return this.getRuleContext(0, PointValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_endPoint; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEndPoint) {
			listener.enterEndPoint(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEndPoint) {
			listener.exitEndPoint(this);
		}
	}
}


export class EndTypeContext extends ParserRuleContext {
	public truncate(): TruncateContext | undefined {
		return this.tryGetRuleContext(0, TruncateContext);
	}
	public round(): RoundContext | undefined {
		return this.tryGetRuleContext(0, RoundContext);
	}
	public extend(): ExtendContext | undefined {
		return this.tryGetRuleContext(0, ExtendContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_endType; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEndType) {
			listener.enterEndType(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEndType) {
			listener.exitEndType(this);
		}
	}
}


export class EngineeringDateContext extends ParserRuleContext {
	public date(): DateContext {
		return this.getRuleContext(0, DateContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_engineeringDate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEngineeringDate) {
			listener.enterEngineeringDate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEngineeringDate) {
			listener.exitEngineeringDate(this);
		}
	}
}


export class EngineeringDateDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_engineeringDateDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEngineeringDateDisplay) {
			listener.enterEngineeringDateDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEngineeringDateDisplay) {
			listener.exitEngineeringDateDisplay(this);
		}
	}
}


export class EventContext extends ParserRuleContext {
	public portRef(): PortRefContext | undefined {
		return this.tryGetRuleContext(0, PortRefContext);
	}
	public portList(): PortListContext | undefined {
		return this.tryGetRuleContext(0, PortListContext);
	}
	public portSet(): PortSetContext | undefined {
		return this.tryGetRuleContext(0, PortSetContext);
	}
	public interconnectRef(): InterconnectRefContext | undefined {
		return this.tryGetRuleContext(0, InterconnectRefContext);
	}
	public interconnectSet(): InterconnectSetContext | undefined {
		return this.tryGetRuleContext(0, InterconnectSetContext);
	}
	public becomes(): BecomesContext[];
	public becomes(i: number): BecomesContext;
	public becomes(i?: number): BecomesContext | BecomesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BecomesContext);
		} else {
			return this.getRuleContext(i, BecomesContext);
		}
	}
	public transition(): TransitionContext[];
	public transition(i: number): TransitionContext;
	public transition(i?: number): TransitionContext | TransitionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TransitionContext);
		} else {
			return this.getRuleContext(i, TransitionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_event; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEvent) {
			listener.enterEvent(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEvent) {
			listener.exitEvent(this);
		}
	}
}


export class ExponentContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_exponent; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExponent) {
			listener.enterExponent(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExponent) {
			listener.exitExponent(this);
		}
	}
}


export class ExtendContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extend; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtend) {
			listener.enterExtend(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtend) {
			listener.exitExtend(this);
		}
	}
}


export class ExtendForFrameMemberDefContext extends ParserRuleContext {
	public forFrameMemberRef(): ForFrameMemberRefContext {
		return this.getRuleContext(0, ForFrameMemberRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendForFrameMemberDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendForFrameMemberDef) {
			listener.enterExtendForFrameMemberDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendForFrameMemberDef) {
			listener.exitExtendForFrameMemberDef(this);
		}
	}
}


export class ExtendFrameDefContext extends ParserRuleContext {
	public frameNameRef(): FrameNameRefContext {
		return this.getRuleContext(0, FrameNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendFrameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendFrameDef) {
			listener.enterExtendFrameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendFrameDef) {
			listener.exitExtendFrameDef(this);
		}
	}
}


export class ExtendInstanceDefContext extends ParserRuleContext {
	public instanceNameRef(): InstanceNameRefContext {
		return this.getRuleContext(0, InstanceNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendInstanceDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendInstanceDef) {
			listener.enterExtendInstanceDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendInstanceDef) {
			listener.exitExtendInstanceDef(this);
		}
	}
}


export class ExtendInstanceMemberDefContext extends ParserRuleContext {
	public instanceMemberRef(): InstanceMemberRefContext {
		return this.getRuleContext(0, InstanceMemberRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendInstanceMemberDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendInstanceMemberDef) {
			listener.enterExtendInstanceMemberDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendInstanceMemberDef) {
			listener.exitExtendInstanceMemberDef(this);
		}
	}
}


export class ExtendInterconnectDefContext extends ParserRuleContext {
	public interconnectNameRef(): InterconnectNameRefContext {
		return this.getRuleContext(0, InterconnectNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendInterconnectDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendInterconnectDef) {
			listener.enterExtendInterconnectDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendInterconnectDef) {
			listener.exitExtendInterconnectDef(this);
		}
	}
}


export class ExtendPageDefContext extends ParserRuleContext {
	public pageNameRef(): PageNameRefContext {
		return this.getRuleContext(0, PageNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendPageDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendPageDef) {
			listener.enterExtendPageDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendPageDef) {
			listener.exitExtendPageDef(this);
		}
	}
}


export class ExtendPortDefContext extends ParserRuleContext {
	public portNameRef(): PortNameRefContext {
		return this.getRuleContext(0, PortNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendPortDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendPortDef) {
			listener.enterExtendPortDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendPortDef) {
			listener.exitExtendPortDef(this);
		}
	}
}


export class ExtendPortMemberDefContext extends ParserRuleContext {
	public portMemberRef(): PortMemberRefContext {
		return this.getRuleContext(0, PortMemberRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendPortMemberDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendPortMemberDef) {
			listener.enterExtendPortMemberDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendPortMemberDef) {
			listener.exitExtendPortMemberDef(this);
		}
	}
}


export class ExtendSignalDefContext extends ParserRuleContext {
	public signalNameRef(): SignalNameRefContext {
		return this.getRuleContext(0, SignalNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendSignalDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendSignalDef) {
			listener.enterExtendSignalDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendSignalDef) {
			listener.exitExtendSignalDef(this);
		}
	}
}


export class ExtendSignalGroupDefContext extends ParserRuleContext {
	public signalGroupNameRef(): SignalGroupNameRefContext {
		return this.getRuleContext(0, SignalGroupNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendSignalGroupDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendSignalGroupDef) {
			listener.enterExtendSignalGroupDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendSignalGroupDef) {
			listener.exitExtendSignalGroupDef(this);
		}
	}
}


export class ExtendSignalMemberDefContext extends ParserRuleContext {
	public signalMemberRef(): SignalMemberRefContext {
		return this.getRuleContext(0, SignalMemberRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_extendSignalMemberDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExtendSignalMemberDef) {
			listener.enterExtendSignalMemberDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExtendSignalMemberDef) {
			listener.exitExtendSignalMemberDef(this);
		}
	}
}


export class ExternalContext extends ParserRuleContext {
	public libraryNameDef(): LibraryNameDefContext {
		return this.getRuleContext(0, LibraryNameDefContext);
	}
	public libraryHeader(): LibraryHeaderContext {
		return this.getRuleContext(0, LibraryHeaderContext);
	}
	public cell(): CellContext[];
	public cell(i: number): CellContext;
	public cell(i?: number): CellContext | CellContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellContext);
		} else {
			return this.getRuleContext(i, CellContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public geometryMacro(): GeometryMacroContext[];
	public geometryMacro(i: number): GeometryMacroContext;
	public geometryMacro(i?: number): GeometryMacroContext | GeometryMacroContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GeometryMacroContext);
		} else {
			return this.getRuleContext(i, GeometryMacroContext);
		}
	}
	public pageBorderTemplate(): PageBorderTemplateContext[];
	public pageBorderTemplate(i: number): PageBorderTemplateContext;
	public pageBorderTemplate(i?: number): PageBorderTemplateContext | PageBorderTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageBorderTemplateContext);
		} else {
			return this.getRuleContext(i, PageBorderTemplateContext);
		}
	}
	public pageTitleBlockTemplate(): PageTitleBlockTemplateContext[];
	public pageTitleBlockTemplate(i: number): PageTitleBlockTemplateContext;
	public pageTitleBlockTemplate(i?: number): PageTitleBlockTemplateContext | PageTitleBlockTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageTitleBlockTemplateContext);
		} else {
			return this.getRuleContext(i, PageTitleBlockTemplateContext);
		}
	}
	public schematicFigureMacro(): SchematicFigureMacroContext[];
	public schematicFigureMacro(i: number): SchematicFigureMacroContext;
	public schematicFigureMacro(i?: number): SchematicFigureMacroContext | SchematicFigureMacroContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicFigureMacroContext);
		} else {
			return this.getRuleContext(i, SchematicFigureMacroContext);
		}
	}
	public schematicForFrameBorderTemplate(): SchematicForFrameBorderTemplateContext[];
	public schematicForFrameBorderTemplate(i: number): SchematicForFrameBorderTemplateContext;
	public schematicForFrameBorderTemplate(i?: number): SchematicForFrameBorderTemplateContext | SchematicForFrameBorderTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicForFrameBorderTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicForFrameBorderTemplateContext);
		}
	}
	public schematicGlobalPortTemplate(): SchematicGlobalPortTemplateContext[];
	public schematicGlobalPortTemplate(i: number): SchematicGlobalPortTemplateContext;
	public schematicGlobalPortTemplate(i?: number): SchematicGlobalPortTemplateContext | SchematicGlobalPortTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicGlobalPortTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicGlobalPortTemplateContext);
		}
	}
	public schematicIfFrameBorderTemplate(): SchematicIfFrameBorderTemplateContext[];
	public schematicIfFrameBorderTemplate(i: number): SchematicIfFrameBorderTemplateContext;
	public schematicIfFrameBorderTemplate(i?: number): SchematicIfFrameBorderTemplateContext | SchematicIfFrameBorderTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicIfFrameBorderTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicIfFrameBorderTemplateContext);
		}
	}
	public schematicInterconnectTerminatorTemplate(): SchematicInterconnectTerminatorTemplateContext[];
	public schematicInterconnectTerminatorTemplate(i: number): SchematicInterconnectTerminatorTemplateContext;
	public schematicInterconnectTerminatorTemplate(i?: number): SchematicInterconnectTerminatorTemplateContext | SchematicInterconnectTerminatorTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInterconnectTerminatorTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicInterconnectTerminatorTemplateContext);
		}
	}
	public schematicJunctionTemplate(): SchematicJunctionTemplateContext[];
	public schematicJunctionTemplate(i: number): SchematicJunctionTemplateContext;
	public schematicJunctionTemplate(i?: number): SchematicJunctionTemplateContext | SchematicJunctionTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicJunctionTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicJunctionTemplateContext);
		}
	}
	public schematicMasterPortTemplate(): SchematicMasterPortTemplateContext[];
	public schematicMasterPortTemplate(i: number): SchematicMasterPortTemplateContext;
	public schematicMasterPortTemplate(i?: number): SchematicMasterPortTemplateContext | SchematicMasterPortTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicMasterPortTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicMasterPortTemplateContext);
		}
	}
	public schematicOffPageConnectorTemplate(): SchematicOffPageConnectorTemplateContext[];
	public schematicOffPageConnectorTemplate(i: number): SchematicOffPageConnectorTemplateContext;
	public schematicOffPageConnectorTemplate(i?: number): SchematicOffPageConnectorTemplateContext | SchematicOffPageConnectorTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOffPageConnectorTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicOffPageConnectorTemplateContext);
		}
	}
	public schematicOnPageConnectorTemplate(): SchematicOnPageConnectorTemplateContext[];
	public schematicOnPageConnectorTemplate(i: number): SchematicOnPageConnectorTemplateContext;
	public schematicOnPageConnectorTemplate(i?: number): SchematicOnPageConnectorTemplateContext | SchematicOnPageConnectorTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOnPageConnectorTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicOnPageConnectorTemplateContext);
		}
	}
	public schematicOtherwiseFrameBorderTemplate(): SchematicOtherwiseFrameBorderTemplateContext[];
	public schematicOtherwiseFrameBorderTemplate(i: number): SchematicOtherwiseFrameBorderTemplateContext;
	public schematicOtherwiseFrameBorderTemplate(i?: number): SchematicOtherwiseFrameBorderTemplateContext | SchematicOtherwiseFrameBorderTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOtherwiseFrameBorderTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicOtherwiseFrameBorderTemplateContext);
		}
	}
	public schematicRipperTemplate(): SchematicRipperTemplateContext[];
	public schematicRipperTemplate(i: number): SchematicRipperTemplateContext;
	public schematicRipperTemplate(i?: number): SchematicRipperTemplateContext | SchematicRipperTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicRipperTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicRipperTemplateContext);
		}
	}
	public schematicSymbolBorderTemplate(): SchematicSymbolBorderTemplateContext[];
	public schematicSymbolBorderTemplate(i: number): SchematicSymbolBorderTemplateContext;
	public schematicSymbolBorderTemplate(i?: number): SchematicSymbolBorderTemplateContext | SchematicSymbolBorderTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSymbolBorderTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicSymbolBorderTemplateContext);
		}
	}
	public schematicSymbolPortTemplate(): SchematicSymbolPortTemplateContext[];
	public schematicSymbolPortTemplate(i: number): SchematicSymbolPortTemplateContext;
	public schematicSymbolPortTemplate(i?: number): SchematicSymbolPortTemplateContext | SchematicSymbolPortTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSymbolPortTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicSymbolPortTemplateContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_external; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterExternal) {
			listener.enterExternal(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitExternal) {
			listener.exitExternal(this);
		}
	}
}


export class FahrenheitContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fahrenheit; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFahrenheit) {
			listener.enterFahrenheit(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFahrenheit) {
			listener.exitFahrenheit(this);
		}
	}
}


export class EfalseContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_efalse; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEfalse) {
			listener.enterEfalse(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEfalse) {
			listener.exitEfalse(this);
		}
	}
}


export class FaradContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_farad; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFarad) {
			listener.enterFarad(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFarad) {
			listener.exitFarad(this);
		}
	}
}


export class FigureContext extends ParserRuleContext {
	public figureGroupNameRef(): FigureGroupNameRefContext | undefined {
		return this.tryGetRuleContext(0, FigureGroupNameRefContext);
	}
	public figureGroupOverride(): FigureGroupOverrideContext | undefined {
		return this.tryGetRuleContext(0, FigureGroupOverrideContext);
	}
	public circle(): CircleContext[];
	public circle(i: number): CircleContext;
	public circle(i?: number): CircleContext | CircleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CircleContext);
		} else {
			return this.getRuleContext(i, CircleContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public complexGeometry(): ComplexGeometryContext[];
	public complexGeometry(i: number): ComplexGeometryContext;
	public complexGeometry(i?: number): ComplexGeometryContext | ComplexGeometryContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ComplexGeometryContext);
		} else {
			return this.getRuleContext(i, ComplexGeometryContext);
		}
	}
	public dot(): DotContext[];
	public dot(i: number): DotContext;
	public dot(i?: number): DotContext | DotContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DotContext);
		} else {
			return this.getRuleContext(i, DotContext);
		}
	}
	public openShape(): OpenShapeContext[];
	public openShape(i: number): OpenShapeContext;
	public openShape(i?: number): OpenShapeContext | OpenShapeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OpenShapeContext);
		} else {
			return this.getRuleContext(i, OpenShapeContext);
		}
	}
	public path(): PathContext[];
	public path(i: number): PathContext;
	public path(i?: number): PathContext | PathContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PathContext);
		} else {
			return this.getRuleContext(i, PathContext);
		}
	}
	public polygon(): PolygonContext[];
	public polygon(i: number): PolygonContext;
	public polygon(i?: number): PolygonContext | PolygonContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PolygonContext);
		} else {
			return this.getRuleContext(i, PolygonContext);
		}
	}
	public rectangle(): RectangleContext[];
	public rectangle(i: number): RectangleContext;
	public rectangle(i?: number): RectangleContext | RectangleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RectangleContext);
		} else {
			return this.getRuleContext(i, RectangleContext);
		}
	}
	public shape(): ShapeContext[];
	public shape(i: number): ShapeContext;
	public shape(i?: number): ShapeContext | ShapeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ShapeContext);
		} else {
			return this.getRuleContext(i, ShapeContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_figure; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFigure) {
			listener.enterFigure(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFigure) {
			listener.exitFigure(this);
		}
	}
}


export class FigureGroupContext extends ParserRuleContext {
	public figureGroupNameDef(): FigureGroupNameDefContext {
		return this.getRuleContext(0, FigureGroupNameDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public cornerType(): CornerTypeContext[];
	public cornerType(i: number): CornerTypeContext;
	public cornerType(i?: number): CornerTypeContext | CornerTypeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CornerTypeContext);
		} else {
			return this.getRuleContext(i, CornerTypeContext);
		}
	}
	public displayAttributes(): DisplayAttributesContext[];
	public displayAttributes(i: number): DisplayAttributesContext;
	public displayAttributes(i?: number): DisplayAttributesContext | DisplayAttributesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayAttributesContext);
		} else {
			return this.getRuleContext(i, DisplayAttributesContext);
		}
	}
	public endType(): EndTypeContext[];
	public endType(i: number): EndTypeContext;
	public endType(i?: number): EndTypeContext | EndTypeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(EndTypeContext);
		} else {
			return this.getRuleContext(i, EndTypeContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public pathWidth(): PathWidthContext[];
	public pathWidth(i: number): PathWidthContext;
	public pathWidth(i?: number): PathWidthContext | PathWidthContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PathWidthContext);
		} else {
			return this.getRuleContext(i, PathWidthContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_figureGroup; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFigureGroup) {
			listener.enterFigureGroup(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFigureGroup) {
			listener.exitFigureGroup(this);
		}
	}
}


export class FigureGroupNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_figureGroupNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFigureGroupNameCaseSensitive) {
			listener.enterFigureGroupNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFigureGroupNameCaseSensitive) {
			listener.exitFigureGroupNameCaseSensitive(this);
		}
	}
}


export class FigureGroupNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_figureGroupNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFigureGroupNameDef) {
			listener.enterFigureGroupNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFigureGroupNameDef) {
			listener.exitFigureGroupNameDef(this);
		}
	}
}


export class FigureGroupNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_figureGroupNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFigureGroupNameRef) {
			listener.enterFigureGroupNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFigureGroupNameRef) {
			listener.exitFigureGroupNameRef(this);
		}
	}
}


export class FigureGroupOverrideContext extends ParserRuleContext {
	public figureGroupNameRef(): FigureGroupNameRefContext {
		return this.getRuleContext(0, FigureGroupNameRefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public cornerType(): CornerTypeContext[];
	public cornerType(i: number): CornerTypeContext;
	public cornerType(i?: number): CornerTypeContext | CornerTypeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CornerTypeContext);
		} else {
			return this.getRuleContext(i, CornerTypeContext);
		}
	}
	public displayAttributes(): DisplayAttributesContext[];
	public displayAttributes(i: number): DisplayAttributesContext;
	public displayAttributes(i?: number): DisplayAttributesContext | DisplayAttributesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayAttributesContext);
		} else {
			return this.getRuleContext(i, DisplayAttributesContext);
		}
	}
	public endType(): EndTypeContext[];
	public endType(i: number): EndTypeContext;
	public endType(i?: number): EndTypeContext | EndTypeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(EndTypeContext);
		} else {
			return this.getRuleContext(i, EndTypeContext);
		}
	}
	public pathWidth(): PathWidthContext[];
	public pathWidth(i: number): PathWidthContext;
	public pathWidth(i?: number): PathWidthContext | PathWidthContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PathWidthContext);
		} else {
			return this.getRuleContext(i, PathWidthContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_figureGroupOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFigureGroupOverride) {
			listener.enterFigureGroupOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFigureGroupOverride) {
			listener.exitFigureGroupOverride(this);
		}
	}
}


export class FillPatternContext extends ParserRuleContext {
	public pixelPattern(): PixelPatternContext {
		return this.getRuleContext(0, PixelPatternContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fillPattern; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFillPattern) {
			listener.enterFillPattern(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFillPattern) {
			listener.exitFillPattern(this);
		}
	}
}


export class FillPatternVisibleContext extends ParserRuleContext {
	public booleanValue(): BooleanValueContext {
		return this.getRuleContext(0, BooleanValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fillPatternVisible; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFillPatternVisible) {
			listener.enterFillPatternVisible(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFillPatternVisible) {
			listener.exitFillPatternVisible(this);
		}
	}
}


export class FirstIntegerExpressionContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_firstIntegerExpression; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFirstIntegerExpression) {
			listener.enterFirstIntegerExpression(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFirstIntegerExpression) {
			listener.exitFirstIntegerExpression(this);
		}
	}
}


export class FirstStringExpressionContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_firstStringExpression; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFirstStringExpression) {
			listener.enterFirstStringExpression(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFirstStringExpression) {
			listener.exitFirstStringExpression(this);
		}
	}
}


export class FixedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fixed; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFixed) {
			listener.enterFixed(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFixed) {
			listener.exitFixed(this);
		}
	}
}


export class FontContext extends ParserRuleContext {
	public fontNameDef(): FontNameDefContext {
		return this.getRuleContext(0, FontNameDefContext);
	}
	public typeface(): TypefaceContext {
		return this.getRuleContext(0, TypefaceContext);
	}
	public fontProportions(): FontProportionsContext {
		return this.getRuleContext(0, FontProportionsContext);
	}
	public boldStyle(): BoldStyleContext[];
	public boldStyle(i: number): BoldStyleContext;
	public boldStyle(i?: number): BoldStyleContext | BoldStyleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BoldStyleContext);
		} else {
			return this.getRuleContext(i, BoldStyleContext);
		}
	}
	public italicStyle(): ItalicStyleContext[];
	public italicStyle(i: number): ItalicStyleContext;
	public italicStyle(i?: number): ItalicStyleContext | ItalicStyleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ItalicStyleContext);
		} else {
			return this.getRuleContext(i, ItalicStyleContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public proportionalFont(): ProportionalFontContext[];
	public proportionalFont(i: number): ProportionalFontContext;
	public proportionalFont(i?: number): ProportionalFontContext | ProportionalFontContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ProportionalFontContext);
		} else {
			return this.getRuleContext(i, ProportionalFontContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_font; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFont) {
			listener.enterFont(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFont) {
			listener.exitFont(this);
		}
	}
}


export class FontCapitalHeightContext extends ParserRuleContext {
	public lengthValue(): LengthValueContext {
		return this.getRuleContext(0, LengthValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fontCapitalHeight; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFontCapitalHeight) {
			listener.enterFontCapitalHeight(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFontCapitalHeight) {
			listener.exitFontCapitalHeight(this);
		}
	}
}


export class FontDefinitionsContext extends ParserRuleContext {
	public fonts(): FontsContext | undefined {
		return this.tryGetRuleContext(0, FontsContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fontDefinitions; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFontDefinitions) {
			listener.enterFontDefinitions(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFontDefinitions) {
			listener.exitFontDefinitions(this);
		}
	}
}


export class FontDescentContext extends ParserRuleContext {
	public lengthValue(): LengthValueContext {
		return this.getRuleContext(0, LengthValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fontDescent; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFontDescent) {
			listener.enterFontDescent(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFontDescent) {
			listener.exitFontDescent(this);
		}
	}
}


export class FontFamilyContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fontFamily; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFontFamily) {
			listener.enterFontFamily(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFontFamily) {
			listener.exitFontFamily(this);
		}
	}
}


export class FontHeightContext extends ParserRuleContext {
	public lengthValue(): LengthValueContext {
		return this.getRuleContext(0, LengthValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fontHeight; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFontHeight) {
			listener.enterFontHeight(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFontHeight) {
			listener.exitFontHeight(this);
		}
	}
}


export class FontNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fontNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFontNameDef) {
			listener.enterFontNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFontNameDef) {
			listener.exitFontNameDef(this);
		}
	}
}


export class FontNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fontNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFontNameRef) {
			listener.enterFontNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFontNameRef) {
			listener.exitFontNameRef(this);
		}
	}
}


export class FontProportionsContext extends ParserRuleContext {
	public fontHeight(): FontHeightContext {
		return this.getRuleContext(0, FontHeightContext);
	}
	public fontDescent(): FontDescentContext {
		return this.getRuleContext(0, FontDescentContext);
	}
	public fontCapitalHeight(): FontCapitalHeightContext {
		return this.getRuleContext(0, FontCapitalHeightContext);
	}
	public fontWidth(): FontWidthContext {
		return this.getRuleContext(0, FontWidthContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fontProportions; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFontProportions) {
			listener.enterFontProportions(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFontProportions) {
			listener.exitFontProportions(this);
		}
	}
}


export class FontRefContext extends ParserRuleContext {
	public fontNameRef(): FontNameRefContext {
		return this.getRuleContext(0, FontNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fontRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFontRef) {
			listener.enterFontRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFontRef) {
			listener.exitFontRef(this);
		}
	}
}


export class FontsContext extends ParserRuleContext {
	public setDistance(): SetDistanceContext {
		return this.getRuleContext(0, SetDistanceContext);
	}
	public font(): FontContext[];
	public font(i: number): FontContext;
	public font(i?: number): FontContext | FontContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FontContext);
		} else {
			return this.getRuleContext(i, FontContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fonts; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFonts) {
			listener.enterFonts(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFonts) {
			listener.exitFonts(this);
		}
	}
}


export class FontWidthContext extends ParserRuleContext {
	public lengthValue(): LengthValueContext {
		return this.getRuleContext(0, LengthValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fontWidth; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFontWidth) {
			listener.enterFontWidth(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFontWidth) {
			listener.exitFontWidth(this);
		}
	}
}


export class ForbiddenEventContext extends ParserRuleContext {
	public timeInterval(): TimeIntervalContext {
		return this.getRuleContext(0, TimeIntervalContext);
	}
	public event(): EventContext[];
	public event(i: number): EventContext;
	public event(i?: number): EventContext | EventContext[] {
		if (i === undefined) {
			return this.getRuleContexts(EventContext);
		} else {
			return this.getRuleContext(i, EventContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_forbiddenEvent; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterForbiddenEvent) {
			listener.enterForbiddenEvent(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitForbiddenEvent) {
			listener.exitForbiddenEvent(this);
		}
	}
}


export class ForFrameContext extends ParserRuleContext {
	public frameNameDef(): FrameNameDefContext {
		return this.getRuleContext(0, FrameNameDefContext);
	}
	public repetitionCount(): RepetitionCountContext {
		return this.getRuleContext(0, RepetitionCountContext);
	}
	public forFrameIndex(): ForFrameIndexContext {
		return this.getRuleContext(0, ForFrameIndexContext);
	}
	public logicalConnectivity(): LogicalConnectivityContext {
		return this.getRuleContext(0, LogicalConnectivityContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_forFrame; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterForFrame) {
			listener.enterForFrame(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitForFrame) {
			listener.exitForFrame(this);
		}
	}
}


export class ForFrameAnnotateContext extends ParserRuleContext {
	public extendForFrameMemberDef(): ExtendForFrameMemberDefContext {
		return this.getRuleContext(0, ExtendForFrameMemberDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public forFrameAnnotate(): ForFrameAnnotateContext[];
	public forFrameAnnotate(i: number): ForFrameAnnotateContext;
	public forFrameAnnotate(i?: number): ForFrameAnnotateContext | ForFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ForFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, ForFrameAnnotateContext);
		}
	}
	public ifFrameAnnotate(): IfFrameAnnotateContext[];
	public ifFrameAnnotate(i: number): IfFrameAnnotateContext;
	public ifFrameAnnotate(i?: number): IfFrameAnnotateContext | IfFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IfFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, IfFrameAnnotateContext);
		}
	}
	public interconnectAnnotate(): InterconnectAnnotateContext[];
	public interconnectAnnotate(i: number): InterconnectAnnotateContext;
	public interconnectAnnotate(i?: number): InterconnectAnnotateContext | InterconnectAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectAnnotateContext);
		} else {
			return this.getRuleContext(i, InterconnectAnnotateContext);
		}
	}
	public leafOccurrenceAnnotate(): LeafOccurrenceAnnotateContext[];
	public leafOccurrenceAnnotate(i: number): LeafOccurrenceAnnotateContext;
	public leafOccurrenceAnnotate(i?: number): LeafOccurrenceAnnotateContext | LeafOccurrenceAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LeafOccurrenceAnnotateContext);
		} else {
			return this.getRuleContext(i, LeafOccurrenceAnnotateContext);
		}
	}
	public occurrenceAnnotate(): OccurrenceAnnotateContext[];
	public occurrenceAnnotate(i: number): OccurrenceAnnotateContext;
	public occurrenceAnnotate(i?: number): OccurrenceAnnotateContext | OccurrenceAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OccurrenceAnnotateContext);
		} else {
			return this.getRuleContext(i, OccurrenceAnnotateContext);
		}
	}
	public otherwiseFrameAnnotate(): OtherwiseFrameAnnotateContext[];
	public otherwiseFrameAnnotate(i: number): OtherwiseFrameAnnotateContext;
	public otherwiseFrameAnnotate(i?: number): OtherwiseFrameAnnotateContext | OtherwiseFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OtherwiseFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, OtherwiseFrameAnnotateContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_forFrameAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterForFrameAnnotate) {
			listener.enterForFrameAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitForFrameAnnotate) {
			listener.exitForFrameAnnotate(this);
		}
	}
}


export class ForFrameIndexContext extends ParserRuleContext {
	public indexNameDef(): IndexNameDefContext {
		return this.getRuleContext(0, IndexNameDefContext);
	}
	public indexStart(): IndexStartContext[];
	public indexStart(i: number): IndexStartContext;
	public indexStart(i?: number): IndexStartContext | IndexStartContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IndexStartContext);
		} else {
			return this.getRuleContext(i, IndexStartContext);
		}
	}
	public indexStep(): IndexStepContext[];
	public indexStep(i: number): IndexStepContext;
	public indexStep(i?: number): IndexStepContext | IndexStepContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IndexStepContext);
		} else {
			return this.getRuleContext(i, IndexStepContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_forFrameIndex; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterForFrameIndex) {
			listener.enterForFrameIndex(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitForFrameIndex) {
			listener.exitForFrameIndex(this);
		}
	}
}


export class ForFrameIndexDisplayContext extends ParserRuleContext {
	public indexEndDisplay(): IndexEndDisplayContext[];
	public indexEndDisplay(i: number): IndexEndDisplayContext;
	public indexEndDisplay(i?: number): IndexEndDisplayContext | IndexEndDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IndexEndDisplayContext);
		} else {
			return this.getRuleContext(i, IndexEndDisplayContext);
		}
	}
	public indexNameDisplay(): IndexNameDisplayContext[];
	public indexNameDisplay(i: number): IndexNameDisplayContext;
	public indexNameDisplay(i?: number): IndexNameDisplayContext | IndexNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IndexNameDisplayContext);
		} else {
			return this.getRuleContext(i, IndexNameDisplayContext);
		}
	}
	public indexStartDisplay(): IndexStartDisplayContext[];
	public indexStartDisplay(i: number): IndexStartDisplayContext;
	public indexStartDisplay(i?: number): IndexStartDisplayContext | IndexStartDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IndexStartDisplayContext);
		} else {
			return this.getRuleContext(i, IndexStartDisplayContext);
		}
	}
	public indexStepDisplay(): IndexStepDisplayContext[];
	public indexStepDisplay(i: number): IndexStepDisplayContext;
	public indexStepDisplay(i?: number): IndexStepDisplayContext | IndexStepDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IndexStepDisplayContext);
		} else {
			return this.getRuleContext(i, IndexStepDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_forFrameIndexDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterForFrameIndexDisplay) {
			listener.enterForFrameIndexDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitForFrameIndexDisplay) {
			listener.exitForFrameIndexDisplay(this);
		}
	}
}


export class ForFrameIndexNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_forFrameIndexNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterForFrameIndexNameCaseSensitive) {
			listener.enterForFrameIndexNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitForFrameIndexNameCaseSensitive) {
			listener.exitForFrameIndexNameCaseSensitive(this);
		}
	}
}


export class ForFrameIndexRefContext extends ParserRuleContext {
	public indexNameRef(): IndexNameRefContext {
		return this.getRuleContext(0, IndexNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_forFrameIndexRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterForFrameIndexRef) {
			listener.enterForFrameIndexRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitForFrameIndexRef) {
			listener.exitForFrameIndexRef(this);
		}
	}
}


export class ForFrameMemberRefContext extends ParserRuleContext {
	public frameNameRef(): FrameNameRefContext {
		return this.getRuleContext(0, FrameNameRefContext);
	}
	public indexValue(): IndexValueContext {
		return this.getRuleContext(0, IndexValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_forFrameMemberRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterForFrameMemberRef) {
			listener.enterForFrameMemberRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitForFrameMemberRef) {
			listener.exitForFrameMemberRef(this);
		}
	}
}


export class ForFrameRefContext extends ParserRuleContext {
	public frameNameRef(): FrameNameRefContext {
		return this.getRuleContext(0, FrameNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_forFrameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterForFrameRef) {
			listener.enterForFrameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitForFrameRef) {
			listener.exitForFrameRef(this);
		}
	}
}


export class FrameConfigurationContext extends ParserRuleContext {
	public frameNameRef(): FrameNameRefContext {
		return this.getRuleContext(0, FrameNameRefContext);
	}
	public frameConfiguration(): FrameConfigurationContext[];
	public frameConfiguration(i: number): FrameConfigurationContext;
	public frameConfiguration(i?: number): FrameConfigurationContext | FrameConfigurationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FrameConfigurationContext);
		} else {
			return this.getRuleContext(i, FrameConfigurationContext);
		}
	}
	public instanceConfiguration(): InstanceConfigurationContext[];
	public instanceConfiguration(i: number): InstanceConfigurationContext;
	public instanceConfiguration(i?: number): InstanceConfigurationContext | InstanceConfigurationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceConfigurationContext);
		} else {
			return this.getRuleContext(i, InstanceConfigurationContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_frameConfiguration; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFrameConfiguration) {
			listener.enterFrameConfiguration(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFrameConfiguration) {
			listener.exitFrameConfiguration(this);
		}
	}
}


export class FrameNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_frameNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFrameNameCaseSensitive) {
			listener.enterFrameNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFrameNameCaseSensitive) {
			listener.exitFrameNameCaseSensitive(this);
		}
	}
}


export class FrameNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_frameNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFrameNameDef) {
			listener.enterFrameNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFrameNameDef) {
			listener.exitFrameNameDef(this);
		}
	}
}


export class FrameNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_frameNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFrameNameRef) {
			listener.enterFrameNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFrameNameRef) {
			listener.exitFrameNameRef(this);
		}
	}
}


export class FrameRefContext extends ParserRuleContext {
	public frameNameRef(): FrameNameRefContext {
		return this.getRuleContext(0, FrameNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_frameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFrameRef) {
			listener.enterFrameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFrameRef) {
			listener.exitFrameRef(this);
		}
	}
}


export class FrequencyValueContext extends ParserRuleContext {
	public miNoMaxValue(): MiNoMaxValueContext {
		return this.getRuleContext(0, MiNoMaxValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_frequencyValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFrequencyValue) {
			listener.enterFrequencyValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFrequencyValue) {
			listener.exitFrequencyValue(this);
		}
	}
}


export class FromBottomContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fromBottom; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFromBottom) {
			listener.enterFromBottom(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFromBottom) {
			listener.exitFromBottom(this);
		}
	}
}


export class FromIntegerContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fromInteger; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFromInteger) {
			listener.enterFromInteger(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFromInteger) {
			listener.exitFromInteger(this);
		}
	}
}


export class FromLeftContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fromLeft; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFromLeft) {
			listener.enterFromLeft(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFromLeft) {
			listener.exitFromLeft(this);
		}
	}
}


export class FromRightContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fromRight; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFromRight) {
			listener.enterFromRight(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFromRight) {
			listener.exitFromRight(this);
		}
	}
}


export class FromTopContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_fromTop; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterFromTop) {
			listener.enterFromTop(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitFromTop) {
			listener.exitFromTop(this);
		}
	}
}


export class GeneratedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_generated; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGenerated) {
			listener.enterGenerated(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGenerated) {
			listener.exitGenerated(this);
		}
	}
}


export class GeometryMacroContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public geometryMacroHeader(): GeometryMacroHeaderContext {
		return this.getRuleContext(0, GeometryMacroHeaderContext);
	}
	public circle(): CircleContext[];
	public circle(i: number): CircleContext;
	public circle(i?: number): CircleContext | CircleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CircleContext);
		} else {
			return this.getRuleContext(i, CircleContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public complexGeometry(): ComplexGeometryContext[];
	public complexGeometry(i: number): ComplexGeometryContext;
	public complexGeometry(i?: number): ComplexGeometryContext | ComplexGeometryContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ComplexGeometryContext);
		} else {
			return this.getRuleContext(i, ComplexGeometryContext);
		}
	}
	public dot(): DotContext[];
	public dot(i: number): DotContext;
	public dot(i?: number): DotContext | DotContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DotContext);
		} else {
			return this.getRuleContext(i, DotContext);
		}
	}
	public openShape(): OpenShapeContext[];
	public openShape(i: number): OpenShapeContext;
	public openShape(i?: number): OpenShapeContext | OpenShapeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OpenShapeContext);
		} else {
			return this.getRuleContext(i, OpenShapeContext);
		}
	}
	public path(): PathContext[];
	public path(i: number): PathContext;
	public path(i?: number): PathContext | PathContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PathContext);
		} else {
			return this.getRuleContext(i, PathContext);
		}
	}
	public polygon(): PolygonContext[];
	public polygon(i: number): PolygonContext;
	public polygon(i?: number): PolygonContext | PolygonContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PolygonContext);
		} else {
			return this.getRuleContext(i, PolygonContext);
		}
	}
	public rectangle(): RectangleContext[];
	public rectangle(i: number): RectangleContext;
	public rectangle(i?: number): RectangleContext | RectangleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RectangleContext);
		} else {
			return this.getRuleContext(i, RectangleContext);
		}
	}
	public shape(): ShapeContext[];
	public shape(i: number): ShapeContext;
	public shape(i?: number): ShapeContext | ShapeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ShapeContext);
		} else {
			return this.getRuleContext(i, ShapeContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_geometryMacro; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGeometryMacro) {
			listener.enterGeometryMacro(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGeometryMacro) {
			listener.exitGeometryMacro(this);
		}
	}
}


export class GeometryMacroHeaderContext extends ParserRuleContext {
	public geometryMacroUnits(): GeometryMacroUnitsContext {
		return this.getRuleContext(0, GeometryMacroUnitsContext);
	}
	public backgroundColor(): BackgroundColorContext[];
	public backgroundColor(i: number): BackgroundColorContext;
	public backgroundColor(i?: number): BackgroundColorContext | BackgroundColorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BackgroundColorContext);
		} else {
			return this.getRuleContext(i, BackgroundColorContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public originalBoundingBox(): OriginalBoundingBoxContext[];
	public originalBoundingBox(i: number): OriginalBoundingBoxContext;
	public originalBoundingBox(i?: number): OriginalBoundingBoxContext | OriginalBoundingBoxContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OriginalBoundingBoxContext);
		} else {
			return this.getRuleContext(i, OriginalBoundingBoxContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_geometryMacroHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGeometryMacroHeader) {
			listener.enterGeometryMacroHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGeometryMacroHeader) {
			listener.exitGeometryMacroHeader(this);
		}
	}
}


export class GeometryMacroRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_geometryMacroRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGeometryMacroRef) {
			listener.enterGeometryMacroRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGeometryMacroRef) {
			listener.exitGeometryMacroRef(this);
		}
	}
}


export class GeometryMacroUnitsContext extends ParserRuleContext {
	public setAngle(): SetAngleContext | undefined {
		return this.tryGetRuleContext(0, SetAngleContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_geometryMacroUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGeometryMacroUnits) {
			listener.enterGeometryMacroUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGeometryMacroUnits) {
			listener.exitGeometryMacroUnits(this);
		}
	}
}


export class GlobalPortContext extends ParserRuleContext {
	public globalPortNameDef(): GlobalPortNameDefContext {
		return this.getRuleContext(0, GlobalPortNameDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public schematicGlobalPortAttributes(): SchematicGlobalPortAttributesContext[];
	public schematicGlobalPortAttributes(i: number): SchematicGlobalPortAttributesContext;
	public schematicGlobalPortAttributes(i?: number): SchematicGlobalPortAttributesContext | SchematicGlobalPortAttributesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicGlobalPortAttributesContext);
		} else {
			return this.getRuleContext(i, SchematicGlobalPortAttributesContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPort; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPort) {
			listener.enterGlobalPort(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPort) {
			listener.exitGlobalPort(this);
		}
	}
}


export class GlobalPortBundleContext extends ParserRuleContext {
	public globalPortNameDef(): GlobalPortNameDefContext {
		return this.getRuleContext(0, GlobalPortNameDefContext);
	}
	public globalPortList(): GlobalPortListContext {
		return this.getRuleContext(0, GlobalPortListContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPortBundle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPortBundle) {
			listener.enterGlobalPortBundle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPortBundle) {
			listener.exitGlobalPortBundle(this);
		}
	}
}


export class GlobalPortDefinitionsContext extends ParserRuleContext {
	public globalPort(): GlobalPortContext[];
	public globalPort(i: number): GlobalPortContext;
	public globalPort(i?: number): GlobalPortContext | GlobalPortContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortContext);
		} else {
			return this.getRuleContext(i, GlobalPortContext);
		}
	}
	public globalPortBundle(): GlobalPortBundleContext[];
	public globalPortBundle(i: number): GlobalPortBundleContext;
	public globalPortBundle(i?: number): GlobalPortBundleContext | GlobalPortBundleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortBundleContext);
		} else {
			return this.getRuleContext(i, GlobalPortBundleContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPortDefinitions; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPortDefinitions) {
			listener.enterGlobalPortDefinitions(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPortDefinitions) {
			listener.exitGlobalPortDefinitions(this);
		}
	}
}


export class GlobalPortListContext extends ParserRuleContext {
	public globalPortRef(): GlobalPortRefContext[];
	public globalPortRef(i: number): GlobalPortRefContext;
	public globalPortRef(i?: number): GlobalPortRefContext | GlobalPortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortRefContext);
		} else {
			return this.getRuleContext(i, GlobalPortRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPortList; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPortList) {
			listener.enterGlobalPortList(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPortList) {
			listener.exitGlobalPortList(this);
		}
	}
}


export class GlobalPortNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPortNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPortNameCaseSensitive) {
			listener.enterGlobalPortNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPortNameCaseSensitive) {
			listener.exitGlobalPortNameCaseSensitive(this);
		}
	}
}


export class GlobalPortNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPortNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPortNameDef) {
			listener.enterGlobalPortNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPortNameDef) {
			listener.exitGlobalPortNameDef(this);
		}
	}
}


export class GlobalPortNameDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public displayNameOverride(): DisplayNameOverrideContext[];
	public displayNameOverride(i: number): DisplayNameOverrideContext;
	public displayNameOverride(i?: number): DisplayNameOverrideContext | DisplayNameOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameOverrideContext);
		} else {
			return this.getRuleContext(i, DisplayNameOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPortNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPortNameDisplay) {
			listener.enterGlobalPortNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPortNameDisplay) {
			listener.exitGlobalPortNameDisplay(this);
		}
	}
}


export class GlobalPortNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPortNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPortNameRef) {
			listener.enterGlobalPortNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPortNameRef) {
			listener.exitGlobalPortNameRef(this);
		}
	}
}


export class GlobalPortPropertyDisplayContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public propertyNameDisplay(): PropertyNameDisplayContext[];
	public propertyNameDisplay(i: number): PropertyNameDisplayContext;
	public propertyNameDisplay(i?: number): PropertyNameDisplayContext | PropertyNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyNameDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyNameDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPortPropertyDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPortPropertyDisplay) {
			listener.enterGlobalPortPropertyDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPortPropertyDisplay) {
			listener.exitGlobalPortPropertyDisplay(this);
		}
	}
}


export class GlobalPortRefContext extends ParserRuleContext {
	public globalPortNameRef(): GlobalPortNameRefContext {
		return this.getRuleContext(0, GlobalPortNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPortRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPortRef) {
			listener.enterGlobalPortRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPortRef) {
			listener.exitGlobalPortRef(this);
		}
	}
}


export class GlobalPortScopeContext extends ParserRuleContext {
	public globalPortNameRef(): GlobalPortNameRefContext {
		return this.getRuleContext(0, GlobalPortNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_globalPortScope; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGlobalPortScope) {
			listener.enterGlobalPortScope(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGlobalPortScope) {
			listener.exitGlobalPortScope(this);
		}
	}
}


export class GreenContext extends ParserRuleContext {
	public scaledInteger(): ScaledIntegerContext {
		return this.getRuleContext(0, ScaledIntegerContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_green; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterGreen) {
			listener.enterGreen(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitGreen) {
			listener.exitGreen(this);
		}
	}
}


export class HenryContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_henry; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHenry) {
			listener.enterHenry(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHenry) {
			listener.exitHenry(this);
		}
	}
}


export class HertzContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_hertz; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHertz) {
			listener.enterHertz(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHertz) {
			listener.exitHertz(this);
		}
	}
}


export class HorizontalJustificationContext extends ParserRuleContext {
	public leftJustify(): LeftJustifyContext | undefined {
		return this.tryGetRuleContext(0, LeftJustifyContext);
	}
	public centerJustify(): CenterJustifyContext | undefined {
		return this.tryGetRuleContext(0, CenterJustifyContext);
	}
	public rightJustify(): RightJustifyContext | undefined {
		return this.tryGetRuleContext(0, RightJustifyContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_horizontalJustification; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHorizontalJustification) {
			listener.enterHorizontalJustification(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHorizontalJustification) {
			listener.exitHorizontalJustification(this);
		}
	}
}


export class HotspotContext extends ParserRuleContext {
	public pointValue(): PointValueContext {
		return this.getRuleContext(0, PointValueContext);
	}
	public hotspotConnectDirection(): HotspotConnectDirectionContext[];
	public hotspotConnectDirection(i: number): HotspotConnectDirectionContext;
	public hotspotConnectDirection(i?: number): HotspotConnectDirectionContext | HotspotConnectDirectionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(HotspotConnectDirectionContext);
		} else {
			return this.getRuleContext(i, HotspotConnectDirectionContext);
		}
	}
	public hotspotNameDisplay(): HotspotNameDisplayContext[];
	public hotspotNameDisplay(i: number): HotspotNameDisplayContext;
	public hotspotNameDisplay(i?: number): HotspotNameDisplayContext | HotspotNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(HotspotNameDisplayContext);
		} else {
			return this.getRuleContext(i, HotspotNameDisplayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public schematicWireAffinity(): SchematicWireAffinityContext[];
	public schematicWireAffinity(i: number): SchematicWireAffinityContext;
	public schematicWireAffinity(i?: number): SchematicWireAffinityContext | SchematicWireAffinityContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicWireAffinityContext);
		} else {
			return this.getRuleContext(i, SchematicWireAffinityContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_hotspot; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHotspot) {
			listener.enterHotspot(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHotspot) {
			listener.exitHotspot(this);
		}
	}
}


export class HotspotConnectDirectionContext extends ParserRuleContext {
	public fromBottom(): FromBottomContext[];
	public fromBottom(i: number): FromBottomContext;
	public fromBottom(i?: number): FromBottomContext | FromBottomContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FromBottomContext);
		} else {
			return this.getRuleContext(i, FromBottomContext);
		}
	}
	public fromLeft(): FromLeftContext[];
	public fromLeft(i: number): FromLeftContext;
	public fromLeft(i?: number): FromLeftContext | FromLeftContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FromLeftContext);
		} else {
			return this.getRuleContext(i, FromLeftContext);
		}
	}
	public fromRight(): FromRightContext[];
	public fromRight(i: number): FromRightContext;
	public fromRight(i?: number): FromRightContext | FromRightContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FromRightContext);
		} else {
			return this.getRuleContext(i, FromRightContext);
		}
	}
	public fromTop(): FromTopContext[];
	public fromTop(i: number): FromTopContext;
	public fromTop(i?: number): FromTopContext | FromTopContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FromTopContext);
		} else {
			return this.getRuleContext(i, FromTopContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_hotspotConnectDirection; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHotspotConnectDirection) {
			listener.enterHotspotConnectDirection(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHotspotConnectDirection) {
			listener.exitHotspotConnectDirection(this);
		}
	}
}


export class HotspotGridContext extends ParserRuleContext {
	public lengthValue(): LengthValueContext {
		return this.getRuleContext(0, LengthValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_hotspotGrid; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHotspotGrid) {
			listener.enterHotspotGrid(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHotspotGrid) {
			listener.exitHotspotGrid(this);
		}
	}
}


export class HotspotNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_hotspotNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHotspotNameCaseSensitive) {
			listener.enterHotspotNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHotspotNameCaseSensitive) {
			listener.exitHotspotNameCaseSensitive(this);
		}
	}
}


export class HotspotNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_hotspotNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHotspotNameDef) {
			listener.enterHotspotNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHotspotNameDef) {
			listener.exitHotspotNameDef(this);
		}
	}
}


export class HotspotNameDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public displayNameOverride(): DisplayNameOverrideContext[];
	public displayNameOverride(i: number): DisplayNameOverrideContext;
	public displayNameOverride(i?: number): DisplayNameOverrideContext | DisplayNameOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameOverrideContext);
		} else {
			return this.getRuleContext(i, DisplayNameOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_hotspotNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHotspotNameDisplay) {
			listener.enterHotspotNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHotspotNameDisplay) {
			listener.exitHotspotNameDisplay(this);
		}
	}
}


export class HotspotNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_hotspotNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHotspotNameRef) {
			listener.enterHotspotNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHotspotNameRef) {
			listener.exitHotspotNameRef(this);
		}
	}
}


export class HourNumberContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_hourNumber; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterHourNumber) {
			listener.enterHourNumber(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitHourNumber) {
			listener.exitHourNumber(this);
		}
	}
}


export class IeeeDesignationContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ieeeDesignation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIeeeDesignation) {
			listener.enterIeeeDesignation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIeeeDesignation) {
			listener.exitIeeeDesignation(this);
		}
	}
}


export class IeeeSectionContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext[];
	public integerToken(i: number): IntegerTokenContext;
	public integerToken(i?: number): IntegerTokenContext | IntegerTokenContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerTokenContext);
		} else {
			return this.getRuleContext(i, IntegerTokenContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ieeeSection; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIeeeSection) {
			listener.enterIeeeSection(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIeeeSection) {
			listener.exitIeeeSection(this);
		}
	}
}


export class IeeeStandardContext extends ParserRuleContext {
	public ieeeDesignation(): IeeeDesignationContext {
		return this.getRuleContext(0, IeeeDesignationContext);
	}
	public year(): YearContext {
		return this.getRuleContext(0, YearContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public ieeeSection(): IeeeSectionContext[];
	public ieeeSection(i: number): IeeeSectionContext;
	public ieeeSection(i?: number): IeeeSectionContext | IeeeSectionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IeeeSectionContext);
		} else {
			return this.getRuleContext(i, IeeeSectionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ieeeStandard; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIeeeStandard) {
			listener.enterIeeeStandard(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIeeeStandard) {
			listener.exitIeeeStandard(this);
		}
	}
}


export class IfFrameContext extends ParserRuleContext {
	public frameNameDef(): FrameNameDefContext {
		return this.getRuleContext(0, FrameNameDefContext);
	}
	public condition(): ConditionContext {
		return this.getRuleContext(0, ConditionContext);
	}
	public logicalConnectivity(): LogicalConnectivityContext {
		return this.getRuleContext(0, LogicalConnectivityContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ifFrame; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIfFrame) {
			listener.enterIfFrame(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIfFrame) {
			listener.exitIfFrame(this);
		}
	}
}


export class IfFrameAnnotateContext extends ParserRuleContext {
	public extendFrameDef(): ExtendFrameDefContext {
		return this.getRuleContext(0, ExtendFrameDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public forFrameAnnotate(): ForFrameAnnotateContext[];
	public forFrameAnnotate(i: number): ForFrameAnnotateContext;
	public forFrameAnnotate(i?: number): ForFrameAnnotateContext | ForFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ForFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, ForFrameAnnotateContext);
		}
	}
	public ifFrameAnnotate(): IfFrameAnnotateContext[];
	public ifFrameAnnotate(i: number): IfFrameAnnotateContext;
	public ifFrameAnnotate(i?: number): IfFrameAnnotateContext | IfFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IfFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, IfFrameAnnotateContext);
		}
	}
	public interconnectAnnotate(): InterconnectAnnotateContext[];
	public interconnectAnnotate(i: number): InterconnectAnnotateContext;
	public interconnectAnnotate(i?: number): InterconnectAnnotateContext | InterconnectAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectAnnotateContext);
		} else {
			return this.getRuleContext(i, InterconnectAnnotateContext);
		}
	}
	public leafOccurrenceAnnotate(): LeafOccurrenceAnnotateContext[];
	public leafOccurrenceAnnotate(i: number): LeafOccurrenceAnnotateContext;
	public leafOccurrenceAnnotate(i?: number): LeafOccurrenceAnnotateContext | LeafOccurrenceAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LeafOccurrenceAnnotateContext);
		} else {
			return this.getRuleContext(i, LeafOccurrenceAnnotateContext);
		}
	}
	public occurrenceAnnotate(): OccurrenceAnnotateContext[];
	public occurrenceAnnotate(i: number): OccurrenceAnnotateContext;
	public occurrenceAnnotate(i?: number): OccurrenceAnnotateContext | OccurrenceAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OccurrenceAnnotateContext);
		} else {
			return this.getRuleContext(i, OccurrenceAnnotateContext);
		}
	}
	public otherwiseFrameAnnotate(): OtherwiseFrameAnnotateContext[];
	public otherwiseFrameAnnotate(i: number): OtherwiseFrameAnnotateContext;
	public otherwiseFrameAnnotate(i?: number): OtherwiseFrameAnnotateContext | OtherwiseFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OtherwiseFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, OtherwiseFrameAnnotateContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ifFrameAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIfFrameAnnotate) {
			listener.enterIfFrameAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIfFrameAnnotate) {
			listener.exitIfFrameAnnotate(this);
		}
	}
}


export class IfFrameRefContext extends ParserRuleContext {
	public frameNameRef(): FrameNameRefContext {
		return this.getRuleContext(0, FrameNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ifFrameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIfFrameRef) {
			listener.enterIfFrameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIfFrameRef) {
			listener.exitIfFrameRef(this);
		}
	}
}


export class IfFrameSetContext extends ParserRuleContext {
	public ifFrameRef(): IfFrameRefContext[];
	public ifFrameRef(i: number): IfFrameRefContext;
	public ifFrameRef(i?: number): IfFrameRefContext | IfFrameRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IfFrameRefContext);
		} else {
			return this.getRuleContext(i, IfFrameRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ifFrameSet; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIfFrameSet) {
			listener.enterIfFrameSet(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIfFrameSet) {
			listener.exitIfFrameSet(this);
		}
	}
}


export class IgnoreContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ignore; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIgnore) {
			listener.enterIgnore(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIgnore) {
			listener.exitIgnore(this);
		}
	}
}


export class ImplementationNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_implementationNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterImplementationNameCaseSensitive) {
			listener.enterImplementationNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitImplementationNameCaseSensitive) {
			listener.exitImplementationNameCaseSensitive(this);
		}
	}
}


export class ImplementationNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_implementationNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterImplementationNameDef) {
			listener.enterImplementationNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitImplementationNameDef) {
			listener.exitImplementationNameDef(this);
		}
	}
}


export class ImplementationNameDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public displayNameOverride(): DisplayNameOverrideContext[];
	public displayNameOverride(i: number): DisplayNameOverrideContext;
	public displayNameOverride(i?: number): DisplayNameOverrideContext | DisplayNameOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameOverrideContext);
		} else {
			return this.getRuleContext(i, DisplayNameOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_implementationNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterImplementationNameDisplay) {
			listener.enterImplementationNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitImplementationNameDisplay) {
			listener.exitImplementationNameDisplay(this);
		}
	}
}


export class ImplementationNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_implementationNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterImplementationNameRef) {
			listener.enterImplementationNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitImplementationNameRef) {
			listener.exitImplementationNameRef(this);
		}
	}
}


export class IndexEndDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_indexEndDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIndexEndDisplay) {
			listener.enterIndexEndDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIndexEndDisplay) {
			listener.exitIndexEndDisplay(this);
		}
	}
}


export class IndexNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_indexNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIndexNameDef) {
			listener.enterIndexNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIndexNameDef) {
			listener.exitIndexNameDef(this);
		}
	}
}


export class IndexNameDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_indexNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIndexNameDisplay) {
			listener.enterIndexNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIndexNameDisplay) {
			listener.exitIndexNameDisplay(this);
		}
	}
}


export class IndexNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_indexNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIndexNameRef) {
			listener.enterIndexNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIndexNameRef) {
			listener.exitIndexNameRef(this);
		}
	}
}


export class IndexStartContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_indexStart; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIndexStart) {
			listener.enterIndexStart(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIndexStart) {
			listener.exitIndexStart(this);
		}
	}
}


export class IndexStartDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_indexStartDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIndexStartDisplay) {
			listener.enterIndexStartDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIndexStartDisplay) {
			listener.exitIndexStartDisplay(this);
		}
	}
}


export class IndexStepContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_indexStep; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIndexStep) {
			listener.enterIndexStep(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIndexStep) {
			listener.exitIndexStep(this);
		}
	}
}


export class IndexStepDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_indexStepDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIndexStepDisplay) {
			listener.enterIndexStepDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIndexStepDisplay) {
			listener.exitIndexStepDisplay(this);
		}
	}
}


export class IndexValueContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_indexValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIndexValue) {
			listener.enterIndexValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIndexValue) {
			listener.exitIndexValue(this);
		}
	}
}


export class InputContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_input; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInput) {
			listener.enterInput(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInput) {
			listener.exitInput(this);
		}
	}
}


export class InputPortContext extends ParserRuleContext {
	public inputPortAttributes(): InputPortAttributesContext | undefined {
		return this.tryGetRuleContext(0, InputPortAttributesContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_inputPort; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInputPort) {
			listener.enterInputPort(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInputPort) {
			listener.exitInputPort(this);
		}
	}
}


export class InputPortAttributesContext extends ParserRuleContext {
	public dcFanOutLoad(): DcFanOutLoadContext[];
	public dcFanOutLoad(i: number): DcFanOutLoadContext;
	public dcFanOutLoad(i?: number): DcFanOutLoadContext | DcFanOutLoadContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcFanOutLoadContext);
		} else {
			return this.getRuleContext(i, DcFanOutLoadContext);
		}
	}
	public dcMaxFanIn(): DcMaxFanInContext[];
	public dcMaxFanIn(i: number): DcMaxFanInContext;
	public dcMaxFanIn(i?: number): DcMaxFanInContext | DcMaxFanInContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcMaxFanInContext);
		} else {
			return this.getRuleContext(i, DcMaxFanInContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_inputPortAttributes; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInputPortAttributes) {
			listener.enterInputPortAttributes(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInputPortAttributes) {
			listener.exitInputPortAttributes(this);
		}
	}
}


export class InstanceContext extends ParserRuleContext {
	public instanceNameDef(): InstanceNameDefContext {
		return this.getRuleContext(0, InstanceNameDefContext);
	}
	public clusterRef(): ClusterRefContext {
		return this.getRuleContext(0, ClusterRefContext);
	}
	public booleanParameterAssign(): BooleanParameterAssignContext[];
	public booleanParameterAssign(i: number): BooleanParameterAssignContext;
	public booleanParameterAssign(i?: number): BooleanParameterAssignContext | BooleanParameterAssignContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BooleanParameterAssignContext);
		} else {
			return this.getRuleContext(i, BooleanParameterAssignContext);
		}
	}
	public cellPropertyOverride(): CellPropertyOverrideContext[];
	public cellPropertyOverride(i: number): CellPropertyOverrideContext;
	public cellPropertyOverride(i?: number): CellPropertyOverrideContext | CellPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, CellPropertyOverrideContext);
		}
	}
	public clusterPropertyOverride(): ClusterPropertyOverrideContext[];
	public clusterPropertyOverride(i: number): ClusterPropertyOverrideContext;
	public clusterPropertyOverride(i?: number): ClusterPropertyOverrideContext | ClusterPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, ClusterPropertyOverrideContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public designator(): DesignatorContext[];
	public designator(i: number): DesignatorContext;
	public designator(i?: number): DesignatorContext | DesignatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorContext);
		} else {
			return this.getRuleContext(i, DesignatorContext);
		}
	}
	public instanceNameGenerator(): InstanceNameGeneratorContext[];
	public instanceNameGenerator(i: number): InstanceNameGeneratorContext;
	public instanceNameGenerator(i?: number): InstanceNameGeneratorContext | InstanceNameGeneratorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceNameGeneratorContext);
		} else {
			return this.getRuleContext(i, InstanceNameGeneratorContext);
		}
	}
	public instancePortAttributes(): InstancePortAttributesContext[];
	public instancePortAttributes(i: number): InstancePortAttributesContext;
	public instancePortAttributes(i?: number): InstancePortAttributesContext | InstancePortAttributesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstancePortAttributesContext);
		} else {
			return this.getRuleContext(i, InstancePortAttributesContext);
		}
	}
	public instanceWidth(): InstanceWidthContext[];
	public instanceWidth(i: number): InstanceWidthContext;
	public instanceWidth(i?: number): InstanceWidthContext | InstanceWidthContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceWidthContext);
		} else {
			return this.getRuleContext(i, InstanceWidthContext);
		}
	}
	public integerParameterAssign(): IntegerParameterAssignContext[];
	public integerParameterAssign(i: number): IntegerParameterAssignContext;
	public integerParameterAssign(i?: number): IntegerParameterAssignContext | IntegerParameterAssignContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerParameterAssignContext);
		} else {
			return this.getRuleContext(i, IntegerParameterAssignContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public numberParameterAssign(): NumberParameterAssignContext[];
	public numberParameterAssign(i: number): NumberParameterAssignContext;
	public numberParameterAssign(i?: number): NumberParameterAssignContext | NumberParameterAssignContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NumberParameterAssignContext);
		} else {
			return this.getRuleContext(i, NumberParameterAssignContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public stringParameterAssign(): StringParameterAssignContext[];
	public stringParameterAssign(i: number): StringParameterAssignContext;
	public stringParameterAssign(i?: number): StringParameterAssignContext | StringParameterAssignContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringParameterAssignContext);
		} else {
			return this.getRuleContext(i, StringParameterAssignContext);
		}
	}
	public timing(): TimingContext[];
	public timing(i: number): TimingContext;
	public timing(i?: number): TimingContext | TimingContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TimingContext);
		} else {
			return this.getRuleContext(i, TimingContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instance; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstance) {
			listener.enterInstance(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstance) {
			listener.exitInstance(this);
		}
	}
}


export class InstanceConfigurationContext extends ParserRuleContext {
	public instanceNameRef(): InstanceNameRefContext {
		return this.getRuleContext(0, InstanceNameRefContext);
	}
	public clusterConfigurationRef(): ClusterConfigurationRefContext {
		return this.getRuleContext(0, ClusterConfigurationRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceConfiguration; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceConfiguration) {
			listener.enterInstanceConfiguration(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceConfiguration) {
			listener.exitInstanceConfiguration(this);
		}
	}
}


export class InstanceIndexValueContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceIndexValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceIndexValue) {
			listener.enterInstanceIndexValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceIndexValue) {
			listener.exitInstanceIndexValue(this);
		}
	}
}


export class InstanceMemberRefContext extends ParserRuleContext {
	public instanceNameRef(): InstanceNameRefContext {
		return this.getRuleContext(0, InstanceNameRefContext);
	}
	public indexValue(): IndexValueContext {
		return this.getRuleContext(0, IndexValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceMemberRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceMemberRef) {
			listener.enterInstanceMemberRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceMemberRef) {
			listener.exitInstanceMemberRef(this);
		}
	}
}


export class InstanceNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceNameCaseSensitive) {
			listener.enterInstanceNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceNameCaseSensitive) {
			listener.exitInstanceNameCaseSensitive(this);
		}
	}
}


export class InstanceNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceNameDef) {
			listener.enterInstanceNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceNameDef) {
			listener.exitInstanceNameDef(this);
		}
	}
}


export class InstanceNameDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public displayNameOverride(): DisplayNameOverrideContext[];
	public displayNameOverride(i: number): DisplayNameOverrideContext;
	public displayNameOverride(i?: number): DisplayNameOverrideContext | DisplayNameOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameOverrideContext);
		} else {
			return this.getRuleContext(i, DisplayNameOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceNameDisplay) {
			listener.enterInstanceNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceNameDisplay) {
			listener.exitInstanceNameDisplay(this);
		}
	}
}


export class InstanceNameGeneratorContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceNameGenerator; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceNameGenerator) {
			listener.enterInstanceNameGenerator(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceNameGenerator) {
			listener.exitInstanceNameGenerator(this);
		}
	}
}


export class InstanceNameGeneratorDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceNameGeneratorDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceNameGeneratorDisplay) {
			listener.enterInstanceNameGeneratorDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceNameGeneratorDisplay) {
			listener.exitInstanceNameGeneratorDisplay(this);
		}
	}
}


export class InstanceNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceNameRef) {
			listener.enterInstanceNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceNameRef) {
			listener.exitInstanceNameRef(this);
		}
	}
}


export class InstancePortAttributeDisplayContext extends ParserRuleContext {
	public symbolPortImplementationNameRef(): SymbolPortImplementationNameRefContext {
		return this.getRuleContext(0, SymbolPortImplementationNameRefContext);
	}
	public portRef(): PortRefContext {
		return this.getRuleContext(0, PortRefContext);
	}
	public portPropertyDisplayOverride(): PortPropertyDisplayOverrideContext[];
	public portPropertyDisplayOverride(i: number): PortPropertyDisplayOverrideContext;
	public portPropertyDisplayOverride(i?: number): PortPropertyDisplayOverrideContext | PortPropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortPropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PortPropertyDisplayOverrideContext);
		}
	}
	public portAttributeDisplay(): PortAttributeDisplayContext[];
	public portAttributeDisplay(i: number): PortAttributeDisplayContext;
	public portAttributeDisplay(i?: number): PortAttributeDisplayContext | PortAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, PortAttributeDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instancePortAttributeDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstancePortAttributeDisplay) {
			listener.enterInstancePortAttributeDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstancePortAttributeDisplay) {
			listener.exitInstancePortAttributeDisplay(this);
		}
	}
}


export class InstancePortAttributesContext extends ParserRuleContext {
	public extendPortDef(): ExtendPortDefContext {
		return this.getRuleContext(0, ExtendPortDefContext);
	}
	public acLoad(): AcLoadContext[];
	public acLoad(i: number): AcLoadContext;
	public acLoad(i?: number): AcLoadContext | AcLoadContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AcLoadContext);
		} else {
			return this.getRuleContext(i, AcLoadContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public connectedSignalIndexGenerator(): ConnectedSignalIndexGeneratorContext[];
	public connectedSignalIndexGenerator(i: number): ConnectedSignalIndexGeneratorContext;
	public connectedSignalIndexGenerator(i?: number): ConnectedSignalIndexGeneratorContext | ConnectedSignalIndexGeneratorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectedSignalIndexGeneratorContext);
		} else {
			return this.getRuleContext(i, ConnectedSignalIndexGeneratorContext);
		}
	}
	public designator(): DesignatorContext[];
	public designator(i: number): DesignatorContext;
	public designator(i?: number): DesignatorContext | DesignatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorContext);
		} else {
			return this.getRuleContext(i, DesignatorContext);
		}
	}
	public directionalPortAttributeOverride(): DirectionalPortAttributeOverrideContext[];
	public directionalPortAttributeOverride(i: number): DirectionalPortAttributeOverrideContext;
	public directionalPortAttributeOverride(i?: number): DirectionalPortAttributeOverrideContext | DirectionalPortAttributeOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DirectionalPortAttributeOverrideContext);
		} else {
			return this.getRuleContext(i, DirectionalPortAttributeOverrideContext);
		}
	}
	public portDelay(): PortDelayContext[];
	public portDelay(i: number): PortDelayContext;
	public portDelay(i?: number): PortDelayContext | PortDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortDelayContext);
		} else {
			return this.getRuleContext(i, PortDelayContext);
		}
	}
	public portDelayOverride(): PortDelayOverrideContext[];
	public portDelayOverride(i: number): PortDelayOverrideContext;
	public portDelayOverride(i?: number): PortDelayOverrideContext | PortDelayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortDelayOverrideContext);
		} else {
			return this.getRuleContext(i, PortDelayOverrideContext);
		}
	}
	public portLoadDelay(): PortLoadDelayContext[];
	public portLoadDelay(i: number): PortLoadDelayContext;
	public portLoadDelay(i?: number): PortLoadDelayContext | PortLoadDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortLoadDelayContext);
		} else {
			return this.getRuleContext(i, PortLoadDelayContext);
		}
	}
	public portLoadDelayOverride(): PortLoadDelayOverrideContext[];
	public portLoadDelayOverride(i: number): PortLoadDelayOverrideContext;
	public portLoadDelayOverride(i?: number): PortLoadDelayOverrideContext | PortLoadDelayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortLoadDelayOverrideContext);
		} else {
			return this.getRuleContext(i, PortLoadDelayOverrideContext);
		}
	}
	public portPropertyOverride(): PortPropertyOverrideContext[];
	public portPropertyOverride(i: number): PortPropertyOverrideContext;
	public portPropertyOverride(i?: number): PortPropertyOverrideContext | PortPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PortPropertyOverrideContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public unused(): UnusedContext[];
	public unused(i: number): UnusedContext;
	public unused(i?: number): UnusedContext | UnusedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UnusedContext);
		} else {
			return this.getRuleContext(i, UnusedContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instancePortAttributes; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstancePortAttributes) {
			listener.enterInstancePortAttributes(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstancePortAttributes) {
			listener.exitInstancePortAttributes(this);
		}
	}
}


export class InstancePropertyDisplayContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public propertyNameDisplay(): PropertyNameDisplayContext | undefined {
		return this.tryGetRuleContext(0, PropertyNameDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instancePropertyDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstancePropertyDisplay) {
			listener.enterInstancePropertyDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstancePropertyDisplay) {
			listener.exitInstancePropertyDisplay(this);
		}
	}
}


export class InstancePropertyOverrideContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public typedValue(): TypedValueContext | undefined {
		return this.tryGetRuleContext(0, TypedValueContext);
	}
	public untyped(): UntypedContext | undefined {
		return this.tryGetRuleContext(0, UntypedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public fixed(): FixedContext[];
	public fixed(i: number): FixedContext;
	public fixed(i?: number): FixedContext | FixedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FixedContext);
		} else {
			return this.getRuleContext(i, FixedContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instancePropertyOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstancePropertyOverride) {
			listener.enterInstancePropertyOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstancePropertyOverride) {
			listener.exitInstancePropertyOverride(this);
		}
	}
}


export class InstanceRefContext extends ParserRuleContext {
	public instanceNameRef(): InstanceNameRefContext {
		return this.getRuleContext(0, InstanceNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceRef) {
			listener.enterInstanceRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceRef) {
			listener.exitInstanceRef(this);
		}
	}
}


export class InstanceWidthContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceWidth; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceWidth) {
			listener.enterInstanceWidth(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceWidth) {
			listener.exitInstanceWidth(this);
		}
	}
}


export class InstanceWidthDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_instanceWidthDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInstanceWidthDisplay) {
			listener.enterInstanceWidthDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInstanceWidthDisplay) {
			listener.exitInstanceWidthDisplay(this);
		}
	}
}


export class IntegerContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integer; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInteger) {
			listener.enterInteger(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInteger) {
			listener.exitInteger(this);
		}
	}
}


export class IntegerConstantContext extends ParserRuleContext {
	public constantNameDef(): ConstantNameDefContext {
		return this.getRuleContext(0, ConstantNameDefContext);
	}
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerConstant; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerConstant) {
			listener.enterIntegerConstant(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerConstant) {
			listener.exitIntegerConstant(this);
		}
	}
}


export class IntegerConstantRefContext extends ParserRuleContext {
	public constantNameRef(): ConstantNameRefContext {
		return this.getRuleContext(0, ConstantNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerConstantRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerConstantRef) {
			listener.enterIntegerConstantRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerConstantRef) {
			listener.exitIntegerConstantRef(this);
		}
	}
}


export class IntegerEqualContext extends ParserRuleContext {
	public firstIntegerExpression(): FirstIntegerExpressionContext {
		return this.getRuleContext(0, FirstIntegerExpressionContext);
	}
	public secondIntegerExpression(): SecondIntegerExpressionContext {
		return this.getRuleContext(0, SecondIntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerEqual; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerEqual) {
			listener.enterIntegerEqual(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerEqual) {
			listener.exitIntegerEqual(this);
		}
	}
}


export class IntegerExpressionContext extends ParserRuleContext {
	public integerParameterRef(): IntegerParameterRefContext | undefined {
		return this.tryGetRuleContext(0, IntegerParameterRefContext);
	}
	public integerToken(): IntegerTokenContext | undefined {
		return this.tryGetRuleContext(0, IntegerTokenContext);
	}
	public integerProduct(): IntegerProductContext | undefined {
		return this.tryGetRuleContext(0, IntegerProductContext);
	}
	public integerSubtract(): IntegerSubtractContext | undefined {
		return this.tryGetRuleContext(0, IntegerSubtractContext);
	}
	public integerSum(): IntegerSumContext | undefined {
		return this.tryGetRuleContext(0, IntegerSumContext);
	}
	public integerRemainder(): IntegerRemainderContext | undefined {
		return this.tryGetRuleContext(0, IntegerRemainderContext);
	}
	public integerQuotient(): IntegerQuotientContext | undefined {
		return this.tryGetRuleContext(0, IntegerQuotientContext);
	}
	public stringLength(): StringLengthContext | undefined {
		return this.tryGetRuleContext(0, StringLengthContext);
	}
	public integerConstantRef(): IntegerConstantRefContext | undefined {
		return this.tryGetRuleContext(0, IntegerConstantRefContext);
	}
	public forFrameIndexRef(): ForFrameIndexRefContext | undefined {
		return this.tryGetRuleContext(0, ForFrameIndexRefContext);
	}
	public portIndexValue(): PortIndexValueContext | undefined {
		return this.tryGetRuleContext(0, PortIndexValueContext);
	}
	public signalIndexValue(): SignalIndexValueContext | undefined {
		return this.tryGetRuleContext(0, SignalIndexValueContext);
	}
	public absolute(): AbsoluteContext | undefined {
		return this.tryGetRuleContext(0, AbsoluteContext);
	}
	public instanceIndexValue(): InstanceIndexValueContext | undefined {
		return this.tryGetRuleContext(0, InstanceIndexValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerExpression; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerExpression) {
			listener.enterIntegerExpression(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerExpression) {
			listener.exitIntegerExpression(this);
		}
	}
}


export class IntegerParameterContext extends ParserRuleContext {
	public parameterNameDef(): ParameterNameDefContext {
		return this.getRuleContext(0, ParameterNameDefContext);
	}
	public integer(): IntegerContext[];
	public integer(i: number): IntegerContext;
	public integer(i?: number): IntegerContext | IntegerContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerContext);
		} else {
			return this.getRuleContext(i, IntegerContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerParameter; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerParameter) {
			listener.enterIntegerParameter(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerParameter) {
			listener.exitIntegerParameter(this);
		}
	}
}


export class IntegerParameterAssignContext extends ParserRuleContext {
	public parameterNameRef(): ParameterNameRefContext {
		return this.getRuleContext(0, ParameterNameRefContext);
	}
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerParameterAssign; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerParameterAssign) {
			listener.enterIntegerParameterAssign(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerParameterAssign) {
			listener.exitIntegerParameterAssign(this);
		}
	}
}


export class IntegerParameterRefContext extends ParserRuleContext {
	public parameterNameRef(): ParameterNameRefContext {
		return this.getRuleContext(0, ParameterNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerParameterRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerParameterRef) {
			listener.enterIntegerParameterRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerParameterRef) {
			listener.exitIntegerParameterRef(this);
		}
	}
}


export class IntegerProductContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext[];
	public integerExpression(i: number): IntegerExpressionContext;
	public integerExpression(i?: number): IntegerExpressionContext | IntegerExpressionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerExpressionContext);
		} else {
			return this.getRuleContext(i, IntegerExpressionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerProduct; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerProduct) {
			listener.enterIntegerProduct(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerProduct) {
			listener.exitIntegerProduct(this);
		}
	}
}


export class IntegerQuotientContext extends ParserRuleContext {
	public dividend(): DividendContext {
		return this.getRuleContext(0, DividendContext);
	}
	public divisor(): DivisorContext {
		return this.getRuleContext(0, DivisorContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerQuotient; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerQuotient) {
			listener.enterIntegerQuotient(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerQuotient) {
			listener.exitIntegerQuotient(this);
		}
	}
}


export class IntegerRemainderContext extends ParserRuleContext {
	public dividend(): DividendContext {
		return this.getRuleContext(0, DividendContext);
	}
	public divisor(): DivisorContext {
		return this.getRuleContext(0, DivisorContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerRemainder; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerRemainder) {
			listener.enterIntegerRemainder(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerRemainder) {
			listener.exitIntegerRemainder(this);
		}
	}
}


export class IntegerSubtractContext extends ParserRuleContext {
	public minuend(): MinuendContext {
		return this.getRuleContext(0, MinuendContext);
	}
	public subtrahend(): SubtrahendContext {
		return this.getRuleContext(0, SubtrahendContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerSubtract; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerSubtract) {
			listener.enterIntegerSubtract(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerSubtract) {
			listener.exitIntegerSubtract(this);
		}
	}
}


export class IntegerSumContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext[];
	public integerExpression(i: number): IntegerExpressionContext;
	public integerExpression(i?: number): IntegerExpressionContext | IntegerExpressionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerExpressionContext);
		} else {
			return this.getRuleContext(i, IntegerExpressionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerSum; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerSum) {
			listener.enterIntegerSum(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerSum) {
			listener.exitIntegerSum(this);
		}
	}
}


export class IntegerValueContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerValue) {
			listener.enterIntegerValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerValue) {
			listener.exitIntegerValue(this);
		}
	}
}


export class InterconnectAnnotateContext extends ParserRuleContext {
	public extendInterconnectDef(): ExtendInterconnectDefContext {
		return this.getRuleContext(0, ExtendInterconnectDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public interconnectAnnotate(): InterconnectAnnotateContext[];
	public interconnectAnnotate(i: number): InterconnectAnnotateContext;
	public interconnectAnnotate(i?: number): InterconnectAnnotateContext | InterconnectAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectAnnotateContext);
		} else {
			return this.getRuleContext(i, InterconnectAnnotateContext);
		}
	}
	public criticality(): CriticalityContext[];
	public criticality(i: number): CriticalityContext;
	public criticality(i?: number): CriticalityContext | CriticalityContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CriticalityContext);
		} else {
			return this.getRuleContext(i, CriticalityContext);
		}
	}
	public interconnectDelay(): InterconnectDelayContext[];
	public interconnectDelay(i: number): InterconnectDelayContext;
	public interconnectDelay(i?: number): InterconnectDelayContext | InterconnectDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectDelayContext);
		} else {
			return this.getRuleContext(i, InterconnectDelayContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectAnnotate) {
			listener.enterInterconnectAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectAnnotate) {
			listener.exitInterconnectAnnotate(this);
		}
	}
}


export class InterconnectAttachedTextContext extends ParserRuleContext {
	public attachmentPoint(): AttachmentPointContext {
		return this.getRuleContext(0, AttachmentPointContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public connectivityTagGeneratorDisplay(): ConnectivityTagGeneratorDisplayContext[];
	public connectivityTagGeneratorDisplay(i: number): ConnectivityTagGeneratorDisplayContext;
	public connectivityTagGeneratorDisplay(i?: number): ConnectivityTagGeneratorDisplayContext | ConnectivityTagGeneratorDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityTagGeneratorDisplayContext);
		} else {
			return this.getRuleContext(i, ConnectivityTagGeneratorDisplayContext);
		}
	}
	public criticalityDisplay(): CriticalityDisplayContext[];
	public criticalityDisplay(i: number): CriticalityDisplayContext;
	public criticalityDisplay(i?: number): CriticalityDisplayContext | CriticalityDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CriticalityDisplayContext);
		} else {
			return this.getRuleContext(i, CriticalityDisplayContext);
		}
	}
	public interconnectDelayDisplay(): InterconnectDelayDisplayContext[];
	public interconnectDelayDisplay(i: number): InterconnectDelayDisplayContext;
	public interconnectDelayDisplay(i?: number): InterconnectDelayDisplayContext | InterconnectDelayDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectDelayDisplayContext);
		} else {
			return this.getRuleContext(i, InterconnectDelayDisplayContext);
		}
	}
	public interconnectNameDisplay(): InterconnectNameDisplayContext[];
	public interconnectNameDisplay(i: number): InterconnectNameDisplayContext;
	public interconnectNameDisplay(i?: number): InterconnectNameDisplayContext | InterconnectNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectNameDisplayContext);
		} else {
			return this.getRuleContext(i, InterconnectNameDisplayContext);
		}
	}
	public interconnectPropertyDisplay(): InterconnectPropertyDisplayContext[];
	public interconnectPropertyDisplay(i: number): InterconnectPropertyDisplayContext;
	public interconnectPropertyDisplay(i?: number): InterconnectPropertyDisplayContext | InterconnectPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, InterconnectPropertyDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectAttachedText; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectAttachedText) {
			listener.enterInterconnectAttachedText(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectAttachedText) {
			listener.exitInterconnectAttachedText(this);
		}
	}
}


export class InterconnectDelayContext extends ParserRuleContext {
	public interconnectDelayNameDef(): InterconnectDelayNameDefContext {
		return this.getRuleContext(0, InterconnectDelayNameDefContext);
	}
	public derivation(): DerivationContext {
		return this.getRuleContext(0, DerivationContext);
	}
	public delay(): DelayContext {
		return this.getRuleContext(0, DelayContext);
	}
	public becomes(): BecomesContext[];
	public becomes(i: number): BecomesContext;
	public becomes(i?: number): BecomesContext | BecomesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BecomesContext);
		} else {
			return this.getRuleContext(i, BecomesContext);
		}
	}
	public transition(): TransitionContext[];
	public transition(i: number): TransitionContext;
	public transition(i?: number): TransitionContext | TransitionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TransitionContext);
		} else {
			return this.getRuleContext(i, TransitionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectDelay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectDelay) {
			listener.enterInterconnectDelay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectDelay) {
			listener.exitInterconnectDelay(this);
		}
	}
}


export class InterconnectDelayDisplayContext extends ParserRuleContext {
	public interconnectDelayNameRef(): InterconnectDelayNameRefContext {
		return this.getRuleContext(0, InterconnectDelayNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectDelayDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectDelayDisplay) {
			listener.enterInterconnectDelayDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectDelayDisplay) {
			listener.exitInterconnectDelayDisplay(this);
		}
	}
}


export class InterconnectDelayNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectDelayNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectDelayNameDef) {
			listener.enterInterconnectDelayNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectDelayNameDef) {
			listener.exitInterconnectDelayNameDef(this);
		}
	}
}


export class InterconnectDelayNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectDelayNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectDelayNameRef) {
			listener.enterInterconnectDelayNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectDelayNameRef) {
			listener.exitInterconnectDelayNameRef(this);
		}
	}
}


export class InterconnectHeaderContext extends ParserRuleContext {
	public criticality(): CriticalityContext[];
	public criticality(i: number): CriticalityContext;
	public criticality(i?: number): CriticalityContext | CriticalityContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CriticalityContext);
		} else {
			return this.getRuleContext(i, CriticalityContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public interconnectDelay(): InterconnectDelayContext[];
	public interconnectDelay(i: number): InterconnectDelayContext;
	public interconnectDelay(i?: number): InterconnectDelayContext | InterconnectDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectDelayContext);
		} else {
			return this.getRuleContext(i, InterconnectDelayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectHeader) {
			listener.enterInterconnectHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectHeader) {
			listener.exitInterconnectHeader(this);
		}
	}
}


export class InterconnectNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectNameCaseSensitive) {
			listener.enterInterconnectNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectNameCaseSensitive) {
			listener.exitInterconnectNameCaseSensitive(this);
		}
	}
}


export class InterconnectNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectNameDef) {
			listener.enterInterconnectNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectNameDef) {
			listener.exitInterconnectNameDef(this);
		}
	}
}


export class InterconnectNameDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public displayNameOverride(): DisplayNameOverrideContext[];
	public displayNameOverride(i: number): DisplayNameOverrideContext;
	public displayNameOverride(i?: number): DisplayNameOverrideContext | DisplayNameOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameOverrideContext);
		} else {
			return this.getRuleContext(i, DisplayNameOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectNameDisplay) {
			listener.enterInterconnectNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectNameDisplay) {
			listener.exitInterconnectNameDisplay(this);
		}
	}
}


export class InterconnectNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectNameRef) {
			listener.enterInterconnectNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectNameRef) {
			listener.exitInterconnectNameRef(this);
		}
	}
}


export class InterconnectPropertyDisplayContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public propertyNameDisplay(): PropertyNameDisplayContext | undefined {
		return this.tryGetRuleContext(0, PropertyNameDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectPropertyDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectPropertyDisplay) {
			listener.enterInterconnectPropertyDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectPropertyDisplay) {
			listener.exitInterconnectPropertyDisplay(this);
		}
	}
}


export class InterconnectRefContext extends ParserRuleContext {
	public interconnectNameRef(): InterconnectNameRefContext {
		return this.getRuleContext(0, InterconnectNameRefContext);
	}
	public pageRef(): PageRefContext | undefined {
		return this.tryGetRuleContext(0, PageRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectRef) {
			listener.enterInterconnectRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectRef) {
			listener.exitInterconnectRef(this);
		}
	}
}


export class InterconnectSetContext extends ParserRuleContext {
	public interconnectRef(): InterconnectRefContext[];
	public interconnectRef(i: number): InterconnectRefContext;
	public interconnectRef(i?: number): InterconnectRefContext | InterconnectRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectRefContext);
		} else {
			return this.getRuleContext(i, InterconnectRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interconnectSet; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterconnectSet) {
			listener.enterInterconnectSet(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterconnectSet) {
			listener.exitInterconnectSet(this);
		}
	}
}


export class EinterfaceContext extends ParserRuleContext {
	public interfaceUnits(): InterfaceUnitsContext {
		return this.getRuleContext(0, InterfaceUnitsContext);
	}
	public designator(): DesignatorContext[];
	public designator(i: number): DesignatorContext;
	public designator(i?: number): DesignatorContext | DesignatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorContext);
		} else {
			return this.getRuleContext(i, DesignatorContext);
		}
	}
	public booleanParameter(): BooleanParameterContext[];
	public booleanParameter(i: number): BooleanParameterContext;
	public booleanParameter(i?: number): BooleanParameterContext | BooleanParameterContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BooleanParameterContext);
		} else {
			return this.getRuleContext(i, BooleanParameterContext);
		}
	}
	public integerParameter(): IntegerParameterContext[];
	public integerParameter(i: number): IntegerParameterContext;
	public integerParameter(i?: number): IntegerParameterContext | IntegerParameterContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerParameterContext);
		} else {
			return this.getRuleContext(i, IntegerParameterContext);
		}
	}
	public interfaceJoined(): InterfaceJoinedContext[];
	public interfaceJoined(i: number): InterfaceJoinedContext;
	public interfaceJoined(i?: number): InterfaceJoinedContext | InterfaceJoinedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterfaceJoinedContext);
		} else {
			return this.getRuleContext(i, InterfaceJoinedContext);
		}
	}
	public mustJoin(): MustJoinContext[];
	public mustJoin(i: number): MustJoinContext;
	public mustJoin(i?: number): MustJoinContext | MustJoinContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MustJoinContext);
		} else {
			return this.getRuleContext(i, MustJoinContext);
		}
	}
	public numberParameter(): NumberParameterContext[];
	public numberParameter(i: number): NumberParameterContext;
	public numberParameter(i?: number): NumberParameterContext | NumberParameterContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NumberParameterContext);
		} else {
			return this.getRuleContext(i, NumberParameterContext);
		}
	}
	public permutable(): PermutableContext[];
	public permutable(i: number): PermutableContext;
	public permutable(i?: number): PermutableContext | PermutableContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PermutableContext);
		} else {
			return this.getRuleContext(i, PermutableContext);
		}
	}
	public port(): PortContext[];
	public port(i: number): PortContext;
	public port(i?: number): PortContext | PortContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortContext);
		} else {
			return this.getRuleContext(i, PortContext);
		}
	}
	public portBundle(): PortBundleContext[];
	public portBundle(i: number): PortBundleContext;
	public portBundle(i?: number): PortBundleContext | PortBundleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortBundleContext);
		} else {
			return this.getRuleContext(i, PortBundleContext);
		}
	}
	public stringParameter(): StringParameterContext[];
	public stringParameter(i: number): StringParameterContext;
	public stringParameter(i?: number): StringParameterContext | StringParameterContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringParameterContext);
		} else {
			return this.getRuleContext(i, StringParameterContext);
		}
	}
	public timing(): TimingContext[];
	public timing(i: number): TimingContext;
	public timing(i?: number): TimingContext | TimingContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TimingContext);
		} else {
			return this.getRuleContext(i, TimingContext);
		}
	}
	public weakJoined(): WeakJoinedContext[];
	public weakJoined(i: number): WeakJoinedContext;
	public weakJoined(i?: number): WeakJoinedContext | WeakJoinedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(WeakJoinedContext);
		} else {
			return this.getRuleContext(i, WeakJoinedContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_einterface; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEinterface) {
			listener.enterEinterface(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEinterface) {
			listener.exitEinterface(this);
		}
	}
}


export class InterfaceJoinedContext extends ParserRuleContext {
	public portRef(): PortRefContext[];
	public portRef(i: number): PortRefContext;
	public portRef(i?: number): PortRefContext | PortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortRefContext);
		} else {
			return this.getRuleContext(i, PortRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interfaceJoined; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterfaceJoined) {
			listener.enterInterfaceJoined(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterfaceJoined) {
			listener.exitInterfaceJoined(this);
		}
	}
}


export class InterfaceUnitsContext extends ParserRuleContext {
	public setCapacitance(): SetCapacitanceContext[];
	public setCapacitance(i: number): SetCapacitanceContext;
	public setCapacitance(i?: number): SetCapacitanceContext | SetCapacitanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetCapacitanceContext);
		} else {
			return this.getRuleContext(i, SetCapacitanceContext);
		}
	}
	public setTime(): SetTimeContext[];
	public setTime(i: number): SetTimeContext;
	public setTime(i?: number): SetTimeContext | SetTimeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetTimeContext);
		} else {
			return this.getRuleContext(i, SetTimeContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_interfaceUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterInterfaceUnits) {
			listener.enterInterfaceUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitInterfaceUnits) {
			listener.exitInterfaceUnits(this);
		}
	}
}


export class Iso8859Context extends ParserRuleContext {
	public iso8859Part(): Iso8859PartContext {
		return this.getRuleContext(0, Iso8859PartContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_iso8859; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIso8859) {
			listener.enterIso8859(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIso8859) {
			listener.exitIso8859(this);
		}
	}
}


export class Iso8859PartContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_iso8859Part; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIso8859Part) {
			listener.enterIso8859Part(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIso8859Part) {
			listener.exitIso8859Part(this);
		}
	}
}


export class IsolatedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_isolated; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIsolated) {
			listener.enterIsolated(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIsolated) {
			listener.exitIsolated(this);
		}
	}
}


export class IssueContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_issue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIssue) {
			listener.enterIssue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIssue) {
			listener.exitIssue(this);
		}
	}
}


export class ItalicStyleContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_italicStyle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterItalicStyle) {
			listener.enterItalicStyle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitItalicStyle) {
			listener.exitItalicStyle(this);
		}
	}
}


export class Jisx0201Context extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_jisx0201; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterJisx0201) {
			listener.enterJisx0201(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitJisx0201) {
			listener.exitJisx0201(this);
		}
	}
}


export class Jisx0208Context extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_jisx0208; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterJisx0208) {
			listener.enterJisx0208(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitJisx0208) {
			listener.exitJisx0208(this);
		}
	}
}


export class JoinedAsSignalContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_joinedAsSignal; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterJoinedAsSignal) {
			listener.enterJoinedAsSignal(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitJoinedAsSignal) {
			listener.exitJoinedAsSignal(this);
		}
	}
}


export class JouleContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_joule; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterJoule) {
			listener.enterJoule(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitJoule) {
			listener.exitJoule(this);
		}
	}
}


export class K0KeywordLevelContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k0KeywordLevel; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK0KeywordLevel) {
			listener.enterK0KeywordLevel(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK0KeywordLevel) {
			listener.exitK0KeywordLevel(this);
		}
	}
}


export class K1KeywordAliasContext extends ParserRuleContext {
	public k1KeywordNameDef(): K1KeywordNameDefContext {
		return this.getRuleContext(0, K1KeywordNameDefContext);
	}
	public k1KeywordNameRef(): K1KeywordNameRefContext {
		return this.getRuleContext(0, K1KeywordNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k1KeywordAlias; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK1KeywordAlias) {
			listener.enterK1KeywordAlias(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK1KeywordAlias) {
			listener.exitK1KeywordAlias(this);
		}
	}
}


export class K1KeywordLevelContext extends ParserRuleContext {
	public k1KeywordAlias(): K1KeywordAliasContext[];
	public k1KeywordAlias(i: number): K1KeywordAliasContext;
	public k1KeywordAlias(i?: number): K1KeywordAliasContext | K1KeywordAliasContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K1KeywordAliasContext);
		} else {
			return this.getRuleContext(i, K1KeywordAliasContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k1KeywordLevel; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK1KeywordLevel) {
			listener.enterK1KeywordLevel(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK1KeywordLevel) {
			listener.exitK1KeywordLevel(this);
		}
	}
}


export class K1KeywordNameDefContext extends ParserRuleContext {
	public IDENTIFIER(): TerminalNode { return this.getToken(EDIF300Parser.IDENTIFIER, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k1KeywordNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK1KeywordNameDef) {
			listener.enterK1KeywordNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK1KeywordNameDef) {
			listener.exitK1KeywordNameDef(this);
		}
	}
}


export class K1KeywordNameRefContext extends ParserRuleContext {
	public IDENTIFIER(): TerminalNode { return this.getToken(EDIF300Parser.IDENTIFIER, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k1KeywordNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK1KeywordNameRef) {
			listener.enterK1KeywordNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK1KeywordNameRef) {
			listener.exitK1KeywordNameRef(this);
		}
	}
}


export class K2ActualContext extends ParserRuleContext {
	public k2FormalNameRef(): K2FormalNameRefContext {
		return this.getRuleContext(0, K2FormalNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2Actual; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2Actual) {
			listener.enterK2Actual(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2Actual) {
			listener.exitK2Actual(this);
		}
	}
}


export class K2BuildContext extends ParserRuleContext {
	public k1KeywordNameRef(): K1KeywordNameRefContext {
		return this.getRuleContext(0, K1KeywordNameRefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public k2Actual(): K2ActualContext[];
	public k2Actual(i: number): K2ActualContext;
	public k2Actual(i?: number): K2ActualContext | K2ActualContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2ActualContext);
		} else {
			return this.getRuleContext(i, K2ActualContext);
		}
	}
	public k2Build(): K2BuildContext[];
	public k2Build(i: number): K2BuildContext;
	public k2Build(i?: number): K2BuildContext | K2BuildContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2BuildContext);
		} else {
			return this.getRuleContext(i, K2BuildContext);
		}
	}
	public k2Literal(): K2LiteralContext[];
	public k2Literal(i: number): K2LiteralContext;
	public k2Literal(i?: number): K2LiteralContext | K2LiteralContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2LiteralContext);
		} else {
			return this.getRuleContext(i, K2LiteralContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2Build; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2Build) {
			listener.enterK2Build(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2Build) {
			listener.exitK2Build(this);
		}
	}
}


export class K2FormalContext extends ParserRuleContext {
	public k2FormalNameDef(): K2FormalNameDefContext {
		return this.getRuleContext(0, K2FormalNameDefContext);
	}
	public k2Optional(): K2OptionalContext | undefined {
		return this.tryGetRuleContext(0, K2OptionalContext);
	}
	public k2Required(): K2RequiredContext | undefined {
		return this.tryGetRuleContext(0, K2RequiredContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2Formal; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2Formal) {
			listener.enterK2Formal(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2Formal) {
			listener.exitK2Formal(this);
		}
	}
}


export class K2FormalNameDefContext extends ParserRuleContext {
	public IDENTIFIER(): TerminalNode { return this.getToken(EDIF300Parser.IDENTIFIER, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2FormalNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2FormalNameDef) {
			listener.enterK2FormalNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2FormalNameDef) {
			listener.exitK2FormalNameDef(this);
		}
	}
}


export class K2FormalNameRefContext extends ParserRuleContext {
	public IDENTIFIER(): TerminalNode { return this.getToken(EDIF300Parser.IDENTIFIER, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2FormalNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2FormalNameRef) {
			listener.enterK2FormalNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2FormalNameRef) {
			listener.exitK2FormalNameRef(this);
		}
	}
}


export class K2GenerateContext extends ParserRuleContext {
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public k2Actual(): K2ActualContext[];
	public k2Actual(i: number): K2ActualContext;
	public k2Actual(i?: number): K2ActualContext | K2ActualContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2ActualContext);
		} else {
			return this.getRuleContext(i, K2ActualContext);
		}
	}
	public k2Build(): K2BuildContext[];
	public k2Build(i: number): K2BuildContext;
	public k2Build(i?: number): K2BuildContext | K2BuildContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2BuildContext);
		} else {
			return this.getRuleContext(i, K2BuildContext);
		}
	}
	public k2Literal(): K2LiteralContext[];
	public k2Literal(i: number): K2LiteralContext;
	public k2Literal(i?: number): K2LiteralContext | K2LiteralContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2LiteralContext);
		} else {
			return this.getRuleContext(i, K2LiteralContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2Generate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2Generate) {
			listener.enterK2Generate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2Generate) {
			listener.exitK2Generate(this);
		}
	}
}


export class K2KeywordDefineContext extends ParserRuleContext {
	public k1KeywordNameDef(): K1KeywordNameDefContext {
		return this.getRuleContext(0, K1KeywordNameDefContext);
	}
	public k2KeywordParameters(): K2KeywordParametersContext {
		return this.getRuleContext(0, K2KeywordParametersContext);
	}
	public k2Generate(): K2GenerateContext {
		return this.getRuleContext(0, K2GenerateContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2KeywordDefine; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2KeywordDefine) {
			listener.enterK2KeywordDefine(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2KeywordDefine) {
			listener.exitK2KeywordDefine(this);
		}
	}
}


export class K2KeywordLevelContext extends ParserRuleContext {
	public k1KeywordAlias(): K1KeywordAliasContext[];
	public k1KeywordAlias(i: number): K1KeywordAliasContext;
	public k1KeywordAlias(i?: number): K1KeywordAliasContext | K1KeywordAliasContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K1KeywordAliasContext);
		} else {
			return this.getRuleContext(i, K1KeywordAliasContext);
		}
	}
	public k2KeywordDefine(): K2KeywordDefineContext[];
	public k2KeywordDefine(i: number): K2KeywordDefineContext;
	public k2KeywordDefine(i?: number): K2KeywordDefineContext | K2KeywordDefineContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2KeywordDefineContext);
		} else {
			return this.getRuleContext(i, K2KeywordDefineContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2KeywordLevel; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2KeywordLevel) {
			listener.enterK2KeywordLevel(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2KeywordLevel) {
			listener.exitK2KeywordLevel(this);
		}
	}
}


export class K2KeywordParametersContext extends ParserRuleContext {
	public k2Formal(): K2FormalContext[];
	public k2Formal(i: number): K2FormalContext;
	public k2Formal(i?: number): K2FormalContext | K2FormalContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2FormalContext);
		} else {
			return this.getRuleContext(i, K2FormalContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2KeywordParameters; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2KeywordParameters) {
			listener.enterK2KeywordParameters(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2KeywordParameters) {
			listener.exitK2KeywordParameters(this);
		}
	}
}


export class K2LiteralContext extends ParserRuleContext {
	public IDENTIFIER(): TerminalNode[];
	public IDENTIFIER(i: number): TerminalNode;
	public IDENTIFIER(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(EDIF300Parser.IDENTIFIER);
		} else {
			return this.getToken(EDIF300Parser.IDENTIFIER, i);
		}
	}
	public integerToken(): IntegerTokenContext[];
	public integerToken(i: number): IntegerTokenContext;
	public integerToken(i?: number): IntegerTokenContext | IntegerTokenContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerTokenContext);
		} else {
			return this.getRuleContext(i, IntegerTokenContext);
		}
	}
	public stringToken(): StringTokenContext[];
	public stringToken(i: number): StringTokenContext;
	public stringToken(i?: number): StringTokenContext | StringTokenContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringTokenContext);
		} else {
			return this.getRuleContext(i, StringTokenContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2Literal; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2Literal) {
			listener.enterK2Literal(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2Literal) {
			listener.exitK2Literal(this);
		}
	}
}


export class K2OptionalContext extends ParserRuleContext {
	public k2Literal(): K2LiteralContext | undefined {
		return this.tryGetRuleContext(0, K2LiteralContext);
	}
	public k2Actual(): K2ActualContext | undefined {
		return this.tryGetRuleContext(0, K2ActualContext);
	}
	public k2Build(): K2BuildContext | undefined {
		return this.tryGetRuleContext(0, K2BuildContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2Optional; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2Optional) {
			listener.enterK2Optional(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2Optional) {
			listener.exitK2Optional(this);
		}
	}
}


export class K2RequiredContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k2Required; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK2Required) {
			listener.enterK2Required(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK2Required) {
			listener.exitK2Required(this);
		}
	}
}


export class K3BuildContext extends ParserRuleContext {
	public k1KeywordNameRef(): K1KeywordNameRefContext {
		return this.getRuleContext(0, K1KeywordNameRefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public k2Actual(): K2ActualContext[];
	public k2Actual(i: number): K2ActualContext;
	public k2Actual(i?: number): K2ActualContext | K2ActualContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2ActualContext);
		} else {
			return this.getRuleContext(i, K2ActualContext);
		}
	}
	public k2Literal(): K2LiteralContext[];
	public k2Literal(i: number): K2LiteralContext;
	public k2Literal(i?: number): K2LiteralContext | K2LiteralContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2LiteralContext);
		} else {
			return this.getRuleContext(i, K2LiteralContext);
		}
	}
	public k3Build(): K3BuildContext[];
	public k3Build(i: number): K3BuildContext;
	public k3Build(i?: number): K3BuildContext | K3BuildContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K3BuildContext);
		} else {
			return this.getRuleContext(i, K3BuildContext);
		}
	}
	public k3ForEach(): K3ForEachContext[];
	public k3ForEach(i: number): K3ForEachContext;
	public k3ForEach(i?: number): K3ForEachContext | K3ForEachContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K3ForEachContext);
		} else {
			return this.getRuleContext(i, K3ForEachContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k3Build; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK3Build) {
			listener.enterK3Build(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK3Build) {
			listener.exitK3Build(this);
		}
	}
}


export class K3CollectorContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k3Collector; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK3Collector) {
			listener.enterK3Collector(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK3Collector) {
			listener.exitK3Collector(this);
		}
	}
}


export class K3ForEachContext extends ParserRuleContext {
	public k2FormalNameRef(): K2FormalNameRefContext | undefined {
		return this.tryGetRuleContext(0, K2FormalNameRefContext);
	}
	public k3FormalList(): K3FormalListContext | undefined {
		return this.tryGetRuleContext(0, K3FormalListContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public k2Actual(): K2ActualContext[];
	public k2Actual(i: number): K2ActualContext;
	public k2Actual(i?: number): K2ActualContext | K2ActualContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2ActualContext);
		} else {
			return this.getRuleContext(i, K2ActualContext);
		}
	}
	public k2Literal(): K2LiteralContext[];
	public k2Literal(i: number): K2LiteralContext;
	public k2Literal(i?: number): K2LiteralContext | K2LiteralContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2LiteralContext);
		} else {
			return this.getRuleContext(i, K2LiteralContext);
		}
	}
	public k3Build(): K3BuildContext[];
	public k3Build(i: number): K3BuildContext;
	public k3Build(i?: number): K3BuildContext | K3BuildContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K3BuildContext);
		} else {
			return this.getRuleContext(i, K3BuildContext);
		}
	}
	public k3ForEach(): K3ForEachContext[];
	public k3ForEach(i: number): K3ForEachContext;
	public k3ForEach(i?: number): K3ForEachContext | K3ForEachContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K3ForEachContext);
		} else {
			return this.getRuleContext(i, K3ForEachContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k3ForEach; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK3ForEach) {
			listener.enterK3ForEach(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK3ForEach) {
			listener.exitK3ForEach(this);
		}
	}
}


export class K3FormalContext extends ParserRuleContext {
	public k2FormalNameDef(): K2FormalNameDefContext {
		return this.getRuleContext(0, K2FormalNameDefContext);
	}
	public k2Optional(): K2OptionalContext | undefined {
		return this.tryGetRuleContext(0, K2OptionalContext);
	}
	public k2Required(): K2RequiredContext | undefined {
		return this.tryGetRuleContext(0, K2RequiredContext);
	}
	public k3Collector(): K3CollectorContext | undefined {
		return this.tryGetRuleContext(0, K3CollectorContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k3Formal; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK3Formal) {
			listener.enterK3Formal(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK3Formal) {
			listener.exitK3Formal(this);
		}
	}
}


export class K3FormalListContext extends ParserRuleContext {
	public k2FormalNameRef(): K2FormalNameRefContext[];
	public k2FormalNameRef(i: number): K2FormalNameRefContext;
	public k2FormalNameRef(i?: number): K2FormalNameRefContext | K2FormalNameRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2FormalNameRefContext);
		} else {
			return this.getRuleContext(i, K2FormalNameRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k3FormalList; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK3FormalList) {
			listener.enterK3FormalList(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK3FormalList) {
			listener.exitK3FormalList(this);
		}
	}
}


export class K3GenerateContext extends ParserRuleContext {
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public k2Actual(): K2ActualContext[];
	public k2Actual(i: number): K2ActualContext;
	public k2Actual(i?: number): K2ActualContext | K2ActualContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2ActualContext);
		} else {
			return this.getRuleContext(i, K2ActualContext);
		}
	}
	public k2Build(): K2BuildContext[];
	public k2Build(i: number): K2BuildContext;
	public k2Build(i?: number): K2BuildContext | K2BuildContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2BuildContext);
		} else {
			return this.getRuleContext(i, K2BuildContext);
		}
	}
	public k2Literal(): K2LiteralContext[];
	public k2Literal(i: number): K2LiteralContext;
	public k2Literal(i?: number): K2LiteralContext | K2LiteralContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K2LiteralContext);
		} else {
			return this.getRuleContext(i, K2LiteralContext);
		}
	}
	public k3ForEach(): K3ForEachContext[];
	public k3ForEach(i: number): K3ForEachContext;
	public k3ForEach(i?: number): K3ForEachContext | K3ForEachContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K3ForEachContext);
		} else {
			return this.getRuleContext(i, K3ForEachContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k3Generate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK3Generate) {
			listener.enterK3Generate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK3Generate) {
			listener.exitK3Generate(this);
		}
	}
}


export class K3KeywordDefineContext extends ParserRuleContext {
	public k1KeywordNameDef(): K1KeywordNameDefContext {
		return this.getRuleContext(0, K1KeywordNameDefContext);
	}
	public k3KeywordParameters(): K3KeywordParametersContext {
		return this.getRuleContext(0, K3KeywordParametersContext);
	}
	public k3Generate(): K3GenerateContext {
		return this.getRuleContext(0, K3GenerateContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k3KeywordDefine; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK3KeywordDefine) {
			listener.enterK3KeywordDefine(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK3KeywordDefine) {
			listener.exitK3KeywordDefine(this);
		}
	}
}


export class K3KeywordLevelContext extends ParserRuleContext {
	public k1KeywordAlias(): K1KeywordAliasContext[];
	public k1KeywordAlias(i: number): K1KeywordAliasContext;
	public k1KeywordAlias(i?: number): K1KeywordAliasContext | K1KeywordAliasContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K1KeywordAliasContext);
		} else {
			return this.getRuleContext(i, K1KeywordAliasContext);
		}
	}
	public k3KeywordDefine(): K3KeywordDefineContext[];
	public k3KeywordDefine(i: number): K3KeywordDefineContext;
	public k3KeywordDefine(i?: number): K3KeywordDefineContext | K3KeywordDefineContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K3KeywordDefineContext);
		} else {
			return this.getRuleContext(i, K3KeywordDefineContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k3KeywordLevel; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK3KeywordLevel) {
			listener.enterK3KeywordLevel(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK3KeywordLevel) {
			listener.exitK3KeywordLevel(this);
		}
	}
}


export class K3KeywordParametersContext extends ParserRuleContext {
	public k3Formal(): K3FormalContext[];
	public k3Formal(i: number): K3FormalContext;
	public k3Formal(i?: number): K3FormalContext | K3FormalContext[] {
		if (i === undefined) {
			return this.getRuleContexts(K3FormalContext);
		} else {
			return this.getRuleContext(i, K3FormalContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_k3KeywordParameters; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterK3KeywordParameters) {
			listener.enterK3KeywordParameters(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitK3KeywordParameters) {
			listener.exitK3KeywordParameters(this);
		}
	}
}


export class KelvinContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_kelvin; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterKelvin) {
			listener.enterKelvin(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitKelvin) {
			listener.exitKelvin(this);
		}
	}
}


export class KeywordMapContext extends ParserRuleContext {
	public k0KeywordLevel(): K0KeywordLevelContext | undefined {
		return this.tryGetRuleContext(0, K0KeywordLevelContext);
	}
	public k1KeywordLevel(): K1KeywordLevelContext | undefined {
		return this.tryGetRuleContext(0, K1KeywordLevelContext);
	}
	public k2KeywordLevel(): K2KeywordLevelContext | undefined {
		return this.tryGetRuleContext(0, K2KeywordLevelContext);
	}
	public k3KeywordLevel(): K3KeywordLevelContext | undefined {
		return this.tryGetRuleContext(0, K3KeywordLevelContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_keywordMap; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterKeywordMap) {
			listener.enterKeywordMap(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitKeywordMap) {
			listener.exitKeywordMap(this);
		}
	}
}


export class KilogramContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_kilogram; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterKilogram) {
			listener.enterKilogram(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitKilogram) {
			listener.exitKilogram(this);
		}
	}
}


export class LeafContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_leaf; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLeaf) {
			listener.enterLeaf(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLeaf) {
			listener.exitLeaf(this);
		}
	}
}


export class LeafOccurrenceAnnotateContext extends ParserRuleContext {
	public extendInstanceDef(): ExtendInstanceDefContext | undefined {
		return this.tryGetRuleContext(0, ExtendInstanceDefContext);
	}
	public extendInstanceMemberDef(): ExtendInstanceMemberDefContext | undefined {
		return this.tryGetRuleContext(0, ExtendInstanceMemberDefContext);
	}
	public cellPropertyOverride(): CellPropertyOverrideContext[];
	public cellPropertyOverride(i: number): CellPropertyOverrideContext;
	public cellPropertyOverride(i?: number): CellPropertyOverrideContext | CellPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, CellPropertyOverrideContext);
		}
	}
	public clusterPropertyOverride(): ClusterPropertyOverrideContext[];
	public clusterPropertyOverride(i: number): ClusterPropertyOverrideContext;
	public clusterPropertyOverride(i?: number): ClusterPropertyOverrideContext | ClusterPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, ClusterPropertyOverrideContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public designator(): DesignatorContext[];
	public designator(i: number): DesignatorContext;
	public designator(i?: number): DesignatorContext | DesignatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorContext);
		} else {
			return this.getRuleContext(i, DesignatorContext);
		}
	}
	public instancePropertyOverride(): InstancePropertyOverrideContext[];
	public instancePropertyOverride(i: number): InstancePropertyOverrideContext;
	public instancePropertyOverride(i?: number): InstancePropertyOverrideContext | InstancePropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstancePropertyOverrideContext);
		} else {
			return this.getRuleContext(i, InstancePropertyOverrideContext);
		}
	}
	public portAnnotate(): PortAnnotateContext[];
	public portAnnotate(i: number): PortAnnotateContext;
	public portAnnotate(i?: number): PortAnnotateContext | PortAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortAnnotateContext);
		} else {
			return this.getRuleContext(i, PortAnnotateContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_leafOccurrenceAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLeafOccurrenceAnnotate) {
			listener.enterLeafOccurrenceAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLeafOccurrenceAnnotate) {
			listener.exitLeafOccurrenceAnnotate(this);
		}
	}
}


export class LeftJustifyContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_leftJustify; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLeftJustify) {
			listener.enterLeftJustify(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLeftJustify) {
			listener.exitLeftJustify(this);
		}
	}
}


export class LengthValueContext extends ParserRuleContext {
	public distanceValue(): DistanceValueContext {
		return this.getRuleContext(0, DistanceValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_lengthValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLengthValue) {
			listener.enterLengthValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLengthValue) {
			listener.exitLengthValue(this);
		}
	}
}


export class LessThanContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext[];
	public integerExpression(i: number): IntegerExpressionContext;
	public integerExpression(i?: number): IntegerExpressionContext | IntegerExpressionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerExpressionContext);
		} else {
			return this.getRuleContext(i, IntegerExpressionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_lessThan; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLessThan) {
			listener.enterLessThan(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLessThan) {
			listener.exitLessThan(this);
		}
	}
}


export class LessThanOrEqualContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext[];
	public integerExpression(i: number): IntegerExpressionContext;
	public integerExpression(i?: number): IntegerExpressionContext | IntegerExpressionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerExpressionContext);
		} else {
			return this.getRuleContext(i, IntegerExpressionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_lessThanOrEqual; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLessThanOrEqual) {
			listener.enterLessThanOrEqual(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLessThanOrEqual) {
			listener.exitLessThanOrEqual(this);
		}
	}
}


export class LibraryContext extends ParserRuleContext {
	public libraryNameDef(): LibraryNameDefContext {
		return this.getRuleContext(0, LibraryNameDefContext);
	}
	public libraryHeader(): LibraryHeaderContext {
		return this.getRuleContext(0, LibraryHeaderContext);
	}
	public cell(): CellContext[];
	public cell(i: number): CellContext;
	public cell(i?: number): CellContext | CellContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellContext);
		} else {
			return this.getRuleContext(i, CellContext);
		}
	}
	public schematicInterconnectTerminatorTemplate(): SchematicInterconnectTerminatorTemplateContext[];
	public schematicInterconnectTerminatorTemplate(i: number): SchematicInterconnectTerminatorTemplateContext;
	public schematicInterconnectTerminatorTemplate(i?: number): SchematicInterconnectTerminatorTemplateContext | SchematicInterconnectTerminatorTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInterconnectTerminatorTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicInterconnectTerminatorTemplateContext);
		}
	}
	public schematicJunctionTemplate(): SchematicJunctionTemplateContext[];
	public schematicJunctionTemplate(i: number): SchematicJunctionTemplateContext;
	public schematicJunctionTemplate(i?: number): SchematicJunctionTemplateContext | SchematicJunctionTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicJunctionTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicJunctionTemplateContext);
		}
	}
	public schematicGlobalPortTemplate(): SchematicGlobalPortTemplateContext[];
	public schematicGlobalPortTemplate(i: number): SchematicGlobalPortTemplateContext;
	public schematicGlobalPortTemplate(i?: number): SchematicGlobalPortTemplateContext | SchematicGlobalPortTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicGlobalPortTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicGlobalPortTemplateContext);
		}
	}
	public schematicMasterPortTemplate(): SchematicMasterPortTemplateContext[];
	public schematicMasterPortTemplate(i: number): SchematicMasterPortTemplateContext;
	public schematicMasterPortTemplate(i?: number): SchematicMasterPortTemplateContext | SchematicMasterPortTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicMasterPortTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicMasterPortTemplateContext);
		}
	}
	public schematicOffPageConnectorTemplate(): SchematicOffPageConnectorTemplateContext[];
	public schematicOffPageConnectorTemplate(i: number): SchematicOffPageConnectorTemplateContext;
	public schematicOffPageConnectorTemplate(i?: number): SchematicOffPageConnectorTemplateContext | SchematicOffPageConnectorTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOffPageConnectorTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicOffPageConnectorTemplateContext);
		}
	}
	public schematicOnPageConnectorTemplate(): SchematicOnPageConnectorTemplateContext[];
	public schematicOnPageConnectorTemplate(i: number): SchematicOnPageConnectorTemplateContext;
	public schematicOnPageConnectorTemplate(i?: number): SchematicOnPageConnectorTemplateContext | SchematicOnPageConnectorTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOnPageConnectorTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicOnPageConnectorTemplateContext);
		}
	}
	public schematicRipperTemplate(): SchematicRipperTemplateContext[];
	public schematicRipperTemplate(i: number): SchematicRipperTemplateContext;
	public schematicRipperTemplate(i?: number): SchematicRipperTemplateContext | SchematicRipperTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicRipperTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicRipperTemplateContext);
		}
	}
	public schematicSymbolBorderTemplate(): SchematicSymbolBorderTemplateContext[];
	public schematicSymbolBorderTemplate(i: number): SchematicSymbolBorderTemplateContext;
	public schematicSymbolBorderTemplate(i?: number): SchematicSymbolBorderTemplateContext | SchematicSymbolBorderTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSymbolBorderTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicSymbolBorderTemplateContext);
		}
	}
	public schematicSymbolPortTemplate(): SchematicSymbolPortTemplateContext[];
	public schematicSymbolPortTemplate(i: number): SchematicSymbolPortTemplateContext;
	public schematicSymbolPortTemplate(i?: number): SchematicSymbolPortTemplateContext | SchematicSymbolPortTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSymbolPortTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicSymbolPortTemplateContext);
		}
	}
	public pageBorderTemplate(): PageBorderTemplateContext[];
	public pageBorderTemplate(i: number): PageBorderTemplateContext;
	public pageBorderTemplate(i?: number): PageBorderTemplateContext | PageBorderTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageBorderTemplateContext);
		} else {
			return this.getRuleContext(i, PageBorderTemplateContext);
		}
	}
	public pageTitleBlockTemplate(): PageTitleBlockTemplateContext[];
	public pageTitleBlockTemplate(i: number): PageTitleBlockTemplateContext;
	public pageTitleBlockTemplate(i?: number): PageTitleBlockTemplateContext | PageTitleBlockTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageTitleBlockTemplateContext);
		} else {
			return this.getRuleContext(i, PageTitleBlockTemplateContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public geometryMacro(): GeometryMacroContext[];
	public geometryMacro(i: number): GeometryMacroContext;
	public geometryMacro(i?: number): GeometryMacroContext | GeometryMacroContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GeometryMacroContext);
		} else {
			return this.getRuleContext(i, GeometryMacroContext);
		}
	}
	public schematicFigureMacro(): SchematicFigureMacroContext[];
	public schematicFigureMacro(i: number): SchematicFigureMacroContext;
	public schematicFigureMacro(i?: number): SchematicFigureMacroContext | SchematicFigureMacroContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicFigureMacroContext);
		} else {
			return this.getRuleContext(i, SchematicFigureMacroContext);
		}
	}
	public schematicForFrameBorderTemplate(): SchematicForFrameBorderTemplateContext[];
	public schematicForFrameBorderTemplate(i: number): SchematicForFrameBorderTemplateContext;
	public schematicForFrameBorderTemplate(i?: number): SchematicForFrameBorderTemplateContext | SchematicForFrameBorderTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicForFrameBorderTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicForFrameBorderTemplateContext);
		}
	}
	public schematicIfFrameBorderTemplate(): SchematicIfFrameBorderTemplateContext[];
	public schematicIfFrameBorderTemplate(i: number): SchematicIfFrameBorderTemplateContext;
	public schematicIfFrameBorderTemplate(i?: number): SchematicIfFrameBorderTemplateContext | SchematicIfFrameBorderTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicIfFrameBorderTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicIfFrameBorderTemplateContext);
		}
	}
	public schematicOtherwiseFrameBorderTemplate(): SchematicOtherwiseFrameBorderTemplateContext[];
	public schematicOtherwiseFrameBorderTemplate(i: number): SchematicOtherwiseFrameBorderTemplateContext;
	public schematicOtherwiseFrameBorderTemplate(i?: number): SchematicOtherwiseFrameBorderTemplateContext | SchematicOtherwiseFrameBorderTemplateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOtherwiseFrameBorderTemplateContext);
		} else {
			return this.getRuleContext(i, SchematicOtherwiseFrameBorderTemplateContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_library; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLibrary) {
			listener.enterLibrary(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLibrary) {
			listener.exitLibrary(this);
		}
	}
}


export class LibraryHeaderContext extends ParserRuleContext {
	public edifLevel(): EdifLevelContext {
		return this.getRuleContext(0, EdifLevelContext);
	}
	public nameCaseSensitivity(): NameCaseSensitivityContext {
		return this.getRuleContext(0, NameCaseSensitivityContext);
	}
	public technology(): TechnologyContext {
		return this.getRuleContext(0, TechnologyContext);
	}
	public backgroundColor(): BackgroundColorContext[];
	public backgroundColor(i: number): BackgroundColorContext;
	public backgroundColor(i?: number): BackgroundColorContext | BackgroundColorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BackgroundColorContext);
		} else {
			return this.getRuleContext(i, BackgroundColorContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_libraryHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLibraryHeader) {
			listener.enterLibraryHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLibraryHeader) {
			listener.exitLibraryHeader(this);
		}
	}
}


export class LibraryNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_libraryNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLibraryNameCaseSensitive) {
			listener.enterLibraryNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLibraryNameCaseSensitive) {
			listener.exitLibraryNameCaseSensitive(this);
		}
	}
}


export class LibraryNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_libraryNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLibraryNameDef) {
			listener.enterLibraryNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLibraryNameDef) {
			listener.exitLibraryNameDef(this);
		}
	}
}


export class LibraryNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_libraryNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLibraryNameRef) {
			listener.enterLibraryNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLibraryNameRef) {
			listener.exitLibraryNameRef(this);
		}
	}
}


export class LibraryObjectNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_libraryObjectNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLibraryObjectNameCaseSensitive) {
			listener.enterLibraryObjectNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLibraryObjectNameCaseSensitive) {
			listener.exitLibraryObjectNameCaseSensitive(this);
		}
	}
}


export class LibraryObjectNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_libraryObjectNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLibraryObjectNameDef) {
			listener.enterLibraryObjectNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLibraryObjectNameDef) {
			listener.exitLibraryObjectNameDef(this);
		}
	}
}


export class LibraryObjectNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_libraryObjectNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLibraryObjectNameRef) {
			listener.enterLibraryObjectNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLibraryObjectNameRef) {
			listener.exitLibraryObjectNameRef(this);
		}
	}
}


export class LibraryRefContext extends ParserRuleContext {
	public libraryNameRef(): LibraryNameRefContext {
		return this.getRuleContext(0, LibraryNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_libraryRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLibraryRef) {
			listener.enterLibraryRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLibraryRef) {
			listener.exitLibraryRef(this);
		}
	}
}


export class LoadDelayContext extends ParserRuleContext {
	public acLoadFactorTime(): AcLoadFactorTimeContext {
		return this.getRuleContext(0, AcLoadFactorTimeContext);
	}
	public acLoadFactorCapacitance(): AcLoadFactorCapacitanceContext {
		return this.getRuleContext(0, AcLoadFactorCapacitanceContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_loadDelay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLoadDelay) {
			listener.enterLoadDelay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLoadDelay) {
			listener.exitLoadDelay(this);
		}
	}
}


export class LocalPortGroupContext extends ParserRuleContext {
	public localPortGroupNameDef(): LocalPortGroupNameDefContext {
		return this.getRuleContext(0, LocalPortGroupNameDefContext);
	}
	public portList(): PortListContext {
		return this.getRuleContext(0, PortListContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_localPortGroup; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLocalPortGroup) {
			listener.enterLocalPortGroup(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLocalPortGroup) {
			listener.exitLocalPortGroup(this);
		}
	}
}


export class LocalPortGroupNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_localPortGroupNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLocalPortGroupNameCaseSensitive) {
			listener.enterLocalPortGroupNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLocalPortGroupNameCaseSensitive) {
			listener.exitLocalPortGroupNameCaseSensitive(this);
		}
	}
}


export class LocalPortGroupNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_localPortGroupNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLocalPortGroupNameDef) {
			listener.enterLocalPortGroupNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLocalPortGroupNameDef) {
			listener.exitLocalPortGroupNameDef(this);
		}
	}
}


export class LocalPortGroupNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_localPortGroupNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLocalPortGroupNameRef) {
			listener.enterLocalPortGroupNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLocalPortGroupNameRef) {
			listener.exitLocalPortGroupNameRef(this);
		}
	}
}


export class LocalPortGroupRefContext extends ParserRuleContext {
	public localPortGroupNameRef(): LocalPortGroupNameRefContext {
		return this.getRuleContext(0, LocalPortGroupNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_localPortGroupRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLocalPortGroupRef) {
			listener.enterLocalPortGroupRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLocalPortGroupRef) {
			listener.exitLocalPortGroupRef(this);
		}
	}
}


export class LogicalConnectivityContext extends ParserRuleContext {
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public forFrame(): ForFrameContext[];
	public forFrame(i: number): ForFrameContext;
	public forFrame(i?: number): ForFrameContext | ForFrameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ForFrameContext);
		} else {
			return this.getRuleContext(i, ForFrameContext);
		}
	}
	public ifFrame(): IfFrameContext[];
	public ifFrame(i: number): IfFrameContext;
	public ifFrame(i?: number): IfFrameContext | IfFrameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IfFrameContext);
		} else {
			return this.getRuleContext(i, IfFrameContext);
		}
	}
	public instance(): InstanceContext[];
	public instance(i: number): InstanceContext;
	public instance(i?: number): InstanceContext | InstanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceContext);
		} else {
			return this.getRuleContext(i, InstanceContext);
		}
	}
	public otherwiseFrame(): OtherwiseFrameContext[];
	public otherwiseFrame(i: number): OtherwiseFrameContext;
	public otherwiseFrame(i?: number): OtherwiseFrameContext | OtherwiseFrameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OtherwiseFrameContext);
		} else {
			return this.getRuleContext(i, OtherwiseFrameContext);
		}
	}
	public signal(): SignalContext[];
	public signal(i: number): SignalContext;
	public signal(i?: number): SignalContext | SignalContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalContext);
		} else {
			return this.getRuleContext(i, SignalContext);
		}
	}
	public signalGroup(): SignalGroupContext[];
	public signalGroup(i: number): SignalGroupContext;
	public signalGroup(i?: number): SignalGroupContext | SignalGroupContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalGroupContext);
		} else {
			return this.getRuleContext(i, SignalGroupContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicalConnectivity; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicalConnectivity) {
			listener.enterLogicalConnectivity(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicalConnectivity) {
			listener.exitLogicalConnectivity(this);
		}
	}
}


export class LogicDefinitionsContext extends ParserRuleContext {
	public setVoltage(): SetVoltageContext {
		return this.getRuleContext(0, SetVoltageContext);
	}
	public setCurrent(): SetCurrentContext {
		return this.getRuleContext(0, SetCurrentContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public logicValue(): LogicValueContext[];
	public logicValue(i: number): LogicValueContext;
	public logicValue(i?: number): LogicValueContext | LogicValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicValueContext);
		} else {
			return this.getRuleContext(i, LogicValueContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicDefinitions; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicDefinitions) {
			listener.enterLogicDefinitions(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicDefinitions) {
			listener.exitLogicDefinitions(this);
		}
	}
}


export class LogicListContext extends ParserRuleContext {
	public ignore(): IgnoreContext[];
	public ignore(i: number): IgnoreContext;
	public ignore(i?: number): IgnoreContext | IgnoreContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IgnoreContext);
		} else {
			return this.getRuleContext(i, IgnoreContext);
		}
	}
	public logicNameRef(): LogicNameRefContext[];
	public logicNameRef(i: number): LogicNameRefContext;
	public logicNameRef(i?: number): LogicNameRefContext | LogicNameRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicNameRefContext);
		} else {
			return this.getRuleContext(i, LogicNameRefContext);
		}
	}
	public logicOneOf(): LogicOneOfContext[];
	public logicOneOf(i: number): LogicOneOfContext;
	public logicOneOf(i?: number): LogicOneOfContext | LogicOneOfContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicOneOfContext);
		} else {
			return this.getRuleContext(i, LogicOneOfContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicList; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicList) {
			listener.enterLogicList(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicList) {
			listener.exitLogicList(this);
		}
	}
}


export class LogicMapInputContext extends ParserRuleContext {
	public logicRef(): LogicRefContext[];
	public logicRef(i: number): LogicRefContext;
	public logicRef(i?: number): LogicRefContext | LogicRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicRefContext);
		} else {
			return this.getRuleContext(i, LogicRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicMapInput; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicMapInput) {
			listener.enterLogicMapInput(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicMapInput) {
			listener.exitLogicMapInput(this);
		}
	}
}


export class LogicMapOutputContext extends ParserRuleContext {
	public logicRef(): LogicRefContext[];
	public logicRef(i: number): LogicRefContext;
	public logicRef(i?: number): LogicRefContext | LogicRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicRefContext);
		} else {
			return this.getRuleContext(i, LogicRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicMapOutput; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicMapOutput) {
			listener.enterLogicMapOutput(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicMapOutput) {
			listener.exitLogicMapOutput(this);
		}
	}
}


export class LogicModelUnitsContext extends ParserRuleContext {
	public setCapacitance(): SetCapacitanceContext[];
	public setCapacitance(i: number): SetCapacitanceContext;
	public setCapacitance(i?: number): SetCapacitanceContext | SetCapacitanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetCapacitanceContext);
		} else {
			return this.getRuleContext(i, SetCapacitanceContext);
		}
	}
	public setTime(): SetTimeContext[];
	public setTime(i: number): SetTimeContext;
	public setTime(i?: number): SetTimeContext | SetTimeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetTimeContext);
		} else {
			return this.getRuleContext(i, SetTimeContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicModelUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicModelUnits) {
			listener.enterLogicModelUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicModelUnits) {
			listener.exitLogicModelUnits(this);
		}
	}
}


export class LogicModelViewContext extends ParserRuleContext {
	public viewNameDef(): ViewNameDefContext {
		return this.getRuleContext(0, ViewNameDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicModelView; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicModelView) {
			listener.enterLogicModelView(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicModelView) {
			listener.exitLogicModelView(this);
		}
	}
}


export class LogicNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicNameDef) {
			listener.enterLogicNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicNameDef) {
			listener.exitLogicNameDef(this);
		}
	}
}


export class LogicNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicNameRef) {
			listener.enterLogicNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicNameRef) {
			listener.exitLogicNameRef(this);
		}
	}
}


export class LogicOneOfContext extends ParserRuleContext {
	public logicList(): LogicListContext[];
	public logicList(i: number): LogicListContext;
	public logicList(i?: number): LogicListContext | LogicListContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicListContext);
		} else {
			return this.getRuleContext(i, LogicListContext);
		}
	}
	public logicNameRef(): LogicNameRefContext[];
	public logicNameRef(i: number): LogicNameRefContext;
	public logicNameRef(i?: number): LogicNameRefContext | LogicNameRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicNameRefContext);
		} else {
			return this.getRuleContext(i, LogicNameRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicOneOf; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicOneOf) {
			listener.enterLogicOneOf(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicOneOf) {
			listener.exitLogicOneOf(this);
		}
	}
}


export class LogicRefContext extends ParserRuleContext {
	public logicNameRef(): LogicNameRefContext {
		return this.getRuleContext(0, LogicNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicRef) {
			listener.enterLogicRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicRef) {
			listener.exitLogicRef(this);
		}
	}
}


export class LogicValueContext extends ParserRuleContext {
	public logicNameDef(): LogicNameDefContext {
		return this.getRuleContext(0, LogicNameDefContext);
	}
	public booleanMap(): BooleanMapContext[];
	public booleanMap(i: number): BooleanMapContext;
	public booleanMap(i?: number): BooleanMapContext | BooleanMapContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BooleanMapContext);
		} else {
			return this.getRuleContext(i, BooleanMapContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public compound(): CompoundContext[];
	public compound(i: number): CompoundContext;
	public compound(i?: number): CompoundContext | CompoundContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CompoundContext);
		} else {
			return this.getRuleContext(i, CompoundContext);
		}
	}
	public currentMap(): CurrentMapContext[];
	public currentMap(i: number): CurrentMapContext;
	public currentMap(i?: number): CurrentMapContext | CurrentMapContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CurrentMapContext);
		} else {
			return this.getRuleContext(i, CurrentMapContext);
		}
	}
	public dominates(): DominatesContext[];
	public dominates(i: number): DominatesContext;
	public dominates(i?: number): DominatesContext | DominatesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DominatesContext);
		} else {
			return this.getRuleContext(i, DominatesContext);
		}
	}
	public isolated(): IsolatedContext[];
	public isolated(i: number): IsolatedContext;
	public isolated(i?: number): IsolatedContext | IsolatedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IsolatedContext);
		} else {
			return this.getRuleContext(i, IsolatedContext);
		}
	}
	public logicMapInput(): LogicMapInputContext[];
	public logicMapInput(i: number): LogicMapInputContext;
	public logicMapInput(i?: number): LogicMapInputContext | LogicMapInputContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicMapInputContext);
		} else {
			return this.getRuleContext(i, LogicMapInputContext);
		}
	}
	public logicMapOutput(): LogicMapOutputContext[];
	public logicMapOutput(i: number): LogicMapOutputContext;
	public logicMapOutput(i?: number): LogicMapOutputContext | LogicMapOutputContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicMapOutputContext);
		} else {
			return this.getRuleContext(i, LogicMapOutputContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public resolves(): ResolvesContext[];
	public resolves(i: number): ResolvesContext;
	public resolves(i?: number): ResolvesContext | ResolvesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ResolvesContext);
		} else {
			return this.getRuleContext(i, ResolvesContext);
		}
	}
	public strong(): StrongContext[];
	public strong(i: number): StrongContext;
	public strong(i?: number): StrongContext | StrongContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StrongContext);
		} else {
			return this.getRuleContext(i, StrongContext);
		}
	}
	public voltageMap(): VoltageMapContext[];
	public voltageMap(i: number): VoltageMapContext;
	public voltageMap(i?: number): VoltageMapContext | VoltageMapContext[] {
		if (i === undefined) {
			return this.getRuleContexts(VoltageMapContext);
		} else {
			return this.getRuleContext(i, VoltageMapContext);
		}
	}
	public weak(): WeakContext[];
	public weak(i: number): WeakContext;
	public weak(i?: number): WeakContext | WeakContext[] {
		if (i === undefined) {
			return this.getRuleContexts(WeakContext);
		} else {
			return this.getRuleContext(i, WeakContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_logicValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLogicValue) {
			listener.enterLogicValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLogicValue) {
			listener.exitLogicValue(this);
		}
	}
}


export class LsbToMsbContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_lsbToMsb; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterLsbToMsb) {
			listener.enterLsbToMsb(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitLsbToMsb) {
			listener.exitLsbToMsb(this);
		}
	}
}


export class MantissaContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_mantissa; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMantissa) {
			listener.enterMantissa(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMantissa) {
			listener.exitMantissa(this);
		}
	}
}


export class MarkContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_mark; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMark) {
			listener.enterMark(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMark) {
			listener.exitMark(this);
		}
	}
}


export class MaskLayoutUnitsContext extends ParserRuleContext {
	public setAngle(): SetAngleContext[];
	public setAngle(i: number): SetAngleContext;
	public setAngle(i?: number): SetAngleContext | SetAngleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetAngleContext);
		} else {
			return this.getRuleContext(i, SetAngleContext);
		}
	}
	public setCapacitance(): SetCapacitanceContext[];
	public setCapacitance(i: number): SetCapacitanceContext;
	public setCapacitance(i?: number): SetCapacitanceContext | SetCapacitanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetCapacitanceContext);
		} else {
			return this.getRuleContext(i, SetCapacitanceContext);
		}
	}
	public setDistance(): SetDistanceContext[];
	public setDistance(i: number): SetDistanceContext;
	public setDistance(i?: number): SetDistanceContext | SetDistanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetDistanceContext);
		} else {
			return this.getRuleContext(i, SetDistanceContext);
		}
	}
	public setTime(): SetTimeContext[];
	public setTime(i: number): SetTimeContext;
	public setTime(i?: number): SetTimeContext | SetTimeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetTimeContext);
		} else {
			return this.getRuleContext(i, SetTimeContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_maskLayoutUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMaskLayoutUnits) {
			listener.enterMaskLayoutUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMaskLayoutUnits) {
			listener.exitMaskLayoutUnits(this);
		}
	}
}


export class MaskLayoutViewContext extends ParserRuleContext {
	public viewNameDef(): ViewNameDefContext {
		return this.getRuleContext(0, ViewNameDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_maskLayoutView; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMaskLayoutView) {
			listener.enterMaskLayoutView(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMaskLayoutView) {
			listener.exitMaskLayoutView(this);
		}
	}
}


export class MeasuredContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_measured; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMeasured) {
			listener.enterMeasured(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMeasured) {
			listener.exitMeasured(this);
		}
	}
}


export class MeterContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_meter; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMeter) {
			listener.enterMeter(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMeter) {
			listener.exitMeter(this);
		}
	}
}


export class MiddleJustifyContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_middleJustify; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMiddleJustify) {
			listener.enterMiddleJustify(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMiddleJustify) {
			listener.exitMiddleJustify(this);
		}
	}
}


export class MinimalWidthContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_minimalWidth; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMinimalWidth) {
			listener.enterMinimalWidth(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMinimalWidth) {
			listener.exitMinimalWidth(this);
		}
	}
}


export class MinimumStringLengthContext extends ParserRuleContext {
	public substringLength(): SubstringLengthContext {
		return this.getRuleContext(0, SubstringLengthContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_minimumStringLength; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMinimumStringLength) {
			listener.enterMinimumStringLength(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMinimumStringLength) {
			listener.exitMinimumStringLength(this);
		}
	}
}


export class MiNoMaxContext extends ParserRuleContext {
	public miNoMaxValue(): MiNoMaxValueContext {
		return this.getRuleContext(0, MiNoMaxValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_miNoMax; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMiNoMax) {
			listener.enterMiNoMax(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMiNoMax) {
			listener.exitMiNoMax(this);
		}
	}
}


export class MiNoMaxValueContext extends ParserRuleContext {
	public numberValue(): NumberValueContext | undefined {
		return this.tryGetRuleContext(0, NumberValueContext);
	}
	public mnm(): MnmContext | undefined {
		return this.tryGetRuleContext(0, MnmContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_miNoMaxValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMiNoMaxValue) {
			listener.enterMiNoMaxValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMiNoMaxValue) {
			listener.exitMiNoMaxValue(this);
		}
	}
}


export class MinuendContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_minuend; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMinuend) {
			listener.enterMinuend(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMinuend) {
			listener.exitMinuend(this);
		}
	}
}


export class MinuteNumberContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_minuteNumber; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMinuteNumber) {
			listener.enterMinuteNumber(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMinuteNumber) {
			listener.exitMinuteNumber(this);
		}
	}
}


export class MixedDirectionContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_mixedDirection; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMixedDirection) {
			listener.enterMixedDirection(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMixedDirection) {
			listener.exitMixedDirection(this);
		}
	}
}


export class MnmContext extends ParserRuleContext {
	public numberValue(): NumberValueContext[];
	public numberValue(i: number): NumberValueContext;
	public numberValue(i?: number): NumberValueContext | NumberValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NumberValueContext);
		} else {
			return this.getRuleContext(i, NumberValueContext);
		}
	}
	public undefined(): UndefinedContext[];
	public undefined(i: number): UndefinedContext;
	public undefined(i?: number): UndefinedContext | UndefinedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UndefinedContext);
		} else {
			return this.getRuleContext(i, UndefinedContext);
		}
	}
	public unconstrained(): UnconstrainedContext[];
	public unconstrained(i: number): UnconstrainedContext;
	public unconstrained(i?: number): UnconstrainedContext | UnconstrainedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UnconstrainedContext);
		} else {
			return this.getRuleContext(i, UnconstrainedContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_mnm; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMnm) {
			listener.enterMnm(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMnm) {
			listener.exitMnm(this);
		}
	}
}


export class MoleContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_mole; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMole) {
			listener.enterMole(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMole) {
			listener.exitMole(this);
		}
	}
}


export class MonthNumberContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_monthNumber; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMonthNumber) {
			listener.enterMonthNumber(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMonthNumber) {
			listener.exitMonthNumber(this);
		}
	}
}


export class MsbToLsbContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_msbToLsb; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMsbToLsb) {
			listener.enterMsbToLsb(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMsbToLsb) {
			listener.exitMsbToLsb(this);
		}
	}
}


export class MustJoinContext extends ParserRuleContext {
	public interfaceJoined(): InterfaceJoinedContext[];
	public interfaceJoined(i: number): InterfaceJoinedContext;
	public interfaceJoined(i?: number): InterfaceJoinedContext | InterfaceJoinedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterfaceJoinedContext);
		} else {
			return this.getRuleContext(i, InterfaceJoinedContext);
		}
	}
	public portRef(): PortRefContext[];
	public portRef(i: number): PortRefContext;
	public portRef(i?: number): PortRefContext | PortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortRefContext);
		} else {
			return this.getRuleContext(i, PortRefContext);
		}
	}
	public weakJoined(): WeakJoinedContext[];
	public weakJoined(i: number): WeakJoinedContext;
	public weakJoined(i?: number): WeakJoinedContext | WeakJoinedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(WeakJoinedContext);
		} else {
			return this.getRuleContext(i, WeakJoinedContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_mustJoin; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterMustJoin) {
			listener.enterMustJoin(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitMustJoin) {
			listener.exitMustJoin(this);
		}
	}
}


export class NameAliasContext extends ParserRuleContext {
	public originalName(): OriginalNameContext {
		return this.getRuleContext(0, OriginalNameContext);
	}
	public displayName(): DisplayNameContext[];
	public displayName(i: number): DisplayNameContext;
	public displayName(i?: number): DisplayNameContext | DisplayNameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameContext);
		} else {
			return this.getRuleContext(i, DisplayNameContext);
		}
	}
	public generated(): GeneratedContext[];
	public generated(i: number): GeneratedContext;
	public generated(i?: number): GeneratedContext | GeneratedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GeneratedContext);
		} else {
			return this.getRuleContext(i, GeneratedContext);
		}
	}
	public nameStructure(): NameStructureContext[];
	public nameStructure(i: number): NameStructureContext;
	public nameStructure(i?: number): NameStructureContext | NameStructureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameStructureContext);
		} else {
			return this.getRuleContext(i, NameStructureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_nameAlias; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNameAlias) {
			listener.enterNameAlias(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNameAlias) {
			listener.exitNameAlias(this);
		}
	}
}


export class NameCaseSensitivityContext extends ParserRuleContext {
	public clusterConfigurationNameCaseSensitive(): ClusterConfigurationNameCaseSensitiveContext[];
	public clusterConfigurationNameCaseSensitive(i: number): ClusterConfigurationNameCaseSensitiveContext;
	public clusterConfigurationNameCaseSensitive(i?: number): ClusterConfigurationNameCaseSensitiveContext | ClusterConfigurationNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterConfigurationNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, ClusterConfigurationNameCaseSensitiveContext);
		}
	}
	public clusterNameCaseSensitive(): ClusterNameCaseSensitiveContext[];
	public clusterNameCaseSensitive(i: number): ClusterNameCaseSensitiveContext;
	public clusterNameCaseSensitive(i?: number): ClusterNameCaseSensitiveContext | ClusterNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, ClusterNameCaseSensitiveContext);
		}
	}
	public designHierarchyNameCaseSensitive(): DesignHierarchyNameCaseSensitiveContext[];
	public designHierarchyNameCaseSensitive(i: number): DesignHierarchyNameCaseSensitiveContext;
	public designHierarchyNameCaseSensitive(i?: number): DesignHierarchyNameCaseSensitiveContext | DesignHierarchyNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignHierarchyNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, DesignHierarchyNameCaseSensitiveContext);
		}
	}
	public designNameCaseSensitive(): DesignNameCaseSensitiveContext[];
	public designNameCaseSensitive(i: number): DesignNameCaseSensitiveContext;
	public designNameCaseSensitive(i?: number): DesignNameCaseSensitiveContext | DesignNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, DesignNameCaseSensitiveContext);
		}
	}
	public documentationNameCaseSensitive(): DocumentationNameCaseSensitiveContext[];
	public documentationNameCaseSensitive(i: number): DocumentationNameCaseSensitiveContext;
	public documentationNameCaseSensitive(i?: number): DocumentationNameCaseSensitiveContext | DocumentationNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, DocumentationNameCaseSensitiveContext);
		}
	}
	public figureGroupNameCaseSensitive(): FigureGroupNameCaseSensitiveContext[];
	public figureGroupNameCaseSensitive(i: number): FigureGroupNameCaseSensitiveContext;
	public figureGroupNameCaseSensitive(i?: number): FigureGroupNameCaseSensitiveContext | FigureGroupNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureGroupNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, FigureGroupNameCaseSensitiveContext);
		}
	}
	public forFrameIndexNameCaseSensitive(): ForFrameIndexNameCaseSensitiveContext[];
	public forFrameIndexNameCaseSensitive(i: number): ForFrameIndexNameCaseSensitiveContext;
	public forFrameIndexNameCaseSensitive(i?: number): ForFrameIndexNameCaseSensitiveContext | ForFrameIndexNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ForFrameIndexNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, ForFrameIndexNameCaseSensitiveContext);
		}
	}
	public frameNameCaseSensitive(): FrameNameCaseSensitiveContext[];
	public frameNameCaseSensitive(i: number): FrameNameCaseSensitiveContext;
	public frameNameCaseSensitive(i?: number): FrameNameCaseSensitiveContext | FrameNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FrameNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, FrameNameCaseSensitiveContext);
		}
	}
	public globalPortNameCaseSensitive(): GlobalPortNameCaseSensitiveContext[];
	public globalPortNameCaseSensitive(i: number): GlobalPortNameCaseSensitiveContext;
	public globalPortNameCaseSensitive(i?: number): GlobalPortNameCaseSensitiveContext | GlobalPortNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, GlobalPortNameCaseSensitiveContext);
		}
	}
	public hotspotNameCaseSensitive(): HotspotNameCaseSensitiveContext[];
	public hotspotNameCaseSensitive(i: number): HotspotNameCaseSensitiveContext;
	public hotspotNameCaseSensitive(i?: number): HotspotNameCaseSensitiveContext | HotspotNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(HotspotNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, HotspotNameCaseSensitiveContext);
		}
	}
	public implementationNameCaseSensitive(): ImplementationNameCaseSensitiveContext[];
	public implementationNameCaseSensitive(i: number): ImplementationNameCaseSensitiveContext;
	public implementationNameCaseSensitive(i?: number): ImplementationNameCaseSensitiveContext | ImplementationNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, ImplementationNameCaseSensitiveContext);
		}
	}
	public instanceNameCaseSensitive(): InstanceNameCaseSensitiveContext[];
	public instanceNameCaseSensitive(i: number): InstanceNameCaseSensitiveContext;
	public instanceNameCaseSensitive(i?: number): InstanceNameCaseSensitiveContext | InstanceNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, InstanceNameCaseSensitiveContext);
		}
	}
	public interconnectNameCaseSensitive(): InterconnectNameCaseSensitiveContext[];
	public interconnectNameCaseSensitive(i: number): InterconnectNameCaseSensitiveContext;
	public interconnectNameCaseSensitive(i?: number): InterconnectNameCaseSensitiveContext | InterconnectNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, InterconnectNameCaseSensitiveContext);
		}
	}
	public libraryNameCaseSensitive(): LibraryNameCaseSensitiveContext[];
	public libraryNameCaseSensitive(i: number): LibraryNameCaseSensitiveContext;
	public libraryNameCaseSensitive(i?: number): LibraryNameCaseSensitiveContext | LibraryNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LibraryNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, LibraryNameCaseSensitiveContext);
		}
	}
	public libraryObjectNameCaseSensitive(): LibraryObjectNameCaseSensitiveContext[];
	public libraryObjectNameCaseSensitive(i: number): LibraryObjectNameCaseSensitiveContext;
	public libraryObjectNameCaseSensitive(i?: number): LibraryObjectNameCaseSensitiveContext | LibraryObjectNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LibraryObjectNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, LibraryObjectNameCaseSensitiveContext);
		}
	}
	public localPortGroupNameCaseSensitive(): LocalPortGroupNameCaseSensitiveContext[];
	public localPortGroupNameCaseSensitive(i: number): LocalPortGroupNameCaseSensitiveContext;
	public localPortGroupNameCaseSensitive(i?: number): LocalPortGroupNameCaseSensitiveContext | LocalPortGroupNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LocalPortGroupNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, LocalPortGroupNameCaseSensitiveContext);
		}
	}
	public pageNameCaseSensitive(): PageNameCaseSensitiveContext[];
	public pageNameCaseSensitive(i: number): PageNameCaseSensitiveContext;
	public pageNameCaseSensitive(i?: number): PageNameCaseSensitiveContext | PageNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, PageNameCaseSensitiveContext);
		}
	}
	public parameterNameCaseSensitive(): ParameterNameCaseSensitiveContext[];
	public parameterNameCaseSensitive(i: number): ParameterNameCaseSensitiveContext;
	public parameterNameCaseSensitive(i?: number): ParameterNameCaseSensitiveContext | ParameterNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ParameterNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, ParameterNameCaseSensitiveContext);
		}
	}
	public portNameCaseSensitive(): PortNameCaseSensitiveContext[];
	public portNameCaseSensitive(i: number): PortNameCaseSensitiveContext;
	public portNameCaseSensitive(i?: number): PortNameCaseSensitiveContext | PortNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, PortNameCaseSensitiveContext);
		}
	}
	public propertyNameCaseSensitive(): PropertyNameCaseSensitiveContext[];
	public propertyNameCaseSensitive(i: number): PropertyNameCaseSensitiveContext;
	public propertyNameCaseSensitive(i?: number): PropertyNameCaseSensitiveContext | PropertyNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, PropertyNameCaseSensitiveContext);
		}
	}
	public signalGroupNameCaseSensitive(): SignalGroupNameCaseSensitiveContext[];
	public signalGroupNameCaseSensitive(i: number): SignalGroupNameCaseSensitiveContext;
	public signalGroupNameCaseSensitive(i?: number): SignalGroupNameCaseSensitiveContext | SignalGroupNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalGroupNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, SignalGroupNameCaseSensitiveContext);
		}
	}
	public signalNameCaseSensitive(): SignalNameCaseSensitiveContext[];
	public signalNameCaseSensitive(i: number): SignalNameCaseSensitiveContext;
	public signalNameCaseSensitive(i?: number): SignalNameCaseSensitiveContext | SignalNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, SignalNameCaseSensitiveContext);
		}
	}
	public viewGroupNameCaseSensitive(): ViewGroupNameCaseSensitiveContext[];
	public viewGroupNameCaseSensitive(i: number): ViewGroupNameCaseSensitiveContext;
	public viewGroupNameCaseSensitive(i?: number): ViewGroupNameCaseSensitiveContext | ViewGroupNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewGroupNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, ViewGroupNameCaseSensitiveContext);
		}
	}
	public viewNameCaseSensitive(): ViewNameCaseSensitiveContext[];
	public viewNameCaseSensitive(i: number): ViewNameCaseSensitiveContext;
	public viewNameCaseSensitive(i?: number): ViewNameCaseSensitiveContext | ViewNameCaseSensitiveContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewNameCaseSensitiveContext);
		} else {
			return this.getRuleContext(i, ViewNameCaseSensitiveContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_nameCaseSensitivity; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNameCaseSensitivity) {
			listener.enterNameCaseSensitivity(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNameCaseSensitivity) {
			listener.exitNameCaseSensitivity(this);
		}
	}
}


export class NameDefContext extends ParserRuleContext {
	public IDENTIFIER(): TerminalNode { return this.getToken(EDIF300Parser.IDENTIFIER, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_nameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNameDef) {
			listener.enterNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNameDef) {
			listener.exitNameDef(this);
		}
	}
}


export class NameDimensionContext extends ParserRuleContext {
	public nameDimensionStructure(): NameDimensionStructureContext {
		return this.getRuleContext(0, NameDimensionStructureContext);
	}
	public bitOrder(): BitOrderContext | undefined {
		return this.tryGetRuleContext(0, BitOrderContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_nameDimension; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNameDimension) {
			listener.enterNameDimension(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNameDimension) {
			listener.exitNameDimension(this);
		}
	}
}


export class NameDimensionStructureContext extends ParserRuleContext {
	public complementedName(): ComplementedNameContext[];
	public complementedName(i: number): ComplementedNameContext;
	public complementedName(i?: number): ComplementedNameContext | ComplementedNameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ComplementedNameContext);
		} else {
			return this.getRuleContext(i, ComplementedNameContext);
		}
	}
	public complexName(): ComplexNameContext[];
	public complexName(i: number): ComplexNameContext;
	public complexName(i?: number): ComplexNameContext | ComplexNameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ComplexNameContext);
		} else {
			return this.getRuleContext(i, ComplexNameContext);
		}
	}
	public integerValue(): IntegerValueContext[];
	public integerValue(i: number): IntegerValueContext;
	public integerValue(i?: number): IntegerValueContext | IntegerValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerValueContext);
		} else {
			return this.getRuleContext(i, IntegerValueContext);
		}
	}
	public sequence(): SequenceContext[];
	public sequence(i: number): SequenceContext;
	public sequence(i?: number): SequenceContext | SequenceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SequenceContext);
		} else {
			return this.getRuleContext(i, SequenceContext);
		}
	}
	public simpleName(): SimpleNameContext[];
	public simpleName(i: number): SimpleNameContext;
	public simpleName(i?: number): SimpleNameContext | SimpleNameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SimpleNameContext);
		} else {
			return this.getRuleContext(i, SimpleNameContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_nameDimensionStructure; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNameDimensionStructure) {
			listener.enterNameDimensionStructure(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNameDimensionStructure) {
			listener.exitNameDimensionStructure(this);
		}
	}
}


export class NameInformationContext extends ParserRuleContext {
	public primaryName(): PrimaryNameContext {
		return this.getRuleContext(0, PrimaryNameContext);
	}
	public nameAlias(): NameAliasContext[];
	public nameAlias(i: number): NameAliasContext;
	public nameAlias(i?: number): NameAliasContext | NameAliasContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameAliasContext);
		} else {
			return this.getRuleContext(i, NameAliasContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_nameInformation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNameInformation) {
			listener.enterNameInformation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNameInformation) {
			listener.exitNameInformation(this);
		}
	}
}


export class NamePartSeparatorContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_namePartSeparator; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNamePartSeparator) {
			listener.enterNamePartSeparator(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNamePartSeparator) {
			listener.exitNamePartSeparator(this);
		}
	}
}


export class NameRefContext extends ParserRuleContext {
	public IDENTIFIER(): TerminalNode { return this.getToken(EDIF300Parser.IDENTIFIER, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_nameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNameRef) {
			listener.enterNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNameRef) {
			listener.exitNameRef(this);
		}
	}
}


export class NameStructureContext extends ParserRuleContext {
	public simpleName(): SimpleNameContext | undefined {
		return this.tryGetRuleContext(0, SimpleNameContext);
	}
	public complexName(): ComplexNameContext | undefined {
		return this.tryGetRuleContext(0, ComplexNameContext);
	}
	public complementedName(): ComplementedNameContext | undefined {
		return this.tryGetRuleContext(0, ComplementedNameContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_nameStructure; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNameStructure) {
			listener.enterNameStructure(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNameStructure) {
			listener.exitNameStructure(this);
		}
	}
}


export class NarrowPortContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_narrowPort; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNarrowPort) {
			listener.enterNarrowPort(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNarrowPort) {
			listener.exitNarrowPort(this);
		}
	}
}


export class NarrowWireContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_narrowWire; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNarrowWire) {
			listener.enterNarrowWire(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNarrowWire) {
			listener.exitNarrowWire(this);
		}
	}
}


export class NoHotspotGridContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_noHotspotGrid; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNoHotspotGrid) {
			listener.enterNoHotspotGrid(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNoHotspotGrid) {
			listener.exitNoHotspotGrid(this);
		}
	}
}


export class NominalHotspotGridContext extends ParserRuleContext {
	public lengthValue(): LengthValueContext {
		return this.getRuleContext(0, LengthValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_nominalHotspotGrid; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNominalHotspotGrid) {
			listener.enterNominalHotspotGrid(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNominalHotspotGrid) {
			listener.exitNominalHotspotGrid(this);
		}
	}
}


export class NonPermutableContext extends ParserRuleContext {
	public permutable(): PermutableContext[];
	public permutable(i: number): PermutableContext;
	public permutable(i?: number): PermutableContext | PermutableContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PermutableContext);
		} else {
			return this.getRuleContext(i, PermutableContext);
		}
	}
	public portRef(): PortRefContext[];
	public portRef(i: number): PortRefContext;
	public portRef(i?: number): PortRefContext | PortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortRefContext);
		} else {
			return this.getRuleContext(i, PortRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_nonPermutable; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNonPermutable) {
			listener.enterNonPermutable(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNonPermutable) {
			listener.exitNonPermutable(this);
		}
	}
}


export class Not_Context extends ParserRuleContext {
	public booleanExpression(): BooleanExpressionContext {
		return this.getRuleContext(0, BooleanExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_not_; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNot_) {
			listener.enterNot_(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNot_) {
			listener.exitNot_(this);
		}
	}
}


export class NotInheritedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_notInherited; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNotInherited) {
			listener.enterNotInherited(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNotInherited) {
			listener.exitNotInherited(this);
		}
	}
}


export class NumberContext extends ParserRuleContext {
	public numberExpression(): NumberExpressionContext {
		return this.getRuleContext(0, NumberExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_number; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNumber) {
			listener.enterNumber(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNumber) {
			listener.exitNumber(this);
		}
	}
}


export class NumberExpressionContext extends ParserRuleContext {
	public numberValue(): NumberValueContext | undefined {
		return this.tryGetRuleContext(0, NumberValueContext);
	}
	public numberParameterRef(): NumberParameterRefContext | undefined {
		return this.tryGetRuleContext(0, NumberParameterRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_numberExpression; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNumberExpression) {
			listener.enterNumberExpression(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNumberExpression) {
			listener.exitNumberExpression(this);
		}
	}
}


export class NumberOfBasicUnitsContext extends ParserRuleContext {
	public scaledInteger(): ScaledIntegerContext {
		return this.getRuleContext(0, ScaledIntegerContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_numberOfBasicUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNumberOfBasicUnits) {
			listener.enterNumberOfBasicUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNumberOfBasicUnits) {
			listener.exitNumberOfBasicUnits(this);
		}
	}
}


export class NumberOfNewUnitsContext extends ParserRuleContext {
	public scaledInteger(): ScaledIntegerContext {
		return this.getRuleContext(0, ScaledIntegerContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_numberOfNewUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNumberOfNewUnits) {
			listener.enterNumberOfNewUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNumberOfNewUnits) {
			listener.exitNumberOfNewUnits(this);
		}
	}
}


export class NumberParameterContext extends ParserRuleContext {
	public parameterNameDef(): ParameterNameDefContext {
		return this.getRuleContext(0, ParameterNameDefContext);
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public number(): NumberContext[];
	public number(i: number): NumberContext;
	public number(i?: number): NumberContext | NumberContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NumberContext);
		} else {
			return this.getRuleContext(i, NumberContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_numberParameter; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNumberParameter) {
			listener.enterNumberParameter(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNumberParameter) {
			listener.exitNumberParameter(this);
		}
	}
}


export class NumberParameterAssignContext extends ParserRuleContext {
	public parameterNameRef(): ParameterNameRefContext {
		return this.getRuleContext(0, ParameterNameRefContext);
	}
	public numberExpression(): NumberExpressionContext {
		return this.getRuleContext(0, NumberExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_numberParameterAssign; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNumberParameterAssign) {
			listener.enterNumberParameterAssign(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNumberParameterAssign) {
			listener.exitNumberParameterAssign(this);
		}
	}
}


export class NumberParameterRefContext extends ParserRuleContext {
	public parameterNameRef(): ParameterNameRefContext {
		return this.getRuleContext(0, ParameterNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_numberParameterRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNumberParameterRef) {
			listener.enterNumberParameterRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNumberParameterRef) {
			listener.exitNumberParameterRef(this);
		}
	}
}


export class NumberPointContext extends ParserRuleContext {
	public xNumberValue(): XNumberValueContext {
		return this.getRuleContext(0, XNumberValueContext);
	}
	public yNumberValue(): YNumberValueContext {
		return this.getRuleContext(0, YNumberValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_numberPoint; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNumberPoint) {
			listener.enterNumberPoint(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNumberPoint) {
			listener.exitNumberPoint(this);
		}
	}
}


export class NumberValueContext extends ParserRuleContext {
	public scaledInteger(): ScaledIntegerContext {
		return this.getRuleContext(0, ScaledIntegerContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_numberValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNumberValue) {
			listener.enterNumberValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNumberValue) {
			listener.exitNumberValue(this);
		}
	}
}


export class NumeratorContext extends ParserRuleContext {
	public integerValue(): IntegerValueContext {
		return this.getRuleContext(0, IntegerValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_numerator; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterNumerator) {
			listener.enterNumerator(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitNumerator) {
			listener.exitNumerator(this);
		}
	}
}


export class OccurrenceAnnotateContext extends ParserRuleContext {
	public extendInstanceDef(): ExtendInstanceDefContext | undefined {
		return this.tryGetRuleContext(0, ExtendInstanceDefContext);
	}
	public extendInstanceMemberDef(): ExtendInstanceMemberDefContext | undefined {
		return this.tryGetRuleContext(0, ExtendInstanceMemberDefContext);
	}
	public cellPropertyOverride(): CellPropertyOverrideContext[];
	public cellPropertyOverride(i: number): CellPropertyOverrideContext;
	public cellPropertyOverride(i?: number): CellPropertyOverrideContext | CellPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, CellPropertyOverrideContext);
		}
	}
	public clusterPropertyOverride(): ClusterPropertyOverrideContext[];
	public clusterPropertyOverride(i: number): ClusterPropertyOverrideContext;
	public clusterPropertyOverride(i?: number): ClusterPropertyOverrideContext | ClusterPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, ClusterPropertyOverrideContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public designator(): DesignatorContext[];
	public designator(i: number): DesignatorContext;
	public designator(i?: number): DesignatorContext | DesignatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorContext);
		} else {
			return this.getRuleContext(i, DesignatorContext);
		}
	}
	public forFrameAnnotate(): ForFrameAnnotateContext[];
	public forFrameAnnotate(i: number): ForFrameAnnotateContext;
	public forFrameAnnotate(i?: number): ForFrameAnnotateContext | ForFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ForFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, ForFrameAnnotateContext);
		}
	}
	public ifFrameAnnotate(): IfFrameAnnotateContext[];
	public ifFrameAnnotate(i: number): IfFrameAnnotateContext;
	public ifFrameAnnotate(i?: number): IfFrameAnnotateContext | IfFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IfFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, IfFrameAnnotateContext);
		}
	}
	public instancePropertyOverride(): InstancePropertyOverrideContext[];
	public instancePropertyOverride(i: number): InstancePropertyOverrideContext;
	public instancePropertyOverride(i?: number): InstancePropertyOverrideContext | InstancePropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstancePropertyOverrideContext);
		} else {
			return this.getRuleContext(i, InstancePropertyOverrideContext);
		}
	}
	public interconnectAnnotate(): InterconnectAnnotateContext[];
	public interconnectAnnotate(i: number): InterconnectAnnotateContext;
	public interconnectAnnotate(i?: number): InterconnectAnnotateContext | InterconnectAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectAnnotateContext);
		} else {
			return this.getRuleContext(i, InterconnectAnnotateContext);
		}
	}
	public leafOccurrenceAnnotate(): LeafOccurrenceAnnotateContext[];
	public leafOccurrenceAnnotate(i: number): LeafOccurrenceAnnotateContext;
	public leafOccurrenceAnnotate(i?: number): LeafOccurrenceAnnotateContext | LeafOccurrenceAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LeafOccurrenceAnnotateContext);
		} else {
			return this.getRuleContext(i, LeafOccurrenceAnnotateContext);
		}
	}
	public occurrenceAnnotate(): OccurrenceAnnotateContext[];
	public occurrenceAnnotate(i: number): OccurrenceAnnotateContext;
	public occurrenceAnnotate(i?: number): OccurrenceAnnotateContext | OccurrenceAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OccurrenceAnnotateContext);
		} else {
			return this.getRuleContext(i, OccurrenceAnnotateContext);
		}
	}
	public otherwiseFrameAnnotate(): OtherwiseFrameAnnotateContext[];
	public otherwiseFrameAnnotate(i: number): OtherwiseFrameAnnotateContext;
	public otherwiseFrameAnnotate(i?: number): OtherwiseFrameAnnotateContext | OtherwiseFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OtherwiseFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, OtherwiseFrameAnnotateContext);
		}
	}
	public pageAnnotate(): PageAnnotateContext[];
	public pageAnnotate(i: number): PageAnnotateContext;
	public pageAnnotate(i?: number): PageAnnotateContext | PageAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageAnnotateContext);
		} else {
			return this.getRuleContext(i, PageAnnotateContext);
		}
	}
	public portAnnotate(): PortAnnotateContext[];
	public portAnnotate(i: number): PortAnnotateContext;
	public portAnnotate(i?: number): PortAnnotateContext | PortAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortAnnotateContext);
		} else {
			return this.getRuleContext(i, PortAnnotateContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public signalAnnotate(): SignalAnnotateContext[];
	public signalAnnotate(i: number): SignalAnnotateContext;
	public signalAnnotate(i?: number): SignalAnnotateContext | SignalAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalAnnotateContext);
		} else {
			return this.getRuleContext(i, SignalAnnotateContext);
		}
	}
	public signalGroupAnnotate(): SignalGroupAnnotateContext[];
	public signalGroupAnnotate(i: number): SignalGroupAnnotateContext;
	public signalGroupAnnotate(i?: number): SignalGroupAnnotateContext | SignalGroupAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalGroupAnnotateContext);
		} else {
			return this.getRuleContext(i, SignalGroupAnnotateContext);
		}
	}
	public timing(): TimingContext[];
	public timing(i: number): TimingContext;
	public timing(i?: number): TimingContext | TimingContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TimingContext);
		} else {
			return this.getRuleContext(i, TimingContext);
		}
	}
	public viewPropertyOverride(): ViewPropertyOverrideContext[];
	public viewPropertyOverride(i: number): ViewPropertyOverrideContext;
	public viewPropertyOverride(i?: number): ViewPropertyOverrideContext | ViewPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, ViewPropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_occurrenceAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOccurrenceAnnotate) {
			listener.enterOccurrenceAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOccurrenceAnnotate) {
			listener.exitOccurrenceAnnotate(this);
		}
	}
}


export class OccurrenceHierarchyAnnotateContext extends ParserRuleContext {
	public cellPropertyOverride(): CellPropertyOverrideContext[];
	public cellPropertyOverride(i: number): CellPropertyOverrideContext;
	public cellPropertyOverride(i?: number): CellPropertyOverrideContext | CellPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, CellPropertyOverrideContext);
		}
	}
	public clusterPropertyOverride(): ClusterPropertyOverrideContext[];
	public clusterPropertyOverride(i: number): ClusterPropertyOverrideContext;
	public clusterPropertyOverride(i?: number): ClusterPropertyOverrideContext | ClusterPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, ClusterPropertyOverrideContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public forFrameAnnotate(): ForFrameAnnotateContext[];
	public forFrameAnnotate(i: number): ForFrameAnnotateContext;
	public forFrameAnnotate(i?: number): ForFrameAnnotateContext | ForFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ForFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, ForFrameAnnotateContext);
		}
	}
	public ifFrameAnnotate(): IfFrameAnnotateContext[];
	public ifFrameAnnotate(i: number): IfFrameAnnotateContext;
	public ifFrameAnnotate(i?: number): IfFrameAnnotateContext | IfFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IfFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, IfFrameAnnotateContext);
		}
	}
	public interconnectAnnotate(): InterconnectAnnotateContext[];
	public interconnectAnnotate(i: number): InterconnectAnnotateContext;
	public interconnectAnnotate(i?: number): InterconnectAnnotateContext | InterconnectAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectAnnotateContext);
		} else {
			return this.getRuleContext(i, InterconnectAnnotateContext);
		}
	}
	public leafOccurrenceAnnotate(): LeafOccurrenceAnnotateContext[];
	public leafOccurrenceAnnotate(i: number): LeafOccurrenceAnnotateContext;
	public leafOccurrenceAnnotate(i?: number): LeafOccurrenceAnnotateContext | LeafOccurrenceAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LeafOccurrenceAnnotateContext);
		} else {
			return this.getRuleContext(i, LeafOccurrenceAnnotateContext);
		}
	}
	public occurrenceAnnotate(): OccurrenceAnnotateContext[];
	public occurrenceAnnotate(i: number): OccurrenceAnnotateContext;
	public occurrenceAnnotate(i?: number): OccurrenceAnnotateContext | OccurrenceAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OccurrenceAnnotateContext);
		} else {
			return this.getRuleContext(i, OccurrenceAnnotateContext);
		}
	}
	public otherwiseFrameAnnotate(): OtherwiseFrameAnnotateContext[];
	public otherwiseFrameAnnotate(i: number): OtherwiseFrameAnnotateContext;
	public otherwiseFrameAnnotate(i?: number): OtherwiseFrameAnnotateContext | OtherwiseFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OtherwiseFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, OtherwiseFrameAnnotateContext);
		}
	}
	public pageAnnotate(): PageAnnotateContext[];
	public pageAnnotate(i: number): PageAnnotateContext;
	public pageAnnotate(i?: number): PageAnnotateContext | PageAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageAnnotateContext);
		} else {
			return this.getRuleContext(i, PageAnnotateContext);
		}
	}
	public portAnnotate(): PortAnnotateContext[];
	public portAnnotate(i: number): PortAnnotateContext;
	public portAnnotate(i?: number): PortAnnotateContext | PortAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortAnnotateContext);
		} else {
			return this.getRuleContext(i, PortAnnotateContext);
		}
	}
	public signalAnnotate(): SignalAnnotateContext[];
	public signalAnnotate(i: number): SignalAnnotateContext;
	public signalAnnotate(i?: number): SignalAnnotateContext | SignalAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalAnnotateContext);
		} else {
			return this.getRuleContext(i, SignalAnnotateContext);
		}
	}
	public signalGroupAnnotate(): SignalGroupAnnotateContext[];
	public signalGroupAnnotate(i: number): SignalGroupAnnotateContext;
	public signalGroupAnnotate(i?: number): SignalGroupAnnotateContext | SignalGroupAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalGroupAnnotateContext);
		} else {
			return this.getRuleContext(i, SignalGroupAnnotateContext);
		}
	}
	public timing(): TimingContext[];
	public timing(i: number): TimingContext;
	public timing(i?: number): TimingContext | TimingContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TimingContext);
		} else {
			return this.getRuleContext(i, TimingContext);
		}
	}
	public viewPropertyOverride(): ViewPropertyOverrideContext[];
	public viewPropertyOverride(i: number): ViewPropertyOverrideContext;
	public viewPropertyOverride(i?: number): ViewPropertyOverrideContext | ViewPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, ViewPropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_occurrenceHierarchyAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOccurrenceHierarchyAnnotate) {
			listener.enterOccurrenceHierarchyAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOccurrenceHierarchyAnnotate) {
			listener.exitOccurrenceHierarchyAnnotate(this);
		}
	}
}


export class OffsetEventContext extends ParserRuleContext {
	public event(): EventContext {
		return this.getRuleContext(0, EventContext);
	}
	public numberValue(): NumberValueContext {
		return this.getRuleContext(0, NumberValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_offsetEvent; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOffsetEvent) {
			listener.enterOffsetEvent(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOffsetEvent) {
			listener.exitOffsetEvent(this);
		}
	}
}


export class OhmContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ohm; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOhm) {
			listener.enterOhm(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOhm) {
			listener.exitOhm(this);
		}
	}
}


export class OpenShapeContext extends ParserRuleContext {
	public curve(): CurveContext {
		return this.getRuleContext(0, CurveContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_openShape; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOpenShape) {
			listener.enterOpenShape(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOpenShape) {
			listener.exitOpenShape(this);
		}
	}
}


export class Or_Context extends ParserRuleContext {
	public booleanExpression(): BooleanExpressionContext[];
	public booleanExpression(i: number): BooleanExpressionContext;
	public booleanExpression(i?: number): BooleanExpressionContext | BooleanExpressionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BooleanExpressionContext);
		} else {
			return this.getRuleContext(i, BooleanExpressionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_or_; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOr_) {
			listener.enterOr_(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOr_) {
			listener.exitOr_(this);
		}
	}
}


export class OriginContext extends ParserRuleContext {
	public pointValue(): PointValueContext {
		return this.getRuleContext(0, PointValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_origin; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOrigin) {
			listener.enterOrigin(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOrigin) {
			listener.exitOrigin(this);
		}
	}
}


export class OriginalBoundingBoxContext extends ParserRuleContext {
	public rectangle(): RectangleContext {
		return this.getRuleContext(0, RectangleContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_originalBoundingBox; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOriginalBoundingBox) {
			listener.enterOriginalBoundingBox(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOriginalBoundingBox) {
			listener.exitOriginalBoundingBox(this);
		}
	}
}


export class OriginalDrawingDateContext extends ParserRuleContext {
	public date(): DateContext {
		return this.getRuleContext(0, DateContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_originalDrawingDate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOriginalDrawingDate) {
			listener.enterOriginalDrawingDate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOriginalDrawingDate) {
			listener.exitOriginalDrawingDate(this);
		}
	}
}


export class OriginalDrawingDateDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_originalDrawingDateDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOriginalDrawingDateDisplay) {
			listener.enterOriginalDrawingDateDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOriginalDrawingDateDisplay) {
			listener.exitOriginalDrawingDateDisplay(this);
		}
	}
}


export class OriginalNameContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_originalName; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOriginalName) {
			listener.enterOriginalName(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOriginalName) {
			listener.exitOriginalName(this);
		}
	}
}


export class OtherwiseFrameContext extends ParserRuleContext {
	public frameNameDef(): FrameNameDefContext {
		return this.getRuleContext(0, FrameNameDefContext);
	}
	public ifFrameSet(): IfFrameSetContext {
		return this.getRuleContext(0, IfFrameSetContext);
	}
	public logicalConnectivity(): LogicalConnectivityContext {
		return this.getRuleContext(0, LogicalConnectivityContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_otherwiseFrame; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOtherwiseFrame) {
			listener.enterOtherwiseFrame(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOtherwiseFrame) {
			listener.exitOtherwiseFrame(this);
		}
	}
}


export class OtherwiseFrameAnnotateContext extends ParserRuleContext {
	public extendFrameDef(): ExtendFrameDefContext {
		return this.getRuleContext(0, ExtendFrameDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public forFrameAnnotate(): ForFrameAnnotateContext[];
	public forFrameAnnotate(i: number): ForFrameAnnotateContext;
	public forFrameAnnotate(i?: number): ForFrameAnnotateContext | ForFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ForFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, ForFrameAnnotateContext);
		}
	}
	public ifFrameAnnotate(): IfFrameAnnotateContext[];
	public ifFrameAnnotate(i: number): IfFrameAnnotateContext;
	public ifFrameAnnotate(i?: number): IfFrameAnnotateContext | IfFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IfFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, IfFrameAnnotateContext);
		}
	}
	public interconnectAnnotate(): InterconnectAnnotateContext[];
	public interconnectAnnotate(i: number): InterconnectAnnotateContext;
	public interconnectAnnotate(i?: number): InterconnectAnnotateContext | InterconnectAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectAnnotateContext);
		} else {
			return this.getRuleContext(i, InterconnectAnnotateContext);
		}
	}
	public leafOccurrenceAnnotate(): LeafOccurrenceAnnotateContext[];
	public leafOccurrenceAnnotate(i: number): LeafOccurrenceAnnotateContext;
	public leafOccurrenceAnnotate(i?: number): LeafOccurrenceAnnotateContext | LeafOccurrenceAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LeafOccurrenceAnnotateContext);
		} else {
			return this.getRuleContext(i, LeafOccurrenceAnnotateContext);
		}
	}
	public occurrenceAnnotate(): OccurrenceAnnotateContext[];
	public occurrenceAnnotate(i: number): OccurrenceAnnotateContext;
	public occurrenceAnnotate(i?: number): OccurrenceAnnotateContext | OccurrenceAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OccurrenceAnnotateContext);
		} else {
			return this.getRuleContext(i, OccurrenceAnnotateContext);
		}
	}
	public otherwiseFrameAnnotate(): OtherwiseFrameAnnotateContext[];
	public otherwiseFrameAnnotate(i: number): OtherwiseFrameAnnotateContext;
	public otherwiseFrameAnnotate(i?: number): OtherwiseFrameAnnotateContext | OtherwiseFrameAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OtherwiseFrameAnnotateContext);
		} else {
			return this.getRuleContext(i, OtherwiseFrameAnnotateContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_otherwiseFrameAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOtherwiseFrameAnnotate) {
			listener.enterOtherwiseFrameAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOtherwiseFrameAnnotate) {
			listener.exitOtherwiseFrameAnnotate(this);
		}
	}
}


export class OtherwiseFrameRefContext extends ParserRuleContext {
	public frameNameRef(): FrameNameRefContext {
		return this.getRuleContext(0, FrameNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_otherwiseFrameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOtherwiseFrameRef) {
			listener.enterOtherwiseFrameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOtherwiseFrameRef) {
			listener.exitOtherwiseFrameRef(this);
		}
	}
}


export class OutputContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_output; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOutput) {
			listener.enterOutput(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOutput) {
			listener.exitOutput(this);
		}
	}
}


export class OutputPortContext extends ParserRuleContext {
	public outputPortAttributes(): OutputPortAttributesContext | undefined {
		return this.tryGetRuleContext(0, OutputPortAttributesContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_outputPort; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOutputPort) {
			listener.enterOutputPort(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOutputPort) {
			listener.exitOutputPort(this);
		}
	}
}


export class OutputPortAttributesContext extends ParserRuleContext {
	public dcFanInLoad(): DcFanInLoadContext[];
	public dcFanInLoad(i: number): DcFanInLoadContext;
	public dcFanInLoad(i?: number): DcFanInLoadContext | DcFanInLoadContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcFanInLoadContext);
		} else {
			return this.getRuleContext(i, DcFanInLoadContext);
		}
	}
	public dcMaxFanOut(): DcMaxFanOutContext[];
	public dcMaxFanOut(i: number): DcMaxFanOutContext;
	public dcMaxFanOut(i?: number): DcMaxFanOutContext | DcMaxFanOutContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcMaxFanOutContext);
		} else {
			return this.getRuleContext(i, DcMaxFanOutContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_outputPortAttributes; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOutputPortAttributes) {
			listener.enterOutputPortAttributes(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOutputPortAttributes) {
			listener.exitOutputPortAttributes(this);
		}
	}
}


export class OwnerContext extends ParserRuleContext {
	public stringValue(): StringValueContext {
		return this.getRuleContext(0, StringValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_owner; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterOwner) {
			listener.enterOwner(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitOwner) {
			listener.exitOwner(this);
		}
	}
}


export class PageContext extends ParserRuleContext {
	public pageNameDef(): PageNameDefContext {
		return this.getRuleContext(0, PageNameDefContext);
	}
	public pageHeader(): PageHeaderContext {
		return this.getRuleContext(0, PageHeaderContext);
	}
	public cellPropertyDisplay(): CellPropertyDisplayContext[];
	public cellPropertyDisplay(i: number): CellPropertyDisplayContext;
	public cellPropertyDisplay(i?: number): CellPropertyDisplayContext | CellPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, CellPropertyDisplayContext);
		}
	}
	public clusterPropertyDisplay(): ClusterPropertyDisplayContext[];
	public clusterPropertyDisplay(i: number): ClusterPropertyDisplayContext;
	public clusterPropertyDisplay(i?: number): ClusterPropertyDisplayContext | ClusterPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, ClusterPropertyDisplayContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public localPortGroup(): LocalPortGroupContext[];
	public localPortGroup(i: number): LocalPortGroupContext;
	public localPortGroup(i?: number): LocalPortGroupContext | LocalPortGroupContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LocalPortGroupContext);
		} else {
			return this.getRuleContext(i, LocalPortGroupContext);
		}
	}
	public pageCommentGraphics(): PageCommentGraphicsContext[];
	public pageCommentGraphics(i: number): PageCommentGraphicsContext;
	public pageCommentGraphics(i?: number): PageCommentGraphicsContext | PageCommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageCommentGraphicsContext);
		} else {
			return this.getRuleContext(i, PageCommentGraphicsContext);
		}
	}
	public pageTitleBlock(): PageTitleBlockContext[];
	public pageTitleBlock(i: number): PageTitleBlockContext;
	public pageTitleBlock(i?: number): PageTitleBlockContext | PageTitleBlockContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageTitleBlockContext);
		} else {
			return this.getRuleContext(i, PageTitleBlockContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicBus(): SchematicBusContext[];
	public schematicBus(i: number): SchematicBusContext;
	public schematicBus(i?: number): SchematicBusContext | SchematicBusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicBusContext);
		} else {
			return this.getRuleContext(i, SchematicBusContext);
		}
	}
	public schematicForFrameImplementation(): SchematicForFrameImplementationContext[];
	public schematicForFrameImplementation(i: number): SchematicForFrameImplementationContext;
	public schematicForFrameImplementation(i?: number): SchematicForFrameImplementationContext | SchematicForFrameImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicForFrameImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicForFrameImplementationContext);
		}
	}
	public schematicGlobalPortImplementation(): SchematicGlobalPortImplementationContext[];
	public schematicGlobalPortImplementation(i: number): SchematicGlobalPortImplementationContext;
	public schematicGlobalPortImplementation(i?: number): SchematicGlobalPortImplementationContext | SchematicGlobalPortImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicGlobalPortImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicGlobalPortImplementationContext);
		}
	}
	public schematicIfFrameImplementation(): SchematicIfFrameImplementationContext[];
	public schematicIfFrameImplementation(i: number): SchematicIfFrameImplementationContext;
	public schematicIfFrameImplementation(i?: number): SchematicIfFrameImplementationContext | SchematicIfFrameImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicIfFrameImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicIfFrameImplementationContext);
		}
	}
	public schematicInstanceImplementation(): SchematicInstanceImplementationContext[];
	public schematicInstanceImplementation(i: number): SchematicInstanceImplementationContext;
	public schematicInstanceImplementation(i?: number): SchematicInstanceImplementationContext | SchematicInstanceImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInstanceImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicInstanceImplementationContext);
		}
	}
	public schematicMasterPortImplementation(): SchematicMasterPortImplementationContext[];
	public schematicMasterPortImplementation(i: number): SchematicMasterPortImplementationContext;
	public schematicMasterPortImplementation(i?: number): SchematicMasterPortImplementationContext | SchematicMasterPortImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicMasterPortImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicMasterPortImplementationContext);
		}
	}
	public schematicNet(): SchematicNetContext[];
	public schematicNet(i: number): SchematicNetContext;
	public schematicNet(i?: number): SchematicNetContext | SchematicNetContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicNetContext);
		} else {
			return this.getRuleContext(i, SchematicNetContext);
		}
	}
	public schematicOffPageConnectorImplementation(): SchematicOffPageConnectorImplementationContext[];
	public schematicOffPageConnectorImplementation(i: number): SchematicOffPageConnectorImplementationContext;
	public schematicOffPageConnectorImplementation(i?: number): SchematicOffPageConnectorImplementationContext | SchematicOffPageConnectorImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOffPageConnectorImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicOffPageConnectorImplementationContext);
		}
	}
	public schematicOnPageConnectorImplementation(): SchematicOnPageConnectorImplementationContext[];
	public schematicOnPageConnectorImplementation(i: number): SchematicOnPageConnectorImplementationContext;
	public schematicOnPageConnectorImplementation(i?: number): SchematicOnPageConnectorImplementationContext | SchematicOnPageConnectorImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOnPageConnectorImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicOnPageConnectorImplementationContext);
		}
	}
	public schematicOtherwiseFrameImplementation(): SchematicOtherwiseFrameImplementationContext[];
	public schematicOtherwiseFrameImplementation(i: number): SchematicOtherwiseFrameImplementationContext;
	public schematicOtherwiseFrameImplementation(i?: number): SchematicOtherwiseFrameImplementationContext | SchematicOtherwiseFrameImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOtherwiseFrameImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicOtherwiseFrameImplementationContext);
		}
	}
	public schematicRipperImplementation(): SchematicRipperImplementationContext[];
	public schematicRipperImplementation(i: number): SchematicRipperImplementationContext;
	public schematicRipperImplementation(i?: number): SchematicRipperImplementationContext | SchematicRipperImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicRipperImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicRipperImplementationContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	public viewPropertyDisplay(): ViewPropertyDisplayContext[];
	public viewPropertyDisplay(i: number): ViewPropertyDisplayContext;
	public viewPropertyDisplay(i?: number): ViewPropertyDisplayContext | ViewPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, ViewPropertyDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_page; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPage) {
			listener.enterPage(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPage) {
			listener.exitPage(this);
		}
	}
}


export class PageAnnotateContext extends ParserRuleContext {
	public extendPageDef(): ExtendPageDefContext {
		return this.getRuleContext(0, ExtendPageDefContext);
	}
	public interconnectAnnotate(): InterconnectAnnotateContext[];
	public interconnectAnnotate(i: number): InterconnectAnnotateContext;
	public interconnectAnnotate(i?: number): InterconnectAnnotateContext | InterconnectAnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectAnnotateContext);
		} else {
			return this.getRuleContext(i, InterconnectAnnotateContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageAnnotate) {
			listener.enterPageAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageAnnotate) {
			listener.exitPageAnnotate(this);
		}
	}
}


export class PageBorderContext extends ParserRuleContext {
	public pageBorderTemplateRef(): PageBorderTemplateRefContext {
		return this.getRuleContext(0, PageBorderTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageBorder; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageBorder) {
			listener.enterPageBorder(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageBorder) {
			listener.exitPageBorder(this);
		}
	}
}


export class PageBorderTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public usableArea(): UsableAreaContext {
		return this.getRuleContext(0, UsableAreaContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageBorderTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageBorderTemplate) {
			listener.enterPageBorderTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageBorderTemplate) {
			listener.exitPageBorderTemplate(this);
		}
	}
}


export class PageBorderTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageBorderTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageBorderTemplateRef) {
			listener.enterPageBorderTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageBorderTemplateRef) {
			listener.exitPageBorderTemplateRef(this);
		}
	}
}


export class PageCommentGraphicsContext extends ParserRuleContext {
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageCommentGraphics; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageCommentGraphics) {
			listener.enterPageCommentGraphics(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageCommentGraphics) {
			listener.exitPageCommentGraphics(this);
		}
	}
}


export class PageHeaderContext extends ParserRuleContext {
	public backgroundColor(): BackgroundColorContext[];
	public backgroundColor(i: number): BackgroundColorContext;
	public backgroundColor(i?: number): BackgroundColorContext | BackgroundColorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BackgroundColorContext);
		} else {
			return this.getRuleContext(i, BackgroundColorContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public originalBoundingBox(): OriginalBoundingBoxContext[];
	public originalBoundingBox(i: number): OriginalBoundingBoxContext;
	public originalBoundingBox(i?: number): OriginalBoundingBoxContext | OriginalBoundingBoxContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OriginalBoundingBoxContext);
		} else {
			return this.getRuleContext(i, OriginalBoundingBoxContext);
		}
	}
	public pageBorder(): PageBorderContext[];
	public pageBorder(i: number): PageBorderContext;
	public pageBorder(i?: number): PageBorderContext | PageBorderContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageBorderContext);
		} else {
			return this.getRuleContext(i, PageBorderContext);
		}
	}
	public pageSize(): PageSizeContext[];
	public pageSize(i: number): PageSizeContext;
	public pageSize(i?: number): PageSizeContext | PageSizeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageSizeContext);
		} else {
			return this.getRuleContext(i, PageSizeContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageHeader) {
			listener.enterPageHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageHeader) {
			listener.exitPageHeader(this);
		}
	}
}


export class PageIdentificationContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageIdentification; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageIdentification) {
			listener.enterPageIdentification(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageIdentification) {
			listener.exitPageIdentification(this);
		}
	}
}


export class PageIdentificationDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageIdentificationDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageIdentificationDisplay) {
			listener.enterPageIdentificationDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageIdentificationDisplay) {
			listener.exitPageIdentificationDisplay(this);
		}
	}
}


export class PageNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageNameCaseSensitive) {
			listener.enterPageNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageNameCaseSensitive) {
			listener.exitPageNameCaseSensitive(this);
		}
	}
}


export class PageNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageNameDef) {
			listener.enterPageNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageNameDef) {
			listener.exitPageNameDef(this);
		}
	}
}


export class PageNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageNameRef) {
			listener.enterPageNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageNameRef) {
			listener.exitPageNameRef(this);
		}
	}
}


export class PagePropertyDisplayContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public propertyNameDisplay(): PropertyNameDisplayContext[];
	public propertyNameDisplay(i: number): PropertyNameDisplayContext;
	public propertyNameDisplay(i?: number): PropertyNameDisplayContext | PropertyNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyNameDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyNameDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pagePropertyDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPagePropertyDisplay) {
			listener.enterPagePropertyDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPagePropertyDisplay) {
			listener.exitPagePropertyDisplay(this);
		}
	}
}


export class PageRefContext extends ParserRuleContext {
	public pageNameRef(): PageNameRefContext {
		return this.getRuleContext(0, PageNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageRef) {
			listener.enterPageRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageRef) {
			listener.exitPageRef(this);
		}
	}
}


export class PageSizeContext extends ParserRuleContext {
	public rectangle(): RectangleContext {
		return this.getRuleContext(0, RectangleContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageSize; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageSize) {
			listener.enterPageSize(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageSize) {
			listener.exitPageSize(this);
		}
	}
}


export class PageTitleContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageTitle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageTitle) {
			listener.enterPageTitle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageTitle) {
			listener.exitPageTitle(this);
		}
	}
}


export class PageTitleBlockContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public pageTitleBlockTemplateRef(): PageTitleBlockTemplateRefContext {
		return this.getRuleContext(0, PageTitleBlockTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public pagePropertyDisplay(): PagePropertyDisplayContext[];
	public pagePropertyDisplay(i: number): PagePropertyDisplayContext;
	public pagePropertyDisplay(i?: number): PagePropertyDisplayContext | PagePropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PagePropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PagePropertyDisplayContext);
		}
	}
	public pageTitleBlockAttributeDisplay(): PageTitleBlockAttributeDisplayContext[];
	public pageTitleBlockAttributeDisplay(i: number): PageTitleBlockAttributeDisplayContext;
	public pageTitleBlockAttributeDisplay(i?: number): PageTitleBlockAttributeDisplayContext | PageTitleBlockAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageTitleBlockAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, PageTitleBlockAttributeDisplayContext);
		}
	}
	public pageTitleBlockAttributes(): PageTitleBlockAttributesContext[];
	public pageTitleBlockAttributes(i: number): PageTitleBlockAttributesContext;
	public pageTitleBlockAttributes(i?: number): PageTitleBlockAttributesContext | PageTitleBlockAttributesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageTitleBlockAttributesContext);
		} else {
			return this.getRuleContext(i, PageTitleBlockAttributesContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageTitleBlock; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageTitleBlock) {
			listener.enterPageTitleBlock(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageTitleBlock) {
			listener.exitPageTitleBlock(this);
		}
	}
}


export class PageTitleBlockAttributeDisplayContext extends ParserRuleContext {
	public approvedDateDisplay(): ApprovedDateDisplayContext[];
	public approvedDateDisplay(i: number): ApprovedDateDisplayContext;
	public approvedDateDisplay(i?: number): ApprovedDateDisplayContext | ApprovedDateDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ApprovedDateDisplayContext);
		} else {
			return this.getRuleContext(i, ApprovedDateDisplayContext);
		}
	}
	public checkDateDisplay(): CheckDateDisplayContext[];
	public checkDateDisplay(i: number): CheckDateDisplayContext;
	public checkDateDisplay(i?: number): CheckDateDisplayContext | CheckDateDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CheckDateDisplayContext);
		} else {
			return this.getRuleContext(i, CheckDateDisplayContext);
		}
	}
	public companyNameDisplay(): CompanyNameDisplayContext[];
	public companyNameDisplay(i: number): CompanyNameDisplayContext;
	public companyNameDisplay(i?: number): CompanyNameDisplayContext | CompanyNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CompanyNameDisplayContext);
		} else {
			return this.getRuleContext(i, CompanyNameDisplayContext);
		}
	}
	public contractDisplay(): ContractDisplayContext[];
	public contractDisplay(i: number): ContractDisplayContext;
	public contractDisplay(i?: number): ContractDisplayContext | ContractDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ContractDisplayContext);
		} else {
			return this.getRuleContext(i, ContractDisplayContext);
		}
	}
	public copyrightDisplay(): CopyrightDisplayContext[];
	public copyrightDisplay(i: number): CopyrightDisplayContext;
	public copyrightDisplay(i?: number): CopyrightDisplayContext | CopyrightDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CopyrightDisplayContext);
		} else {
			return this.getRuleContext(i, CopyrightDisplayContext);
		}
	}
	public drawingDescriptionDisplay(): DrawingDescriptionDisplayContext[];
	public drawingDescriptionDisplay(i: number): DrawingDescriptionDisplayContext;
	public drawingDescriptionDisplay(i?: number): DrawingDescriptionDisplayContext | DrawingDescriptionDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DrawingDescriptionDisplayContext);
		} else {
			return this.getRuleContext(i, DrawingDescriptionDisplayContext);
		}
	}
	public drawingIdentificationDisplay(): DrawingIdentificationDisplayContext[];
	public drawingIdentificationDisplay(i: number): DrawingIdentificationDisplayContext;
	public drawingIdentificationDisplay(i?: number): DrawingIdentificationDisplayContext | DrawingIdentificationDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DrawingIdentificationDisplayContext);
		} else {
			return this.getRuleContext(i, DrawingIdentificationDisplayContext);
		}
	}
	public drawingSizeDisplay(): DrawingSizeDisplayContext[];
	public drawingSizeDisplay(i: number): DrawingSizeDisplayContext;
	public drawingSizeDisplay(i?: number): DrawingSizeDisplayContext | DrawingSizeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DrawingSizeDisplayContext);
		} else {
			return this.getRuleContext(i, DrawingSizeDisplayContext);
		}
	}
	public engineeringDateDisplay(): EngineeringDateDisplayContext[];
	public engineeringDateDisplay(i: number): EngineeringDateDisplayContext;
	public engineeringDateDisplay(i?: number): EngineeringDateDisplayContext | EngineeringDateDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(EngineeringDateDisplayContext);
		} else {
			return this.getRuleContext(i, EngineeringDateDisplayContext);
		}
	}
	public originalDrawingDateDisplay(): OriginalDrawingDateDisplayContext[];
	public originalDrawingDateDisplay(i: number): OriginalDrawingDateDisplayContext;
	public originalDrawingDateDisplay(i?: number): OriginalDrawingDateDisplayContext | OriginalDrawingDateDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OriginalDrawingDateDisplayContext);
		} else {
			return this.getRuleContext(i, OriginalDrawingDateDisplayContext);
		}
	}
	public pageIdentificationDisplay(): PageIdentificationDisplayContext[];
	public pageIdentificationDisplay(i: number): PageIdentificationDisplayContext;
	public pageIdentificationDisplay(i?: number): PageIdentificationDisplayContext | PageIdentificationDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageIdentificationDisplayContext);
		} else {
			return this.getRuleContext(i, PageIdentificationDisplayContext);
		}
	}
	public pageTitleDisplay(): PageTitleDisplayContext[];
	public pageTitleDisplay(i: number): PageTitleDisplayContext;
	public pageTitleDisplay(i?: number): PageTitleDisplayContext | PageTitleDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageTitleDisplayContext);
		} else {
			return this.getRuleContext(i, PageTitleDisplayContext);
		}
	}
	public revisionDisplay(): RevisionDisplayContext[];
	public revisionDisplay(i: number): RevisionDisplayContext;
	public revisionDisplay(i?: number): RevisionDisplayContext | RevisionDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RevisionDisplayContext);
		} else {
			return this.getRuleContext(i, RevisionDisplayContext);
		}
	}
	public totalPagesDisplay(): TotalPagesDisplayContext[];
	public totalPagesDisplay(i: number): TotalPagesDisplayContext;
	public totalPagesDisplay(i?: number): TotalPagesDisplayContext | TotalPagesDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TotalPagesDisplayContext);
		} else {
			return this.getRuleContext(i, TotalPagesDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageTitleBlockAttributeDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageTitleBlockAttributeDisplay) {
			listener.enterPageTitleBlockAttributeDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageTitleBlockAttributeDisplay) {
			listener.exitPageTitleBlockAttributeDisplay(this);
		}
	}
}


export class PageTitleBlockAttributesContext extends ParserRuleContext {
	public approvedDate(): ApprovedDateContext[];
	public approvedDate(i: number): ApprovedDateContext;
	public approvedDate(i?: number): ApprovedDateContext | ApprovedDateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ApprovedDateContext);
		} else {
			return this.getRuleContext(i, ApprovedDateContext);
		}
	}
	public checkDate(): CheckDateContext[];
	public checkDate(i: number): CheckDateContext;
	public checkDate(i?: number): CheckDateContext | CheckDateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CheckDateContext);
		} else {
			return this.getRuleContext(i, CheckDateContext);
		}
	}
	public companyName(): CompanyNameContext[];
	public companyName(i: number): CompanyNameContext;
	public companyName(i?: number): CompanyNameContext | CompanyNameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CompanyNameContext);
		} else {
			return this.getRuleContext(i, CompanyNameContext);
		}
	}
	public contract(): ContractContext[];
	public contract(i: number): ContractContext;
	public contract(i?: number): ContractContext | ContractContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ContractContext);
		} else {
			return this.getRuleContext(i, ContractContext);
		}
	}
	public drawingDescription(): DrawingDescriptionContext[];
	public drawingDescription(i: number): DrawingDescriptionContext;
	public drawingDescription(i?: number): DrawingDescriptionContext | DrawingDescriptionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DrawingDescriptionContext);
		} else {
			return this.getRuleContext(i, DrawingDescriptionContext);
		}
	}
	public drawingIdentification(): DrawingIdentificationContext[];
	public drawingIdentification(i: number): DrawingIdentificationContext;
	public drawingIdentification(i?: number): DrawingIdentificationContext | DrawingIdentificationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DrawingIdentificationContext);
		} else {
			return this.getRuleContext(i, DrawingIdentificationContext);
		}
	}
	public drawingSize(): DrawingSizeContext[];
	public drawingSize(i: number): DrawingSizeContext;
	public drawingSize(i?: number): DrawingSizeContext | DrawingSizeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DrawingSizeContext);
		} else {
			return this.getRuleContext(i, DrawingSizeContext);
		}
	}
	public engineeringDate(): EngineeringDateContext[];
	public engineeringDate(i: number): EngineeringDateContext;
	public engineeringDate(i?: number): EngineeringDateContext | EngineeringDateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(EngineeringDateContext);
		} else {
			return this.getRuleContext(i, EngineeringDateContext);
		}
	}
	public originalDrawingDate(): OriginalDrawingDateContext[];
	public originalDrawingDate(i: number): OriginalDrawingDateContext;
	public originalDrawingDate(i?: number): OriginalDrawingDateContext | OriginalDrawingDateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OriginalDrawingDateContext);
		} else {
			return this.getRuleContext(i, OriginalDrawingDateContext);
		}
	}
	public pageIdentification(): PageIdentificationContext[];
	public pageIdentification(i: number): PageIdentificationContext;
	public pageIdentification(i?: number): PageIdentificationContext | PageIdentificationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageIdentificationContext);
		} else {
			return this.getRuleContext(i, PageIdentificationContext);
		}
	}
	public pageTitle(): PageTitleContext[];
	public pageTitle(i: number): PageTitleContext;
	public pageTitle(i?: number): PageTitleContext | PageTitleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageTitleContext);
		} else {
			return this.getRuleContext(i, PageTitleContext);
		}
	}
	public revision(): RevisionContext[];
	public revision(i: number): RevisionContext;
	public revision(i?: number): RevisionContext | RevisionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RevisionContext);
		} else {
			return this.getRuleContext(i, RevisionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageTitleBlockAttributes; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageTitleBlockAttributes) {
			listener.enterPageTitleBlockAttributes(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageTitleBlockAttributes) {
			listener.exitPageTitleBlockAttributes(this);
		}
	}
}


export class PageTitleBlockTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public pageTitleBlockAttributeDisplay(): PageTitleBlockAttributeDisplayContext[];
	public pageTitleBlockAttributeDisplay(i: number): PageTitleBlockAttributeDisplayContext;
	public pageTitleBlockAttributeDisplay(i?: number): PageTitleBlockAttributeDisplayContext | PageTitleBlockAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageTitleBlockAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, PageTitleBlockAttributeDisplayContext);
		}
	}
	public pageTitleBlockAttributes(): PageTitleBlockAttributesContext[];
	public pageTitleBlockAttributes(i: number): PageTitleBlockAttributesContext;
	public pageTitleBlockAttributes(i?: number): PageTitleBlockAttributesContext | PageTitleBlockAttributesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageTitleBlockAttributesContext);
		} else {
			return this.getRuleContext(i, PageTitleBlockAttributesContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageTitleBlockTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageTitleBlockTemplate) {
			listener.enterPageTitleBlockTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageTitleBlockTemplate) {
			listener.exitPageTitleBlockTemplate(this);
		}
	}
}


export class PageTitleBlockTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageTitleBlockTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageTitleBlockTemplateRef) {
			listener.enterPageTitleBlockTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageTitleBlockTemplateRef) {
			listener.exitPageTitleBlockTemplateRef(this);
		}
	}
}


export class PageTitleDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pageTitleDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPageTitleDisplay) {
			listener.enterPageTitleDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPageTitleDisplay) {
			listener.exitPageTitleDisplay(this);
		}
	}
}


export class ParameterDisplayContext extends ParserRuleContext {
	public parameterNameRef(): ParameterNameRefContext {
		return this.getRuleContext(0, ParameterNameRefContext);
	}
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	public parameterNameDisplay(): ParameterNameDisplayContext | undefined {
		return this.tryGetRuleContext(0, ParameterNameDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_parameterDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterParameterDisplay) {
			listener.enterParameterDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitParameterDisplay) {
			listener.exitParameterDisplay(this);
		}
	}
}


export class ParameterNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_parameterNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterParameterNameCaseSensitive) {
			listener.enterParameterNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitParameterNameCaseSensitive) {
			listener.exitParameterNameCaseSensitive(this);
		}
	}
}


export class ParameterNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_parameterNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterParameterNameDef) {
			listener.enterParameterNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitParameterNameDef) {
			listener.exitParameterNameDef(this);
		}
	}
}


export class ParameterNameDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_parameterNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterParameterNameDisplay) {
			listener.enterParameterNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitParameterNameDisplay) {
			listener.exitParameterNameDisplay(this);
		}
	}
}


export class ParameterNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_parameterNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterParameterNameRef) {
			listener.enterParameterNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitParameterNameRef) {
			listener.exitParameterNameRef(this);
		}
	}
}


export class PathContext extends ParserRuleContext {
	public pointList(): PointListContext {
		return this.getRuleContext(0, PointListContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_path; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPath) {
			listener.enterPath(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPath) {
			listener.exitPath(this);
		}
	}
}


export class PathDelayContext extends ParserRuleContext {
	public delay(): DelayContext {
		return this.getRuleContext(0, DelayContext);
	}
	public event(): EventContext[];
	public event(i: number): EventContext;
	public event(i?: number): EventContext | EventContext[] {
		if (i === undefined) {
			return this.getRuleContexts(EventContext);
		} else {
			return this.getRuleContext(i, EventContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pathDelay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPathDelay) {
			listener.enterPathDelay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPathDelay) {
			listener.exitPathDelay(this);
		}
	}
}


export class PathWidthContext extends ParserRuleContext {
	public lengthValue(): LengthValueContext | undefined {
		return this.tryGetRuleContext(0, LengthValueContext);
	}
	public minimalWidth(): MinimalWidthContext | undefined {
		return this.tryGetRuleContext(0, MinimalWidthContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pathWidth; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPathWidth) {
			listener.enterPathWidth(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPathWidth) {
			listener.exitPathWidth(this);
		}
	}
}


export class PcbLayoutUnitsContext extends ParserRuleContext {
	public setAngle(): SetAngleContext[];
	public setAngle(i: number): SetAngleContext;
	public setAngle(i?: number): SetAngleContext | SetAngleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetAngleContext);
		} else {
			return this.getRuleContext(i, SetAngleContext);
		}
	}
	public setCapacitance(): SetCapacitanceContext[];
	public setCapacitance(i: number): SetCapacitanceContext;
	public setCapacitance(i?: number): SetCapacitanceContext | SetCapacitanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetCapacitanceContext);
		} else {
			return this.getRuleContext(i, SetCapacitanceContext);
		}
	}
	public setDistance(): SetDistanceContext[];
	public setDistance(i: number): SetDistanceContext;
	public setDistance(i?: number): SetDistanceContext | SetDistanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetDistanceContext);
		} else {
			return this.getRuleContext(i, SetDistanceContext);
		}
	}
	public setTime(): SetTimeContext[];
	public setTime(i: number): SetTimeContext;
	public setTime(i?: number): SetTimeContext | SetTimeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetTimeContext);
		} else {
			return this.getRuleContext(i, SetTimeContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pcbLayoutUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPcbLayoutUnits) {
			listener.enterPcbLayoutUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPcbLayoutUnits) {
			listener.exitPcbLayoutUnits(this);
		}
	}
}


export class PcbLayoutViewContext extends ParserRuleContext {
	public viewNameDef(): ViewNameDefContext {
		return this.getRuleContext(0, ViewNameDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pcbLayoutView; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPcbLayoutView) {
			listener.enterPcbLayoutView(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPcbLayoutView) {
			listener.exitPcbLayoutView(this);
		}
	}
}


export class PermutableContext extends ParserRuleContext {
	public nonPermutable(): NonPermutableContext[];
	public nonPermutable(i: number): NonPermutableContext;
	public nonPermutable(i?: number): NonPermutableContext | NonPermutableContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NonPermutableContext);
		} else {
			return this.getRuleContext(i, NonPermutableContext);
		}
	}
	public permutable(): PermutableContext[];
	public permutable(i: number): PermutableContext;
	public permutable(i?: number): PermutableContext | PermutableContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PermutableContext);
		} else {
			return this.getRuleContext(i, PermutableContext);
		}
	}
	public portRef(): PortRefContext[];
	public portRef(i: number): PortRefContext;
	public portRef(i?: number): PortRefContext | PortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortRefContext);
		} else {
			return this.getRuleContext(i, PortRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_permutable; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPermutable) {
			listener.enterPermutable(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPermutable) {
			listener.exitPermutable(this);
		}
	}
}


export class PhysicalDefaultsContext extends ParserRuleContext {
	public schematicRequiredDefaults(): SchematicRequiredDefaultsContext | undefined {
		return this.tryGetRuleContext(0, SchematicRequiredDefaultsContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_physicalDefaults; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPhysicalDefaults) {
			listener.enterPhysicalDefaults(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPhysicalDefaults) {
			listener.exitPhysicalDefaults(this);
		}
	}
}


export class PhysicalScalingContext extends ParserRuleContext {
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public connectivityUnits(): ConnectivityUnitsContext[];
	public connectivityUnits(i: number): ConnectivityUnitsContext;
	public connectivityUnits(i?: number): ConnectivityUnitsContext | ConnectivityUnitsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityUnitsContext);
		} else {
			return this.getRuleContext(i, ConnectivityUnitsContext);
		}
	}
	public documentationUnits(): DocumentationUnitsContext[];
	public documentationUnits(i: number): DocumentationUnitsContext;
	public documentationUnits(i?: number): DocumentationUnitsContext | DocumentationUnitsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationUnitsContext);
		} else {
			return this.getRuleContext(i, DocumentationUnitsContext);
		}
	}
	public geometryMacroUnits(): GeometryMacroUnitsContext[];
	public geometryMacroUnits(i: number): GeometryMacroUnitsContext;
	public geometryMacroUnits(i?: number): GeometryMacroUnitsContext | GeometryMacroUnitsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GeometryMacroUnitsContext);
		} else {
			return this.getRuleContext(i, GeometryMacroUnitsContext);
		}
	}
	public interfaceUnits(): InterfaceUnitsContext[];
	public interfaceUnits(i: number): InterfaceUnitsContext;
	public interfaceUnits(i?: number): InterfaceUnitsContext | InterfaceUnitsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterfaceUnitsContext);
		} else {
			return this.getRuleContext(i, InterfaceUnitsContext);
		}
	}
	public logicModelUnits(): LogicModelUnitsContext[];
	public logicModelUnits(i: number): LogicModelUnitsContext;
	public logicModelUnits(i?: number): LogicModelUnitsContext | LogicModelUnitsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicModelUnitsContext);
		} else {
			return this.getRuleContext(i, LogicModelUnitsContext);
		}
	}
	public maskLayoutUnits(): MaskLayoutUnitsContext[];
	public maskLayoutUnits(i: number): MaskLayoutUnitsContext;
	public maskLayoutUnits(i?: number): MaskLayoutUnitsContext | MaskLayoutUnitsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MaskLayoutUnitsContext);
		} else {
			return this.getRuleContext(i, MaskLayoutUnitsContext);
		}
	}
	public pcbLayoutUnits(): PcbLayoutUnitsContext[];
	public pcbLayoutUnits(i: number): PcbLayoutUnitsContext;
	public pcbLayoutUnits(i?: number): PcbLayoutUnitsContext | PcbLayoutUnitsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PcbLayoutUnitsContext);
		} else {
			return this.getRuleContext(i, PcbLayoutUnitsContext);
		}
	}
	public schematicUnits(): SchematicUnitsContext[];
	public schematicUnits(i: number): SchematicUnitsContext;
	public schematicUnits(i?: number): SchematicUnitsContext | SchematicUnitsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicUnitsContext);
		} else {
			return this.getRuleContext(i, SchematicUnitsContext);
		}
	}
	public symbolicLayoutUnits(): SymbolicLayoutUnitsContext[];
	public symbolicLayoutUnits(i: number): SymbolicLayoutUnitsContext;
	public symbolicLayoutUnits(i?: number): SymbolicLayoutUnitsContext | SymbolicLayoutUnitsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SymbolicLayoutUnitsContext);
		} else {
			return this.getRuleContext(i, SymbolicLayoutUnitsContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_physicalScaling; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPhysicalScaling) {
			listener.enterPhysicalScaling(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPhysicalScaling) {
			listener.exitPhysicalScaling(this);
		}
	}
}


export class PixelPatternContext extends ParserRuleContext {
	public rowSize(): RowSizeContext {
		return this.getRuleContext(0, RowSizeContext);
	}
	public pixelRow(): PixelRowContext[];
	public pixelRow(i: number): PixelRowContext;
	public pixelRow(i?: number): PixelRowContext | PixelRowContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PixelRowContext);
		} else {
			return this.getRuleContext(i, PixelRowContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pixelPattern; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPixelPattern) {
			listener.enterPixelPattern(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPixelPattern) {
			listener.exitPixelPattern(this);
		}
	}
}


export class PixelRowContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext[];
	public booleanToken(i: number): BooleanTokenContext;
	public booleanToken(i?: number): BooleanTokenContext | BooleanTokenContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BooleanTokenContext);
		} else {
			return this.getRuleContext(i, BooleanTokenContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pixelRow; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPixelRow) {
			listener.enterPixelRow(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPixelRow) {
			listener.exitPixelRow(this);
		}
	}
}


export class PointContext extends ParserRuleContext {
	public pointValue(): PointValueContext {
		return this.getRuleContext(0, PointValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_point; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPoint) {
			listener.enterPoint(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPoint) {
			listener.exitPoint(this);
		}
	}
}


export class PointListContext extends ParserRuleContext {
	public pointValue(): PointValueContext[];
	public pointValue(i: number): PointValueContext;
	public pointValue(i?: number): PointValueContext | PointValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PointValueContext);
		} else {
			return this.getRuleContext(i, PointValueContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pointList; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPointList) {
			listener.enterPointList(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPointList) {
			listener.exitPointList(this);
		}
	}
}


export class PointValueContext extends ParserRuleContext {
	public pt(): PtContext {
		return this.getRuleContext(0, PtContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pointValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPointValue) {
			listener.enterPointValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPointValue) {
			listener.exitPointValue(this);
		}
	}
}


export class PolygonContext extends ParserRuleContext {
	public pointList(): PointListContext {
		return this.getRuleContext(0, PointListContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_polygon; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPolygon) {
			listener.enterPolygon(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPolygon) {
			listener.exitPolygon(this);
		}
	}
}


export class PortContext extends ParserRuleContext {
	public portNameDef(): PortNameDefContext | undefined {
		return this.tryGetRuleContext(0, PortNameDefContext);
	}
	public portDirection(): PortDirectionContext | undefined {
		return this.tryGetRuleContext(0, PortDirectionContext);
	}
	public acLoad(): AcLoadContext[];
	public acLoad(i: number): AcLoadContext;
	public acLoad(i?: number): AcLoadContext | AcLoadContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AcLoadContext);
		} else {
			return this.getRuleContext(i, AcLoadContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public defaultConnection(): DefaultConnectionContext[];
	public defaultConnection(i: number): DefaultConnectionContext;
	public defaultConnection(i?: number): DefaultConnectionContext | DefaultConnectionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DefaultConnectionContext);
		} else {
			return this.getRuleContext(i, DefaultConnectionContext);
		}
	}
	public designator(): DesignatorContext[];
	public designator(i: number): DesignatorContext;
	public designator(i?: number): DesignatorContext | DesignatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorContext);
		} else {
			return this.getRuleContext(i, DesignatorContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public portDelay(): PortDelayContext[];
	public portDelay(i: number): PortDelayContext;
	public portDelay(i?: number): PortDelayContext | PortDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortDelayContext);
		} else {
			return this.getRuleContext(i, PortDelayContext);
		}
	}
	public portLoadDelay(): PortLoadDelayContext[];
	public portLoadDelay(i: number): PortLoadDelayContext;
	public portLoadDelay(i?: number): PortLoadDelayContext | PortLoadDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortLoadDelayContext);
		} else {
			return this.getRuleContext(i, PortLoadDelayContext);
		}
	}
	public portNameGenerator(): PortNameGeneratorContext[];
	public portNameGenerator(i: number): PortNameGeneratorContext;
	public portNameGenerator(i?: number): PortNameGeneratorContext | PortNameGeneratorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortNameGeneratorContext);
		} else {
			return this.getRuleContext(i, PortNameGeneratorContext);
		}
	}
	public portWidth(): PortWidthContext[];
	public portWidth(i: number): PortWidthContext;
	public portWidth(i?: number): PortWidthContext | PortWidthContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortWidthContext);
		} else {
			return this.getRuleContext(i, PortWidthContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public schematicPortAttributes(): SchematicPortAttributesContext[];
	public schematicPortAttributes(i: number): SchematicPortAttributesContext;
	public schematicPortAttributes(i?: number): SchematicPortAttributesContext | SchematicPortAttributesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortAttributesContext);
		} else {
			return this.getRuleContext(i, SchematicPortAttributesContext);
		}
	}
	public unused(): UnusedContext[];
	public unused(i: number): UnusedContext;
	public unused(i?: number): UnusedContext | UnusedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UnusedContext);
		} else {
			return this.getRuleContext(i, UnusedContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_port; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPort) {
			listener.enterPort(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPort) {
			listener.exitPort(this);
		}
	}
}


export class PortAnnotateContext extends ParserRuleContext {
	public extendPortDef(): ExtendPortDefContext | undefined {
		return this.tryGetRuleContext(0, ExtendPortDefContext);
	}
	public extendPortMemberDef(): ExtendPortMemberDefContext | undefined {
		return this.tryGetRuleContext(0, ExtendPortMemberDefContext);
	}
	public acLoad(): AcLoadContext[];
	public acLoad(i: number): AcLoadContext;
	public acLoad(i?: number): AcLoadContext | AcLoadContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AcLoadContext);
		} else {
			return this.getRuleContext(i, AcLoadContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public designator(): DesignatorContext[];
	public designator(i: number): DesignatorContext;
	public designator(i?: number): DesignatorContext | DesignatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorContext);
		} else {
			return this.getRuleContext(i, DesignatorContext);
		}
	}
	public directionalPortAttributeOverride(): DirectionalPortAttributeOverrideContext[];
	public directionalPortAttributeOverride(i: number): DirectionalPortAttributeOverrideContext;
	public directionalPortAttributeOverride(i?: number): DirectionalPortAttributeOverrideContext | DirectionalPortAttributeOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DirectionalPortAttributeOverrideContext);
		} else {
			return this.getRuleContext(i, DirectionalPortAttributeOverrideContext);
		}
	}
	public portDelay(): PortDelayContext[];
	public portDelay(i: number): PortDelayContext;
	public portDelay(i?: number): PortDelayContext | PortDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortDelayContext);
		} else {
			return this.getRuleContext(i, PortDelayContext);
		}
	}
	public portDelayOverride(): PortDelayOverrideContext[];
	public portDelayOverride(i: number): PortDelayOverrideContext;
	public portDelayOverride(i?: number): PortDelayOverrideContext | PortDelayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortDelayOverrideContext);
		} else {
			return this.getRuleContext(i, PortDelayOverrideContext);
		}
	}
	public portLoadDelay(): PortLoadDelayContext[];
	public portLoadDelay(i: number): PortLoadDelayContext;
	public portLoadDelay(i?: number): PortLoadDelayContext | PortLoadDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortLoadDelayContext);
		} else {
			return this.getRuleContext(i, PortLoadDelayContext);
		}
	}
	public portLoadDelayOverride(): PortLoadDelayOverrideContext[];
	public portLoadDelayOverride(i: number): PortLoadDelayOverrideContext;
	public portLoadDelayOverride(i?: number): PortLoadDelayOverrideContext | PortLoadDelayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortLoadDelayOverrideContext);
		} else {
			return this.getRuleContext(i, PortLoadDelayOverrideContext);
		}
	}
	public portPropertyOverride(): PortPropertyOverrideContext[];
	public portPropertyOverride(i: number): PortPropertyOverrideContext;
	public portPropertyOverride(i?: number): PortPropertyOverrideContext | PortPropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortPropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PortPropertyOverrideContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortAnnotate) {
			listener.enterPortAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortAnnotate) {
			listener.exitPortAnnotate(this);
		}
	}
}


export class PortAttributeDisplayContext extends ParserRuleContext {
	public acLoadDisplay(): AcLoadDisplayContext[];
	public acLoadDisplay(i: number): AcLoadDisplayContext;
	public acLoadDisplay(i?: number): AcLoadDisplayContext | AcLoadDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AcLoadDisplayContext);
		} else {
			return this.getRuleContext(i, AcLoadDisplayContext);
		}
	}
	public connectedSignalIndexGeneratorDisplay(): ConnectedSignalIndexGeneratorDisplayContext[];
	public connectedSignalIndexGeneratorDisplay(i: number): ConnectedSignalIndexGeneratorDisplayContext;
	public connectedSignalIndexGeneratorDisplay(i?: number): ConnectedSignalIndexGeneratorDisplayContext | ConnectedSignalIndexGeneratorDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectedSignalIndexGeneratorDisplayContext);
		} else {
			return this.getRuleContext(i, ConnectedSignalIndexGeneratorDisplayContext);
		}
	}
	public dcFanInLoadDisplay(): DcFanInLoadDisplayContext[];
	public dcFanInLoadDisplay(i: number): DcFanInLoadDisplayContext;
	public dcFanInLoadDisplay(i?: number): DcFanInLoadDisplayContext | DcFanInLoadDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcFanInLoadDisplayContext);
		} else {
			return this.getRuleContext(i, DcFanInLoadDisplayContext);
		}
	}
	public dcFanOutLoadDisplay(): DcFanOutLoadDisplayContext[];
	public dcFanOutLoadDisplay(i: number): DcFanOutLoadDisplayContext;
	public dcFanOutLoadDisplay(i?: number): DcFanOutLoadDisplayContext | DcFanOutLoadDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcFanOutLoadDisplayContext);
		} else {
			return this.getRuleContext(i, DcFanOutLoadDisplayContext);
		}
	}
	public dcMaxFanInDisplay(): DcMaxFanInDisplayContext[];
	public dcMaxFanInDisplay(i: number): DcMaxFanInDisplayContext;
	public dcMaxFanInDisplay(i?: number): DcMaxFanInDisplayContext | DcMaxFanInDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcMaxFanInDisplayContext);
		} else {
			return this.getRuleContext(i, DcMaxFanInDisplayContext);
		}
	}
	public dcMaxFanOutDisplay(): DcMaxFanOutDisplayContext[];
	public dcMaxFanOutDisplay(i: number): DcMaxFanOutDisplayContext;
	public dcMaxFanOutDisplay(i?: number): DcMaxFanOutDisplayContext | DcMaxFanOutDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DcMaxFanOutDisplayContext);
		} else {
			return this.getRuleContext(i, DcMaxFanOutDisplayContext);
		}
	}
	public designatorDisplay(): DesignatorDisplayContext[];
	public designatorDisplay(i: number): DesignatorDisplayContext;
	public designatorDisplay(i?: number): DesignatorDisplayContext | DesignatorDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorDisplayContext);
		} else {
			return this.getRuleContext(i, DesignatorDisplayContext);
		}
	}
	public portDelayDisplay(): PortDelayDisplayContext[];
	public portDelayDisplay(i: number): PortDelayDisplayContext;
	public portDelayDisplay(i?: number): PortDelayDisplayContext | PortDelayDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortDelayDisplayContext);
		} else {
			return this.getRuleContext(i, PortDelayDisplayContext);
		}
	}
	public portLoadDelayDisplay(): PortLoadDelayDisplayContext[];
	public portLoadDelayDisplay(i: number): PortLoadDelayDisplayContext;
	public portLoadDelayDisplay(i?: number): PortLoadDelayDisplayContext | PortLoadDelayDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortLoadDelayDisplayContext);
		} else {
			return this.getRuleContext(i, PortLoadDelayDisplayContext);
		}
	}
	public portNameDisplay(): PortNameDisplayContext[];
	public portNameDisplay(i: number): PortNameDisplayContext;
	public portNameDisplay(i?: number): PortNameDisplayContext | PortNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortNameDisplayContext);
		} else {
			return this.getRuleContext(i, PortNameDisplayContext);
		}
	}
	public portNameGeneratorDisplay(): PortNameGeneratorDisplayContext[];
	public portNameGeneratorDisplay(i: number): PortNameGeneratorDisplayContext;
	public portNameGeneratorDisplay(i?: number): PortNameGeneratorDisplayContext | PortNameGeneratorDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortNameGeneratorDisplayContext);
		} else {
			return this.getRuleContext(i, PortNameGeneratorDisplayContext);
		}
	}
	public portPropertyDisplay(): PortPropertyDisplayContext[];
	public portPropertyDisplay(i: number): PortPropertyDisplayContext;
	public portPropertyDisplay(i?: number): PortPropertyDisplayContext | PortPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PortPropertyDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portAttributeDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortAttributeDisplay) {
			listener.enterPortAttributeDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortAttributeDisplay) {
			listener.exitPortAttributeDisplay(this);
		}
	}
}


export class PortBundleContext extends ParserRuleContext {
	public portNameDef(): PortNameDefContext {
		return this.getRuleContext(0, PortNameDefContext);
	}
	public portList(): PortListContext {
		return this.getRuleContext(0, PortListContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	public designator(): DesignatorContext[];
	public designator(i: number): DesignatorContext;
	public designator(i?: number): DesignatorContext | DesignatorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorContext);
		} else {
			return this.getRuleContext(i, DesignatorContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portBundle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortBundle) {
			listener.enterPortBundle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortBundle) {
			listener.exitPortBundle(this);
		}
	}
}


export class PortDelayContext extends ParserRuleContext {
	public portDelayNameDef(): PortDelayNameDefContext {
		return this.getRuleContext(0, PortDelayNameDefContext);
	}
	public derivation(): DerivationContext {
		return this.getRuleContext(0, DerivationContext);
	}
	public delay(): DelayContext {
		return this.getRuleContext(0, DelayContext);
	}
	public becomes(): BecomesContext[];
	public becomes(i: number): BecomesContext;
	public becomes(i?: number): BecomesContext | BecomesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BecomesContext);
		} else {
			return this.getRuleContext(i, BecomesContext);
		}
	}
	public transition(): TransitionContext[];
	public transition(i: number): TransitionContext;
	public transition(i?: number): TransitionContext | TransitionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TransitionContext);
		} else {
			return this.getRuleContext(i, TransitionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portDelay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortDelay) {
			listener.enterPortDelay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortDelay) {
			listener.exitPortDelay(this);
		}
	}
}


export class PortDelayDisplayContext extends ParserRuleContext {
	public portDelayNameRef(): PortDelayNameRefContext {
		return this.getRuleContext(0, PortDelayNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portDelayDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortDelayDisplay) {
			listener.enterPortDelayDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortDelayDisplay) {
			listener.exitPortDelayDisplay(this);
		}
	}
}


export class PortDelayNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portDelayNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortDelayNameDef) {
			listener.enterPortDelayNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortDelayNameDef) {
			listener.exitPortDelayNameDef(this);
		}
	}
}


export class PortDelayNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portDelayNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortDelayNameRef) {
			listener.enterPortDelayNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortDelayNameRef) {
			listener.exitPortDelayNameRef(this);
		}
	}
}


export class PortDelayOverrideContext extends ParserRuleContext {
	public portDelayNameRef(): PortDelayNameRefContext {
		return this.getRuleContext(0, PortDelayNameRefContext);
	}
	public derivation(): DerivationContext {
		return this.getRuleContext(0, DerivationContext);
	}
	public delay(): DelayContext {
		return this.getRuleContext(0, DelayContext);
	}
	public becomes(): BecomesContext[];
	public becomes(i: number): BecomesContext;
	public becomes(i?: number): BecomesContext | BecomesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BecomesContext);
		} else {
			return this.getRuleContext(i, BecomesContext);
		}
	}
	public transition(): TransitionContext[];
	public transition(i: number): TransitionContext;
	public transition(i?: number): TransitionContext | TransitionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TransitionContext);
		} else {
			return this.getRuleContext(i, TransitionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portDelayOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortDelayOverride) {
			listener.enterPortDelayOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortDelayOverride) {
			listener.exitPortDelayOverride(this);
		}
	}
}


export class PortDirectionContext extends ParserRuleContext {
	public inputPort(): InputPortContext | undefined {
		return this.tryGetRuleContext(0, InputPortContext);
	}
	public outputPort(): OutputPortContext | undefined {
		return this.tryGetRuleContext(0, OutputPortContext);
	}
	public bidirectionalPort(): BidirectionalPortContext | undefined {
		return this.tryGetRuleContext(0, BidirectionalPortContext);
	}
	public unspecifiedDirectionPort(): UnspecifiedDirectionPortContext | undefined {
		return this.tryGetRuleContext(0, UnspecifiedDirectionPortContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portDirection; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortDirection) {
			listener.enterPortDirection(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortDirection) {
			listener.exitPortDirection(this);
		}
	}
}


export class PortDirectionIndicatorContext extends ParserRuleContext {
	public input(): InputContext | undefined {
		return this.tryGetRuleContext(0, InputContext);
	}
	public output(): OutputContext | undefined {
		return this.tryGetRuleContext(0, OutputContext);
	}
	public bidirectional(): BidirectionalContext | undefined {
		return this.tryGetRuleContext(0, BidirectionalContext);
	}
	public unspecified(): UnspecifiedContext | undefined {
		return this.tryGetRuleContext(0, UnspecifiedContext);
	}
	public unrestricted(): UnrestrictedContext | undefined {
		return this.tryGetRuleContext(0, UnrestrictedContext);
	}
	public mixedDirection(): MixedDirectionContext | undefined {
		return this.tryGetRuleContext(0, MixedDirectionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portDirectionIndicator; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortDirectionIndicator) {
			listener.enterPortDirectionIndicator(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortDirectionIndicator) {
			listener.exitPortDirectionIndicator(this);
		}
	}
}


export class PortIndexValueContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portIndexValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortIndexValue) {
			listener.enterPortIndexValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortIndexValue) {
			listener.exitPortIndexValue(this);
		}
	}
}


export class PortInstanceRefContext extends ParserRuleContext {
	public portNameRef(): PortNameRefContext | undefined {
		return this.tryGetRuleContext(0, PortNameRefContext);
	}
	public portMemberRef(): PortMemberRefContext | undefined {
		return this.tryGetRuleContext(0, PortMemberRefContext);
	}
	public instanceRef(): InstanceRefContext | undefined {
		return this.tryGetRuleContext(0, InstanceRefContext);
	}
	public instanceMemberRef(): InstanceMemberRefContext | undefined {
		return this.tryGetRuleContext(0, InstanceMemberRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portInstanceRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortInstanceRef) {
			listener.enterPortInstanceRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortInstanceRef) {
			listener.exitPortInstanceRef(this);
		}
	}
}


export class PortJoinedContext extends ParserRuleContext {
	public globalPortRef(): GlobalPortRefContext[];
	public globalPortRef(i: number): GlobalPortRefContext;
	public globalPortRef(i?: number): GlobalPortRefContext | GlobalPortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortRefContext);
		} else {
			return this.getRuleContext(i, GlobalPortRefContext);
		}
	}
	public localPortGroupRef(): LocalPortGroupRefContext[];
	public localPortGroupRef(i: number): LocalPortGroupRefContext;
	public localPortGroupRef(i?: number): LocalPortGroupRefContext | LocalPortGroupRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LocalPortGroupRefContext);
		} else {
			return this.getRuleContext(i, LocalPortGroupRefContext);
		}
	}
	public portInstanceRef(): PortInstanceRefContext[];
	public portInstanceRef(i: number): PortInstanceRefContext;
	public portInstanceRef(i?: number): PortInstanceRefContext | PortInstanceRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortInstanceRefContext);
		} else {
			return this.getRuleContext(i, PortInstanceRefContext);
		}
	}
	public portRef(): PortRefContext[];
	public portRef(i: number): PortRefContext;
	public portRef(i?: number): PortRefContext | PortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortRefContext);
		} else {
			return this.getRuleContext(i, PortRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portJoined; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortJoined) {
			listener.enterPortJoined(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortJoined) {
			listener.exitPortJoined(this);
		}
	}
}


export class PortListContext extends ParserRuleContext {
	public portRef(): PortRefContext[];
	public portRef(i: number): PortRefContext;
	public portRef(i?: number): PortRefContext | PortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortRefContext);
		} else {
			return this.getRuleContext(i, PortRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portList; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortList) {
			listener.enterPortList(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortList) {
			listener.exitPortList(this);
		}
	}
}


export class PortLoadDelayContext extends ParserRuleContext {
	public portLoadDelayNameDef(): PortLoadDelayNameDefContext {
		return this.getRuleContext(0, PortLoadDelayNameDefContext);
	}
	public derivation(): DerivationContext {
		return this.getRuleContext(0, DerivationContext);
	}
	public loadDelay(): LoadDelayContext {
		return this.getRuleContext(0, LoadDelayContext);
	}
	public becomes(): BecomesContext[];
	public becomes(i: number): BecomesContext;
	public becomes(i?: number): BecomesContext | BecomesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BecomesContext);
		} else {
			return this.getRuleContext(i, BecomesContext);
		}
	}
	public transition(): TransitionContext[];
	public transition(i: number): TransitionContext;
	public transition(i?: number): TransitionContext | TransitionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TransitionContext);
		} else {
			return this.getRuleContext(i, TransitionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portLoadDelay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortLoadDelay) {
			listener.enterPortLoadDelay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortLoadDelay) {
			listener.exitPortLoadDelay(this);
		}
	}
}


export class PortLoadDelayDisplayContext extends ParserRuleContext {
	public portLoadDelayNameRef(): PortLoadDelayNameRefContext {
		return this.getRuleContext(0, PortLoadDelayNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portLoadDelayDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortLoadDelayDisplay) {
			listener.enterPortLoadDelayDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortLoadDelayDisplay) {
			listener.exitPortLoadDelayDisplay(this);
		}
	}
}


export class PortLoadDelayNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portLoadDelayNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortLoadDelayNameDef) {
			listener.enterPortLoadDelayNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortLoadDelayNameDef) {
			listener.exitPortLoadDelayNameDef(this);
		}
	}
}


export class PortLoadDelayNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portLoadDelayNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortLoadDelayNameRef) {
			listener.enterPortLoadDelayNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortLoadDelayNameRef) {
			listener.exitPortLoadDelayNameRef(this);
		}
	}
}


export class PortLoadDelayOverrideContext extends ParserRuleContext {
	public portLoadDelayNameRef(): PortLoadDelayNameRefContext {
		return this.getRuleContext(0, PortLoadDelayNameRefContext);
	}
	public derivation(): DerivationContext {
		return this.getRuleContext(0, DerivationContext);
	}
	public loadDelay(): LoadDelayContext {
		return this.getRuleContext(0, LoadDelayContext);
	}
	public becomes(): BecomesContext[];
	public becomes(i: number): BecomesContext;
	public becomes(i?: number): BecomesContext | BecomesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BecomesContext);
		} else {
			return this.getRuleContext(i, BecomesContext);
		}
	}
	public transition(): TransitionContext[];
	public transition(i: number): TransitionContext;
	public transition(i?: number): TransitionContext | TransitionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TransitionContext);
		} else {
			return this.getRuleContext(i, TransitionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portLoadDelayOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortLoadDelayOverride) {
			listener.enterPortLoadDelayOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortLoadDelayOverride) {
			listener.exitPortLoadDelayOverride(this);
		}
	}
}


export class PortMemberRefContext extends ParserRuleContext {
	public portNameRef(): PortNameRefContext {
		return this.getRuleContext(0, PortNameRefContext);
	}
	public indexValue(): IndexValueContext {
		return this.getRuleContext(0, IndexValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portMemberRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortMemberRef) {
			listener.enterPortMemberRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortMemberRef) {
			listener.exitPortMemberRef(this);
		}
	}
}


export class PortNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortNameCaseSensitive) {
			listener.enterPortNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortNameCaseSensitive) {
			listener.exitPortNameCaseSensitive(this);
		}
	}
}


export class PortNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortNameDef) {
			listener.enterPortNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortNameDef) {
			listener.exitPortNameDef(this);
		}
	}
}


export class PortNameDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public displayNameOverride(): DisplayNameOverrideContext[];
	public displayNameOverride(i: number): DisplayNameOverrideContext;
	public displayNameOverride(i?: number): DisplayNameOverrideContext | DisplayNameOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameOverrideContext);
		} else {
			return this.getRuleContext(i, DisplayNameOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortNameDisplay) {
			listener.enterPortNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortNameDisplay) {
			listener.exitPortNameDisplay(this);
		}
	}
}


export class PortNameGeneratorContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portNameGenerator; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortNameGenerator) {
			listener.enterPortNameGenerator(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortNameGenerator) {
			listener.exitPortNameGenerator(this);
		}
	}
}


export class PortNameGeneratorDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portNameGeneratorDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortNameGeneratorDisplay) {
			listener.enterPortNameGeneratorDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortNameGeneratorDisplay) {
			listener.exitPortNameGeneratorDisplay(this);
		}
	}
}


export class PortNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortNameRef) {
			listener.enterPortNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortNameRef) {
			listener.exitPortNameRef(this);
		}
	}
}


export class PortPropertyDisplayContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public propertyNameDisplay(): PropertyNameDisplayContext[];
	public propertyNameDisplay(i: number): PropertyNameDisplayContext;
	public propertyNameDisplay(i?: number): PropertyNameDisplayContext | PropertyNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyNameDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyNameDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portPropertyDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortPropertyDisplay) {
			listener.enterPortPropertyDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortPropertyDisplay) {
			listener.exitPortPropertyDisplay(this);
		}
	}
}


export class PortPropertyDisplayOverrideContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	public propertyNameDisplay(): PropertyNameDisplayContext | undefined {
		return this.tryGetRuleContext(0, PropertyNameDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portPropertyDisplayOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortPropertyDisplayOverride) {
			listener.enterPortPropertyDisplayOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortPropertyDisplayOverride) {
			listener.exitPortPropertyDisplayOverride(this);
		}
	}
}


export class PortPropertyOverrideContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public typedValue(): TypedValueContext | undefined {
		return this.tryGetRuleContext(0, TypedValueContext);
	}
	public untyped(): UntypedContext | undefined {
		return this.tryGetRuleContext(0, UntypedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public fixed(): FixedContext[];
	public fixed(i: number): FixedContext;
	public fixed(i?: number): FixedContext | FixedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FixedContext);
		} else {
			return this.getRuleContext(i, FixedContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portPropertyOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortPropertyOverride) {
			listener.enterPortPropertyOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortPropertyOverride) {
			listener.exitPortPropertyOverride(this);
		}
	}
}


export class PortRefContext extends ParserRuleContext {
	public portNameRef(): PortNameRefContext {
		return this.getRuleContext(0, PortNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortRef) {
			listener.enterPortRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortRef) {
			listener.exitPortRef(this);
		}
	}
}


export class PortSetContext extends ParserRuleContext {
	public portRef(): PortRefContext[];
	public portRef(i: number): PortRefContext;
	public portRef(i?: number): PortRefContext | PortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortRefContext);
		} else {
			return this.getRuleContext(i, PortRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portSet; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortSet) {
			listener.enterPortSet(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortSet) {
			listener.exitPortSet(this);
		}
	}
}


export class PortWidthContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_portWidth; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPortWidth) {
			listener.enterPortWidth(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPortWidth) {
			listener.exitPortWidth(this);
		}
	}
}


export class PresentLogicValueContext extends ParserRuleContext {
	public logicNameRef(): LogicNameRefContext | undefined {
		return this.tryGetRuleContext(0, LogicNameRefContext);
	}
	public logicList(): LogicListContext | undefined {
		return this.tryGetRuleContext(0, LogicListContext);
	}
	public logicOneOf(): LogicOneOfContext | undefined {
		return this.tryGetRuleContext(0, LogicOneOfContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_presentLogicValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPresentLogicValue) {
			listener.enterPresentLogicValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPresentLogicValue) {
			listener.exitPresentLogicValue(this);
		}
	}
}


export class PreviousLogicValueContext extends ParserRuleContext {
	public logicNameRef(): LogicNameRefContext | undefined {
		return this.tryGetRuleContext(0, LogicNameRefContext);
	}
	public logicList(): LogicListContext | undefined {
		return this.tryGetRuleContext(0, LogicListContext);
	}
	public logicOneOf(): LogicOneOfContext | undefined {
		return this.tryGetRuleContext(0, LogicOneOfContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_previousLogicValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPreviousLogicValue) {
			listener.enterPreviousLogicValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPreviousLogicValue) {
			listener.exitPreviousLogicValue(this);
		}
	}
}


export class PreviousVersionContext extends ParserRuleContext {
	public viewRef(): ViewRefContext {
		return this.getRuleContext(0, ViewRefContext);
	}
	public reason(): ReasonContext | undefined {
		return this.tryGetRuleContext(0, ReasonContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_previousVersion; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPreviousVersion) {
			listener.enterPreviousVersion(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPreviousVersion) {
			listener.exitPreviousVersion(this);
		}
	}
}


export class PrimaryNameContext extends ParserRuleContext {
	public originalName(): OriginalNameContext {
		return this.getRuleContext(0, OriginalNameContext);
	}
	public displayName(): DisplayNameContext[];
	public displayName(i: number): DisplayNameContext;
	public displayName(i?: number): DisplayNameContext | DisplayNameContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameContext);
		} else {
			return this.getRuleContext(i, DisplayNameContext);
		}
	}
	public generated(): GeneratedContext[];
	public generated(i: number): GeneratedContext;
	public generated(i?: number): GeneratedContext | GeneratedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GeneratedContext);
		} else {
			return this.getRuleContext(i, GeneratedContext);
		}
	}
	public nameStructure(): NameStructureContext[];
	public nameStructure(i: number): NameStructureContext;
	public nameStructure(i?: number): NameStructureContext | NameStructureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameStructureContext);
		} else {
			return this.getRuleContext(i, NameStructureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_primaryName; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPrimaryName) {
			listener.enterPrimaryName(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPrimaryName) {
			listener.exitPrimaryName(this);
		}
	}
}


export class ProgramContext extends ParserRuleContext {
	public stringValue(): StringValueContext {
		return this.getRuleContext(0, StringValueContext);
	}
	public version(): VersionContext | undefined {
		return this.tryGetRuleContext(0, VersionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_program; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterProgram) {
			listener.enterProgram(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitProgram) {
			listener.exitProgram(this);
		}
	}
}


export class PropertyContext extends ParserRuleContext {
	public propertyNameDef(): PropertyNameDefContext {
		return this.getRuleContext(0, PropertyNameDefContext);
	}
	public typedValue(): TypedValueContext | undefined {
		return this.tryGetRuleContext(0, TypedValueContext);
	}
	public untyped(): UntypedContext | undefined {
		return this.tryGetRuleContext(0, UntypedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public owner(): OwnerContext[];
	public owner(i: number): OwnerContext;
	public owner(i?: number): OwnerContext | OwnerContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OwnerContext);
		} else {
			return this.getRuleContext(i, OwnerContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public propertyInheritanceControl(): PropertyInheritanceControlContext[];
	public propertyInheritanceControl(i: number): PropertyInheritanceControlContext;
	public propertyInheritanceControl(i?: number): PropertyInheritanceControlContext | PropertyInheritanceControlContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyInheritanceControlContext);
		} else {
			return this.getRuleContext(i, PropertyInheritanceControlContext);
		}
	}
	public unitRef(): UnitRefContext[];
	public unitRef(i: number): UnitRefContext;
	public unitRef(i?: number): UnitRefContext | UnitRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UnitRefContext);
		} else {
			return this.getRuleContext(i, UnitRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_property; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterProperty) {
			listener.enterProperty(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitProperty) {
			listener.exitProperty(this);
		}
	}
}


export class PropertyDisplayContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public propertyNameDisplay(): PropertyNameDisplayContext[];
	public propertyNameDisplay(i: number): PropertyNameDisplayContext;
	public propertyNameDisplay(i?: number): PropertyNameDisplayContext | PropertyNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyNameDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyNameDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_propertyDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPropertyDisplay) {
			listener.enterPropertyDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPropertyDisplay) {
			listener.exitPropertyDisplay(this);
		}
	}
}


export class PropertyDisplayOverrideContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	public propertyNameDisplay(): PropertyNameDisplayContext | undefined {
		return this.tryGetRuleContext(0, PropertyNameDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_propertyDisplayOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPropertyDisplayOverride) {
			listener.enterPropertyDisplayOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPropertyDisplayOverride) {
			listener.exitPropertyDisplayOverride(this);
		}
	}
}


export class PropertyInheritanceControlContext extends ParserRuleContext {
	public fixed(): FixedContext | undefined {
		return this.tryGetRuleContext(0, FixedContext);
	}
	public notInherited(): NotInheritedContext | undefined {
		return this.tryGetRuleContext(0, NotInheritedContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_propertyInheritanceControl; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPropertyInheritanceControl) {
			listener.enterPropertyInheritanceControl(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPropertyInheritanceControl) {
			listener.exitPropertyInheritanceControl(this);
		}
	}
}


export class PropertyNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_propertyNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPropertyNameCaseSensitive) {
			listener.enterPropertyNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPropertyNameCaseSensitive) {
			listener.exitPropertyNameCaseSensitive(this);
		}
	}
}


export class PropertyNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_propertyNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPropertyNameDef) {
			listener.enterPropertyNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPropertyNameDef) {
			listener.exitPropertyNameDef(this);
		}
	}
}


export class PropertyNameDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public displayNameOverride(): DisplayNameOverrideContext[];
	public displayNameOverride(i: number): DisplayNameOverrideContext;
	public displayNameOverride(i?: number): DisplayNameOverrideContext | DisplayNameOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameOverrideContext);
		} else {
			return this.getRuleContext(i, DisplayNameOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_propertyNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPropertyNameDisplay) {
			listener.enterPropertyNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPropertyNameDisplay) {
			listener.exitPropertyNameDisplay(this);
		}
	}
}


export class PropertyNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_propertyNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPropertyNameRef) {
			listener.enterPropertyNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPropertyNameRef) {
			listener.exitPropertyNameRef(this);
		}
	}
}


export class PropertyOverrideContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public typedValue(): TypedValueContext | undefined {
		return this.tryGetRuleContext(0, TypedValueContext);
	}
	public untyped(): UntypedContext | undefined {
		return this.tryGetRuleContext(0, UntypedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public fixed(): FixedContext[];
	public fixed(i: number): FixedContext;
	public fixed(i?: number): FixedContext | FixedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FixedContext);
		} else {
			return this.getRuleContext(i, FixedContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_propertyOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPropertyOverride) {
			listener.enterPropertyOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPropertyOverride) {
			listener.exitPropertyOverride(this);
		}
	}
}


export class ProportionalFontContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_proportionalFont; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterProportionalFont) {
			listener.enterProportionalFont(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitProportionalFont) {
			listener.exitProportionalFont(this);
		}
	}
}


export class PtContext extends ParserRuleContext {
	public xCoordinate(): XCoordinateContext {
		return this.getRuleContext(0, XCoordinateContext);
	}
	public yCoordinate(): YCoordinateContext {
		return this.getRuleContext(0, YCoordinateContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pt; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPt) {
			listener.enterPt(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPt) {
			listener.exitPt(this);
		}
	}
}


export class Pt1Context extends ParserRuleContext {
	public pointValue(): PointValueContext {
		return this.getRuleContext(0, PointValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pt1; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPt1) {
			listener.enterPt1(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPt1) {
			listener.exitPt1(this);
		}
	}
}


export class Pt2Context extends ParserRuleContext {
	public pointValue(): PointValueContext {
		return this.getRuleContext(0, PointValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_pt2; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterPt2) {
			listener.enterPt2(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitPt2) {
			listener.exitPt2(this);
		}
	}
}


export class RadianContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_radian; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRadian) {
			listener.enterRadian(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRadian) {
			listener.exitRadian(this);
		}
	}
}


export class ReasonContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_reason; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterReason) {
			listener.enterReason(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitReason) {
			listener.exitReason(this);
		}
	}
}


export class RectangleContext extends ParserRuleContext {
	public pt1(): Pt1Context {
		return this.getRuleContext(0, Pt1Context);
	}
	public pt2(): Pt2Context {
		return this.getRuleContext(0, Pt2Context);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_rectangle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRectangle) {
			listener.enterRectangle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRectangle) {
			listener.exitRectangle(this);
		}
	}
}


export class RedContext extends ParserRuleContext {
	public scaledInteger(): ScaledIntegerContext {
		return this.getRuleContext(0, ScaledIntegerContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_red; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRed) {
			listener.enterRed(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRed) {
			listener.exitRed(this);
		}
	}
}


export class RemoveDisplayContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_removeDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRemoveDisplay) {
			listener.enterRemoveDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRemoveDisplay) {
			listener.exitRemoveDisplay(this);
		}
	}
}


export class RepetitionCountContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_repetitionCount; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRepetitionCount) {
			listener.enterRepetitionCount(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRepetitionCount) {
			listener.exitRepetitionCount(this);
		}
	}
}


export class RepetitionCountDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_repetitionCountDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRepetitionCountDisplay) {
			listener.enterRepetitionCountDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRepetitionCountDisplay) {
			listener.exitRepetitionCountDisplay(this);
		}
	}
}


export class ReplaceDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_replaceDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterReplaceDisplay) {
			listener.enterReplaceDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitReplaceDisplay) {
			listener.exitReplaceDisplay(this);
		}
	}
}


export class RequiredContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_required; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRequired) {
			listener.enterRequired(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRequired) {
			listener.exitRequired(this);
		}
	}
}


export class ResolvesContext extends ParserRuleContext {
	public logicNameRef(): LogicNameRefContext[];
	public logicNameRef(i: number): LogicNameRefContext;
	public logicNameRef(i?: number): LogicNameRefContext | LogicNameRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicNameRefContext);
		} else {
			return this.getRuleContext(i, LogicNameRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_resolves; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterResolves) {
			listener.enterResolves(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitResolves) {
			listener.exitResolves(this);
		}
	}
}


export class RevisionContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_revision; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRevision) {
			listener.enterRevision(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRevision) {
			listener.exitRevision(this);
		}
	}
}


export class RevisionDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_revisionDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRevisionDisplay) {
			listener.enterRevisionDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRevisionDisplay) {
			listener.exitRevisionDisplay(this);
		}
	}
}


export class RightJustifyContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_rightJustify; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRightJustify) {
			listener.enterRightJustify(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRightJustify) {
			listener.exitRightJustify(this);
		}
	}
}


export class RipperHotspotContext extends ParserRuleContext {
	public hotspotNameDef(): HotspotNameDefContext {
		return this.getRuleContext(0, HotspotNameDefContext);
	}
	public hotspot(): HotspotContext {
		return this.getRuleContext(0, HotspotContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ripperHotspot; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRipperHotspot) {
			listener.enterRipperHotspot(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRipperHotspot) {
			listener.exitRipperHotspot(this);
		}
	}
}


export class RipperHotspotRefContext extends ParserRuleContext {
	public hotspotNameRef(): HotspotNameRefContext {
		return this.getRuleContext(0, HotspotNameRefContext);
	}
	public schematicRipperImplementationRef(): SchematicRipperImplementationRefContext {
		return this.getRuleContext(0, SchematicRipperImplementationRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_ripperHotspotRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRipperHotspotRef) {
			listener.enterRipperHotspotRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRipperHotspotRef) {
			listener.exitRipperHotspotRef(this);
		}
	}
}


export class RotationContext extends ParserRuleContext {
	public angleValue(): AngleValueContext {
		return this.getRuleContext(0, AngleValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_rotation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRotation) {
			listener.enterRotation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRotation) {
			listener.exitRotation(this);
		}
	}
}


export class RoundContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_round; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRound) {
			listener.enterRound(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRound) {
			listener.exitRound(this);
		}
	}
}


export class RowSizeContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_rowSize; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterRowSize) {
			listener.enterRowSize(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitRowSize) {
			listener.exitRowSize(this);
		}
	}
}


export class ScaledIntegerContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext | undefined {
		return this.tryGetRuleContext(0, IntegerTokenContext);
	}
	public e(): EContext | undefined {
		return this.tryGetRuleContext(0, EContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_scaledInteger; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterScaledInteger) {
			listener.enterScaledInteger(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitScaledInteger) {
			listener.exitScaledInteger(this);
		}
	}
}


export class ScaleXContext extends ParserRuleContext {
	public numerator(): NumeratorContext {
		return this.getRuleContext(0, NumeratorContext);
	}
	public denominator(): DenominatorContext {
		return this.getRuleContext(0, DenominatorContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_scaleX; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterScaleX) {
			listener.enterScaleX(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitScaleX) {
			listener.exitScaleX(this);
		}
	}
}


export class ScaleYContext extends ParserRuleContext {
	public numerator(): NumeratorContext {
		return this.getRuleContext(0, NumeratorContext);
	}
	public denominator(): DenominatorContext {
		return this.getRuleContext(0, DenominatorContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_scaleY; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterScaleY) {
			listener.enterScaleY(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitScaleY) {
			listener.exitScaleY(this);
		}
	}
}


export class SchematicBusContext extends ParserRuleContext {
	public interconnectNameDef(): InterconnectNameDefContext {
		return this.getRuleContext(0, InterconnectNameDefContext);
	}
	public signalGroupRef(): SignalGroupRefContext {
		return this.getRuleContext(0, SignalGroupRefContext);
	}
	public schematicInterconnectHeader(): SchematicInterconnectHeaderContext {
		return this.getRuleContext(0, SchematicInterconnectHeaderContext);
	}
	public schematicBusJoined(): SchematicBusJoinedContext {
		return this.getRuleContext(0, SchematicBusJoinedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public schematicBusDetails(): SchematicBusDetailsContext[];
	public schematicBusDetails(i: number): SchematicBusDetailsContext;
	public schematicBusDetails(i?: number): SchematicBusDetailsContext | SchematicBusDetailsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicBusDetailsContext);
		} else {
			return this.getRuleContext(i, SchematicBusDetailsContext);
		}
	}
	public schematicBusSlice(): SchematicBusSliceContext[];
	public schematicBusSlice(i: number): SchematicBusSliceContext;
	public schematicBusSlice(i?: number): SchematicBusSliceContext | SchematicBusSliceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicBusSliceContext);
		} else {
			return this.getRuleContext(i, SchematicBusSliceContext);
		}
	}
	public schematicInterconnectAttributeDisplay(): SchematicInterconnectAttributeDisplayContext[];
	public schematicInterconnectAttributeDisplay(i: number): SchematicInterconnectAttributeDisplayContext;
	public schematicInterconnectAttributeDisplay(i?: number): SchematicInterconnectAttributeDisplayContext | SchematicInterconnectAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInterconnectAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, SchematicInterconnectAttributeDisplayContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicBus; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicBus) {
			listener.enterSchematicBus(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicBus) {
			listener.exitSchematicBus(this);
		}
	}
}


export class SchematicBusDetailsContext extends ParserRuleContext {
	public schematicBusGraphics(): SchematicBusGraphicsContext | undefined {
		return this.tryGetRuleContext(0, SchematicBusGraphicsContext);
	}
	public schematicSubBusSet(): SchematicSubBusSetContext | undefined {
		return this.tryGetRuleContext(0, SchematicSubBusSetContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicBusDetails; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicBusDetails) {
			listener.enterSchematicBusDetails(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicBusDetails) {
			listener.exitSchematicBusDetails(this);
		}
	}
}


export class SchematicBusGraphicsContext extends ParserRuleContext {
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicBusGraphics; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicBusGraphics) {
			listener.enterSchematicBusGraphics(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicBusGraphics) {
			listener.exitSchematicBusGraphics(this);
		}
	}
}


export class SchematicBusJoinedContext extends ParserRuleContext {
	public portJoined(): PortJoinedContext[];
	public portJoined(i: number): PortJoinedContext;
	public portJoined(i?: number): PortJoinedContext | PortJoinedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortJoinedContext);
		} else {
			return this.getRuleContext(i, PortJoinedContext);
		}
	}
	public ripperHotspotRef(): RipperHotspotRefContext[];
	public ripperHotspotRef(i: number): RipperHotspotRefContext;
	public ripperHotspotRef(i?: number): RipperHotspotRefContext | RipperHotspotRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RipperHotspotRefContext);
		} else {
			return this.getRuleContext(i, RipperHotspotRefContext);
		}
	}
	public schematicGlobalPortImplementationRef(): SchematicGlobalPortImplementationRefContext[];
	public schematicGlobalPortImplementationRef(i: number): SchematicGlobalPortImplementationRefContext;
	public schematicGlobalPortImplementationRef(i?: number): SchematicGlobalPortImplementationRefContext | SchematicGlobalPortImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicGlobalPortImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicGlobalPortImplementationRefContext);
		}
	}
	public schematicInterconnectTerminatorImplementationRef(): SchematicInterconnectTerminatorImplementationRefContext[];
	public schematicInterconnectTerminatorImplementationRef(i: number): SchematicInterconnectTerminatorImplementationRefContext;
	public schematicInterconnectTerminatorImplementationRef(i?: number): SchematicInterconnectTerminatorImplementationRefContext | SchematicInterconnectTerminatorImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInterconnectTerminatorImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicInterconnectTerminatorImplementationRefContext);
		}
	}
	public schematicJunctionImplementationRef(): SchematicJunctionImplementationRefContext[];
	public schematicJunctionImplementationRef(i: number): SchematicJunctionImplementationRefContext;
	public schematicJunctionImplementationRef(i?: number): SchematicJunctionImplementationRefContext | SchematicJunctionImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicJunctionImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicJunctionImplementationRefContext);
		}
	}
	public schematicMasterPortImplementationRef(): SchematicMasterPortImplementationRefContext[];
	public schematicMasterPortImplementationRef(i: number): SchematicMasterPortImplementationRefContext;
	public schematicMasterPortImplementationRef(i?: number): SchematicMasterPortImplementationRefContext | SchematicMasterPortImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicMasterPortImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicMasterPortImplementationRefContext);
		}
	}
	public schematicOffPageConnectorImplementationRef(): SchematicOffPageConnectorImplementationRefContext[];
	public schematicOffPageConnectorImplementationRef(i: number): SchematicOffPageConnectorImplementationRefContext;
	public schematicOffPageConnectorImplementationRef(i?: number): SchematicOffPageConnectorImplementationRefContext | SchematicOffPageConnectorImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOffPageConnectorImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicOffPageConnectorImplementationRefContext);
		}
	}
	public schematicOnPageConnectorImplementationRef(): SchematicOnPageConnectorImplementationRefContext[];
	public schematicOnPageConnectorImplementationRef(i: number): SchematicOnPageConnectorImplementationRefContext;
	public schematicOnPageConnectorImplementationRef(i?: number): SchematicOnPageConnectorImplementationRefContext | SchematicOnPageConnectorImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOnPageConnectorImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicOnPageConnectorImplementationRefContext);
		}
	}
	public schematicSymbolPortImplementationRef(): SchematicSymbolPortImplementationRefContext[];
	public schematicSymbolPortImplementationRef(i: number): SchematicSymbolPortImplementationRefContext;
	public schematicSymbolPortImplementationRef(i?: number): SchematicSymbolPortImplementationRefContext | SchematicSymbolPortImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSymbolPortImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicSymbolPortImplementationRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicBusJoined; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicBusJoined) {
			listener.enterSchematicBusJoined(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicBusJoined) {
			listener.exitSchematicBusJoined(this);
		}
	}
}


export class SchematicBusSliceContext extends ParserRuleContext {
	public interconnectNameDef(): InterconnectNameDefContext {
		return this.getRuleContext(0, InterconnectNameDefContext);
	}
	public signalGroupRef(): SignalGroupRefContext {
		return this.getRuleContext(0, SignalGroupRefContext);
	}
	public schematicInterconnectHeader(): SchematicInterconnectHeaderContext {
		return this.getRuleContext(0, SchematicInterconnectHeaderContext);
	}
	public schematicBusJoined(): SchematicBusJoinedContext {
		return this.getRuleContext(0, SchematicBusJoinedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public schematicBusDetails(): SchematicBusDetailsContext[];
	public schematicBusDetails(i: number): SchematicBusDetailsContext;
	public schematicBusDetails(i?: number): SchematicBusDetailsContext | SchematicBusDetailsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicBusDetailsContext);
		} else {
			return this.getRuleContext(i, SchematicBusDetailsContext);
		}
	}
	public schematicBusSlice(): SchematicBusSliceContext[];
	public schematicBusSlice(i: number): SchematicBusSliceContext;
	public schematicBusSlice(i?: number): SchematicBusSliceContext | SchematicBusSliceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicBusSliceContext);
		} else {
			return this.getRuleContext(i, SchematicBusSliceContext);
		}
	}
	public schematicInterconnectAttributeDisplay(): SchematicInterconnectAttributeDisplayContext[];
	public schematicInterconnectAttributeDisplay(i: number): SchematicInterconnectAttributeDisplayContext;
	public schematicInterconnectAttributeDisplay(i?: number): SchematicInterconnectAttributeDisplayContext | SchematicInterconnectAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInterconnectAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, SchematicInterconnectAttributeDisplayContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicBusSlice; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicBusSlice) {
			listener.enterSchematicBusSlice(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicBusSlice) {
			listener.exitSchematicBusSlice(this);
		}
	}
}


export class SchematicComplexFigureContext extends ParserRuleContext {
	public schematicFigureMacroRef(): SchematicFigureMacroRefContext {
		return this.getRuleContext(0, SchematicFigureMacroRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicComplexFigure; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicComplexFigure) {
			listener.enterSchematicComplexFigure(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicComplexFigure) {
			listener.exitSchematicComplexFigure(this);
		}
	}
}


export class SchematicFigureMacroContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicFigureMacro; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicFigureMacro) {
			listener.enterSchematicFigureMacro(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicFigureMacro) {
			listener.exitSchematicFigureMacro(this);
		}
	}
}


export class SchematicFigureMacroRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicFigureMacroRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicFigureMacroRef) {
			listener.enterSchematicFigureMacroRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicFigureMacroRef) {
			listener.exitSchematicFigureMacroRef(this);
		}
	}
}


export class SchematicForFrameBorderContext extends ParserRuleContext {
	public schematicForFrameBorderTemplateRef(): SchematicForFrameBorderTemplateRefContext {
		return this.getRuleContext(0, SchematicForFrameBorderTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public forFrameIndexDisplay(): ForFrameIndexDisplayContext[];
	public forFrameIndexDisplay(i: number): ForFrameIndexDisplayContext;
	public forFrameIndexDisplay(i?: number): ForFrameIndexDisplayContext | ForFrameIndexDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ForFrameIndexDisplayContext);
		} else {
			return this.getRuleContext(i, ForFrameIndexDisplayContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	public repetitionCountDisplay(): RepetitionCountDisplayContext[];
	public repetitionCountDisplay(i: number): RepetitionCountDisplayContext;
	public repetitionCountDisplay(i?: number): RepetitionCountDisplayContext | RepetitionCountDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RepetitionCountDisplayContext);
		} else {
			return this.getRuleContext(i, RepetitionCountDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicForFrameBorder; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicForFrameBorder) {
			listener.enterSchematicForFrameBorder(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicForFrameBorder) {
			listener.exitSchematicForFrameBorder(this);
		}
	}
}


export class SchematicForFrameBorderTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public usableArea(): UsableAreaContext {
		return this.getRuleContext(0, UsableAreaContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public forFrameIndexDisplay(): ForFrameIndexDisplayContext[];
	public forFrameIndexDisplay(i: number): ForFrameIndexDisplayContext;
	public forFrameIndexDisplay(i?: number): ForFrameIndexDisplayContext | ForFrameIndexDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ForFrameIndexDisplayContext);
		} else {
			return this.getRuleContext(i, ForFrameIndexDisplayContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public repetitionCountDisplay(): RepetitionCountDisplayContext[];
	public repetitionCountDisplay(i: number): RepetitionCountDisplayContext;
	public repetitionCountDisplay(i?: number): RepetitionCountDisplayContext | RepetitionCountDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RepetitionCountDisplayContext);
		} else {
			return this.getRuleContext(i, RepetitionCountDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicForFrameBorderTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicForFrameBorderTemplate) {
			listener.enterSchematicForFrameBorderTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicForFrameBorderTemplate) {
			listener.exitSchematicForFrameBorderTemplate(this);
		}
	}
}


export class SchematicForFrameBorderTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicForFrameBorderTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicForFrameBorderTemplateRef) {
			listener.enterSchematicForFrameBorderTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicForFrameBorderTemplateRef) {
			listener.exitSchematicForFrameBorderTemplateRef(this);
		}
	}
}


export class SchematicForFrameImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public forFrameRef(): ForFrameRefContext {
		return this.getRuleContext(0, ForFrameRefContext);
	}
	public schematicForFrameImplementationHeader(): SchematicForFrameImplementationHeaderContext {
		return this.getRuleContext(0, SchematicForFrameImplementationHeaderContext);
	}
	public schematicFrameImplementationDetails(): SchematicFrameImplementationDetailsContext {
		return this.getRuleContext(0, SchematicFrameImplementationDetailsContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicForFrameImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicForFrameImplementation) {
			listener.enterSchematicForFrameImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicForFrameImplementation) {
			listener.exitSchematicForFrameImplementation(this);
		}
	}
}


export class SchematicForFrameImplementationHeaderContext extends ParserRuleContext {
	public schematicForFrameBorder(): SchematicForFrameBorderContext | undefined {
		return this.tryGetRuleContext(0, SchematicForFrameBorderContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicForFrameImplementationHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicForFrameImplementationHeader) {
			listener.enterSchematicForFrameImplementationHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicForFrameImplementationHeader) {
			listener.exitSchematicForFrameImplementationHeader(this);
		}
	}
}


export class SchematicFrameImplementationDetailsContext extends ParserRuleContext {
	public cellPropertyDisplay(): CellPropertyDisplayContext[];
	public cellPropertyDisplay(i: number): CellPropertyDisplayContext;
	public cellPropertyDisplay(i?: number): CellPropertyDisplayContext | CellPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, CellPropertyDisplayContext);
		}
	}
	public clusterPropertyDisplay(): ClusterPropertyDisplayContext[];
	public clusterPropertyDisplay(i: number): ClusterPropertyDisplayContext;
	public clusterPropertyDisplay(i?: number): ClusterPropertyDisplayContext | ClusterPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, ClusterPropertyDisplayContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicBus(): SchematicBusContext[];
	public schematicBus(i: number): SchematicBusContext;
	public schematicBus(i?: number): SchematicBusContext | SchematicBusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicBusContext);
		} else {
			return this.getRuleContext(i, SchematicBusContext);
		}
	}
	public schematicForFrameImplementation(): SchematicForFrameImplementationContext[];
	public schematicForFrameImplementation(i: number): SchematicForFrameImplementationContext;
	public schematicForFrameImplementation(i?: number): SchematicForFrameImplementationContext | SchematicForFrameImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicForFrameImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicForFrameImplementationContext);
		}
	}
	public schematicGlobalPortImplementation(): SchematicGlobalPortImplementationContext[];
	public schematicGlobalPortImplementation(i: number): SchematicGlobalPortImplementationContext;
	public schematicGlobalPortImplementation(i?: number): SchematicGlobalPortImplementationContext | SchematicGlobalPortImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicGlobalPortImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicGlobalPortImplementationContext);
		}
	}
	public schematicIfFrameImplementation(): SchematicIfFrameImplementationContext[];
	public schematicIfFrameImplementation(i: number): SchematicIfFrameImplementationContext;
	public schematicIfFrameImplementation(i?: number): SchematicIfFrameImplementationContext | SchematicIfFrameImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicIfFrameImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicIfFrameImplementationContext);
		}
	}
	public schematicInstanceImplementation(): SchematicInstanceImplementationContext[];
	public schematicInstanceImplementation(i: number): SchematicInstanceImplementationContext;
	public schematicInstanceImplementation(i?: number): SchematicInstanceImplementationContext | SchematicInstanceImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInstanceImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicInstanceImplementationContext);
		}
	}
	public schematicMasterPortImplementation(): SchematicMasterPortImplementationContext[];
	public schematicMasterPortImplementation(i: number): SchematicMasterPortImplementationContext;
	public schematicMasterPortImplementation(i?: number): SchematicMasterPortImplementationContext | SchematicMasterPortImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicMasterPortImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicMasterPortImplementationContext);
		}
	}
	public schematicNet(): SchematicNetContext[];
	public schematicNet(i: number): SchematicNetContext;
	public schematicNet(i?: number): SchematicNetContext | SchematicNetContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicNetContext);
		} else {
			return this.getRuleContext(i, SchematicNetContext);
		}
	}
	public schematicOffPageConnectorImplementation(): SchematicOffPageConnectorImplementationContext[];
	public schematicOffPageConnectorImplementation(i: number): SchematicOffPageConnectorImplementationContext;
	public schematicOffPageConnectorImplementation(i?: number): SchematicOffPageConnectorImplementationContext | SchematicOffPageConnectorImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOffPageConnectorImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicOffPageConnectorImplementationContext);
		}
	}
	public schematicOnPageConnectorImplementation(): SchematicOnPageConnectorImplementationContext[];
	public schematicOnPageConnectorImplementation(i: number): SchematicOnPageConnectorImplementationContext;
	public schematicOnPageConnectorImplementation(i?: number): SchematicOnPageConnectorImplementationContext | SchematicOnPageConnectorImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOnPageConnectorImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicOnPageConnectorImplementationContext);
		}
	}
	public schematicOtherwiseFrameImplementation(): SchematicOtherwiseFrameImplementationContext[];
	public schematicOtherwiseFrameImplementation(i: number): SchematicOtherwiseFrameImplementationContext;
	public schematicOtherwiseFrameImplementation(i?: number): SchematicOtherwiseFrameImplementationContext | SchematicOtherwiseFrameImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOtherwiseFrameImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicOtherwiseFrameImplementationContext);
		}
	}
	public schematicRipperImplementation(): SchematicRipperImplementationContext[];
	public schematicRipperImplementation(i: number): SchematicRipperImplementationContext;
	public schematicRipperImplementation(i?: number): SchematicRipperImplementationContext | SchematicRipperImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicRipperImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicRipperImplementationContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	public viewPropertyDisplay(): ViewPropertyDisplayContext[];
	public viewPropertyDisplay(i: number): ViewPropertyDisplayContext;
	public viewPropertyDisplay(i?: number): ViewPropertyDisplayContext | ViewPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, ViewPropertyDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicFrameImplementationDetails; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicFrameImplementationDetails) {
			listener.enterSchematicFrameImplementationDetails(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicFrameImplementationDetails) {
			listener.exitSchematicFrameImplementationDetails(this);
		}
	}
}


export class SchematicGlobalPortAttributesContext extends ParserRuleContext {
	public ieeeStandard(): IeeeStandardContext[];
	public ieeeStandard(i: number): IeeeStandardContext;
	public ieeeStandard(i?: number): IeeeStandardContext | IeeeStandardContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IeeeStandardContext);
		} else {
			return this.getRuleContext(i, IeeeStandardContext);
		}
	}
	public schematicPortAcPower(): SchematicPortAcPowerContext[];
	public schematicPortAcPower(i: number): SchematicPortAcPowerContext;
	public schematicPortAcPower(i?: number): SchematicPortAcPowerContext | SchematicPortAcPowerContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortAcPowerContext);
		} else {
			return this.getRuleContext(i, SchematicPortAcPowerContext);
		}
	}
	public schematicPortAnalog(): SchematicPortAnalogContext[];
	public schematicPortAnalog(i: number): SchematicPortAnalogContext;
	public schematicPortAnalog(i?: number): SchematicPortAnalogContext | SchematicPortAnalogContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortAnalogContext);
		} else {
			return this.getRuleContext(i, SchematicPortAnalogContext);
		}
	}
	public schematicPortChassisGround(): SchematicPortChassisGroundContext[];
	public schematicPortChassisGround(i: number): SchematicPortChassisGroundContext;
	public schematicPortChassisGround(i?: number): SchematicPortChassisGroundContext | SchematicPortChassisGroundContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortChassisGroundContext);
		} else {
			return this.getRuleContext(i, SchematicPortChassisGroundContext);
		}
	}
	public schematicPortClock(): SchematicPortClockContext[];
	public schematicPortClock(i: number): SchematicPortClockContext;
	public schematicPortClock(i?: number): SchematicPortClockContext | SchematicPortClockContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortClockContext);
		} else {
			return this.getRuleContext(i, SchematicPortClockContext);
		}
	}
	public schematicPortDcPower(): SchematicPortDcPowerContext[];
	public schematicPortDcPower(i: number): SchematicPortDcPowerContext;
	public schematicPortDcPower(i?: number): SchematicPortDcPowerContext | SchematicPortDcPowerContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortDcPowerContext);
		} else {
			return this.getRuleContext(i, SchematicPortDcPowerContext);
		}
	}
	public schematicPortEarthGround(): SchematicPortEarthGroundContext[];
	public schematicPortEarthGround(i: number): SchematicPortEarthGroundContext;
	public schematicPortEarthGround(i?: number): SchematicPortEarthGroundContext | SchematicPortEarthGroundContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortEarthGroundContext);
		} else {
			return this.getRuleContext(i, SchematicPortEarthGroundContext);
		}
	}
	public schematicPortGround(): SchematicPortGroundContext[];
	public schematicPortGround(i: number): SchematicPortGroundContext;
	public schematicPortGround(i?: number): SchematicPortGroundContext | SchematicPortGroundContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortGroundContext);
		} else {
			return this.getRuleContext(i, SchematicPortGroundContext);
		}
	}
	public schematicPortNonLogical(): SchematicPortNonLogicalContext[];
	public schematicPortNonLogical(i: number): SchematicPortNonLogicalContext;
	public schematicPortNonLogical(i?: number): SchematicPortNonLogicalContext | SchematicPortNonLogicalContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortNonLogicalContext);
		} else {
			return this.getRuleContext(i, SchematicPortNonLogicalContext);
		}
	}
	public schematicPortOpenCollector(): SchematicPortOpenCollectorContext[];
	public schematicPortOpenCollector(i: number): SchematicPortOpenCollectorContext;
	public schematicPortOpenCollector(i?: number): SchematicPortOpenCollectorContext | SchematicPortOpenCollectorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortOpenCollectorContext);
		} else {
			return this.getRuleContext(i, SchematicPortOpenCollectorContext);
		}
	}
	public schematicPortOpenEmitter(): SchematicPortOpenEmitterContext[];
	public schematicPortOpenEmitter(i: number): SchematicPortOpenEmitterContext;
	public schematicPortOpenEmitter(i?: number): SchematicPortOpenEmitterContext | SchematicPortOpenEmitterContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortOpenEmitterContext);
		} else {
			return this.getRuleContext(i, SchematicPortOpenEmitterContext);
		}
	}
	public schematicPortPower(): SchematicPortPowerContext[];
	public schematicPortPower(i: number): SchematicPortPowerContext;
	public schematicPortPower(i?: number): SchematicPortPowerContext | SchematicPortPowerContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortPowerContext);
		} else {
			return this.getRuleContext(i, SchematicPortPowerContext);
		}
	}
	public schematicPortThreeState(): SchematicPortThreeStateContext[];
	public schematicPortThreeState(i: number): SchematicPortThreeStateContext;
	public schematicPortThreeState(i?: number): SchematicPortThreeStateContext | SchematicPortThreeStateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortThreeStateContext);
		} else {
			return this.getRuleContext(i, SchematicPortThreeStateContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicGlobalPortAttributes; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicGlobalPortAttributes) {
			listener.enterSchematicGlobalPortAttributes(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicGlobalPortAttributes) {
			listener.exitSchematicGlobalPortAttributes(this);
		}
	}
}


export class SchematicGlobalPortImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public schematicGlobalPortTemplateRef(): SchematicGlobalPortTemplateRefContext {
		return this.getRuleContext(0, SchematicGlobalPortTemplateRefContext);
	}
	public globalPortRef(): GlobalPortRefContext {
		return this.getRuleContext(0, GlobalPortRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public globalPortNameDisplay(): GlobalPortNameDisplayContext[];
	public globalPortNameDisplay(i: number): GlobalPortNameDisplayContext;
	public globalPortNameDisplay(i?: number): GlobalPortNameDisplayContext | GlobalPortNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortNameDisplayContext);
		} else {
			return this.getRuleContext(i, GlobalPortNameDisplayContext);
		}
	}
	public globalPortPropertyDisplay(): GlobalPortPropertyDisplayContext[];
	public globalPortPropertyDisplay(i: number): GlobalPortPropertyDisplayContext;
	public globalPortPropertyDisplay(i?: number): GlobalPortPropertyDisplayContext | GlobalPortPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, GlobalPortPropertyDisplayContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicGlobalPortImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicGlobalPortImplementation) {
			listener.enterSchematicGlobalPortImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicGlobalPortImplementation) {
			listener.exitSchematicGlobalPortImplementation(this);
		}
	}
}


export class SchematicGlobalPortImplementationRefContext extends ParserRuleContext {
	public implementationNameRef(): ImplementationNameRefContext {
		return this.getRuleContext(0, ImplementationNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicGlobalPortImplementationRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicGlobalPortImplementationRef) {
			listener.enterSchematicGlobalPortImplementationRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicGlobalPortImplementationRef) {
			listener.exitSchematicGlobalPortImplementationRef(this);
		}
	}
}


export class SchematicGlobalPortTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public hotspot(): HotspotContext[];
	public hotspot(i: number): HotspotContext;
	public hotspot(i?: number): HotspotContext | HotspotContext[] {
		if (i === undefined) {
			return this.getRuleContexts(HotspotContext);
		} else {
			return this.getRuleContext(i, HotspotContext);
		}
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public globalPortNameDisplay(): GlobalPortNameDisplayContext[];
	public globalPortNameDisplay(i: number): GlobalPortNameDisplayContext;
	public globalPortNameDisplay(i?: number): GlobalPortNameDisplayContext | GlobalPortNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortNameDisplayContext);
		} else {
			return this.getRuleContext(i, GlobalPortNameDisplayContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	public schematicGlobalPortAttributes(): SchematicGlobalPortAttributesContext[];
	public schematicGlobalPortAttributes(i: number): SchematicGlobalPortAttributesContext;
	public schematicGlobalPortAttributes(i?: number): SchematicGlobalPortAttributesContext | SchematicGlobalPortAttributesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicGlobalPortAttributesContext);
		} else {
			return this.getRuleContext(i, SchematicGlobalPortAttributesContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicGlobalPortTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicGlobalPortTemplate) {
			listener.enterSchematicGlobalPortTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicGlobalPortTemplate) {
			listener.exitSchematicGlobalPortTemplate(this);
		}
	}
}


export class SchematicGlobalPortTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicGlobalPortTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicGlobalPortTemplateRef) {
			listener.enterSchematicGlobalPortTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicGlobalPortTemplateRef) {
			listener.exitSchematicGlobalPortTemplateRef(this);
		}
	}
}


export class SchematicIfFrameBorderContext extends ParserRuleContext {
	public schematicIfFrameBorderTemplateRef(): SchematicIfFrameBorderTemplateRefContext {
		return this.getRuleContext(0, SchematicIfFrameBorderTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public conditionDisplay(): ConditionDisplayContext[];
	public conditionDisplay(i: number): ConditionDisplayContext;
	public conditionDisplay(i?: number): ConditionDisplayContext | ConditionDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConditionDisplayContext);
		} else {
			return this.getRuleContext(i, ConditionDisplayContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicIfFrameBorder; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicIfFrameBorder) {
			listener.enterSchematicIfFrameBorder(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicIfFrameBorder) {
			listener.exitSchematicIfFrameBorder(this);
		}
	}
}


export class SchematicIfFrameBorderTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public usableArea(): UsableAreaContext {
		return this.getRuleContext(0, UsableAreaContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public conditionDisplay(): ConditionDisplayContext[];
	public conditionDisplay(i: number): ConditionDisplayContext;
	public conditionDisplay(i?: number): ConditionDisplayContext | ConditionDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConditionDisplayContext);
		} else {
			return this.getRuleContext(i, ConditionDisplayContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicIfFrameBorderTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicIfFrameBorderTemplate) {
			listener.enterSchematicIfFrameBorderTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicIfFrameBorderTemplate) {
			listener.exitSchematicIfFrameBorderTemplate(this);
		}
	}
}


export class SchematicIfFrameBorderTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicIfFrameBorderTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicIfFrameBorderTemplateRef) {
			listener.enterSchematicIfFrameBorderTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicIfFrameBorderTemplateRef) {
			listener.exitSchematicIfFrameBorderTemplateRef(this);
		}
	}
}


export class SchematicIfFrameImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public ifFrameRef(): IfFrameRefContext {
		return this.getRuleContext(0, IfFrameRefContext);
	}
	public schematicIfFrameImplementationHeader(): SchematicIfFrameImplementationHeaderContext {
		return this.getRuleContext(0, SchematicIfFrameImplementationHeaderContext);
	}
	public schematicFrameImplementationDetails(): SchematicFrameImplementationDetailsContext {
		return this.getRuleContext(0, SchematicFrameImplementationDetailsContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicIfFrameImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicIfFrameImplementation) {
			listener.enterSchematicIfFrameImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicIfFrameImplementation) {
			listener.exitSchematicIfFrameImplementation(this);
		}
	}
}


export class SchematicIfFrameImplementationHeaderContext extends ParserRuleContext {
	public schematicIfFrameBorder(): SchematicIfFrameBorderContext | undefined {
		return this.tryGetRuleContext(0, SchematicIfFrameBorderContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicIfFrameImplementationHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicIfFrameImplementationHeader) {
			listener.enterSchematicIfFrameImplementationHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicIfFrameImplementationHeader) {
			listener.exitSchematicIfFrameImplementationHeader(this);
		}
	}
}


export class SchematicImplementationContext extends ParserRuleContext {
	public page(): PageContext[];
	public page(i: number): PageContext;
	public page(i?: number): PageContext | PageContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageContext);
		} else {
			return this.getRuleContext(i, PageContext);
		}
	}
	public totalPages(): TotalPagesContext[];
	public totalPages(i: number): TotalPagesContext;
	public totalPages(i?: number): TotalPagesContext | TotalPagesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TotalPagesContext);
		} else {
			return this.getRuleContext(i, TotalPagesContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicImplementation) {
			listener.enterSchematicImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicImplementation) {
			listener.exitSchematicImplementation(this);
		}
	}
}


export class SchematicInstanceImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public instanceRef(): InstanceRefContext {
		return this.getRuleContext(0, InstanceRefContext);
	}
	public schematicSymbolRef(): SchematicSymbolRefContext {
		return this.getRuleContext(0, SchematicSymbolRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public cellNameDisplay(): CellNameDisplayContext[];
	public cellNameDisplay(i: number): CellNameDisplayContext;
	public cellNameDisplay(i?: number): CellNameDisplayContext | CellNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellNameDisplayContext);
		} else {
			return this.getRuleContext(i, CellNameDisplayContext);
		}
	}
	public cellPropertyDisplayOverride(): CellPropertyDisplayOverrideContext[];
	public cellPropertyDisplayOverride(i: number): CellPropertyDisplayOverrideContext;
	public cellPropertyDisplayOverride(i?: number): CellPropertyDisplayOverrideContext | CellPropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellPropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, CellPropertyDisplayOverrideContext);
		}
	}
	public clusterPropertyDisplayOverride(): ClusterPropertyDisplayOverrideContext[];
	public clusterPropertyDisplayOverride(i: number): ClusterPropertyDisplayOverrideContext;
	public clusterPropertyDisplayOverride(i?: number): ClusterPropertyDisplayOverrideContext | ClusterPropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterPropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, ClusterPropertyDisplayOverrideContext);
		}
	}
	public designatorDisplay(): DesignatorDisplayContext[];
	public designatorDisplay(i: number): DesignatorDisplayContext;
	public designatorDisplay(i?: number): DesignatorDisplayContext | DesignatorDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorDisplayContext);
		} else {
			return this.getRuleContext(i, DesignatorDisplayContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public instanceNameDisplay(): InstanceNameDisplayContext[];
	public instanceNameDisplay(i: number): InstanceNameDisplayContext;
	public instanceNameDisplay(i?: number): InstanceNameDisplayContext | InstanceNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceNameDisplayContext);
		} else {
			return this.getRuleContext(i, InstanceNameDisplayContext);
		}
	}
	public instanceNameGeneratorDisplay(): InstanceNameGeneratorDisplayContext[];
	public instanceNameGeneratorDisplay(i: number): InstanceNameGeneratorDisplayContext;
	public instanceNameGeneratorDisplay(i?: number): InstanceNameGeneratorDisplayContext | InstanceNameGeneratorDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceNameGeneratorDisplayContext);
		} else {
			return this.getRuleContext(i, InstanceNameGeneratorDisplayContext);
		}
	}
	public instancePortAttributeDisplay(): InstancePortAttributeDisplayContext[];
	public instancePortAttributeDisplay(i: number): InstancePortAttributeDisplayContext;
	public instancePortAttributeDisplay(i?: number): InstancePortAttributeDisplayContext | InstancePortAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstancePortAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, InstancePortAttributeDisplayContext);
		}
	}
	public instancePropertyDisplay(): InstancePropertyDisplayContext[];
	public instancePropertyDisplay(i: number): InstancePropertyDisplayContext;
	public instancePropertyDisplay(i?: number): InstancePropertyDisplayContext | InstancePropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstancePropertyDisplayContext);
		} else {
			return this.getRuleContext(i, InstancePropertyDisplayContext);
		}
	}
	public instanceWidthDisplay(): InstanceWidthDisplayContext[];
	public instanceWidthDisplay(i: number): InstanceWidthDisplayContext;
	public instanceWidthDisplay(i?: number): InstanceWidthDisplayContext | InstanceWidthDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceWidthDisplayContext);
		} else {
			return this.getRuleContext(i, InstanceWidthDisplayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public pageCommentGraphics(): PageCommentGraphicsContext[];
	public pageCommentGraphics(i: number): PageCommentGraphicsContext;
	public pageCommentGraphics(i?: number): PageCommentGraphicsContext | PageCommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageCommentGraphicsContext);
		} else {
			return this.getRuleContext(i, PageCommentGraphicsContext);
		}
	}
	public parameterDisplay(): ParameterDisplayContext[];
	public parameterDisplay(i: number): ParameterDisplayContext;
	public parameterDisplay(i?: number): ParameterDisplayContext | ParameterDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ParameterDisplayContext);
		} else {
			return this.getRuleContext(i, ParameterDisplayContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	public timingDisplay(): TimingDisplayContext[];
	public timingDisplay(i: number): TimingDisplayContext;
	public timingDisplay(i?: number): TimingDisplayContext | TimingDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(TimingDisplayContext);
		} else {
			return this.getRuleContext(i, TimingDisplayContext);
		}
	}
	public viewNameDisplay(): ViewNameDisplayContext[];
	public viewNameDisplay(i: number): ViewNameDisplayContext;
	public viewNameDisplay(i?: number): ViewNameDisplayContext | ViewNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewNameDisplayContext);
		} else {
			return this.getRuleContext(i, ViewNameDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicInstanceImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicInstanceImplementation) {
			listener.enterSchematicInstanceImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicInstanceImplementation) {
			listener.exitSchematicInstanceImplementation(this);
		}
	}
}


export class SchematicInstanceImplementationRefContext extends ParserRuleContext {
	public implementationNameRef(): ImplementationNameRefContext {
		return this.getRuleContext(0, ImplementationNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicInstanceImplementationRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicInstanceImplementationRef) {
			listener.enterSchematicInstanceImplementationRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicInstanceImplementationRef) {
			listener.exitSchematicInstanceImplementationRef(this);
		}
	}
}


export class SchematicInterconnectAttributeDisplayContext extends ParserRuleContext {
	public connectivityTagGeneratorDisplay(): ConnectivityTagGeneratorDisplayContext[];
	public connectivityTagGeneratorDisplay(i: number): ConnectivityTagGeneratorDisplayContext;
	public connectivityTagGeneratorDisplay(i?: number): ConnectivityTagGeneratorDisplayContext | ConnectivityTagGeneratorDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityTagGeneratorDisplayContext);
		} else {
			return this.getRuleContext(i, ConnectivityTagGeneratorDisplayContext);
		}
	}
	public criticalityDisplay(): CriticalityDisplayContext[];
	public criticalityDisplay(i: number): CriticalityDisplayContext;
	public criticalityDisplay(i?: number): CriticalityDisplayContext | CriticalityDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CriticalityDisplayContext);
		} else {
			return this.getRuleContext(i, CriticalityDisplayContext);
		}
	}
	public interconnectAttachedText(): InterconnectAttachedTextContext[];
	public interconnectAttachedText(i: number): InterconnectAttachedTextContext;
	public interconnectAttachedText(i?: number): InterconnectAttachedTextContext | InterconnectAttachedTextContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectAttachedTextContext);
		} else {
			return this.getRuleContext(i, InterconnectAttachedTextContext);
		}
	}
	public interconnectDelayDisplay(): InterconnectDelayDisplayContext[];
	public interconnectDelayDisplay(i: number): InterconnectDelayDisplayContext;
	public interconnectDelayDisplay(i?: number): InterconnectDelayDisplayContext | InterconnectDelayDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectDelayDisplayContext);
		} else {
			return this.getRuleContext(i, InterconnectDelayDisplayContext);
		}
	}
	public interconnectNameDisplay(): InterconnectNameDisplayContext[];
	public interconnectNameDisplay(i: number): InterconnectNameDisplayContext;
	public interconnectNameDisplay(i?: number): InterconnectNameDisplayContext | InterconnectNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectNameDisplayContext);
		} else {
			return this.getRuleContext(i, InterconnectNameDisplayContext);
		}
	}
	public interconnectPropertyDisplay(): InterconnectPropertyDisplayContext[];
	public interconnectPropertyDisplay(i: number): InterconnectPropertyDisplayContext;
	public interconnectPropertyDisplay(i?: number): InterconnectPropertyDisplayContext | InterconnectPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, InterconnectPropertyDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicInterconnectAttributeDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicInterconnectAttributeDisplay) {
			listener.enterSchematicInterconnectAttributeDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicInterconnectAttributeDisplay) {
			listener.exitSchematicInterconnectAttributeDisplay(this);
		}
	}
}


export class SchematicInterconnectHeaderContext extends ParserRuleContext {
	public criticality(): CriticalityContext[];
	public criticality(i: number): CriticalityContext;
	public criticality(i?: number): CriticalityContext | CriticalityContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CriticalityContext);
		} else {
			return this.getRuleContext(i, CriticalityContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public interconnectDelay(): InterconnectDelayContext[];
	public interconnectDelay(i: number): InterconnectDelayContext;
	public interconnectDelay(i?: number): InterconnectDelayContext | InterconnectDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectDelayContext);
		} else {
			return this.getRuleContext(i, InterconnectDelayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public schematicInterconnectTerminatorImplementation(): SchematicInterconnectTerminatorImplementationContext[];
	public schematicInterconnectTerminatorImplementation(i: number): SchematicInterconnectTerminatorImplementationContext;
	public schematicInterconnectTerminatorImplementation(i?: number): SchematicInterconnectTerminatorImplementationContext | SchematicInterconnectTerminatorImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInterconnectTerminatorImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicInterconnectTerminatorImplementationContext);
		}
	}
	public schematicJunctionImplementation(): SchematicJunctionImplementationContext[];
	public schematicJunctionImplementation(i: number): SchematicJunctionImplementationContext;
	public schematicJunctionImplementation(i?: number): SchematicJunctionImplementationContext | SchematicJunctionImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicJunctionImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicJunctionImplementationContext);
		}
	}
	public schematicWireStyle(): SchematicWireStyleContext[];
	public schematicWireStyle(i: number): SchematicWireStyleContext;
	public schematicWireStyle(i?: number): SchematicWireStyleContext | SchematicWireStyleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicWireStyleContext);
		} else {
			return this.getRuleContext(i, SchematicWireStyleContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicInterconnectHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicInterconnectHeader) {
			listener.enterSchematicInterconnectHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicInterconnectHeader) {
			listener.exitSchematicInterconnectHeader(this);
		}
	}
}


export class SchematicInterconnectTerminatorImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public schematicInterconnectTerminatorTemplateRef(): SchematicInterconnectTerminatorTemplateRefContext {
		return this.getRuleContext(0, SchematicInterconnectTerminatorTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicInterconnectTerminatorImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicInterconnectTerminatorImplementation) {
			listener.enterSchematicInterconnectTerminatorImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicInterconnectTerminatorImplementation) {
			listener.exitSchematicInterconnectTerminatorImplementation(this);
		}
	}
}


export class SchematicInterconnectTerminatorImplementationRefContext extends ParserRuleContext {
	public implementationNameRef(): ImplementationNameRefContext {
		return this.getRuleContext(0, ImplementationNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicInterconnectTerminatorImplementationRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicInterconnectTerminatorImplementationRef) {
			listener.enterSchematicInterconnectTerminatorImplementationRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicInterconnectTerminatorImplementationRef) {
			listener.exitSchematicInterconnectTerminatorImplementationRef(this);
		}
	}
}


export class SchematicInterconnectTerminatorTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public hotspot(): HotspotContext {
		return this.getRuleContext(0, HotspotContext);
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicInterconnectTerminatorTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicInterconnectTerminatorTemplate) {
			listener.enterSchematicInterconnectTerminatorTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicInterconnectTerminatorTemplate) {
			listener.exitSchematicInterconnectTerminatorTemplate(this);
		}
	}
}


export class SchematicInterconnectTerminatorTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicInterconnectTerminatorTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicInterconnectTerminatorTemplateRef) {
			listener.enterSchematicInterconnectTerminatorTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicInterconnectTerminatorTemplateRef) {
			listener.exitSchematicInterconnectTerminatorTemplateRef(this);
		}
	}
}


export class SchematicJunctionImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public schematicJunctionTemplateRef(): SchematicJunctionTemplateRefContext {
		return this.getRuleContext(0, SchematicJunctionTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicJunctionImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicJunctionImplementation) {
			listener.enterSchematicJunctionImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicJunctionImplementation) {
			listener.exitSchematicJunctionImplementation(this);
		}
	}
}


export class SchematicJunctionImplementationRefContext extends ParserRuleContext {
	public implementationNameRef(): ImplementationNameRefContext {
		return this.getRuleContext(0, ImplementationNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicJunctionImplementationRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicJunctionImplementationRef) {
			listener.enterSchematicJunctionImplementationRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicJunctionImplementationRef) {
			listener.exitSchematicJunctionImplementationRef(this);
		}
	}
}


export class SchematicJunctionTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public hotspot(): HotspotContext {
		return this.getRuleContext(0, HotspotContext);
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicJunctionTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicJunctionTemplate) {
			listener.enterSchematicJunctionTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicJunctionTemplate) {
			listener.exitSchematicJunctionTemplate(this);
		}
	}
}


export class SchematicJunctionTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicJunctionTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicJunctionTemplateRef) {
			listener.enterSchematicJunctionTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicJunctionTemplateRef) {
			listener.exitSchematicJunctionTemplateRef(this);
		}
	}
}


export class SchematicMasterPortImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public schematicMasterPortTemplateRef(): SchematicMasterPortTemplateRefContext {
		return this.getRuleContext(0, SchematicMasterPortTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public portRef(): PortRefContext | undefined {
		return this.tryGetRuleContext(0, PortRefContext);
	}
	public localPortGroupRef(): LocalPortGroupRefContext | undefined {
		return this.tryGetRuleContext(0, LocalPortGroupRefContext);
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public portAttributeDisplay(): PortAttributeDisplayContext[];
	public portAttributeDisplay(i: number): PortAttributeDisplayContext;
	public portAttributeDisplay(i?: number): PortAttributeDisplayContext | PortAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, PortAttributeDisplayContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicMasterPortImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicMasterPortImplementation) {
			listener.enterSchematicMasterPortImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicMasterPortImplementation) {
			listener.exitSchematicMasterPortImplementation(this);
		}
	}
}


export class SchematicMasterPortImplementationRefContext extends ParserRuleContext {
	public implementationNameRef(): ImplementationNameRefContext {
		return this.getRuleContext(0, ImplementationNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicMasterPortImplementationRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicMasterPortImplementationRef) {
			listener.enterSchematicMasterPortImplementationRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicMasterPortImplementationRef) {
			listener.exitSchematicMasterPortImplementationRef(this);
		}
	}
}


export class SchematicMasterPortTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public hotspot(): HotspotContext {
		return this.getRuleContext(0, HotspotContext);
	}
	public portDirectionIndicator(): PortDirectionIndicatorContext {
		return this.getRuleContext(0, PortDirectionIndicatorContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public portAttributeDisplay(): PortAttributeDisplayContext[];
	public portAttributeDisplay(i: number): PortAttributeDisplayContext;
	public portAttributeDisplay(i?: number): PortAttributeDisplayContext | PortAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, PortAttributeDisplayContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	public schematicPortStyle(): SchematicPortStyleContext[];
	public schematicPortStyle(i: number): SchematicPortStyleContext;
	public schematicPortStyle(i?: number): SchematicPortStyleContext | SchematicPortStyleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortStyleContext);
		} else {
			return this.getRuleContext(i, SchematicPortStyleContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicMasterPortTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicMasterPortTemplate) {
			listener.enterSchematicMasterPortTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicMasterPortTemplate) {
			listener.exitSchematicMasterPortTemplate(this);
		}
	}
}


export class SchematicMasterPortTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicMasterPortTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicMasterPortTemplateRef) {
			listener.enterSchematicMasterPortTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicMasterPortTemplateRef) {
			listener.exitSchematicMasterPortTemplateRef(this);
		}
	}
}


export class SchematicMetricContext extends ParserRuleContext {
	public setDistance(): SetDistanceContext {
		return this.getRuleContext(0, SetDistanceContext);
	}
	public hotspotGrid(): HotspotGridContext | undefined {
		return this.tryGetRuleContext(0, HotspotGridContext);
	}
	public noHotspotGrid(): NoHotspotGridContext | undefined {
		return this.tryGetRuleContext(0, NoHotspotGridContext);
	}
	public nominalHotspotGrid(): NominalHotspotGridContext | undefined {
		return this.tryGetRuleContext(0, NominalHotspotGridContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicMetric; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicMetric) {
			listener.enterSchematicMetric(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicMetric) {
			listener.exitSchematicMetric(this);
		}
	}
}


export class SchematicNetContext extends ParserRuleContext {
	public interconnectNameDef(): InterconnectNameDefContext {
		return this.getRuleContext(0, InterconnectNameDefContext);
	}
	public signalRef(): SignalRefContext {
		return this.getRuleContext(0, SignalRefContext);
	}
	public schematicInterconnectHeader(): SchematicInterconnectHeaderContext {
		return this.getRuleContext(0, SchematicInterconnectHeaderContext);
	}
	public schematicNetJoined(): SchematicNetJoinedContext {
		return this.getRuleContext(0, SchematicNetJoinedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public schematicInterconnectAttributeDisplay(): SchematicInterconnectAttributeDisplayContext[];
	public schematicInterconnectAttributeDisplay(i: number): SchematicInterconnectAttributeDisplayContext;
	public schematicInterconnectAttributeDisplay(i?: number): SchematicInterconnectAttributeDisplayContext | SchematicInterconnectAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInterconnectAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, SchematicInterconnectAttributeDisplayContext);
		}
	}
	public schematicNetDetails(): SchematicNetDetailsContext[];
	public schematicNetDetails(i: number): SchematicNetDetailsContext;
	public schematicNetDetails(i?: number): SchematicNetDetailsContext | SchematicNetDetailsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicNetDetailsContext);
		} else {
			return this.getRuleContext(i, SchematicNetDetailsContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicNet; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicNet) {
			listener.enterSchematicNet(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicNet) {
			listener.exitSchematicNet(this);
		}
	}
}


export class SchematicNetDetailsContext extends ParserRuleContext {
	public schematicNetGraphics(): SchematicNetGraphicsContext | undefined {
		return this.tryGetRuleContext(0, SchematicNetGraphicsContext);
	}
	public schematicSubNetSet(): SchematicSubNetSetContext | undefined {
		return this.tryGetRuleContext(0, SchematicSubNetSetContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicNetDetails; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicNetDetails) {
			listener.enterSchematicNetDetails(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicNetDetails) {
			listener.exitSchematicNetDetails(this);
		}
	}
}


export class SchematicNetGraphicsContext extends ParserRuleContext {
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicNetGraphics; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicNetGraphics) {
			listener.enterSchematicNetGraphics(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicNetGraphics) {
			listener.exitSchematicNetGraphics(this);
		}
	}
}


export class SchematicNetJoinedContext extends ParserRuleContext {
	public portJoined(): PortJoinedContext[];
	public portJoined(i: number): PortJoinedContext;
	public portJoined(i?: number): PortJoinedContext | PortJoinedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortJoinedContext);
		} else {
			return this.getRuleContext(i, PortJoinedContext);
		}
	}
	public joinedAsSignal(): JoinedAsSignalContext[];
	public joinedAsSignal(i: number): JoinedAsSignalContext;
	public joinedAsSignal(i?: number): JoinedAsSignalContext | JoinedAsSignalContext[] {
		if (i === undefined) {
			return this.getRuleContexts(JoinedAsSignalContext);
		} else {
			return this.getRuleContext(i, JoinedAsSignalContext);
		}
	}
	public ripperHotspotRef(): RipperHotspotRefContext[];
	public ripperHotspotRef(i: number): RipperHotspotRefContext;
	public ripperHotspotRef(i?: number): RipperHotspotRefContext | RipperHotspotRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RipperHotspotRefContext);
		} else {
			return this.getRuleContext(i, RipperHotspotRefContext);
		}
	}
	public schematicGlobalPortImplementationRef(): SchematicGlobalPortImplementationRefContext[];
	public schematicGlobalPortImplementationRef(i: number): SchematicGlobalPortImplementationRefContext;
	public schematicGlobalPortImplementationRef(i?: number): SchematicGlobalPortImplementationRefContext | SchematicGlobalPortImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicGlobalPortImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicGlobalPortImplementationRefContext);
		}
	}
	public schematicInterconnectTerminatorImplementationRef(): SchematicInterconnectTerminatorImplementationRefContext[];
	public schematicInterconnectTerminatorImplementationRef(i: number): SchematicInterconnectTerminatorImplementationRefContext;
	public schematicInterconnectTerminatorImplementationRef(i?: number): SchematicInterconnectTerminatorImplementationRefContext | SchematicInterconnectTerminatorImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInterconnectTerminatorImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicInterconnectTerminatorImplementationRefContext);
		}
	}
	public schematicJunctionImplementationRef(): SchematicJunctionImplementationRefContext[];
	public schematicJunctionImplementationRef(i: number): SchematicJunctionImplementationRefContext;
	public schematicJunctionImplementationRef(i?: number): SchematicJunctionImplementationRefContext | SchematicJunctionImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicJunctionImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicJunctionImplementationRefContext);
		}
	}
	public schematicMasterPortImplementationRef(): SchematicMasterPortImplementationRefContext[];
	public schematicMasterPortImplementationRef(i: number): SchematicMasterPortImplementationRefContext;
	public schematicMasterPortImplementationRef(i?: number): SchematicMasterPortImplementationRefContext | SchematicMasterPortImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicMasterPortImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicMasterPortImplementationRefContext);
		}
	}
	public schematicOffPageConnectorImplementationRef(): SchematicOffPageConnectorImplementationRefContext[];
	public schematicOffPageConnectorImplementationRef(i: number): SchematicOffPageConnectorImplementationRefContext;
	public schematicOffPageConnectorImplementationRef(i?: number): SchematicOffPageConnectorImplementationRefContext | SchematicOffPageConnectorImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOffPageConnectorImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicOffPageConnectorImplementationRefContext);
		}
	}
	public schematicOnPageConnectorImplementationRef(): SchematicOnPageConnectorImplementationRefContext[];
	public schematicOnPageConnectorImplementationRef(i: number): SchematicOnPageConnectorImplementationRefContext;
	public schematicOnPageConnectorImplementationRef(i?: number): SchematicOnPageConnectorImplementationRefContext | SchematicOnPageConnectorImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicOnPageConnectorImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicOnPageConnectorImplementationRefContext);
		}
	}
	public schematicSymbolPortImplementationRef(): SchematicSymbolPortImplementationRefContext[];
	public schematicSymbolPortImplementationRef(i: number): SchematicSymbolPortImplementationRefContext;
	public schematicSymbolPortImplementationRef(i?: number): SchematicSymbolPortImplementationRefContext | SchematicSymbolPortImplementationRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSymbolPortImplementationRefContext);
		} else {
			return this.getRuleContext(i, SchematicSymbolPortImplementationRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicNetJoined; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicNetJoined) {
			listener.enterSchematicNetJoined(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicNetJoined) {
			listener.exitSchematicNetJoined(this);
		}
	}
}


export class SchematicOffPageConnectorImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public schematicOffPageConnectorTemplateRef(): SchematicOffPageConnectorTemplateRefContext {
		return this.getRuleContext(0, SchematicOffPageConnectorTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public associatedInterconnectNameDisplay(): AssociatedInterconnectNameDisplayContext[];
	public associatedInterconnectNameDisplay(i: number): AssociatedInterconnectNameDisplayContext;
	public associatedInterconnectNameDisplay(i?: number): AssociatedInterconnectNameDisplayContext | AssociatedInterconnectNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AssociatedInterconnectNameDisplayContext);
		} else {
			return this.getRuleContext(i, AssociatedInterconnectNameDisplayContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOffPageConnectorImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOffPageConnectorImplementation) {
			listener.enterSchematicOffPageConnectorImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOffPageConnectorImplementation) {
			listener.exitSchematicOffPageConnectorImplementation(this);
		}
	}
}


export class SchematicOffPageConnectorImplementationRefContext extends ParserRuleContext {
	public implementationNameRef(): ImplementationNameRefContext {
		return this.getRuleContext(0, ImplementationNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOffPageConnectorImplementationRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOffPageConnectorImplementationRef) {
			listener.enterSchematicOffPageConnectorImplementationRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOffPageConnectorImplementationRef) {
			listener.exitSchematicOffPageConnectorImplementationRef(this);
		}
	}
}


export class SchematicOffPageConnectorTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public hotspot(): HotspotContext {
		return this.getRuleContext(0, HotspotContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public associatedInterconnectNameDisplay(): AssociatedInterconnectNameDisplayContext[];
	public associatedInterconnectNameDisplay(i: number): AssociatedInterconnectNameDisplayContext;
	public associatedInterconnectNameDisplay(i?: number): AssociatedInterconnectNameDisplayContext | AssociatedInterconnectNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AssociatedInterconnectNameDisplayContext);
		} else {
			return this.getRuleContext(i, AssociatedInterconnectNameDisplayContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOffPageConnectorTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOffPageConnectorTemplate) {
			listener.enterSchematicOffPageConnectorTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOffPageConnectorTemplate) {
			listener.exitSchematicOffPageConnectorTemplate(this);
		}
	}
}


export class SchematicOffPageConnectorTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOffPageConnectorTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOffPageConnectorTemplateRef) {
			listener.enterSchematicOffPageConnectorTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOffPageConnectorTemplateRef) {
			listener.exitSchematicOffPageConnectorTemplateRef(this);
		}
	}
}


export class SchematicOnPageConnectorImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public schematicOnPageConnectorTemplateRef(): SchematicOnPageConnectorTemplateRefContext {
		return this.getRuleContext(0, SchematicOnPageConnectorTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public associatedInterconnectNameDisplay(): AssociatedInterconnectNameDisplayContext[];
	public associatedInterconnectNameDisplay(i: number): AssociatedInterconnectNameDisplayContext;
	public associatedInterconnectNameDisplay(i?: number): AssociatedInterconnectNameDisplayContext | AssociatedInterconnectNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AssociatedInterconnectNameDisplayContext);
		} else {
			return this.getRuleContext(i, AssociatedInterconnectNameDisplayContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOnPageConnectorImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOnPageConnectorImplementation) {
			listener.enterSchematicOnPageConnectorImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOnPageConnectorImplementation) {
			listener.exitSchematicOnPageConnectorImplementation(this);
		}
	}
}


export class SchematicOnPageConnectorImplementationRefContext extends ParserRuleContext {
	public implementationNameRef(): ImplementationNameRefContext {
		return this.getRuleContext(0, ImplementationNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOnPageConnectorImplementationRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOnPageConnectorImplementationRef) {
			listener.enterSchematicOnPageConnectorImplementationRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOnPageConnectorImplementationRef) {
			listener.exitSchematicOnPageConnectorImplementationRef(this);
		}
	}
}


export class SchematicOnPageConnectorTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public hotspot(): HotspotContext {
		return this.getRuleContext(0, HotspotContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public associatedInterconnectNameDisplay(): AssociatedInterconnectNameDisplayContext[];
	public associatedInterconnectNameDisplay(i: number): AssociatedInterconnectNameDisplayContext;
	public associatedInterconnectNameDisplay(i?: number): AssociatedInterconnectNameDisplayContext | AssociatedInterconnectNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AssociatedInterconnectNameDisplayContext);
		} else {
			return this.getRuleContext(i, AssociatedInterconnectNameDisplayContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOnPageConnectorTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOnPageConnectorTemplate) {
			listener.enterSchematicOnPageConnectorTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOnPageConnectorTemplate) {
			listener.exitSchematicOnPageConnectorTemplate(this);
		}
	}
}


export class SchematicOnPageConnectorTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOnPageConnectorTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOnPageConnectorTemplateRef) {
			listener.enterSchematicOnPageConnectorTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOnPageConnectorTemplateRef) {
			listener.exitSchematicOnPageConnectorTemplateRef(this);
		}
	}
}


export class SchematicOtherwiseFrameBorderContext extends ParserRuleContext {
	public schematicOtherwiseFrameBorderTemplateRef(): SchematicOtherwiseFrameBorderTemplateRefContext {
		return this.getRuleContext(0, SchematicOtherwiseFrameBorderTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOtherwiseFrameBorder; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOtherwiseFrameBorder) {
			listener.enterSchematicOtherwiseFrameBorder(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOtherwiseFrameBorder) {
			listener.exitSchematicOtherwiseFrameBorder(this);
		}
	}
}


export class SchematicOtherwiseFrameBorderTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public usableArea(): UsableAreaContext {
		return this.getRuleContext(0, UsableAreaContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOtherwiseFrameBorderTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOtherwiseFrameBorderTemplate) {
			listener.enterSchematicOtherwiseFrameBorderTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOtherwiseFrameBorderTemplate) {
			listener.exitSchematicOtherwiseFrameBorderTemplate(this);
		}
	}
}


export class SchematicOtherwiseFrameBorderTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOtherwiseFrameBorderTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOtherwiseFrameBorderTemplateRef) {
			listener.enterSchematicOtherwiseFrameBorderTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOtherwiseFrameBorderTemplateRef) {
			listener.exitSchematicOtherwiseFrameBorderTemplateRef(this);
		}
	}
}


export class SchematicOtherwiseFrameImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public otherwiseFrameRef(): OtherwiseFrameRefContext {
		return this.getRuleContext(0, OtherwiseFrameRefContext);
	}
	public schematicOtherwiseFrameImplementationHeader(): SchematicOtherwiseFrameImplementationHeaderContext {
		return this.getRuleContext(0, SchematicOtherwiseFrameImplementationHeaderContext);
	}
	public schematicFrameImplementationDetails(): SchematicFrameImplementationDetailsContext {
		return this.getRuleContext(0, SchematicFrameImplementationDetailsContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOtherwiseFrameImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOtherwiseFrameImplementation) {
			listener.enterSchematicOtherwiseFrameImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOtherwiseFrameImplementation) {
			listener.exitSchematicOtherwiseFrameImplementation(this);
		}
	}
}


export class SchematicOtherwiseFrameImplementationHeaderContext extends ParserRuleContext {
	public schematicOtherwiseFrameBorder(): SchematicOtherwiseFrameBorderContext | undefined {
		return this.tryGetRuleContext(0, SchematicOtherwiseFrameBorderContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicOtherwiseFrameImplementationHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicOtherwiseFrameImplementationHeader) {
			listener.enterSchematicOtherwiseFrameImplementationHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicOtherwiseFrameImplementationHeader) {
			listener.exitSchematicOtherwiseFrameImplementationHeader(this);
		}
	}
}


export class SchematicPortAcPowerContext extends ParserRuleContext {
	public schematicPortAcPowerRecommendedFrequency(): SchematicPortAcPowerRecommendedFrequencyContext[];
	public schematicPortAcPowerRecommendedFrequency(i: number): SchematicPortAcPowerRecommendedFrequencyContext;
	public schematicPortAcPowerRecommendedFrequency(i?: number): SchematicPortAcPowerRecommendedFrequencyContext | SchematicPortAcPowerRecommendedFrequencyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortAcPowerRecommendedFrequencyContext);
		} else {
			return this.getRuleContext(i, SchematicPortAcPowerRecommendedFrequencyContext);
		}
	}
	public schematicPortAcPowerRecommendedVoltageRms(): SchematicPortAcPowerRecommendedVoltageRmsContext[];
	public schematicPortAcPowerRecommendedVoltageRms(i: number): SchematicPortAcPowerRecommendedVoltageRmsContext;
	public schematicPortAcPowerRecommendedVoltageRms(i?: number): SchematicPortAcPowerRecommendedVoltageRmsContext | SchematicPortAcPowerRecommendedVoltageRmsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortAcPowerRecommendedVoltageRmsContext);
		} else {
			return this.getRuleContext(i, SchematicPortAcPowerRecommendedVoltageRmsContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortAcPower; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortAcPower) {
			listener.enterSchematicPortAcPower(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortAcPower) {
			listener.exitSchematicPortAcPower(this);
		}
	}
}


export class SchematicPortAcPowerRecommendedFrequencyContext extends ParserRuleContext {
	public frequencyValue(): FrequencyValueContext {
		return this.getRuleContext(0, FrequencyValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortAcPowerRecommendedFrequency; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortAcPowerRecommendedFrequency) {
			listener.enterSchematicPortAcPowerRecommendedFrequency(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortAcPowerRecommendedFrequency) {
			listener.exitSchematicPortAcPowerRecommendedFrequency(this);
		}
	}
}


export class SchematicPortAcPowerRecommendedVoltageRmsContext extends ParserRuleContext {
	public voltageValue(): VoltageValueContext {
		return this.getRuleContext(0, VoltageValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortAcPowerRecommendedVoltageRms; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortAcPowerRecommendedVoltageRms) {
			listener.enterSchematicPortAcPowerRecommendedVoltageRms(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortAcPowerRecommendedVoltageRms) {
			listener.exitSchematicPortAcPowerRecommendedVoltageRms(this);
		}
	}
}


export class SchematicPortAnalogContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortAnalog; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortAnalog) {
			listener.enterSchematicPortAnalog(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortAnalog) {
			listener.exitSchematicPortAnalog(this);
		}
	}
}


export class SchematicPortAttributesContext extends ParserRuleContext {
	public ieeeStandard(): IeeeStandardContext[];
	public ieeeStandard(i: number): IeeeStandardContext;
	public ieeeStandard(i?: number): IeeeStandardContext | IeeeStandardContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IeeeStandardContext);
		} else {
			return this.getRuleContext(i, IeeeStandardContext);
		}
	}
	public schematicPortAcPower(): SchematicPortAcPowerContext[];
	public schematicPortAcPower(i: number): SchematicPortAcPowerContext;
	public schematicPortAcPower(i?: number): SchematicPortAcPowerContext | SchematicPortAcPowerContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortAcPowerContext);
		} else {
			return this.getRuleContext(i, SchematicPortAcPowerContext);
		}
	}
	public schematicPortAnalog(): SchematicPortAnalogContext[];
	public schematicPortAnalog(i: number): SchematicPortAnalogContext;
	public schematicPortAnalog(i?: number): SchematicPortAnalogContext | SchematicPortAnalogContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortAnalogContext);
		} else {
			return this.getRuleContext(i, SchematicPortAnalogContext);
		}
	}
	public schematicPortChassisGround(): SchematicPortChassisGroundContext[];
	public schematicPortChassisGround(i: number): SchematicPortChassisGroundContext;
	public schematicPortChassisGround(i?: number): SchematicPortChassisGroundContext | SchematicPortChassisGroundContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortChassisGroundContext);
		} else {
			return this.getRuleContext(i, SchematicPortChassisGroundContext);
		}
	}
	public schematicPortClock(): SchematicPortClockContext[];
	public schematicPortClock(i: number): SchematicPortClockContext;
	public schematicPortClock(i?: number): SchematicPortClockContext | SchematicPortClockContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortClockContext);
		} else {
			return this.getRuleContext(i, SchematicPortClockContext);
		}
	}
	public schematicPortDcPower(): SchematicPortDcPowerContext[];
	public schematicPortDcPower(i: number): SchematicPortDcPowerContext;
	public schematicPortDcPower(i?: number): SchematicPortDcPowerContext | SchematicPortDcPowerContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortDcPowerContext);
		} else {
			return this.getRuleContext(i, SchematicPortDcPowerContext);
		}
	}
	public schematicPortEarthGround(): SchematicPortEarthGroundContext[];
	public schematicPortEarthGround(i: number): SchematicPortEarthGroundContext;
	public schematicPortEarthGround(i?: number): SchematicPortEarthGroundContext | SchematicPortEarthGroundContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortEarthGroundContext);
		} else {
			return this.getRuleContext(i, SchematicPortEarthGroundContext);
		}
	}
	public schematicPortGround(): SchematicPortGroundContext[];
	public schematicPortGround(i: number): SchematicPortGroundContext;
	public schematicPortGround(i?: number): SchematicPortGroundContext | SchematicPortGroundContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortGroundContext);
		} else {
			return this.getRuleContext(i, SchematicPortGroundContext);
		}
	}
	public schematicPortNonLogical(): SchematicPortNonLogicalContext[];
	public schematicPortNonLogical(i: number): SchematicPortNonLogicalContext;
	public schematicPortNonLogical(i?: number): SchematicPortNonLogicalContext | SchematicPortNonLogicalContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortNonLogicalContext);
		} else {
			return this.getRuleContext(i, SchematicPortNonLogicalContext);
		}
	}
	public schematicPortOpenCollector(): SchematicPortOpenCollectorContext[];
	public schematicPortOpenCollector(i: number): SchematicPortOpenCollectorContext;
	public schematicPortOpenCollector(i?: number): SchematicPortOpenCollectorContext | SchematicPortOpenCollectorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortOpenCollectorContext);
		} else {
			return this.getRuleContext(i, SchematicPortOpenCollectorContext);
		}
	}
	public schematicPortOpenEmitter(): SchematicPortOpenEmitterContext[];
	public schematicPortOpenEmitter(i: number): SchematicPortOpenEmitterContext;
	public schematicPortOpenEmitter(i?: number): SchematicPortOpenEmitterContext | SchematicPortOpenEmitterContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortOpenEmitterContext);
		} else {
			return this.getRuleContext(i, SchematicPortOpenEmitterContext);
		}
	}
	public schematicPortPower(): SchematicPortPowerContext[];
	public schematicPortPower(i: number): SchematicPortPowerContext;
	public schematicPortPower(i?: number): SchematicPortPowerContext | SchematicPortPowerContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortPowerContext);
		} else {
			return this.getRuleContext(i, SchematicPortPowerContext);
		}
	}
	public schematicPortThreeState(): SchematicPortThreeStateContext[];
	public schematicPortThreeState(i: number): SchematicPortThreeStateContext;
	public schematicPortThreeState(i?: number): SchematicPortThreeStateContext | SchematicPortThreeStateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortThreeStateContext);
		} else {
			return this.getRuleContext(i, SchematicPortThreeStateContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortAttributes; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortAttributes) {
			listener.enterSchematicPortAttributes(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortAttributes) {
			listener.exitSchematicPortAttributes(this);
		}
	}
}


export class SchematicPortChassisGroundContext extends ParserRuleContext {
	public schematicPortAnalog(): SchematicPortAnalogContext | undefined {
		return this.tryGetRuleContext(0, SchematicPortAnalogContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortChassisGround; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortChassisGround) {
			listener.enterSchematicPortChassisGround(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortChassisGround) {
			listener.exitSchematicPortChassisGround(this);
		}
	}
}


export class SchematicPortClockContext extends ParserRuleContext {
	public ieeeStandard(): IeeeStandardContext | undefined {
		return this.tryGetRuleContext(0, IeeeStandardContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortClock; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortClock) {
			listener.enterSchematicPortClock(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortClock) {
			listener.exitSchematicPortClock(this);
		}
	}
}


export class SchematicPortDcPowerContext extends ParserRuleContext {
	public schematicPortAnalog(): SchematicPortAnalogContext[];
	public schematicPortAnalog(i: number): SchematicPortAnalogContext;
	public schematicPortAnalog(i?: number): SchematicPortAnalogContext | SchematicPortAnalogContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortAnalogContext);
		} else {
			return this.getRuleContext(i, SchematicPortAnalogContext);
		}
	}
	public schematicPortDcPowerRecommendedVoltage(): SchematicPortDcPowerRecommendedVoltageContext[];
	public schematicPortDcPowerRecommendedVoltage(i: number): SchematicPortDcPowerRecommendedVoltageContext;
	public schematicPortDcPowerRecommendedVoltage(i?: number): SchematicPortDcPowerRecommendedVoltageContext | SchematicPortDcPowerRecommendedVoltageContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortDcPowerRecommendedVoltageContext);
		} else {
			return this.getRuleContext(i, SchematicPortDcPowerRecommendedVoltageContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortDcPower; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortDcPower) {
			listener.enterSchematicPortDcPower(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortDcPower) {
			listener.exitSchematicPortDcPower(this);
		}
	}
}


export class SchematicPortDcPowerRecommendedVoltageContext extends ParserRuleContext {
	public voltageValue(): VoltageValueContext {
		return this.getRuleContext(0, VoltageValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortDcPowerRecommendedVoltage; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortDcPowerRecommendedVoltage) {
			listener.enterSchematicPortDcPowerRecommendedVoltage(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortDcPowerRecommendedVoltage) {
			listener.exitSchematicPortDcPowerRecommendedVoltage(this);
		}
	}
}


export class SchematicPortEarthGroundContext extends ParserRuleContext {
	public schematicPortAnalog(): SchematicPortAnalogContext | undefined {
		return this.tryGetRuleContext(0, SchematicPortAnalogContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortEarthGround; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortEarthGround) {
			listener.enterSchematicPortEarthGround(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortEarthGround) {
			listener.exitSchematicPortEarthGround(this);
		}
	}
}


export class SchematicPortGroundContext extends ParserRuleContext {
	public schematicPortAnalog(): SchematicPortAnalogContext | undefined {
		return this.tryGetRuleContext(0, SchematicPortAnalogContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortGround; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortGround) {
			listener.enterSchematicPortGround(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortGround) {
			listener.exitSchematicPortGround(this);
		}
	}
}


export class SchematicPortNonLogicalContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortNonLogical; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortNonLogical) {
			listener.enterSchematicPortNonLogical(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortNonLogical) {
			listener.exitSchematicPortNonLogical(this);
		}
	}
}


export class SchematicPortOpenCollectorContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortOpenCollector; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortOpenCollector) {
			listener.enterSchematicPortOpenCollector(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortOpenCollector) {
			listener.exitSchematicPortOpenCollector(this);
		}
	}
}


export class SchematicPortOpenEmitterContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortOpenEmitter; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortOpenEmitter) {
			listener.enterSchematicPortOpenEmitter(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortOpenEmitter) {
			listener.exitSchematicPortOpenEmitter(this);
		}
	}
}


export class SchematicPortPowerContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortPower; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortPower) {
			listener.enterSchematicPortPower(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortPower) {
			listener.exitSchematicPortPower(this);
		}
	}
}


export class SchematicPortStyleContext extends ParserRuleContext {
	public narrowPort(): NarrowPortContext | undefined {
		return this.tryGetRuleContext(0, NarrowPortContext);
	}
	public widePort(): WidePortContext | undefined {
		return this.tryGetRuleContext(0, WidePortContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortStyle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortStyle) {
			listener.enterSchematicPortStyle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortStyle) {
			listener.exitSchematicPortStyle(this);
		}
	}
}


export class SchematicPortThreeStateContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicPortThreeState; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicPortThreeState) {
			listener.enterSchematicPortThreeState(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicPortThreeState) {
			listener.exitSchematicPortThreeState(this);
		}
	}
}


export class SchematicRequiredDefaultsContext extends ParserRuleContext {
	public schematicMetric(): SchematicMetricContext {
		return this.getRuleContext(0, SchematicMetricContext);
	}
	public fontRef(): FontRefContext {
		return this.getRuleContext(0, FontRefContext);
	}
	public textHeight(): TextHeightContext {
		return this.getRuleContext(0, TextHeightContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicRequiredDefaults; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicRequiredDefaults) {
			listener.enterSchematicRequiredDefaults(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicRequiredDefaults) {
			listener.exitSchematicRequiredDefaults(this);
		}
	}
}


export class SchematicRipperImplementationContext extends ParserRuleContext {
	public implementationNameDef(): ImplementationNameDefContext {
		return this.getRuleContext(0, ImplementationNameDefContext);
	}
	public schematicRipperTemplateRef(): SchematicRipperTemplateRefContext {
		return this.getRuleContext(0, SchematicRipperTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicRipperImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicRipperImplementation) {
			listener.enterSchematicRipperImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicRipperImplementation) {
			listener.exitSchematicRipperImplementation(this);
		}
	}
}


export class SchematicRipperImplementationRefContext extends ParserRuleContext {
	public implementationNameRef(): ImplementationNameRefContext {
		return this.getRuleContext(0, ImplementationNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicRipperImplementationRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicRipperImplementationRef) {
			listener.enterSchematicRipperImplementationRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicRipperImplementationRef) {
			listener.exitSchematicRipperImplementationRef(this);
		}
	}
}


export class SchematicRipperTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public ripperHotspot(): RipperHotspotContext[];
	public ripperHotspot(i: number): RipperHotspotContext;
	public ripperHotspot(i?: number): RipperHotspotContext | RipperHotspotContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RipperHotspotContext);
		} else {
			return this.getRuleContext(i, RipperHotspotContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicRipperTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicRipperTemplate) {
			listener.enterSchematicRipperTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicRipperTemplate) {
			listener.exitSchematicRipperTemplate(this);
		}
	}
}


export class SchematicRipperTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicRipperTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicRipperTemplateRef) {
			listener.enterSchematicRipperTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicRipperTemplateRef) {
			listener.exitSchematicRipperTemplateRef(this);
		}
	}
}


export class SchematicSubBusContext extends ParserRuleContext {
	public interconnectNameDef(): InterconnectNameDefContext {
		return this.getRuleContext(0, InterconnectNameDefContext);
	}
	public schematicSubInterconnectHeader(): SchematicSubInterconnectHeaderContext {
		return this.getRuleContext(0, SchematicSubInterconnectHeaderContext);
	}
	public schematicBusJoined(): SchematicBusJoinedContext {
		return this.getRuleContext(0, SchematicBusJoinedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public schematicBusDetails(): SchematicBusDetailsContext[];
	public schematicBusDetails(i: number): SchematicBusDetailsContext;
	public schematicBusDetails(i?: number): SchematicBusDetailsContext | SchematicBusDetailsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicBusDetailsContext);
		} else {
			return this.getRuleContext(i, SchematicBusDetailsContext);
		}
	}
	public schematicBusSlice(): SchematicBusSliceContext[];
	public schematicBusSlice(i: number): SchematicBusSliceContext;
	public schematicBusSlice(i?: number): SchematicBusSliceContext | SchematicBusSliceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicBusSliceContext);
		} else {
			return this.getRuleContext(i, SchematicBusSliceContext);
		}
	}
	public schematicInterconnectAttributeDisplay(): SchematicInterconnectAttributeDisplayContext[];
	public schematicInterconnectAttributeDisplay(i: number): SchematicInterconnectAttributeDisplayContext;
	public schematicInterconnectAttributeDisplay(i?: number): SchematicInterconnectAttributeDisplayContext | SchematicInterconnectAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInterconnectAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, SchematicInterconnectAttributeDisplayContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSubBus; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSubBus) {
			listener.enterSchematicSubBus(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSubBus) {
			listener.exitSchematicSubBus(this);
		}
	}
}


export class SchematicSubBusSetContext extends ParserRuleContext {
	public schematicSubBus(): SchematicSubBusContext[];
	public schematicSubBus(i: number): SchematicSubBusContext;
	public schematicSubBus(i?: number): SchematicSubBusContext | SchematicSubBusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSubBusContext);
		} else {
			return this.getRuleContext(i, SchematicSubBusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSubBusSet; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSubBusSet) {
			listener.enterSchematicSubBusSet(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSubBusSet) {
			listener.exitSchematicSubBusSet(this);
		}
	}
}


export class SchematicSubInterconnectHeaderContext extends ParserRuleContext {
	public criticality(): CriticalityContext[];
	public criticality(i: number): CriticalityContext;
	public criticality(i?: number): CriticalityContext | CriticalityContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CriticalityContext);
		} else {
			return this.getRuleContext(i, CriticalityContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public interconnectDelay(): InterconnectDelayContext[];
	public interconnectDelay(i: number): InterconnectDelayContext;
	public interconnectDelay(i?: number): InterconnectDelayContext | InterconnectDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterconnectDelayContext);
		} else {
			return this.getRuleContext(i, InterconnectDelayContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSubInterconnectHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSubInterconnectHeader) {
			listener.enterSchematicSubInterconnectHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSubInterconnectHeader) {
			listener.exitSchematicSubInterconnectHeader(this);
		}
	}
}


export class SchematicSubNetContext extends ParserRuleContext {
	public interconnectNameDef(): InterconnectNameDefContext {
		return this.getRuleContext(0, InterconnectNameDefContext);
	}
	public schematicSubInterconnectHeader(): SchematicSubInterconnectHeaderContext {
		return this.getRuleContext(0, SchematicSubInterconnectHeaderContext);
	}
	public schematicNetJoined(): SchematicNetJoinedContext {
		return this.getRuleContext(0, SchematicNetJoinedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public schematicInterconnectAttributeDisplay(): SchematicInterconnectAttributeDisplayContext[];
	public schematicInterconnectAttributeDisplay(i: number): SchematicInterconnectAttributeDisplayContext;
	public schematicInterconnectAttributeDisplay(i?: number): SchematicInterconnectAttributeDisplayContext | SchematicInterconnectAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicInterconnectAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, SchematicInterconnectAttributeDisplayContext);
		}
	}
	public schematicNetDetails(): SchematicNetDetailsContext[];
	public schematicNetDetails(i: number): SchematicNetDetailsContext;
	public schematicNetDetails(i?: number): SchematicNetDetailsContext | SchematicNetDetailsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicNetDetailsContext);
		} else {
			return this.getRuleContext(i, SchematicNetDetailsContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSubNet; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSubNet) {
			listener.enterSchematicSubNet(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSubNet) {
			listener.exitSchematicSubNet(this);
		}
	}
}


export class SchematicSubNetSetContext extends ParserRuleContext {
	public schematicSubNet(): SchematicSubNetContext[];
	public schematicSubNet(i: number): SchematicSubNetContext;
	public schematicSubNet(i?: number): SchematicSubNetContext | SchematicSubNetContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSubNetContext);
		} else {
			return this.getRuleContext(i, SchematicSubNetContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSubNetSet; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSubNetSet) {
			listener.enterSchematicSubNetSet(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSubNetSet) {
			listener.exitSchematicSubNetSet(this);
		}
	}
}


export class SchematicSymbolContext extends ParserRuleContext {
	public viewNameDef(): ViewNameDefContext {
		return this.getRuleContext(0, ViewNameDefContext);
	}
	public schematicSymbolHeader(): SchematicSymbolHeaderContext {
		return this.getRuleContext(0, SchematicSymbolHeaderContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public cellNameDisplay(): CellNameDisplayContext[];
	public cellNameDisplay(i: number): CellNameDisplayContext;
	public cellNameDisplay(i?: number): CellNameDisplayContext | CellNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellNameDisplayContext);
		} else {
			return this.getRuleContext(i, CellNameDisplayContext);
		}
	}
	public cellPropertyDisplay(): CellPropertyDisplayContext[];
	public cellPropertyDisplay(i: number): CellPropertyDisplayContext;
	public cellPropertyDisplay(i?: number): CellPropertyDisplayContext | CellPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CellPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, CellPropertyDisplayContext);
		}
	}
	public clusterPropertyDisplay(): ClusterPropertyDisplayContext[];
	public clusterPropertyDisplay(i: number): ClusterPropertyDisplayContext;
	public clusterPropertyDisplay(i?: number): ClusterPropertyDisplayContext | ClusterPropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ClusterPropertyDisplayContext);
		} else {
			return this.getRuleContext(i, ClusterPropertyDisplayContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public designatorDisplay(): DesignatorDisplayContext[];
	public designatorDisplay(i: number): DesignatorDisplayContext;
	public designatorDisplay(i?: number): DesignatorDisplayContext | DesignatorDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DesignatorDisplayContext);
		} else {
			return this.getRuleContext(i, DesignatorDisplayContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public instanceNameDisplay(): InstanceNameDisplayContext[];
	public instanceNameDisplay(i: number): InstanceNameDisplayContext;
	public instanceNameDisplay(i?: number): InstanceNameDisplayContext | InstanceNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceNameDisplayContext);
		} else {
			return this.getRuleContext(i, InstanceNameDisplayContext);
		}
	}
	public instanceNameGeneratorDisplay(): InstanceNameGeneratorDisplayContext[];
	public instanceNameGeneratorDisplay(i: number): InstanceNameGeneratorDisplayContext;
	public instanceNameGeneratorDisplay(i?: number): InstanceNameGeneratorDisplayContext | InstanceNameGeneratorDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceNameGeneratorDisplayContext);
		} else {
			return this.getRuleContext(i, InstanceNameGeneratorDisplayContext);
		}
	}
	public instanceWidthDisplay(): InstanceWidthDisplayContext[];
	public instanceWidthDisplay(i: number): InstanceWidthDisplayContext;
	public instanceWidthDisplay(i?: number): InstanceWidthDisplayContext | InstanceWidthDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InstanceWidthDisplayContext);
		} else {
			return this.getRuleContext(i, InstanceWidthDisplayContext);
		}
	}
	public parameterDisplay(): ParameterDisplayContext[];
	public parameterDisplay(i: number): ParameterDisplayContext;
	public parameterDisplay(i?: number): ParameterDisplayContext | ParameterDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ParameterDisplayContext);
		} else {
			return this.getRuleContext(i, ParameterDisplayContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	public schematicSymbolPortImplementation(): SchematicSymbolPortImplementationContext[];
	public schematicSymbolPortImplementation(i: number): SchematicSymbolPortImplementationContext;
	public schematicSymbolPortImplementation(i?: number): SchematicSymbolPortImplementationContext | SchematicSymbolPortImplementationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSymbolPortImplementationContext);
		} else {
			return this.getRuleContext(i, SchematicSymbolPortImplementationContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	public viewNameDisplay(): ViewNameDisplayContext[];
	public viewNameDisplay(i: number): ViewNameDisplayContext;
	public viewNameDisplay(i?: number): ViewNameDisplayContext | ViewNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewNameDisplayContext);
		} else {
			return this.getRuleContext(i, ViewNameDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSymbol; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSymbol) {
			listener.enterSchematicSymbol(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSymbol) {
			listener.exitSchematicSymbol(this);
		}
	}
}


export class SchematicSymbolBorderContext extends ParserRuleContext {
	public schematicSymbolBorderTemplateRef(): SchematicSymbolBorderTemplateRefContext {
		return this.getRuleContext(0, SchematicSymbolBorderTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSymbolBorder; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSymbolBorder) {
			listener.enterSchematicSymbolBorder(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSymbolBorder) {
			listener.exitSchematicSymbolBorder(this);
		}
	}
}


export class SchematicSymbolBorderTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public usableArea(): UsableAreaContext {
		return this.getRuleContext(0, UsableAreaContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSymbolBorderTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSymbolBorderTemplate) {
			listener.enterSchematicSymbolBorderTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSymbolBorderTemplate) {
			listener.exitSchematicSymbolBorderTemplate(this);
		}
	}
}


export class SchematicSymbolBorderTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSymbolBorderTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSymbolBorderTemplateRef) {
			listener.enterSchematicSymbolBorderTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSymbolBorderTemplateRef) {
			listener.exitSchematicSymbolBorderTemplateRef(this);
		}
	}
}


export class SchematicSymbolHeaderContext extends ParserRuleContext {
	public schematicUnits(): SchematicUnitsContext {
		return this.getRuleContext(0, SchematicUnitsContext);
	}
	public backgroundColor(): BackgroundColorContext[];
	public backgroundColor(i: number): BackgroundColorContext;
	public backgroundColor(i?: number): BackgroundColorContext | BackgroundColorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BackgroundColorContext);
		} else {
			return this.getRuleContext(i, BackgroundColorContext);
		}
	}
	public derivedFrom(): DerivedFromContext[];
	public derivedFrom(i: number): DerivedFromContext;
	public derivedFrom(i?: number): DerivedFromContext | DerivedFromContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DerivedFromContext);
		} else {
			return this.getRuleContext(i, DerivedFromContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public originalBoundingBox(): OriginalBoundingBoxContext[];
	public originalBoundingBox(i: number): OriginalBoundingBoxContext;
	public originalBoundingBox(i?: number): OriginalBoundingBoxContext | OriginalBoundingBoxContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OriginalBoundingBoxContext);
		} else {
			return this.getRuleContext(i, OriginalBoundingBoxContext);
		}
	}
	public pageSize(): PageSizeContext[];
	public pageSize(i: number): PageSizeContext;
	public pageSize(i?: number): PageSizeContext | PageSizeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PageSizeContext);
		} else {
			return this.getRuleContext(i, PageSizeContext);
		}
	}
	public previousVersion(): PreviousVersionContext[];
	public previousVersion(i: number): PreviousVersionContext;
	public previousVersion(i?: number): PreviousVersionContext | PreviousVersionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PreviousVersionContext);
		} else {
			return this.getRuleContext(i, PreviousVersionContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public schematicSymbolBorder(): SchematicSymbolBorderContext[];
	public schematicSymbolBorder(i: number): SchematicSymbolBorderContext;
	public schematicSymbolBorder(i?: number): SchematicSymbolBorderContext | SchematicSymbolBorderContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicSymbolBorderContext);
		} else {
			return this.getRuleContext(i, SchematicSymbolBorderContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSymbolHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSymbolHeader) {
			listener.enterSchematicSymbolHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSymbolHeader) {
			listener.exitSchematicSymbolHeader(this);
		}
	}
}


export class SchematicSymbolPortImplementationContext extends ParserRuleContext {
	public symbolPortImplementationNameDef(): SymbolPortImplementationNameDefContext {
		return this.getRuleContext(0, SymbolPortImplementationNameDefContext);
	}
	public portRef(): PortRefContext {
		return this.getRuleContext(0, PortRefContext);
	}
	public schematicSymbolPortTemplateRef(): SchematicSymbolPortTemplateRefContext {
		return this.getRuleContext(0, SchematicSymbolPortTemplateRefContext);
	}
	public transform(): TransformContext {
		return this.getRuleContext(0, TransformContext);
	}
	public portAttributeDisplay(): PortAttributeDisplayContext[];
	public portAttributeDisplay(i: number): PortAttributeDisplayContext;
	public portAttributeDisplay(i?: number): PortAttributeDisplayContext | PortAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, PortAttributeDisplayContext);
		}
	}
	public propertyDisplayOverride(): PropertyDisplayOverrideContext[];
	public propertyDisplayOverride(i: number): PropertyDisplayOverrideContext;
	public propertyDisplayOverride(i?: number): PropertyDisplayOverrideContext | PropertyDisplayOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayOverrideContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSymbolPortImplementation; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSymbolPortImplementation) {
			listener.enterSchematicSymbolPortImplementation(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSymbolPortImplementation) {
			listener.exitSchematicSymbolPortImplementation(this);
		}
	}
}


export class SchematicSymbolPortImplementationRefContext extends ParserRuleContext {
	public symbolPortImplementationNameRef(): SymbolPortImplementationNameRefContext {
		return this.getRuleContext(0, SymbolPortImplementationNameRefContext);
	}
	public schematicInstanceImplementationRef(): SchematicInstanceImplementationRefContext {
		return this.getRuleContext(0, SchematicInstanceImplementationRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSymbolPortImplementationRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSymbolPortImplementationRef) {
			listener.enterSchematicSymbolPortImplementationRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSymbolPortImplementationRef) {
			listener.exitSchematicSymbolPortImplementationRef(this);
		}
	}
}


export class SchematicSymbolPortTemplateContext extends ParserRuleContext {
	public libraryObjectNameDef(): LibraryObjectNameDefContext {
		return this.getRuleContext(0, LibraryObjectNameDefContext);
	}
	public schematicTemplateHeader(): SchematicTemplateHeaderContext {
		return this.getRuleContext(0, SchematicTemplateHeaderContext);
	}
	public hotspot(): HotspotContext {
		return this.getRuleContext(0, HotspotContext);
	}
	public portDirectionIndicator(): PortDirectionIndicatorContext {
		return this.getRuleContext(0, PortDirectionIndicatorContext);
	}
	public annotate(): AnnotateContext[];
	public annotate(i: number): AnnotateContext;
	public annotate(i?: number): AnnotateContext | AnnotateContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AnnotateContext);
		} else {
			return this.getRuleContext(i, AnnotateContext);
		}
	}
	public commentGraphics(): CommentGraphicsContext[];
	public commentGraphics(i: number): CommentGraphicsContext;
	public commentGraphics(i?: number): CommentGraphicsContext | CommentGraphicsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentGraphicsContext);
		} else {
			return this.getRuleContext(i, CommentGraphicsContext);
		}
	}
	public figure(): FigureContext[];
	public figure(i: number): FigureContext;
	public figure(i?: number): FigureContext | FigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureContext);
		} else {
			return this.getRuleContext(i, FigureContext);
		}
	}
	public implementationNameDisplay(): ImplementationNameDisplayContext[];
	public implementationNameDisplay(i: number): ImplementationNameDisplayContext;
	public implementationNameDisplay(i?: number): ImplementationNameDisplayContext | ImplementationNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ImplementationNameDisplayContext);
		} else {
			return this.getRuleContext(i, ImplementationNameDisplayContext);
		}
	}
	public portAttributeDisplay(): PortAttributeDisplayContext[];
	public portAttributeDisplay(i: number): PortAttributeDisplayContext;
	public portAttributeDisplay(i?: number): PortAttributeDisplayContext | PortAttributeDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortAttributeDisplayContext);
		} else {
			return this.getRuleContext(i, PortAttributeDisplayContext);
		}
	}
	public propertyDisplay(): PropertyDisplayContext[];
	public propertyDisplay(i: number): PropertyDisplayContext;
	public propertyDisplay(i?: number): PropertyDisplayContext | PropertyDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyDisplayContext);
		}
	}
	public schematicComplexFigure(): SchematicComplexFigureContext[];
	public schematicComplexFigure(i: number): SchematicComplexFigureContext;
	public schematicComplexFigure(i?: number): SchematicComplexFigureContext | SchematicComplexFigureContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicComplexFigureContext);
		} else {
			return this.getRuleContext(i, SchematicComplexFigureContext);
		}
	}
	public schematicPortAttributes(): SchematicPortAttributesContext[];
	public schematicPortAttributes(i: number): SchematicPortAttributesContext;
	public schematicPortAttributes(i?: number): SchematicPortAttributesContext | SchematicPortAttributesContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortAttributesContext);
		} else {
			return this.getRuleContext(i, SchematicPortAttributesContext);
		}
	}
	public schematicPortStyle(): SchematicPortStyleContext[];
	public schematicPortStyle(i: number): SchematicPortStyleContext;
	public schematicPortStyle(i?: number): SchematicPortStyleContext | SchematicPortStyleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicPortStyleContext);
		} else {
			return this.getRuleContext(i, SchematicPortStyleContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSymbolPortTemplate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSymbolPortTemplate) {
			listener.enterSchematicSymbolPortTemplate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSymbolPortTemplate) {
			listener.exitSchematicSymbolPortTemplate(this);
		}
	}
}


export class SchematicSymbolPortTemplateRefContext extends ParserRuleContext {
	public libraryObjectNameRef(): LibraryObjectNameRefContext {
		return this.getRuleContext(0, LibraryObjectNameRefContext);
	}
	public libraryRef(): LibraryRefContext | undefined {
		return this.tryGetRuleContext(0, LibraryRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSymbolPortTemplateRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSymbolPortTemplateRef) {
			listener.enterSchematicSymbolPortTemplateRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSymbolPortTemplateRef) {
			listener.exitSchematicSymbolPortTemplateRef(this);
		}
	}
}


export class SchematicSymbolRefContext extends ParserRuleContext {
	public viewNameRef(): ViewNameRefContext {
		return this.getRuleContext(0, ViewNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicSymbolRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicSymbolRef) {
			listener.enterSchematicSymbolRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicSymbolRef) {
			listener.exitSchematicSymbolRef(this);
		}
	}
}


export class SchematicTemplateHeaderContext extends ParserRuleContext {
	public schematicUnits(): SchematicUnitsContext {
		return this.getRuleContext(0, SchematicUnitsContext);
	}
	public backgroundColor(): BackgroundColorContext[];
	public backgroundColor(i: number): BackgroundColorContext;
	public backgroundColor(i?: number): BackgroundColorContext | BackgroundColorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BackgroundColorContext);
		} else {
			return this.getRuleContext(i, BackgroundColorContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public originalBoundingBox(): OriginalBoundingBoxContext[];
	public originalBoundingBox(i: number): OriginalBoundingBoxContext;
	public originalBoundingBox(i?: number): OriginalBoundingBoxContext | OriginalBoundingBoxContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OriginalBoundingBoxContext);
		} else {
			return this.getRuleContext(i, OriginalBoundingBoxContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicTemplateHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicTemplateHeader) {
			listener.enterSchematicTemplateHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicTemplateHeader) {
			listener.exitSchematicTemplateHeader(this);
		}
	}
}


export class SchematicUnitsContext extends ParserRuleContext {
	public schematicMetric(): SchematicMetricContext[];
	public schematicMetric(i: number): SchematicMetricContext;
	public schematicMetric(i?: number): SchematicMetricContext | SchematicMetricContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SchematicMetricContext);
		} else {
			return this.getRuleContext(i, SchematicMetricContext);
		}
	}
	public setAngle(): SetAngleContext[];
	public setAngle(i: number): SetAngleContext;
	public setAngle(i?: number): SetAngleContext | SetAngleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetAngleContext);
		} else {
			return this.getRuleContext(i, SetAngleContext);
		}
	}
	public setCapacitance(): SetCapacitanceContext[];
	public setCapacitance(i: number): SetCapacitanceContext;
	public setCapacitance(i?: number): SetCapacitanceContext | SetCapacitanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetCapacitanceContext);
		} else {
			return this.getRuleContext(i, SetCapacitanceContext);
		}
	}
	public setFrequency(): SetFrequencyContext[];
	public setFrequency(i: number): SetFrequencyContext;
	public setFrequency(i?: number): SetFrequencyContext | SetFrequencyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetFrequencyContext);
		} else {
			return this.getRuleContext(i, SetFrequencyContext);
		}
	}
	public setTime(): SetTimeContext[];
	public setTime(i: number): SetTimeContext;
	public setTime(i?: number): SetTimeContext | SetTimeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetTimeContext);
		} else {
			return this.getRuleContext(i, SetTimeContext);
		}
	}
	public setVoltage(): SetVoltageContext[];
	public setVoltage(i: number): SetVoltageContext;
	public setVoltage(i?: number): SetVoltageContext | SetVoltageContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetVoltageContext);
		} else {
			return this.getRuleContext(i, SetVoltageContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicUnits) {
			listener.enterSchematicUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicUnits) {
			listener.exitSchematicUnits(this);
		}
	}
}


export class SchematicViewContext extends ParserRuleContext {
	public viewNameDef(): ViewNameDefContext {
		return this.getRuleContext(0, ViewNameDefContext);
	}
	public schematicViewHeader(): SchematicViewHeaderContext {
		return this.getRuleContext(0, SchematicViewHeaderContext);
	}
	public logicalConnectivity(): LogicalConnectivityContext {
		return this.getRuleContext(0, LogicalConnectivityContext);
	}
	public schematicImplementation(): SchematicImplementationContext {
		return this.getRuleContext(0, SchematicImplementationContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicView; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicView) {
			listener.enterSchematicView(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicView) {
			listener.exitSchematicView(this);
		}
	}
}


export class SchematicViewHeaderContext extends ParserRuleContext {
	public schematicUnits(): SchematicUnitsContext {
		return this.getRuleContext(0, SchematicUnitsContext);
	}
	public derivedFrom(): DerivedFromContext[];
	public derivedFrom(i: number): DerivedFromContext;
	public derivedFrom(i?: number): DerivedFromContext | DerivedFromContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DerivedFromContext);
		} else {
			return this.getRuleContext(i, DerivedFromContext);
		}
	}
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public previousVersion(): PreviousVersionContext[];
	public previousVersion(i: number): PreviousVersionContext;
	public previousVersion(i?: number): PreviousVersionContext | PreviousVersionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PreviousVersionContext);
		} else {
			return this.getRuleContext(i, PreviousVersionContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public status(): StatusContext[];
	public status(i: number): StatusContext;
	public status(i?: number): StatusContext | StatusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StatusContext);
		} else {
			return this.getRuleContext(i, StatusContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicViewHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicViewHeader) {
			listener.enterSchematicViewHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicViewHeader) {
			listener.exitSchematicViewHeader(this);
		}
	}
}


export class SchematicWireAffinityContext extends ParserRuleContext {
	public narrowWire(): NarrowWireContext | undefined {
		return this.tryGetRuleContext(0, NarrowWireContext);
	}
	public wideWire(): WideWireContext | undefined {
		return this.tryGetRuleContext(0, WideWireContext);
	}
	public unrestricted(): UnrestrictedContext | undefined {
		return this.tryGetRuleContext(0, UnrestrictedContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicWireAffinity; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicWireAffinity) {
			listener.enterSchematicWireAffinity(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicWireAffinity) {
			listener.exitSchematicWireAffinity(this);
		}
	}
}


export class SchematicWireStyleContext extends ParserRuleContext {
	public narrowWire(): NarrowWireContext | undefined {
		return this.tryGetRuleContext(0, NarrowWireContext);
	}
	public wideWire(): WideWireContext | undefined {
		return this.tryGetRuleContext(0, WideWireContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_schematicWireStyle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSchematicWireStyle) {
			listener.enterSchematicWireStyle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSchematicWireStyle) {
			listener.exitSchematicWireStyle(this);
		}
	}
}


export class SecondContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_second; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSecond) {
			listener.enterSecond(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSecond) {
			listener.exitSecond(this);
		}
	}
}


export class SecondIntegerExpressionContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_secondIntegerExpression; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSecondIntegerExpression) {
			listener.enterSecondIntegerExpression(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSecondIntegerExpression) {
			listener.exitSecondIntegerExpression(this);
		}
	}
}


export class SecondNumberContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_secondNumber; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSecondNumber) {
			listener.enterSecondNumber(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSecondNumber) {
			listener.exitSecondNumber(this);
		}
	}
}


export class SecondStringExpressionContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_secondStringExpression; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSecondStringExpression) {
			listener.enterSecondStringExpression(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSecondStringExpression) {
			listener.exitSecondStringExpression(this);
		}
	}
}


export class SectionContext extends ParserRuleContext {
	public sectionNameDef(): SectionNameDefContext {
		return this.getRuleContext(0, SectionNameDefContext);
	}
	public sectionTitle(): SectionTitleContext {
		return this.getRuleContext(0, SectionTitleContext);
	}
	public diagram(): DiagramContext[];
	public diagram(i: number): DiagramContext;
	public diagram(i?: number): DiagramContext | DiagramContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DiagramContext);
		} else {
			return this.getRuleContext(i, DiagramContext);
		}
	}
	public section(): SectionContext[];
	public section(i: number): SectionContext;
	public section(i?: number): SectionContext | SectionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SectionContext);
		} else {
			return this.getRuleContext(i, SectionContext);
		}
	}
	public stringValue(): StringValueContext[];
	public stringValue(i: number): StringValueContext;
	public stringValue(i?: number): StringValueContext | StringValueContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringValueContext);
		} else {
			return this.getRuleContext(i, StringValueContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_section; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSection) {
			listener.enterSection(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSection) {
			listener.exitSection(this);
		}
	}
}


export class SectionNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_sectionNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSectionNameDef) {
			listener.enterSectionNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSectionNameDef) {
			listener.exitSectionNameDef(this);
		}
	}
}


export class SectionTitleContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_sectionTitle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSectionTitle) {
			listener.enterSectionTitle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSectionTitle) {
			listener.exitSectionTitle(this);
		}
	}
}


export class SequenceContext extends ParserRuleContext {
	public fromInteger(): FromIntegerContext {
		return this.getRuleContext(0, FromIntegerContext);
	}
	public toInteger(): ToIntegerContext {
		return this.getRuleContext(0, ToIntegerContext);
	}
	public step(): StepContext | undefined {
		return this.tryGetRuleContext(0, StepContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_sequence; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSequence) {
			listener.enterSequence(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSequence) {
			listener.exitSequence(this);
		}
	}
}


export class SetAngleContext extends ParserRuleContext {
	public unitRef(): UnitRefContext {
		return this.getRuleContext(0, UnitRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_setAngle; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSetAngle) {
			listener.enterSetAngle(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSetAngle) {
			listener.exitSetAngle(this);
		}
	}
}


export class SetCapacitanceContext extends ParserRuleContext {
	public unitRef(): UnitRefContext {
		return this.getRuleContext(0, UnitRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_setCapacitance; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSetCapacitance) {
			listener.enterSetCapacitance(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSetCapacitance) {
			listener.exitSetCapacitance(this);
		}
	}
}


export class SetCurrentContext extends ParserRuleContext {
	public unitRef(): UnitRefContext {
		return this.getRuleContext(0, UnitRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_setCurrent; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSetCurrent) {
			listener.enterSetCurrent(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSetCurrent) {
			listener.exitSetCurrent(this);
		}
	}
}


export class SetDistanceContext extends ParserRuleContext {
	public unitRef(): UnitRefContext {
		return this.getRuleContext(0, UnitRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_setDistance; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSetDistance) {
			listener.enterSetDistance(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSetDistance) {
			listener.exitSetDistance(this);
		}
	}
}


export class SetFrequencyContext extends ParserRuleContext {
	public unitRef(): UnitRefContext {
		return this.getRuleContext(0, UnitRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_setFrequency; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSetFrequency) {
			listener.enterSetFrequency(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSetFrequency) {
			listener.exitSetFrequency(this);
		}
	}
}


export class SetTimeContext extends ParserRuleContext {
	public unitRef(): UnitRefContext {
		return this.getRuleContext(0, UnitRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_setTime; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSetTime) {
			listener.enterSetTime(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSetTime) {
			listener.exitSetTime(this);
		}
	}
}


export class SetVoltageContext extends ParserRuleContext {
	public unitRef(): UnitRefContext {
		return this.getRuleContext(0, UnitRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_setVoltage; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSetVoltage) {
			listener.enterSetVoltage(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSetVoltage) {
			listener.exitSetVoltage(this);
		}
	}
}


export class ShapeContext extends ParserRuleContext {
	public curve(): CurveContext {
		return this.getRuleContext(0, CurveContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_shape; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterShape) {
			listener.enterShape(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitShape) {
			listener.exitShape(this);
		}
	}
}


export class SiemensContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_siemens; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSiemens) {
			listener.enterSiemens(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSiemens) {
			listener.exitSiemens(this);
		}
	}
}


export class SignalContext extends ParserRuleContext {
	public signalNameDef(): SignalNameDefContext {
		return this.getRuleContext(0, SignalNameDefContext);
	}
	public signalJoined(): SignalJoinedContext {
		return this.getRuleContext(0, SignalJoinedContext);
	}
	public connectivityTagGenerator(): ConnectivityTagGeneratorContext[];
	public connectivityTagGenerator(i: number): ConnectivityTagGeneratorContext;
	public connectivityTagGenerator(i?: number): ConnectivityTagGeneratorContext | ConnectivityTagGeneratorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ConnectivityTagGeneratorContext);
		} else {
			return this.getRuleContext(i, ConnectivityTagGeneratorContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public signalWidth(): SignalWidthContext[];
	public signalWidth(i: number): SignalWidthContext;
	public signalWidth(i?: number): SignalWidthContext | SignalWidthContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalWidthContext);
		} else {
			return this.getRuleContext(i, SignalWidthContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signal; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignal) {
			listener.enterSignal(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignal) {
			listener.exitSignal(this);
		}
	}
}


export class SignalAnnotateContext extends ParserRuleContext {
	public extendSignalDef(): ExtendSignalDefContext | undefined {
		return this.tryGetRuleContext(0, ExtendSignalDefContext);
	}
	public extendSignalMemberDef(): ExtendSignalMemberDefContext | undefined {
		return this.tryGetRuleContext(0, ExtendSignalMemberDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalAnnotate) {
			listener.enterSignalAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalAnnotate) {
			listener.exitSignalAnnotate(this);
		}
	}
}


export class SignalGroupContext extends ParserRuleContext {
	public signalGroupNameDef(): SignalGroupNameDefContext {
		return this.getRuleContext(0, SignalGroupNameDefContext);
	}
	public signalList(): SignalListContext {
		return this.getRuleContext(0, SignalListContext);
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalGroup; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalGroup) {
			listener.enterSignalGroup(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalGroup) {
			listener.exitSignalGroup(this);
		}
	}
}


export class SignalGroupAnnotateContext extends ParserRuleContext {
	public extendSignalGroupDef(): ExtendSignalGroupDefContext {
		return this.getRuleContext(0, ExtendSignalGroupDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalGroupAnnotate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalGroupAnnotate) {
			listener.enterSignalGroupAnnotate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalGroupAnnotate) {
			listener.exitSignalGroupAnnotate(this);
		}
	}
}


export class SignalGroupNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalGroupNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalGroupNameCaseSensitive) {
			listener.enterSignalGroupNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalGroupNameCaseSensitive) {
			listener.exitSignalGroupNameCaseSensitive(this);
		}
	}
}


export class SignalGroupNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalGroupNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalGroupNameDef) {
			listener.enterSignalGroupNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalGroupNameDef) {
			listener.exitSignalGroupNameDef(this);
		}
	}
}


export class SignalGroupNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalGroupNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalGroupNameRef) {
			listener.enterSignalGroupNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalGroupNameRef) {
			listener.exitSignalGroupNameRef(this);
		}
	}
}


export class SignalGroupRefContext extends ParserRuleContext {
	public signalGroupNameRef(): SignalGroupNameRefContext {
		return this.getRuleContext(0, SignalGroupNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalGroupRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalGroupRef) {
			listener.enterSignalGroupRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalGroupRef) {
			listener.exitSignalGroupRef(this);
		}
	}
}


export class SignalIndexValueContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalIndexValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalIndexValue) {
			listener.enterSignalIndexValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalIndexValue) {
			listener.exitSignalIndexValue(this);
		}
	}
}


export class SignalJoinedContext extends ParserRuleContext {
	public globalPortRef(): GlobalPortRefContext[];
	public globalPortRef(i: number): GlobalPortRefContext;
	public globalPortRef(i?: number): GlobalPortRefContext | GlobalPortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(GlobalPortRefContext);
		} else {
			return this.getRuleContext(i, GlobalPortRefContext);
		}
	}
	public portInstanceRef(): PortInstanceRefContext[];
	public portInstanceRef(i: number): PortInstanceRefContext;
	public portInstanceRef(i?: number): PortInstanceRefContext | PortInstanceRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortInstanceRefContext);
		} else {
			return this.getRuleContext(i, PortInstanceRefContext);
		}
	}
	public portMemberRef(): PortMemberRefContext[];
	public portMemberRef(i: number): PortMemberRefContext;
	public portMemberRef(i?: number): PortMemberRefContext | PortMemberRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortMemberRefContext);
		} else {
			return this.getRuleContext(i, PortMemberRefContext);
		}
	}
	public portRef(): PortRefContext[];
	public portRef(i: number): PortRefContext;
	public portRef(i?: number): PortRefContext | PortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortRefContext);
		} else {
			return this.getRuleContext(i, PortRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalJoined; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalJoined) {
			listener.enterSignalJoined(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalJoined) {
			listener.exitSignalJoined(this);
		}
	}
}


export class SignalListContext extends ParserRuleContext {
	public signalGroupRef(): SignalGroupRefContext[];
	public signalGroupRef(i: number): SignalGroupRefContext;
	public signalGroupRef(i?: number): SignalGroupRefContext | SignalGroupRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalGroupRefContext);
		} else {
			return this.getRuleContext(i, SignalGroupRefContext);
		}
	}
	public signalRef(): SignalRefContext[];
	public signalRef(i: number): SignalRefContext;
	public signalRef(i?: number): SignalRefContext | SignalRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SignalRefContext);
		} else {
			return this.getRuleContext(i, SignalRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalList; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalList) {
			listener.enterSignalList(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalList) {
			listener.exitSignalList(this);
		}
	}
}


export class SignalMemberRefContext extends ParserRuleContext {
	public signalNameRef(): SignalNameRefContext {
		return this.getRuleContext(0, SignalNameRefContext);
	}
	public indexValue(): IndexValueContext {
		return this.getRuleContext(0, IndexValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalMemberRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalMemberRef) {
			listener.enterSignalMemberRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalMemberRef) {
			listener.exitSignalMemberRef(this);
		}
	}
}


export class SignalNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalNameCaseSensitive) {
			listener.enterSignalNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalNameCaseSensitive) {
			listener.exitSignalNameCaseSensitive(this);
		}
	}
}


export class SignalNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalNameDef) {
			listener.enterSignalNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalNameDef) {
			listener.exitSignalNameDef(this);
		}
	}
}


export class SignalNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalNameRef) {
			listener.enterSignalNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalNameRef) {
			listener.exitSignalNameRef(this);
		}
	}
}


export class SignalRefContext extends ParserRuleContext {
	public signalNameRef(): SignalNameRefContext {
		return this.getRuleContext(0, SignalNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalRef) {
			listener.enterSignalRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalRef) {
			listener.exitSignalRef(this);
		}
	}
}


export class SignalWidthContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_signalWidth; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSignalWidth) {
			listener.enterSignalWidth(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSignalWidth) {
			listener.exitSignalWidth(this);
		}
	}
}


export class SimpleNameContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_simpleName; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSimpleName) {
			listener.enterSimpleName(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSimpleName) {
			listener.exitSimpleName(this);
		}
	}
}


export class StartPointContext extends ParserRuleContext {
	public pointValue(): PointValueContext {
		return this.getRuleContext(0, PointValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_startPoint; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStartPoint) {
			listener.enterStartPoint(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStartPoint) {
			listener.exitStartPoint(this);
		}
	}
}


export class StatusContext extends ParserRuleContext {
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public copyright(): CopyrightContext[];
	public copyright(i: number): CopyrightContext;
	public copyright(i?: number): CopyrightContext | CopyrightContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CopyrightContext);
		} else {
			return this.getRuleContext(i, CopyrightContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	public written(): WrittenContext[];
	public written(i: number): WrittenContext;
	public written(i?: number): WrittenContext | WrittenContext[] {
		if (i === undefined) {
			return this.getRuleContexts(WrittenContext);
		} else {
			return this.getRuleContext(i, WrittenContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_status; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStatus) {
			listener.enterStatus(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStatus) {
			listener.exitStatus(this);
		}
	}
}


export class StepContext extends ParserRuleContext {
	public integerValue(): IntegerValueContext {
		return this.getRuleContext(0, IntegerValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_step; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStep) {
			listener.enterStep(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStep) {
			listener.exitStep(this);
		}
	}
}


export class StringContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_string; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterString) {
			listener.enterString(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitString) {
			listener.exitString(this);
		}
	}
}


export class StringConcatenateContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext[];
	public stringExpression(i: number): StringExpressionContext;
	public stringExpression(i?: number): StringExpressionContext | StringExpressionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringExpressionContext);
		} else {
			return this.getRuleContext(i, StringExpressionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringConcatenate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringConcatenate) {
			listener.enterStringConcatenate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringConcatenate) {
			listener.exitStringConcatenate(this);
		}
	}
}


export class StringConstantContext extends ParserRuleContext {
	public constantNameDef(): ConstantNameDefContext {
		return this.getRuleContext(0, ConstantNameDefContext);
	}
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringConstant; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringConstant) {
			listener.enterStringConstant(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringConstant) {
			listener.exitStringConstant(this);
		}
	}
}


export class StringConstantRefContext extends ParserRuleContext {
	public constantNameRef(): ConstantNameRefContext {
		return this.getRuleContext(0, ConstantNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringConstantRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringConstantRef) {
			listener.enterStringConstantRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringConstantRef) {
			listener.exitStringConstantRef(this);
		}
	}
}


export class StringEqualContext extends ParserRuleContext {
	public firstStringExpression(): FirstStringExpressionContext {
		return this.getRuleContext(0, FirstStringExpressionContext);
	}
	public secondStringExpression(): SecondStringExpressionContext {
		return this.getRuleContext(0, SecondStringExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringEqual; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringEqual) {
			listener.enterStringEqual(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringEqual) {
			listener.exitStringEqual(this);
		}
	}
}


export class StringExpressionContext extends ParserRuleContext {
	public stringParameterRef(): StringParameterRefContext | undefined {
		return this.tryGetRuleContext(0, StringParameterRefContext);
	}
	public stringToken(): StringTokenContext | undefined {
		return this.tryGetRuleContext(0, StringTokenContext);
	}
	public stringConstantRef(): StringConstantRefContext | undefined {
		return this.tryGetRuleContext(0, StringConstantRefContext);
	}
	public stringConcatenate(): StringConcatenateContext | undefined {
		return this.tryGetRuleContext(0, StringConcatenateContext);
	}
	public substring(): SubstringContext | undefined {
		return this.tryGetRuleContext(0, SubstringContext);
	}
	public decimalToString(): DecimalToStringContext | undefined {
		return this.tryGetRuleContext(0, DecimalToStringContext);
	}
	public stringPrefix(): StringPrefixContext | undefined {
		return this.tryGetRuleContext(0, StringPrefixContext);
	}
	public stringSuffix(): StringSuffixContext | undefined {
		return this.tryGetRuleContext(0, StringSuffixContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringExpression; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringExpression) {
			listener.enterStringExpression(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringExpression) {
			listener.exitStringExpression(this);
		}
	}
}


export class StringLengthContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringLength; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringLength) {
			listener.enterStringLength(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringLength) {
			listener.exitStringLength(this);
		}
	}
}


export class StringParameterContext extends ParserRuleContext {
	public parameterNameDef(): ParameterNameDefContext {
		return this.getRuleContext(0, ParameterNameDefContext);
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public string(): StringContext[];
	public string(i: number): StringContext;
	public string(i?: number): StringContext | StringContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringContext);
		} else {
			return this.getRuleContext(i, StringContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringParameter; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringParameter) {
			listener.enterStringParameter(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringParameter) {
			listener.exitStringParameter(this);
		}
	}
}


export class StringParameterAssignContext extends ParserRuleContext {
	public parameterNameRef(): ParameterNameRefContext {
		return this.getRuleContext(0, ParameterNameRefContext);
	}
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringParameterAssign; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringParameterAssign) {
			listener.enterStringParameterAssign(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringParameterAssign) {
			listener.exitStringParameterAssign(this);
		}
	}
}


export class StringParameterRefContext extends ParserRuleContext {
	public parameterNameRef(): ParameterNameRefContext {
		return this.getRuleContext(0, ParameterNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringParameterRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringParameterRef) {
			listener.enterStringParameterRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringParameterRef) {
			listener.exitStringParameterRef(this);
		}
	}
}


export class StringPrefixContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	public substringLength(): SubstringLengthContext {
		return this.getRuleContext(0, SubstringLengthContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringPrefix; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringPrefix) {
			listener.enterStringPrefix(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringPrefix) {
			listener.exitStringPrefix(this);
		}
	}
}


export class StringSuffixContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	public substringOffset(): SubstringOffsetContext {
		return this.getRuleContext(0, SubstringOffsetContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringSuffix; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringSuffix) {
			listener.enterStringSuffix(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringSuffix) {
			listener.exitStringSuffix(this);
		}
	}
}


export class StringValueContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringValue) {
			listener.enterStringValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringValue) {
			listener.exitStringValue(this);
		}
	}
}


export class StrongContext extends ParserRuleContext {
	public logicNameRef(): LogicNameRefContext {
		return this.getRuleContext(0, LogicNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_strong; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStrong) {
			listener.enterStrong(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStrong) {
			listener.exitStrong(this);
		}
	}
}


export class SubIssueContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_subIssue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSubIssue) {
			listener.enterSubIssue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSubIssue) {
			listener.exitSubIssue(this);
		}
	}
}


export class SubstringContext extends ParserRuleContext {
	public stringExpression(): StringExpressionContext {
		return this.getRuleContext(0, StringExpressionContext);
	}
	public substringLength(): SubstringLengthContext {
		return this.getRuleContext(0, SubstringLengthContext);
	}
	public substringOffset(): SubstringOffsetContext {
		return this.getRuleContext(0, SubstringOffsetContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_substring; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSubstring) {
			listener.enterSubstring(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSubstring) {
			listener.exitSubstring(this);
		}
	}
}


export class SubstringLengthContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_substringLength; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSubstringLength) {
			listener.enterSubstringLength(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSubstringLength) {
			listener.exitSubstringLength(this);
		}
	}
}


export class SubstringOffsetContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_substringOffset; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSubstringOffset) {
			listener.enterSubstringOffset(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSubstringOffset) {
			listener.exitSubstringOffset(this);
		}
	}
}


export class SubtrahendContext extends ParserRuleContext {
	public integerExpression(): IntegerExpressionContext {
		return this.getRuleContext(0, IntegerExpressionContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_subtrahend; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSubtrahend) {
			listener.enterSubtrahend(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSubtrahend) {
			listener.exitSubtrahend(this);
		}
	}
}


export class SymbolicLayoutUnitsContext extends ParserRuleContext {
	public setAngle(): SetAngleContext[];
	public setAngle(i: number): SetAngleContext;
	public setAngle(i?: number): SetAngleContext | SetAngleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetAngleContext);
		} else {
			return this.getRuleContext(i, SetAngleContext);
		}
	}
	public setCapacitance(): SetCapacitanceContext[];
	public setCapacitance(i: number): SetCapacitanceContext;
	public setCapacitance(i?: number): SetCapacitanceContext | SetCapacitanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetCapacitanceContext);
		} else {
			return this.getRuleContext(i, SetCapacitanceContext);
		}
	}
	public setDistance(): SetDistanceContext[];
	public setDistance(i: number): SetDistanceContext;
	public setDistance(i?: number): SetDistanceContext | SetDistanceContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetDistanceContext);
		} else {
			return this.getRuleContext(i, SetDistanceContext);
		}
	}
	public setTime(): SetTimeContext[];
	public setTime(i: number): SetTimeContext;
	public setTime(i?: number): SetTimeContext | SetTimeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SetTimeContext);
		} else {
			return this.getRuleContext(i, SetTimeContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_symbolicLayoutUnits; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSymbolicLayoutUnits) {
			listener.enterSymbolicLayoutUnits(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSymbolicLayoutUnits) {
			listener.exitSymbolicLayoutUnits(this);
		}
	}
}


export class SymbolicLayoutViewContext extends ParserRuleContext {
	public viewNameDef(): ViewNameDefContext {
		return this.getRuleContext(0, ViewNameDefContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	public nameInformation(): NameInformationContext | undefined {
		return this.tryGetRuleContext(0, NameInformationContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_symbolicLayoutView; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSymbolicLayoutView) {
			listener.enterSymbolicLayoutView(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSymbolicLayoutView) {
			listener.exitSymbolicLayoutView(this);
		}
	}
}


export class SymbolPortImplementationNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_symbolPortImplementationNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSymbolPortImplementationNameDef) {
			listener.enterSymbolPortImplementationNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSymbolPortImplementationNameDef) {
			listener.exitSymbolPortImplementationNameDef(this);
		}
	}
}


export class SymbolPortImplementationNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_symbolPortImplementationNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterSymbolPortImplementationNameRef) {
			listener.enterSymbolPortImplementationNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitSymbolPortImplementationNameRef) {
			listener.exitSymbolPortImplementationNameRef(this);
		}
	}
}


export class TechnologyContext extends ParserRuleContext {
	public physicalScaling(): PhysicalScalingContext {
		return this.getRuleContext(0, PhysicalScalingContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public figureGroup(): FigureGroupContext[];
	public figureGroup(i: number): FigureGroupContext;
	public figureGroup(i?: number): FigureGroupContext | FigureGroupContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FigureGroupContext);
		} else {
			return this.getRuleContext(i, FigureGroupContext);
		}
	}
	public logicDefinitions(): LogicDefinitionsContext[];
	public logicDefinitions(i: number): LogicDefinitionsContext;
	public logicDefinitions(i?: number): LogicDefinitionsContext | LogicDefinitionsContext[] {
		if (i === undefined) {
			return this.getRuleContexts(LogicDefinitionsContext);
		} else {
			return this.getRuleContext(i, LogicDefinitionsContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_technology; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTechnology) {
			listener.enterTechnology(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTechnology) {
			listener.exitTechnology(this);
		}
	}
}


export class TextHeightContext extends ParserRuleContext {
	public lengthValue(): LengthValueContext {
		return this.getRuleContext(0, LengthValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_textHeight; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTextHeight) {
			listener.enterTextHeight(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTextHeight) {
			listener.exitTextHeight(this);
		}
	}
}


export class ThroughPointContext extends ParserRuleContext {
	public numberPoint(): NumberPointContext {
		return this.getRuleContext(0, NumberPointContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_throughPoint; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterThroughPoint) {
			listener.enterThroughPoint(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitThroughPoint) {
			listener.exitThroughPoint(this);
		}
	}
}


export class TimeContext extends ParserRuleContext {
	public hourNumber(): HourNumberContext {
		return this.getRuleContext(0, HourNumberContext);
	}
	public minuteNumber(): MinuteNumberContext {
		return this.getRuleContext(0, MinuteNumberContext);
	}
	public secondNumber(): SecondNumberContext {
		return this.getRuleContext(0, SecondNumberContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_time; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTime) {
			listener.enterTime(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTime) {
			listener.exitTime(this);
		}
	}
}


export class TimeDelayContext extends ParserRuleContext {
	public timeValue(): TimeValueContext {
		return this.getRuleContext(0, TimeValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_timeDelay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTimeDelay) {
			listener.enterTimeDelay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTimeDelay) {
			listener.exitTimeDelay(this);
		}
	}
}


export class TimeIntervalContext extends ParserRuleContext {
	public event(): EventContext[];
	public event(i: number): EventContext;
	public event(i?: number): EventContext | EventContext[] {
		if (i === undefined) {
			return this.getRuleContexts(EventContext);
		} else {
			return this.getRuleContext(i, EventContext);
		}
	}
	public offsetEvent(): OffsetEventContext[];
	public offsetEvent(i: number): OffsetEventContext;
	public offsetEvent(i?: number): OffsetEventContext | OffsetEventContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OffsetEventContext);
		} else {
			return this.getRuleContext(i, OffsetEventContext);
		}
	}
	public duration(): DurationContext | undefined {
		return this.tryGetRuleContext(0, DurationContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_timeInterval; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTimeInterval) {
			listener.enterTimeInterval(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTimeInterval) {
			listener.exitTimeInterval(this);
		}
	}
}


export class TimeStampContext extends ParserRuleContext {
	public date(): DateContext {
		return this.getRuleContext(0, DateContext);
	}
	public time(): TimeContext {
		return this.getRuleContext(0, TimeContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_timeStamp; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTimeStamp) {
			listener.enterTimeStamp(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTimeStamp) {
			listener.exitTimeStamp(this);
		}
	}
}


export class TimeValueContext extends ParserRuleContext {
	public miNoMaxValue(): MiNoMaxValueContext {
		return this.getRuleContext(0, MiNoMaxValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_timeValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTimeValue) {
			listener.enterTimeValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTimeValue) {
			listener.exitTimeValue(this);
		}
	}
}


export class TimingContext extends ParserRuleContext {
	public timingNameDef(): TimingNameDefContext {
		return this.getRuleContext(0, TimingNameDefContext);
	}
	public derivation(): DerivationContext {
		return this.getRuleContext(0, DerivationContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public forbiddenEvent(): ForbiddenEventContext[];
	public forbiddenEvent(i: number): ForbiddenEventContext;
	public forbiddenEvent(i?: number): ForbiddenEventContext | ForbiddenEventContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ForbiddenEventContext);
		} else {
			return this.getRuleContext(i, ForbiddenEventContext);
		}
	}
	public pathDelay(): PathDelayContext[];
	public pathDelay(i: number): PathDelayContext;
	public pathDelay(i?: number): PathDelayContext | PathDelayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PathDelayContext);
		} else {
			return this.getRuleContext(i, PathDelayContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_timing; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTiming) {
			listener.enterTiming(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTiming) {
			listener.exitTiming(this);
		}
	}
}


export class TimingDisplayContext extends ParserRuleContext {
	public timingNameRef(): TimingNameRefContext {
		return this.getRuleContext(0, TimingNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_timingDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTimingDisplay) {
			listener.enterTimingDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTimingDisplay) {
			listener.exitTimingDisplay(this);
		}
	}
}


export class TimingNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_timingNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTimingNameDef) {
			listener.enterTimingNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTimingNameDef) {
			listener.exitTimingNameDef(this);
		}
	}
}


export class TimingNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_timingNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTimingNameRef) {
			listener.enterTimingNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTimingNameRef) {
			listener.exitTimingNameRef(this);
		}
	}
}


export class ToIntegerContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_toInteger; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterToInteger) {
			listener.enterToInteger(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitToInteger) {
			listener.exitToInteger(this);
		}
	}
}


export class TopJustifyContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_topJustify; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTopJustify) {
			listener.enterTopJustify(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTopJustify) {
			listener.exitTopJustify(this);
		}
	}
}


export class TotalPagesContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_totalPages; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTotalPages) {
			listener.enterTotalPages(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTotalPages) {
			listener.exitTotalPages(this);
		}
	}
}


export class TotalPagesDisplayContext extends ParserRuleContext {
	public addDisplay(): AddDisplayContext | undefined {
		return this.tryGetRuleContext(0, AddDisplayContext);
	}
	public replaceDisplay(): ReplaceDisplayContext | undefined {
		return this.tryGetRuleContext(0, ReplaceDisplayContext);
	}
	public removeDisplay(): RemoveDisplayContext | undefined {
		return this.tryGetRuleContext(0, RemoveDisplayContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_totalPagesDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTotalPagesDisplay) {
			listener.enterTotalPagesDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTotalPagesDisplay) {
			listener.exitTotalPagesDisplay(this);
		}
	}
}


export class TransformContext extends ParserRuleContext {
	public origin(): OriginContext[];
	public origin(i: number): OriginContext;
	public origin(i?: number): OriginContext | OriginContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OriginContext);
		} else {
			return this.getRuleContext(i, OriginContext);
		}
	}
	public rotation(): RotationContext[];
	public rotation(i: number): RotationContext;
	public rotation(i?: number): RotationContext | RotationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RotationContext);
		} else {
			return this.getRuleContext(i, RotationContext);
		}
	}
	public scaleX(): ScaleXContext[];
	public scaleX(i: number): ScaleXContext;
	public scaleX(i?: number): ScaleXContext | ScaleXContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ScaleXContext);
		} else {
			return this.getRuleContext(i, ScaleXContext);
		}
	}
	public scaleY(): ScaleYContext[];
	public scaleY(i: number): ScaleYContext;
	public scaleY(i?: number): ScaleYContext | ScaleYContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ScaleYContext);
		} else {
			return this.getRuleContext(i, ScaleYContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_transform; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTransform) {
			listener.enterTransform(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTransform) {
			listener.exitTransform(this);
		}
	}
}


export class TransitionContext extends ParserRuleContext {
	public previousLogicValue(): PreviousLogicValueContext {
		return this.getRuleContext(0, PreviousLogicValueContext);
	}
	public presentLogicValue(): PresentLogicValueContext {
		return this.getRuleContext(0, PresentLogicValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_transition; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTransition) {
			listener.enterTransition(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTransition) {
			listener.exitTransition(this);
		}
	}
}


export class EtrueContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_etrue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterEtrue) {
			listener.enterEtrue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitEtrue) {
			listener.exitEtrue(this);
		}
	}
}


export class TruncateContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_truncate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTruncate) {
			listener.enterTruncate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTruncate) {
			listener.exitTruncate(this);
		}
	}
}


export class TypedValueContext extends ParserRuleContext {
	public eboolean(): EbooleanContext | undefined {
		return this.tryGetRuleContext(0, EbooleanContext);
	}
	public integer(): IntegerContext | undefined {
		return this.tryGetRuleContext(0, IntegerContext);
	}
	public miNoMax(): MiNoMaxContext | undefined {
		return this.tryGetRuleContext(0, MiNoMaxContext);
	}
	public number(): NumberContext | undefined {
		return this.tryGetRuleContext(0, NumberContext);
	}
	public point(): PointContext | undefined {
		return this.tryGetRuleContext(0, PointContext);
	}
	public string(): StringContext | undefined {
		return this.tryGetRuleContext(0, StringContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_typedValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTypedValue) {
			listener.enterTypedValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTypedValue) {
			listener.exitTypedValue(this);
		}
	}
}


export class TypefaceContext extends ParserRuleContext {
	public fontFamily(): FontFamilyContext {
		return this.getRuleContext(0, FontFamilyContext);
	}
	public typefaceSuffix(): TypefaceSuffixContext | undefined {
		return this.tryGetRuleContext(0, TypefaceSuffixContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_typeface; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTypeface) {
			listener.enterTypeface(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTypeface) {
			listener.exitTypeface(this);
		}
	}
}


export class TypefaceSuffixContext extends ParserRuleContext {
	public stringToken(): StringTokenContext {
		return this.getRuleContext(0, StringTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_typefaceSuffix; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterTypefaceSuffix) {
			listener.enterTypefaceSuffix(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitTypefaceSuffix) {
			listener.exitTypefaceSuffix(this);
		}
	}
}


export class UnconfiguredContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unconfigured; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnconfigured) {
			listener.enterUnconfigured(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnconfigured) {
			listener.exitUnconfigured(this);
		}
	}
}


export class UnconstrainedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unconstrained; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnconstrained) {
			listener.enterUnconstrained(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnconstrained) {
			listener.exitUnconstrained(this);
		}
	}
}


export class UndefinedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_undefined; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUndefined) {
			listener.enterUndefined(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUndefined) {
			listener.exitUndefined(this);
		}
	}
}


export class UnitContext extends ParserRuleContext {
	public unitNameDef(): UnitNameDefContext {
		return this.getRuleContext(0, UnitNameDefContext);
	}
	public numberOfNewUnits(): NumberOfNewUnitsContext {
		return this.getRuleContext(0, NumberOfNewUnitsContext);
	}
	public numberOfBasicUnits(): NumberOfBasicUnitsContext {
		return this.getRuleContext(0, NumberOfBasicUnitsContext);
	}
	public ampere(): AmpereContext[];
	public ampere(i: number): AmpereContext;
	public ampere(i?: number): AmpereContext | AmpereContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AmpereContext);
		} else {
			return this.getRuleContext(i, AmpereContext);
		}
	}
	public candela(): CandelaContext[];
	public candela(i: number): CandelaContext;
	public candela(i?: number): CandelaContext | CandelaContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CandelaContext);
		} else {
			return this.getRuleContext(i, CandelaContext);
		}
	}
	public celsius(): CelsiusContext[];
	public celsius(i: number): CelsiusContext;
	public celsius(i?: number): CelsiusContext | CelsiusContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CelsiusContext);
		} else {
			return this.getRuleContext(i, CelsiusContext);
		}
	}
	public coulomb(): CoulombContext[];
	public coulomb(i: number): CoulombContext;
	public coulomb(i?: number): CoulombContext | CoulombContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CoulombContext);
		} else {
			return this.getRuleContext(i, CoulombContext);
		}
	}
	public degree(): DegreeContext[];
	public degree(i: number): DegreeContext;
	public degree(i?: number): DegreeContext | DegreeContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DegreeContext);
		} else {
			return this.getRuleContext(i, DegreeContext);
		}
	}
	public fahrenheit(): FahrenheitContext[];
	public fahrenheit(i: number): FahrenheitContext;
	public fahrenheit(i?: number): FahrenheitContext | FahrenheitContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FahrenheitContext);
		} else {
			return this.getRuleContext(i, FahrenheitContext);
		}
	}
	public farad(): FaradContext[];
	public farad(i: number): FaradContext;
	public farad(i?: number): FaradContext | FaradContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FaradContext);
		} else {
			return this.getRuleContext(i, FaradContext);
		}
	}
	public henry(): HenryContext[];
	public henry(i: number): HenryContext;
	public henry(i?: number): HenryContext | HenryContext[] {
		if (i === undefined) {
			return this.getRuleContexts(HenryContext);
		} else {
			return this.getRuleContext(i, HenryContext);
		}
	}
	public hertz(): HertzContext[];
	public hertz(i: number): HertzContext;
	public hertz(i?: number): HertzContext | HertzContext[] {
		if (i === undefined) {
			return this.getRuleContexts(HertzContext);
		} else {
			return this.getRuleContext(i, HertzContext);
		}
	}
	public joule(): JouleContext[];
	public joule(i: number): JouleContext;
	public joule(i?: number): JouleContext | JouleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(JouleContext);
		} else {
			return this.getRuleContext(i, JouleContext);
		}
	}
	public kelvin(): KelvinContext[];
	public kelvin(i: number): KelvinContext;
	public kelvin(i?: number): KelvinContext | KelvinContext[] {
		if (i === undefined) {
			return this.getRuleContexts(KelvinContext);
		} else {
			return this.getRuleContext(i, KelvinContext);
		}
	}
	public kilogram(): KilogramContext[];
	public kilogram(i: number): KilogramContext;
	public kilogram(i?: number): KilogramContext | KilogramContext[] {
		if (i === undefined) {
			return this.getRuleContexts(KilogramContext);
		} else {
			return this.getRuleContext(i, KilogramContext);
		}
	}
	public meter(): MeterContext[];
	public meter(i: number): MeterContext;
	public meter(i?: number): MeterContext | MeterContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MeterContext);
		} else {
			return this.getRuleContext(i, MeterContext);
		}
	}
	public mole(): MoleContext[];
	public mole(i: number): MoleContext;
	public mole(i?: number): MoleContext | MoleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(MoleContext);
		} else {
			return this.getRuleContext(i, MoleContext);
		}
	}
	public ohm(): OhmContext[];
	public ohm(i: number): OhmContext;
	public ohm(i?: number): OhmContext | OhmContext[] {
		if (i === undefined) {
			return this.getRuleContexts(OhmContext);
		} else {
			return this.getRuleContext(i, OhmContext);
		}
	}
	public radian(): RadianContext[];
	public radian(i: number): RadianContext;
	public radian(i?: number): RadianContext | RadianContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RadianContext);
		} else {
			return this.getRuleContext(i, RadianContext);
		}
	}
	public second(): SecondContext[];
	public second(i: number): SecondContext;
	public second(i?: number): SecondContext | SecondContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SecondContext);
		} else {
			return this.getRuleContext(i, SecondContext);
		}
	}
	public siemens(): SiemensContext[];
	public siemens(i: number): SiemensContext;
	public siemens(i?: number): SiemensContext | SiemensContext[] {
		if (i === undefined) {
			return this.getRuleContexts(SiemensContext);
		} else {
			return this.getRuleContext(i, SiemensContext);
		}
	}
	public volt(): VoltContext[];
	public volt(i: number): VoltContext;
	public volt(i?: number): VoltContext | VoltContext[] {
		if (i === undefined) {
			return this.getRuleContexts(VoltContext);
		} else {
			return this.getRuleContext(i, VoltContext);
		}
	}
	public watt(): WattContext[];
	public watt(i: number): WattContext;
	public watt(i?: number): WattContext | WattContext[] {
		if (i === undefined) {
			return this.getRuleContexts(WattContext);
		} else {
			return this.getRuleContext(i, WattContext);
		}
	}
	public weber(): WeberContext[];
	public weber(i: number): WeberContext;
	public weber(i?: number): WeberContext | WeberContext[] {
		if (i === undefined) {
			return this.getRuleContexts(WeberContext);
		} else {
			return this.getRuleContext(i, WeberContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unit; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnit) {
			listener.enterUnit(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnit) {
			listener.exitUnit(this);
		}
	}
}


export class UnitDefinitionsContext extends ParserRuleContext {
	public unit(): UnitContext[];
	public unit(i: number): UnitContext;
	public unit(i?: number): UnitContext | UnitContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UnitContext);
		} else {
			return this.getRuleContext(i, UnitContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unitDefinitions; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnitDefinitions) {
			listener.enterUnitDefinitions(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnitDefinitions) {
			listener.exitUnitDefinitions(this);
		}
	}
}


export class UnitExponentContext extends ParserRuleContext {
	public scaledInteger(): ScaledIntegerContext {
		return this.getRuleContext(0, ScaledIntegerContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unitExponent; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnitExponent) {
			listener.enterUnitExponent(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnitExponent) {
			listener.exitUnitExponent(this);
		}
	}
}


export class UnitNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unitNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnitNameDef) {
			listener.enterUnitNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnitNameDef) {
			listener.exitUnitNameDef(this);
		}
	}
}


export class UnitNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unitNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnitNameRef) {
			listener.enterUnitNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnitNameRef) {
			listener.exitUnitNameRef(this);
		}
	}
}


export class UnitRefContext extends ParserRuleContext {
	public unitNameRef(): UnitNameRefContext {
		return this.getRuleContext(0, UnitNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unitRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnitRef) {
			listener.enterUnitRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnitRef) {
			listener.exitUnitRef(this);
		}
	}
}


export class UnrestrictedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unrestricted; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnrestricted) {
			listener.enterUnrestricted(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnrestricted) {
			listener.exitUnrestricted(this);
		}
	}
}


export class UnspecifiedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unspecified; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnspecified) {
			listener.enterUnspecified(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnspecified) {
			listener.exitUnspecified(this);
		}
	}
}


export class UnspecifiedDirectionPortContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unspecifiedDirectionPort; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnspecifiedDirectionPort) {
			listener.enterUnspecifiedDirectionPort(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnspecifiedDirectionPort) {
			listener.exitUnspecifiedDirectionPort(this);
		}
	}
}


export class UntypedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_untyped; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUntyped) {
			listener.enterUntyped(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUntyped) {
			listener.exitUntyped(this);
		}
	}
}


export class UnusedContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_unused; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUnused) {
			listener.enterUnused(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUnused) {
			listener.exitUnused(this);
		}
	}
}


export class UsableAreaContext extends ParserRuleContext {
	public rectangle(): RectangleContext[];
	public rectangle(i: number): RectangleContext;
	public rectangle(i?: number): RectangleContext | RectangleContext[] {
		if (i === undefined) {
			return this.getRuleContexts(RectangleContext);
		} else {
			return this.getRuleContext(i, RectangleContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_usableArea; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUsableArea) {
			listener.enterUsableArea(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUsableArea) {
			listener.exitUsableArea(this);
		}
	}
}


export class UserDataContext extends ParserRuleContext {
	public userDataTag(): UserDataTagContext {
		return this.getRuleContext(0, UserDataTagContext);
	}
	public IDENTIFIER(): TerminalNode[];
	public IDENTIFIER(i: number): TerminalNode;
	public IDENTIFIER(i?: number): TerminalNode | TerminalNode[] {
		if (i === undefined) {
			return this.getTokens(EDIF300Parser.IDENTIFIER);
		} else {
			return this.getToken(EDIF300Parser.IDENTIFIER, i);
		}
	}
	public integerToken(): IntegerTokenContext[];
	public integerToken(i: number): IntegerTokenContext;
	public integerToken(i?: number): IntegerTokenContext | IntegerTokenContext[] {
		if (i === undefined) {
			return this.getRuleContexts(IntegerTokenContext);
		} else {
			return this.getRuleContext(i, IntegerTokenContext);
		}
	}
	public stringToken(): StringTokenContext[];
	public stringToken(i: number): StringTokenContext;
	public stringToken(i?: number): StringTokenContext | StringTokenContext[] {
		if (i === undefined) {
			return this.getRuleContexts(StringTokenContext);
		} else {
			return this.getRuleContext(i, StringTokenContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_userData; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUserData) {
			listener.enterUserData(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUserData) {
			listener.exitUserData(this);
		}
	}
}


export class UserDataTagContext extends ParserRuleContext {
	public IDENTIFIER(): TerminalNode { return this.getToken(EDIF300Parser.IDENTIFIER, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_userDataTag; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterUserDataTag) {
			listener.enterUserDataTag(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitUserDataTag) {
			listener.exitUserDataTag(this);
		}
	}
}


export class VersionContext extends ParserRuleContext {
	public stringValue(): StringValueContext {
		return this.getRuleContext(0, StringValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_version; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterVersion) {
			listener.enterVersion(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitVersion) {
			listener.exitVersion(this);
		}
	}
}


export class VerticalJustificationContext extends ParserRuleContext {
	public bottomJustify(): BottomJustifyContext | undefined {
		return this.tryGetRuleContext(0, BottomJustifyContext);
	}
	public baselineJustify(): BaselineJustifyContext | undefined {
		return this.tryGetRuleContext(0, BaselineJustifyContext);
	}
	public middleJustify(): MiddleJustifyContext | undefined {
		return this.tryGetRuleContext(0, MiddleJustifyContext);
	}
	public caplineJustify(): CaplineJustifyContext | undefined {
		return this.tryGetRuleContext(0, CaplineJustifyContext);
	}
	public topJustify(): TopJustifyContext | undefined {
		return this.tryGetRuleContext(0, TopJustifyContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_verticalJustification; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterVerticalJustification) {
			listener.enterVerticalJustification(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitVerticalJustification) {
			listener.exitVerticalJustification(this);
		}
	}
}


export class ViewGroupContext extends ParserRuleContext {
	public viewGroupNameDef(): ViewGroupNameDefContext {
		return this.getRuleContext(0, ViewGroupNameDefContext);
	}
	public viewGroupHeader(): ViewGroupHeaderContext {
		return this.getRuleContext(0, ViewGroupHeaderContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	public viewGroupRef(): ViewGroupRefContext[];
	public viewGroupRef(i: number): ViewGroupRefContext;
	public viewGroupRef(i?: number): ViewGroupRefContext | ViewGroupRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewGroupRefContext);
		} else {
			return this.getRuleContext(i, ViewGroupRefContext);
		}
	}
	public viewRef(): ViewRefContext[];
	public viewRef(i: number): ViewRefContext;
	public viewRef(i?: number): ViewRefContext | ViewRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ViewRefContext);
		} else {
			return this.getRuleContext(i, ViewRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewGroup; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewGroup) {
			listener.enterViewGroup(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewGroup) {
			listener.exitViewGroup(this);
		}
	}
}


export class ViewGroupHeaderContext extends ParserRuleContext {
	public documentation(): DocumentationContext[];
	public documentation(i: number): DocumentationContext;
	public documentation(i?: number): DocumentationContext | DocumentationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DocumentationContext);
		} else {
			return this.getRuleContext(i, DocumentationContext);
		}
	}
	public nameInformation(): NameInformationContext[];
	public nameInformation(i: number): NameInformationContext;
	public nameInformation(i?: number): NameInformationContext | NameInformationContext[] {
		if (i === undefined) {
			return this.getRuleContexts(NameInformationContext);
		} else {
			return this.getRuleContext(i, NameInformationContext);
		}
	}
	public property(): PropertyContext[];
	public property(i: number): PropertyContext;
	public property(i?: number): PropertyContext | PropertyContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyContext);
		} else {
			return this.getRuleContext(i, PropertyContext);
		}
	}
	public reason(): ReasonContext[];
	public reason(i: number): ReasonContext;
	public reason(i?: number): ReasonContext | ReasonContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ReasonContext);
		} else {
			return this.getRuleContext(i, ReasonContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewGroupHeader; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewGroupHeader) {
			listener.enterViewGroupHeader(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewGroupHeader) {
			listener.exitViewGroupHeader(this);
		}
	}
}


export class ViewGroupNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewGroupNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewGroupNameCaseSensitive) {
			listener.enterViewGroupNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewGroupNameCaseSensitive) {
			listener.exitViewGroupNameCaseSensitive(this);
		}
	}
}


export class ViewGroupNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewGroupNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewGroupNameDef) {
			listener.enterViewGroupNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewGroupNameDef) {
			listener.exitViewGroupNameDef(this);
		}
	}
}


export class ViewGroupNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewGroupNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewGroupNameRef) {
			listener.enterViewGroupNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewGroupNameRef) {
			listener.exitViewGroupNameRef(this);
		}
	}
}


export class ViewGroupRefContext extends ParserRuleContext {
	public viewGroupNameRef(): ViewGroupNameRefContext {
		return this.getRuleContext(0, ViewGroupNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewGroupRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewGroupRef) {
			listener.enterViewGroupRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewGroupRef) {
			listener.exitViewGroupRef(this);
		}
	}
}


export class ViewNameCaseSensitiveContext extends ParserRuleContext {
	public booleanToken(): BooleanTokenContext {
		return this.getRuleContext(0, BooleanTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewNameCaseSensitive; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewNameCaseSensitive) {
			listener.enterViewNameCaseSensitive(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewNameCaseSensitive) {
			listener.exitViewNameCaseSensitive(this);
		}
	}
}


export class ViewNameDefContext extends ParserRuleContext {
	public nameDef(): NameDefContext {
		return this.getRuleContext(0, NameDefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewNameDef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewNameDef) {
			listener.enterViewNameDef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewNameDef) {
			listener.exitViewNameDef(this);
		}
	}
}


export class ViewNameDisplayContext extends ParserRuleContext {
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public displayNameOverride(): DisplayNameOverrideContext[];
	public displayNameOverride(i: number): DisplayNameOverrideContext;
	public displayNameOverride(i?: number): DisplayNameOverrideContext | DisplayNameOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayNameOverrideContext);
		} else {
			return this.getRuleContext(i, DisplayNameOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewNameDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewNameDisplay) {
			listener.enterViewNameDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewNameDisplay) {
			listener.exitViewNameDisplay(this);
		}
	}
}


export class ViewNameRefContext extends ParserRuleContext {
	public nameRef(): NameRefContext {
		return this.getRuleContext(0, NameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewNameRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewNameRef) {
			listener.enterViewNameRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewNameRef) {
			listener.exitViewNameRef(this);
		}
	}
}


export class ViewPropertyDisplayContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public display(): DisplayContext[];
	public display(i: number): DisplayContext;
	public display(i?: number): DisplayContext | DisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DisplayContext);
		} else {
			return this.getRuleContext(i, DisplayContext);
		}
	}
	public propertyNameDisplay(): PropertyNameDisplayContext[];
	public propertyNameDisplay(i: number): PropertyNameDisplayContext;
	public propertyNameDisplay(i?: number): PropertyNameDisplayContext | PropertyNameDisplayContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyNameDisplayContext);
		} else {
			return this.getRuleContext(i, PropertyNameDisplayContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewPropertyDisplay; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewPropertyDisplay) {
			listener.enterViewPropertyDisplay(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewPropertyDisplay) {
			listener.exitViewPropertyDisplay(this);
		}
	}
}


export class ViewPropertyOverrideContext extends ParserRuleContext {
	public propertyNameRef(): PropertyNameRefContext {
		return this.getRuleContext(0, PropertyNameRefContext);
	}
	public typedValue(): TypedValueContext | undefined {
		return this.tryGetRuleContext(0, TypedValueContext);
	}
	public untyped(): UntypedContext | undefined {
		return this.tryGetRuleContext(0, UntypedContext);
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public fixed(): FixedContext[];
	public fixed(i: number): FixedContext;
	public fixed(i?: number): FixedContext | FixedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(FixedContext);
		} else {
			return this.getRuleContext(i, FixedContext);
		}
	}
	public propertyOverride(): PropertyOverrideContext[];
	public propertyOverride(i: number): PropertyOverrideContext;
	public propertyOverride(i?: number): PropertyOverrideContext | PropertyOverrideContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PropertyOverrideContext);
		} else {
			return this.getRuleContext(i, PropertyOverrideContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewPropertyOverride; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewPropertyOverride) {
			listener.enterViewPropertyOverride(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewPropertyOverride) {
			listener.exitViewPropertyOverride(this);
		}
	}
}


export class ViewRefContext extends ParserRuleContext {
	public viewNameRef(): ViewNameRefContext {
		return this.getRuleContext(0, ViewNameRefContext);
	}
	public clusterRef(): ClusterRefContext | undefined {
		return this.tryGetRuleContext(0, ClusterRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_viewRef; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterViewRef) {
			listener.enterViewRef(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitViewRef) {
			listener.exitViewRef(this);
		}
	}
}


export class VisibleContext extends ParserRuleContext {
	public booleanValue(): BooleanValueContext {
		return this.getRuleContext(0, BooleanValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_visible; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterVisible) {
			listener.enterVisible(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitVisible) {
			listener.exitVisible(this);
		}
	}
}


export class VoltContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_volt; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterVolt) {
			listener.enterVolt(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitVolt) {
			listener.exitVolt(this);
		}
	}
}


export class VoltageMapContext extends ParserRuleContext {
	public voltageValue(): VoltageValueContext {
		return this.getRuleContext(0, VoltageValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_voltageMap; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterVoltageMap) {
			listener.enterVoltageMap(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitVoltageMap) {
			listener.exitVoltageMap(this);
		}
	}
}


export class VoltageValueContext extends ParserRuleContext {
	public miNoMaxValue(): MiNoMaxValueContext {
		return this.getRuleContext(0, MiNoMaxValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_voltageValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterVoltageValue) {
			listener.enterVoltageValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitVoltageValue) {
			listener.exitVoltageValue(this);
		}
	}
}


export class WattContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_watt; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterWatt) {
			listener.enterWatt(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitWatt) {
			listener.exitWatt(this);
		}
	}
}


export class WeakContext extends ParserRuleContext {
	public logicNameRef(): LogicNameRefContext {
		return this.getRuleContext(0, LogicNameRefContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_weak; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterWeak) {
			listener.enterWeak(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitWeak) {
			listener.exitWeak(this);
		}
	}
}


export class WeakJoinedContext extends ParserRuleContext {
	public interfaceJoined(): InterfaceJoinedContext[];
	public interfaceJoined(i: number): InterfaceJoinedContext;
	public interfaceJoined(i?: number): InterfaceJoinedContext | InterfaceJoinedContext[] {
		if (i === undefined) {
			return this.getRuleContexts(InterfaceJoinedContext);
		} else {
			return this.getRuleContext(i, InterfaceJoinedContext);
		}
	}
	public portRef(): PortRefContext[];
	public portRef(i: number): PortRefContext;
	public portRef(i?: number): PortRefContext | PortRefContext[] {
		if (i === undefined) {
			return this.getRuleContexts(PortRefContext);
		} else {
			return this.getRuleContext(i, PortRefContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_weakJoined; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterWeakJoined) {
			listener.enterWeakJoined(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitWeakJoined) {
			listener.exitWeakJoined(this);
		}
	}
}


export class WeberContext extends ParserRuleContext {
	public unitExponent(): UnitExponentContext {
		return this.getRuleContext(0, UnitExponentContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_weber; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterWeber) {
			listener.enterWeber(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitWeber) {
			listener.exitWeber(this);
		}
	}
}


export class WidePortContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_widePort; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterWidePort) {
			listener.enterWidePort(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitWidePort) {
			listener.exitWidePort(this);
		}
	}
}


export class WideWireContext extends ParserRuleContext {
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_wideWire; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterWideWire) {
			listener.enterWideWire(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitWideWire) {
			listener.exitWideWire(this);
		}
	}
}


export class WrittenContext extends ParserRuleContext {
	public timeStamp(): TimeStampContext {
		return this.getRuleContext(0, TimeStampContext);
	}
	public author(): AuthorContext[];
	public author(i: number): AuthorContext;
	public author(i?: number): AuthorContext | AuthorContext[] {
		if (i === undefined) {
			return this.getRuleContexts(AuthorContext);
		} else {
			return this.getRuleContext(i, AuthorContext);
		}
	}
	public comment(): CommentContext[];
	public comment(i: number): CommentContext;
	public comment(i?: number): CommentContext | CommentContext[] {
		if (i === undefined) {
			return this.getRuleContexts(CommentContext);
		} else {
			return this.getRuleContext(i, CommentContext);
		}
	}
	public dataOrigin(): DataOriginContext[];
	public dataOrigin(i: number): DataOriginContext;
	public dataOrigin(i?: number): DataOriginContext | DataOriginContext[] {
		if (i === undefined) {
			return this.getRuleContexts(DataOriginContext);
		} else {
			return this.getRuleContext(i, DataOriginContext);
		}
	}
	public program(): ProgramContext[];
	public program(i: number): ProgramContext;
	public program(i?: number): ProgramContext | ProgramContext[] {
		if (i === undefined) {
			return this.getRuleContexts(ProgramContext);
		} else {
			return this.getRuleContext(i, ProgramContext);
		}
	}
	public userData(): UserDataContext[];
	public userData(i: number): UserDataContext;
	public userData(i?: number): UserDataContext | UserDataContext[] {
		if (i === undefined) {
			return this.getRuleContexts(UserDataContext);
		} else {
			return this.getRuleContext(i, UserDataContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_written; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterWritten) {
			listener.enterWritten(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitWritten) {
			listener.exitWritten(this);
		}
	}
}


export class XCoordinateContext extends ParserRuleContext {
	public integerValue(): IntegerValueContext {
		return this.getRuleContext(0, IntegerValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_xCoordinate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterXCoordinate) {
			listener.enterXCoordinate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitXCoordinate) {
			listener.exitXCoordinate(this);
		}
	}
}


export class XNumberValueContext extends ParserRuleContext {
	public numberValue(): NumberValueContext {
		return this.getRuleContext(0, NumberValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_xNumberValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterXNumberValue) {
			listener.enterXNumberValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitXNumberValue) {
			listener.exitXNumberValue(this);
		}
	}
}


export class Xor_Context extends ParserRuleContext {
	public booleanExpression(): BooleanExpressionContext[];
	public booleanExpression(i: number): BooleanExpressionContext;
	public booleanExpression(i?: number): BooleanExpressionContext | BooleanExpressionContext[] {
		if (i === undefined) {
			return this.getRuleContexts(BooleanExpressionContext);
		} else {
			return this.getRuleContext(i, BooleanExpressionContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_xor_; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterXor_) {
			listener.enterXor_(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitXor_) {
			listener.exitXor_(this);
		}
	}
}


export class YCoordinateContext extends ParserRuleContext {
	public integerValue(): IntegerValueContext {
		return this.getRuleContext(0, IntegerValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_yCoordinate; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterYCoordinate) {
			listener.enterYCoordinate(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitYCoordinate) {
			listener.exitYCoordinate(this);
		}
	}
}


export class YearContext extends ParserRuleContext {
	public yearNumber(): YearNumberContext[];
	public yearNumber(i: number): YearNumberContext;
	public yearNumber(i?: number): YearNumberContext | YearNumberContext[] {
		if (i === undefined) {
			return this.getRuleContexts(YearNumberContext);
		} else {
			return this.getRuleContext(i, YearNumberContext);
		}
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_year; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterYear) {
			listener.enterYear(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitYear) {
			listener.exitYear(this);
		}
	}
}


export class YearNumberContext extends ParserRuleContext {
	public integerToken(): IntegerTokenContext {
		return this.getRuleContext(0, IntegerTokenContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_yearNumber; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterYearNumber) {
			listener.enterYearNumber(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitYearNumber) {
			listener.exitYearNumber(this);
		}
	}
}


export class YNumberValueContext extends ParserRuleContext {
	public numberValue(): NumberValueContext {
		return this.getRuleContext(0, NumberValueContext);
	}
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_yNumberValue; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterYNumberValue) {
			listener.enterYNumberValue(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitYNumberValue) {
			listener.exitYNumberValue(this);
		}
	}
}


export class IntegerTokenContext extends ParserRuleContext {
	public DECIMAL_LITERAL(): TerminalNode { return this.getToken(EDIF300Parser.DECIMAL_LITERAL, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_integerToken; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterIntegerToken) {
			listener.enterIntegerToken(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitIntegerToken) {
			listener.exitIntegerToken(this);
		}
	}
}


export class StringTokenContext extends ParserRuleContext {
	public STRING_LITERAL(): TerminalNode { return this.getToken(EDIF300Parser.STRING_LITERAL, 0); }
	constructor(parent: ParserRuleContext | undefined, invokingState: number) {
		super(parent, invokingState);
	}
	// @Override
	public get ruleIndex(): number { return EDIF300Parser.RULE_stringToken; }
	// @Override
	public enterRule(listener: EDIF300Listener): void {
		if (listener.enterStringToken) {
			listener.enterStringToken(this);
		}
	}
	// @Override
	public exitRule(listener: EDIF300Listener): void {
		if (listener.exitStringToken) {
			listener.exitStringToken(this);
		}
	}
}


