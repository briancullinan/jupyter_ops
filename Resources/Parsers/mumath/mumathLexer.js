"use strict";
// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/mumath/mumath.g4 by ANTLR 4.7.3-SNAPSHOT
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
var Lexer_1 = require("antlr4ts/Lexer");
var LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
var VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
var Utils = require("antlr4ts/misc/Utils");
var mumathLexer = /** @class */ (function (_super) {
    __extends(mumathLexer, _super);
    // tslint:enable:no-trailing-whitespace
    function mumathLexer(input) {
        var _this = _super.call(this, input) || this;
        _this._interp = new LexerATNSimulator_1.LexerATNSimulator(mumathLexer._ATN, _this);
        return _this;
    }
    Object.defineProperty(mumathLexer.prototype, "vocabulary", {
        // @Override
        // @NotNull
        get: function () {
            return mumathLexer.VOCABULARY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(mumathLexer.prototype, "grammarFileName", {
        // @Override
        get: function () { return "mumath.g4"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(mumathLexer.prototype, "ruleNames", {
        // @Override
        get: function () { return mumathLexer.ruleNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(mumathLexer.prototype, "serializedATN", {
        // @Override
        get: function () { return mumathLexer._serializedATN; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(mumathLexer.prototype, "channelNames", {
        // @Override
        get: function () { return mumathLexer.channelNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(mumathLexer.prototype, "modeNames", {
        // @Override
        get: function () { return mumathLexer.modeNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(mumathLexer, "_ATN", {
        get: function () {
            if (!mumathLexer.__ATN) {
                mumathLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(mumathLexer._serializedATN));
            }
            return mumathLexer.__ATN;
        },
        enumerable: true,
        configurable: true
    });
    mumathLexer.BLOCK = 1;
    mumathLexer.ENDBLOCK = 2;
    mumathLexer.FUNCTION = 3;
    mumathLexer.ENDFUN = 4;
    mumathLexer.EQF = 5;
    mumathLexer.LOOP = 6;
    mumathLexer.ENDLOOP = 7;
    mumathLexer.WHEN = 8;
    mumathLexer.EXIT = 9;
    mumathLexer.OR = 10;
    mumathLexer.AND = 11;
    mumathLexer.NOT = 12;
    mumathLexer.MOD = 13;
    mumathLexer.WS = 14;
    mumathLexer.COMMENT = 15;
    mumathLexer.EQUATION = 16;
    mumathLexer.QUOTE = 17;
    mumathLexer.PLUS = 18;
    mumathLexer.MINUS = 19;
    mumathLexer.STAR = 20;
    mumathLexer.SLASH = 21;
    mumathLexer.COMMA = 22;
    mumathLexer.SEMI = 23;
    mumathLexer.DOLLAR = 24;
    mumathLexer.COLON = 25;
    mumathLexer.EQC = 26;
    mumathLexer.NOT_EQUAL = 27;
    mumathLexer.LT = 28;
    mumathLexer.LE = 29;
    mumathLexer.GE = 30;
    mumathLexer.GT = 31;
    mumathLexer.LPAREN = 32;
    mumathLexer.RPAREN = 33;
    mumathLexer.POWER = 34;
    mumathLexer.ID = 35;
    mumathLexer.ARR = 36;
    mumathLexer.STRING = 37;
    mumathLexer.NUMBER = 38;
    // tslint:disable:no-trailing-whitespace
    mumathLexer.channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
    ];
    // tslint:disable:no-trailing-whitespace
    mumathLexer.modeNames = [
        "DEFAULT_MODE",
    ];
    mumathLexer.ruleNames = [
        "BLOCK", "ENDBLOCK", "FUNCTION", "ENDFUN", "EQF", "LOOP", "ENDLOOP", "WHEN",
        "EXIT", "OR", "AND", "NOT", "MOD", "WS", "COMMENT", "EQUATION", "QUOTE",
        "PLUS", "MINUS", "STAR", "SLASH", "COMMA", "SEMI", "DOLLAR", "COLON",
        "EQC", "NOT_EQUAL", "LT", "LE", "GE", "GT", "LPAREN", "RPAREN", "POWER",
        "ID", "ARR", "STRING", "NUMBER",
    ];
    mumathLexer._LITERAL_NAMES = [
        undefined, "'BLOCK'", "'ENDBLOCK'", "'FUNCTION'", "'ENDFUN'", "'EQ'",
        "'LOOP'", "'ENDLOOP'", "'WHEN'", "'EXIT'", "'OR'", "'AND'", "'NOT'", "'mod'",
        undefined, undefined, "'=='", "'''", "'+'", "'-'", "'*'", "'/'", "','",
        "';'", "'$'", "':'", "'='", "'<>'", "'<'", "'<='", "'>='", "'>'", "'('",
        "')'", "'^'",
    ];
    mumathLexer._SYMBOLIC_NAMES = [
        undefined, "BLOCK", "ENDBLOCK", "FUNCTION", "ENDFUN", "EQF", "LOOP", "ENDLOOP",
        "WHEN", "EXIT", "OR", "AND", "NOT", "MOD", "WS", "COMMENT", "EQUATION",
        "QUOTE", "PLUS", "MINUS", "STAR", "SLASH", "COMMA", "SEMI", "DOLLAR",
        "COLON", "EQC", "NOT_EQUAL", "LT", "LE", "GE", "GT", "LPAREN", "RPAREN",
        "POWER", "ID", "ARR", "STRING", "NUMBER",
    ];
    mumathLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(mumathLexer._LITERAL_NAMES, mumathLexer._SYMBOLIC_NAMES, []);
    mumathLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02(\xED\b\x01\x04" +
        "\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
        "\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
        "\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
        "\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
        "\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
        "\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
        "#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x03\x02\x03\x02\x03\x02\x03\x02" +
        "\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
        "\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04" +
        "\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05" +
        "\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b" +
        "\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03" +
        "\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03" +
        "\f\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03" +
        "\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x07\x10\x9F\n\x10\f\x10\x0E" +
        "\x10\xA2\v\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11" +
        "\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16" +
        "\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A" +
        "\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E" +
        "\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#" +
        "\x03#\x03$\x03$\x07$\xD4\n$\f$\x0E$\xD7\v$\x03$\x05$\xDA\n$\x03%\x03%" +
        "\x03%\x03%\x03&\x03&\x07&\xE2\n&\f&\x0E&\xE5\v&\x03&\x03&\x03\'\x06\'" +
        "\xEA\n\'\r\'\x0E\'\xEB\x02\x02\x02(\x03\x02\x03\x05\x02\x04\x07\x02\x05" +
        "\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
        "\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13" +
        "%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02" +
        "\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02" +
        "$G\x02%I\x02&K\x02\'M\x02(\x03\x02\x07\x05\x02\v\f\x0F\x0F\"\"\x04\x02" +
        "\f\f\'\'\x05\x02%%B\\}}\x06\x02%%2;C\\\x7F\x7F\x03\x02$$\x02\xF2\x02\x03" +
        "\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t" +
        "\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03" +
        "\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03" +
        "\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03" +
        "\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03" +
        "\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02" +
        "\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02" +
        "/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02" +
        "\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02" +
        "\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03" +
        "\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02" +
        "\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x03O\x03\x02\x02\x02\x05" +
        "U\x03\x02\x02\x02\x07^\x03\x02\x02\x02\tg\x03\x02\x02\x02\vn\x03\x02\x02" +
        "\x02\rq\x03\x02\x02\x02\x0Fv\x03\x02\x02\x02\x11~\x03\x02\x02\x02\x13" +
        "\x83\x03\x02\x02\x02\x15\x88\x03\x02\x02\x02\x17\x8B\x03\x02\x02\x02\x19" +
        "\x8F\x03\x02\x02\x02\x1B\x93\x03\x02\x02\x02\x1D\x97\x03\x02\x02\x02\x1F" +
        "\x9B\x03\x02\x02\x02!\xA7\x03\x02\x02\x02#\xAA\x03\x02\x02\x02%\xAC\x03" +
        "\x02\x02\x02\'\xAE\x03\x02\x02\x02)\xB0\x03\x02\x02\x02+\xB2\x03\x02\x02" +
        "\x02-\xB4\x03\x02\x02\x02/\xB6\x03\x02\x02\x021\xB8\x03\x02\x02\x023\xBA" +
        "\x03\x02\x02\x025\xBC\x03\x02\x02\x027\xBE\x03\x02\x02\x029\xC1\x03\x02" +
        "\x02\x02;\xC3\x03\x02\x02\x02=\xC6\x03\x02\x02\x02?\xC9\x03\x02\x02\x02" +
        "A\xCB\x03\x02\x02\x02C\xCD\x03\x02\x02\x02E\xCF\x03\x02\x02\x02G\xD1\x03" +
        "\x02\x02\x02I\xDB\x03\x02\x02\x02K\xDF\x03\x02\x02\x02M\xE9\x03\x02\x02" +
        "\x02OP\x07D\x02\x02PQ\x07N\x02\x02QR\x07Q\x02\x02RS\x07E\x02\x02ST\x07" +
        "M\x02\x02T\x04\x03\x02\x02\x02UV\x07G\x02\x02VW\x07P\x02\x02WX\x07F\x02" +
        "\x02XY\x07D\x02\x02YZ\x07N\x02\x02Z[\x07Q\x02\x02[\\\x07E\x02\x02\\]\x07" +
        "M\x02\x02]\x06\x03\x02\x02\x02^_\x07H\x02\x02_`\x07W\x02\x02`a\x07P\x02" +
        "\x02ab\x07E\x02\x02bc\x07V\x02\x02cd\x07K\x02\x02de\x07Q\x02\x02ef\x07" +
        "P\x02\x02f\b\x03\x02\x02\x02gh\x07G\x02\x02hi\x07P\x02\x02ij\x07F\x02" +
        "\x02jk\x07H\x02\x02kl\x07W\x02\x02lm\x07P\x02\x02m\n\x03\x02\x02\x02n" +
        "o\x07G\x02\x02op\x07S\x02\x02p\f\x03\x02\x02\x02qr\x07N\x02\x02rs\x07" +
        "Q\x02\x02st\x07Q\x02\x02tu\x07R\x02\x02u\x0E\x03\x02\x02\x02vw\x07G\x02" +
        "\x02wx\x07P\x02\x02xy\x07F\x02\x02yz\x07N\x02\x02z{\x07Q\x02\x02{|\x07" +
        "Q\x02\x02|}\x07R\x02\x02}\x10\x03\x02\x02\x02~\x7F\x07Y\x02\x02\x7F\x80" +
        "\x07J\x02\x02\x80\x81\x07G\x02\x02\x81\x82\x07P\x02\x02\x82\x12\x03\x02" +
        "\x02\x02\x83\x84\x07G\x02\x02\x84\x85\x07Z\x02\x02\x85\x86\x07K\x02\x02" +
        "\x86\x87\x07V\x02\x02\x87\x14\x03\x02\x02\x02\x88\x89\x07Q\x02\x02\x89" +
        "\x8A\x07T\x02\x02\x8A\x16\x03\x02\x02\x02\x8B\x8C\x07C\x02\x02\x8C\x8D" +
        "\x07P\x02\x02\x8D\x8E\x07F\x02\x02\x8E\x18\x03\x02\x02\x02\x8F\x90\x07" +
        "P\x02\x02\x90\x91\x07Q\x02\x02\x91\x92\x07V\x02\x02\x92\x1A\x03\x02\x02" +
        "\x02\x93\x94\x07o\x02\x02\x94\x95\x07q\x02\x02\x95\x96\x07f\x02\x02\x96" +
        "\x1C\x03\x02\x02\x02\x97\x98\t\x02\x02\x02\x98\x99\x03\x02\x02\x02\x99" +
        "\x9A\b\x0F\x02\x02\x9A\x1E\x03\x02\x02\x02\x9B\xA0\x07\'\x02\x02\x9C\x9F" +
        "\x07\f\x02\x02\x9D\x9F\n\x03\x02\x02\x9E\x9C\x03\x02\x02\x02\x9E\x9D\x03" +
        "\x02\x02\x02\x9F\xA2\x03\x02\x02\x02\xA0\x9E\x03\x02\x02\x02\xA0\xA1\x03" +
        "\x02\x02\x02\xA1\xA3\x03\x02\x02\x02\xA2\xA0\x03\x02\x02\x02\xA3\xA4\x07" +
        "\'\x02\x02\xA4\xA5\x03\x02\x02\x02\xA5\xA6\b\x10\x02\x02\xA6 \x03\x02" +
        "\x02\x02\xA7\xA8\x07?\x02\x02\xA8\xA9\x07?\x02\x02\xA9\"\x03\x02\x02\x02" +
        "\xAA\xAB\x07)\x02\x02\xAB$\x03\x02\x02\x02\xAC\xAD\x07-\x02\x02\xAD&\x03" +
        "\x02\x02\x02\xAE\xAF\x07/\x02\x02\xAF(\x03\x02\x02\x02\xB0\xB1\x07,\x02" +
        "\x02\xB1*\x03\x02\x02\x02\xB2\xB3\x071\x02\x02\xB3,\x03\x02\x02\x02\xB4" +
        "\xB5\x07.\x02\x02\xB5.\x03\x02\x02\x02\xB6\xB7\x07=\x02\x02\xB70\x03\x02" +
        "\x02\x02\xB8\xB9\x07&\x02\x02\xB92\x03\x02\x02\x02\xBA\xBB\x07<\x02\x02" +
        "\xBB4\x03\x02\x02\x02\xBC\xBD\x07?\x02\x02\xBD6\x03\x02\x02\x02\xBE\xBF" +
        "\x07>\x02\x02\xBF\xC0\x07@\x02\x02\xC08\x03\x02\x02\x02\xC1\xC2\x07>\x02" +
        "\x02\xC2:\x03\x02\x02\x02\xC3\xC4\x07>\x02\x02\xC4\xC5\x07?\x02\x02\xC5" +
        "<\x03\x02\x02\x02\xC6\xC7\x07@\x02\x02\xC7\xC8\x07?\x02\x02\xC8>\x03\x02" +
        "\x02\x02\xC9\xCA\x07@\x02\x02\xCA@\x03\x02\x02\x02\xCB\xCC\x07*\x02\x02" +
        "\xCCB\x03\x02\x02\x02\xCD\xCE\x07+\x02\x02\xCED\x03\x02\x02\x02\xCF\xD0" +
        "\x07`\x02\x02\xD0F\x03\x02\x02\x02\xD1\xD5\t\x04\x02\x02\xD2\xD4\t\x05" +
        "\x02\x02\xD3\xD2\x03\x02\x02\x02\xD4\xD7\x03\x02\x02\x02\xD5\xD3\x03\x02" +
        "\x02\x02\xD5\xD6\x03\x02\x02\x02\xD6\xD9\x03\x02\x02\x02\xD7\xD5\x03\x02" +
        "\x02\x02\xD8\xDA\x05I%\x02\xD9\xD8\x03\x02\x02\x02\xD9\xDA\x03\x02\x02" +
        "\x02\xDAH\x03\x02\x02\x02\xDB\xDC\x07]\x02\x02\xDC\xDD\x05M\'\x02\xDD" +
        "\xDE\x07_\x02\x02\xDEJ\x03\x02\x02\x02\xDF\xE3\x07$\x02\x02\xE0\xE2\n" +
        "\x06\x02\x02\xE1\xE0\x03\x02\x02\x02\xE2\xE5\x03\x02\x02\x02\xE3\xE1\x03" +
        "\x02\x02\x02\xE3\xE4\x03\x02\x02\x02\xE4\xE6\x03\x02\x02\x02\xE5\xE3\x03" +
        "\x02\x02\x02\xE6\xE7\x07$\x02\x02\xE7L\x03\x02\x02\x02\xE8\xEA\x042;\x02" +
        "\xE9\xE8\x03\x02\x02\x02\xEA\xEB\x03\x02\x02\x02\xEB\xE9\x03\x02\x02\x02" +
        "\xEB\xEC\x03\x02\x02\x02\xECN\x03\x02\x02\x02\t\x02\x9E\xA0\xD5\xD9\xE3" +
        "\xEB\x03\b\x02\x02";
    return mumathLexer;
}(Lexer_1.Lexer));
exports.mumathLexer = mumathLexer;
