"use strict";
// Generated from /Users/briancullinan/jupyter_ops/Resources/Parsers/sgf/sgf.g4 by ANTLR 4.7.3-SNAPSHOT
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
var Lexer_1 = require("antlr4ts/Lexer");
var LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
var VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
var Utils = require("antlr4ts/misc/Utils");
var sgfLexer = /** @class */ (function (_super) {
    __extends(sgfLexer, _super);
    // tslint:enable:no-trailing-whitespace
    function sgfLexer(input) {
        var _this = _super.call(this, input) || this;
        _this._interp = new LexerATNSimulator_1.LexerATNSimulator(sgfLexer._ATN, _this);
        return _this;
    }
    Object.defineProperty(sgfLexer.prototype, "vocabulary", {
        // @Override
        // @NotNull
        get: function () {
            return sgfLexer.VOCABULARY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(sgfLexer.prototype, "grammarFileName", {
        // @Override
        get: function () { return "sgf.g4"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(sgfLexer.prototype, "ruleNames", {
        // @Override
        get: function () { return sgfLexer.ruleNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(sgfLexer.prototype, "serializedATN", {
        // @Override
        get: function () { return sgfLexer._serializedATN; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(sgfLexer.prototype, "channelNames", {
        // @Override
        get: function () { return sgfLexer.channelNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(sgfLexer.prototype, "modeNames", {
        // @Override
        get: function () { return sgfLexer.modeNames; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(sgfLexer, "_ATN", {
        get: function () {
            if (!sgfLexer.__ATN) {
                sgfLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(sgfLexer._serializedATN));
            }
            return sgfLexer.__ATN;
        },
        enumerable: true,
        configurable: true
    });
    sgfLexer.T__0 = 1;
    sgfLexer.T__1 = 2;
    sgfLexer.T__2 = 3;
    sgfLexer.T__3 = 4;
    sgfLexer.T__4 = 5;
    sgfLexer.T__5 = 6;
    sgfLexer.T__6 = 7;
    sgfLexer.T__7 = 8;
    sgfLexer.T__8 = 9;
    sgfLexer.T__9 = 10;
    sgfLexer.T__10 = 11;
    sgfLexer.T__11 = 12;
    sgfLexer.T__12 = 13;
    sgfLexer.T__13 = 14;
    sgfLexer.T__14 = 15;
    sgfLexer.T__15 = 16;
    sgfLexer.T__16 = 17;
    sgfLexer.T__17 = 18;
    sgfLexer.T__18 = 19;
    sgfLexer.T__19 = 20;
    sgfLexer.T__20 = 21;
    sgfLexer.T__21 = 22;
    sgfLexer.T__22 = 23;
    sgfLexer.T__23 = 24;
    sgfLexer.T__24 = 25;
    sgfLexer.T__25 = 26;
    sgfLexer.T__26 = 27;
    sgfLexer.T__27 = 28;
    sgfLexer.T__28 = 29;
    sgfLexer.T__29 = 30;
    sgfLexer.T__30 = 31;
    sgfLexer.T__31 = 32;
    sgfLexer.T__32 = 33;
    sgfLexer.T__33 = 34;
    sgfLexer.T__34 = 35;
    sgfLexer.T__35 = 36;
    sgfLexer.T__36 = 37;
    sgfLexer.T__37 = 38;
    sgfLexer.T__38 = 39;
    sgfLexer.T__39 = 40;
    sgfLexer.T__40 = 41;
    sgfLexer.T__41 = 42;
    sgfLexer.T__42 = 43;
    sgfLexer.T__43 = 44;
    sgfLexer.T__44 = 45;
    sgfLexer.T__45 = 46;
    sgfLexer.T__46 = 47;
    sgfLexer.T__47 = 48;
    sgfLexer.T__48 = 49;
    sgfLexer.T__49 = 50;
    sgfLexer.T__50 = 51;
    sgfLexer.T__51 = 52;
    sgfLexer.T__52 = 53;
    sgfLexer.T__53 = 54;
    sgfLexer.T__54 = 55;
    sgfLexer.T__55 = 56;
    sgfLexer.T__56 = 57;
    sgfLexer.T__57 = 58;
    sgfLexer.T__58 = 59;
    sgfLexer.T__59 = 60;
    sgfLexer.T__60 = 61;
    sgfLexer.T__61 = 62;
    sgfLexer.T__62 = 63;
    sgfLexer.T__63 = 64;
    sgfLexer.T__64 = 65;
    sgfLexer.T__65 = 66;
    sgfLexer.T__66 = 67;
    sgfLexer.T__67 = 68;
    sgfLexer.T__68 = 69;
    sgfLexer.T__69 = 70;
    sgfLexer.T__70 = 71;
    sgfLexer.T__71 = 72;
    sgfLexer.T__72 = 73;
    sgfLexer.COLOR = 74;
    sgfLexer.UCLETTER = 75;
    sgfLexer.NONE = 76;
    sgfLexer.TEXT = 77;
    sgfLexer.WS = 78;
    // tslint:disable:no-trailing-whitespace
    sgfLexer.channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
    ];
    // tslint:disable:no-trailing-whitespace
    sgfLexer.modeNames = [
        "DEFAULT_MODE",
    ];
    sgfLexer.ruleNames = [
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
        "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
        "T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
        "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
        "T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40",
        "T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48",
        "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56",
        "T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "T__63", "T__64",
        "T__65", "T__66", "T__67", "T__68", "T__69", "T__70", "T__71", "T__72",
        "COLOR", "UCLETTER", "NONE", "TEXT", "WS",
    ];
    sgfLexer._LITERAL_NAMES = [
        undefined, "'('", "')'", "';'", "'KO'", "'MN'", "'AB'", "'AE'", "'AW'",
        "'PL'", "'C'", "'DM'", "'GB'", "'GW'", "'HO'", "'N'", "'UC'", "'V'", "'BM'",
        "'DO'", "'IT'", "'TE'", "'AR'", "'CR'", "'DD'", "'LB'", "'LN'", "'MA'",
        "'SL'", "'SQ'", "'TR'", "'AP'", "'CA'", "'FF'", "'GM'", "'ST'", "'SZ'",
        "'AN'", "'BR'", "'BT'", "'CP'", "'DT'", "'EV'", "'GN'", "'GC'", "'ON'",
        "'OT'", "'PB'", "'PC'", "'PW'", "'RE'", "'RO'", "'RU'", "'SO'", "'TM'",
        "'US'", "'WR'", "'WT'", "'BL'", "'OB'", "'OW'", "'WL'", "'FG'", "'PM'",
        "'VW'", "'AS'", "'IP'", "'IY'", "'SE'", "'SU'", "'HA'", "'KM'", "'TB'",
        "'TW'", undefined, undefined, "'[]'",
    ];
    sgfLexer._SYMBOLIC_NAMES = [
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, undefined, undefined, undefined,
        undefined, undefined, undefined, undefined, "COLOR", "UCLETTER", "NONE",
        "TEXT", "WS",
    ];
    sgfLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(sgfLexer._LITERAL_NAMES, sgfLexer._SYMBOLIC_NAMES, []);
    sgfLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02P\u0191\b\x01" +
        "\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
        "\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
        "\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
        "\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
        "\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
        "\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
        "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
        "+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
        "4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
        "=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
        "F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04" +
        "O\tO\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
        "\x05\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b" +
        "\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03" +
        "\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10" +
        "\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13" +
        "\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16" +
        "\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19" +
        "\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C" +
        "\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F" +
        "\x03 \x03 \x03 \x03!\x03!\x03!\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03$\x03" +
        "$\x03$\x03%\x03%\x03%\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03(\x03(\x03(" +
        "\x03)\x03)\x03)\x03*\x03*\x03*\x03+\x03+\x03+\x03,\x03,\x03,\x03-\x03" +
        "-\x03-\x03.\x03.\x03.\x03/\x03/\x03/\x030\x030\x030\x031\x031\x031\x03" +
        "2\x032\x032\x033\x033\x033\x034\x034\x034\x035\x035\x035\x036\x036\x03" +
        "6\x037\x037\x037\x038\x038\x038\x039\x039\x039\x03:\x03:\x03:\x03;\x03" +
        ";\x03;\x03<\x03<\x03<\x03=\x03=\x03=\x03>\x03>\x03>\x03?\x03?\x03?\x03" +
        "@\x03@\x03@\x03A\x03A\x03A\x03B\x03B\x03B\x03C\x03C\x03C\x03D\x03D\x03" +
        "D\x03E\x03E\x03E\x03F\x03F\x03F\x03G\x03G\x03G\x03H\x03H\x03H\x03I\x03" +
        "I\x03I\x03J\x03J\x03J\x03K\x03K\x03L\x03L\x06L\u0179\nL\rL\x0EL\u017A" +
        "\x03M\x03M\x03M\x03N\x03N\x03N\x03N\x07N\u0184\nN\fN\x0EN\u0187\vN\x03" +
        "N\x03N\x03O\x06O\u018C\nO\rO\x0EO\u018D\x03O\x03O\x03\u0185\x02\x02P\x03" +
        "\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t" +
        "\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02" +
        "\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17" +
        "-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F" +
        "=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S" +
        "\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x02" +
        "6k\x027m\x028o\x029q\x02:s\x02;u\x02<w\x02=y\x02>{\x02?}\x02@\x7F\x02" +
        "A\x81\x02B\x83\x02C\x85\x02D\x87\x02E\x89\x02F\x8B\x02G\x8D\x02H\x8F\x02" +
        "I\x91\x02J\x93\x02K\x95\x02L\x97\x02M\x99\x02N\x9B\x02O\x9D\x02P\x03\x02" +
        "\x04\x04\x02DDYY\x05\x02\v\f\x0F\x0F\"\"\x02\u0194\x02\x03\x03\x02\x02" +
        "\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
        "\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
        "\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
        "\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
        "\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02" +
        "\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)" +
        "\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
        "\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
        "\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
        "\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02" +
        "\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02" +
        "K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02" +
        "\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02" +
        "\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03" +
        "\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02" +
        "\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02" +
        "m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03\x02" +
        "\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02\x02" +
        "\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02\x02" +
        "\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02\x02\x85\x03\x02\x02\x02\x02" +
        "\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02\x02\x8B\x03\x02\x02\x02\x02" +
        "\x8D\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02\x02\x91\x03\x02\x02\x02\x02" +
        "\x93\x03\x02\x02\x02\x02\x95\x03\x02\x02\x02\x02\x97\x03\x02\x02\x02\x02" +
        "\x99\x03\x02\x02\x02\x02\x9B\x03\x02\x02\x02\x02\x9D\x03\x02\x02\x02\x03" +
        "\x9F\x03\x02\x02\x02\x05\xA1\x03\x02\x02\x02\x07\xA3\x03\x02\x02\x02\t" +
        "\xA5\x03\x02\x02\x02\v\xA8\x03\x02\x02\x02\r\xAB\x03\x02\x02\x02\x0F\xAE" +
        "\x03\x02\x02\x02\x11\xB1\x03\x02\x02\x02\x13\xB4\x03\x02\x02\x02\x15\xB7" +
        "\x03\x02\x02\x02\x17\xB9\x03\x02\x02\x02\x19\xBC\x03\x02\x02\x02\x1B\xBF" +
        "\x03\x02\x02\x02\x1D\xC2\x03\x02\x02\x02\x1F\xC5\x03\x02\x02\x02!\xC7" +
        "\x03\x02\x02\x02#\xCA\x03\x02\x02\x02%\xCC\x03\x02\x02\x02\'\xCF\x03\x02" +
        "\x02\x02)\xD2\x03\x02\x02\x02+\xD5\x03\x02\x02\x02-\xD8\x03\x02\x02\x02" +
        "/\xDB\x03\x02\x02\x021\xDE\x03\x02\x02\x023\xE1\x03\x02\x02\x025\xE4\x03" +
        "\x02\x02\x027\xE7\x03\x02\x02\x029\xEA\x03\x02\x02\x02;\xED\x03\x02\x02" +
        "\x02=\xF0\x03\x02\x02\x02?\xF3\x03\x02\x02\x02A\xF6\x03\x02\x02\x02C\xF9" +
        "\x03\x02\x02\x02E\xFC\x03\x02\x02\x02G\xFF\x03\x02\x02\x02I\u0102\x03" +
        "\x02\x02\x02K\u0105\x03\x02\x02\x02M\u0108\x03\x02\x02\x02O\u010B\x03" +
        "\x02\x02\x02Q\u010E\x03\x02\x02\x02S\u0111\x03\x02\x02\x02U\u0114\x03" +
        "\x02\x02\x02W\u0117\x03\x02\x02\x02Y\u011A\x03\x02\x02\x02[\u011D\x03" +
        "\x02\x02\x02]\u0120\x03\x02\x02\x02_\u0123\x03\x02\x02\x02a\u0126\x03" +
        "\x02\x02\x02c\u0129\x03\x02\x02\x02e\u012C\x03\x02\x02\x02g\u012F\x03" +
        "\x02\x02\x02i\u0132\x03\x02\x02\x02k\u0135\x03\x02\x02\x02m\u0138\x03" +
        "\x02\x02\x02o\u013B\x03\x02\x02\x02q\u013E\x03\x02\x02\x02s\u0141\x03" +
        "\x02\x02\x02u\u0144\x03\x02\x02\x02w\u0147\x03\x02\x02\x02y\u014A\x03" +
        "\x02\x02\x02{\u014D\x03\x02\x02\x02}\u0150\x03\x02\x02\x02\x7F\u0153\x03" +
        "\x02\x02\x02\x81\u0156\x03\x02\x02\x02\x83\u0159\x03\x02\x02\x02\x85\u015C" +
        "\x03\x02\x02\x02\x87\u015F\x03\x02\x02\x02\x89\u0162\x03\x02\x02\x02\x8B" +
        "\u0165\x03\x02\x02\x02\x8D\u0168\x03\x02\x02\x02\x8F\u016B\x03\x02\x02" +
        "\x02\x91\u016E\x03\x02\x02\x02\x93\u0171\x03\x02\x02\x02\x95\u0174\x03" +
        "\x02\x02\x02\x97\u0176\x03\x02\x02\x02\x99\u017C\x03\x02\x02\x02\x9B\u017F" +
        "\x03\x02\x02\x02\x9D\u018B\x03\x02\x02\x02\x9F\xA0\x07*\x02\x02\xA0\x04" +
        "\x03\x02\x02\x02\xA1\xA2\x07+\x02\x02\xA2\x06\x03\x02\x02\x02\xA3\xA4" +
        "\x07=\x02\x02\xA4\b\x03\x02\x02\x02\xA5\xA6\x07M\x02\x02\xA6\xA7\x07Q" +
        "\x02\x02\xA7\n\x03\x02\x02\x02\xA8\xA9\x07O\x02\x02\xA9\xAA\x07P\x02\x02" +
        "\xAA\f\x03\x02\x02\x02\xAB\xAC\x07C\x02\x02\xAC\xAD\x07D\x02\x02\xAD\x0E" +
        "\x03\x02\x02\x02\xAE\xAF\x07C\x02\x02\xAF\xB0\x07G\x02\x02\xB0\x10\x03" +
        "\x02\x02\x02\xB1\xB2\x07C\x02\x02\xB2\xB3\x07Y\x02\x02\xB3\x12\x03\x02" +
        "\x02\x02\xB4\xB5\x07R\x02\x02\xB5\xB6\x07N\x02\x02\xB6\x14\x03\x02\x02" +
        "\x02\xB7\xB8\x07E\x02\x02\xB8\x16\x03\x02\x02\x02\xB9\xBA\x07F\x02\x02" +
        "\xBA\xBB\x07O\x02\x02\xBB\x18\x03\x02\x02\x02\xBC\xBD\x07I\x02\x02\xBD" +
        "\xBE\x07D\x02\x02\xBE\x1A\x03\x02\x02\x02\xBF\xC0\x07I\x02\x02\xC0\xC1" +
        "\x07Y\x02\x02\xC1\x1C\x03\x02\x02\x02\xC2\xC3\x07J\x02\x02\xC3\xC4\x07" +
        "Q\x02\x02\xC4\x1E\x03\x02\x02\x02\xC5\xC6\x07P\x02\x02\xC6 \x03\x02\x02" +
        "\x02\xC7\xC8\x07W\x02\x02\xC8\xC9\x07E\x02\x02\xC9\"\x03\x02\x02\x02\xCA" +
        "\xCB\x07X\x02\x02\xCB$\x03\x02\x02\x02\xCC\xCD\x07D\x02\x02\xCD\xCE\x07" +
        "O\x02\x02\xCE&\x03\x02\x02\x02\xCF\xD0\x07F\x02\x02\xD0\xD1\x07Q\x02\x02" +
        "\xD1(\x03\x02\x02\x02\xD2\xD3\x07K\x02\x02\xD3\xD4\x07V\x02\x02\xD4*\x03" +
        "\x02\x02\x02\xD5\xD6\x07V\x02\x02\xD6\xD7\x07G\x02\x02\xD7,\x03\x02\x02" +
        "\x02\xD8\xD9\x07C\x02\x02\xD9\xDA\x07T\x02\x02\xDA.\x03\x02\x02\x02\xDB" +
        "\xDC\x07E\x02\x02\xDC\xDD\x07T\x02\x02\xDD0\x03\x02\x02\x02\xDE\xDF\x07" +
        "F\x02\x02\xDF\xE0\x07F\x02\x02\xE02\x03\x02\x02\x02\xE1\xE2\x07N\x02\x02" +
        "\xE2\xE3\x07D\x02\x02\xE34\x03\x02\x02\x02\xE4\xE5\x07N\x02\x02\xE5\xE6" +
        "\x07P\x02\x02\xE66\x03\x02\x02\x02\xE7\xE8\x07O\x02\x02\xE8\xE9\x07C\x02" +
        "\x02\xE98\x03\x02\x02\x02\xEA\xEB\x07U\x02\x02\xEB\xEC\x07N\x02\x02\xEC" +
        ":\x03\x02\x02\x02\xED\xEE\x07U\x02\x02\xEE\xEF\x07S\x02\x02\xEF<\x03\x02" +
        "\x02\x02\xF0\xF1\x07V\x02\x02\xF1\xF2\x07T\x02\x02\xF2>\x03\x02\x02\x02" +
        "\xF3\xF4\x07C\x02\x02\xF4\xF5\x07R\x02\x02\xF5@\x03\x02\x02\x02\xF6\xF7" +
        "\x07E\x02\x02\xF7\xF8\x07C\x02\x02\xF8B\x03\x02\x02\x02\xF9\xFA\x07H\x02" +
        "\x02\xFA\xFB\x07H\x02\x02\xFBD\x03\x02\x02\x02\xFC\xFD\x07I\x02\x02\xFD" +
        "\xFE\x07O\x02\x02\xFEF\x03\x02\x02\x02\xFF\u0100\x07U\x02\x02\u0100\u0101" +
        "\x07V\x02\x02\u0101H\x03\x02\x02\x02\u0102\u0103\x07U\x02\x02\u0103\u0104" +
        "\x07\\\x02\x02\u0104J\x03\x02\x02\x02\u0105\u0106\x07C\x02\x02\u0106\u0107" +
        "\x07P\x02\x02\u0107L\x03\x02\x02\x02\u0108\u0109\x07D\x02\x02\u0109\u010A" +
        "\x07T\x02\x02\u010AN\x03\x02\x02\x02\u010B\u010C\x07D\x02\x02\u010C\u010D" +
        "\x07V\x02\x02\u010DP\x03\x02\x02\x02\u010E\u010F\x07E\x02\x02\u010F\u0110" +
        "\x07R\x02\x02\u0110R\x03\x02\x02\x02\u0111\u0112\x07F\x02\x02\u0112\u0113" +
        "\x07V\x02\x02\u0113T\x03\x02\x02\x02\u0114\u0115\x07G\x02\x02\u0115\u0116" +
        "\x07X\x02\x02\u0116V\x03\x02\x02\x02\u0117\u0118\x07I\x02\x02\u0118\u0119" +
        "\x07P\x02\x02\u0119X\x03\x02\x02\x02\u011A\u011B\x07I\x02\x02\u011B\u011C" +
        "\x07E\x02\x02\u011CZ\x03\x02\x02\x02\u011D\u011E\x07Q\x02\x02\u011E\u011F" +
        "\x07P\x02\x02\u011F\\\x03\x02\x02\x02\u0120\u0121\x07Q\x02\x02\u0121\u0122" +
        "\x07V\x02\x02\u0122^\x03\x02\x02\x02\u0123\u0124\x07R\x02\x02\u0124\u0125" +
        "\x07D\x02\x02\u0125`\x03\x02\x02\x02\u0126\u0127\x07R\x02\x02\u0127\u0128" +
        "\x07E\x02\x02\u0128b\x03\x02\x02\x02\u0129\u012A\x07R\x02\x02\u012A\u012B" +
        "\x07Y\x02\x02\u012Bd\x03\x02\x02\x02\u012C\u012D\x07T\x02\x02\u012D\u012E" +
        "\x07G\x02\x02\u012Ef\x03\x02\x02\x02\u012F\u0130\x07T\x02\x02\u0130\u0131" +
        "\x07Q\x02\x02\u0131h\x03\x02\x02\x02\u0132\u0133\x07T\x02\x02\u0133\u0134" +
        "\x07W\x02\x02\u0134j\x03\x02\x02\x02\u0135\u0136\x07U\x02\x02\u0136\u0137" +
        "\x07Q\x02\x02\u0137l\x03\x02\x02\x02\u0138\u0139\x07V\x02\x02\u0139\u013A" +
        "\x07O\x02\x02\u013An\x03\x02\x02\x02\u013B\u013C\x07W\x02\x02\u013C\u013D" +
        "\x07U\x02\x02\u013Dp\x03\x02\x02\x02\u013E\u013F\x07Y\x02\x02\u013F\u0140" +
        "\x07T\x02\x02\u0140r\x03\x02\x02\x02\u0141\u0142\x07Y\x02\x02\u0142\u0143" +
        "\x07V\x02\x02\u0143t\x03\x02\x02\x02\u0144\u0145\x07D\x02\x02\u0145\u0146" +
        "\x07N\x02\x02\u0146v\x03\x02\x02\x02\u0147\u0148\x07Q\x02\x02\u0148\u0149" +
        "\x07D\x02\x02\u0149x\x03\x02\x02\x02\u014A\u014B\x07Q\x02\x02\u014B\u014C" +
        "\x07Y\x02\x02\u014Cz\x03\x02\x02\x02\u014D\u014E\x07Y\x02\x02\u014E\u014F" +
        "\x07N\x02\x02\u014F|\x03\x02\x02\x02\u0150\u0151\x07H\x02\x02\u0151\u0152" +
        "\x07I\x02\x02\u0152~\x03\x02\x02\x02\u0153\u0154\x07R\x02\x02\u0154\u0155" +
        "\x07O\x02\x02\u0155\x80\x03\x02\x02\x02\u0156\u0157\x07X\x02\x02\u0157" +
        "\u0158\x07Y\x02\x02\u0158\x82\x03\x02\x02\x02\u0159\u015A\x07C\x02\x02" +
        "\u015A\u015B\x07U\x02\x02\u015B\x84\x03\x02\x02\x02\u015C\u015D\x07K\x02" +
        "\x02\u015D\u015E\x07R\x02\x02\u015E\x86\x03\x02\x02\x02\u015F\u0160\x07" +
        "K\x02\x02\u0160\u0161\x07[\x02\x02\u0161\x88\x03\x02\x02\x02\u0162\u0163" +
        "\x07U\x02\x02\u0163\u0164\x07G\x02\x02\u0164\x8A\x03\x02\x02\x02\u0165" +
        "\u0166\x07U\x02\x02\u0166\u0167\x07W\x02\x02\u0167\x8C\x03\x02\x02\x02" +
        "\u0168\u0169\x07J\x02\x02\u0169\u016A\x07C\x02\x02\u016A\x8E\x03\x02\x02" +
        "\x02\u016B\u016C\x07M\x02\x02\u016C\u016D\x07O\x02\x02\u016D\x90\x03\x02" +
        "\x02\x02\u016E\u016F\x07V\x02\x02\u016F\u0170\x07D\x02\x02\u0170\x92\x03" +
        "\x02\x02\x02\u0171\u0172\x07V\x02\x02\u0172\u0173\x07Y\x02\x02\u0173\x94" +
        "\x03\x02\x02\x02\u0174\u0175\t\x02\x02\x02\u0175\x96\x03\x02\x02\x02\u0176" +
        "\u0178\x04C\\\x02\u0177\u0179\x04C\\\x02\u0178\u0177\x03\x02\x02\x02\u0179" +
        "\u017A\x03\x02\x02\x02\u017A\u0178\x03\x02\x02\x02\u017A\u017B\x03\x02" +
        "\x02\x02\u017B\x98\x03\x02\x02\x02\u017C\u017D\x07]\x02\x02\u017D\u017E" +
        "\x07_\x02\x02\u017E\x9A\x03\x02\x02\x02\u017F\u0185\x07]\x02\x02\u0180" +
        "\u0181\x07^\x02\x02\u0181\u0184\x07_\x02\x02\u0182\u0184\v\x02\x02\x02" +
        "\u0183\u0180\x03\x02\x02\x02\u0183\u0182\x03\x02\x02\x02\u0184\u0187\x03" +
        "\x02\x02\x02\u0185\u0186\x03\x02\x02\x02\u0185\u0183\x03\x02\x02\x02\u0186" +
        "\u0188\x03\x02\x02\x02\u0187\u0185\x03\x02\x02\x02\u0188\u0189\x07_\x02" +
        "\x02\u0189\x9C\x03\x02\x02\x02\u018A\u018C\t\x03\x02\x02\u018B\u018A\x03" +
        "\x02\x02\x02\u018C\u018D\x03\x02\x02\x02\u018D\u018B\x03\x02\x02\x02\u018D" +
        "\u018E\x03\x02\x02\x02\u018E\u018F\x03\x02\x02\x02\u018F\u0190\bO\x02" +
        "\x02\u0190\x9E\x03\x02\x02\x02\x07\x02\u017A\u0183\u0185\u018D\x03\b\x02" +
        "\x02";
    return sgfLexer;
}(Lexer_1.Lexer));
exports.sgfLexer = sgfLexer;
