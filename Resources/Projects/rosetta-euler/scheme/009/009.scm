(define (pythagorean-triple-with-sum sum)
  (let find-triple ((m 2) (n 1))
    (if (and (and (< m sum) (< n (- sum 1))) (> m n))
      (let ((a (- (* m m) (* n n))) (b (* 2 m n)) (c (+ (* m m) (* n n))))
        (if (and (= (+ a b c) sum) (= (+ (* a a) (* b b)) (* c c)))
          (list a b c)
          (find-triple m (+ n 1))
        )
      )
      (if (and (< m sum) (< n (- sum 1)))
        (find-triple (+ m 1) 1)
        '()
      )
    )
  )
)

(display (apply * (pythagorean-triple-with-sum 1000)))

(exit)
